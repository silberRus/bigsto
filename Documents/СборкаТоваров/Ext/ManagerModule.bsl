#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.УстановкаЦенНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
	Обработки.СправочноеРазмещениеНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.РасходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТовары(КомандыСозданияНаОсновании);
	
	Документы.ПоручениеЭкспедитору.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Сборка (разборка) товаров".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СборкаТоваров) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СборкаТоваров.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СборкаТоваров);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСборкуРазборку";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Добавляет команду создания документа "Сборка (разборка) товаров".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОснованииЗаказа(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СборкаТоваров) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.СборкаТоваровСоздатьНаОснованииЗаказа";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьНаОснованииЗаказа";
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СборкаТоваров);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСборкуРазборку";
		КомандаСоздатьНаОсновании.МножественныйВыбор = Истина;
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОстаткиТоваровОрганизаций(КомандыОтчетов);
	
	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСостояниеВыполненияВнутреннихРаспоряжений(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.Порядок = 1;
	КонецЕсли;
	
КонецПроцедуры

#Область СменаСтатуса

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
// 		МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
// 		НовыйСтатус - Строка - Имя нового статуса
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
// 		Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыСборокТоваров[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка                КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус)                  КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                   КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен              КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления       КАК ПометкаУдаления,
	|	ИСТИНА                                  КАК ЗаписьПроведением
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции// СформироватьЗапросПроверкиПриСменеСтатуса();

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
// 		ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
// 		НовыйСтатус - Перечисление - Новый статус
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
// 		Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Для документа "СборкаТоваров" отсутствуют дополнительные проверки
	
КонецФункции

#КонецОбласти

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Статус,ХозяйственнаяОперация,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//  Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// 
// Возвращаемое значение:
//  Структура - содержит ключи:
//    * Шапка - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//    * ТЧ    - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	ИспользоватьОрдернуюСхемуПриПриемке = СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Объект.Склад, Объект.Дата);
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	Шапка = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	Шапка.ПолноеИмяОбъекта = "Документ.СборкаТоваров";
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров Тогда
		Шапка.ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры
											И (Не ИспользоватьОрдернуюСхемуПриПриемке
											Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям)
											И Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
											
		Шапка.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям
												И Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
		Шапка.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаСобранныхКомплектов);
	Иначе
		Шапка.ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
		Шапка.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		Шапка.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки);
	КонецЕсли;
	Шапка.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	
	Шапка.ПоляСвязи.Добавить("Назначение");
	
	Шапка.ЭтоНакладная = Истина;
	Шапка.ПланированиеОтгрузки = Объект.Статус = Перечисления.СтатусыСборокТоваров.ВРаботе;
	Шапка.ПланированиеОтбора   = Объект.Статус = Перечисления.СтатусыСборокТоваров.ВРаботе;
	Шапка.ФактОтбора           = Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров Тогда
		Шапка.РегистрироватьСерии = Истина;
	Иначе
		Шапка.РегистрироватьСерии = НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(Шапка);
	КонецЕсли;
	
	Шапка.ТоварВШапке = Истина;
	Шапка.Дата = Объект.Дата;
	Шапка.ИменаПолейДляОпределенияРаспоряжения.Добавить("ЗаказНаСборку");
	Шапка.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	
	ТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ТЧ.ПолноеИмяОбъекта = "Документ.СборкаТоваров";
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров Тогда
		ТЧ.ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
		ТЧ.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		ТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки);
	Иначе
		ТЧ.ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры
											И (Не ИспользоватьОрдернуюСхемуПриПриемке
											Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям)
											И Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
											
		ТЧ.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям
											И Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
		ТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаКомплектующихПослеРазборки);
	КонецЕсли;	
	
	ТЧ.ПоляСвязи.Добавить("Назначение");
	
	ТЧ.ЭтоНакладная = Истина;
	ТЧ.ПланированиеОтгрузки = Объект.Статус = Объект.Статус = Перечисления.СтатусыСборокТоваров.ВРаботе;
	ТЧ.ПланированиеОтбора   = Объект.Статус = Объект.Статус = Перечисления.СтатусыСборокТоваров.ВРаботе;
	ТЧ.ФактОтбора           = Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров Тогда
		ТЧ.РегистрироватьСерии = НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(ТЧ);
	Иначе
		ТЧ.РегистрироватьСерии = Истина;
	КонецЕсли;
	
	ТЧ.ТоварВШапке = Ложь;
	ТЧ.Дата = Объект.Дата;
	ТЧ.ИменаПолейДляОпределенияРаспоряжения.Добавить("ЗаказНаСборку");
	ТЧ.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	
	ПараметрыУказанияСерий = Новый Структура;
	
	ПараметрыУказанияСерий.Вставить("Шапка",Шапка);
	ПараметрыУказанияСерий.Вставить("ТЧ",ТЧ);
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ТоварВШапке Тогда
		
		Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ПриемкаСобранныхКомплектов) <> Неопределено Тогда
			
			ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийШапкиСборки();
			
		Иначе
			
			ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийШапкиРазборки();
			
		КонецЕсли;
		
	Иначе
		
		Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки) <> Неопределено Тогда
			
			ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийТЧСборки();
		
		Иначе
			
			ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийТЧРазборки();
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеПоЗаказу

// Формирует структуру для создания сборки товаров по одному или нескольким заказам на сборку
// Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
//  МассивСсылок - Массив - заказы на перемещение, по которым необходимо ввести накладную
//   РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов
//
// Возвращаемое значение:
//  Булево - Ложь, если в переданных заказах отличаются реквизиты шапки
//
Функция ДанныеЗаполненияНакладной(МассивСсылок, СвойстваЗаказов = Неопределено) Экспорт
	
	ТекстыЗапроса = Новый СписокЗначений();
	ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаОтгрузить(),       "ТаблицаЕстьОтгрузить");
	ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаРеквизитовШапки(), "ТаблицаРеквизитыШапки");
	
	СначалаОрдера = Константы.ПорядокОформленияНакладныхРасходныхОрдеров.Получить()
		= Перечисления.ПорядокОформленияНакладныхРасходныхОрдеров.СначалаОрдера;
	
	Если СначалаОрдера Тогда
		ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаНаличияОрдеров(), "ТаблицаЕстьОрдера");
	КонецЕсли;
	
	Таблицы = Новый Структура();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, Таблицы);
	
	РеквизитыШапки = Новый Структура("ХозяйственнаяОперация, Организация, Склад, 
		|Сделка, Подразделение, ВариантКомплектации, Статус, НаправлениеДеятельности");
	ЗаполнитьЗначенияСвойств(РеквизитыШапки, Таблицы.ТаблицаРеквизитыШапки[0]);
	РеквизитыШапки.Вставить("ЗаказПроведен", Таблицы.ТаблицаРеквизитыШапки[0].Проведен);
	
	РеквизитыШапки.Вставить("ЕстьОтгрузить", Таблицы.ТаблицаЕстьОтгрузить.Количество() > 0);
	РеквизитыШапки.Вставить("ЕстьОрдера",    Не СначалаОрдера Или Таблицы.ТаблицаЕстьОрдера.Количество() > 0);
	
	Возврат РеквизитыШапки;
	
КонецФункции

// Проверяет возможность создания сборки на основании структуры данных для заполнения сборки.
//
//  Параметры:
//   РеквизитыШапки - Структура.
//
//  Возвращаемое значение:
//   Булево - Истина, если одну сборку создать возможно, иначе - ложь.
//
Функция ПроверитьДанныеЗаполненияНакладной(РеквизитыШапки) Экспорт
	
	ТекстыОшибок = Новый Массив();
	Если Не РеквизитыШапки.ЕстьОтгрузить Тогда
		ТекстыОшибок.Добавить(ОбеспечениеСервер.ТекстОшибкиНетТоваровДоступныхДляОтгрузки());
	КонецЕсли;
	
	Если РеквизитыШапки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров Тогда
		ТекстПредупреждения = НСтр("ru='Нет данных для заполнения документа, так как разборка по заказу еще не начата.'");
	Иначе
		ТекстПредупреждения = НСтр("ru='Нет данных для заполнения документа, так как сборка по заказу еще не начата.'");
	КонецЕсли;
	
	Результат = Новый Структура("ЕстьОшибки, ТекстОшибки, ЕстьПредупреждения, ТекстПредупреждения");
	Результат.ЕстьОшибки          = ТекстыОшибок.Количество() > 0;
	Результат.ТекстОшибки         = ТекстыОшибок;
	Результат.ЕстьПредупреждения  = Не РеквизитыШапки.ЕстьОрдера;
	Результат.ТекстПредупреждения = ТекстПредупреждения;
	
	Возврат Результат;
	
КонецФункции

// Возвращает результат запроса для заполнения накладной по заказам/ордерам
//
// Параметры:
//  ДанныеОтбора   - Структура - поля, по которым будут отобраны остатки заказов для заполнения документа
//  КонтекстВызова - Строка - определяет контекст вызова процедуры:
//                             "СозданиеНаОсновании" - создание на основании из формы заказа, из списка заказов и из спсика распоряжений к оформлению,
//                             "Заполнение" по заказам из формы накладной при взведении флага "по заказу",
//                             "Подбор" подбор по заказам/ордерам из формы накладной,
//                             "Перезаполнение" по отгрузке и приемке из спсика распоряжений к оформлению.
//
// Возвращаемое значение:
//  Результат - Выборка, Структура - структура содержащая таблицы результатов выполнения запроса.
//
Функция РезультатЗапросаПоОстаткамЗаказов(ДанныеОтбора, КонтекстВызова) Экспорт
	
	// Описание всех возможных параметров запроса.
	ПараметрыЗапросов = Новый Структура("ОтобратьПоЗаказу, МассивЗаказов,
	                                    |Организация, Подразделение, Склад, ХозяйственнаяОперация,
	                                    |Регистратор, ТоварыНакладной");
	ПараметрыЗапросов.Вставить("УчитыватьСобирается", Ложь);
	ПараметрыЗапросов.Вставить("ЗаполнятьПоСобирается", Ложь);
	
	СписокЗапросов   = Новый СписокЗначений();
	ИменаПодзапросов = Новый Массив();
	
	// Обработка параметров вызова метода.
	Если КонтекстВызова = "СозданиеНаОсновании" Тогда
		
		ПараметрыЗапросаДляСозданияНаОсновании(ПараметрыЗапросов, СписокЗапросов, ИменаПодзапросов, ДанныеОтбора);
		
	ИначеЕсли КонтекстВызова = "Подбор" Тогда
		
		ПараметрыЗапросаДляПодбора(ПараметрыЗапросов, СписокЗапросов, ИменаПодзапросов, ДанныеОтбора);
		
	ИначеЕсли КонтекстВызова = "ПерезаполнениеПоОрдерам" Тогда
		
		ПараметрыЗапросаДляПерезаполнения(ПараметрыЗапросов, СписокЗапросов, ИменаПодзапросов, ДанныеОтбора);
		
	КонецЕсли;
	
	// Описание всех возможных текстов запросов.
	ТекстыЗапросов = Новый Соответствие();
	ТекстыЗапросов.Вставить("ВтЗаказыОтбор",                        ТекстЗапросаВременнойТаблицыРаспоряжений());
	ТекстыЗапросов.Вставить("ВтНакладная",                          ТекстЗапросаВременнойТаблицыНакладной());
	ТекстыЗапросов.Вставить("ТаблицаСобраноРазобраноКомплектующие", ТекстЗапросаСбораноРазобраноКомплектующие());
	ТекстыЗапросов.Вставить("ТаблицаСобраноРазобраноКомплект",      ТекстЗапросаСбораноРазобраноКомплект());
	ТекстыЗапросов.Вставить("ТаблицаКомплект",                      ТекстЗапросаОстаткиРегистраЗаказыИСторноДокументаКомплект());
	ТекстыЗапросов.Вставить("ТаблицаСерии",                         ТекстЗапросаОстаткиСерийРазбираемогоКомплектаИСторноДокумента());
	ТекстыЗапросов.Вставить("ТаблицаСерииРазборано",                ТекстЗапросаРазбораноСерии());
	
	// Используемые подзапросы для формирования "таблицы оформить" должны быть обернуты методом ТекстЗапросаОбъединения(...).
	ТекстыПодзапросов = Новый Соответствие();
	ТекстыПодзапросов.Вставить("БлокРегистрЗаказыКомплектующие",          ТекстЗапросаОстаткиРегистраЗаказыКомплектующие());
	ТекстыПодзапросов.Вставить("БлокСторноНакладнаяКомплектующие",        ТекстЗапросаСторноДвиженийНакладнаяКомплектующие());
	ТекстыПодзапросов.Вставить("БлокРегистрЗаказыКомплект",               ТекстЗапросаОстаткиРегистраЗаказыКомплект());
	ТекстыПодзапросов.Вставить("БлокСторноНакладнаяКомплект",             ТекстЗапросаСторноДвиженийНакладнаяКомплект());
	ТекстыПодзапросов.Вставить("БлокНовыеДвиженияНакладнаяКомплектующие", ТекстЗапросаНовыеДвиженияНакладнаяКомплектующие());
	
	Для Каждого Элемент Из СписокЗапросов Цикл
		Элемент.Представление = ТекстыЗапросов[Элемент.Значение];
	КонецЦикла;
	
	Элемент = СписокЗапросов.НайтиПоЗначению("ТаблицаКомплектующие");
	Если Элемент <> Неопределено Тогда
		Элемент.Представление = ТекстЗапросаОбъединения(ИменаПодзапросов, ТекстыПодзапросов);
	КонецЕсли;
	
	// Инициализация запроса.
	Запрос = Новый Запрос();
	
	Для Каждого Параметр Из ПараметрыЗапросов Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	Для Каждого Элемент Из СписокЗапросов Цикл
		Запрос.Текст = Запрос.Текст + Элемент.Представление;
	КонецЦикла;
	
	// Выполнение запроса, возврат результата.
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураРезультата = Новый Структура();
	Для Каждого Элемент Из СписокЗапросов Цикл
		СтруктураРезультата.Вставить(Элемент.Значение, РезультатЗапроса[СписокЗапросов.Индекс(Элемент)].Выгрузить());
	КонецЦикла;
	
	Возврат СтруктураРезультата;
	
КонецФункции

// Проверяет наличие расходных ордеров по распоряжению.
//
// Параметры:
//  Распоряжения - ДокументСсылка - массив распоряжений-заказов.
//
// Возвращаемое значение:
//  Булево - Истина, если есть ордера, Ложь - если нет ордеров.
//
Функция ЕстьОрдерПоРаспоряжению(Распоряжения) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.ОстаткиИОбороты(, , , ,
		|	ДокументОтгрузки В (&Заказы)
		|	И Склад В(
		|		ВЫБРАТЬ
		|			СпрСклады.Ссылка КАК Склад
		|		ИЗ
		|			Справочник.Склады КАК СпрСклады
		|		ГДЕ
		|			СпрСклады.ИспользоватьОрдернуюСхемуПриОтгрузке
		|			И СпрСклады.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)) КАК Таблица
		|ГДЕ
		|	Таблица.КОтгрузкеРасход + Таблица.СобраноПриход > 0
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.ОстаткиИОбороты(, , , ,
		|	ДокументПоступления В (&Заказы)
		|	И Склад В(
		|		ВЫБРАТЬ
		|			СпрСклады.Ссылка КАК Склад
		|		ИЗ
		|			Справочник.Склады КАК СпрСклады
		|		ГДЕ
		|			СпрСклады.ИспользоватьОрдернуюСхемуПриПоступлении
		|			И СпрСклады.ДатаНачалаОрдернойСхемыПриПоступлении <= &НачалоТекущегоДня)) КАК Таблица
		|ГДЕ
		|	Таблица.КОформлениюОрдеровРасход > 0";
	
	Запрос.УстановитьПараметр("Заказы", Распоряжения);
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	УстановитьПривилегированныйРежим(Истина);
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#Область РаспоряжениеНаОтгрузку

// Возвращает значение распоряжения на поступление или отгрузку.
//
// Параметры:
//  ЗначенияПолейДляОпределенияРаспоряжения	 - Структура - состав полей определяется значением
//  поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
// 
// Возвращаемое значение:
//  ДокументСсылка - распоряжение на поступление или отгрузку
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	Если ЗначениеЗаполнено(ЗначенияПолейДляОпределенияРаспоряжения.ЗаказНаСборку) Тогда
		Возврат ЗначенияПолейДляОпределенияРаспоряжения.ЗаказНаСборку;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область Прочее

// Функция определяет реквизиты выбранного перемещения товаров.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.СборкаТоваров - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - реквизиты сборки товаров
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация
	|ИЗ
	|	Документ.СборкаТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация",
		Дата,
		Организация,);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Осуществляет инициализацию структуры состояния выполнения документа
// 
// Возвращаемое значение:
//  Структура - содержит следующие ключи:
//     * ВыводитьТаблицыОтгрузка     - Число - 
//     * ВыводитьТаблицыПоступление  - Число - 
//     * ЭтоНакладная                - Булево - 
//     * ТекстТоварУслугаОтгрузка    - Строка - 
//     * ТекстТоварУслугаПоступление - Строка - 
//     * СтруктураДопЗапросов        - Структура - содержит следующие ключи:
//        ** ТекстЗапросаВТТоварыРаспоряжениеНакладнаяОтгружено   - Строка - 
//        ** ТекстЗапросаВТТоварыПоступление                      - Строка - 
//        ** ТекстЗапросаВТТоварыРаспоряженияПоступлениеНакладная - Строка - 
//
Функция СтруктураСостояниеВыполненияДокумента() Экспорт
	
	СтруктураСостояние = Отчеты.СостояниеВыполненияДокументов.ИнициализироватьСтруктуруСостояниеВыполненияДокумента();
	СтруктураСостояние.Вставить("ВыводитьТаблицыОтгрузка", 1);
	СтруктураСостояние.Вставить("ВыводитьТаблицыПоступление", 2);
	СтруктураСостояние.Вставить("ЭтоНакладная", Истина);
	СтруктураСостояние.Вставить("ТекстТоварУслугаОтгрузка", НСтр("ru = 'Товар'"));
	СтруктураСостояние.Вставить("ТекстТоварУслугаПоступление", НСтр("ru = 'Товар'"));
	
	ВТТоварыРаспоряжениеНакладнаяОтгружено = ВременнаяТаблицаТоварыРаспоряжениеНакладнаяОтгруженоДляОтчетаСостояниеВыполнения();
	ВТТоварыПоступление = ВременнаяТаблицаТоварыПоступлениеДляОтчетаСостояниеВыполнения();
	ВТТоварыРаспоряженияПоступлениеНакладная = ВременнаяТаблицаТоварыРаспоряженияПоступлениеНакладнаяДляОтчетаСостояниеВыполнения();
	
	СтруктураДопЗапросов = Новый Структура();
	СтруктураДопЗапросов.Вставить("ТекстЗапросаВТТоварыРаспоряжениеНакладнаяОтгружено",   ВТТоварыРаспоряжениеНакладнаяОтгружено);
	СтруктураДопЗапросов.Вставить("ТекстЗапросаВТТоварыПоступление",                      ВТТоварыПоступление);
	СтруктураДопЗапросов.Вставить("ТекстЗапросаВТТоварыРаспоряженияПоступлениеНакладная", ВТТоварыРаспоряженияПоступлениеНакладная);
	СтруктураСостояние.Вставить("СтруктураДопЗапросов", СтруктураДопЗапросов);
	
	Возврат СтруктураСостояние;
	
КонецФункции

#КонецОбласти

#Область Заполнение

// Возвращает структуру необходимую для дальнейшего использования при заполнении документа.
//
// Возвращаемое значение:
//   Структура - структура параметров заполнения документа
//
Функция ПараметрыЗаполненияДокумента() Экспорт
	
	ПараметрыЗаполнения = Новый Структура();
	
	ПараметрыЗаполнения.Вставить("МассивЗаказов",         Неопределено);
	ПараметрыЗаполнения.Вставить("ФормаОткрыта",                Ложь);
	ПараметрыЗаполнения.Вставить("ЗаполнятьПоОрдеру",           Ложь);
	ПараметрыЗаполнения.Вставить("ПоЗаказуНаСборку",            Ложь);
	
	Ресурсы = Новый Массив(2);
	Ресурсы[0] = "Комплект";
	Ресурсы[1] = "Комплектующие";
	ПараметрыЗаполнения.Вставить("Ресурсы", Ресурсы);
	
	ПараметрыЗаполнения.Вставить("РеквизитыШапки",              Неопределено);
	ПараметрыЗаполнения.Вставить("Склад",                       Справочники.Склады.ПустаяСсылка());
	ПараметрыЗаполнения.Вставить("ХозяйственнаяОперация",       Перечисления.ХозяйственныеОперации.ПустаяСсылка());
	
	ПараметрыЗаполнения.Вставить("ИмяДокумента",                "СборкаТоваров");
	ПараметрыЗаполнения.Вставить("ИмяРегистраЗаказ",            "ЗаказыНаСборку");
	ПараметрыЗаполнения.Вставить("ИмяПоляЗаказ",                "ЗаказНаСборку");
	
	ПараметрыЗаполнения.Вставить("КлючевыеПоля",                "Номенклатура, Характеристика, Серия, Назначение");
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Производит инициализацию структуры параметров заполнения по реквизитам шапки и по заказам
//
// Параметры:
//  ПараметрыЗаполнения	 - Структура - Параметры по умолчанию получаемые в методе ПараметрыЗаполненияДокумента()
//  РеквизитыШапки		 - Структура - Содержит ключи на основании которых будет происходить заполнение
//  МассивЗаказов		 - Массив - Ссылки на заказы по которым будет происходить заполнение
//
Процедура ИнициализироватьПараметрыЗаполнения(ПараметрыЗаполнения, РеквизитыШапки, МассивЗаказов) Экспорт
	
	ПараметрыЗаполнения.МассивЗаказов	= МассивЗаказов;
	
	Для каждого Заказ Из ПараметрыЗаполнения.МассивЗаказов Цикл
		Если ЗначениеЗаполнено(Заказ) и ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
			ПараметрыЗаполнения.ПоЗаказуНаСборку = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыЗаполнения.РеквизитыШапки			= РеквизитыШапки;
	ПараметрыЗаполнения.Склад					= РеквизитыШапки.Склад;
	ПараметрыЗаполнения.ХозяйственнаяОперация	= РеквизитыШапки.ХозяйственнаяОперация;
	
КонецПроцедуры

// Возвращает таблицу Товары
//
// Параметры:
//  Накладная - Ссылка - ссылка на накладную ТЧ Товары которой необходимо вернуть
//  ПоШапке   - Булево - выборка из ТЧ Товары, либо шапки документа
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Табличная часть документа сборки товаров
//
Функция ДанныеТаблицыТоварыДокумента(Накладная, ПоШапке = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПоШапке Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	0 Как НомерСтроки,
		|	ЕСТЬNULL(СборкаТоваровСерии.Количество, СборкаТоваров.Количество)         КАК Количество,
		|	ЕСТЬNULL(СборкаТоваровСерии.Номенклатура, СборкаТоваров.Номенклатура)     КАК Номенклатура,
		|	ЕСТЬNULL(СборкаТоваровСерии.Характеристика, СборкаТоваров.Характеристика) КАК Характеристика,
		|	ЕСТЬNULL(СборкаТоваровСерии.Назначение, СборкаТоваров.Назначение)         КАК Назначение,
		|	ЕСТЬNULL(СборкаТоваровСерии.Серия, СборкаТоваров.Серия)                   КАК Серия,
		|	СборкаТоваров.Упаковка                                                    КАК Упаковка,
		|	СборкаТоваровСерии.НомерСтроки                                            КАК ИдентификаторСтроки,
		|	СборкаТоваров.СтатусУказанияСерий                                         КАК СтатусУказанияСерий,
		|	СборкаТоваров.АналитикаУчетаНоменклатуры                                  КАК АналитикаУчетаНоменклатуры,
		|	ВЫБОР КОГДА СборкаТоваров.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|		ТОГДА СборкаТоваров.Ссылка
		|		ИНАЧЕ СборкаТоваров.ЗаказНаСборку
		|	КОНЕЦ                                                                     КАК ЗаказНаСборку,
		|	1                                                                         КАК КодСтроки
		|ИЗ
		|	Документ.СборкаТоваров КАК СборкаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Серии КАК СборкаТоваровСерии
		|		ПО (СборкаТоваровСерии.Ссылка = СборкаТоваров.Ссылка)
		|ГДЕ
		|	СборкаТоваров.Ссылка = &Ссылка";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СборкаТоваровТовары.НомерСтроки                КАК НомерСтроки,
		|	СборкаТоваровТовары.Номенклатура               КАК Номенклатура,
		|	СборкаТоваровТовары.Характеристика             КАК Характеристика,
		|	СборкаТоваровТовары.Назначение                 КАК Назначение,
		|	СборкаТоваровТовары.Упаковка                   КАК Упаковка,
		|	СборкаТоваровТовары.КоличествоУпаковок         КАК КоличествоУпаковок,
		|	СборкаТоваровТовары.Количество                 КАК Количество,
		|	СборкаТоваровТовары.ДоляСтоимости              КАК ДоляСтоимости,
		|	СборкаТоваровТовары.КодСтроки                  КАК КодСтроки,
		|	СборкаТоваровТовары.СтатусУказанияСерий        КАК СтатусУказанияСерий,
		|	СборкаТоваровТовары.Серия                      КАК Серия,
		|	СборкаТоваровТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СборкаТоваровТовары.ИдентификаторСтроки        КАК ИдентификаторСтроки,
		|	ВЫБОР КОГДА СборкаТоваровТовары.Ссылка.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|		ТОГДА СборкаТоваровТовары.Ссылка
		|		ИНАЧЕ СборкаТоваровТовары.Ссылка.ЗаказНаСборку
		|	КОНЕЦ                                          КАК ЗаказНаСборку
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК СборкаТоваровТовары
		|ГДЕ
		|	СборкаТоваровТовары.Ссылка = &Ссылка";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", Накладная);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

// Процедура заполняет поля объекта
//
// Параметры:
//  Объект				 - ДокументОбъект.СборкаТоваров	 - объект для заполнения
//  ПараметрыЗаполнения	 - Структура					 - структура содержащая ключ РеквизитыШапки (источник данных)
//  МассивЗаказов		 - Массив						 - массив заказов на сборку
//
Процедура ЗаполнитьШапкуДокументаПоЗаказу(Объект, ПараметрыЗаполнения, МассивЗаказов) Экспорт
	
	ЗаполнитьЗначенияСвойств(Объект, ПараметрыЗаполнения.РеквизитыШапки);
	
	Дата = ЗаказыСервер.ПолучитьМинимальнуюДатуОтгрузкиЗаказа(МассивЗаказов, ПараметрыЗаполнения.ИмяРегистраЗаказ, 
		ПараметрыЗаполнения.ИмяПоляЗаказ);
	
КонецПроцедуры

// Процедура пересчитывает поле КоличествоУпаковок и другие зависимые поля
//
// Параметры:
//  Товары				 - ДанныеФормыКоллекция - Табличная часть "Товары"
//  ПараметрыЗаполнения	 - Структура - 
//
Процедура ОбновитьЗависимыеРеквизитыТабличнойЧасти(Товары, ПараметрыЗаполнения) Экспорт
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	
	Для Каждого Строка Из Товары Цикл
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Строка, СтруктураДействий, Неопределено);
	КонецЦикла;
	
КонецПроцедуры

// Производит заполнение переданного параметра Таблица по заказам и складским ордерам
//
// Параметры:
//  Товары				 - ТаблицаЗначений - Таблица Товары для заполнения
//  Регистратор			 - ДокументСсылка.СборкаТоваров - Ссылка на текущую накладную
//  ПараметрыЗаполнения	 - Структура - Параметры по умолчанию определены в методе ПараметрыЗаполненияДокумента()
//
Процедура ЗаполнитьПоЗаказамОрдерам(Товары, Регистратор, ПараметрыЗаполнения) Экспорт
	
	НакладнаяЯвляетсяРаспоряжением = ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(ПараметрыЗаполнения.РеквизитыШапки.ВариантПриемкиТоваров);
	
	ТекстРазделителя = НакладныеСервер.ТекстРазделителяЗапросов();
	
	Для каждого Ресурс Из ПараметрыЗаполнения.Ресурсы Цикл
	
		ПоРасходнымОрдерам = ?(Ресурс = "Комплект",
			ПараметрыЗаполнения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров,
			ПараметрыЗаполнения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров);
	
		// Если не нужно заполнять по ордеру, передаем пустые параметры запроса - по ордерам вернется пустая таблица
		Если ПараметрыЗаполнения.ЗаполнятьПоОрдеру Тогда
			РаспоряженияДляОрдеров = ПараметрыЗаполнения.МассивЗаказов;
			РегистраторДляОрдеров  = Регистратор;
		Иначе
			РаспоряженияДляОрдеров = Неопределено;
			РегистраторДляОрдеров  = Неопределено;
		КонецЕсли;
		
		// Заказы
		
		Отбор = Новый Структура();
		Отбор.Вставить("ЗаказНаСборку", "Распоряжения");
		
		ТекстЗапросаРегистраЗаказы = РегистрыНакопления.ЗаказыНаСборку.ТекстЗапросаОстатки(
			"ВтДанныеУчета",
			Отбор,
			"КОформлению <> 0");
			
		Отбор = Новый Структура();
		Отбор.Вставить("Ссылка", "Распоряжения");
		
		ТекстЗапросаЗаказ = Документы.ЗаказНаСборку.ТекстЗапросаТоварыДокумента(Отбор, Ресурс);
		
		ТекстЗапроса = ТекстЗапросаРегистраЗаказы
						+ ТекстРазделителя
						+ ТекстЗапросаЗаказ;
		
		Запрос = Новый Запрос();
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Распоряжения", ПараметрыЗаполнения.МассивЗаказов);
		Запрос.УстановитьПараметр("Регистратор",  Регистратор);
		
		ТаблицаЗаказы = Запрос.Выполнить().Выгрузить();
		
		ТаблицаЗаказы.Колонки.КОформлению.Имя = "КоличествоВЗаказе";
		ТаблицаЗаказы.Колонки.Добавить("ИндексНабора");
		ТаблицаЗаказы.ЗаполнитьЗначения(?(Ресурс = "Комплект", 1, 0), "ИндексНабора");
		
		// Ордера
		Запрос = Новый Запрос();
		
		// Сборка по шапке или разборка по товарам - приходные ордера, иначе - расходные
		Если ПоРасходнымОрдерам Тогда 
			ТекстЗапросаОсталосьОформить = РегистрыНакопления.ТоварыКОтгрузке.ТекстЗапросаОсталосьОформить();
		Иначе
			ТекстЗапросаОсталосьОформить = РегистрыНакопления.ТоварыКПоступлению.ТекстЗапросаОсталосьОформитьПоОрдерам();
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапросаОсталосьОформить;
		
		Запрос.УстановитьПараметр("Распоряжения",  РаспоряженияДляОрдеров);
		Запрос.УстановитьПараметр("Регистратор",   РегистраторДляОрдеров);
		
		ТаблицаОрдера = Запрос.Выполнить().Выгрузить();
		
		ТаблицаОрдера.Колонки.Количество.Имя   = "КоличествоВОрдере";
		ТаблицаОрдера.Колонки.Распоряжение.Имя = "ЗаказНаСборку";
		Если ТаблицаОрдера.Колонки.Найти("Собирается") <> Неопределено Тогда
			ТаблицаОрдера.Колонки.Собирается.Имя   = "КоличествоСобирается";
		КонецЕсли;
		ТаблицаОрдера.Колонки.Добавить("ИндексНабора");
		ТаблицаОрдера.ЗаполнитьЗначения(?(Ресурс = "Комплект", 1, 0), "ИндексНабора");
		
		// В указанных случаях могут использоваться только 14 серии (Учет себестоимости по сериям при планировании отгрузки)
		ЗаполнениеПоДаннымПриемки = 
			ПараметрыЗаполнения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров И Ресурс <> "Комплект"
			Или ПараметрыЗаполнения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров И Ресурс = "Комплект";
		
		// Распределение полученных таблиц
		
		Товары.Индексы.Добавить("ЗаказНаСборку, " + ПараметрыЗаполнения.КлючевыеПоля);
		
		// Добавление количества заказов
		
		Ключ = "ЗаказНаСборку, КодСтроки, Номенклатура";
		
		Условие = "ПО [Количество]";
		НакладныеСервер.РаспределитьКоличество(ТаблицаЗаказы, Товары, "КоличествоВЗаказе", Ключ, Условие, Истина);
		
		// Добавление отдельными строками нераспределенного количества заказов
		НакладныеСервер.ДополнитьТаблицу(ТаблицаЗаказы, Товары, "КоличествоВЗаказе");
		
		// Добавление количества ордеров.
		
		// При заполнении по приходным ордерам, когда распоряжением является накладная, невозможно соединить по заказу
		Ключ = ?(НакладнаяЯвляетсяРаспоряжением
				И Не ПоРасходнымОрдерам
				, "", "ЗаказНаСборку, ") 
				+ ПараметрыЗаполнения.КлючевыеПоля;
		
		Ключ = ?(ЗаполнениеПоДаннымПриемки,
				СтрЗаменить(Ключ, "Серия", ""),
				Ключ);
		
		// Кроме распределения количества, необходимо скопировать как есть значения поля Серия по данным ордеров
		ЗаполняемыеПоля = ?(ЗаполнениеПоДаннымПриемки,
				"Серия",
				"");
		
		// Есть накладные и заказы
		Условие = "[Количество], [КоличествоВЗаказе], ПО [КоличествоВЗаказе]";
		НакладныеСервер.РаспределитьКоличествоИЗаполнить(ТаблицаОрдера, Товары, "КоличествоВОрдере", Ключ, Условие, Ложь, ЗаполняемыеПоля);
		
		// Есть заказы, нет накладных
		Условие = "НЕ [Количество], [КоличествоВЗаказе], ПО [КоличествоВЗаказе]";
		НакладныеСервер.РаспределитьКоличествоИЗаполнить(ТаблицаОрдера, Товары, "КоличествоВОрдере", Ключ, Условие, Ложь, ЗаполняемыеПоля);
		
		// Есть накладные, нет заказов
		Условие = "[Количество], НЕ [КоличествоВЗаказе]";
		НакладныеСервер.РаспределитьКоличествоИЗаполнить(ТаблицаОрдера, Товары, "КоличествоВОрдере", Ключ, Условие, Истина, ЗаполняемыеПоля);
		
		// Есть мерные товары и задано допустимое отклонение
		НакладныеСервер.РаспределитьОтклонениеМерныхТоваров(ТаблицаОрдера, Товары, "КоличествоВЗаказе", "КоличествоВОрдере", Ключ);
		
		// Добавление отдельными строками нераспределенного количества ордеров, если накладная не по заказу
		Если Не ПараметрыЗаполнения.ПоЗаказуНаСборку Тогда
			НакладныеСервер.ДополнитьТаблицу(ТаблицаОрдера, Товары, "КоличествоВОрдере");
		КонецЕсли;
		
		// Дополнительная информация - сколько товара собирается
		Если ТаблицаОрдера.Колонки.Найти("КоличествоСобирается") <> Неопределено Тогда
			НакладныеСервер.РаспределитьКоличество(ТаблицаОрдера, Товары, "КоличествоСобирается", Ключ, "", Истина);
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

// Производит заполнение шапки документа из переданной таблицы товаров
//
// Параметры:
//  Объект		 - ДокументОбъект - 
//  Таблица		 - ТаблицаЗначений - Таблица содержащая товар шапки одной строкой, либо несколькими если используются серии.
//  								Должна содержать следующие поля - Номенклатура, Характеристика, Серия, Назначение, Количество
//  Распоряжение - ДокументСсылка.ЗаказНаСборку - 
//
Процедура ПерезаполнитьТоварыВШапке(Объект, Таблица, Распоряжение = Неопределено) Экспорт
	
	ПолнаяТаблица = Таблица.Скопировать();
	
	Таблица.Свернуть("Номенклатура, Характеристика, Серия, Назначение, Количество");
	
	Объект.Серии.Очистить();
	
	Если ПолнаяТаблица.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Объект, ПолнаяТаблица[0]);
		Объект.Количество = ПолнаяТаблица.Итог("Количество");
		
		Для Каждого Строка Из Таблица Цикл
			Если ЗначениеЗаполнено(Строка.Серия) И Строка.Количество > 0 Тогда
				НоваяСерия = Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСерия, Строка);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Дозаполнение шапки
	Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
		РеквизитыРаспоряжения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, 
		"Упаковка, Назначение, ВариантОбеспечения");
		
		Объект.Упаковка = Распоряжение.Упаковка;
		
		ИспользуетсяОбособленноеОбеспечение = 
			РеквизитыРаспоряжения.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно;
		
		НазначениеШапкиИспользуется = ЗначениеЗаполнено(РеквизитыРаспоряжения.Назначение) 
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыРаспоряжения.Назначение, "ДвиженияПоСкладскимРегистрам")
			И ИспользуетсяОбособленноеОбеспечение;
		
		Если НазначениеШапкиИспользуется Тогда
			Объект.Назначение = РеквизитыРаспоряжения.Назначение;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ВариантКомплектации) Тогда
		
		Компонент = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВариантКомплектации,
			Новый Структура("Номенклатура, Характеристика", "НоменклатураОсновногоКомпонента", "ХарактеристикаОсновногоКомпонента"));
		Если ЗначениеЗаполнено(Компонент.Номенклатура) И ЗначениеЗаполнено(Объект.Товары.НайтиСтроки(Компонент)) Тогда
			Объект.НоменклатураОсновногоКомпонента = Компонент.Номенклатура;
			Объект.ХарактеристикаОсновногоКомпонента = Компонент.Номенклатура;
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоУпаковок");
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Объект, СтруктураДействий, Неопределено);
	
КонецПроцедуры

#КонецОбласти

// Возвращает таблицу используемых статусов документа учитывая зависимости от функциональных опций и иных параметров
// 
// Возвращаемое значение:
//  ТаблицаЗначений - см. ОбщегоНазначенияУТ.ТаблицаСтатусовИзменяемыхИзСписка()
//
Функция СтатусыДокументаИзменяемыеИзСписка() Экспорт
	
	Таблица = ОбщегоНазначенияУТ.ТаблицаСтатусовИзменяемыхИзСписка();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыСборокТоваров") Тогда
		ОбщегоНазначенияУТ.ДобавитьСтрокуВТаблицуСтатусовИзменяемыхИзСписка(Таблица, Перечисления.СтатусыСборокТоваров.ВРаботе);
		ОбщегоНазначенияУТ.ДобавитьСтрокуВТаблицуСтатусовИзменяемыхИзСписка(Таблица, Перечисления.СтатусыСборокТоваров.СобраноРазобрано);
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

Функция ОписаниеФормыДокументаДляЗаполненияРеквизитовСвязанныхСНаправлениемДеятельности() Экспорт
	
	СтруктураОбъекта = НаправленияДеятельностиСервер.СтруктураОбъекта();
	Возврат СтруктураОбъекта;
	
КонецФункции

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
// 
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	
	// Потребности в комплектах на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Назначение", "Комплекты");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура   = "Объект.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика = "Объект.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад          = "Объект.Склад";
	
	// Потребности в комплектующих на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Товары.Назначение", "Комплектующие");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура   = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад          = "Объект.Склад";
	
	Возврат МакетФормы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Если ИмяРегистра = "СвободныеОстатки" Тогда
		ИсточникиДанных.Вставить("ЗаказНаСборку");
	КонецЕсли;
	
	Возврат ИсточникиДанных;

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	Реквизиты = ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);

	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаЗаказыНаСборку(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Функция ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата                         КАК Период,
	|	ДанныеШапки.Номер                        КАК Номер,
	|	ДанныеШапки.Ссылка                       КАК Ссылка,
	|	ДанныеШапки.Организация                  КАК Организация,
	|	ДанныеШапки.Подразделение                КАК Подразделение,
	|	ЕСТЬNULL(ДанныеШапки.Подразделение.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка))КАК ВариантОбособленногоУчетаТоваров,
	|	ДанныеШапки.Сделка                       КАК Сделка,
	|	ЕСТЬNULL(ДанныеШапки.Сделка.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ) КАК ОбособленныйУчетТоваровПоСделке,
	|	ДанныеШапки.ЗаказНаСборку                КАК ЗаказНаСборку,
	|	ДанныеШапки.ДатаРаспоряжения             КАК ДатаРаспоряжения,
	|	ДанныеШапки.Склад                        КАК Склад,
	|	ДанныеШапки.Номенклатура                 КАК Номенклатура,
	|	ДанныеШапки.Характеристика               КАК Характеристика,
	|	ДанныеШапки.Назначение                   КАК Назначение,
	|	ДанныеШапки.Серия                        КАК Серия,
	|	ДанныеШапки.Статус                       КАК Статус,
	|	ДанныеШапки.СборкаПодДеятельность        КАК СборкаПодДеятельность,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И ДанныеШапки.Дата >= ДанныеШапки.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                      КАК ОрдернаяСхемаПриОтгрузке,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И ДанныеШапки.Дата >= ДанныеШапки.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                      КАК ОрдернаяСхемаПриПоступлении,
	|	ДанныеШапки.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	(ВЫБОР ДанныеШапки.НоменклатураОсновногоКомпонента
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка) ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ) КАК УказанОсновнойКомпонент,
	|	ДанныеШапки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеШапки.Ответственный          КАК Ответственный,
	|	ДанныеШапки.Комментарий            КАК Комментарий,
	|	ДанныеШапки.ПометкаУдаления        КАК ПометкаУдаления,
	|	ДанныеШапки.Проведен               КАК Проведен,
	|	ДанныеШапки.ВариантПриемкиТоваров  КАК ВариантПриемкиТоваров
	|ИЗ
	|	Документ.СборкаТоваров КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка";

	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	НакладнаяЯвляетсяРаспоряжением = ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Реквизиты.ВариантПриемкиТоваров);

	Запрос.УстановитьПараметр("Склад",                            Реквизиты.Склад);
	Запрос.УстановитьПараметр("Период",                           Реквизиты.Период);
	Запрос.УстановитьПараметр("Статус",                           Реквизиты.Статус);
	Запрос.УстановитьПараметр("ДатаРаспоряжения",                 Реквизиты.ДатаРаспоряжения);
	Запрос.УстановитьПараметр("Серия",                            Реквизиты.Серия);
	Запрос.УстановитьПараметр("Организация",                      Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение",                    Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ЗаказНаСборку",                    Реквизиты.ЗаказНаСборку);
	Запрос.УстановитьПараметр("СборкаПоЗаказу",                   ЗначениеЗаполнено(Реквизиты.ЗаказНаСборку));
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",            Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ОрдернаяСхемаПриОтгрузке",         Реквизиты.ОрдернаяСхемаПриОтгрузке);
	Запрос.УстановитьПараметр("ОрдернаяСхемаПриПоступлении",      Реквизиты.ОрдернаяСхемаПриПоступлении);
	Запрос.УстановитьПараметр("СборкаПодДеятельность",            Реквизиты.СборкаПодДеятельность);
	Запрос.УстановитьПараметр("УказанОсновнойКомпонент",          Реквизиты.УказанОсновнойКомпонент);
	Запрос.УстановитьПараметр("УказанОсновнойКомпонент",          Реквизиты.УказанОсновнойКомпонент);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));

	Запрос.УстановитьПараметр("Назначение",                       Реквизиты.Назначение);
	Запрос.УстановитьПараметр("Номенклатура",                     Реквизиты.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",                   Реквизиты.Характеристика);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",          Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением",   НакладнаяЯвляетсяРаспоряжением);
	
	Запрос.УстановитьПараметр("Номер",                            Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерНаПечать",                    ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("Ответственный",                    Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",          ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СборкаТоваров"));
	Запрос.УстановитьПараметр("Комментарий",                      Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("ПометкаУдаления",                  Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",                         Реквизиты.Проведен);
	Запрос.УстановитьПараметр("Сделка",                           Реквизиты.Сделка);
	Запрос.УстановитьПараметр("ОбособленныйУчетТоваровПоСделке",  Реквизиты.ОбособленныйУчетТоваровПоСделке);
	Запрос.УстановитьПараметр("ВариантОбособленногоУчетаТоваров", Реквизиты.ВариантОбособленногоУчетаТоваров);
	Запрос.УстановитьПараметр("ИспользуетсяНазначение",           ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
	Возврат Реквизиты;

КонецФункции

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.УстановитьПараметр("Ссылка",                Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Склад",                 Запрос.Параметры.Склад);
	ЗапросАналитик.УстановитьПараметр("ХозяйственнаяОперация", Запрос.Параметры.ХозяйственнаяОперация);
	ЗапросАналитик.УстановитьПараметр("Статус",                Запрос.Параметры.Статус);
	ЗапросАналитик.УстановитьПараметр("ИспользуетсяНазначение", Запрос.Параметры.ИспользуетсяНазначение);
	
	ЗапросАналитик.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Склад          КАК Склад,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение     КАК Назначение,
	|	ТаблицаТовары.Серия          КАК Серия
	|ИЗ (
	|	ВЫБРАТЬ
	|		&Склад                         КАК Склад,
	|		ДанныеДокумента.Номенклатура   КАК Номенклатура,
	|		ДанныеДокумента.Характеристика КАК Характеристика,
	|		ДанныеДокумента.Назначение     КАК Назначение,
	|		ДанныеДокумента.Серия          КАК Серия
	|	ИЗ
	|		Документ.СборкаТоваров КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		&Склад                         КАК Склад,
	|		ДанныеДокумента.Номенклатура   КАК Номенклатура,
	|		ДанныеДокумента.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		ДанныеДокумента.Серия          КАК Серия
	|	ИЗ
	|		Документ.СборкаТоваров КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|		И Не &ИспользуетсяНазначение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара        КАК Склад,
	|		Аналитика.Номенклатура                              КАК Номенклатура,
	|		Аналитика.Характеристика                            КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)        КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|	ИЗ
	|		Документ.СборкаТоваров.ВидыЗапасовСписание КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|		И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВидыЗапасовВладельца.ВладелецТовара                 КАК Склад,
	|		Аналитика.Номенклатура                              КАК Номенклатура,
	|		Аналитика.Характеристика                            КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)        КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|	ИЗ
	|		Документ.СборкаТоваров.ВидыЗапасовСписание КАК ТаблицаВидыЗапасов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|		ПО
	|			ТаблицаВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца = ВидыЗапасовВладельца.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|		И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		И ВидыЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаТовары.Номенклатура   = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И ТаблицаТовары.Назначение = Аналитика.Назначение
	|		И ТаблицаТовары.Серия          = Аналитика.Серия
	|		И ТаблицаТовары.Склад          = Аналитика.Склад
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL";
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаЗаказыНаСборку(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЗаказыНаСборку";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	// Комплекты, отгружаемые серии заданы в шапке.
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ДатаРаспоряжения                      КАК Период,
	|	ТаблицаТовары.ЗаказНаСборку            КАК ЗаказНаСборку,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров) ТОГДА
	|				ТаблицаТовары.Серия
	|		КОНЕЦ                              КАК Серия,
	|	1                                      КАК КодСтроки,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
	|		КОНЕЦ                              КАК ТипСборки,
	|	ТаблицаТовары.Количество               КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	// В том числе статус = 14, тогда серии берутся из шапки.
	|	И (ТаблицаТовары.СтатусУказанияСерий <> 10
	|		ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)) 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплекты, отгружаемые серии заданы в отдельной табличной части.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)              КАК ВидДвижения,
	|	&ДатаРаспоряжения                                   КАК Период,
	|	&ЗаказНаСборку                                      КАК ЗаказНаСборку,
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ТаблицаТовары.Серия                                 КАК Серия,
	|	1                                                   КАК КодСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка) КАК ТипСборки,
	|	ТаблицаТовары.Количество                            КАК Заказано,
	|	ТаблицаТовары.Количество                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10 // статус = 10, тогда серии берутся из отдельной табличной части Серии
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплектующие.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)   КАК ВидДвижения,
	|	&ДатаРаспоряжения                        КАК Период,
	|	&ЗаказНаСборку                           КАК ЗаказНаСборку,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) ТОГДА
	|				ТаблицаТовары.Серия
	|		КОНЕЦ                                КАК Серия,
	|	ТаблицаТовары.КодСтроки                  КАК КодСтроки,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
	|	КОНЕЦ                                    КАК ТипСборки,
	|	ТаблицаТовары.Количество                 КАК Заказано,
	|	ТаблицаТовары.Количество                 КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаОбеспечения(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаОбеспечения";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки       КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ТаблицаТовары.КодСтроки         КАК КодСтроки,
	|	ТаблицаТовары.Количество        КАК Количество,
	|	ТаблицаТовары.Назначение        КАК Назначение
	|
	|ПОМЕСТИТЬ ВтТаблицаОбеспечения
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвижениеТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаОбеспечения", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаОбеспечения(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	// На неордерном складе приход комплектов при сборке
	"ВЫБРАТЬ
	|	&Период                  КАК Период,
	|	&ЗаказНаСборку           КАК Распоряжение,
	|	Реквизиты.Склад          КАК Склад,
	|	Реквизиты.Номенклатура   КАК Номенклатура,
	|	Реквизиты.Характеристика КАК Характеристика,
	|	Реквизиты.Назначение     КАК Назначение,
	|	0                        КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                  КАК Период,
	|	&ЗаказНаСборку           КАК Распоряжение,
	|	Реквизиты.Склад          КАК Склад,
	|	Реквизиты.Номенклатура   КАК Номенклатура,
	|	Реквизиты.Характеристика КАК Характеристика,
	|	Реквизиты.Назначение     КАК Назначение,
	|	0                        КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &НакладнаяЯвляетсяРаспоряжением
	|	И &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                  КАК Период,
	|	&Ссылка                  КАК Распоряжение,
	|	Реквизиты.Склад          КАК Склад,
	|	Реквизиты.Номенклатура   КАК Номенклатура,
	|	Реквизиты.Характеристика КАК Характеристика,
	|	Реквизиты.Назначение     КАК Назначение,
	|	0                        КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &НакладнаяЯвляетсяРаспоряжением
	|	И &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	
	// Ордерном складе сторно движений по старым назначениям, сделанные приходным ордером для комплектов при сборке
	|ВЫБРАТЬ
	|	&Период,
	|	&ЗаказНаСборку,
	|	Реквизиты.Склад,
	|	Реквизиты.Номенклатура,
	|	Реквизиты.Характеристика,
	|	Реквизиты.Назначение,
	|	0,
	|	Реквизиты.Количество,
	|	-Реквизиты.Количество,
	|	Реквизиты.Количество,
	|	-Реквизиты.Количество
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И ВЫБОР
	|			КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ Реквизиты.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На неордерном складе приход комплектующих при разборке
	|ВЫБРАТЬ
	|	&Период,
	|	&ЗаказНаСборку,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&СборкаПоЗаказу
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	
	|ВЫБРАТЬ
	|	&Период,
	|	&ЗаказНаСборку,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&СборкаПоЗаказу
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И &НакладнаяЯвляетсяРаспоряжением
	|	И &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Ссылка,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&СборкаПоЗаказу
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И &НакладнаяЯвляетсяРаспоряжением
	|	И &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	
	// Ордерном складе сторно движений по старым назначениям, сделанные приходным ордером для комплектующих при разборке
	|ВЫБРАТЬ
	|	&Период,
	|	&ЗаказНаСборку,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	0,
	|	ТаблицаТовары.Количество,
	|	-ТаблицаТовары.Количество,
	|	ТаблицаТовары.Количество,
	|	-ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&СборкаПоЗаказу
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;

	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаОбеспечения", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаОбеспечения(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = " 
	// Поступление комплекта при сборке (неордерная схема)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	Реквизиты.Номенклатура                 КАК Номенклатура,
	|	Реквизиты.Характеристика               КАК Характеристика,
	|	Реквизиты.Количество                   КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                  КАК ВРезервеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление комплекта при сборке (ордерная схема, старые назначения)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	Реквизиты.Номенклатура,
	|	Реквизиты.Характеристика,
	|	0,
	|	Реквизиты.Количество
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И ВЫБОР
	|			КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ Реквизиты.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление комплектующих при разборке (неордерная схема)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление комплектующих при разборке (ордерная схема, старые назначения)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	0,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Отгрузка комплектующих при сборке
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			ТаблицаТовары.Количество
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ
	|
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Отгрузка комплектов при разборке
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	Реквизиты.Номенклатура КАК Номенклатура,
	|	Реквизиты.Характеристика КАК Характеристика,
	|	Реквизиты.Количество КАК ВНаличии,
	|	ВЫБОР КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			Реквизиты.Количество
	|		КОНЕЦ КАК ВРезервеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И НЕ &СборкаПоЗаказу";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	// Отгрузка комплектов при разборке
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество               КАК Потребность,
	|	0                                      КАК КЗаказу,
	|	ТаблицаТовары.Количество               КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Потребность в комплектах при разборке
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество               КАК Потребность,
	|	0                                      КАК КЗаказу,
	|	0                                      КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Отгрузка кумплектующих при сборке
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество               КАК Потребность,
	|	0                                      КАК КЗаказу,
	|	ТаблицаТовары.Количество               КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Потребность в комплектующих при сборке
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество               КАК Потребность,
	|	0                                      КАК КЗаказу,
	|	0                                      КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	&Склад КАК Склад,
	|	0 КАК Потребность,
	|	ВЫБОР
	|		КОГДА НЕ &СборкаПоЗаказу
	|			ТОГДА -ТаблицаТовары.Количество
	|	КОНЕЦ КАК КЗаказу,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|				ИЛИ НЕ &ОрдернаяСхемаПриПоступлении
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|	И (НЕ &СборкаПоЗаказу
	|			ИЛИ НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИЛИ НЕ &ОрдернаяСхемаПриПоступлении)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	&Склад,
	|	0,
	|	ВЫБОР
	|		КОГДА НЕ &СборкаПоЗаказу
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|				ИЛИ НЕ &ОрдернаяСхемаПриПоступлении
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|	И (НЕ &СборкаПоЗаказу
	|			ИЛИ НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИЛИ НЕ &ОрдернаяСхемаПриПоступлении)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОтгрузке";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = " 
	// Комплектующие. Отгрузка по распоряжению с неордерного слкада (расход "К отгрузке", "К оформлению).
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
 	|	&Склад                                 КАК Получатель,
	|	&ЗаказНаСборку                         КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ  		                           КАК Назначение,
	|	ТаблицаТовары.Серия             КАК Серия,
	|	ТаблицаТовары.Количество        КАК КОтгрузке,
	|	ТаблицаТовары.Количество        КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплектующие. Оформление накладной по распоряжению с ордерного слкада (расход "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	&Склад                                  КАК Склад,
 	|	&Склад                                  КАК Получатель,
	|	&ЗаказНаСборку                          КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура       КАК Номенклатура,
	|	ТаблицаТовары.Характеристика     КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ   	                            КАК Назначение,
	|	ТаблицаТовары.Серия              КАК Серия,
	|	0                                       КАК КОтгрузке,
	|	ТаблицаТовары.Количество         КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплектующие. Выдача распоряжения на отгрузку с ордерного слкада (приход "К отгрузке", "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Склад                                 КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ	                               КАК Назначение,
	|	ТаблицаТовары.Серия             КАК Серия,
	|	ТаблицаТовары.Количество        КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплектующие. Приход-расход для накладных не по заказу на неордерном складе (приход и расход "К отгрузке").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Склад                                 КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                              	   КАК Назначение,
	|	ТаблицаТовары.Серия             КАК Серия,
	|	ТаблицаТовары.Количество        КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Склад                                 КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ	                               КАК Назначение,
	|	ТаблицаТовары.Серия             КАК Серия,
	|	ТаблицаТовары.Количество        КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплекты. Отгрузка по распоряжению с неордерного слкада (расход "К отгрузке").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&ЗаказНаСборку                               КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	ТаблицаТовары.Количество                     КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий <> 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&ЗаказНаСборку                               КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	ТаблицаТовары.Количество                     КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплекты. Приход-расход для накладных не по заказу на неордерном складе (приход и расход "К отгрузке").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий <> 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий <> 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Оформление накладной по распоряжению с ордерного слкада (расход "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&ЗаказНаСборку                               КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	0                                            КАК КОтгрузке,
	|	ТаблицаТовары.Количество                     КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий <> 10
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Оформление накладной по распоряжению с ордерного слкада (расход "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&ЗаказНаСборку                               КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	0                                            КАК КОтгрузке,
	|	ТаблицаТовары.Количество                     КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Выдача распоряжения на отгрузку с ордерного слкада (приход "К отгрузке").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий <> 10
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКПоступлению";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Склад                    КАК Отправитель,
	|	&ЗаказНаСборку                         КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	ТаблицаТовары.Количество               КАК КОформлениюНакладныхПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоОрдерам,
	|	0                                      КАК КОформлениюОрдеров,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.ВРаботе), ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Склад                                 КАК Отправитель,
	|	&ЗаказНаСборку                         КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)  КАК Серия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Количество               КАК КОформлениюНакладныхПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоОрдерам,
	|	0                                      КАК КОформлениюОрдеров,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.ВРаботе), ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Склад                    КАК Отправитель,
	|	ВЫБОР
	|		КОГДА &НакладнаяЯвляетсяРаспоряжением
	|			ИЛИ НЕ &СборкаПоЗаказу
	|			ТОГДА &Ссылка
	|		ИНАЧЕ &ЗаказНаСборку
	|	КОНЕЦ                                  КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Серия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	0                                      КАК КОформлениюНакладныхПоРаспоряжению,
	|	ТаблицаТовары.Количество               КАК КОформлениюПоступленийПоОрдерам,
	|	0                                      КАК КОформлениюОрдеров,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОрдернаяСхемаПриПоступлении
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.ВРаботе), ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Склад                                 КАК Отправитель,
	|	ВЫБОР
	|		КОГДА &НакладнаяЯвляетсяРаспоряжением
	|			ИЛИ НЕ &СборкаПоЗаказу
	|			ТОГДА &Ссылка
	|		ИНАЧЕ &ЗаказНаСборку
	|	КОНЕЦ                                  КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	0                                      КАК КОформлениюНакладныхПоРаспоряжению,
	|	ТаблицаТовары.Количество               КАК КОформлениюПоступленийПоОрдерам,
	|	0                                      КАК КОформлениюОрдеров,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОрдернаяСхемаПриПоступлении
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.ВРаботе), ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Склад                    КАК Отправитель,
	|	&Ссылка                                КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	0                                      КАК КОформлениюНакладныхПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоОрдерам,
	|	ТаблицаТовары.Количество               КАК КОформлениюОрдеров,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОрдернаяСхемаПриПоступлении
	|	И (&НакладнаяЯвляетсяРаспоряжением
	|	   ИЛИ НЕ &СборкаПоЗаказу)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.ВРаботе), ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Склад                                 КАК Отправитель,
	|	&Ссылка                                КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	0                                      КАК КОформлениюНакладныхПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоОрдерам,
	|	ТаблицаТовары.Количество               КАК КОформлениюОрдеров,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОрдернаяСхемаПриПоступлении
	|	И (&НакладнаяЯвляетсяРаспоряжением
	|	   ИЛИ НЕ &СборкаПоЗаказу)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.ВРаботе), ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Номенклатура                          КАК Номенклатура,
	|	&Характеристика                        КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	&Серия                                 КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	0                                      КАК КОтгрузке,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (0, 2, 14)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&Номенклатура,
	|	&Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Шапка
	|		ПО ТаблицаТовары.Ссылка = Шапка.Ссылка
	|			И ТаблицаТовары.Номенклатура = Шапка.Номенклатура
	|			И ТаблицаТовары.Характеристика = Шапка.Характеристика
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И Шапка.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (10, 14)
	|				И (НЕ &СборкаПоЗаказу
	|					ИЛИ ТаблицаТовары.КодСтроки = 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (0, 2, 10, 14)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	МАКСИМУМ(ТаблицаТовары.Номенклатура),
	|	МАКСИМУМ(ТаблицаТовары.Характеристика),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(МАКСИМУМ(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам), ЛОЖЬ)
	|			ТОГДА МАКСИМУМ(ТаблицаТовары.Назначение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	МАКСИМУМ(ТаблицаТовары.Серия),
	|	МАКСИМУМ(ТаблицаТовары.Количество),
	|	0,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ТаблицаСтатусов.СтатусУказанияСерий) В (6, 8)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаСтатусов
	|		ПО ТаблицаТовары.Ссылка = ТаблицаСтатусов.Ссылка
	|			И ТаблицаТовары.Номенклатура = ТаблицаСтатусов.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаСтатусов.Характеристика
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаСтатусов.СтатусУказанияСерий) В (4, 6, 8)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	&Номенклатура,
	|	&Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	&Серия КАК Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ВЫБОР
	|		КОГДА НЕ &СборкаПоЗаказу
	|				И ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (0, 2, 14)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	&Номенклатура,
	|	&Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ВЫБОР
	|		КОГДА Шапка.СтатусУказанияСерий В (6, 8, 10)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Шапка
	|		ПО ТаблицаТовары.Ссылка = Шапка.Ссылка
	|			И ТаблицаТовары.Номенклатура = Шапка.Номенклатура
	|			И ТаблицаТовары.Характеристика = Шапка.Характеристика
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И Шапка.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (0, 2, 10, 14)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	МАКСИМУМ(ТаблицаТовары.Номенклатура),
	|	МАКСИМУМ(ТаблицаТовары.Характеристика),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(МАКСИМУМ(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам), ЛОЖЬ)
	|			ТОГДА МАКСИМУМ(ТаблицаТовары.Назначение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	МАКСИМУМ(ТаблицаТовары.Серия),
	|	МАКСИМУМ(ТаблицаТовары.Количество),
	|	0,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаСтатусов
	|		ПО ТаблицаТовары.Ссылка = ТаблицаСтатусов.Ссылка
	|			И ТаблицаТовары.Номенклатура = ТаблицаСтатусов.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаСтатусов.Характеристика
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаСтатусов.СтатусУказанияСерий) В (4, 6, 8)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	// Сборка - приход комплекта
	|ВЫБРАТЬ
	|	&Номенклатура                                                       КАК Номенклатура,
	|	&Характеристика                                                     КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                               КАК Назначение,
	|	&Серия                                                              КАК Серия,
	|	ТаблицаТовары.Количество                                            КАК Количество,
	|	&Склад                                                              КАК Отправитель,
	|	&Склад                                                              КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)        КАК ХарактеристикаПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаСобранныхКомплектов) КАК СкладскаяОперация,
	|	&Ссылка                                                             КАК Документ,
	|	&Период                                                             КАК Период,
	|	НЕ &ОрдернаяСхемаПриПоступлении                                     КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Номенклатура,
	|	&Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	&Склад,
	|	&Склад,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаСобранныхКомплектов),
	|	&Ссылка,
	|	&Период,
	|	НЕ &ОрдернаяСхемаПриПоступлении
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Шапка
	|		ПО ТаблицаТовары.Ссылка = Шапка.Ссылка
	|			И ТаблицаТовары.Номенклатура = Шапка.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Сборка - расход комплектующих
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                                              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                                            КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                                   КАК Назначение,
	|	ТаблицаТовары.Серия                                                     КАК Серия,
	|	ТаблицаТовары.Количество                                                КАК Количество,
	|	&Склад                                                                  КАК Отправитель,
	|	&Номенклатура                                                           КАК Получатель,
	|	&Характеристика                                                         КАК ХарактеристикаПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки) КАК СкладскаяОперация,
	|	&Ссылка                                                                 КАК Документ,
	|	&Период                                                                 КАК Период,
	|	НЕ &ОрдернаяСхемаПриОтгрузке                                            КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТовары.Номенклатура),
	|	МАКСИМУМ(ТаблицаТовары.Характеристика),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(МАКСИМУМ(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам), ЛОЖЬ)
	|			ТОГДА МАКСИМУМ(ТаблицаТовары.Назначение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	МАКСИМУМ(ТаблицаТовары.Серия),
	|	МАКСИМУМ(ТаблицаТовары.Количество),
	|	&Склад,
	|	&Номенклатура,
	|	&Характеристика,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки),
	|	&Ссылка,
	|	&Период,
	|	НЕ &ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаОграничения
	|		ПО ТаблицаОграничения.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаОграничения.Номенклатура = ТаблицаТовары.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Разборка - приход комплектующих
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&Склад КАК Отправитель,
	|	&Склад КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаКомплектующихПослеРазборки) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	НЕ &ОрдернаяСхемаПриПоступлении КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТовары.Номенклатура),
	|	МАКСИМУМ(ТаблицаТовары.Характеристика),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(МАКСИМУМ(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам), ЛОЖЬ)
	|			ТОГДА МАКСИМУМ(ТаблицаТовары.Назначение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	МАКСИМУМ(ТаблицаТовары.Серия),
	|	МАКСИМУМ(ТаблицаТовары.Количество),
	|	&Склад,
	|	&Склад,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаКомплектующихПослеРазборки),
	|	&Ссылка,
	|	&Период,
	|	НЕ &ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаОграничения
	|		ПО ТаблицаОграничения.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаОграничения.Номенклатура = ТаблицаТовары.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Разборка - расход комплекта
	|ВЫБРАТЬ
	|	&Номенклатура,
	|	&Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	&Серия,
	|	ТаблицаТовары.Количество,
	|	&Склад,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки),
	|	&Ссылка,
	|	&Период,
	|	НЕ &ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Номенклатура,
	|	&Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	&Склад,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки),
	|	&Ссылка,
	|	&Период,
	|	НЕ &ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Шапка
	|		ПО ТаблицаТовары.Ссылка = Шапка.Ссылка
	|			И ТаблицаТовары.Номенклатура = Шапка.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтТаблицаКомплекты(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                      КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия          КАК Серия,
	|	ТаблицаТовары.Назначение     КАК Назначение,
	|	ТаблицаТовары.ВидЗапасов     КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД       КАК НомерГТД
	|ИЗ
	|	ВтТаблицаКомплекты КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТаблицаТовары.ВидЗапасов = ПоступленияТоваров.ВидЗапасов 
	|		И ТаблицаТовары.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика
	|		И ТаблицаТовары.Серия = ПоступленияТоваров.Серия
	|		И ТаблицаТовары.Назначение = ПоступленияТоваров.Назначение
	|		И ТаблицаТовары.НомерГТД = ПоступленияТоваров.НомерГТД 
	|
	|ГДЕ
	|	(ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < НАЧАЛОПЕРИОДА(&Период, ДЕНЬ))
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапросаАналитикаКомплекта(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаКомплекта") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	Запрос.УстановитьПараметр("АналитикаКомплекта", 
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(Запрос.Параметры));
		
	СтруктураПолей = Новый Структура("Номенклатура, Характеристика, Серия, Склад, Назначение");
	ЗаполнитьЗначенияСвойств(СтруктураПолей, Запрос.Параметры);
	СтруктураПолей.Назначение = Справочники.Назначения.ПустаяСсылка();
	
	Запрос.УстановитьПараметр("АналитикаКомплектаБезНазначения", 
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(СтруктураПолей));
	
КонецПроцедуры

Процедура УстановитьПараметрВидЗапасаСобираемогоКомплекта(Запрос)
	
	Если Запрос.Параметры.Свойство("ВидЗапасаСобираемогоКомплекта") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросВидаЗапаса = Новый Запрос;
	ЗапросВидаЗапаса.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СборкаТоваровВидыЗапасовОприходование.ВидЗапасов
		|ИЗ
		|	Документ.СборкаТоваров.ВидыЗапасовОприходование КАК СборкаТоваровВидыЗапасовОприходование
		|ГДЕ
		|	СборкаТоваровВидыЗапасовОприходование.Ссылка = &Ссылка
		|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)";
	ЗапросВидаЗапаса.УстановитьПараметр("Ссылка",                  Запрос.Параметры.Ссылка);
	ЗапросВидаЗапаса.УстановитьПараметр("ХозяйственнаяОперация",   Запрос.Параметры.ХозяйственнаяОперация);
	
	Выборка = ЗапросВидаЗапаса.Выполнить().Выбрать();
	Запрос.УстановитьПараметр("ВидЗапасаСобираемогоКомплекта",
		?(Выборка.Следующий(), Выборка.ВидЗапасов, Справочники.ВидыЗапасов.ПустаяСсылка()));
	
КонецПроцедуры

Процедура ИнициализироватьВтТаблицаКомплекты(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтТаблицаКомплектыИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ЗапросВтТаблицаКомплекты = Новый Запрос;
	ЗапросВтТаблицаКомплекты.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтТаблицаКомплекты.УстановитьПараметр("Ссылка",                  Запрос.Параметры.Ссылка);
	ЗапросВтТаблицаКомплекты.УстановитьПараметр("Период",                  Запрос.Параметры.Период);
	ЗапросВтТаблицаКомплекты.УстановитьПараметр("ХозяйственнаяОперация",   Запрос.Параметры.ХозяйственнаяОперация);
	ЗапросВтТаблицаКомплекты.УстановитьПараметр("УказанОсновнойКомпонент", Запрос.Параметры.УказанОсновнойКомпонент);
	
	СформироватьВтТаблицаАналитикУчетаПартий(ЗапросВтТаблицаКомплекты);
	
	ЗапросВтТаблицаКомплекты.Текст = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	МИНИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Серия КАК Серия,
	|	СУММА(Товары.ДоляСтоимости) КАК ДоляСтоимости,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВтТоварыДокумента
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.АналитикаУчетаНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка,
	|	0,
	|	""Шапка"",
	|	Шапка.Номенклатура,
	|	Шапка.Характеристика,
	|	Шапка.Назначение,
	|	Шапка.Серия,
	|	1,
	|	Шапка.Количество,
	|	Шапка.АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.СборкаТоваров КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.НомерСтроки КАК НомерСтроки,
	|	ТоварыДокумента.Номенклатура КАК Номенклатура,
	|	ТоварыДокумента.Характеристика КАК Характеристика,
	|	ТоварыДокумента.Назначение КАК Назначение,
	|	ТоварыДокумента.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТоварыДокумента.ДоляСтоимости * ТаблицаВидыЗапасов.Количество / ТоварыДокумента.Количество КАК ДоляСтоимости,
	|	ТоварыДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВтТаблицаКомплекты
	|ИЗ
	|	ВтТоварыДокумента КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|		ПО ТоварыДокумента.НомерСтроки = ТаблицаАналитикУчетаПартий.НомерСтроки
	|			И ТоварыДокумента.ИмяТабличнойЧасти = ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.ВидыЗапасовОприходование КАК ТаблицаВидыЗапасов
	|		ПО ТоварыДокумента.Ссылка = ТаблицаВидыЗапасов.Ссылка
	|			И ТоварыДокумента.АналитикаУчетаНоменклатуры = ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТоварыДокумента";
	
	ЗапросВтТаблицаКомплекты.Выполнить();
	
	Запрос.УстановитьПараметр("ВтТаблицаКомплектыИнициализирована", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьТоварыОрганизаций(Запрос)
	
	Если Запрос.Параметры.Свойство("ТоварыОрганизацийИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьВтТаблицаКомплекты(Запрос);
	ИнициализироватьВтВидыЗапасов(Запрос);
	УстановитьПараметрЗапросаАналитикаКомплекта(Запрос);
	УстановитьПараметрВидЗапасаСобираемогоКомплекта(Запрос);
	
	ЗапросТоваров = Новый Запрос;
	ЗапросТоваров.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросТоваров.УстановитьПараметр("Ссылка",                  Запрос.Параметры.Ссылка);
	ЗапросТоваров.УстановитьПараметр("ХозяйственнаяОперация",   Запрос.Параметры.ХозяйственнаяОперация);
	ЗапросТоваров.УстановитьПараметр("УказанОсновнойКомпонент", Запрос.Параметры.УказанОсновнойКомпонент);
	ЗапросТоваров.УстановитьПараметр("Период",                  Запрос.Параметры.Период);
	ЗапросТоваров.УстановитьПараметр("Склад",                   Запрос.Параметры.Склад);
	ЗапросТоваров.УстановитьПараметр("Организация",             Запрос.Параметры.Организация);
	ЗапросТоваров.УстановитьПараметр("СборкаПодДеятельность",   Запрос.Параметры.СборкаПодДеятельность);
	ЗапросТоваров.УстановитьПараметр("ВидЗапасаКомплекта",      Запрос.Параметры.ВидЗапасаСобираемогоКомплекта);
	ЗапросТоваров.УстановитьПараметр("АналитикаКомплекта",      Запрос.Параметры.АналитикаКомплекта);
	ЗапросТоваров.УстановитьПараметр("Статус",                  Запрос.Параметры.Статус);
	ЗапросТоваров.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&Период                                  КАК Период,
	|	&Склад                                   КАК Склад,
	|	&Организация                             КАК ОрганизацияОтгрузки,
	|	&Организация                             КАК Организация,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ТаблицаТовары.НомерГТД                   КАК НомерГТД,
	|	ТаблицаТовары.Количество                 КАК Количество,
	|	&ХозяйственнаяОперация                   КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                             КАК НалогообложениеНДС,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                             КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                             КАК КорАналитикаУчетаНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО                             КАК ИсходныйВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                             КАК АналитикаНоменклатурыКомитента,
	|	ИСТИНА                                   КАК Первичное,
	|	ТаблицаТовары.ДоляСтоимости              КАК ДоляСтоимости
	|ИЗ
	|	ВтТаблицаКомплекты КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период,
	|	&Склад,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&СборкаПодДеятельность КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	(ВЫБОР ТаблицаВидыЗапасов.ТипЗапасов
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР &ХозяйственнаяОперация
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) ТОГДА &ВидЗапасаКомплекта
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ
	|		КОНЕЦ) КАК КорВидЗапасов,
	|	(ВЫБОР &ХозяйственнаяОперация
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) ТОГДА &АналитикаКомплекта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)КАК КорАналитикаУчетаНоменклатуры,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ИсходныйВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента,
	|	ЛОЖЬ КАК Первичное,
	|	1 КАК ДоляСтоимости
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Результат = ЗапросТоваров.ВыполнитьПакет();
	
	ТаблицаТоварыОрганизаций = Результат[0].Выгрузить();
	ЗаполнитьКорАналитикуУчетаНомеклатуры(ТаблицаТоварыОрганизаций, Запрос.Параметры);
	
	ЗапросТоваров.УстановитьПараметр("ТаблицаТоварыОрганизаций", ТаблицаТоварыОрганизаций);
	ЗапросТоваров.Текст = 
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.НомерСтроки,
	|	ТоварыОрганизаций.ВидДвижения,
	|	ТоварыОрганизаций.Период,
	|	ТоварыОрганизаций.Склад,
	|	ТоварыОрганизаций.ОрганизацияОтгрузки,
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.Количество,
	|	ТоварыОрганизаций.ХозяйственнаяОперация,
	|	ТоварыОрганизаций.НалогообложениеНДС,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.КорВидЗапасов,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.ИсходныйВидЗапасов,
	|	ТоварыОрганизаций.АналитикаНоменклатурыКомитента,
	|	ТоварыОрганизаций.Первичное,
	|	ТоварыОрганизаций.ДоляСтоимости
	|ПОМЕСТИТЬ ВтТоварыОрганизаций
	|ИЗ
	|	&ТаблицаТоварыОрганизаций КАК ТоварыОрганизаций";
	
	ЗапросТоваров.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("ТоварыОрганизацийИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьТоварыОрганизаций(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.НомерСтроки,
	|	ТоварыОрганизаций.ВидДвижения,
	|	ТоварыОрганизаций.Период,
	|	ТоварыОрганизаций.Склад,
	|	ТоварыОрганизаций.ОрганизацияОтгрузки,
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.Количество,
	|	ТоварыОрганизаций.ХозяйственнаяОперация,
	|	ТоварыОрганизаций.НалогообложениеНДС,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.КорВидЗапасов,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Первичное,
	|	ТоварыОрганизаций.ДоляСтоимости
	|ИЗ
	|	ВтТоварыОрганизаций КАК ТоварыОрганизаций";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтВидыЗапасов(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Период                                            КАК Период,
	|	&Склад                                             КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	ТаблицаВидыЗапасов.Номенклатура                    КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                  КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов                      КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД                        КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                      КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтВидыЗапасов(Запрос);
	
	Если НЕ Запрос.Параметры.Свойство("ТоварыОрганизацийИнициализированы") Тогда
		ИнициализироватьТоварыОрганизаций(Запрос);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                    КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	СпрВидыЗапасов.Валюта                             КАК Валюта,
	|	СпрВидыЗапасов.Ссылка                             КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура                   КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                 КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                       КАК НомерГТД,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	0                                                 КАК Количество,
	|	ТаблицаВидыЗапасов.Количество                     КАК КоличествоСписано,
	|	0                                                 КАК СуммаВыручки,
	|	0                                                 КАК КоличествоКОформлению,
	|	ТаблицаВидыЗапасов.Количество                     КАК КоличествоСписаноКОформлению,
	|	0                                                 КАК СуммаВыручкиКОформлению,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.КорАналитикаУчетаНоменклатуры  КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТоварыОрганизаций КАК ТаблицаВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО СпрВидыЗапасов.Ссылка = ТаблицаВидыЗапасов.ИсходныйВидЗапасов
	|ГДЕ
	|	СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьВтВидыЗапасов(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтВидыЗапасовИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ЗапросВтВидыЗапасов = Новый Запрос;
	ЗапросВтВидыЗапасов.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтВидыЗапасов.УстановитьПараметр("Ссылка",                  Запрос.Параметры.Ссылка);
	
	ЗапросВтВидыЗапасов.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта          КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов      КАК ТипЗапасов,
	|	Справочник.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	Справочник.ВидЗапасовВладельца                КАК ВидЗапасовВладельца,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики          КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	АналитикаКомитента.КлючАналитики              КАК АналитикаНоменклатурыКомитента,
	|	Аналитика.Номенклатура                        КАК Номенклатура,
	|	ЕСТЬNULL(Аналитика.Назначение.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	Аналитика.Характеристика                      КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                 КАК Количество
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.СборкаТоваров.ВидыЗапасовСписание КАК ТаблицаВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК Справочник
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = Справочник.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|		И Аналитика.Склад = АналитикаБезНазначения.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
	|	ПО
	|		Аналитика.Номенклатура = АналитикаКомитента.Номенклатура
	|		И Аналитика.Характеристика = АналитикаКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомитента.Серия
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаКомитента.Назначение
	|		И ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара = АналитикаКомитента.Склад
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";

	ЗапросВтВидыЗапасов.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("ВтВидыЗапасовИнициализирована", Истина);

КонецПроцедуры

Процедура ВыполнитьРаспределениеСтоимостиКомплектующихНаКомплекты(Запрос)
	
	Если Запрос.Параметры.Свойство("СтоимостьКомплектующихНаКомплектыРаспределена") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаКомплекта(Запрос);
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	ИнициализироватьВтВидыЗапасов(Запрос);
	
	ЗапросРаспределения = Новый Запрос;
	ЗапросРаспределения.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросРаспределения.УстановитьПараметр("Ссылка",                Запрос.Параметры.Ссылка);
	ЗапросРаспределения.УстановитьПараметр("Период",                Запрос.Параметры.Период);
	ЗапросРаспределения.УстановитьПараметр("АналитикаКомплекта",    Запрос.Параметры.АналитикаКомплекта);
	ЗапросРаспределения.УстановитьПараметр("АналитикаКомплектаБезНазначения", Запрос.Параметры.АналитикаКомплектаБезНазначения);
	ЗапросРаспределения.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", 
	                                                                Запрос.Параметры.УчитыватьСебестоимостьТоваровПоВидамЗапасов);
	ЗапросРаспределения.УстановитьПараметр("ХозяйственнаяОперация", Запрос.Параметры.ХозяйственнаяОперация);
	ЗапросРаспределения.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", 
	                                                                Запрос.Параметры.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета);
	ЗапросРаспределения.УстановитьПараметр("Организация",           Запрос.Параметры.Организация);
	ЗапросРаспределения.УстановитьПараметр("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	ЗапросРаспределения.УстановитьПараметр("ИспользуетсяНазначение", Запрос.Параметры.ИспользуетсяНазначение);
	
	СформироватьВтТаблицаАналитикУчетаПартий(ЗапросРаспределения);
	
	ЗапросРаспределения.Текст = 
	// При сборке
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасовОприходование.АналитикаУчетаНоменклатуры,
	|	ВидыЗапасовОприходование.ВидЗапасов
	|ПОМЕСТИТЬ ВтВидыЗапасовОприходование
	|ИЗ
	|	Документ.СборкаТоваров.ВидыЗапасовОприходование КАК ВидыЗапасовОприходование
	|ГДЕ
	|	ВидыЗапасовОприходование.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСтрокиДокумента,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА &АналитикаКомплекта
	|		ИНАЧЕ &АналитикаКомплектаБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА ДанныеДокумента.Склад.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|	
	|	СпрВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	1 КАК ДоляСтоимости,
	|	ДанныеДокумента.Количество КАК Количество,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ 
	|		ДанныеДокумента.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|
	|	ВЫБОР КОГДА СпрВидыЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий
	|ИЗ
	|	Документ.СборкаТоваров КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтВидыЗапасовОприходование КАК ТаблицаВидыЗапасов
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = ДанныеДокумента.АналитикаУчетаНоменклатуры
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО СпрВидыЗапасов.Ссылка = ТаблицаВидыЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = ДанныеДокумента.Организация
	|		И АналитикаРасчетов.Партнер = СпрВидыЗапасов.ВладелецТовара
	|		И АналитикаРасчетов.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = ДанныеДокумента.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = ДанныеДокумента.Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ДанныеДокумента.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|		ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= 0
	|		И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Шапка""
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) // При сборке
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// При разборке
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаБезНазначения.КлючАналитики
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА ДанныеДокумента.Склад.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|	
	|	СпрВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ДоляСтоимости КАК ДоляСтоимости,
	|	ТаблицаТовары.Количество КАК Количество,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ 
	|		ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|
	|	ВЫБОР КОГДА СпрВидыЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтВидыЗапасовОприходование КАК ТаблицаВидыЗапасов
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = ТаблицаТовары.АналитикаУчетаНоменклатуры
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО СпрВидыЗапасов.Ссылка = ТаблицаВидыЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.Склад = АналитикаБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = ДанныеДокумента.Организация
	|		И АналитикаРасчетов.Партнер = СпрВидыЗапасов.ВладелецТовара
	|		И АналитикаРасчетов.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = ДанныеДокумента.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = ДанныеДокумента.Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ДанныеДокумента.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаТовары.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Товары""
	|	
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров) // При разборке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтрокиДокумента,
	|	&Период КАК Период,
	|	1 КАК ДоляСтоимости,
	|	ВЫБОР 
	|		КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента
	|		ИНАЧЕ
	|			ВЫБОР КОГДА &ИспользуетсяНазначение
	|				ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|				ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|			КОНЕЦ
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА Аналитика.Склад.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|	
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|	
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК АналитикаСписанияОприходования,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасовСписанияОприходования,
	|	ТаблицаВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА СпрВидыЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО СпрВидыЗапасов.Ссылка = ТаблицаВидыЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = &Организация
	|		И АналитикаРасчетов.Партнер = СпрВидыЗапасов.ВладелецТовара
	|		И АналитикаРасчетов.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = &НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И ТаблицаВидыЗапасов.Количество > 0
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР 
	|		КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента
	|		ИНАЧЕ
	|			ВЫБОР КОГДА &ИспользуетсяНазначение
	|				ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|				ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ,
	|	
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ТипЗапасов,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР КОГДА СпрВидыЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Аналитика.Склад.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента";
	
	Результат = ЗапросРаспределения.ВыполнитьПакет();
	
	Распределение = РаспределитьСтоимостьКомплектующихНаКомплекты(
		Результат[1].Выгрузить(),
		Результат[2].Выгрузить(),
		Запрос.Параметры);
	
	ЗапросРаспределения.УстановитьПараметр("ТаблицаСебестоимостьТоваров", Распределение.ТаблицаСебестоимостьТоваров);
	ЗапросРаспределения.УстановитьПараметр("ТаблицаДвиженияНоменклатураНоменклатура",
		Распределение.ТаблицаДвиженияНоменклатураНоменклатура);
	ЗапросРаспределения.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСебестоимостьТоваров.Период,
	|	ТаблицаСебестоимостьТоваров.Регистратор,
	|	ТаблицаСебестоимостьТоваров.НомерСтроки,
	|	ТаблицаСебестоимостьТоваров.ВидДвижения,
	|	ТаблицаСебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаСебестоимостьТоваров.РазделУчета,
	|	ТаблицаСебестоимостьТоваров.ВидЗапасов,
	|	ТаблицаСебестоимостьТоваров.Организация,
	|	ТаблицаСебестоимостьТоваров.Количество,
	|	ТаблицаСебестоимостьТоваров.Стоимость,
	|	ТаблицаСебестоимостьТоваров.СтоимостьБезНДС,
	|	ТаблицаСебестоимостьТоваров.ДопРасходы,
	|	ТаблицаСебестоимостьТоваров.ДопРасходыБезНДС,
	|	ТаблицаСебестоимостьТоваров.СтоимостьРегл,
	|	ТаблицаСебестоимостьТоваров.ПостояннаяРазница,
	|	ТаблицаСебестоимостьТоваров.ВременнаяРазница,
	|	ТаблицаСебестоимостьТоваров.ХозяйственнаяОперация,
	|	ТаблицаСебестоимостьТоваров.КорАналитикаУчетаНоменклатуры,
	|	ТаблицаСебестоимостьТоваров.КорРазделУчета,
	|	ТаблицаСебестоимостьТоваров.КорВидЗапасов,
	|	ТаблицаСебестоимостьТоваров.КорОрганизация,
	|	ТаблицаСебестоимостьТоваров.КорСтоимость,
	|	ТаблицаСебестоимостьТоваров.АналитикаУчетаПоПартнерам,
	|	ТаблицаСебестоимостьТоваров.ЗаказКлиента,
	|	ТаблицаСебестоимостьТоваров.Подразделение,
	|	ТаблицаСебестоимостьТоваров.АналитикаРасходов,
	|	ТаблицаСебестоимостьТоваров.СтатьяРасходовСписания,
	|	ТаблицаСебестоимостьТоваров.СтатьяДоходов,
	|	ТаблицаСебестоимостьТоваров.АналитикаДоходов,
	|	ТаблицаСебестоимостьТоваров.ПериодПродажи,
	|	ТаблицаСебестоимостьТоваров.СтатьяАктивовПассивов,
	|	ТаблицаСебестоимостьТоваров.АналитикаАктивовПассивов,
	|	ТаблицаСебестоимостьТоваров.ДокументДвижения,
	|	ТаблицаСебестоимостьТоваров.ИдентификаторСтроки,
	|	ТаблицаСебестоимостьТоваров.ГруппаПродукции,
	//	партионный учет версии 2.2
	|	ТаблицаСебестоимостьТоваров.Партия,
	|	ТаблицаСебестоимостьТоваров.АналитикаУчетаПартий,
	|	ТаблицаСебестоимостьТоваров.АналитикаФинансовогоУчета,
	|	ТаблицаСебестоимостьТоваров.ВидДеятельностиНДС,
	|	ТаблицаСебестоимостьТоваров.КорПартия,
	|	ТаблицаСебестоимостьТоваров.КорАналитикаУчетаПартий,
	|	ТаблицаСебестоимостьТоваров.КорАналитикаФинансовогоУчета,
	|	ТаблицаСебестоимостьТоваров.КорВидДеятельностиНДС,
	|	ТаблицаСебестоимостьТоваров.ТипЗаписи
	|ПОМЕСТИТЬ ВтТаблицаСебестоимостьТоваров
	|ИЗ
	|	&ТаблицаСебестоимостьТоваров КАК ТаблицаСебестоимостьТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДвиженияНоменклатураНоменклатура.Период,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Регистратор,
	|	ТаблицаДвиженияНоменклатураНоменклатура.НомерСтроки,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ХозяйственнаяОперация,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Организация,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Подразделение,
	|	ТаблицаДвиженияНоменклатураНоменклатура.АналитикаУчетаНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.НаправлениеДеятельности,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Склад,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ТипЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ВидЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорАналитикаУчетаНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорНаправлениеДеятельности,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорСклад,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорТипЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорВидЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Количество,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорКоличество,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Стоимость,
	|	ТаблицаДвиженияНоменклатураНоменклатура.СтоимостьБезНДС,
	|	ТаблицаДвиженияНоменклатураНоменклатура.СтоимостьРегл,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ИсточникГФУНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорИсточникГФУНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ДокументДвижения,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорОрганизация
	|ПОМЕСТИТЬ ВтТаблицаДвиженияНоменклатураНоменклатура
	|ИЗ
	|	&ТаблицаДвиженияНоменклатураНоменклатура КАК ТаблицаДвиженияНоменклатураНоменклатура";

	Результат = ЗапросРаспределения.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("СтоимостьКомплектующихНаКомплектыРаспределена", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтТаблицаКомплекты(Запрос);
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	| ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Организация                           КАК Организация,
	|	КлючиАналитики.КлючАналитики           КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка                                КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасов               КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий     КАК АналитикаУчетаПартий,
	|	СУММА(ТаблицаТовары.Количество)        КАК Количество,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ИСТИНА                                 КАК Первичное,
	|	&Ссылка                                КАК ДокументИсточник
	|ИЗ
	|	ВтТаблицаКомплекты КАК ТаблицаТовары
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО 
	|			ТаблицаТовары.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаТовары.Характеристика = КлючиАналитики.Характеристика
	|			И ТаблицаТовары.Назначение = КлючиАналитики.Назначение
	|			И ТаблицаТовары.Серия = КлючиАналитики.Серия
	|			И (&Склад = КлючиАналитики.Склад)
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И &ПартионныйУчетВерсии21
	|СГРУППИРОВАТЬ ПО
	|	КлючиАналитики.КлючАналитики,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ВыполнитьРаспределениеСтоимостиКомплектующихНаКомплекты(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСебестоимостьТоваров.Период,
	|	ТаблицаСебестоимостьТоваров.Регистратор,
	|	ТаблицаСебестоимостьТоваров.НомерСтроки,
	|	ТаблицаСебестоимостьТоваров.ВидДвижения,
	|	ТаблицаСебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаСебестоимостьТоваров.РазделУчета,
	|	ТаблицаСебестоимостьТоваров.ВидЗапасов,
	|	ТаблицаСебестоимостьТоваров.Организация,
	|	ТаблицаСебестоимостьТоваров.Количество,
	|	ТаблицаСебестоимостьТоваров.Стоимость,
	|	ТаблицаСебестоимостьТоваров.СтоимостьБезНДС,
	|	ТаблицаСебестоимостьТоваров.ДопРасходы,
	|	ТаблицаСебестоимостьТоваров.ДопРасходыБезНДС,
	|	ТаблицаСебестоимостьТоваров.СтоимостьРегл,
	|	ТаблицаСебестоимостьТоваров.ПостояннаяРазница,
	|	ТаблицаСебестоимостьТоваров.ВременнаяРазница,
	|	ТаблицаСебестоимостьТоваров.ХозяйственнаяОперация,
	|	ТаблицаСебестоимостьТоваров.КорАналитикаУчетаНоменклатуры,
	|	ТаблицаСебестоимостьТоваров.КорРазделУчета,
	|	ТаблицаСебестоимостьТоваров.КорВидЗапасов,
	|	ТаблицаСебестоимостьТоваров.КорОрганизация,
	|	ТаблицаСебестоимостьТоваров.КорСтоимость,
	|	ТаблицаСебестоимостьТоваров.АналитикаУчетаПоПартнерам,
	|	ТаблицаСебестоимостьТоваров.ЗаказКлиента,
	|	ТаблицаСебестоимостьТоваров.Подразделение,
	|	ТаблицаСебестоимостьТоваров.АналитикаРасходов,
	|	ТаблицаСебестоимостьТоваров.СтатьяРасходовСписания,
	|	ТаблицаСебестоимостьТоваров.СтатьяДоходов,
	|	ТаблицаСебестоимостьТоваров.АналитикаДоходов,
	|	ТаблицаСебестоимостьТоваров.ПериодПродажи,
	|	ТаблицаСебестоимостьТоваров.СтатьяАктивовПассивов,
	|	ТаблицаСебестоимостьТоваров.АналитикаАктивовПассивов,
	|	ТаблицаСебестоимостьТоваров.ДокументДвижения,
	|	ТаблицаСебестоимостьТоваров.ИдентификаторСтроки,
	|	ТаблицаСебестоимостьТоваров.ГруппаПродукции,
	//	партионный учет версии 2.2
	|	ТаблицаСебестоимостьТоваров.Партия,
	|	ТаблицаСебестоимостьТоваров.АналитикаУчетаПартий,
	|	ТаблицаСебестоимостьТоваров.АналитикаФинансовогоУчета,
	|	ТаблицаСебестоимостьТоваров.ВидДеятельностиНДС,
	|	ТаблицаСебестоимостьТоваров.КорПартия,
	|	ТаблицаСебестоимостьТоваров.КорАналитикаУчетаПартий,
	|	ТаблицаСебестоимостьТоваров.КорАналитикаФинансовогоУчета,
	|	ТаблицаСебестоимостьТоваров.КорВидДеятельностиНДС,
	|	ТаблицаСебестоимостьТоваров.ТипЗаписи
	|ИЗ
	|	ВтТаблицаСебестоимостьТоваров КАК ТаблицаСебестоимостьТоваров
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ВыполнитьРаспределениеСтоимостиКомплектующихНаКомплекты(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДвиженияНоменклатураНоменклатура.Период,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Регистратор,
	|	ТаблицаДвиженияНоменклатураНоменклатура.НомерСтроки,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ХозяйственнаяОперация,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Организация,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Подразделение,
	|	ТаблицаДвиженияНоменклатураНоменклатура.АналитикаУчетаНоменклатуры,
	|	Аналитика.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Склад,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ТипЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ВидЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорАналитикаУчетаНоменклатуры,
	|	КорАналитика.Назначение.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорСклад,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорТипЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорВидЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Количество,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорКоличество,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Стоимость,
	|	ТаблицаДвиженияНоменклатураНоменклатура.СтоимостьБезНДС,
	|	ТаблицаДвиженияНоменклатураНоменклатура.СтоимостьРегл,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ИсточникГФУНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорИсточникГФУНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ДокументДвижения,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорОрганизация
	|ИЗ
	|	ВтТаблицаДвиженияНоменклатураНоменклатура КАК ТаблицаДвиженияНоменклатураНоменклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаДвиженияНоменклатураНоменклатура.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КорАналитика
	|	ПО ТаблицаДвиженияНоменклатураНоменклатура.КорАналитикаУчетаНоменклатуры = КорАналитика.КлючАналитики";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
	|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Склад                                  КАК МестоХранения,
	|	&Подразделение                          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	НЕОПРЕДЕЛЕНО                            КАК Валюта,
	|	0                                       КАК Сумма,
	|	&Статус                                 КАК Статус,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	""""                                    КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция РаспределитьСтоимостьКомплектующихНаКомплекты(ТаблицаКомплектов, ТаблицаКомплектующих, Реквизиты)

	ТаблицаСебестоимостьТоваров = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаСебестоимостьТоваров.Колонки.Удалить("Активность");
	
	ТаблицаДвиженияНоменклатураНоменклатура = РегистрыНакопления.ДвиженияНоменклатураНоменклатура.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаДвиженияНоменклатураНоменклатура.Колонки.Удалить("Активность");

	Результат = Новый Структура;
	Результат.Вставить("ТаблицаСебестоимостьТоваров", ТаблицаСебестоимостьТоваров);
	Результат.Вставить("ТаблицаДвиженияНоменклатураНоменклатура", ТаблицаДвиженияНоменклатураНоменклатура);
	
	Если ТаблицаКомплектов.Количество() = 0 Или ТаблицаКомплектующих.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	МассивРаспределения = ТаблицаКомплектов.ВыгрузитьКолонку("ДоляСтоимости");
	ВсегоДолейКоличествоВыхода = ТаблицаКомплектующих.Количество();
	
	ПартионныйУчетВерсии22 = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВерсии22(НачалоМесяца(Реквизиты.Период));
	МетодОценки = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.МетодОценкиСтоимостиТоваровОрганизации(
		Реквизиты.Организация, НачалоМесяца(Реквизиты.Период));
	ФИФОСкользящаяОценка = (МетодОценки = Перечисления.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка);
	
	Для Каждого СтрокаВхода Из ТаблицаКомплектующих Цикл

		РаспределенноеКоличество = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаВхода.Количество, МассивРаспределения, 3);

		Счетчик = 0;
		Для Каждого СтрокаВыхода Из ТаблицаКомплектов Цикл

			// Количество выхода надо рассчитать на каждую строку входа.
			Если ВсегоДолейКоличествоВыхода <> 0 Тогда
				КоличествоВыхода = Окр(СтрокаВыхода.Количество / ВсегоДолейКоличествоВыхода, 3, РежимОкругления.Окр15как20);
			Иначе
				КоличествоВыхода = СтрокаВыхода.Количество;
			КонецЕсли;

			СтрокаВыхода.Количество = СтрокаВыхода.Количество - КоличествоВыхода;

			ЗаписьКомплектующие = ТаблицаСебестоимостьТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьКомплектующие, СтрокаВхода);
			ЗаписьКомплектующие.ВидДвижения = ВидДвиженияНакопления.Расход;
			ЗаписьКомплектующие.Подразделение = Реквизиты.Подразделение;
			ЗаписьКомплектующие.КорАналитикаУчетаНоменклатуры = СтрокаВыхода.АналитикаУчетаНоменклатуры;
			ЗаписьКомплектующие.КорРазделУчета = СтрокаВыхода.РазделУчета;
			ЗаписьКомплектующие.КорВидЗапасов = СтрокаВыхода.ВидЗапасов;
			ЗаписьКомплектующие.Количество = РаспределенноеКоличество[Счетчик];
			ЗаписьКомплектующие.АналитикаУчетаПоПартнерам = СтрокаВхода.АналитикаРасчетовСКомитентом;
			//	партионный учет версии 2.2
			ЗаписьКомплектующие.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Потребление;
			
			//Списание комиссионных комплектующих по разделу учета "Товары, принятые на комиссию".
			Если СтрокаВхода.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
				
				КомиссионныеКомплектующие = ТаблицаСебестоимостьТоваров.Добавить();
				ЗаполнитьЗначенияСвойств(КомиссионныеКомплектующие, ЗаписьКомплектующие,,
					"РазделУчета, ВидЗапасов, АналитикаУчетаНоменклатуры, КорРазделУчета");
				
				КомиссионныеКомплектующие.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию;
				КомиссионныеКомплектующие.ВидЗапасов = СтрокаВхода.ВидЗапасовСписанияОприходования;
				КомиссионныеКомплектующие.АналитикаУчетаНоменклатуры = СтрокаВхода.АналитикаСписанияОприходования;
				
			КонецЕсли;

			ЗаписьКомплект = ТаблицаСебестоимостьТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьКомплект, СтрокаВыхода);
			ЗаписьКомплект.ВидДвижения = ВидДвиженияНакопления.Приход;
			ЗаписьКомплект.Подразделение = Реквизиты.Подразделение;
			ЗаписьКомплект.Количество  = КоличествоВыхода;
			
			//	партионный учет версии 2.2
			Если ПартионныйУчетВерсии22 Тогда
				
				Если ФИФОСкользящаяОценка Тогда
					ЗаписьКомплект.Партия = Реквизиты.Ссылка;
					ЗаписьКомплект.АналитикаУчетаПартий = СтрокаВыхода.АналитикаУчетаПартий;
					ЗаписьКомплектующие.КорПартия = Реквизиты.Ссылка;
					ЗаписьКомплектующие.КорАналитикаУчетаПартий = СтрокаВыхода.АналитикаУчетаПартий;
				Иначе
					ЗаписьКомплект.АналитикаУчетаПартий = Справочники.КлючиАналитикиУчетаПартий.ПустаяСсылка();
					ЗаписьКомплект.КорАналитикаУчетаПартий = СтрокаВыхода.АналитикаУчетаПартий;
				КонецЕсли;
				
				Если ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам") И Реквизиты.ОбособленныйУчетТоваровПоСделке Тогда
					ЗаписьКомплект.АналитикаФинансовогоУчета = Реквизиты.Сделка;
				ИначеЕсли ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам")
				 И Реквизиты.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.ПоПодразделению Тогда
					ЗаписьКомплект.АналитикаФинансовогоУчета = Реквизиты.Подразделение;
				КонецЕсли;
				
				ЗаписьКомплект.ВидДеятельностиНДС = Реквизиты.СборкаПодДеятельность;
				
			Иначе
				ЗаписьКомплект.АналитикаУчетаПартий = Справочники.КлючиАналитикиУчетаПартий.ПустаяСсылка();
			КонецЕсли;
			
			Если ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам") И Реквизиты.ОбособленныйУчетТоваровПоСделке Тогда
				
				ЗаписьКомплектующие.КорАналитикаФинансовогоУчета = Реквизиты.Сделка;
				Если СтрокаВхода.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
					КомиссионныеКомплектующие.КорАналитикаФинансовогоУчета = Реквизиты.Сделка;
				КонецЕсли;
				
			ИначеЕсли ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам")
			 И Реквизиты.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.ПоПодразделению Тогда
				
				ЗаписьКомплектующие.КорАналитикаФинансовогоУчета = Реквизиты.Подразделение;
				Если СтрокаВхода.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
					КомиссионныеКомплектующие.КорАналитикаФинансовогоУчета = Реквизиты.Подразделение;
				КонецЕсли;
				
			КонецЕсли;
			
			ЗаписьКомплектующие.КорВидДеятельностиНДС = Реквизиты.СборкаПодДеятельность;
			Если СтрокаВхода.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
				КомиссионныеКомплектующие.КорВидДеятельностиНДС = Реквизиты.СборкаПодДеятельность;
			КонецЕсли;
			
			ЗаписьКомплект.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Партия;
			
			// Движение Номенклатура - Номенклатура
			ЗаписьНоменклатураНоменклатура = ТаблицаДвиженияНоменклатураНоменклатура.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНоменклатураНоменклатура, СтрокаВхода);
			ЗаписьНоменклатураНоменклатура.АналитикаУчетаНоменклатуры = СтрокаВхода.АналитикаСписанияОприходования;
			ЗаписьНоменклатураНоменклатура.НаправлениеДеятельности = СтрокаВхода.НаправлениеДеятельности;
			ЗаписьНоменклатураНоменклатура.ВидЗапасов = СтрокаВхода.ВидЗапасовСписанияОприходования;
			ЗаписьНоменклатураНоменклатура.Организация = Реквизиты.Организация;
			ЗаписьНоменклатураНоменклатура.Подразделение = Реквизиты.Подразделение;
			ЗаписьНоменклатураНоменклатура.Склад = Реквизиты.Склад;
			
			ЗаписьНоменклатураНоменклатура.КорАналитикаУчетаНоменклатуры = СтрокаВыхода.АналитикаУчетаНоменклатуры;
			ЗаписьНоменклатураНоменклатура.КорНаправлениеДеятельности = СтрокаВыхода.НаправлениеДеятельности;
			ЗаписьНоменклатураНоменклатура.КорСклад = Реквизиты.Склад;
			ЗаписьНоменклатураНоменклатура.КорТипЗапасов = СтрокаВыхода.ТипЗапасов;
			ЗаписьНоменклатураНоменклатура.КорВидЗапасов = СтрокаВыхода.ВидЗапасов;
			
			ЗаписьНоменклатураНоменклатура.Количество = РаспределенноеКоличество[Счетчик];
			ЗаписьНоменклатураНоменклатура.КорКоличество = КоличествоВыхода;
			
			ЗаписьНоменклатураНоменклатура.КорИсточникГФУНоменклатуры = СтрокаВыхода.ИсточникГФУНоменклатуры;

			Счетчик = Счетчик + 1;

		КонецЦикла;

		ВсегоДолейКоличествоВыхода = ВсегоДолейКоличествоВыхода - 1;

	КонецЦикла;

	ТаблицаСебестоимостьТоваров.ЗаполнитьЗначения(Реквизиты.Организация, "Организация");
	
	Результат.ТаблицаСебестоимостьТоваров = ТаблицаСебестоимостьТоваров;
	Результат.ТаблицаДвиженияНоменклатураНоменклатура = ТаблицаДвиженияНоменклатураНоменклатура;
	
	Возврат Результат;

КонецФункции

Процедура ЗаполнитьКорАналитикуУчетаНомеклатуры(ТаблицаТоварыОрганизаций, Реквизиты)
	Если Реквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров Тогда
		Возврат;
	КонецЕсли;
	
	Материалы = ТаблицаТоварыОрганизаций.НайтиСтроки(Новый Структура("ВидДвижения", ВидДвиженияНакопления.Расход));
	База = Новый Массив;
	Для Каждого Комплект Из ТаблицаТоварыОрганизаций Цикл
		База.Добавить(?(Комплект.ВидДвижения = ВидДвиженияНакопления.Приход, Комплект.ДоляСтоимости, 0.));
	КонецЦикла;
	
	ВсегоСтрок = ТаблицаТоварыОрганизаций.Количество();
	Для Каждого Материал Из Материалы Цикл
		КоличествоОстаток = Материал.Количество;
		КоличестваМатериала = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(КоличествоОстаток, База, 3);
		Если КоличестваМатериала = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		НомерСтроки = 0;
		Пока НомерСтроки < ВсегоСтрок Цикл
			Комплект = ТаблицаТоварыОрганизаций[НомерСтроки];
			
			Если Комплект.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
				НовоеКоличество = КоличестваМатериала[НомерСтроки];
				КоличествоОстаток = КоличествоОстаток - НовоеКоличество;
				Если КоличествоОстаток > 0. Тогда
					НовыйМатериал = ТаблицаТоварыОрганизаций.Добавить();
					ЗаполнитьЗначенияСвойств(НовыйМатериал, Материал);
				Иначе
					НовыйМатериал = Материал;
				КонецЕсли;
				НовыйМатериал.КорАналитикаУчетаНоменклатуры = Комплект.АналитикаУчетаНоменклатуры;
				НовыйМатериал.Количество = НовоеКоличество;
				Если Не ЗначениеЗаполнено(НовыйМатериал.КорВидЗапасов) Тогда
					НовыйМатериал.КорВидЗапасов = Комплект.ВидЗапасов;
				КонецЕсли;
				
				Если КоличествоОстаток <= 0. Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьВтТаблицаАналитикУчетаПартий(Запрос)
	
	Если НЕ УниверсальныеМеханизмыПартийИСебестоимости.ВременнаяТаблицаСуществует(Запрос, "ВтТаблицаАналитикУчетаПартий") Тогда
		
		ТекстЗапроса = Запрос.Текст; // сохраним текст запроса
		
		Запрос.Текст = ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос);
		Запрос.Выполнить();
		
		Запрос.Текст = ТекстЗапроса; // восстановим текст запроса
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса = Неопределено)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""Товары"" 									КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 				КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО								КАК Поставщик,
	|	НЕОПРЕДЕЛЕНО								КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО 								КАК СтавкаНДС,
	|	ДанныеДокумента.СборкаПодДеятельность  		КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	0											КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Шапка"" 									КАК ИмяТабличнойЧасти,
	|	0 											КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО								КАК Поставщик,
	|	НЕОПРЕДЕЛЕНО								КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО 								КАК СтавкаНДС,
	|	ДанныеДокумента.СборкаПодДеятельность  		КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	0											КАК КодСтроки
	|ИЗ
	|	Документ.СборкаТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.СборкаТоваров";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	
	ЗначенияПараметров = Новый Структура();
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	ПереопределениеРасчетаПараметров.Вставить("ОрдернаяСхемаПриОтгрузке",
		"	ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
		|				И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ");
	ПереопределениеРасчетаПараметров.Вставить("ОрдернаяСхемаПриПоступлении",
		"	ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|				И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ");
	ПереопределениеРасчетаПараметров.Вставить("СборкаПоЗаказу",
		"ТаблицаТовары.Ссылка.ЗаказНаСборку <> ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)");
	ПереопределениеРасчетаПараметров.Вставить("НакладнаяЯвляетсяРаспоряжением",
		"ТаблицаТовары.Ссылка.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)");
	
	Если ИмяРегистра = "ОбеспечениеЗаказов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыКОтгрузке" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ЗаказыНаСборку" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаЗаказыНаСборку(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
	
	ИначеЕсли ИмяРегистра = "ДвиженияСерийТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыНаСкладах" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";

	ИначеЕсли ИмяРегистра = "ТоварыКПоступлению" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ВЗапросеЕстьИсточник = Ложь;
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти


#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПравоДоступа("Изменение", Метаданные.Документы.СборкаТоваров) Тогда
		// Сборка товаров
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "СборкаТоваров";
		КомандаПечати.Представление = НСтр("ru = 'Сборка товаров'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	// Задание на размещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru = 'Задание на размещение товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаРазмещение");

	// Задание на отбор товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru = 'Задание на отбор товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаОтбор");
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-1 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ1";
		КомандаПечати.Представление = НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-3 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ3";
		КомандаПечати.Представление = НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СборкаТоваров") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СборкаТоваров",
				НСтр("ru = 'Сборка товаров'"),
				ПечатьСборкаТоваров(МассивОбъектов, ОбъектыПечати));

	КонецЕсли;

КонецПроцедуры

Функция ПечатьСборкаТоваров(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьДопКолонку = ЗначениеЗаполнено(ДопКолонка);
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"
	|ВЫБРАТЬ
	|	Документ.Ссылка                          КАК Ссылка,
	|	Документ.Номер                           КАК Номер,
	|	Документ.Дата                            КАК Дата,
	|	Документ.Склад                           КАК Склад,
	|	Документ.Организация                     КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад)            КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)      КАК ОрганизацияПредставление,
	|	Документ.Организация.Префикс             КАК Префикс,
	|	Документ.Ответственный.ФизическоеЛицо.Наименование КАК ОтветственныйПредставление,
	|	" + ?(ВыводитьДопКолонку, "Документ.Номенклатура." + ДопКолонка +" КАК ДопКолонка,", "") + "
	|	Документ.Номенклатура                    КАК Номенклатура,
	|	Документ.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	Документ.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
	|
	|	ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|			ПРЕДСТАВЛЕНИЕ(Документ.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ
	|			ПРЕДСТАВЛЕНИЕ(Документ.Упаковка)
	|	КОНЕЦ                                    КАК Упаковка,
	|	Документ.КоличествоУпаковок              КАК Количество,
	|	Документ.ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	Документ.Товары.(
	|
	|		НомерСтроки КАК НомерСтроки,
	|		" + ?(ВыводитьДопКолонку, "Номенклатура." + ДопКолонка +" КАК ДопКолонка,", "") + "
	|		Номенклатура                        КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное     КАК НоменклатураПредставление,
	|		Характеристика.НаименованиеПолное 	КАК ХарактеристикаПредставление,
	|		Характеристика                      КАК Характеристика,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|				ПРЕДСТАВЛЕНИЕССЫЛКИ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ
	|				ПРЕДСТАВЛЕНИЕССЫЛКИ(Упаковка)
	|		КОНЕЦ              КАК Упаковка,
	|		КоличествоУпаковок КАК Количество
	|
	|	) КАК ТаблицаТовары
	|ИЗ
	|	Документ.СборкаТоваров КАК Документ
	|
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО
	|	Дата, Ссылка, НомерСтроки
	|";
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СборкаТоваров";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СборкаТоваров.ПФ_MXL_СборкаТоваров");
	
	Если ВыводитьДопКолонку Тогда
		ОбластьШапки  = "ШапкаСДопКолонкой";
		ОбластьСтроки = "СтрокаСДопКолонкой";
	Иначе
		ОбластьШапки  = "ШапкаТаблицы";
		ОбластьСтроки = "Строка";
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать();
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Вывод заголовка.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, Строка(ВыборкаДокументы.ХозяйственнаяОперация));
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьМакета, ВыборкаДокументы.Ссылка);
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Вывод комплекта.
		Если ВыводитьДопКолонку Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("КомплектКод");
			ОбластьМакета.Параметры.ДопКолонка = ДопКолонка + ":";
			ОбластьМакета.Параметры.ЗначениеДопКолонки = ВыборкаДокументы.ДопКолонка;
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Комплект");
		ОбластьМакета.Параметры.Комплект = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			ВыборкаДокументы.НоменклатураПредставление,
			ВыборкаДокументы.ХарактеристикаПредставление);
		ОбластьМакета.Параметры.Количество = Строка(ВыборкаДокументы.Количество) + " " + ВыборкаДокументы.Упаковка;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Вывод шапки отчета.
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		Если ВыводитьДопКолонку Тогда
			ОбластьМакета.Параметры.ДопКолонка = ДопКолонка;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Вывод строк документа.
		ВыборкаПоСтрокам = ВыборкаДокументы.ТаблицаТовары.Выбрать();
		Пока ВыборкаПоСтрокам.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			ОбластьМакета.Параметры.НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоСтрокам.НоменклатураПредставление,
				ВыборкаПоСтрокам.ХарактеристикаПредставление);
			
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		// Вывод подписей.
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.ОтветственныйПредставление = "/"+ ВыборкаДокументы.ОтветственныйПредставление + "/";
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СборкаТоваров.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(СборкаТоваров.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(СборкаТоваров.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)) КАК ПомещениеПредставление,
	|	СборкаТоваров.Дата КАК Дата,
	|	СборкаТоваров.Номер КАК Номер,
	|	СборкаТоваров.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА СборкаТоваров.Склад.ИспользоватьАдресноеХранениеСправочно
	|				И (НЕ СборкаТоваров.Склад.ИспользоватьАдресноеХранение
	|					ИЛИ СборкаТоваров.Дата < СборкаТоваров.Склад.ДатаНачалаАдресногоХраненияОстатков)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	ВЫБОР
	|		КОГДА СборкаТоваров.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И СборкаТоваров.Дата >= СборкаТоваров.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НарушенаОрдернаяСхема,
	|	СборкаТоваров.Склад.ИспользованиеРабочихУчастков КАК ИспользованиеРабочихУчастков,
	|	NULL КАК ВидОперации,
	|	СборкаТоваров.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры
	|ИЗ
	|	Документ.СборкаТоваров КАК СборкаТоваров
	|ГДЕ
	|	СборкаТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	1 КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10)
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаОтбор""
	|			КОГДА ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаРазмещение""
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	1,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|	И ВЫБОР
	|			КОГДА ТаблицаСерии.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаОтбор""
	|			КОГДА ТаблицаСерии.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаРазмещение""
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8)
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаРазмещение""
	|			КОГДА ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаОтбор""
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|	И ТаблицаСерии.Номенклатура <> ТаблицаСерии.Ссылка.Номенклатура
	|	И ВЫБОР
	|			КОГДА ТаблицаСерии.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаРазмещение""
	|			КОГДА ТаблицаСерии.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаОтбор""
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Упаковка,
	|	ТаблицаТовары.НаборУпаковок КАК НаборУпаковок,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаТоваровСуммированная
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ТаблицаТовары.Ссылка.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваровСуммированная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСуммированная.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСуммированная.Серия КАК Серия,
	|	ТаблицаТоваровСуммированная.Номенклатура.Код КАК Код,
	|	ТаблицаТоваровСуммированная.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТоваровСуммированная.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТоваровСуммированная.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТоваровСуммированная.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТоваровСуммированная.Количество КАК Количество,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТоваровСуммированная.Количество КАК КоличествоУпаковок,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Упаковка) КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТоваровСуммированная.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваровСуммированная.Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТоваровСуммированная.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаТоваровСуммированная.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаТоваровСуммированная.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|	И НЕ ТаблицаТовары.Серия ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаТоваровСуммированная.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ИмяФормы", ПараметрыПечати.ИмяФормы);
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[3];
	РезультатПоУпаковкам 		= МассивРезультатов[4];
	РезультатПоСериям 			= МассивРезультатов[5];
	
	СтруктураДанныхДляПечати 	= Новый Структура();
	
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",          РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("РезультатПоУпаковкам",      РезультатПоУпаковкам);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСериям",         РезультатПоСериям);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 1
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасовОприходование.АналитикаУчетаНоменклатуры,
	|	ВидыЗапасовОприходование.ВидЗапасов
	|ПОМЕСТИТЬ ВтВидыЗапасовОприходование
	|ИЗ
	|	Документ.СборкаТоваров.ВидыЗапасовОприходование КАК ВидыЗапасовОприходование
	|ГДЕ
	|	ВидыЗапасовОприходование.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Склад КАК Склад,
	|	Документ.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.СборкаТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.Склад = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|	И Шапка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	Шапка.Ссылка КАК Ссылка,
	|	ДокументШапка.Склад КАК Склад,
	|	ДокументШапка.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	1 КАК НомерСтроки,
	|	ДокументШапка.Номенклатура КАК Номенклатура,
	|	ДокументШапка.Характеристика КАК Характеристика,
	|	ДокументШапка.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ДокументШапка.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ДокументШапка.Номенклатура.ЕдиницаИзмерения.Представление КАК ВидУпаковки,
	|	ДокументШапка.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ДокументШапка.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ДокументШапка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ИЗ
	|	Документ.СборкаТоваров КАК ДокументШапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ДокументШапка.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|	И Шапка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасовТовары.Ссылка КАК Ссылка,
	|	ВидыЗапасовТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасовОприходование.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Шапка.Склад КАК Склад,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасовТовары.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасовТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВидыЗапасовТовары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасовТовары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ВидыЗапасовТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасовТовары.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасовТовары.Ссылка = Шапка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтВидыЗапасовОприходование КАК ВидыЗапасовОприходование
	|		ПО ВидыЗапасовТовары.АналитикаУчетаНоменклатуры = ВидыЗапасовОприходование.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|	И Шапка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументШапка.Ссылка КАК Ссылка,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ВтВидыЗапасовОприходование.ВидЗапасов КАК ВидЗапасов,
	|	ДокументШапка.Организация КАК Организация,
	|	Аналитика.Склад КАК Склад,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	1 КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ДокументШапка.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ДокументШапка.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ДокументШапка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ИЗ
	|	Документ.СборкаТоваров КАК ДокументШапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ДокументШапка.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ДокументШапка.Ссылка = Шапка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтВидыЗапасовОприходование КАК ВтВидыЗапасовОприходование
	|		ПО ДокументШапка.АналитикаУчетаНоменклатуры = ВтВидыЗапасовОприходование.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|	И Шапка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[7];
	РезультатПоСкладам = МассивРезультатов[8];
	РезультатПоТабличнойЧасти = МассивРезультатов[9];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 3
//
Функция ПолучитьДанныеДляПечатнойФормыМХ3(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Склад КАК Склад,
	|	Документ.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.СборкаТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.Склад = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|	И Шапка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	Шапка.Ссылка КАК Ссылка,
	|	ДокументШапка.Склад КАК Склад,
	|	ДокументШапка.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	1 КАК НомерСтроки,
	|	ДокументШапка.Номенклатура КАК Номенклатура,
	|	ДокументШапка.Характеристика КАК Характеристика,
	|	ДокументШапка.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ДокументШапка.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ДокументШапка.Номенклатура.ЕдиницаИзмерения.Представление КАК ВидУпаковки,
	|	ДокументШапка.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ДокументШапка.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ДокументШапка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ИЗ
	|	Документ.СборкаТоваров КАК ДокументШапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ДокументШапка.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|	И Шапка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Аналитика.Склад КАК Склад,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.СборкаТоваров.ВидыЗапасовСписание КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	ИмяФормы = "Обработка.ЖурналДокументовВнутреннегоТовародвижения.Форма.ФормаСпискаКОформлению";
	
	ОбщиеПараметрыЗапросов = ТекущиеДелаСлужебный.ОбщиеПараметрыЗапросов();
	
	// Определим доступны ли текущему пользователю показатели группы
	Доступность =
		(ОбщиеПараметрыЗапросов.ЭтоПолноправныйПользователь
			Или ПравоДоступа("Просмотр", Метаданные.Документы.СборкаТоваров))
		И (ПравоДоступа("Добавление", Метаданные.Документы.СборкаТоваров)
			Или ПравоДоступа("Изменение", Метаданные.Документы.СборкаТоваров))
		И ПравоДоступа("Просмотр", Метаданные.Документы.ЗаказНаСборку)
		И ПравоДоступа("Чтение",   Метаданные.РегистрыНакопления.ЗаказыНаСборку)
		И ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаСборку")
		И ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыЗаказовНаСборку");
	
	Если НЕ Доступность Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Распоряжение) КАК ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе
	|ИЗ(
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТоварыРаспоряжений.Распоряжение КАК Распоряжение
	|	ИЗ(
	|		ВЫБРАТЬ
	|			Остатки.ЗаказНаСборку  КАК Распоряжение,
	|			Остатки.Номенклатура   КАК Номенклатура,
	|			Остатки.Характеристика КАК Характеристика,
	|			Остатки.ТипСборки      КАК ТипСборки,
	|			Остатки.КодСтроки      КАК КодСтроки,
	|			Остатки.Серия          КАК Серия
	|		ИЗ
	|			РегистрНакопления.ЗаказыНаСборку.Остатки(,) КАК Остатки
	|	ГДЕ
	|		Остатки.КОформлениюОстаток > 0) КАК ТоварыРаспоряжений
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТоварыРаспоряжений.Распоряжение КАК Распоряжение
	|	ИЗ(
	|		ВЫБРАТЬ
	|			Остатки.ДокументОтгрузки КАК Распоряжение,
	|			Остатки.Склад            КАК Склад,
	|			Остатки.Получатель       КАК Получатель,
	|			Остатки.Номенклатура     КАК Номенклатура,
	|			Остатки.Характеристика   КАК Характеристика,
	|			Остатки.Назначение       КАК Назначение,
	|			Остатки.Серия            КАК Серия
	|		ИЗ
	|			РегистрНакопления.ТоварыКОтгрузке.Остатки(, ТИПЗНАЧЕНИЯ(ДокументОтгрузки) В(&ДоступныеТипы)) КАК Остатки
	|	ГДЕ
	|		Остатки.КОтгрузкеОстаток - Остатки.СобраноОстаток <> Остатки.КОформлениюОстаток) КАК ТоварыРаспоряжений
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТоварыРаспоряжений.Распоряжение КАК Распоряжение
	|	ИЗ(
	|		ВЫБРАТЬ
	|			Остатки.ДокументПоступления КАК Распоряжение,
	|			Остатки.Склад               КАК Склад,
	|			Остатки.Отправитель         КАК Отправитель,
	|			Остатки.Номенклатура        КАК Номенклатура,
	|			Остатки.Характеристика      КАК Характеристика,
	|			Остатки.Назначение          КАК Назначение,
	|			Остатки.Серия               КАК Серия
	|		ИЗ
	|			РегистрНакопления.ТоварыКПоступлению.Остатки(, ТИПЗНАЧЕНИЯ(ДокументПоступления) В(&ДоступныеТипы)) КАК Остатки
	|	ГДЕ
	|		Остатки.КОформлениюПоступленийПоОрдерамОстаток <> 0) КАК ТоварыРаспоряжений) КАК Набор";
	
	ДоступныеТипы = Новый Массив();
	ДоступныеТипы.Добавить(Тип("ДокументСсылка.СборкаТоваров"));
	ДоступныеТипы.Добавить(Тип("ДокументСсылка.ЗаказНаСборку"));
	
	Запрос.УстановитьПараметр("ДоступныеТипы", ДоступныеТипы);
	
	Результат = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	// Заполнение дел.
	// ДокументыСборкиРазборки
	ДелоРодитель = ТекущиеДела.Добавить();
	ДелоРодитель.Идентификатор  = "ДокументыСборкиРазборки";
	ДелоРодитель.Представление  = НСтр("ru = 'Документы сборки разборки'");
	ДелоРодитель.ЕстьДела       = Результат.ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе > 0;
	ДелоРодитель.Владелец       = Метаданные.Подсистемы.Склад;
	
	// ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	ПараметрыОтбора.Вставить("ТипНакладной", Тип("ДокументСсылка.СборкаТоваров"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	ПараметрыФормы.Вставить("КлючНазначенияФормы", "СборкиРазборкиТоваров");
	ПараметрыФормы.Вставить("ЭтоТекущиеДела");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе";
	Дело.ЕстьДела       = Результат.ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе > 0;
	Дело.Представление  = НСтр("ru = 'Распоряжения на оформление документов в работе'");
	Дело.Количество     = Результат.ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = "ДокументыСборкиРазборки";
	
КонецПроцедуры

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийШапкиСборки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 8
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеСобранныхКомплектов
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийШапкиРазборки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И &ФактОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеКомплектовДляРазборки
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийТЧСборки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И &ФактОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийТЧРазборки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 8
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеКомплектующихПослеРазборки
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти

#Область ЗаполнениеДокумента

Процедура ПараметрыЗапросаДляСозданияНаОсновании(ПараметрыЗапросов, ИменаЗапросов, ИменаПодзапросов, ДанныеОтбора)
	
	ПараметрыЗапросов.Вставить("МассивЗаказов",    ДанныеОтбора.МассивЗаказов);
	ПараметрыЗапросов.Вставить("ОтобратьПоЗаказу", Истина);
	
	Если ДанныеОтбора.ЗаполнятьПоОрдеру Тогда
		
		ИменаЗапросов.Добавить("ВтЗаказыОтбор");
		ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплект");
		ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплектующие");
		ИменаЗапросов.Добавить("ТаблицаКомплект");
		
		ИменаЗапросов.Добавить("ТаблицаКомплектующие");
		ИменаПодзапросов.Добавить("БлокРегистрЗаказыКомплектующие");
		
		Если ДанныеОтбора.РеквизитыШапки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров Тогда
			ИменаЗапросов.Добавить("ТаблицаСерииРазборано");
		КонецЕсли;
		
	Иначе
		
		ИменаЗапросов.Добавить("ВтЗаказыОтбор");
		ИменаЗапросов.Добавить("ТаблицаКомплект");
		
		ИменаЗапросов.Добавить("ТаблицаКомплектующие");
		ИменаПодзапросов.Добавить("БлокРегистрЗаказыКомплектующие");
		
		Если ДанныеОтбора.РеквизитыШапки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров Тогда
			ИменаЗапросов.Добавить("ТаблицаСерии");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПараметрыЗапросаДляПодбора(ПараметрыЗапросов, ИменаЗапросов, ИменаПодзапросов, ДанныеОтбора)
	
	ПараметрыЗапросов.Вставить("МассивЗаказов",         ДанныеОтбора.МассивЗаказов);
	ПараметрыЗапросов.Вставить("ОтобратьПоЗаказу",      ДанныеОтбора.МассивЗаказов.Количество() = 1);
	ПараметрыЗапросов.Вставить("Регистратор",           ДанныеОтбора.РеквизитыШапки.Ссылка);
	ПараметрыЗапросов.Вставить("Организация",           ДанныеОтбора.РеквизитыШапки.Организация);
	ПараметрыЗапросов.Вставить("Подразделение",         ДанныеОтбора.РеквизитыШапки.Подразделение);
	ПараметрыЗапросов.Вставить("Склад",                 ДанныеОтбора.РеквизитыШапки.Склад);
	ПараметрыЗапросов.Вставить("ХозяйственнаяОперация", ДанныеОтбора.РеквизитыШапки.ХозяйственнаяОперация);
	ПараметрыЗапросов.Вставить("ТоварыНакладной",       ДанныеОтбора.ТоварыНакладной);
	ПараметрыЗапросов.Вставить("УчитыватьСобирается", Истина);
	ПараметрыЗапросов.Вставить("НаправлениеДеятельности", ДанныеОтбора.РеквизитыШапки.НаправлениеДеятельности);
	
	ИменаЗапросов.Добавить("ВтЗаказыОтбор");
	ИменаЗапросов.Добавить("ВтНакладная");
	ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплектующие");
	ИменаЗапросов.Добавить("ТаблицаКомплект");
	ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплект");
	
	ИменаЗапросов.Добавить("ТаблицаКомплектующие");
	ИменаПодзапросов.Добавить("БлокРегистрЗаказыКомплектующие");
	ИменаПодзапросов.Добавить("БлокСторноНакладнаяКомплектующие");
	ИменаПодзапросов.Добавить("БлокРегистрЗаказыКомплект");
	ИменаПодзапросов.Добавить("БлокСторноНакладнаяКомплект");
	ИменаПодзапросов.Добавить("БлокНовыеДвиженияНакладнаяКомплектующие");
	
КонецПроцедуры

Процедура ПараметрыЗапросаДляПерезаполнения(ПараметрыЗапросов, ИменаЗапросов, ИменаПодзапросов, ДанныеОтбора)
	
	ПараметрыЗапросов.Вставить("МассивЗаказов",    ДанныеОтбора.МассивЗаказов);
	ПараметрыЗапросов.Вставить("ОтобратьПоЗаказу", Истина);
	ПараметрыЗапросов.Вставить("Регистратор",      ДанныеОтбора.РеквизитыШапки.Ссылка);
	ПараметрыЗапросов.Вставить("ТоварыНакладной",  ДанныеОтбора.ТоварыНакладной);
	ПараметрыЗапросов.Вставить("УчитыватьСобирается", Истина);
	ПараметрыЗапросов.Вставить("ЗаполнятьПоСобирается", Истина);
	
	ИменаЗапросов.Добавить("ВтЗаказыОтбор");
	ИменаЗапросов.Добавить("ВтНакладная");
	ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплект");
	ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплектующие");
	ИменаЗапросов.Добавить("ТаблицаКомплект");
	
	ИменаЗапросов.Добавить("ТаблицаКомплектующие");
	ИменаПодзапросов.Добавить("БлокРегистрЗаказыКомплектующие");
	ИменаПодзапросов.Добавить("БлокСторноНакладнаяКомплектующие");
	ИменаПодзапросов.Добавить("БлокНовыеДвиженияНакладнаяКомплектующие");
	
	Если ДанныеОтбора.РеквизитыШапки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров Тогда
		ИменаЗапросов.Добавить("ТаблицаСерииРазборано");
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаВременнойТаблицыРаспоряжений()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗаказНаСборку.Ссылка КАК Заказ,
		|	ВЫБОР КОГДА ЗаказНаСборку.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ            КАК ЭтоСборка,
		|	ВЫБОР КОГДА ЗаказНаСборку.СтатусУказанияСерий = 10
		|		И ЗаказНаСборку.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ            КАК СерииУказываютсяВОтдельнойТабличнойЧасти
		|ПОМЕСТИТЬ ВТЗаказыОтбор
		|ИЗ
		|	Документ.ЗаказНаСборку КАК ЗаказНаСборку
		|ГДЕ
		|	ВЫБОР
		|		КОГДА &ОтобратьПоЗаказу ТОГДА
		|			ЗаказНаСборку.Ссылка В (&МассивЗаказов)
		|		ИНАЧЕ
		|			ЗаказНаСборку.Подразделение = &Подразделение
		|			И ЗаказНаСборку.Организация = &Организация
		|			И ЗаказНаСборку.Склад       = &Склад
		|			И ЗаказНаСборку.ХозяйственнаяОперация = &ХозяйственнаяОперация
		|			И ЗаказНаСборку.НаправлениеДеятельности = &НаправлениеДеятельности
		|	КОНЕЦ
		|	И ЗаказНаСборку.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Регистратор КАК Заказ,
		|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ            КАК ЭтоСборка,
		|	ВЫБОР КОГДА ДанныеДокумента.СтатусУказанияСерий = 10
		|		И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ            КАК СерииУказываютсяВОтдельнойТабличнойЧасти
		|ИЗ
		|	Документ.СборкаТоваров КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Регистратор
		|;
		|
		|//////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнойТаблицыНакладной()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Количество            КАК Количество,
		|
		|	Таблица.НомерСтроки           КАК НомерСтроки,
		|	Таблица.Номенклатура          КАК Номенклатура,
		|	Таблица.Характеристика        КАК Характеристика,
		|	Таблица.Назначение            КАК Назначение,
		|	Таблица.Серия                 КАК Серия,
		|
		|	Таблица.КодСтроки             КАК КодСтроки,
		|	Таблица.Упаковка              КАК Упаковка,
		|
		|	Таблица.Заказ                 КАК Заказ
		|
		|ПОМЕСТИТЬ ВТНакладная
		|ИЗ
		|	&ТоварыНакладной КАК Таблица
		|;
		|
		|//////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиРегистраЗаказыКомплектующие()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		ТаблицаОстатки.ЗаказНаСборку КАК Заказ,
		|		ТаблицаОстатки.КодСтроки     КАК КодСтроки,
		|
		|		ТаблицаОстатки.КОформлениюОстаток КАК КоличествоВЗаказе,
		|		0                                 КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		ТаблицаОстатки.Номенклатура        КАК Номенклатура,
		|		ТаблицаОстатки.Характеристика      КАК Характеристика,
		|
		|		ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров) ТОГДА
		|
		|					Таблица.Назначение
		|
		|				КОГДА Таблица.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|						ВЫБОР КОГДА Таблица.Ссылка.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
		|									Таблица.Ссылка.НазначениеТовары
		|								ИНАЧЕ
		|									Таблица.Ссылка.Назначение
		|							КОНЕЦ
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                            КАК Назначение,
		|
		|		ТаблицаОстатки.Серия                 КАК Серия,
		|
		|		ДанныеДокумента.Дата                 КАК Дата,
		|		Таблица.НомерСтроки                  КАК НомерСтроки,
		|		ДанныеДокумента.НачалоСборкиРазборки КАК ДатаОтгрузки,
		|		ЛОЖЬ                                 КАК ПрисутствуетВДокументе,
		|
		|		Таблица.Упаковка                          КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку.Остатки(,
		|				ЗаказНаСборку В(
		|					ВЫБРАТЬ
		|						Таблица.Заказ КАК Заказ
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)) КАК ТаблицаОстатки
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку.Товары КАК Таблица
		|			ПО ТаблицаОстатки.ЗаказНаСборку = Таблица.Ссылка
		|			 И ТаблицаОстатки.КодСтроки = Таблица.КодСтроки
		|
		|			// Использование связи по номенклатуре позволяет всегда получать остатки комплектующих, а не комплектов.
		|			 И ТаблицаОстатки.Номенклатура = Таблица.Номенклатура
		|			 И ТаблицаОстатки.Характеристика = Таблица.Характеристика
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ТаблицаОстатки.ЗаказНаСборку = ДанныеДокумента.Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Таблица.Упаковка",
			"Таблица.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиРегистраЗаказыКомплект()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		ТаблицаОстатки.ЗаказНаСборку КАК Заказ,
		|		ТаблицаОстатки.КодСтроки     КАК КодСтроки,
		|
		|		ТаблицаОстатки.КОформлениюОстаток КАК КоличествоВЗаказе,
		|		0                                 КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		ТаблицаОстатки.Номенклатура        КАК Номенклатура,
		|		ТаблицаОстатки.Характеристика      КАК Характеристика,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				КОГДА ДанныеДокумента.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                            КАК Назначение,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.СтатусУказанияСерий = 10 ТОГДА
		|					ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|				ИНАЧЕ
		|					ТаблицаОстатки.Серия
		|			КОНЕЦ                            КАК Серия,
		|
		|		ДанныеДокумента.Дата                 КАК Дата,
		|		0                                    КАК НомерСтроки,
		|		ДанныеДокумента.НачалоСборкиРазборки КАК ДатаОтгрузки,
		|		ЛОЖЬ                                 КАК ПрисутствуетВДокументе,
		|
		|		ДанныеДокумента.Упаковка             КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку.Остатки(,
		|				ЗаказНаСборку В(
		|					ВЫБРАТЬ
		|						Таблица.Заказ КАК Заказ
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)) КАК ТаблицаОстатки
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ТаблицаОстатки.ЗаказНаСборку = ДанныеДокумента.Ссылка
		|
		|			// Использование связи по номенклатуре позволяет всегда получать остатки комплектов, а не комплектующих.
		|			 И ТаблицаОстатки.Номенклатура   = ДанныеДокумента.Номенклатура
		|			 И ТаблицаОстатки.Характеристика = ДанныеДокумента.Характеристика";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ДанныеДокумента.Упаковка",
			"ДанныеДокумента.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСторноДвиженийНакладнаяКомплектующие()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		ТаблицаСторно.ЗаказНаСборку      КАК Заказ,
		|		ТаблицаСторно.КодСтроки          КАК КодСтроки,
		|
		|		ТаблицаСторно.КОформлению        КАК КоличествоВЗаказе,
		|		0                                КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		ТаблицаСторно.Номенклатура       КАК Номенклатура,
		|		ТаблицаСторно.Характеристика     КАК Характеристика,
		|
		|		ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров) ТОГДА
		|
		|					Таблица.Назначение
		|
		|				КОГДА Таблица.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|						Таблица.Ссылка.НазначениеТовары
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                            КАК Назначение,
		|
		|		ТаблицаСторно.Серия              КАК Серия,
		|		ДанныеДокумента.Дата             КАК Дата,
		|		Таблица.НомерСтроки                  КАК НомерСтроки,
		|		ДанныеДокумента.НачалоСборкиРазборки КАК ДатаОтгрузки,
		|		ЛОЖЬ                                 КАК ПрисутствуетВДокументе,
		|
		|		Таблица.Упаковка                          КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ТаблицаСторно
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку.Товары КАК Таблица
		|			ПО ТаблицаСторно.ЗаказНаСборку = Таблица.Ссылка
		|			 И ТаблицаСторно.КодСтроки = Таблица.КодСтроки
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ТаблицаСторно.ЗаказНаСборку = ДанныеДокумента.Ссылка
		|
		|	ГДЕ
		|		ТаблицаСторно.Регистратор = &Регистратор
		|		И ТаблицаСторно.ЗаказНаСборку В(
		|			ВЫБРАТЬ
		|				Таблица.Заказ КАК Заказ
		|			ИЗ
		|				ВТЗаказыОтбор КАК Таблица)
		|
		|		// Необходимо получать сторно только комплектующих.
		|		И(
		|			ТаблицаСторно.ЗаказНаСборку.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
		|				И ТаблицаСторно.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
		|
		|			ИЛИ ТаблицаСторно.ЗаказНаСборку.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
		|				И ТаблицаСторно.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление))
		|
		|		И ТаблицаСторно.Активность";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Таблица.Упаковка",
			"Таблица.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСторноДвиженийНакладнаяКомплект()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		ТаблицаСторно.ЗаказНаСборку      КАК Заказ,
		|		ТаблицаСторно.КодСтроки          КАК КодСтроки,
		|
		|		ТаблицаСторно.КОформлению        КАК КоличествоВЗаказе,
		|		0                                КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		ТаблицаСторно.Номенклатура       КАК Номенклатура,
		|		ТаблицаСторно.Характеристика     КАК Характеристика,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				КОГДА ДанныеДокумента.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                            КАК Назначение,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.СтатусУказанияСерий = 10 ТОГДА
		|					ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|				ИНАЧЕ
		|					ТаблицаСторно.Серия
		|			КОНЕЦ                            КАК Серия,
		|
		|		ДанныеДокумента.Дата                 КАК Дата,
		|		0                                    КАК НомерСтроки,
		|		ДанныеДокумента.НачалоСборкиРазборки КАК ДатаОтгрузки,
		|		ЛОЖЬ                                 КАК ПрисутствуетВДокументе,
		|
		|		ДанныеДокумента.Упаковка             КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ТаблицаСторно
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ТаблицаСторно.ЗаказНаСборку = ДанныеДокумента.Ссылка
		|
		|	ГДЕ
		|		ТаблицаСторно.Регистратор = &Регистратор
		|		И ТаблицаСторно.ЗаказНаСборку В(
		|			ВЫБРАТЬ
		|				Таблица.Заказ КАК Заказ
		|			ИЗ
		|				ВТЗаказыОтбор КАК Таблица)
		|
		|		// Необходимо получать сторно только комплектов.
		|		И(
		|			ТаблицаСторно.ЗаказНаСборку.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
		|				И ТаблицаСторно.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
		|
		|			ИЛИ ТаблицаСторно.ЗаказНаСборку.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
		|				И ТаблицаСторно.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка))
		|
		|		И ТаблицаСторно.Активность";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ДанныеДокумента.Упаковка",
			"ДанныеДокумента.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияНакладнаяКомплектующие()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		Таблица.Заказ       КАК Заказ,
		|		Таблица.КодСтроки   КАК КодСтроки,
		|		0                   КАК КоличествоВЗаказе,
		|		Таблица.Количество  КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		Таблица.Номенклатура          КАК Номенклатура,
		|		Таблица.Характеристика        КАК Характеристика,
		|		Таблица.Назначение            КАК Назначение,
		|		Таблица.Серия                 КАК Серия,
		|		НЕОПРЕДЕЛЕНО                  КАК Дата,
		|		Таблица.НомерСтроки           КАК НомерСтроки,
		|		НЕОПРЕДЕЛЕНО                  КАК ДатаОтгрузки,
		|		ИСТИНА                        КАК ПрисутствуетВДокументе,
		|
		|		Таблица.Упаковка              КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		ВтНакладная КАК Таблица";
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВЫРАЗИТЬ(Таблица.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения)",
			"ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура)"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиРегистраЗаказыИСторноДокументаКомплект()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	МАКСИМУМ(Набор.Номенклатура)   КАК Номенклатура,
		|	МАКСИМУМ(Набор.Характеристика) КАК Характеристика,
		|
		|	МАКСИМУМ(Набор.Назначение)     КАК Назначение,
		|	МАКСИМУМ(Набор.Упаковка)       КАК Упаковка,
		|
		|	СУММА(Набор.Количество)                   КАК Количество,
		|	СУММА(Набор.Количество)
		|		/ МАКСИМУМ(Набор.УпаковкаКоэффициент) КАК КоличествоУпаковок,
		|	МАКСИМУМ(Набор.УпаковкаКоэффициент) КАК УпаковкаКоэффициент
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТаблицаОстатки.Номенклатура   КАК Номенклатура,
		|		ТаблицаОстатки.Характеристика КАК Характеристика,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				КОГДА ДанныеДокумента.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                                         КАК Назначение,
		|
		|
		|		ДанныеДокумента.Упаковка                          КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент,
		|
		|		ТаблицаОстатки.КОформлениюОстаток КАК Количество
		|
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку.Остатки(,
		|				ЗаказНаСборку В(
		|					ВЫБРАТЬ
		|						Таблица.Заказ КАК Заказ
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)) КАК ТаблицаОстатки
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ТаблицаОстатки.ЗаказНаСборку = ДанныеДокумента.Ссылка
		|
		|			// Использование связи по номенклатуре позволяет всегда получать остатки комплектов, а не комплектующих.
		|			 И ТаблицаОстатки.Номенклатура   = ДанныеДокумента.Номенклатура
		|			 И ТаблицаОстатки.Характеристика = ДанныеДокумента.Характеристика
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТаблицаСторно.Номенклатура   КАК Номенклатура,
		|		ТаблицаСторно.Характеристика КАК Характеристика,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				КОГДА ДанныеДокумента.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                            КАК Назначение,
		|
		|		ДанныеДокумента.Упаковка  КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент,
		|
		|		ТаблицаСторно.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ТаблицаСторно
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ДанныеДокумента.Ссылка = &Регистратор
		|
		|			// Использование связи по номенклатуре позволяет всегда получать остатки комплектов, а не комплектующих.
		|			 И ТаблицаСторно.Номенклатура   = ДанныеДокумента.Номенклатура
		|			 И ТаблицаСторно.Характеристика = ДанныеДокумента.Характеристика
		|	ГДЕ
		|		ТаблицаСторно.Регистратор = &Регистратор
		|		И ТаблицаСторно.ЗаказНаСборку В(
		|			ВЫБРАТЬ
		|				Таблица.Заказ КАК Заказ
		|			ИЗ
		|				ВТЗаказыОтбор КАК Таблица)
		|		И ТаблицаСторно.Активность) КАК Набор
		|;
		|
		|///////////////////////////////////////////////////////
		|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ДанныеДокумента.Упаковка",
			"ДанныеДокумента.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиСерийРазбираемогоКомплектаИСторноДокумента()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Набор.Номенклатура   КАК Номенклатура,
		|	Набор.Характеристика КАК Характеристика,
		|	Набор.Серия          КАК Серия,
		|
		|	СУММА(Набор.Количество) КАК Количество
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТаблицаОстатки.Номенклатура       КАК Номенклатура,
		|		ТаблицаОстатки.Характеристика     КАК Характеристика,
		|		ТаблицаОстатки.Серия              КАК Серия,
		|		ТаблицаОстатки.КОформлениюОстаток КАК Количество
		|
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку.Остатки(,
		|				ЗаказНаСборку В(
		|					ВЫБРАТЬ
		|						Таблица.Заказ КАК Заказ
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)
		|				И ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
		|				И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ТаблицаОстатки
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТаблицаСторно.Номенклатура   КАК Номенклатура,
		|		ТаблицаСторно.Характеристика КАК Характеристика,
		|		ТаблицаСторно.Серия          КАК Серия,
		|		ТаблицаСторно.КОформлению    КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ТаблицаСторно
		|	ГДЕ
		|		ТаблицаСторно.Регистратор = &Регистратор
		|		И ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
		|		И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|		И ТаблицаСторно.ЗаказНаСборку В(
		|			ВЫБРАТЬ
		|				Таблица.Заказ КАК Заказ
		|			ИЗ
		|				ВТЗаказыОтбор КАК Таблица)
		|		И ТаблицаСторно.Активность) КАК Набор
		|СГРУППИРОВАТЬ ПО
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Серия
		|;
		|
		|////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСбораноРазобраноКомплектующие()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаОстатки.ДокументОтгрузки       КАК ЗаказНаСборку,
		|	ТаблицаОстатки.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатки.Характеристика         КАК Характеристика,
		|	ТаблицаОстатки.Назначение             КАК Назначение,
		|	ТаблицаОстатки.Серия                  КАК Серия,
		|	1                                     КАК УпаковкаКоэффициент,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|		КОНЕЦ)                            КАК Собирается,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &ЗаполнятьПоСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано)         КАК Количество
		|ИЗ
		|	ВТЗаказыОтбор КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ТаблицаОстатки
		|		ПО Таблица.Заказ = ТаблицаОстатки.ДокументОтгрузки
		|		 И ТаблицаОстатки.Активность
		|		 И Таблица.ЭтоСборка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОстатки.ДокументОтгрузки,
		|	ТаблицаОстатки.Номенклатура, ТаблицаОстатки.Характеристика, ТаблицаОстатки.Назначение, ТаблицаОстатки.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &УчитыватьСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаОстатки.ДокументПоступления    КАК ЗаказНаСборку,
		|	ТаблицаОстатки.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатки.Характеристика         КАК Характеристика,
		|	ТаблицаОстатки.Назначение             КАК Назначение,
		|	ТаблицаОстатки.Серия                  КАК Серия,
		|	1                                     КАК УпаковкаКоэффициент,
		|	
		|	0                                     КАК Собирается,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					ТаблицаОстатки.КОформлениюПоступленийПоОрдерам
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлениюПоступленийПоОрдерам
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ)                        КАК Количество
		|ИЗ
		|	ВТЗаказыОтбор КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению КАК ТаблицаОстатки
		|		ПО Таблица.Заказ = ТаблицаОстатки.ДокументПоступления
		|		 И ТаблицаОстатки.Активность
		|		 И НЕ Таблица.ЭтоСборка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОстатки.ДокументПоступления,
		|	ТаблицаОстатки.Номенклатура, ТаблицаОстатки.Характеристика, ТаблицаОстатки.Назначение, ТаблицаОстатки.Склад, ТаблицаОстатки.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|						ТаблицаОстатки.КОформлению
		|					ИНАЧЕ
		|						0
		|				КОНЕЦ
		|			+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|						- ТаблицаОстатки.КОформлению
		|					ИНАЧЕ
		|						0
		|				КОНЕЦ) > 0
		|
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСбораноРазобраноКомплект()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаОстатки.ДокументОтгрузки       КАК ЗаказНаСборку,
		|	ТаблицаОстатки.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатки.Характеристика         КАК Характеристика,
		|	ТаблицаОстатки.Назначение             КАК Назначение,
		|	ВЫБОР КОГДА Таблица.СерииУказываютсяВОтдельнойТабличнойЧасти ТОГДА
		|				ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|			ИНАЧЕ
		|				ТаблицаОстатки.Серия
		|		КОНЕЦ КАК Серия,
		|	1                                     КАК УпаковкаКоэффициент,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ)                        КАК Собирается,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &ЗаполнятьПоСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано)         КАК Количество
		|ИЗ
		|	ВТЗаказыОтбор КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ТаблицаОстатки
		|		ПО Таблица.Заказ = ТаблицаОстатки.ДокументОтгрузки
		|		 И ТаблицаОстатки.Активность
		|		 И НЕ Таблица.ЭтоСборка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОстатки.ДокументОтгрузки,
		|	ТаблицаОстатки.Номенклатура, ТаблицаОстатки.Характеристика, ТаблицаОстатки.Назначение,
		|	ВЫБОР КОГДА Таблица.СерииУказываютсяВОтдельнойТабличнойЧасти ТОГДА
		|				ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|			ИНАЧЕ
		|				ТаблицаОстатки.Серия
		|		КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &УчитыватьСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаОстатки.ДокументПоступления    КАК ЗаказНаСборку,
		|	ТаблицаОстатки.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатки.Характеристика         КАК Характеристика,
		|	ТаблицаОстатки.Назначение             КАК Назначение,
		|	ТаблицаОстатки.Серия                  КАК Серия,
		|	1                                     КАК УпаковкаКоэффициент,
		|	
		|	0                                     КАК Собирается,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					ТаблицаОстатки.КОформлениюПоступленийПоОрдерам
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлениюПоступленийПоОрдерам
		|				ИНАЧЕ
		|					0
		|		КОНЕЦ)                            КАК Количество
		|ИЗ
		|	ВТЗаказыОтбор КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению КАК ТаблицаОстатки
		|		ПО Таблица.Заказ = ТаблицаОстатки.ДокументПоступления
		|		 И ТаблицаОстатки.Активность
		|		 И Таблица.ЭтоСборка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОстатки.ДокументПоступления,
		|	ТаблицаОстатки.Номенклатура, ТаблицаОстатки.Характеристика, ТаблицаОстатки.Назначение, ТаблицаОстатки.Склад, ТаблицаОстатки.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|						ТаблицаОстатки.КОформлениюПоступленийПоОрдерам
		|					ИНАЧЕ
		|						0
		|				КОНЕЦ
		|			+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|						- ТаблицаОстатки.КОформлениюПоступленийПоОрдерам
		|					ИНАЧЕ
		|						0
		|				КОНЕЦ) > 0
		|
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРазбораноСерии()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаОстатки.ДокументОтгрузки       КАК ЗаказНаСборку,
		|	ТаблицаОстатки.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатки.Характеристика         КАК Характеристика,
		|	ТаблицаОстатки.Назначение             КАК Назначение,
		|	ТаблицаОстатки.Серия                  КАК Серия,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ)                        КАК Собирается,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &ЗаполнятьПоСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано)         КАК Количество
		|ИЗ
		|	ВТЗаказыОтбор КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ТаблицаОстатки
		|		ПО Таблица.Заказ = ТаблицаОстатки.ДокументОтгрузки
		|		 И ТаблицаОстатки.Активность
		|		 И Таблица.СерииУказываютсяВОтдельнойТабличнойЧасти
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОстатки.ДокументОтгрузки,
		|	ТаблицаОстатки.Номенклатура, ТаблицаОстатки.Характеристика, ТаблицаОстатки.Назначение,
		|	ТаблицаОстатки.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &УчитыватьСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано) > 0
		|
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбъединения(Имена, Тексты)
	
	ТекстОбъединения = "";
	ЭтоПервыйБлок = Истина;
	
	Для Каждого Имя Из Имена Цикл
		
		Если ЭтоПервыйБлок Тогда
			ЭтоПервыйБлок = Ложь;
		Иначе
			
			ТекстОбъединения = ТекстОбъединения + "
			                                      |
			                                      |	ОБЪЕДИНИТЬ ВСЕ
			                                      |
			                                      |";
			
		КонецЕсли;
		
		ТекстОбъединения = ТекстОбъединения + Тексты[Имя];
		
	КонецЦикла;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Набор.Заказ             КАК ЗаказНаСборку,
		|	Набор.КодСтроки         КАК КодСтроки,
		|
		|	Набор.Номенклатура          КАК Номенклатура,
		|	Набор.Характеристика        КАК Характеристика,
		|	Набор.Серия                 КАК Серия,
		|	МАКСИМУМ(Набор.Назначение)  КАК Назначение,
		|	МАКСИМУМ(Набор.Дата)                  КАК Дата,
		|	МАКСИМУМ(Набор.НомерСтроки)           КАК НомерСтроки,
		|	МАКСИМУМ(Набор.ДатаОтгрузки)          КАК ДатаОтгрузки,
		|	МАКСИМУМ(Набор.ПрисутствуетВДокументе) КАК ПрисутствуетВДокументе,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				Набор.Упаковка
		|			ИНАЧЕ
		|				НЕОПРЕДЕЛЕНО
		|		КОНЕЦ)                             КАК УпаковкаНакладной,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ
		|				Набор.Упаковка
		|		КОНЕЦ)                             КАК УпаковкаЗаказа,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				Набор.УпаковкаКоэффициент
		|			ИНАЧЕ
		|				НЕОПРЕДЕЛЕНО
		|		КОНЕЦ)                             КАК УпаковкаНакладнойКоэффициент,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ
		|				Набор.УпаковкаКоэффициент
		|		КОНЕЦ)                             КАК УпаковкаЗаказаКоэффициент,
		|
		|
		|	СУММА(Набор.КоличествоВЗаказе)        КАК КоличествоВЗаказе,
		|	СУММА(Набор.КоличествоВНакладной)     КАК КоличествоВНакладной
		|
		|ИЗ ТекстОбъединения КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Заказ, Набор.КодСтроки,
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Серия,
		|	ВЫБОР КОГДА Набор.КодСтроки <> 0 ТОГДА
		|				0
		|			ИНАЧЕ
		|				Набор.НомерСтроки
		|		КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	СУММА(Набор.КоличествоВЗаказе) > 0 ИЛИ СУММА(Набор.КоличествоВНакладной) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата, Заказ, НомерСтроки
		|;
		|
		|/////////////////////////////////////////////////////////////////////
		|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстОбъединения", "(" + ТекстОбъединения + ")");
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаОтгрузить()
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ЗаказНаСборку.Товары КАК ТоварыЗаказа
		|ГДЕ
		|	ТоварыЗаказа.ВариантОбеспечения В(
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
		|	И ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И ТоварыЗаказа.Ссылка.Проведен
		|	И ТоварыЗаказа.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
		|	И НЕ ТоварыЗаказа.Отменено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ЗаказНаСборку КАК ТоварыЗаказа
		|ГДЕ
		|	ТоварыЗаказа.ВариантОбеспечения В(
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
		|	И ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И ТоварыЗаказа.Проведен
		|	И ТоварыЗаказа.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК ТоварыЗаказа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Документ
		|			ПО Документ.Ссылка = ТоварыЗаказа.Ссылка
		|ГДЕ
		|	Документ.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|	И Документ.Ссылка В(&МассивСсылок)
		|	И Документ.Проведен
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаРеквизитовШапки()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	МИНИМУМ(Заказ.Статус)                   КАК Статус,
		|	МИНИМУМ(Заказ.Проведен)                 КАК Проведен,
		|	МИНИМУМ(Заказ.Организация)              КАК Организация,
		|	МИНИМУМ(Заказ.ВариантКомплектации)      КАК ВариантКомплектации,
		|	МИНИМУМ(Заказ.Склад)                    КАК Склад,
		|	МИНИМУМ(Заказ.Подразделение)            КАК Подразделение,
		|	МИНИМУМ(Заказ.ХозяйственнаяОперация)    КАК ХозяйственнаяОперация,
		|	МИНИМУМ(Заказ.Сделка)                   КАК Сделка,
		|	МИНИМУМ(Заказ.НаправлениеДеятельности)  КАК НаправлениеДеятельности
		|ИЗ
		|	Документ.ЗаказНаСборку КАК Заказ
		|ГДЕ
		|	Заказ.Ссылка В(&МассивСсылок)
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаНаличияОрдеров()

	ТекстЗапроса =
		// Или есть хотя бы один расходный или приходный ордер или склад неордерный на приемку и отгрузку одновременно.
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.ОстаткиИОбороты(,,,, ДокументОтгрузки В (&МассивСсылок)) КАК ТаблицаОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО СпрСклады.Ссылка = ТаблицаОбороты.Склад
		|ГДЕ
		|	ТаблицаОбороты.КОтгрузкеПриход > 0 И(
		|		ТаблицаОбороты.КОтгрузкеРасход > 0
		|		ИЛИ (НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриОтгрузке
		|				ИЛИ СпрСклады.ДатаНачалаОрдернойСхемыПриОтгрузке > &НачалоТекущегоДня)
		|			И (НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриПоступлении
		|				ИЛИ СпрСклады.ДатаНачалаОрдернойСхемыПриПоступлении > &НачалоТекущегоДня))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.ОстаткиИОбороты(,,,, ДокументПоступления В (&МассивСсылок)) КАК ТаблицаОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО СпрСклады.Ссылка = ТаблицаОбороты.Склад
		|ГДЕ
		|	ТаблицаОбороты.КОформлениюОрдеровПриход > 0 И(
		|		ТаблицаОбороты.КОформлениюОрдеровРасход > 0
		|		ИЛИ (НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриОтгрузке
		|				ИЛИ СпрСклады.ДатаНачалаОрдернойСхемыПриОтгрузке > &НачалоТекущегоДня)
		|			И (НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриПоступлении
		|				ИЛИ СпрСклады.ДатаНачалаОрдернойСхемыПриПоступлении > &НачалоТекущегоДня))";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОтчетСостояниеВыполненияДокумента

Функция ВременнаяТаблицаТоварыРаспоряжениеНакладнаяОтгруженоДляОтчетаСостояниеВыполнения()
	
	ТекстЗапроса = "
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументТовары.Номенклатура КАК Номенклатура,
		|	ДокументТовары.Характеристика КАК Характеристика,
		|	СУММА(ДокументТовары.Количество) КАК Количество,
		|	0 КАК СуммаСНДС,
		|	ДокументТовары.Серия КАК Серия,
		|	ДокументТовары.Ссылка.Склад КАК Склад,
		|	ВтДокументы.ДокументСсылка КАК Ссылка
		|ПОМЕСТИТЬ ВТТоварыРаспоряженияОтгружено
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК ДокументТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументы КАК ВтДокументы
		|		ПО (ВтДокументы.ДокументСсылка = ДокументТовары.Ссылка)
		|ГДЕ
		|	ДокументТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
		|	И ВтДокументы.Проведен
		|	И ДокументТовары.Ссылка.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДокументТовары.Номенклатура,
		|	ДокументТовары.Характеристика,
		|	ДокументТовары.Серия,
		|	ДокументТовары.Ссылка.Склад,
		|	ВтДокументы.ДокументСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументТовары.Номенклатура КАК Номенклатура,
		|	ДокументТовары.Характеристика КАК Характеристика,
		|	ДокументТовары.Количество КАК Количество,
		|	0 КАК СуммаСНДС,
		|	ДокументТовары.Серия КАК Серия,
		|	ДокументТовары.Склад КАК Склад,
		|	ВтДокументы.ДокументСсылка КАК Ссылка
		|ИЗ
		|	Документ.СборкаТоваров КАК ДокументТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументы КАК ВтДокументы
		|		ПО (ВтДокументы.ДокументСсылка = ДокументТовары.Ссылка)
		|ГДЕ
		|	ВтДокументы.Проведен
		|	И ДокументТовары.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
		|	И ДокументТовары.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|;
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаТоварыПоступлениеДляОтчетаСостояниеВыполнения()
	
	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Набор.ДокументПоступления КАК ДокументПоступления,
		|	Набор.Номенклатура        КАК Номенклатура,
		|	Набор.Характеристика      КАК Характеристика,
		|	Набор.Склад               КАК Склад,
		|
		|	СУММА(Набор.Принимается) КАК Принимается,
		|	СУММА(Набор.Принято)     КАК Принято,
		|	СУММА(Набор.Принять)     КАК Принять,
		|	СУММА(Набор.Поступило)   КАК Поступило,
		|
		|	СУММА(Набор.КПоступлению) КАК КПоступлению,
		|	СУММА(Набор.Оформить)     КАК Оформить,
		|	СУММА(Набор.Оформлено)    КАК Оформлено,
		|
		|	МАКСИМУМ(Набор.ОрдернаяСхемаПриПоступлении) КАК ОрдернаяСхемаПриПоступлении
		|
		|ПОМЕСТИТЬ ВТТоварыПоступление
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТоварыКПоступлению.ДокументПоступления КАК ДокументПоступления,
		|		ТоварыКПоступлению.Номенклатура        КАК Номенклатура,
		|		ТоварыКПоступлению.Характеристика      КАК Характеристика,
		|		ТоварыКПоступлению.Склад               КАК Склад,
		|
		|		ТоварыКПоступлению.ПринимаетсяКонечныйОстаток  КАК Принимается,
		|		ТоварыКПоступлению.КОформлениюОрдеровРасход    КАК Принято,
		|		ТоварыКПоступлению.КОформлениюОрдеровКонечныйОстаток КАК Принять,
		|		ТоварыКПоступлению.КОформлениюОрдеровРасход    КАК Поступило,
		|
		|		0                                              КАК КПоступлению,
		|		0                                              КАК Оформить,
		|		0                                              КАК Оформлено,
		|
		|		ВЫБОР КОГДА ТоварыКПоступлению.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|						И &ТекущаяДата >= ТоварыКПоступлению.Склад.ДатаНачалаОрдернойСхемыПриПоступлении ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ                                      КАК ОрдернаяСхемаПриПоступлении
		|	ИЗ
		|		РегистрНакопления.ТоварыКПоступлению.ОстаткиИОбороты( , , , ,
		|				ДокументПоступления В(
		|					ВЫБРАТЬ
		|						ВтДокументы.ДокументСсылка
		|					ИЗ
		|						ВтДокументы КАК ВтДокументы)) КАК ТоварыКПоступлению
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТоварыКОформлению.Ссылка             КАК ДокументПоступления,
		|		ТоварыКОформлению.Номенклатура       КАК Номенклатура,
		|		ТоварыКОформлению.Характеристика     КАК Характеристика,
		|		ТоварыКОформлению.Ссылка.Склад       КАК Склад,
		|
		|		0                                    КАК Принимается,
		|		0                                    КАК Принято,
		|		0                                    КАК Принять,
		|		0                                    КАК Поступило,
		|
		|		ТоварыКОформлению.Количество         КАК КПоступлению,
		|		0                                    КАК Оформить,
		|		ТоварыКОформлению.Количество         КАК Оформлено,
		|
		|		ВЫБОР КОГДА ТоварыКОформлению.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|						И &ТекущаяДата >= ТоварыКОформлению.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриПоступлении ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ                                      КАК ОрдернаяСхемаПриПоступлении
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК ТоварыКОформлению
		|ГДЕ
		|	ТоварыКОформлению.Ссылка.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|	И ТоварыКОформлению.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
		|	И ТоварыКОформлению.Ссылка В(
		|		ВЫБРАТЬ
		|			ВтДокументы.ДокументСсылка
		|		ИЗ
		|			ВтДокументы КАК ВтДокументы)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТоварыКОформлению.Ссылка             КАК ДокументПоступления,
		|		ТоварыКОформлению.Номенклатура       КАК Номенклатура,
		|		ТоварыКОформлению.Характеристика     КАК Характеристика,
		|		ТоварыКОформлению.Склад              КАК Склад,
		|
		|		0                                    КАК Принимается,
		|		0                                    КАК Принято,
		|		0                                    КАК Принять,
		|		0                                    КАК Поступило,
		|
		|		ТоварыКОформлению.Количество         КАК КПоступлению,
		|		0                                    КАК Оформить,
		|		ТоварыКОформлению.Количество         КАК Оформлено,
		|
		|		ВЫБОР КОГДА ТоварыКОформлению.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|						И &ТекущаяДата >= ТоварыКОформлению.Склад.ДатаНачалаОрдернойСхемыПриПоступлении ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ                                      КАК ОрдернаяСхемаПриПоступлении
		|ИЗ
		|	Документ.СборкаТоваров КАК ТоварыКОформлению
		|ГДЕ
		|	ТоварыКОформлению.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|	И ТоварыКОформлению.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
		|	И ТоварыКОформлению.Ссылка В(
		|		ВЫБРАТЬ
		|			ВтДокументы.ДокументСсылка
		|		ИЗ
		|			ВтДокументы КАК ВтДокументы)) КАК Набор
		|СГРУППИРОВАТЬ ПО
		|	Набор.ДокументПоступления,
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Склад
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаТоварыРаспоряженияПоступлениеНакладнаяДляОтчетаСостояниеВыполнения()
	
	ТекстЗапроса = "
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументТовары.Номенклатура КАК Номенклатура,
		|	ДокументТовары.Характеристика КАК Характеристика,
		|	СУММА(ДокументТовары.Количество) КАК Количество,
		|	0 КАК СуммаСНДС,
		|	ДокументТовары.Ссылка.Склад КАК Склад,
		|	ВтДокументы.ДокументСсылка КАК Ссылка
		|ПОМЕСТИТЬ ВТТоварыРаспоряженияПоступление
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК ДокументТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументы КАК ВтДокументы
		|		ПО (ВтДокументы.ДокументСсылка = ДокументТовары.Ссылка)
		|ГДЕ
		|	ВтДокументы.Проведен
		|	И ДокументТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
		|	И ДокументТовары.Ссылка.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументТовары.Номенклатура,
		|	ДокументТовары.Характеристика,
		|	ДокументТовары.Ссылка.Склад,
		|	ВтДокументы.ДокументСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументТовары.Номенклатура КАК Номенклатура,
		|	ДокументТовары.Характеристика КАК Характеристика,
		|	ДокументТовары.Количество КАК Количество,
		|	0 КАК СуммаСНДС,
		|	ДокументТовары.Склад КАК Склад,
		|	ВтДокументы.ДокументСсылка КАК Ссылка
		|ИЗ
		|	Документ.СборкаТоваров КАК ДокументТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументы КАК ВтДокументы
		|		ПО (ВтДокументы.ДокументСсылка = ДокументТовары.Ссылка)
		|ГДЕ
		|	ВтДокументы.Проведен
		|	И ДокументТовары.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
		|	И ДокументТовары.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|;
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#Область ОбработчикиОбновления_11_4_1

// Регистрирует данные для обработчика обновления УТ 11.4.1.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Набор.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		СборкаТоваров.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.СборкаТоваров КАК СборкаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.ВидыЗапасовОприходование КАК ВидыЗапасов
	|			ПО СборкаТоваров.Ссылка = ВидыЗапасов.Ссылка
	|	ГДЕ
	|		СборкаТоваров.Проведен
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СборкаТоваров.Ссылка
	|	
	|	ИМЕЮЩИЕ
	|		КОЛИЧЕСТВО(ВидыЗапасов.Ссылка) = 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокумента.Ссылка
	|	ИЗ
	|		Документ.СборкаТоваров КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокумента.Ссылка
	|	ИЗ
	|		Документ.СборкаТоваров КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|			ПО ТаблицаДокумента.Ссылка = ТаблицаТовары.Ссылка
	|				И ТаблицаДокумента.Назначение = ТаблицаТовары.Назначение
	|	ГДЕ
	|		ТаблицаДокумента.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
	|		И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|		И ТаблицаДокумента.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		И ТаблицаДокумента.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И ЕСТЬNULL(ТаблицаДокумента.Назначение.НаправлениеДеятельности.УчетЗатрат, ЛОЖЬ)
	|		И НЕ ТаблицаТовары.Ссылка ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВложенныйЗапрос.Ссылка
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СборкаТоваровВидыЗапасовОприходование.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|			СборкаТоваровВидыЗапасовОприходование.Количество КАК Количество,
	|			СборкаТоваровВидыЗапасовОприходование.Ссылка КАК Ссылка
	|		ИЗ
	|			Документ.СборкаТоваров.ВидыЗапасовОприходование КАК СборкаТоваровВидыЗапасовОприходование
	|		ГДЕ
	|			СборкаТоваровВидыЗапасовОприходование.Ссылка.Проведен
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СборкаТоваровТовары.АналитикаУчетаНоменклатуры,
	|			-СборкаТоваровТовары.Количество,
	|			СборкаТоваровТовары.Ссылка
	|		ИЗ
	|			Документ.СборкаТоваров.Товары КАК СборкаТоваровТовары
	|		ГДЕ
	|			СборкаТоваровТовары.Ссылка.Проведен
	|			И СборкаТоваровТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СборкаТоваров.АналитикаУчетаНоменклатуры,
	|			-СборкаТоваров.Количество,
	|			СборкаТоваров.Ссылка
	|		ИЗ
	|			Документ.СборкаТоваров КАК СборкаТоваров
	|		ГДЕ
	|			СборкаТоваров.Проведен
	|			И СборкаТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|		ВложенныйЗапрос.Ссылка
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВложенныйЗапрос.Количество) <> 0) КАК Набор");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяДокумента = "Документ.СборкаТоваров";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДопПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДопПараметры.ИмяВременнойТаблицы = "ВТСсылкиДляОбработки";
	ДопПараметры.ДополнительныеИсточникиДанных.Вставить("Назначение");
	ДопПараметры.ДополнительныеИсточникиДанных.Вставить("Номенклатура");
	ДопПараметры.ДополнительныеИсточникиДанных.Вставить("Товары.Номенклатура");
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяДокумента,
		МенеджерВременныхТаблиц, ДопПараметры);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ДопПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДопПараметры.ИмяВременнойТаблицы = "ВтЗаблокированныеСсылки";
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Справочник.НаправленияДеятельности", МенеджерВременныхТаблиц, ДопПараметры);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КОбработке.Ссылка КАК Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	КОбработке.Ссылка.Номенклатура.ВестиУчетПоГТД КАК КомплектВестиУчетПоГТД,
	|	ЕСТЬNULL(НаправленияДеятельности.Ссылка, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|ИЗ
	|	ВТСсылкиДляОбработки КАК КОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|		ПО КОбработке.Ссылка.Назначение.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
	|			И (НаправленияДеятельности.УчетЗатрат)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтЗаблокированныеСсылки КАК Заблокированно
	|		ПО КОбработке.Ссылка.Назначение.НаправлениеДеятельности = Заблокированно.Ссылка
	|ГДЕ
	|	Заблокированно.Ссылка ЕСТЬ NULL");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ВариантПриемкиКонстанта = Константы.ВариантПриемкиТоваров.Получить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			Объект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			
			Если Объект <> Неопределено Тогда
				
				ОбъектИзменен = Ложь;
				
				// Заполнение новой ТЧ Виды запасов оприходование
				Если Объект.Проведен И Объект.ВидыЗапасовОприходование.Количество() = 0 Тогда
					
					Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров Тогда
						
						// Для операции сборки АналитикаУчетаНоменклатуры ранее не заполнялась
						ШапкаДокумента = Новый ТаблицаЗначений;
						ШапкаДокумента.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
						ШапкаДокумента.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
						ШапкаДокумента.Колонки.Добавить("Назначение", Новый ОписаниеТипов("СправочникСсылка.Назначения"));
						ШапкаДокумента.Колонки.Добавить("АналитикаУчетаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
						ШапкаДокумента.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
						ШапкаДокумента.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
						ШапкаДокумента.Колонки.Добавить("КодСтроки", Новый ОписаниеТипов("Число"));
						ШапкаДокумента.Колонки.Добавить("СтатусУказанияСерий", Новый ОписаниеТипов("Число"));
						ШапкаДокумента.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
						
						ЗаполнитьЗначенияСвойств(ШапкаДокумента.Добавить(), Объект);
						ШапкаДокумента[0].НомерСтроки = 1;
						
						МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(
							Перечисления.ХозяйственныеОперации.СборкаТоваров, Объект.Склад, Объект.Подразделение, Неопределено);
						ПараметрыЗаполненияКлючей = РегистрыСведений.АналитикаУчетаНоменклатуры.ПараметрыЗаполненияКлючейАналитики();
						ПараметрыЗаполненияКлючей.СоздаватьВКлючи = Ложь;
						РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ШапкаДокумента, МестаУчета,,, ПараметрыЗаполненияКлючей);
						Объект.АналитикаУчетаНоменклатуры = ШапкаДокумента[0].АналитикаУчетаНоменклатуры;
						
						Если ЗначениеЗаполнено(Объект.НоменклатураОсновногоКомпонента) И Выборка.КомплектВестиУчетПоГТД Тогда
							Для каждого СтрокаВидыЗапасов Из Объект.ВидыЗапасовСписание Цикл
								Если СтрокаВидыЗапасов.УдалитьКоличествоКомплекта <> 0 Тогда
									НоваяСтрокаЗапаса = Объект.ВидыЗапасовОприходование.Добавить();
									НоваяСтрокаЗапаса.ВидЗапасов = Объект.УдалитьВидЗапасов;
									НоваяСтрокаЗапаса.НомерГТД   = СтрокаВидыЗапасов.НомерГТД;
									НоваяСтрокаЗапаса.Количество = СтрокаВидыЗапасов.УдалитьКоличествоКомплекта;
									НоваяСтрокаЗапаса.АналитикаУчетаНоменклатуры = Объект.АналитикаУчетаНоменклатуры;
									
									СтрокаВидыЗапасов.УдалитьКоличествоКомплекта = 0;
								КонецЕсли;
							КонецЦикла;
						Иначе
							НоваяСтрокаЗапаса = Объект.ВидыЗапасовОприходование.Добавить();
							НоваяСтрокаЗапаса.ВидЗапасов = Объект.УдалитьВидЗапасов;
							НоваяСтрокаЗапаса.НомерГТД   = Объект.УдалитьНомерГТД;
							НоваяСтрокаЗапаса.Количество = Объект.Количество;
							НоваяСтрокаЗапаса.АналитикаУчетаНоменклатуры = Объект.АналитикаУчетаНоменклатуры;
						КонецЕсли;
						
						Объект.УдалитьНомерГТД = Неопределено;
						Объект.УдалитьВидЗапасов = Неопределено;
						
					Иначе
						
						Для каждого СтрокаТовары Из Объект.Товары Цикл
							НоваяСтрокаЗапаса = Объект.ВидыЗапасовОприходование.Добавить();
							НоваяСтрокаЗапаса.ВидЗапасов = СтрокаТовары.УдалитьВидЗапасов;
							НоваяСтрокаЗапаса.НомерГТД   = СтрокаТовары.УдалитьНомерГТД;
							НоваяСтрокаЗапаса.Количество = СтрокаТовары.Количество;
							НоваяСтрокаЗапаса.АналитикаУчетаНоменклатуры = СтрокаТовары.АналитикаУчетаНоменклатуры;
							
							СтрокаТовары.УдалитьНомерГТД = Неопределено;
							СтрокаТовары.УдалитьВидЗапасов = Неопределено;
						КонецЦикла;
						
					КонецЕсли;
					
					ОбъектИзменен = Истина;
					
				КонецЕсли;
				
				// Заполнение реквизита Вариант приемки товаров
				Если Объект.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.ПустаяСсылка() Тогда
					Объект.ВариантПриемкиТоваров = ВариантПриемкиКонстанта;
					ОбъектИзменен = Истина;
				КонецЕсли;
				
				// Заполнение реквизита Направление деятельности из выбранного назначения собираемого комплекта
				Если Объект.ЗаказНаСборку.Пустая() И Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров
					И Объект.НаправлениеДеятельности.Пустая() И ЗначениеЗаполнено(Объект.Назначение)
					И ЗначениеЗаполнено(Выборка.НаправлениеДеятельности)
					И Объект.Товары.Найти(Объект.Назначение, "Назначение") <> Неопределено Тогда
					Объект.НаправлениеДеятельности = Выборка.НаправлениеДеятельности;
					ОбъектИзменен = Истина;
				КонецЕсли;
				
				// Исправление количества в ТЧ Виды запасов оприходование
				Если Объект.Проведен Тогда
					
					ТребуетсяОбновитьВидыЗапасовОприходование = Ложь;
					ТаблицаПроверки = Объект.ВидыЗапасовОприходование.Выгрузить(,"АналитикаУчетаНоменклатуры, Количество");
					ТаблицаПроверки.Колонки.Добавить("КоличествоТовары", Новый ОписаниеТипов("Число"));
					Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров Тогда
						НоваяСтрока = ТаблицаПроверки.Добавить();
						НоваяСтрока.АналитикаУчетаНоменклатуры = Объект.АналитикаУчетаНоменклатуры;
						НоваяСтрока.КоличествоТовары = Объект.Количество;
					Иначе
						Для каждого СтрокаТовары Из Объект.Товары Цикл
							НоваяСтрока = ТаблицаПроверки.Добавить();
							НоваяСтрока.АналитикаУчетаНоменклатуры = СтрокаТовары.АналитикаУчетаНоменклатуры;
							НоваяСтрока.КоличествоТовары = СтрокаТовары.Количество;
						КонецЦикла;
					КонецЕсли;
					ТаблицаПроверки.Свернуть("АналитикаУчетаНоменклатуры", "Количество, КоличествоТовары");
					Для каждого СтрокаПроверки Из ТаблицаПроверки Цикл
						Если СтрокаПроверки.Количество <> СтрокаПроверки.КоличествоТовары Тогда
							ТребуетсяОбновитьВидыЗапасовОприходование = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Если ТребуетсяОбновитьВидыЗапасовОприходование Тогда
						
						ВидыЗапасов = Объект.ВидыЗапасовОприходование.Выгрузить(,"АналитикаУчетаНоменклатуры, ВидЗапасов");
						Объект.ВидыЗапасовОприходование.Очистить();
						
						Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров Тогда
							ВидЗапасов = ВидыЗапасов[0].ВидЗапасов;
							
							НоваяСтрока = Объект.ВидыЗапасовОприходование.Добавить();
							НоваяСтрока.ВидЗапасов                 = ВидЗапасов;
							НоваяСтрока.АналитикаУчетаНоменклатуры = Объект.АналитикаУчетаНоменклатуры;
							НоваяСтрока.Количество                 = Объект.Количество;
						ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров Тогда
							Для каждого СтрокаТовары Из Объект.Товары Цикл
								ВидЗапасов = ВидыЗапасов.Найти(СтрокаТовары.АналитикаУчетаНоменклатуры, "АналитикаУчетаНоменклатуры").ВидЗапасов;
								
								НоваяСтрока = Объект.ВидыЗапасовОприходование.Добавить();
								НоваяСтрока.ВидЗапасов                 = ВидЗапасов;
								НоваяСтрока.АналитикаУчетаНоменклатуры = СтрокаТовары.АналитикаУчетаНоменклатуры;
								НоваяСтрока.Количество                 = СтрокаТовары.Количество;
							КонецЦикла;
						КонецЕсли;
						
						Объект.РаспределитьНомераГТД();
						ОбъектИзменен = Истина;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ОбъектИзменен Тогда
					ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
				Иначе
					ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				КонецЕсли;
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяДокумента);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
