#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
КонецПроцедуры

// Добавляет команду создания документа "Корректировка налогообложения НДС".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
	
КонецПроцедуры

#Область ЗакрытиеМесяца

// Процедура отменяет проведение документов "Корректировка налогообложения НДС товаров".
//
// Параметры:
// 	ПериодРегистрации - Дата - Месяц регистрации документа корректировки.
//
Процедура ОтменитьКорректировкуНалогообложенияНДС(ПериодРегистрации) Экспорт
	
	ПартионныйУчетВключен  = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВключен(НачалоМесяца(ПериодРегистрации));
	ПоследнийМесяцКвартала = (КонецКвартала(ПериодРегистрации) = КонецМесяца(ПериодРегистрации));
	Если НЕ (ПартионныйУчетВключен И ПоследнийМесяцКвартала) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Операция.Ссылка
	|ИЗ
	|	Документ.КорректировкаНалогообложенияНДСПартийТоваров КАК Операция
	|ГДЕ
	|	Операция.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Операция.Проведен
	|");
	Запрос.УстановитьПараметр("ДатаНачала",    НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодРегистрации));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ДополнительныеСвойства.Вставить(УниверсальныеМеханизмыПартийИСебестоимости.ИмяСлужебногоДополнительногоСвойстваОбъекта());
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЦикла;
	
КонецПроцедуры

// Процедура анализирует необходимость формирования документов по корректировке налогообложения НДС
// для партий товаров с истекающим периодом принятия НДС к вычету
// (для налогообложения по фактическому использованию)
//
// Параметры:
//	ПериодРегистрации - Дата - закрываемый месяц
//	СозданаКорректировка - Булево - В параметр устанавливается признак, что корректировка выполнена.
//
Процедура СкорректироватьНалогообложениеНДС(ПериодРегистрации, СозданаКорректировка) Экспорт
	
	ПартионныйУчетВключен  = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВключен(НачалоМесяца(ПериодРегистрации));
	ПоследнийМесяцКвартала = (КонецКвартала(ПериодРегистрации) = КонецМесяца(ПериодРегистрации));
	
	// Формируем документ в последнем месяце отчетного периода и только при партионном учете
	Если НЕ (ПартионныйУчетВключен И ПоследнийМесяцКвартала) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	тПартии.Организация	КАК Организация,
	|	ИСТИНА				КАК ФормироватьДвижения
	|ПОМЕСТИТЬ ВтПартии
	|	
	|ИЗ (
	|	ВЫБРАТЬ
	|		Остатки.Организация						КАК Организация,
	|		Остатки.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ДокументПоступления				КАК ДокументПоступления,
	|		Остатки.ВидЗапасов						КАК ВидЗапасов,
	|		Остатки.АналитикаУчетаПартий			КАК АналитикаУчетаПартий,
	|		Остатки.КоличествоОстаток				КАК Количество
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоСледКвартала) КАК Остатки
	|	
	|		// Дата документа поступления должны быть в определенном диапазоне
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|		ПО
	|			Партии.Период МЕЖДУ &НачПериода И &КонПериода
	|			И Партии.Регистратор = Остатки.ДокументПоступления
	|			И Партии.Регистратор = Партии.ДокументПоступления
	|			И Партии.АналитикаУчетаПартий <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|	
	|		// Аналитика учета партий должны быть с налогообложением по фактическому использованию
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаПартий КАК АУП
	|		ПО
	|			АУП.КлючАналитики = Остатки.АналитикаУчетаПартий
	|			И АУП.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|
	|	ГДЕ
	|		Остатки.КоличествоОстаток > 0
	|
	|) КАК тПартии
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка							КАК Организация,
	|	ЕСТЬNULL(Партии.ФормироватьДвижения, ЛОЖЬ)	КАК ФормироватьДвижения,
	|	ЕСТЬNULL(КорНДС.Проведен, ЛОЖЬ)				КАК Проведен,
	|	ЕСТЬNULL(КорНДС.Ссылка, НЕОПРЕДЕЛЕНО)		КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтПартии КАК Партии
	|	ПО
	|		Организации.Ссылка = Партии.Организация
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаНалогообложенияНДСПартийТоваров КАК КорНДС
	|	ПО
	|		Организации.Ссылка = КорНДС.Организация
	|		И КорНДС.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		И НЕ КорНДС.ПометкаУдаления
	|
	|ГДЕ
	|	НЕ (Партии.Организация ЕСТЬ NULL И КорНДС.Организация ЕСТЬ NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Партии.Организация ВОЗР,
	|	КорНДС.Проведен УБЫВ
	|");
	
	НачалоСледНалПериода = (КонецМесяца(ПериодРегистрации) + 1);
	
	Запрос.УстановитьПараметр("НачалоСледКвартала",	КонецМесяца(ПериодРегистрации) + 1);
	Запрос.УстановитьПараметр("НачПериода",			ДобавитьМесяц(НачалоСледНалПериода, -36));
	Запрос.УстановитьПараметр("КонПериода",			ДобавитьМесяц(КонецКвартала(НачалоСледНалПериода), -36));
	Запрос.УстановитьПараметр("ДатаНачала",			НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаОкончания",		КонецМесяца(ПериодРегистрации));
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТекОрганизация = Неопределено;
	МассивОрганизаций = Новый Массив;
	СозданаКорректировка = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ТекОрганизация = Выборка.Организация Тогда
			ТекОрганизация = Выборка.Организация;
			МассивОрганизаций.Добавить(ТекОрганизация);
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			Корректировка = Выборка.Ссылка.ПолучитьОбъект();
		Иначе
			Корректировка = Документы.КорректировкаНалогообложенияНДСПартийТоваров.СоздатьДокумент();
		КонецЕсли;
		
		Корректировка.ДополнительныеСвойства.Вставить(УниверсальныеМеханизмыПартийИСебестоимости.ИмяСлужебногоДополнительногоСвойстваОбъекта());
		
		Если Выборка.ФормироватьДвижения Тогда
			
			Корректировка.Дата = КонецКвартала(ПериодРегистрации);
			Корректировка.Организация = Выборка.Организация;
			Корректировка.ПеремещениеПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
			Корректировка.Записать(РежимЗаписиДокумента.Проведение);
			
			СозданаКорректировка = Истина;
			
		ИначеЕсли Выборка.Проведен Тогда
			
			Корректировка.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПроводкиРеглУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса cоздания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат ""
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Корректировка.Ссылка,
	|	Корректировка.Дата,
	|	Корректировка.Организация,
	|	Корректировка.ПеремещениеПодДеятельность
	|ИЗ
	|	Документ.КорректировкаНалогообложенияНДСПартийТоваров КАК Корректировка
	|ГДЕ
	|	Корректировка.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	НачалоСледНалПериода = (КонецКвартала(Реквизиты.Дата) + 1);
	
	Запрос.УстановитьПараметр("Период",						Реквизиты.Дата);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",		Перечисления.ХозяйственныеОперации.ПеремещениеТоваров);
	Запрос.УстановитьПараметр("ПоФактИспользованию",		Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
	Запрос.УстановитьПараметр("Организация",				Реквизиты.Организация);
	Запрос.УстановитьПараметр("ПеремещениеПодДеятельность",	Реквизиты.ПеремещениеПодДеятельность);
	Запрос.УстановитьПараметр("НачПериода",					ДобавитьМесяц(НачалоСледНалПериода, -36));
	Запрос.УстановитьПараметр("КонПериода",					КонецКвартала(ДобавитьМесяц(НачалоСледНалПериода, -36)));
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
КонецПроцедуры

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Организация								КАК Организация,
	|	ВидыЗапасов.НомерСтроки						КАК НомерСтроки,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ВидыЗапасов.ВидЗапасовПолучателя
	|	КОНЕЦ										КАК ВидЗапасовПолучателя,
	|	ВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	Аналитика.Номенклатура						КАК Номенклатура,
	|	Аналитика.Характеристика					КАК Характеристика,
	|	Аналитика.Серия								КАК Серия,
	|	Аналитика.Склад								КАК Склад,
	|	ВидыЗапасов.ДокументПоступления				КАК ДокументПоступления,
	|	ВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ВидыЗапасов.Стоимость						КАК Стоимость,
	|	ВидыЗапасов.СтоимостьБезНДС					КАК СтоимостьБезНДС,
	|	ВидыЗапасов.СтоимостьРегл					КАК СтоимостьРегл,
	|	ВидыЗапасов.НДСРегл							КАК НДСРегл,
	|	ВидыЗапасов.ПостояннаяРазница				КАК ПостояннаяРазница,
	|	ВидыЗапасов.ВременнаяРазница				КАК ВременнаяРазница,
	|	ВидыЗапасов.Количество						КАК Количество
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.КорректировкаНалогообложенияНДСПартийТоваров.ВидыЗапасов КАК ВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1													КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)				КАК ВидДвижения,
	|	&Период												КАК Период,
	|	&Организация										КАК Организация,
	|	&Организация										КАК ОрганизацияОтгрузки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Номенклатура						КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика					КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Количество						КАК Количество,
	|	ТаблицаВидыЗапасов.НомерГТД							КАК НомерГТД,
	|	&ХозяйственнаяОперация								КАК ХозяйственнаяОперация,
	|	&ПеремещениеПодДеятельность							КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя				КАК КорВидЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	НЕ &ПартионныйУчетВерсии22
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2													КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)				КАК ВидДвижения,
	|	&Период												КАК Период,
	|	&Организация										КАК Организация,
	|	&Организация										КАК ОрганизацияОтгрузки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Номенклатура						КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика					КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя				КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Количество						КАК Количество,
	|	ТаблицаВидыЗапасов.НомерГТД							КАК НомерГТД,
	|	&ХозяйственнаяОперация								КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО										КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК КорВидЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	НЕ &ПартионныйУчетВерсии22
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК КорРазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВидыЗапасов.ВидЗапасовПолучателя
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК КорВидЗапасов,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	&ПеремещениеПодДеятельность КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Порядок,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВидыЗапасов.ВидЗапасовПолучателя
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА &ПеремещениеПодДеятельность
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок, НомерСтрокиДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
