#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОснованииОтчетаПоКомиссии_Вознаграждение(КомандыСозданияНаОсновании);
	
	Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОснованииОтчетаПоКомиссии_Вознаграждение(КомандыСозданияНаОсновании);
	
	НоваяКоманда = Документы.ПоступлениеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.Представление = НСтр("ru = 'Поступление безналичных ДС комитенту (оплата от комиссионера)'");
	КонецЕсли;
	
	НоваяКоманда = Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.Представление = НСтр("ru = 'Заявка на расходование ДС комиссионера (оплата комитенту)'");
	КонецЕсли;
	
	НоваяКоманда = Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.Представление = НСтр("ru = 'Списание безналичных ДС комиссионера (оплата комитенту)'");
	КонецЕсли;
	
	Документы.ПоступлениеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОснованииОтчетаПоКомиссии_Вознаграждение(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Отчет по комиссии между организациями".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациями) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациями.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациями);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОформленияОтчетов(КомандыОтчетов);
	
КонецПроцедуры

// Процедура заполняет массивы реквизитов, зависимых от способа расчета вознаграждения.
//
// Параметры:
//	СпособРасчетаВознаграждения - ПеречислениеСсылка.СпособыРасчетаКомиссионногоВознаграждения - Выбранный способ расчета вознаграждения
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от способа расчета вознаграждения
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранном способе расчета вознаграждения
//
Процедура ЗаполнитьИменаРеквизитовПоСпособуРасчетаВознаграждения(СпособРасчетаВознаграждения, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ПроцентВознаграждения");
	МассивВсехРеквизитов.Добавить("СуммаВознаграждения");
	МассивВсехРеквизитов.Добавить("СтавкаНДСВознаграждения");
	МассивВсехРеквизитов.Добавить("СуммаНДСВознаграждения");
	МассивВсехРеквизитов.Добавить("УдержатьВознаграждение");
	МассивВсехРеквизитов.Добавить("Услуга");
	МассивВсехРеквизитов.Добавить("Товары.СуммаВознаграждения");
	
	МассивРеквизитовОперации = Новый Массив;
	Если СпособРасчетаВознаграждения <> Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается Тогда
		МассивРеквизитовОперации.Добавить("ПроцентВознаграждения");
		МассивРеквизитовОперации.Добавить("СуммаВознаграждения");
		МассивРеквизитовОперации.Добавить("СтавкаНДСВознаграждения");
		МассивРеквизитовОперации.Добавить("СуммаНДСВознаграждения");
		МассивРеквизитовОперации.Добавить("УдержатьВознаграждение");
		МассивРеквизитовОперации.Добавить("Услуга");
		МассивРеквизитовОперации.Добавить("Товары.СуммаВознаграждения");
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет реквизиты документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Комиссионер КАК Комиссионер,
	|	ДанныеДокумента.Комиссионер КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.УдержатьВознаграждение ТОГДА
	|   	ДанныеДокумента.СуммаДокумента - ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|
	|	ДанныеДокумента.НачалоПериода КАК НачалоПериода,
	|	ДанныеДокумента.КонецПериода КАК КонецПериода,
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПорядокРасчетов КАК ПорядокРасчетов,
	|	ДанныеДокумента.ДоговорПродажи КАК ДоговорПродажи,
	|	ДанныеДокумента.ДоговорПокупки КАК ДоговорПокупки
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
		ОрганизацияПолучатель = Выборка.ОрганизацияПолучатель;
		ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
		СуммаДокумента = Выборка.СуммаДокумента;
		СуммаВзаиморасчетов = ?(Выборка.Проведен, Выборка.СуммаВзаиморасчетов, 0);
		СуммаВознаграждения = ?(Выборка.Проведен, Выборка.СуммаВознаграждения, 0);
		НачалоПериода = Выборка.НачалоПериода;
		КонецПериода = Выборка.КонецПериода;
		РасчетыЧерезОтдельногоКонтрагента = Выборка.РасчетыЧерезОтдельногоКонтрагента;
		Партнер = ?(РасчетыЧерезОтдельногоКонтрагента, Выборка.Партнер, Справочники.Партнеры.НашеПредприятие);
		Контрагент = ?(РасчетыЧерезОтдельногоКонтрагента, Выборка.Контрагент, Выборка.Организация);
		НаправлениеДеятельности = Выборка.НаправлениеДеятельности;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		ОрганизацияПолучатель = Справочники.Организации.ПустаяСсылка();
		ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
		СуммаДокумента = 0;
		СуммаВзаиморасчетов = 0;
		СуммаВознаграждения = 0;
		НачалоПериода = Неопределено;
		КонецПериода = Неопределено;
		РасчетыЧерезОтдельногоКонтрагента = Ложь;
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		НаправлениеДеятельности = Справочники.НаправленияДеятельности.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура();
	СтруктураРеквизитов.Вставить("Дата", Дата);
	СтруктураРеквизитов.Вставить("Организация", ОрганизацияПолучатель);
	СтруктураРеквизитов.Вставить("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
	СтруктураРеквизитов.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями);
	СтруктураРеквизитов.Вставить("СуммаДокумента", СуммаДокумента);
	СтруктураРеквизитов.Вставить("СуммаВзаиморасчетов", СуммаВзаиморасчетов);
	СтруктураРеквизитов.Вставить("СуммаВознаграждения", СуммаВознаграждения);
	СтруктураРеквизитов.Вставить("ОрганизацияОтправитель", Организация);
	СтруктураРеквизитов.Вставить("ОрганизацияПолучатель", ОрганизацияПолучатель);
	СтруктураРеквизитов.Вставить("НачалоПериода", НачалоПериода);
	СтруктураРеквизитов.Вставить("КонецПериода", КонецПериода);
	СтруктураРеквизитов.Вставить("РасчетыЧерезОтдельногоКонтрагента", РасчетыЧерезОтдельногоКонтрагента);
	СтруктураРеквизитов.Вставить("Партнер", Партнер);
	СтруктураРеквизитов.Вставить("Контрагент", Контрагент);
	СтруктураРеквизитов.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	
	Возврат СтруктураРеквизитов;
КонецФункции

// Возвращает текст запроса для расчета необходимости ввода счета-фактуры выданного.
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДляРасчетаНеобходимостиСчетаФактуры() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка      КАК Основание,
	|	ДанныеДокумента.Дата        КАК ДатаДокумента,
	|	ДанныеДокумента.Комиссионер КАК Организация,
	|	ДанныеДокумента.Контрагент  КАК Контрагент,
	|	ДанныеДокумента.Валюта      КАК Валюта,
	|	&ТипСФВыданный              КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетовФактуры.СчетФактура ЕСТЬ NULL 
	|				И ДанныеДокумента.Проведен
	|				И %ТекстУсловия%
	|			ТОГДА
	|				ВЫБОР 
	|					КОГДА УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС
	|							И ДанныеДокумента.НалогообложениеНДС <> &ПродажаОблагаетсяЕНВД
	|						ТОГДА ИСТИНА
	|					КОГДА ДанныеДокумента.СтавкаНДСВознаграждения <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                       КАК Требуется
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактуры КАК ТаблицаСчетовФактуры
	|		ПО ДанныеДокумента.Ссылка = ТаблицаСчетовФактуры.Основание
	|			И ДанныеДокумента.Комиссионер = ТаблицаСчетовФактуры.Организация
	|			И (ВЫБОР 
	|					КОГДА	ТаблицаСчетовФактуры.Контрагент.Ссылка = NULL 
	|						ИЛИ ТаблицаСчетовФактуры.Контрагент = Значение(Справочник.Контрагенты.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ДанныеДокумента.Контрагент = ТаблицаСчетовФактуры.Контрагент
	|			  КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитика КАК УчетнаяПолитика
	|		ПО ДанныеДокумента.Ссылка = УчетнаяПолитика.Ссылка
	|			И ДанныеДокумента.Организация = УчетнаяПолитика.Организация
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивОснований)
	|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка      КАК Основание,
	|	ДанныеДокумента.Дата        КАК ДатаДокумента,
	|	ДанныеДокумента.Комиссионер КАК Организация,
	|	ДанныеДокумента.Организация КАК Контрагент,
	|	ДанныеДокумента.Валюта      КАК Валюта,
	|	&ТипСФВыданный              КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетовФактуры.СчетФактура ЕСТЬ NULL 
	|				И ДанныеДокумента.Проведен
	|				И %ТекстУсловия%
	|			ТОГДА
	|				ВЫБОР 
	|					КОГДА УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС
	|							И ДанныеДокумента.НалогообложениеНДС <> &ПродажаОблагаетсяЕНВД
	|						ТОГДА ИСТИНА
	|					КОГДА ДанныеДокумента.СтавкаНДСВознаграждения <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                       КАК Требуется
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактуры КАК ТаблицаСчетовФактуры
	|		ПО ДанныеДокумента.Ссылка = ТаблицаСчетовФактуры.Основание
	|			И ДанныеДокумента.Комиссионер = ТаблицаСчетовФактуры.Организация
	|			И (ВЫБОР 
	|					КОГДА	ТаблицаСчетовФактуры.Контрагент.Ссылка = NULL
	|						ИЛИ ТаблицаСчетовФактуры.Контрагент = Значение(Справочник.Контрагенты.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ДанныеДокумента.Организация = ТаблицаСчетовФактуры.Контрагент
	|			  КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитика КАК УчетнаяПолитика
	|		ПО ДанныеДокумента.Ссылка = УчетнаяПолитика.Ссылка
	|			И ДанныеДокумента.Организация = УчетнаяПолитика.Организация
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивОснований)
	|	И НЕ ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстУсловия%", ТекстУсловияТребуетсяСчетФактура());
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст условия запроса, по которым документу требуется счет-фактура.
// Условие применяется для таблица "ДанныеДокумента", содержащую реквизиты документа.
// Применяется для счетов-фактуры, выставленных на сумму вознаграждения.
//
//	Возвращаемое значение:
//		Строка - текст условия запроса
//
Функция ТекстУсловияТребуетсяСчетФактура() Экспорт
	
	ТекстУсловия = "ДанныеДокумента.СуммаВознаграждения <> 0";
	
	Возврат ТекстУсловия;
	
КонецФункции

// Возвращает текст условия запроса, по которым документу требуется счет-фактура полученный (посредника).
// Условие применяется для таблица "ДанныеДокумента", содержащую реквизиты документа.
//
//	Возвращаемое значение:
//		Строка - текст условия запроса
//
Функция ТекстУсловияТребуетсяСчетФактураПосредника() Экспорт
	
	ТекстУсловия = ТекстУсловияТребуетсяСчетФактура() + "
	|И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|И ДанныеДокумента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)";
	
	Возврат ТекстУсловия;
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаУслугиКОформлениюОтчетовПринципалу(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Организация КАК Комитент,
	|	ДанныеДокумента.Комиссионер КАК Комиссионер,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.Услуга КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ДоговорПродажи КАК ДоговорПродажи,
	|	ДанныеДокумента.ДоговорПокупки КАК ДоговорПокупки,
	|	ДанныеДокумента.Менеджер КАК Менеджер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеДокумента.Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ ДанныеДокумента.КонецПериода > ДанныеДокумента.Дата
	|			ТОГДА ДанныеДокумента.Дата
	|		ИНАЧЕ ДанныеДокумента.КонецПериода
	|	КОНЕЦ КАК КонецПериода,
	|	ДанныеДокумента.СтавкаНДСВознаграждения,
	|	ДанныеДокумента.СуммаНДСВознаграждения,
	|	ДанныеДокумента.СуммаВознаграждения,
	|	ДанныеДокумента.ГруппаФинансовогоУчета,
	|	ЕСТЬNULL(Договоры.Ссылка, ДанныеДокумента.Ссылка) КАК ОбъектРасчетов,
	|	ДанныеДокумента.НаправлениеДеятельности,
	|	ДанныеДокумента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента 
	|			ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовКлиент.Ссылка, ДанныеДокумента.Ссылка)
	|		ИНАЧЕ ЕСТЬNULL(Договоры.Ссылка, ДанныеДокумента.Ссылка)
	|	КОНЕЦ                                             КАК ОбъектРасчетовКлиент,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента 
	|			ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовПоставщик.Ссылка, ДанныеДокумента.Ссылка)
	|		ИНАЧЕ ЕСТЬNULL(Договоры.Ссылка, ДанныеДокумента.Ссылка)
	|	КОНЕЦ                                             КАК ОбъектРасчетовПоставщик,
	|	ДанныеДокумента.ДатаПлатежа,
	|	ДанныеДокумента.УдержатьВознаграждение
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыМеждуОрганизациями КАК Договоры
	|	ПО ДанныеДокумента.Договор = Договоры.Ссылка
	|		И Договоры.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентовКлиент
	|	ПО ДанныеДокумента.ДоговорПродажи = ДоговорыКонтрагентовКлиент.Ссылка
	|		И ДоговорыКонтрагентовКлиент.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентовПоставщик
	|	ПО ДанныеДокумента.ДоговорПокупки = ДоговорыКонтрагентовПоставщик.Ссылка
	|		И ДоговорыКонтрагентовПоставщик.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	ИдентификаторМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ОтчетПоКомиссииМеждуОрганизациями");
	
	ИнформацияПоКомитенту = НСтр("ru='Отчет от ""%Комитент%""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	ИнформацияПоКомитенту = СтрЗаменить(ИнформацияПоКомитенту, "%Комитент%", Реквизиты.Комитент);
	
	ИнформацияПоКомиссионеру = НСтр("ru='Отчет перед ""%Комиссионер%""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	ИнформацияПоКомиссионеру = СтрЗаменить(ИнформацияПоКомиссионеру, "%Комиссионер%", Реквизиты.Комиссионер);
	
	НомерДокумента          = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Реквизиты.Номер);
	НомерВходящегоДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Реквизиты.НомерВходящегоДокумента);
	
	Запрос.УстановитьПараметр("Период",                                          Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",                                           Реквизиты.Номер);
	Запрос.УстановитьПараметр("КонецПериода",                                    КонецДня(Реквизиты.КонецПериода));
	Запрос.УстановитьПараметр("Валюта",                                          Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Комитент",                                        Реквизиты.Комитент);
	Запрос.УстановитьПараметр("Комиссионер",                                     Реквизиты.Комиссионер);
	Запрос.УстановитьПараметр("Подразделение",                                   Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Номенклатура",                                    Реквизиты.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",                                  Реквизиты.Характеристика);
	Запрос.УстановитьПараметр("Серия",                                           Реквизиты.Серия);
	Запрос.УстановитьПараметр("Назначение",                                      Реквизиты.Назначение);
	Запрос.УстановитьПараметр("НалогообложениеНДС",                              Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",                           Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями);
	Запрос.УстановитьПараметр("СтавкаНДСВознаграждения",                         Реквизиты.СтавкаНДСВознаграждения);
	Запрос.УстановитьПараметр("СуммаНДСВознаграждения",                          Реквизиты.СуммаНДСВознаграждения);
	Запрос.УстановитьПараметр("СуммаВознаграждения",                             Реквизиты.СуммаВознаграждения);	
	Запрос.УстановитьПараметр("ОтчетКомиссионера",                               Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);
	Запрос.УстановитьПараметр("ОтчетКомитенту",                                  Перечисления.ХозяйственныеОперации.ОтчетКомитенту);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",                  Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",                      Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("РасчетыЧерезОтдельногоКонтрагента",               Реквизиты.РасчетыЧерезОтдельногоКонтрагента);
	Запрос.УстановитьПараметр("Контрагент",                                      Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Договор",                                         Реквизиты.Договор);
	Запрос.УстановитьПараметр("ДоговорПродажи",                                  Реквизиты.ДоговорПродажи);
	Запрос.УстановитьПараметр("ДоговорПокупки",                                  Реквизиты.ДоговорПокупки);
	Запрос.УстановитьПараметр("ОбъектРасчетовКлиент",                            Реквизиты.ОбъектРасчетовКлиент);
	Запрос.УстановитьПараметр("ОбъектРасчетовПоставщик",                         Реквизиты.ОбъектРасчетовПоставщик);
	Запрос.УстановитьПараметр("РасчетыПоНакладнымКлиент",                        Реквизиты.ОбъектРасчетовКлиент = ДокументСсылка);
	Запрос.УстановитьПараметр("РасчетыПоНакладнымПоставщик",                     Реквизиты.ОбъектРасчетовПоставщик = ДокументСсылка);
	Запрос.УстановитьПараметр("Менеджер",                                        Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("Партнер",                                         Реквизиты.Партнер);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета",                          Реквизиты.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ИспользоватьПродажуАгентскихУслуг",               ПолучитьФункциональнуюОпцию("ИспользоватьПродажуАгентскихУслуг"));
	Запрос.УстановитьПараметр("НаправлениеДеятельности",                         Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ДатаВходящегоДокумента",                          Реквизиты.ДатаВходящегоДокумента);
	Запрос.УстановитьПараметр("Комментарий",                                     Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("СуммаДокумента",                                  Реквизиты.СуммаДокумента);
	Запрос.УстановитьПараметр("Проведен",                                        Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",                                 Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",                         ИдентификаторМетаданных);
	Запрос.УстановитьПараметр("ИнформацияПоКомитенту",                           ИнформацияПоКомитенту);
	Запрос.УстановитьПараметр("ИнформацияПоКомиссионеру",                        ИнформацияПоКомиссионеру);
	Запрос.УстановитьПараметр("НомерДокумента",                                  НомерДокумента);
	Запрос.УстановитьПараметр("НомерВходящегоДокумента",                         НомерВходящегоДокумента);
	Запрос.УстановитьПараметр("ДатаПлатежа",                                     Реквизиты.ДатаПлатежа);
	Запрос.УстановитьПараметр("УдержатьВознаграждение",                          Реквизиты.УдержатьВознаграждение);

	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПредварительный = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура	 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение	 КАК Назначение,
	|	ТаблицаТовары.Серия			 КАК Серия,
	|	ТаблицаТовары.Склад			 КАК Склад
	|ИЗ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Аналитика.Номенклатура КАК Номенклатура,
	|		Аналитика.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		&Серия КАК Серия,
	|		&Комиссионер КАК Склад
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		Услуги.Номенклатура КАК Номенклатура,
	|		Услуги.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		&Серия КАК Серия,
	|		ЕСТЬNULL(Услуги.Характеристика.Принципал, СпрНоменклатура.Принципал) КАК Склад
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК Услуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|			ПО СпрНоменклатура.Ссылка = Услуги.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО Услуги.Номенклатура = Аналитика.Номенклатура
	|			И Услуги.Характеристика = Аналитика.Характеристика
	|			И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|			И &Серия = Аналитика.Серия
	|			И ЕСТЬNULL(Услуги.Характеристика.Принципал, СпрНоменклатура.Принципал) = Аналитика.Склад
	|	ГДЕ
	|		Услуги.Ссылка = &Ссылка
	|		И ЕСТЬNULL(Услуги.Характеристика.Принципал, СпрНоменклатура.Принципал) <> НЕОПРЕДЕЛЕНО
	|		И ЕСТЬNULL(Услуги.Характеристика.Принципал, СпрНоменклатура.Принципал) <> &Комиссионер
	|		И Аналитика.КлючАналитики ЕСТЬ NULL
	|		И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		Услуги.Номенклатура КАК Номенклатура,
	|		Услуги.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		&Серия КАК Серия,
	|		&Подразделение КАК Склад
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК Услуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО СпрНоменклатура.Ссылка = Услуги.Номенклатура
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Услуги.Номенклатура = Аналитика.Номенклатура
	|			И Услуги.Характеристика = Аналитика.Характеристика
	|			И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|			И &Серия = Аналитика.Серия
	|			И &Подразделение = Аналитика.Склад
	|	ГДЕ
	|		Услуги.Ссылка = &Ссылка
	|		И (ЕСТЬNULL(Услуги.Характеристика.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|			ИЛИ ЕСТЬNULL(Услуги.Характеристика.Принципал, СпрНоменклатура.Принципал) = Услуги.Ссылка.Организация)
	|		И Аналитика.КлючАналитики ЕСТЬ NULL
	|		И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		Аналитика.Номенклатура КАК Номенклатура,
	|		Аналитика.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		&Серия КАК Серия,
	|		ВидыЗапасовКомитента.ВладелецТовара КАК Склад
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.ВидыЗапасов КАК Строки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовПродавца
	|			ПО ВидыЗапасовПродавца.Ссылка = Строки.ВидЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитента
	|			ПО ВидыЗапасовКомитента.Ссылка = Строки.ВидЗапасовКомитента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.КлючАналитики = Строки.АналитикаУчетаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
	|			ПО АналитикаКомитента.Номенклатура = Аналитика.Номенклатура
	|			И АналитикаКомитента.Характеристика = Аналитика.Характеристика
	|			И АналитикаКомитента.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И АналитикаКомитента.Серия = Аналитика.Серия
	|			И АналитикаКомитента.Склад = ВидыЗапасовКомитента.ВладелецТовара
	|	ГДЕ
	|		Строки.Ссылка = &Ссылка
	|		И АналитикаКомитента.Номенклатура ЕСТЬ NULL
	|		И Не ВидыЗапасовПродавца.РеализацияЗапасовДругойОрганизации
	|		И ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И ТаблицаТовары.Назначение = Аналитика.Назначение
	|		И ТаблицаТовары.Серия = Аналитика.Серия
	|		И ТаблицаТовары.Склад = Аналитика.Склад
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.Серия
	|");
	
	ЗапросПредварительный.УстановитьПараметр("Ссылка",          Запрос.Параметры.Ссылка);
	ЗапросПредварительный.УстановитьПараметр("Комиссионер",     Запрос.Параметры.Комиссионер);
	ЗапросПредварительный.УстановитьПараметр("Подразделение",   Запрос.Параметры.Подразделение);
	ЗапросПредварительный.УстановитьПараметр("Серия",           Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	Выборка = ЗапросПредварительный.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Запрос.Параметры.Валюта, 
		Неопределено, // ВалютаВзаиморасчетов
		Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",           Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",          Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрыАналитикВзаиморасчетов(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаКомитентКомиссионер")
		И Запрос.Параметры.Свойство("АналитикаКомиссионерКомитент")
		И Запрос.Параметры.Свойство("АналитикаВзаиморасчетовКомитентКомиссионер")
		И Запрос.Параметры.Свойство("АналитикаВзаиморасчетовКомиссионерКомитент") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураКомитентКомиссионер = Новый Структура();
	СтруктураКомитентКомиссионер.Вставить("Организация", Запрос.Параметры.Комитент);
	СтруктураКомитентКомиссионер.Вставить("Партнер", Справочники.Партнеры.НашеПредприятие);
	СтруктураКомитентКомиссионер.Вставить("Контрагент", Запрос.Параметры.Комиссионер);
	СтруктураКомитентКомиссионер.Вставить("Договор", Запрос.Параметры.Договор);
	СтруктураКомитентКомиссионер.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	АналитикаКомитентКомиссионер = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКомитентКомиссионер);
	
	СтруктураКомиссионерКомитент = Новый Структура();
	СтруктураКомиссионерКомитент.Вставить("Организация", Запрос.Параметры.Комиссионер);
	СтруктураКомиссионерКомитент.Вставить("Партнер", Справочники.Партнеры.НашеПредприятие);
	СтруктураКомиссионерКомитент.Вставить("Контрагент", Запрос.Параметры.Комитент);
	СтруктураКомиссионерКомитент.Вставить("Договор", Запрос.Параметры.Договор);
	СтруктураКомиссионерКомитент.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	АналитикаКомиссионерКомитент = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКомиссионерКомитент);

	Если Запрос.Параметры.РасчетыЧерезОтдельногоКонтрагента Тогда
		
		СтруктураКомитентКомиссионер.Вставить("Организация", Запрос.Параметры.Комитент);
		СтруктураКомитентКомиссионер.Вставить("Партнер", Запрос.Параметры.Партнер);
		СтруктураКомитентКомиссионер.Вставить("Контрагент", Запрос.Параметры.Контрагент);
		СтруктураКомитентКомиссионер.Вставить("Договор", Запрос.Параметры.ДоговорПродажи);
		СтруктураКомитентКомиссионер.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
		
		АналитикаВзаиморасчетовКомитентКомиссионер = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКомитентКомиссионер);
		
		СтруктураКомиссионерКомитент.Вставить("Организация", Запрос.Параметры.Комиссионер);
		СтруктураКомиссионерКомитент.Вставить("Партнер", Запрос.Параметры.Партнер);
		СтруктураКомиссионерКомитент.Вставить("Контрагент", Запрос.Параметры.Контрагент);
		СтруктураКомиссионерКомитент.Вставить("Договор", Запрос.Параметры.ДоговорПокупки);
		СтруктураКомиссионерКомитент.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);

		АналитикаВзаиморасчетовКомиссионерКомитент = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКомиссионерКомитент);
	Иначе
		АналитикаВзаиморасчетовКомитентКомиссионер = АналитикаКомитентКомиссионер;
		АналитикаВзаиморасчетовКомиссионерКомитент = АналитикаКомиссионерКомитент;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаКомитентКомиссионер",               АналитикаКомитентКомиссионер);
	Запрос.УстановитьПараметр("АналитикаКомиссионерКомитент",               АналитикаКомиссионерКомитент);
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовКомитентКомиссионер", АналитикаВзаиморасчетовКомитентКомиссионер);
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовКомиссионерКомитент", АналитикаВзаиморасчетовКомиссионерКомитент);
	
КонецПроцедуры

Процедура УстановитьПараметрАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаНоменклатуры") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запрос.Параметры.Номенклатура) Тогда
		
		СтруктураАналитикаУчетаНоменклатуры = Новый Структура();
		СтруктураАналитикаУчетаНоменклатуры.Вставить("Номенклатура", Запрос.Параметры.Номенклатура);
		СтруктураАналитикаУчетаНоменклатуры.Вставить("Характеристика", Запрос.Параметры.Характеристика);
		СтруктураАналитикаУчетаНоменклатуры.Вставить("Назначение", Запрос.Параметры.Назначение);
		СтруктураАналитикаУчетаНоменклатуры.Вставить("Серия", Запрос.Параметры.Серия);
		СтруктураАналитикаУчетаНоменклатуры.Вставить("Склад", Запрос.Параметры.Подразделение);
		
		Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры", РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(СтруктураАналитикаУчетаНоменклатуры));
	Иначе
		Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры", Неопределено);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПересчитатьТаблицуТоваров(Запрос)
	
	Если Запрос.Параметры.Свойство("ТаблицаТоваровПредварительнаяРасчитана") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПредварительный = Новый Запрос;
	ЗапросПредварительный.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросПредварительный.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	ЗапросПредварительный.УстановитьПараметр("Ссылка",                         Запрос.Параметры.Ссылка);
	ЗапросПредварительный.УстановитьПараметр("Период",                         Запрос.Параметры.Период);
	ЗапросПредварительный.УстановитьПараметр("Валюта",                         Запрос.Параметры.Валюта);
	
	ЗапросПредварительный.Выполнить();
	
	ВалютыДляПересчета = Новый Структура;
	ВалютыДляПересчета.Вставить("Регл", Запрос.Параметры.ВалютаРегламентированногоУчета);
	ВалютыДляПересчета.Вставить("Упр", Запрос.Параметры.ВалютаУправленческогоУчета);
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалюты(Запрос.МенеджерВременныхТаблиц, ВалютыДляПересчета);
	
	Запрос.УстановитьПараметр("ТаблицаТоваровПредварительнаяРасчитана", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаВидыЗапасов";
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                  КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.ВидЗапасов                   КАК ВидЗапасов,
	|	Справочник.Валюта                               КАК Валюта,
	|	Справочник.ТипЗапасов                           КАК ТипЗапасов,
	|	Справочник.ВидЗапасовВладельца                  КАК ВидЗапасовВладельца,
	|	Справочник.РеализацияЗапасовДругойОрганизации   КАК РеализацияЗапасовДругойОрганизации,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасовКомитента <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовКомитента
	|	КОГДА Справочник.РеализацияЗапасовДругойОрганизации ТОГДА
	|		Справочник.ВидЗапасовВладельца
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасовКомитента,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Назначение.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	АналитикаПереданногоТовара.КлючАналитики        КАК АналитикаУчетаПереданнойНоменклатуры,
	|	АналитикаПереданногоТовара.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиПереданное,
	|	Аналитика.Номенклатура                          КАК Номенклатура,
	|	Аналитика.Характеристика                        КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                     КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	ТаблицаВидыЗапасов.СчетФактураВыставленныйКомиссионера.Номер КАК НомерСчетаФактурыКомиссионера,
	|	ТаблицаВидыЗапасов.Покупатель                   КАК Покупатель,
	|	ТаблицаВидыЗапасов.Количество                   КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС                    КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС                     КАК СуммаНДС,
	|	ТаблицаВидыЗапасов.СуммаВознаграждения          КАК СуммаВознаграждения,
	|	ТаблицаВидыЗапасов.СуммаНДСВознаграждения       КАК СуммаНДСВознаграждения,
	|	ТаблицаВидыЗапасов.СтавкаНДС                    КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки          КАК ИдентификаторСтроки,
	|	Аналитика.Склад 								КАК Склад
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК Справочник
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = Справочник.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПереданногоТовара
	|	ПО
	|		Аналитика.Номенклатура		= АналитикаПереданногоТовара.Номенклатура
	|		И Аналитика.Характеристика	= АналитикаПереданногоТовара.Характеристика
	|		И &Комиссионер				= АналитикаПереданногоТовара.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)= АналитикаПереданногоТовара.Серия
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)= АналитикаПереданногоТовара.Назначение
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И Справочник.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтАгентскиеУслуги(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаАгентскиеУслуги";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР КОГДА НЕ Услуги.Ссылка ЕСТЬ NULL
	|			ТОГДА Услуги.Ссылка
	|		КОГДА НЕ Соглашение.Ссылка ЕСТЬ NULL
	|			ТОГДА Соглашение.Ссылка
	|		КОГДА НЕ УслугиСоглашениеЗакрытое.Ссылка ЕСТЬ NULL
	|			ТОГДА УслугиСоглашениеЗакрытое.Ссылка
	|		ИНАЧЕ ЕСТЬNULL(СоглашениеЗакрытое.Ссылка, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Соглашение,
	|	ВЫБОР КОГДА НЕ Услуги.Ссылка ЕСТЬ NULL
	|				ТОГДА Услуги.Ссылка.Валюта
	|		КОГДА НЕ Соглашение.Ссылка ЕСТЬ NULL
	|				ТОГДА Соглашение.Валюта
	|		КОГДА НЕ УслугиСоглашениеЗакрытое.Ссылка ЕСТЬ NULL
	|				ТОГДА УслугиСоглашениеЗакрытое.Ссылка.Валюта
	|		ИНАЧЕ ЕСТЬNULL(СоглашениеЗакрытое.Валюта, &Валюта)
	|	КОНЕЦ КАК Валюта,
	|	КОформлению.Номенклатура КАК Номенклатура,
	|	КОформлению.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал) КАК Принципал
	|ПОМЕСТИТЬ ВтАгентскиеУслуги
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК КОформлению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК Соглашение
	|	ПО Соглашение.Партнер = ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал)
	|		И Соглашение.Организация = &Комитент
	|		И Соглашение.ХозяйственнаяОперация
	|				= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОказаниеАгентскихУслуг)
	|		И Соглашение.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСПоставщиками.Действует)
	|		И (&Период >= Соглашение.ДатаНачалаДействия
	|			И (&Период <= Соглашение.ДатаОкончанияДействия
	|			ИЛИ Соглашение.ДатаОкончанияДействия = ДАТАВРЕМЯ(1,1,1))
	|		)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками.АгентскиеУслуги КАК Услуги
	|	ПО Соглашение.Ссылка = Услуги.Ссылка
	|		И КОформлению.Номенклатура = Услуги.Номенклатура
	|		И КОформлению.Характеристика = Услуги.Характеристика
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК СоглашениеЗакрытое
	|	ПО СоглашениеЗакрытое.Партнер = ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал)
	|		И СоглашениеЗакрытое.Организация = &Комитент
	|		И СоглашениеЗакрытое.ХозяйственнаяОперация
	|				= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОказаниеАгентскихУслуг)
	|		И СоглашениеЗакрытое.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСПоставщиками.Закрыто)
	|		И (&Период >= СоглашениеЗакрытое.ДатаНачалаДействия
	|			И (&Период <= СоглашениеЗакрытое.ДатаОкончанияДействия
	|			ИЛИ СоглашениеЗакрытое.ДатаОкончанияДействия = ДАТАВРЕМЯ(1,1,1))
	|		)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками.АгентскиеУслуги КАК УслугиСоглашениеЗакрытое
	|	ПО СоглашениеЗакрытое.Ссылка = УслугиСоглашениеЗакрытое.Ссылка
	|		И КОформлению.Номенклатура = УслугиСоглашениеЗакрытое.Номенклатура
	|		И КОформлению.Характеристика = УслугиСоглашениеЗакрытое.Характеристика
	|ГДЕ
	|	КОформлению.Ссылка = &Ссылка
	|	И КОформлению.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал) <> НЕОПРЕДЕЛЕНО
	|	И &ИспользоватьПродажуАгентскихУслуг";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтРасчетыПоНакладнойСКлиентом(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасчетыПоНакладнойСКлиентом";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СУММА(РасчетыПоНакладной.Сумма)     КАК СуммаВзаиморасчетов,
	|	СУММА(РасчетыПоНакладной.СуммаРегл) КАК СуммаРегл,
	|	СУММА(РасчетыПоНакладной.СуммаУпр)  КАК СуммаУпр
	|ПОМЕСТИТЬ ВтРасчетыПоНакладнойСКлиентом
	|ИЗ (ВЫБРАТЬ
	|		СУММА(ДанныеДокумента.СуммаДокумента)                                                               КАК Сумма,
	|		ВЫРАЗИТЬ(СУММА(ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|		ВЫРАЗИТЬ(СУММА(ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр  КАК ЧИСЛО(15, 2)) КАК СуммаУпр
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|	ГДЕ
	|		&ОбъектРасчетовКлиент = &Ссылка
	|		И ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.СуммаДокумента > 0
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		СУММА(-РасшифровкаПлатежа.СуммаВзаиморасчетов)                                                 КАК Сумма,
	|		ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|		ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаУпр
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСКлиентом КАК РасшифровкаПлатежа
	|	ГДЕ
	|		РасшифровкаПлатежа.Ссылка = &Ссылка
	|		И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО) КАК РасчетыПоНакладной
	|ИМЕЮЩИЕ СУММА(РасчетыПоНакладной.Сумма) <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтРасчетыПоНакладнойСПоставщиком(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасчетыПоНакладнойСПоставщиком";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СУММА(РасчетыПоНакладной.Сумма)     КАК СуммаВзаиморасчетов,
	|	СУММА(РасчетыПоНакладной.СуммаРегл) КАК СуммаРегл,
	|	СУММА(РасчетыПоНакладной.СуммаУпр)  КАК СуммаУпр
	|ПОМЕСТИТЬ ВтРасчетыПоНакладнойСПоставщиком
	|ИЗ (ВЫБРАТЬ
	|		СУММА(ДанныеДокумента.СуммаДокумента)                                                               КАК Сумма,
	|		ВЫРАЗИТЬ(СУММА(ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|		ВЫРАЗИТЬ(СУММА(ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр  КАК ЧИСЛО(15, 2)) КАК СуммаУпр
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|	ГДЕ
	|		&ОбъектРасчетовПоставщик = &Ссылка
	|		И ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.СуммаДокумента > 0
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		СУММА(-РасшифровкаПлатежа.СуммаВзаиморасчетов)                                                 КАК Сумма,
	|		ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|		ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаУпр
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСПоставщиком КАК РасшифровкаПлатежа
	|	ГДЕ
	|		РасшифровкаПлатежа.Ссылка = &Ссылка
	|		И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО) КАК РасчетыПоНакладной
	|ИМЕЮЩИЕ СУММА(РасчетыПоНакладной.Сумма) <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтРасчетыПоНакладнойСКлиентомВознаграждение(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасчетыПоНакладнойСКлиентомВознаграждение";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СУММА(РасчетыПоНакладной.Сумма)     КАК СуммаВзаиморасчетов,
	|	СУММА(РасчетыПоНакладной.СуммаРегл) КАК СуммаРегл,
	|	СУММА(РасчетыПоНакладной.СуммаУпр)  КАК СуммаУпр
	|ПОМЕСТИТЬ ВтРасчетыПоНакладнойСКлиентомВознаграждение
	|ИЗ (ВЫБРАТЬ
	|		СУММА(ДанныеДокумента.СуммаВознаграждения)                                                               КАК Сумма,
	|		ВЫРАЗИТЬ(СУММА(ДанныеДокумента.СуммаВознаграждения) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|		ВЫРАЗИТЬ(СУММА(ДанныеДокумента.СуммаВознаграждения) * &КоэффициентПересчетаВВалютуУпр  КАК ЧИСЛО(15, 2)) КАК СуммаУпр
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|	ГДЕ
	|		&ОбъектРасчетовКлиент = &Ссылка
	|		И ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.СуммаДокумента > 0
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		СУММА(-РасшифровкаПлатежа.СуммаВзаиморасчетов)                                                 КАК Сумма,
	|		ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|		ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаУпр
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСКлиентомВознаграждение КАК РасшифровкаПлатежа
	|	ГДЕ
	|		РасшифровкаПлатежа.Ссылка = &Ссылка
	|		И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО) КАК РасчетыПоНакладной
	|ИМЕЮЩИЕ СУММА(РасчетыПоНакладной.Сумма) <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтРасчетыПоНакладнойСПоставщикомВознаграждение(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасчетыПоНакладнойСПоставщикомВознаграждение";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СУММА(РасчетыПоНакладной.Сумма)     КАК СуммаВзаиморасчетов,
	|	СУММА(РасчетыПоНакладной.СуммаРегл) КАК СуммаРегл,
	|	СУММА(РасчетыПоНакладной.СуммаУпр)  КАК СуммаУпр
	|ПОМЕСТИТЬ ВтРасчетыПоНакладнойСПоставщикомВознаграждение
	|ИЗ (ВЫБРАТЬ
	|		СУММА(ДанныеДокумента.СуммаВознаграждения)                                                               КАК Сумма,
	|		ВЫРАЗИТЬ(СУММА(ДанныеДокумента.СуммаВознаграждения) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|		ВЫРАЗИТЬ(СУММА(ДанныеДокумента.СуммаВознаграждения) * &КоэффициентПересчетаВВалютуУпр  КАК ЧИСЛО(15, 2)) КАК СуммаУпр
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|	ГДЕ
	|		&ОбъектРасчетовПоставщик = &Ссылка
	|		И ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.СуммаДокумента > 0
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		СУММА(-РасшифровкаПлатежа.СуммаВзаиморасчетов)                                                 КАК Сумма,
	|		ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|		ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаУпр
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСПоставщикомВознаграждение КАК РасшифровкаПлатежа
	|	ГДЕ
	|		РасшифровкаПлатежа.Ссылка = &Ссылка
	|		И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО) КАК РасчетыПоНакладной
	|ИМЕЮЩИЕ СУММА(РасчетыПоНакладной.Сумма) <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&КонецПериода КАК Период,
	|	ТаблицаВидыЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактуры,
	|	ТаблицаВидыЗапасов.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактуры,
	|	ТаблицаВидыЗапасов.Покупатель КАК Покупатель,
	|	&ОтчетКомитенту КАК ХозяйственнаяОперация,
	|	0 КАК Количество,
	|	0 КАК СуммаВыручки,
	|	ТаблицаВидыЗапасов.Количество КАК КоличествоКОформлению,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВыручкиКОформлению,
	|	ТаблицаВидыЗапасов.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаВидыЗапасов.ВидЗапасовКомитента КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца = ВидыЗапасовВладельца.Ссылка
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактуры,
	|	ТаблицаВидыЗапасов.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактуры,
	|	ТаблицаВидыЗапасов.Покупатель КАК Покупатель,
	|	&ОтчетКомитенту КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВыручки,
	|	0 КАК КоличествоКОформлению,
	|	0 КАК СуммаВыручкиКОформлению,
	|	ТаблицаВидыЗапасов.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаВидыЗапасов.ВидЗапасовКомитента КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца = ВидыЗапасовВладельца.Ссылка
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Строки.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&КонецПериода КАК Период,
	|	Строки.Валюта,
	|	Строки.ВидЗапасовКомитента КАК ВидЗапасов,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	Строки.НомерГТД,
	|	Строки.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактуры,
	|	Строки.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактуры,
	|	Строки.Покупатель,
	|	&ОтчетКомитенту КАК ХозяйственнаяОперация,
	|	Строки.Количество,
	|	Строки.СуммаСНДС КАК СуммаВыручки,
	|	Строки.Количество,
	|	Строки.СуммаСНДС,
	|	Строки.СуммаВознаграждения КАК СуммаВознаграждения,
	|	Строки.ВидЗапасовКомитента КАК КорВидЗапасов,
	|	Строки.Номенклатура,
	|	Строки.Характеристика
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитента
	|		ПО ВидыЗапасовКомитента.Ссылка = Строки.ВидЗапасовКомитента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Номенклатура = Строки.Номенклатура
	|		И Аналитика.Характеристика = Строки.Характеристика
	|		И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И Аналитика.Склад = ВидыЗапасовКомитента.ВладелецТовара
	|ГДЕ
	|	ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И (Строки.ВидЗапасовВладельца = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИЛИ Строки.ВидЗапасовВладельца = Строки.ВидЗапасовКомитента)
	|	И Строки.ВидЗапасовКомитента <> Строки.ВидЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыПоНакладнойСКлиентом", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыПоНакладнойСКлиентом(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыПоНакладнойСПоставщиком", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыПоНакладнойСПоставщиком(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыПоНакладнойСКлиентомВознаграждение", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыПоНакладнойСКлиентомВознаграждение(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыПоНакладнойСПоставщикомВознаграждение", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыПоНакладнойСПоставщикомВознаграждение(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыАналитикВзаиморасчетов(Запрос);
	
	//1. +	К оплате	Сумма отчета					Комитент->Комиссионер	по договорам / по накладным.
	//2. +	Долг		Сумма отчета					Комитент->Комиссионер	по договорам.
	//3. -	Долг		Вознаграждение					Комитент->Комиссионер	по договорам.
	//4. +	Долг		Сумма отчета					Комитент->Комиссионер	по накладным.
	//5. +	К оплате	Вознаграждение					Комиссионер->Комитент	по договорам / по накладным.
	//6. +	Долг		Вознаграждение					Комиссионер->Комитент	по договорам.
	
	//7. -	К оплате	Сумма оплат отчета				Комитент->Комиссионер	по накладным.
	//8. -	Долг		Вознаграждение					Комитент->Комиссионер	по накладным.
	//9. +	Долг		Сумма оплат отчета				Комитент->Комиссионер	по накладным.
	
	//10.+	Долг		Вознаграждение					Комиссионер->Комитент	по накладным.
	//11.+	Долг		Сумма оплат вознаграждения		Комиссионер->Комитент	по накладным.
	//12.-	К оплате	Сумма оплат вознаграждения		Комиссионер->Комитент	по накладным.
	
	ТекстЗапроса = "
	|ВЫБРАТЬ //1. +	К оплате	Сумма отчета	Комитент->Комиссионер	по договорам / по накладным.
	|	КонецПериода(ДанныеДокумента.ДатаПлатежа, ДЕНЬ) КАК Период,
	|	КонецПериода(ДанныеДокумента.ДатаПлатежа, ДЕНЬ) КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&ОбъектРасчетовКлиент КАК ЗаказКлиента,
	|	&ОтчетКомиссионера КАК ХозяйственнаяОперация,
	|	
	|	0 КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента КАК КОплате,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаДокумента > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //2. +	Долг		Сумма отчета	Комитент->Комиссионер	по договорам.
	|	&Период КАК Период,
	|	КонецПериода(ДанныеДокумента.ДатаПлатежа, ДЕНЬ) КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&ОбъектРасчетовКлиент КАК ЗаказКлиента,
	|	&ОтчетКомиссионера КАК ХозяйственнаяОперация,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КОплате,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ &РасчетыПоНакладнымКлиент ИЛИ (&РасчетыПоНакладнымКлиент И ДанныеДокумента.СуммаДокумента < 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //3. -	Долг		Вознаграждение	Комитент->Комиссионер	по договорам.
	|	&Период КАК Период,
	|	&Период КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&ОбъектРасчетовКлиент КАК ЗаказКлиента,
	|	&ОтчетКомиссионера КАК ХозяйственнаяОперация,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаВознаграждения
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаВознаграждения
	|	КОНЕЦ КАК КОплате,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|	И ДанныеДокумента.УдержатьВознаграждение
	|	И (НЕ &РасчетыПоНакладнымКлиент ИЛИ (&РасчетыПоНакладнымКлиент И ДанныеДокумента.СуммаВознаграждения < 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //4. +	Долг		Сумма отчета	Комитент->Комиссионер	по накладным.
	|	&Период                                          КАК Период,
	|	КонецПериода(&ДатаПлатежа, ДЕНЬ)                 КАК ДатаПлатежа,
	|	&Период                                          КАК ДатаРегистратора,
	|
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер      КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                          КАК Валюта,
	|	&Ссылка                                          КАК ЗаказКлиента,
	|	&ОтчетКомиссионера                               КАК ХозяйственнаяОперация,
	|	
	|	РасчетыПоНакладнойСКлиентом.СуммаВзаиморасчетов КАК Сумма,
	|	0                                               КАК КОплате,
	|	РасчетыПоНакладнойСКлиентом.СуммаРегл           КАК СуммаРегл,
	|	РасчетыПоНакладнойСКлиентом.СуммаУпр            КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыПоНакладнойСКлиентом КАК РасчетыПоНакладнойСКлиентом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //5. +	К оплате	Вознаграждение	Комиссионер->Комитент	по договорам / по накладным.
	|	КонецПериода(ДанныеДокумента.ДатаПлатежа, ДЕНЬ) КАК Период,
	|	КонецПериода(ДанныеДокумента.ДатаПлатежа, ДЕНЬ) КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&ОбъектРасчетовПоставщик КАК ЗаказКлиента,
	|	&ОтчетКомитенту КАК ХозяйственнаяОперация,
	|	
	|	0 КАК Сумма,
	|	ДанныеДокумента.СуммаВознаграждения КАК КОплате,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения > 0
	|	И Не ДанныеДокумента.УдержатьВознаграждение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //6. +	Долг		Вознаграждение					Комиссионер->Комитент	по договорам.
	|	&Период КАК Период,
	|	КонецПериода(ДанныеДокумента.ДатаПлатежа, ДЕНЬ) КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&ОбъектРасчетовПоставщик КАК ЗаказКлиента,
	|	&ОтчетКомитенту КАК ХозяйственнаяОперация,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаВознаграждения
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КОплате,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|	И Не ДанныеДокумента.УдержатьВознаграждение
	|	И НЕ &РасчетыПоНакладнымПоставщик ИЛИ (&РасчетыПоНакладнымПоставщик И ДанныеДокумента.СуммаВознаграждения < 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //7. -	К оплате	Сумма оплат		Комитент->Комиссионер	по накладным.
	|	&Период                                     КАК Период,
	|	&Период                                     КАК ДатаПлатежа,
	|	&Период                                     КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                     КАК Валюта,
	|	&Ссылка                                     КАК ЗаказКлиента,
	|	&ОтчетКомиссионера                          КАК ХозяйственнаяОперация,
	|	
	|	0                                           КАК Сумма,
	|	СУММА(РасшифровкаПлатежа.Сумма)             КАК КОплате,
	|	0                                           КАК СуммаРегл,
	|	0                                           КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСКлиентом КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|	И &РасчетыПоНакладнымКлиент
	|ИМЕЮЩИЕ
	|	СУММА(РасшифровкаПлатежа.Сумма) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //8. -	Долг		Вознаграждение	Комитент->Комиссионер	по накладным.
	|	&Период                                                   КАК Период,
	|	&Период                                                   КАК ДатаПлатежа,
	|	&Период                                                   КАК ДатаРегистратора,
	|
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                    КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер               КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                                   КАК Валюта,
	|	&Ссылка                                                   КАК ЗаказКлиента,
	|	&ОтчетКомиссионера                                        КАК ХозяйственнаяОперация,
	|
	|	РасчетыПоНакладнойСКлиентомВознаграждение.СуммаВзаиморасчетов КАК Сумма,
	|	РасчетыПоНакладнойСКлиентомВознаграждение.СуммаВзаиморасчетов КАК КОплате,
	|	РасчетыПоНакладнойСКлиентомВознаграждение.СуммаРегл           КАК СуммаРегл,
	|	РасчетыПоНакладнойСКлиентомВознаграждение.СуммаУпр            КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыПоНакладнойСКлиентомВознаграждение КАК РасчетыПоНакладнойСКлиентомВознаграждение
	|ГДЕ
	|	&УдержатьВознаграждение
	|	И &РасчетыПоНакладнымКлиент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //9. +	Долг		Сумма оплат		Комитент->Комиссионер	по накладным.
	|	&Период                                     КАК Период,
	|	&Период                                     КАК ДатаПлатежа,
	|	&Период                                     КАК ДатаРегистратора,
	|
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                     КАК Валюта,
	|	РасшифровкаПлатежа.Заказ                    КАК ЗаказКлиента,
	|	&ОтчетКомиссионера                          КАК ХозяйственнаяОперация,
	|	
	|	РасшифровкаПлатежа.Сумма                    КАК Сумма,
	|	РасшифровкаПлатежа.Сумма                    КАК КОплате,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСКлиентом КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //10.+	Долг		Вознаграждение					Комиссионер->Комитент	по накладным.
	|	&Период                                            КАК Период,
	|	КонецПериода(&ДатаПлатежа, ДЕНЬ)                   КАК ДатаПлатежа,
	|	&Период                                            КАК ДатаРегистратора,
	|
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент        КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                            КАК Валюта,
	|	&Ссылка                                            КАК ЗаказКлиенту,
	|	&ОтчетКомитенту                                    КАК ХозяйственнаяОперация,
	|	
	|	РасчетыПоНакладнойСПоставщиком.СуммаВзаиморасчетов КАК Сумма,
	|	0                                                  КАК КОплате,
	|	РасчетыПоНакладнойСПоставщиком.СуммаРегл           КАК СуммаРегл,
	|	РасчетыПоНакладнойСПоставщиком.СуммаУпр            КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыПоНакладнойСПоставщикомВознаграждение КАК РасчетыПоНакладнойСПоставщиком
	|ГДЕ
	|	НЕ &УдержатьВознаграждение
	|	И &РасчетыПоНакладнымПоставщик
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //11.+	Долг		Сумма оплат вознаграждения		Комиссионер->Комитент	по накладным.
	|	&Период                                     КАК Период,
	|	&Период                                     КАК ДатаПлатежа,
	|	&Период                                     КАК ДатаРегистратора,
	|
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                     КАК Валюта,
	|	РасшифровкаПлатежа.Заказ                    КАК ЗаказКлиента,
	|	&ОтчетКомитенту                             КАК ХозяйственнаяОперация,
	|	
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов      КАК Сумма,
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов      КАК КОплате,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСПоставщикомВознаграждение КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //12.-	К оплате	Сумма оплат вознаграждения		Комиссионер->Комитент	по накладным.
	|	&Период                                       КАК Период,
	|	&Период                                       КАК ДатаПлатежа,
	|	&Период                                       КАК ДатаРегистратора,
	|
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент   КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                       КАК Валюта,
	|	&Ссылка                                       КАК ЗаказПоставщику,
	|	&ОтчетКомитенту                               КАК ХозяйственнаяОперация,
	|	
	|	0                                             КАК Сумма,
	|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК КОплате,
	|	0                                             КАК СуммаРегл,
	|	0                                             КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСПоставщикомВознаграждение КАК РасшифровкаПлатежа
	|	
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|ИМЕЮЩИЕ
	|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыПоНакладнойСКлиентом", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыПоНакладнойСКлиентом(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыПоНакладнойСПоставщиком", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыПоНакладнойСПоставщиком(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыПоНакладнойСКлиентомВознаграждение", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыПоНакладнойСКлиентомВознаграждение(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыПоНакладнойСПоставщикомВознаграждение", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыПоНакладнойСПоставщикомВознаграждение(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыАналитикВзаиморасчетов(Запрос);
	
	//1. +	Долг		Вознаграждение				Комитент->Комиссионер	по договорам.
	//2. +	Долг		Вознаграждение				Комитент->Комиссионер	по накладным.
	//3. +	К оплате	Вознаграждение				Комитент->Комиссионер	по договорам / по накладным.
	//4. +	Долг		Сумма отчета				Комиссионер->Комитент	по договорам.
	//5. +	Долг		Сумма отчета				Комиссионер->Комитент	по накладным.
	//6. +	К оплате	Сумма отчета				Комиссионер->Комитент	по договорам / по накладным.
	//7. -	Долг		Вознаграждение				Комиссионер->Комитент	по договорам.
	//8. -	К оплате	Сумма оплат вознаграждения	Комитент->Комиссионер	по накладным.
	//9. -	Долг		Вознаграждение				Комиссионер->Комитент	по накладным.
	//10.+	Долг		Сумма оплат вознаграждения	Комитент->Комиссионер	по накладным.
	//11.+	Долг		Сумма оплат отчета			Комиссионер->Комитент	по накладным.
	//12.-	К оплате	Сумма оплат отчета			Комиссионер->Комитент	по накладным.
	
	ТекстЗапроса = "
	|ВЫБРАТЬ //1. +	Долг		Вознаграждение	Комитент->Комиссионер	по договорам.
	|	&Период КАК Период,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&ОбъектРасчетовКлиент КАК ЗаказПоставщику,
	|	&ОтчетКомиссионера КАК ХозяйственнаяОперация,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаВознаграждения
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КОплате,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|	И Не ДанныеДокумента.УдержатьВознаграждение
	|	И НЕ &РасчетыПоНакладнымКлиент ИЛИ (&РасчетыПоНакладнымКлиент И ДанныеДокумента.СуммаВознаграждения < 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //2. +	Долг		Вознаграждение	Комитент->Комиссионер	по накладным.
	|	&Период                                            КАК Период,
	|	&ДатаПлатежа                                       КАК ДатаПлатежа,
	|	&Период                                            КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)             КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер        КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                            КАК Валюта,
	|	&ОбъектРасчетовКлиент                              КАК ЗаказПоставщику,
	|	&ОтчетКомиссионера                                 КАК ХозяйственнаяОперация,
	|	
	|	РасчетыПоНакладнойСКлиентом.СуммаВзаиморасчетов    КАК Сумма,
	|	0                                                  КАК КОплате,
	|	РасчетыПоНакладнойСКлиентом.СуммаРегл              КАК СуммаРегл,
	|	РасчетыПоНакладнойСКлиентом.СуммаУпр               КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыПоНакладнойСКлиентомВознаграждение КАК РасчетыПоНакладнойСКлиентом
	|ГДЕ
	|	НЕ &УдержатьВознаграждение 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //3. +	К оплате	Вознаграждение	Комитент->Комиссионер	по договорам / по накладным.
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, День) КАК Период,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&ОбъектРасчетовКлиент КАК ЗаказПоставщику,
	|	&ОтчетКомиссионера КАК ХозяйственнаяОперация,
	|	
	|	0 КАК Сумма,
	|	ДанныеДокумента.СуммаВознаграждения КАК КОплате,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения > 0
	|	И Не ДанныеДокумента.УдержатьВознаграждение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //4. +	Долг		Сумма отчета	Комиссионер->Комитент	по договорам.
	|	&Период КАК Период,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&ОбъектРасчетовПоставщик КАК ЗаказПоставщику,
	|	&ОтчетКомитенту КАК ХозяйственнаяОперация,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КОплате,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ &РасчетыПоНакладнымПоставщик ИЛИ (&РасчетыПоНакладнымПоставщик И ДанныеДокумента.СуммаДокумента < 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //5. +	Долг		Сумма отчета				Комиссионер->Комитент	по накладным.
	|	&Период                                         КАК Период,
	|	&ДатаПлатежа                                    КАК ДатаПлатежа,
	|	&Период                                         КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент     КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                         КАК Валюта,
	|	&ОбъектРасчетовПоставщик                        КАК ЗаказПоставщику,
	|	&ОтчетКомитенту                                 КАК ХозяйственнаяОперация,
	|	
	|	РасчетыПоНакладнойСПоставщиком.СуммаВзаиморасчетов КАК Сумма,
	|	0                                                  КАК КОплате,
	|	РасчетыПоНакладнойСПоставщиком.СуммаРегл           КАК СуммаРегл,
	|	РасчетыПоНакладнойСПоставщиком.СуммаУпр            КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыПоНакладнойСПоставщиком КАК РасчетыПоНакладнойСПоставщиком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //6. +	К оплате	Сумма отчета	Комиссионер->Комитент	по договорам / по накладным.
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, День) КАК Период,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&ОбъектРасчетовПоставщик КАК ЗаказПоставщику,
	|	&ОтчетКомитенту КАК ХозяйственнаяОперация,
	|	
	|	0 КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента КАК КОплате,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаДокумента > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //7. -	Долг		Вознаграждение	Комиссионер->Комитент	по договорам.
	|	&Период КАК Период,
	|	&Период КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&ОбъектРасчетовПоставщик КАК ЗаказПоставщику,
	|	&ОтчетКомитенту КАК ХозяйственнаяОперация,
	|	
	|	ДанныеДокумента.СуммаВознаграждения КАК Сумма,
	|	ДанныеДокумента.СуммаВознаграждения КАК КОплате,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|	И ДанныеДокумента.УдержатьВознаграждение
	|	И НЕ &РасчетыПоНакладнымПоставщик ИЛИ (&РасчетыПоНакладнымПоставщик И ДанныеДокумента.СуммаВознаграждения < 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //8. -	К оплате	Сумма оплат вознаграждения	Комитент->Комиссионер	по накладным.
	|	&Период                                       КАК Период,
	|	&Период                                       КАК ДатаПлатежа,
	|	&Период                                       КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер   КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                       КАК Валюта,
	|	&Ссылка                                       КАК ЗаказПоставщику,
	|	&ОтчетКомиссионера                            КАК ХозяйственнаяОперация,
	|	
	|	0                                             КАК Сумма,
	|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК КОплате,
	|	0                                             КАК СуммаРегл,
	|	0                                             КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСКлиентомВознаграждение КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|ИМЕЮЩИЕ 
	|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //9. -	Долг		Вознаграждение				Комиссионер->Комитент	по накладным.
	|	&Период                                     КАК Период,
	|	&Период                                     КАК ДатаПлатежа,
	|	&Период                                     КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                     КАК Валюта,
	|	&Ссылка                                     КАК ЗаказПоставщику,
	|	&ОтчетКомитенту                             КАК ХозяйственнаяОперация,
	|	
	|	РасчетыПоНакладнойСПоставщиком.СуммаВзаиморасчетов КАК Сумма,
	|	РасчетыПоНакладнойСПоставщиком.СуммаВзаиморасчетов КАК КОплате,
	|	РасчетыПоНакладнойСПоставщиком.СуммаРегл           КАК СуммаРегл,
	|	РасчетыПоНакладнойСПоставщиком.СуммаУпр            КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыПоНакладнойСПоставщикомВознаграждение КАК РасчетыПоНакладнойСПоставщиком
	|ГДЕ
	|	&УдержатьВознаграждение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //10.+	Долг		Сумма оплат вознаграждения	Комитент->Комиссионер	по накладным.
	|	&Период                                     КАК Период,
	|	&Период                                     КАК ДатаПлатежа,
	|	&Период                                     КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                     КАК Валюта,
	|	РасшифровкаПлатежа.Заказ                    КАК ЗаказПоставщику,
	|	&ОтчетКомиссионера                          КАК ХозяйственнаяОперация,
	|	
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов      КАК Сумма,
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов      КАК КОплате,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСКлиентомВознаграждение КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Не &УдержатьВознаграждение
	|	И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //11.+	Долг		Сумма оплат отчета			Комиссионер->Комитент	по накладным.
	|	&Период                                         КАК Период,
	|	&Период                                         КАК ДатаПлатежа,
	|	&Период                                         КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент     КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                         КАК Валюта,
	|	РасшифровкаПлатежаСПоставщиком.Заказ            КАК ЗаказПоставщику,
	|	&ОтчетКомитенту                                 КАК ХозяйственнаяОперация,
	|	
	|	РасшифровкаПлатежаСПоставщиком.СуммаВзаиморасчетов КАК Сумма,
	|	РасшифровкаПлатежаСПоставщиком.СуммаВзаиморасчетов КАК КОплате,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежаСПоставщиком.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежаСПоставщиком.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСПоставщиком КАК РасшифровкаПлатежаСПоставщиком
	|ГДЕ
	|	РасшифровкаПлатежаСПоставщиком.Ссылка = &Ссылка
	|	И &РасчетыПоНакладнымПоставщик
	|	И НЕ РасшифровкаПлатежаСПоставщиком.Заказ = НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //12.-	К оплате	Сумма оплат отчета			Комиссионер->Комитент	по накладным.
	|	&Период                                       КАК Период,
	|	&Период                                       КАК ДатаПлатежа,
	|	&Период                                       КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент   КАК АналитикаУчетаПоПартнерам,
	|	&Валюта                                       КАК Валюта,
	|	&ОбъектРасчетовПоставщик                      КАК ЗаказПоставщику,
	|	&ОтчетКомитенту                               КАК ХозяйственнаяОперация,
	|	
	|	0                                             КАК Сумма,
	|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК КОплате,
	|	0                                             КАК СуммаРегл,
	|	0                                             КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.РасшифровкаПлатежаСПоставщиком КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|ИМЕЮЩИЕ
	|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыАналитикВзаиморасчетов(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	&Период									КАК Период,
	|	&Комитент								КАК Организация,
	|
	|	ВидыЗапасов.АналитикаУчетаПереданнойНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВидыЗапасов.ВидЗапасовКомитента
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВидыЗапасов.Количество			КАК Количество,
	|	0								КАК Стоимость,
	|	&ОтчетКомиссионера				КАК ХозяйственнаяОперация,
	|	&АналитикаКомитентКомиссионер	КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение					КАК Подразделение,
	|	&НалогообложениеНДС				КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитента
	|		ПО ВидыЗапасовКомитента.Ссылка = ВидыЗапасов.ВидЗапасовКомитента
	|ГДЕ
	|	(ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИЛИ ВидыЗапасовКомитента.ТипЗапасов ЕСТЬ NULL)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	&Период									КАК Период,
	|	&Комитент								КАК Организация,
	|
	|	ВидыЗапасов.АналитикаУчетаПереданнойНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВидыЗапасов.ВидЗапасовКомитента
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВидыЗапасов.Количество			КАК Количество,
	|	0								КАК Стоимость,
	|	&ОтчетКомиссионера				КАК ХозяйственнаяОперация,
	|	&АналитикаКомитентКомиссионер	КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение					КАК Подразделение,
	|	&НалогообложениеНДС				КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитента
	|		ПО ВидыЗапасовКомитента.Ссылка = ВидыЗапасов.ВидЗапасовКомитента
	|ГДЕ
	|	(ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИЛИ ВидыЗапасовКомитента.ТипЗапасов ЕСТЬ NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыАналитикВзаиморасчетов(Запрос);
	УстановитьПараметрАналитикиУчетаНоменклатуры(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ // Продажа товара у комитента
	|	ТаблицаВидыЗапасов.НомерСтроки                КАК НомерСтроки,
	|	&Период                                       КАК Период,
	|	&Подразделение                                КАК Подразделение,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПереданнойНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельностиПереданное КАК НаправлениеДеятельностиНоменклатуры,
	|	&АналитикаКомитентКомиссионер                 КАК АналитикаУчетаПоПартнерам,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	ВидыЗапасовКомитента.ТипЗапасов КАК ТипЗапасов,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовКомитента
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|	(ВЫБОР
	|		КОГДА ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ) КАК РазделУчета,
	|	&НалогообложениеНДС КАК ВидДеятельностиНДС,
	|	&Менеджер КАК Менеджер,
	|
	|	ВЫБОР КОГДА ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|		ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	Иначе
	|		0
	|	КОНЕЦ КАК Стоимость,
	|
	|	ВЫБОР КОГДА ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|			ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|					- ТаблицаВидыЗапасов.СуммаНДС)
	|					* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	Иначе
	|		0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		И ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|			ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|					- ТаблицаВидыЗапасов.СуммаНДС)
	|					* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	Иначе
	|		0
	|	КОНЕЦ КАК СтоимостьУпр,
	|
	|	ВЫРАЗИТЬ(
	|		(ВЫБОР КОГДА ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|		+ ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|			ТОГДА 0
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ТаблицаВидыЗапасов.СуммаВознаграждения
	|		ИНАЧЕ ТаблицаВидыЗапасов.СуммаВознаграждения - ТаблицаВидыЗапасов.СуммаНДСВознаграждения
	|		КОНЕЦ) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СтоимостьРегл,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаВыручки,
	|
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|			- ТаблицаВидыЗапасов.СуммаНДС)
	|			* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаВыручкиБезНДС,
	|
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|			- ТаблицаВидыЗапасов.СуммаНДС)
	|			* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаВыручкиРегл,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС
	|			* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаВыручкиСНДСРегл,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаВознаграждения
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК ДопРасходы,
	|
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаВознаграждения
	|		- ТаблицаВидыЗапасов.СуммаНДСВознаграждения)
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК ДопРасходыБезНДС,
	|
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА НЕ &ПартионныйУчетВерсии22
	|			ТОГДА 0
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ТаблицаВидыЗапасов.СуммаВознаграждения
	|		ИНАЧЕ ТаблицаВидыЗапасов.СуммаВознаграждения - ТаблицаВидыЗапасов.СуммаНДСВознаграждения
	|		КОНЕЦ * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК ДопРасходыРегл,
	|
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций ТОГДА
	|		ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаВознаграждения
	|			- ТаблицаВидыЗапасов.СуммаНДСВознаграждения)
	|			* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	Иначе
	|		0
	|	КОНЕЦ КАК ДопРасходыУпр,
	|
	|	0 КАК СуммаРучнойСкидки,
	|	0 КАК СуммаАвтоматическойСкидки,
	|
	|	&Комиссионер КАК Склад,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА &ДоговорПродажи
	|		ИНАЧЕ &Договор
	|	КОНЕЦ КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВВалютеДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&НалогообложениеНДС КАК НалогообложениеНДС,
	|	&ОтчетКомиссионера КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитента
	|		ПО ВидыЗапасовКомитента.Ссылка = ТаблицаВидыЗапасов.ВидЗапасовКомитента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Продажа агентской услуги у принципала
	|	Товары.НомерСтроки                            КАК НомерСтроки,
	|	&Период                                       КАК Период,
	|	&Подразделение                                КАК Подразделение,
	|	ВЫБОР 
	|		КОГДА  ЕСТЬNULL(Товары.Характеристика.Принципал, Товары.Номенклатура.Принципал) <> &Комитент
	|		ТОГДА Товары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикиКомитента.КлючАналитики
	|	КОНЕЦ                                         КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Назначение.НаправлениеДеятельности  КАК НаправлениеДеятельностиНоменклатуры,
	|	&АналитикаКомитентКомиссионер                 КАК АналитикаУчетаПоПартнерам,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	ВЫБОР
	|		КОГДА  ЕСТЬNULL(Товары.Характеристика.Принципал, Товары.Номенклатура.Принципал) <> &Комитент
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) РазделУчета,
	|	&НалогообложениеНДС КАК ВидДеятельностиНДС,
	|	&Менеджер КАК Менеджер,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьУпр,
	|	0 КАК СтоимостьРегл,
	|
	|	Товары.Количество КАК Количество,
	|	ВЫРАЗИТЬ(Товары.СуммаПродажи
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаВыручки,
	|
	|	ВЫРАЗИТЬ((Товары.СуммаПродажи
	|			- Товары.СуммаНДС)
	|			* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаВыручкиБезНДС,
	|
	|	ВЫРАЗИТЬ((Товары.СуммаПродажи
	|			- Товары.СуммаПродажиНДС)
	|			* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаВыручкиРегл,
	|
	|	ВЫРАЗИТЬ(Товары.СуммаПродажи
	|			* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаВыручкиСНДСРегл,
	|
	|	ВЫРАЗИТЬ(Товары.СуммаВознаграждения
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК ДопРасходы,
	|
	|	ВЫРАЗИТЬ((Товары.СуммаВознаграждения
	|		- Товары.СуммаНДСВознаграждения)
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК ДопРасходыБезНДС,
	|
	|	ВЫРАЗИТЬ((Товары.СуммаВознаграждения
	|		- Товары.СуммаНДСВознаграждения)
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК ДопРасходыРегл,
	|
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций ТОГДА
	|		ВЫРАЗИТЬ((Товары.СуммаВознаграждения
	|			- Товары.СуммаНДСВознаграждения)
	|			* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	Иначе
	|		0
	|	КОНЕЦ КАК ДопРасходыУпр,
	|
	|	0 КАК СуммаРучнойСкидки,
	|	0 КАК СуммаАвтоматическойСкидки,
	|
	|	Аналитика.Склад КАК Склад,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА &ДоговорПродажи
	|		ИНАЧЕ &Договор
	|	КОНЕЦ КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	Товары.СуммаПродажи КАК СуммаВВалютеВзаиморасчетов,
	|	Товары.СуммаПродажи - Товары.СуммаПродажиНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	Товары.СуммаПродажи КАК СуммаВВалютеДокумента,
	|	Товары.СуммаПродажи - Товары.СуммаПродажиНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&НалогообложениеНДС КАК НалогообложениеНДС,
	|	&ОтчетКомиссионера КАК ХозяйственнаяОперация,
	|
	|	Товары.Номенклатура КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК Товары
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Аналитика.КлючАналитики = Товары.АналитикаУчетаНоменклатуры
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиКомитента
	|	ПО Аналитика.Номенклатура = АналитикиКомитента.Номенклатура
	|		И Аналитика.Характеристика = АналитикиКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикиКомитента.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикиКомитента.Серия
	|		И &Подразделение = АналитикиКомитента.Склад
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ЕСТЬNULL(Товары.Характеристика.Принципал, Товары.Номенклатура.Принципал) <> НЕОПРЕДЕЛЕНО
	|	И ЕСТЬNULL(Товары.Характеристика.Принципал, Товары.Номенклатура.Принципал) <> &Комиссионер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Комиссионное вознаграждение у комиссионера
	|	0 КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Подразделение КАК Подразделение,
	|	&АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	&АналитикаКомиссионерКомитент КАК АналитикаУчетаПоПартнерам,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) РазделУчета,
	|	&НалогообложениеНДС КАК ВидДеятельностиНДС,
	|	&Менеджер КАК Менеджер,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьУпр,
	|	0 КАК Количество,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения
	|		* &КоэффициентПересчетаВВалютуУпр
	|		КАК ЧИСЛО(15,2)) КАК СуммаВыручки,
	|
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаВознаграждения
	|			- ДанныеДокумента.СуммаНДСВознаграждения)
	|		* &КоэффициентПересчетаВВалютуУпр
	|		КАК ЧИСЛО(15,2)) КАК СуммаВыручкиБезНДС,
	|
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаВознаграждения
	|			- ДанныеДокумента.СуммаНДСВознаграждения)
	|		* &КоэффициентПересчетаВВалютуРегл
	|		КАК ЧИСЛО(15,2)) КАК СуммаВыручкиРегл,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения
	|		* &КоэффициентПересчетаВВалютуРегл
	|		КАК ЧИСЛО(15,2)) КАК СуммаВыручкиСНДСРегл,
	|
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|	0 КАК ДопРасходыРегл,
	|	0 КАК ДопРасходыУпр,
	|
	|	0 КАК СуммаРучнойСкидки,
	|	0 КАК СуммаАвтоматическойСкидки,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Склад,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА &ДоговорПродажи
	|		ИНАЧЕ &Договор
	|	КОНЕЦ КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения - ДанныеДокумента.СуммаНДСВознаграждения КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ДанныеДокумента.СуммаВознаграждения КАК СуммаВВалютеДокумента,
	|	ДанныеДокумента.СуммаВознаграждения - ДанныеДокумента.СуммаНДСВознаграждения КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ВЫБОР &СтавкаНДСВознаграждения
	|	КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|	КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ,
	|	&ОтчетКомитенту КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Услуга КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Комиссионер КАК Организация,
	|	ВЫБОР 
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента 
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Комитент
	|	КОНЕЦ КАК Покупатель,
	|	&Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	Операция.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация) КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((Операция.СуммаВознаграждения - Операция.СуммаНДСВознаграждения) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(Операция.СуммаНДСВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ  КАК НДС
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК Операция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО Операция.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И СуммыДокументовВВалютеРегл.ИдентификаторСтроки = """"
	|			И (Операция.СуммаВознаграждения - Операция.СуммаНДСВознаграждения) = СуммыДокументовВВалютеРегл.СуммаБезНДС
	|			И Операция.СуммаНДСВознаграждения = СуммыДокументовВВалютеРегл.СуммаНДС
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.СуммаВознаграждения <> 0
	|	И &Комиссионер <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыАналитикВзаиморасчетов(Запрос);
	
	ПересчитатьТаблицуТоваров(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|	ТаблицаДокумента.СуммаНДСРегл КАК СуммаНДСРегл,
	|	ТаблицаДокумента.СуммаБезНДСРегл КАК БазаНДСРегл,
	|	ТаблицаДокумента.СуммаБезНДСУпр КАК БазаНДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|
	|	ТаблицаДокумента.СуммаБезНДСУпр КАК СуммаБезНДСУпр,
	|	ТаблицаДокумента.СуммаНДСУпр КАК СуммаНДСУпр,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам
	|
	|ИЗ
	|	ТаблицаТоваровПредварительная КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Услуги.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	Услуги.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Услуги.СтавкаНДС КАК СтавкаНДС,
	|	Услуги.СуммаСНДС - Услуги.СуммаНДС КАК СуммаБезНДС,
	|	Услуги.СуммаНДС КАК СуммаНДС,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА
	|		Услуги.СуммаСНДС - Услуги.СуммаНДС
	|	ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0) КОНЕЦ КАК СуммаБезНДСРегл,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА
	|		Услуги.СуммаНДС
	|	ИНАЧЕ ЕСТЬNULL(Суммы.СуммаНДСРегл, 0) КОНЕЦ КАК СуммаНДСРегл,
	|	ВЫБОР КОГДА ЕСТЬNULL(Суммы.БазаНДСРегл, 0) <> 0 ТОГДА
	|		Суммы.БазаНДСРегл
	|	КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА
	|		Услуги.СуммаСНДС - Услуги.СуммаНДС
	|		ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0)
	|	КОНЕЦ КАК БазаНДСРегл,
	|	ВЫБОР КОГДА ЕСТЬNULL(Суммы.БазаНДСУпр, 0) <> 0 ТОГДА
	|		Суммы.БазаНДСУпр
	|	КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА
	|		Услуги.СуммаСНДС - Услуги.СуммаНДС
	|		ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСУпр, 0)
	|	КОНЕЦ КАК БазаНДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА
	|		Услуги.СуммаСНДС - Услуги.СуммаНДС
	|	ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСУпр, 0) КОНЕЦ КАК СуммаБезНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА
	|		Услуги.СуммаНДС
	|	ИНАЧЕ ЕСТЬNULL(Суммы.СуммаНДСУпр, 0) КОНЕЦ КАК СуммаНДСУпр,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам
	|
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК Услуги
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Услуги.Ссылка
	|		И Услуги.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|		И (Услуги.СуммаСНДС - Услуги.СуммаНДС) = Суммы.СуммаБезНДС
	|		И Услуги.СуммаНДС = Суммы.СуммаНДС
	|
	|ГДЕ
	|	Услуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И Услуги.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	"""" КАК ИдентификаторСтроки,
	|	Документ.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения КАК СуммаБезНДС,
	|	Документ.СуммаНДСВознаграждения КАК СумаНДС,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА
	|		Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения
	|	КОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаБезНДС, 0) ТОГДА
	|		ЕСТЬNULL(ДанныеРегистра.СуммаБезНДСРегл, 0)
	|	ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА
	|		Документ.СуммаНДСВознаграждения
	|	КОГДА Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаНДС, 0) ТОГДА
	|		ЕСТЬNULL(ДанныеРегистра.СуммаНДСРегл, 0)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаНДСРегл,
	|
	|	ВЫБОР КОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаБезНДС, 0) ТОГДА
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ДанныеРегистра.БазаНДСРегл, 0) <> 0 ТОГДА
	|				ДанныеРегистра.БазаНДСРегл
	|			ИНАЧЕ ЕСТЬNULL(ДанныеРегистра.СуммаБезНДСРегл, 0)
	|		КОНЕЦ
	|	КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА
	|		Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК БазаНДСРегл,
	|
	|	ВЫБОР КОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаБезНДС, 0) ТОГДА
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ДанныеРегистра.БазаНДСУпр, 0) <> 0 ТОГДА
	|				ДанныеРегистра.БазаНДСУпр
	|			ИНАЧЕ ЕСТЬNULL(ДанныеРегистра.СуммаБезНДСУпр, 0)
	|		КОНЕЦ
	|	КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА
	|		Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК БазаНДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА
	|		Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения
	|	ИНАЧЕ ЕСТЬNULL(ДанныеРегистра.СуммаБезНДСУпр, 0) КОНЕЦ КАК СуммаБезНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА
	|		Документ.СуммаНДСВознаграждения
	|	ИНАЧЕ ЕСТЬNULL(ДанныеРегистра.СуммаНДСУпр, 0) КОНЕЦ КАК СуммаНДСУпр,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент КАК АналитикаУчетаПоПартнерам
	|
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК Документ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = &Ссылка
	|		И ДанныеРегистра.ИдентификаторСтроки = """"
	|
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|	И Документ.СуммаВознаграждения <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "Закупки";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	// Отражение задолженности перед комитентом 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеЗадолженностиПередКомитентом) КАК ХозяйственнаяОперация,
	|	&Комиссионер КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|
	|	&Партнер КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Комитент
	|	КОНЕЦ КАК Контрагент,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА &ДоговорПокупки
	|		ИНАЧЕ &Договор
	|	КОНЕЦ КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|
	|	0 КАК Количество,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК Сумма,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВВалютеДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПереданныеНаКомиссию";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МИНИМУМ(ВидыЗапасов.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период	КАК Период,
	|	ВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ВидыЗапасов.АналитикаУчетаПереданнойНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	&Комитент КАК Организация,
	|	ВидыЗапасов.ВидЗапасовКомитента КАК ВидЗапасов,
	|	(ВЫБОР
	|		КОГДА ВидыЗапасов.Количество < 0 ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) КАК Знак,
	|	СУММА(ВидыЗапасов.Количество) КАК Количество,
	|	&ОтчетКомиссионера КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.АналитикаУчетаПереданнойНоменклатуры,
	|	ВидыЗапасов.ВидЗапасовКомитента,
	|	ВидыЗапасов.НомерГТД,
	|	(ВЫБОР
	|		КОГДА ВидыЗапасов.Количество < 0 ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаУслугиКОформлениюОтчетовПринципалу(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "УслугиКОформлениюОтчетовПринципалу";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАгентскиеУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтАгентскиеУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	КОформлению.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&Комиссионер                                КАК Организация,
	|	Аналитика.КлючАналитики                     КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(АгентскиеУслуги.Соглашение,
	|				НЕОПРЕДЕЛЕНО)                   КАК Соглашение,
	|	ЕСТЬNULL(АгентскиеУслуги.Валюта,
	|				&Валюта)                        КАК Валюта,
	|	КОформлению.Количество                      КАК Количество,
	|	КОформлению.СуммаПродажи                    КАК СуммаВыручки,
	|	КОформлению.СуммаПродажиНДС                 КАК СуммаНДС,
	|	КОформлению.ДатаСчетаФактурыКомиссионера    КАК ДатаСчетаФактуры,
	|	КОформлению.СчетФактураВыставленныйКомиссионера.Номер КАК НомерСчетаФактуры,
	|	КОформлению.Покупатель                      КАК Покупатель
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК КОформлению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО КОформлению.Номенклатура = СпрНоменклатура.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтАгентскиеУслуги КАК АгентскиеУслуги
	|	ПО КОформлению.Номенклатура = АгентскиеУслуги.Номенклатура
	|		И КОформлению.Характеристика = АгентскиеУслуги.Характеристика
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Аналитика.Номенклатура = КОформлению.Номенклатура
	|		И Аналитика.Характеристика = КОформлению.Характеристика
	|		И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И ЕСТЬNULL(КОформлению.Характеристика.Принципал, СпрНоменклатура.Принципал) = Аналитика.Склад
	|ГДЕ
	|	КОформлению.Ссылка = &Ссылка
	|	И ЕСТЬNULL(КОформлению.Характеристика.Принципал, СпрНоменклатура.Принципал) <> НЕОПРЕДЕЛЕНО
	|	И ЕСТЬNULL(КОформлению.Характеристика.Принципал, СпрНоменклатура.Принципал) <> &Комиссионер
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераКомиссия) КАК ХозяйственнаяОперация,
	|	&Комитент КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	
	|	&Партнер КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Комиссионер
	|	КОНЕЦ КАК Контрагент,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	&Ссылка КАК ОбъектРасчетов,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК Сумма,
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаВознаграждения - ДанныеДокумента.СуммаНДСВознаграждения) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаБезНДС,
	|	
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения - ДанныеДокумента.СуммаНДСВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаРеглБезНДС,
	|	
	|	&Валюта КАК Валюта,
	|	ДанныеДокумента.СуммаВознаграждения КАК СуммаВВалюте,
	|	ДанныеДокумента.СуммаВознаграждения - ДанныеДокумента.СуммаНДСВознаграждения КАК СуммаБезНДСВВалюте,
	|	
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения - ДанныеДокумента.СуммаНДСВознаграждения КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСПредъявленный";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Операция.Дата                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.Комиссионер
	|	КОНЕЦ                                  КАК Поставщик,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	Операция.СтавкаНДСВознаграждения       КАК СтавкаНДС,
	|	Операция.НалогообложениеНДС            КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	ЕСТЬNULL(Суммы.БазаНДСРегл, 
	|		ВЫРАЗИТЬ(((Операция.СуммаВознаграждения - Операция.СуммаНДСВознаграждения)
	|					* &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2))) КАК СуммаБезНДС,
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, 
	|		ВЫРАЗИТЬ((Операция.СуммаНДСВознаграждения
	|					* &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2))) КАК НДС,
	|	ВЫБОР 
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ЕСТЬNULL(Суммы.СуммаНДСУпр, 
	|						ВЫРАЗИТЬ((Операция.СуммаНДСВознаграждения * &КоэффициентПересчетаВВалютуУпр) КАК ЧИСЛО(15,2))) 
	|		ИНАЧЕ 0
	|	КОНЕЦ                                  КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО                           КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК Операция
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО 
	|		Операция.Ссылка = Суммы.Регистратор
	|		И Суммы.ИдентификаторСтроки = """"
	|		И Суммы.БазаНДСРегл <> 0
	|		И (Операция.СуммаВознаграждения - Операция.СуммаНДСВознаграждения) = Суммы.СуммаБезНДС
	|		И Операция.СуммаНДСВознаграждения = Суммы.СуммаНДС
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Операция.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуиспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|	И Операция.СтавкаНДСВознаграждения <> 0
	|	
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.ТипСсылки                КАК ТипСсылки,
	|	ДанныеДокумента.Организация              КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация    КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Партнер                  КАК Партнер,
	|	ДанныеДокумента.Контрагент               КАК Контрагент,
	|	ДанныеДокумента.Договор                  КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ДополнительнаяЗапись     КАК ДополнительнаяЗапись,
	|	ДанныеДокумента.Подразделение            КАК Подразделение,
	|	ДанныеДокумента.МестоХранения            КАК МестоХранения,
	|	ДанныеДокумента.ДатаДокументаИБ          КАК ДатаДокументаИБ,
	|	ДанныеДокумента.Ссылка                   КАК Ссылка,
	|	ДанныеДокумента.НомерДокументаИБ         КАК НомерДокументаИБ,
	|	ДанныеДокумента.Ответственный            КАК Ответственный,
	|	ДанныеДокумента.Комментарий              КАК Комментарий,
	|	ДанныеДокумента.Валюта                   КАК Валюта,
	|	ДанныеДокумента.Сумма                    КАК Сумма,
	|	ДанныеДокумента.Статус                   КАК Статус,
	|	ДанныеДокумента.Проведен                 КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления          КАК ПометкаУдаления,
	|	ДанныеДокумента.Дополнительно            КАК Дополнительно,
	|	ДанныеДокумента.ДатаПервичногоДокумента  КАК ДатаПервичногоДокумента,
	|	ДанныеДокумента.НомерПервичногоДокумента КАК НомерПервичногоДокумента
	|ИЗ
	|	ВтОснований КАК ДанныеДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтОснований";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаРеестрДокументов.ТипСсылки                          КАК ТипСсылки,
	|	ТаблицаРеестрДокументов.Организация                        КАК Организация,
	|	ТаблицаРеестрДокументов.ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	ТаблицаРеестрДокументов.Партнер                            КАК Партнер,
	|	ТаблицаРеестрДокументов.Контрагент                         КАК Контрагент,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Договор)                  КАК Договор,
	|	ТаблицаРеестрДокументов.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	МИНИМУМ(ТаблицаРеестрДокументов.ДополнительнаяЗапись)      КАК ДополнительнаяЗапись,
	|	ТаблицаРеестрДокументов.Подразделение                      КАК Подразделение,
	|	ТаблицаРеестрДокументов.МестоХранения                      КАК МестоХранения,
	|	ТаблицаРеестрДокументов.ДатаДокументаИБ                    КАК ДатаДокументаИБ,
	|	ТаблицаРеестрДокументов.Ссылка                             КАК Ссылка,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.НомерДокументаИБ)         КАК НомерДокументаИБ,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Ответственный)            КАК Ответственный,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Комментарий)              КАК Комментарий,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Валюта)                   КАК Валюта,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Сумма)                    КАК Сумма,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Статус)                   КАК Статус,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Проведен)                 КАК Проведен,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.ПометкаУдаления)          КАК ПометкаУдаления,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.Дополнительно)            КАК Дополнительно,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.ДатаПервичногоДокумента)  КАК ДатаПервичногоДокумента,
	|	МАКСИМУМ(ТаблицаРеестрДокументов.НомерПервичногоДокумента) КАК НомерПервичногоДокумента
	|ПОМЕСТИТЬ ВтОснований
	|	ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка             КАК Ссылка,
	|		&Период                            КАК ДатаДокументаИБ,
	|		&Номер                             КАК НомерДокументаИБ,
	|		&ИдентификаторМетаданных           КАК ТипСсылки,
	|		&Комитент                          КАК Организация,
	|		&ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|		&Партнер                           КАК Партнер,
	|		&Контрагент                        КАК Контрагент,
	|		&Договор                           КАК Договор,
	|		НЕОПРЕДЕЛЕНО                       КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО                       КАК МестоХранения,
	|		&Подразделение                     КАК Подразделение,
	|		&Менеджер                          КАК Ответственный,
	|		ВЫРАЗИТЬ(&Комментарий КАК СТРОКА (100)) КАК Комментарий,
	|		&Валюта                            КАК Валюта,
	|		&СуммаДокумента                    КАК Сумма,
	|		НЕОПРЕДЕЛЕНО                       КАК Статус,
	|		&Проведен                          КАК Проведен,
	|		&ПометкаУдаления                   КАК ПометкаУдаления,
	|		ЛОЖЬ                               КАК ДополнительнаяЗапись,
	|		ВЫРАЗИТЬ(&ИнформацияПоКомиссионеру КАК СТРОКА (100)) КАК Дополнительно,
	|		&Период                            КАК ДатаПервичногоДокумента,
	|		&НомерДокумента                    КАК НомерПервичногоДокумента
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка   КАК Ссылка,
	|		&Период                  КАК ДатаДокументаИБ,
	|		&Номер                   КАК НомерДокументаИБ,
	|		&ИдентификаторМетаданных КАК ТипСсылки,
	|		&Комиссионер             КАК Организация,
	|		&ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|		&Партнер                 КАК Партнер,
	|		&Контрагент              КАК Контрагент,
	|		&Договор                 КАК Договор,
	|		НЕОПРЕДЕЛЕНО             КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО             КАК МестоХранения,
	|		&Подразделение           КАК Подразделение,
	|		&Менеджер                КАК Ответственный,
	|		ВЫРАЗИТЬ(&Комментарий КАК СТРОКА (100)) КАК Комментарий,
	|		&Валюта                  КАК Валюта,
	|		&СуммаДокумента          КАК Сумма,
	|		НЕОПРЕДЕЛЕНО             КАК Статус,
	|		&Проведен                КАК Проведен,
	|		&ПометкаУдаления         КАК ПометкаУдаления,
	|		ИСТИНА                   КАК ДополнительнаяЗапись,
	|		ВЫРАЗИТЬ(&ИнформацияПоКомитенту КАК СТРОКА (100)) КАК Дополнительно,
	|		ВЫБОР
	|			КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА &Период
	|			ИНАЧЕ &ДатаВходящегоДокумента
	|		КОНЕЦ                    КАК ДатаПервичногоДокумента,
	|		ВЫБОР
	|			КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА &НомерДокумента
	|			ИНАЧЕ &НомерВходящегоДокумента
	|		КОНЕЦ                    КАК НомерПервичногоДокумента
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка) КАК ТаблицаРеестрДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРеестрДокументов.ТипСсылки,
	|	ТаблицаРеестрДокументов.Организация,
	|	ТаблицаРеестрДокументов.ХозяйственнаяОперация,
	|	ТаблицаРеестрДокументов.Партнер,
	|	ТаблицаРеестрДокументов.Контрагент,
	|	ТаблицаРеестрДокументов.НаправлениеДеятельности,
	|	ТаблицаРеестрДокументов.Подразделение,
	|	ТаблицаРеестрДокументов.МестоХранения,
	|	ТаблицаРеестрДокументов.ДатаДокументаИБ,
	|	ТаблицаРеестрДокументов.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.ОтчетПоКомиссииМеждуОрганизациями";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерДокумента",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоКомитенту",    """""");
	ПереопределениеРасчетаПараметров.Вставить("НомерВходящегоДокумента",  """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоКомиссионеру", """""");
	ПереопределениеРасчетаПараметров.Вставить("Комитент",                 "ДанныеДокумента.Ссылка.Организация");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ХозяйственнаяОперация",
		Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями);
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтОснований", ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса));
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", 	ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", 		ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Отчет комиссионера о продажах
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "ОтчетКомиссионера";
	КомандаПечати.Представление = НСтр("ru = 'Отчет комиссионера о продажах'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		
		// Счет-фактура комитента
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактура";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура комитента'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВидФормы",      "Комитент");
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
		КомандаПечати.ДополнительныеПараметры.Вставить("ДополнитьПолученнымиСчетамиФактуры", Ложь);
		
		// Счет-фактура комитента (в валюте)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактураВВалюте";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура комитента (в валюте)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВидФормы",      "Комитент");
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
		КомандаПечати.ДополнительныеПараметры.Вставить("ДополнитьПолученнымиСчетамиФактуры", Ложь);
		
		// Счет-фактура комиссионера
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактура";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура комиссионера'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВидФормы",      "Комиссионер");
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
		КомандаПечати.ДополнительныеПараметры.Вставить("ДополнитьПолученнымиСчетамиФактуры", Истина);

		// Счет-фактура комиссионера (в валюте)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактураВВалюте";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура комиссионера (в валюте)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВидФормы",      "Комиссионер");
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
		КомандаПечати.ДополнительныеПараметры.Вставить("ДополнитьПолученнымиСчетамиФактуры", Истина);

		// УПД (Универсальный передаточный документ)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "УПД";
		КомандаПечати.Представление = НСтр("ru = 'УПД (Универсальный передаточный документ)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ДополнитьПолученнымиСчетамиФактуры", Истина);
	КонецЕсли;

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

// Формирует текст запроса для получения данных основания при печати Счет-фактуры.
//
Функция ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                                   КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ДанныеДокументов.Валюта                                   КАК Валюта,
	|	ДанныеДокументов.Организация                              КАК Организация,
	|	ДанныеДокументов.НалогообложениеНДС                       КАК НалогообложениеНДС,
	|	ДанныеДокументов.Подразделение                            КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                  КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)             КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)             КАК Грузополучатель,
	|	ДанныеДокументов.РасчетыЧерезОтдельногоКонтрагента        КАК РасчетыЧерезОтдельногоКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                              КАК Номенклатура,
	|	""""                                                      КАК Содержание,
	|	ДанныеДокументов.Комиссионер                              КАК Комиссионер,
	|	ВЫБОР КОГДА ДанныеДокументов.РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА ЕСТЬNULL(ДанныеДокументов.ДоговорПродажи.НаименованиеДляПечати, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ ЕСТЬNULL(ДанныеДокументов.Договор.НаименованиеДляПечати, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                                                     КАК Основание,
	|	НЕОПРЕДЕЛЕНО                            				  КАК ОснованиеДата,
	|	НЕОПРЕДЕЛЕНО                           					  КАК ОснованиеНомер,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДоверенностьЛицо,
	|	НЕОПРЕДЕЛЕНО                                              КАК Кладовщик,
	|	НЕОПРЕДЕЛЕНО                                              КАК ДолжностьКладовщика
	|
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&ДокументОснование_ОтчетПоКомиссииМеждуОрганизациями)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссии(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос(
	"
	|////////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Комиссионер КАК Комиссионер,
	|	ДанныеДокумента.Организация КАК Комитент,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|	"""" КАК ПредставительКомитента,
	|	ДанныеДокумента.Менеджер.ФизическоеЛицо КАК ПредставительКомиссионера
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|	И (НЕ ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Комиссионер,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.Организация.Префикс,
	|	ДанныеДокумента.Валюта,
	|	ДанныеДокумента.СуммаВознаграждения,
	|	"""",
	|	ДанныеДокумента.Менеджер.ФизическоеЛицо
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|	И ДанныеДокумента.Комиссионер <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Организация.Префикс,
	|	ДанныеДокумента.Валюта,
	|	ДанныеДокумента.СуммаВознаграждения,
	|	"""",
	|	ДанныеДокумента.Менеджер.ФизическоеЛицо
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|	И ДанныеДокумента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВложенныйЗапрос.Упаковка, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВложенныйЗапрос.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактуры,
	|	ВложенныйЗапрос.Покупатель КАК Покупатель,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.СуммаКомитента) КАК СуммаКомитента,
	|	СУММА(ВложенныйЗапрос.СуммаПродажи) КАК СуммаПродажи,
	|	СУММА(ВложенныйЗапрос.СуммаВознаграждения) КАК СуммаВознаграждения,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка КАК Ссылка,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		&ТекстЗапросаЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Упаковка КАК Упаковка,
	|		ТаблицаТовары.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|		ТаблицаТовары.Покупатель КАК Покупатель,
	|		ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|		ТаблицаТовары.Цена КАК Цена,
	|		ТаблицаТовары.СуммаСНДС КАК СуммаКомитента,
	|		ТаблицаТовары.СуммаПродажи КАК СуммаПродажи,
	|		ТаблицаТовары.СуммаВознаграждения КАК СуммаВознаграждения,
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВложенныйЗапрос.Упаковка, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ,
	|	ВложенныйЗапрос.ДатаСчетаФактурыКомиссионера,
	|	ВложенныйЗапрос.Покупатель
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(СуммаКомитента),
	|	СУММА(СуммаПродажи),
	|	СУММА(СуммаВознаграждения)
	|ПО
	|	Ссылка");
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
			
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Заголовок = НСтр("ru = 'Отчет комиссионера о продажах'");
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
	СтруктураДанныхДляПечати 	= Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, Заголовок",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		Заголовок);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                  КАК Ссылка,
	|	ДанныеДокументов.Валюта                  КАК Валюта,
	|	ДанныеДокументов.Организация             КАК Организация,
	|	ДанныеДокументов.Подразделение           КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
			МассивОбъектов,
			МенеджерВременныхТаблиц,
			"Комиссионер",
			Новый Структура(
				"Руководитель, ГлавныйБухгалтер",
				Перечисления.ОтветственныеЛицаОрганизаций.Руководитель,
				Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактураКомиссионера КАК ПредставлениеДокумента,
	|	2 КАК СтатусУПД,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	"""" КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ДанныеДокумента.Организация КАК Контрагент,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.Комиссионер КАК Организация,
	|	ДанныеДокумента.Комиссионер.Префикс КАК Префикс,
	|	0 КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ДанныеДокумента.Организация КАК Грузополучатель,
	|	ДанныеДокумента.Комиссионер КАК Грузоотправитель,
	|	ДанныеДокумента.Комиссионер.КПП КАК КПППоставщика,
	|	ДанныеДокумента.Организация.КПП КАК КПППокупателя,
	|	ДанныеДокумента.Организация.ИНН КАК ИННПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокумента.Валюта.Код КАК ВалютаКод,
	|	ИСТИНА КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	НЕОПРЕДЕЛЕНО КАК Основание,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЛицо,
	|	НЕОПРЕДЕЛЕНО КАК Кладовщик,
	|	НЕОПРЕДЕЛЕНО КАК ДолжностьКладовщика,
	|	НЕОПРЕДЕЛЕНО КАК Покупатель
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	Не ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|	И &ВыводитьОсновнойУПД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактураКомиссионера КАК ПредставлениеДокумента,
	|	2 КАК СтатусУПД,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	"""" КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Контрагент.ОбособленноеПодразделение
	|			ТОГДА ДанныеДокумента.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.Комиссионер КАК Организация,
	|	ДанныеДокумента.Комиссионер.Префикс КАК Префикс,
	|	0 КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ДанныеДокумента.Контрагент КАК Грузополучатель,
	|	ДанныеДокумента.Комиссионер КАК Грузоотправитель,
	|	ДанныеДокумента.Комиссионер.КПП КАК КПППоставщика,
	|	""""                           КАК КПППокупателя,
	|	ДанныеДокумента.Контрагент.ИНН КАК ИННПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокумента.Валюта.Код КАК ВалютаКод,
	|	ИСТИНА КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	НЕОПРЕДЕЛЕНО КАК Основание,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЛицо,
	|	НЕОПРЕДЕЛЕНО КАК Кладовщик,
	|	НЕОПРЕДЕЛЕНО КАК ДолжностьКладовщика,
	|	НЕОПРЕДЕЛЕНО КАК Покупатель
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|	И ДанныеДокумента.Комиссионер <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &ВыводитьОсновнойУПД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактураПосредника КАК ПредставлениеДокумента,
	|	2 КАК СтатусУПД,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ДанныеДокумента.Организация КАК Контрагент,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Контрагент.ОбособленноеПодразделение
	|			ТОГДА ДанныеДокумента.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Организация,
	|	ДанныеДокумента.Комиссионер.Префикс КАК Префикс,
	|	0 КАК ИндексПодразделения,
	|	"""" КАК Руководитель,
	|	"""" КАК ДолжностьРуководителя,
	|	"""" КАК ГлавныйБухгалтер,
	|	ДанныеДокумента.Организация КАК Грузополучатель,
	|	ДанныеДокумента.Контрагент КАК Грузоотправитель,
	|	ДанныеДокумента.Контрагент.КПП  КАК КПППоставщика,
	|	ДанныеДокумента.Организация.КПП КАК КПППокупателя,
	|	ДанныеДокумента.Организация.ИНН КАК ИННПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокумента.Валюта.Код КАК ВалютаКод,
	|	ИСТИНА КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	НЕОПРЕДЕЛЕНО КАК Основание,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЛицо,
	|	НЕОПРЕДЕЛЕНО КАК Кладовщик,
	|	НЕОПРЕДЕЛЕНО КАК ДолжностьКладовщика,
	|	НЕОПРЕДЕЛЕНО КАК Покупатель
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|	И ДанныеДокумента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &ВыводитьУПДПосредника
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Услуга КАК Номенклатура,
	|	ТаблицаДокумента.Услуга.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаДокумента.Услуга.Артикул
	|		ИНАЧЕ ТаблицаДокумента.Услуга.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	ТаблицаДокумента.Услуга.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Услуга.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.Услуга.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО КАК СтранаПроисхождения,
	|	НЕОПРЕДЕЛЕНО КАК СтранаПроисхожденияКод,
	|	1 КАК Количество,
	|	ТаблицаДокумента.СуммаВознаграждения - ТаблицаДокумента.СуммаНДСВознаграждения КАК Цена,
	|	ТаблицаДокумента.СуммаВознаграждения - ТаблицаДокумента.СуммаНДСВознаграждения КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДСВознаграждения КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения КАК СуммаСНДС,
	|	1 КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара,
	|	НЕОПРЕДЕЛЕНО КАК Покупатель
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&МассивОбъектов)
	|	И ТаблицаДокумента.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	Запрос.УстановитьПараметр("ПредставлениеСчетФактураКомиссионера", НСтр("ru='счет-фактура комиссионера'"));
	Запрос.УстановитьПараметр("ПредставлениеСчетФактураПосредника", НСтр("ru='счет-фактура посредника'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	Запрос.УстановитьПараметр("ВыводитьОсновнойУПД", 
		Не (ПараметрыПечати.Свойство("НеВыводитьОсновнойУПД") И ПараметрыПечати.НеВыводитьОсновнойУПД));
	Запрос.УстановитьПараметр("ВыводитьУПДПосредника", 
		Не (ПараметрыПечати.Свойство("НеВыводитьУПДПосредника") И ПараметрыПечати.НеВыводитьУПДПосредника));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл", ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                     КАК Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка                   КАК Упаковка,
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки)      КАК НомерСтроки
	|
	|ПОМЕСТИТЬ СтрокиТоваров
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                        КАК Ссылка,
	|	СтрокиТоваров.НомерСтроки                                      КАК НомерСтроки,
	|	Аналитика.Номенклатура                                         КАК Номенклатура,
	|	Аналитика.Характеристика                                       КАК Характеристика,
	|	ТаблицаДокумента.НомерГТД                                      КАК НомерГТД,
	|	СУММА(ТаблицаДокумента.Количество)                             КАК Количество,
	|	СУММА(ТаблицаДокумента.КоличествоУпаковок)                     КАК КоличествоУпаковок,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,
	|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
	|	))                                                             КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС                                     КАК СтавкаНДС,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДС
	|	))                                                             КАК СуммаНДС,
	|	
	|	ИСТИНА                                                         КАК ЭтоТовар,
	|	ТаблицаДокумента.Упаковка                                      КАК Упаковка,
	|	ТаблицаДокумента.ДатаСчетаФактурыКомиссионера                  КАК ДатаСчетаФактурыКомиссионера,
	|	ТаблицаДокумента.Покупатель                                    КАК Покупатель,
	|	
	|	ЕСТЬNULL(СчетФактураВыданный.Номер, ЕСТЬNULL(СчетФактураКомиссионеру.Номер, """")) КАК НомерСчетаФактурыКомиссионера
	|
	|ПОМЕСТИТЬ ОтчетПоКомиссииМеждуОрганизациямиТаблицаТоваров
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		И СуммыДокументовВВалютеРегл.Активность
	|		И &ПересчитыватьВВалютуРегл
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СтрокиТоваров КАК СтрокиТоваров
	|	ПО
	|		ТаблицаДокумента.Ссылка                       = СтрокиТоваров.Ссылка
	|		И ТаблицаДокумента.АналитикаУчетаНоменклатуры = СтрокиТоваров.АналитикаУчетаНоменклатуры
	|		И ТаблицаДокумента.Упаковка                   = СтрокиТоваров.Упаковка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаДокумента.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|	ПО
	|		ТаблицаДокумента.СчетФактураВыставленныйКомиссионера = СчетФактураВыданный.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
	|	ПО
	|		ТаблицаДокумента.СчетФактураВыставленныйКомиссионера = СчетФактураКомиссионеру.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	СтрокиТоваров.НомерСтроки,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.Упаковка,
	|	ТаблицаДокумента.НомерГТД,
	|	ТаблицаДокумента.ДатаСчетаФактурыКомиссионера,
	|	ТаблицаДокумента.Покупатель,
	|	ЕСТЬNULL(СчетФактураВыданный.Номер, ЕСТЬNULL(СчетФактураКомиссионеру.Номер, """"))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ТаблицаУслуги.Ссылка                                           КАК Ссылка,
	|	ТаблицаУслуги.НомерСтроки                                      КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура                                     КАК Номенклатура,
	|	ТаблицаУслуги.Характеристика                                   КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)                    КАК НомерГТД,
	|	СУММА(ТаблицаУслуги.Количество)                                КАК Количество,
	|	СУММА(ТаблицаУслуги.КоличествоУпаковок)                        КАК КоличествоУпаковок,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,
	|		ТаблицаУслуги.СуммаСНДС - ТаблицаУслуги.СуммаНДС
	|	))                                                             КАК СуммаБезНДС,
	|	
	|	ТаблицаУслуги.СтавкаНДС                                        КАК СтавкаНДС,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаНДСРегл,
	|		ТаблицаУслуги.СуммаНДС
	|	))                                                             КАК СуммаНДС,
	|	
	|	ЛОЖЬ                                                           КАК ЭтоТовар,
	|	ТаблицаУслуги.Упаковка                                         КАК Упаковка,
	|	ТаблицаУслуги.ДатаСчетаФактурыКомиссионера                     КАК ДатаСчетаФактурыКомиссионера,
	|	ТаблицаУслуги.Покупатель                                       КАК Покупатель,
	|	
	|	ЕСТЬNULL(СчетФактураВыданный.Номер, ЕСТЬNULL(СчетФактураКомиссионеру.Номер, """")) КАК НомерСчетаФактурыКомиссионер
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТаблицаУслуги
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаУслуги.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаУслуги.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаУслуги.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		И СуммыДокументовВВалютеРегл.Активность
	|		И &ПересчитыватьВВалютуРегл
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|	ПО
	|		ТаблицаУслуги.СчетФактураВыставленныйКомиссионера = СчетФактураВыданный.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
	|	ПО
	|		ТаблицаУслуги.СчетФактураВыставленныйКомиссионера = СчетФактураКомиссионеру.Ссылка
	|
	|ГДЕ
	|	ТаблицаУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУслуги.Ссылка,
	|	ТаблицаУслуги.НомерСтроки,
	|	ТаблицаУслуги.Номенклатура,
	|	ТаблицаУслуги.Характеристика,
	|	ТаблицаУслуги.СтавкаНДС,
	|	ТаблицаУслуги.Упаковка,
	|	ТаблицаУслуги.ДатаСчетаФактурыКомиссионера,
	|	ТаблицаУслуги.Покупатель,
	|	ЕСТЬNULL(СчетФактураВыданный.Номер, ЕСТЬNULL(СчетФактураКомиссионеру.Номер, """"))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СтрокиТоваров
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует временную таблицу, содержащую данные услуги по вознаграждению.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров
//
Процедура ПоместитьВременнуюТаблицуТоваровПоВознаграждению(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл", ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                      КАК Ссылка,
	|	ТаблицаДокумента.Услуга                                      КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО                                                 КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)                  КАК НомерГТД,
	|	1                                                            КАК Количество,
	|	1                                                            КАК КоличествоУпаковок,
	|	ТаблицаДокумента.СтавкаНДСВознаграждения                     КАК СтавкаНДС,
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,
	|		ТаблицаДокумента.СуммаВознаграждения
	|		- ТаблицаДокумента.СуммаНДСВознаграждения)               КАК СуммаБезНДС,
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДСВознаграждения)                 КАК СуммаНДС,
	|	0                                                            КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)       КАК Упаковка,
	|	ЛОЖЬ                                                         КАК ЭтоТовар,
	|	ДАТАВРЕМЯ(1, 1, 1)                                           КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО                                                 КАК Покупатель,
	|	ЛОЖЬ                                                         КАК ВернутьМногооборотнуюТару
	|ПОМЕСТИТЬ ОтчетПоКомиссииМеждуОрганизациямиТаблицаТоваров
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И СуммыДокументовВВалютеРегл.ИдентификаторСтроки = """"
	|		И СуммыДокументовВВалютеРегл.Активность
	|		И &ПересчитыватьВВалютуРегл";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Преобразует временную таблицу товаров, созданную функцией ПоместитьВременнуюТаблицуТоваров()
// к виду, используемому при печати счетов-фактуры.
// Дополняет таблицу услугой по вознаграждению.
// После преобразования исходная временная таблица уничтожается.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаТоваров
//
Процедура ПреобразоватьВременнуюТаблицуТоваровДляСчетаФактуры(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                                        КАК Ссылка,
	|	ТаблицаТоваров.Номенклатура                                  КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика                                КАК Характеристика,
	|	ТаблицаТоваров.НомерГТД                                      КАК НомерГТД,
	|	ТаблицаТоваров.Количество                                    КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок                            КАК КоличествоУпаковок,
	|	ТаблицаТоваров.СтавкаНДС                                     КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаБезНДС                                   КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС                                      КАК СуммаНДС,
	|	ТаблицаТоваров.НомерСтроки                                   КАК НомерСтроки,
	|	ТаблицаТоваров.Упаковка                                      КАК Упаковка,
	|	ТаблицаТоваров.ЭтоТовар                                      КАК ЭтоТовар,
	|	ТаблицаТоваров.ДатаСчетаФактурыКомиссионера                  КАК ДатаСчетаФактурыКомиссионера,
	|	ТаблицаТоваров.Покупатель                                    КАК Покупатель,
	|	ЛОЖЬ                                                         КАК ВернутьМногооборотнуюТару,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыВыданныхСчетовФактур.ВыставляемыйКомиссионеру)   КАК ТипСчетаФактуры
	|
	|ПОМЕСТИТЬ ОтчетПоКомиссииМеждуОрганизациямиТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                      КАК Ссылка,
	|	ТаблицаДокумента.Услуга                                      КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО                                                 КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)                  КАК НомерГТД,
	|	1                                                            КАК Количество,
	|	1                                                            КАК КоличествоУпаковок,
	|	ТаблицаДокумента.СтавкаНДСВознаграждения                     КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения
	|		- ТаблицаДокумента.СуммаНДСВознаграждения                КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДСВознаграждения                      КАК СуммаНДС,
	|	0                                                            КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)       КАК Упаковка,
	|	ЛОЖЬ                                                         КАК ЭтоТовар,
	|	ДАТАВРЕМЯ(1, 1, 1)                                           КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО                                                 КАК Покупатель,
	|	ЛОЖЬ                                                         КАК ВернутьМногооборотнуюТару,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыВыданныхСчетовФактур.НаРеализацию) КАК ТипСчетаФактуры
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваров
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
		
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
			СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
		КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Состояние

// Осуществляет вычисление текущего состояния отчета по комиссии на стороне получателя.
//
// Параметры:
//	ОтчетПоКомиссии         - ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями - Документ, состояние которого необходимо вычислить
//	Договор                 - СправочникСсылка.ДоговорыКонтрагентов    - Договор с клиентом
//	СостояниеРасчетов       - УправляемаяФорма - Форма, в реквизиты которой будет помещено рассчитанное состояние
//
Процедура РассчитатьСостояниеПолучатель(Знач ОтчетПоКомиссии, Знач Договор, СостояниеРасчетов, Организация=Неопределено) Экспорт
	
	ЗаполнитьЗначенияСвойств(СостояниеРасчетов, СтруктураСостоянияРасчетовПолучатель());
	
	Если ЗначениеЗаполнено(ОтчетПоКомиссии) И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РасчетыСПоставщиками) Тогда
		УстановитьПривилегированныйРежим(Истина);
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ВЫБОР
		                      |						КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |							ТОГДА ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0) - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |						ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0)
		                      |					КОНЕЦ КАК ЧИСЛО(15, 2))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаОплатыПолучатель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ВЫБОР
		                      |						КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |							ТОГДА ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0) - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |						ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0)
		                      |					КОНЕЦ * 100 / ВЫБОР
		                      |						КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |							ТОГДА ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |						ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)
		                      |					КОНЕЦ КАК ЧИСЛО(15, 0))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентОплатыПолучатель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) < 0
		                      |			ТОГДА ВЫРАЗИТЬ(-ЕСТЬNULL(РасчетыСПоставщикамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) КАК ЧИСЛО(15, 2))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаПросроченнойОплатыПолучатель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |			ТОГДА ВЫБОР
		                      |					КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |						ТОГДА ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |					ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)
		                      |				КОНЕЦ
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаПоступления,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) КАК ЧИСЛО(15, 0))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентПоступления,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.Проведен
		                      |				И (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |					ИЛИ ДокументОтчетПоКомиссии.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов))
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) КАК ЧИСЛО(15, 2))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаДолгаПолучатель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
		                      |			ТОГДА ВЫБОР
		                      |					КОГДА ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) > 0
		                      |						ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) КАК ЧИСЛО(15, 0))
		                      |					ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(-РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) КАК ЧИСЛО(15, 0))
		                      |				КОНЕЦ
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентДолгаПолучатель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.Проведен
		                      |				И ДокументОтчетПоКомиссии.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |			ТОГДА -РасчетыСПоставщикамиОстатки.КОплатеКонечныйОстаток
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаКОплатеПолучатель
		                      |ИЗ
		                      |	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДокументОтчетПоКомиссии
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщиками.ОстаткиИОбороты(
		                      |				,
		                      |				,
		                      |				,
		                      |				,
		                      |				ЗаказПоставщику = &РасчетныйДокумент
		                      |					И (АналитикаУчетаПоПартнерам.Организация = &Организация
		                      |						ИЛИ &Организация = НЕОПРЕДЕЛЕНО)) КАК РасчетыСПоставщикамиОстатки
		                      |		ПО (ИСТИНА)
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщиками.Остатки(
		                      |				КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ),
		                      |				ЗаказПоставщику = &РасчетныйДокумент
		                      |					И (АналитикаУчетаПоПартнерам = &Организация
		                      |						ИЛИ &Организация = НЕОПРЕДЕЛЕНО)) КАК РасчетыСПоставщикамиОстаткиНаДатуАктуальности
		                      |		ПО (ИСТИНА)
		                      |ГДЕ
		                      |	ДокументОтчетПоКомиссии.Ссылка = &ОтчетПоКомиссии");
		
		ПорядокРасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтчетПоКомиссии, "ПорядокРасчетов");
		
		Запрос.УстановитьПараметр("ОтчетПоКомиссии", ОтчетПоКомиссии);
		Запрос.УстановитьПараметр("РасчетныйДокумент", ?(ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов,
			Договор,
			ОтчетПоКомиссии));
		Запрос.УстановитьПараметр("ТекущаяДата",  НачалоДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СостояниеРасчетов, Выборка);
		
	КонецЕсли;
	
КонецПроцедуры

// Осуществляет вычисление текущего состояния отчета по комиссии на стороне отправителя.
//
// Параметры:
//	ОтчетПоКомиссии  - ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями - Документ, состояние которого необходимо вычислить
//	Договор                 - СправочникСсылка.ДоговорыКонтрагентов    - Договор с клиентом
//	СостояниеРасчетов       - УправляемаяФорма - Форма, в реквизиты которой будет помещено рассчитанное состояние
//
Процедура РассчитатьСостояниеОтправитель(Знач ОтчетПоКомиссии, Знач Договор, СостояниеРасчетов, Организация) Экспорт
	
	ЗаполнитьЗначенияСвойств(СостояниеРасчетов, СтруктураСостоянияРасчетовОтправитель());
	
	Если ЗначениеЗаполнено(ОтчетПоКомиссии) И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РасчетыСКлиентами) Тогда
		УстановитьПривилегированныйРежим(Истина);
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ВЫБОР
		                      |					КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |						ТОГДА ДокументОтчетПоКомиссии.СуммаДокумента - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |					ИНАЧЕ ДокументОтчетПоКомиссии.СуммаДокумента
		                      |				КОНЕЦ > 0
		                      |			ТОГДА ВЫБОР
		                      |					КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |						ТОГДА ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0) - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |					ИНАЧЕ ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0)
		                      |				КОНЕЦ
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаОплатыОтправитель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ВЫБОР
		                      |					КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |						ТОГДА ДокументОтчетПоКомиссии.СуммаДокумента - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |					ИНАЧЕ ДокументОтчетПоКомиссии.СуммаДокумента
		                      |				КОНЕЦ > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ВЫБОР
		                      |						КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |							ТОГДА ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0) - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |						ИНАЧЕ ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0)
		                      |					КОНЕЦ * 100 / ВЫБОР
		                      |						КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |							ТОГДА ДокументОтчетПоКомиссии.СуммаДокумента - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |						ИНАЧЕ ДокументОтчетПоКомиссии.СуммаДокумента
		                      |					КОНЕЦ КАК ЧИСЛО(15, 0))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентОплатыОтправитель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ВЫБОР
		                      |					КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |						ТОГДА ДокументОтчетПоКомиссии.СуммаДокумента - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |					ИНАЧЕ ДокументОтчетПоКомиссии.СуммаДокумента
		                      |				КОНЕЦ > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСКлиентамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) КАК ЧИСЛО(15, 2))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаПросроченнойОплатыОтправитель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ВЫБОР
		                      |					КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |						ТОГДА ДокументОтчетПоКомиссии.СуммаДокумента - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |					ИНАЧЕ ДокументОтчетПоКомиссии.СуммаДокумента
		                      |				КОНЕЦ > 0
		                      |			ТОГДА ВЫБОР
		                      |					КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |						ТОГДА ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаПриход, 0) - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |					ИНАЧЕ ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаПриход, 0)
		                      |				КОНЕЦ
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаОтгрузки,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ВЫБОР
		                      |					КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |						ТОГДА ДокументОтчетПоКомиссии.СуммаДокумента - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |					ИНАЧЕ ДокументОтчетПоКомиссии.СуммаДокумента
		                      |				КОНЕЦ > 0
		                      |			ТОГДА ВЫРАЗИТЬ(ВЫБОР
		                      |						КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |							ТОГДА ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаПриход, 0) - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |						ИНАЧЕ ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаПриход, 0)
		                      |					КОНЕЦ * 100 / ВЫБОР
		                      |						КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |							ТОГДА ДокументОтчетПоКомиссии.СуммаДокумента - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |						ИНАЧЕ ДокументОтчетПоКомиссии.СуммаДокумента
		                      |					КОНЕЦ КАК ЧИСЛО(15, 0))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентОтгрузки,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.Проведен
		                      |				И (ВЫБОР
		                      |						КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |							ТОГДА ДокументОтчетПоКомиссии.СуммаДокумента - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |						ИНАЧЕ ДокументОтчетПоКомиссии.СуммаДокумента
		                      |					КОНЕЦ > 0
		                      |					ИЛИ ДокументОтчетПоКомиссии.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов))
		                      |			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0) КАК ЧИСЛО(15, 2))
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаДолгаОтправитель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |				И ДокументОтчетПоКомиссии.Проведен
		                      |				И ВЫБОР
		                      |					КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |						ТОГДА ДокументОтчетПоКомиссии.СуммаДокумента - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |					ИНАЧЕ ДокументОтчетПоКомиссии.СуммаДокумента
		                      |				КОНЕЦ > 0
		                      |			ТОГДА ВЫБОР
		                      |					КОГДА ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0) > 0
		                      |						ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ВЫБОР
		                      |									КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |										ТОГДА ДокументОтчетПоКомиссии.СуммаДокумента - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |									ИНАЧЕ ДокументОтчетПоКомиссии.СуммаДокумента
		                      |								КОНЕЦ КАК ЧИСЛО(15, 0))
		                      |					ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(-РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ВЫБОР
		                      |								КОГДА ДокументОтчетПоКомиссии.УдержатьВознаграждение
		                      |									ТОГДА ДокументОтчетПоКомиссии.СуммаДокумента - ДокументОтчетПоКомиссии.СуммаВознаграждения
		                      |								ИНАЧЕ ДокументОтчетПоКомиссии.СуммаДокумента
		                      |							КОНЕЦ КАК ЧИСЛО(15, 0))
		                      |				КОНЕЦ
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ПроцентДолгаОтправитель,
		                      |	ВЫБОР
		                      |		КОГДА ДокументОтчетПоКомиссии.Проведен
		                      |				И ДокументОтчетПоКомиссии.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		                      |			ТОГДА РасчетыСКлиентамиОстатки.КОплатеКонечныйОстаток
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК СуммаКОплатеОтправитель
		                      |ИЗ
		                      |	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДокументОтчетПоКомиссии
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами.ОстаткиИОбороты(
		                      |				,
		                      |				,
		                      |				,
		                      |				,
		                      |				ЗаказКлиента = &РасчетныйДокумент
		                      |					И (АналитикаУчетаПоПартнерам.Организация = &Организация
		                      |						ИЛИ &Организация = НЕОПРЕДЕЛЕНО)) КАК РасчетыСКлиентамиОстатки
		                      |		ПО (ИСТИНА)
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами.Остатки(
		                      |				КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ),
		                      |				ЗаказКлиента = &РасчетныйДокумент
		                      |					И (АналитикаУчетаПоПартнерам.Организация = &Организация
		                      |						ИЛИ &Организация = НЕОПРЕДЕЛЕНО)) КАК РасчетыСКлиентамиОстаткиНаДатуАктуальности
		                      |		ПО (ИСТИНА)
		                      |ГДЕ
		                      |	ДокументОтчетПоКомиссии.Ссылка = &ОтчетПоКомиссии");
		
		ПорядокРасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтчетПоКомиссии, "ПорядокРасчетов");
		
		Запрос.УстановитьПараметр("ОтчетПоКомиссии", ОтчетПоКомиссии);
		Запрос.УстановитьПараметр("РасчетныйДокумент", ?(ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов,
			Договор,
			ОтчетПоКомиссии));
		Запрос.УстановитьПараметр("ТекущаяДата",  НачалоДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СостояниеРасчетов, Выборка);
		
	КонецЕсли;
	
КонецПроцедуры

// Осуществляет инициализацию структуры состояния расчетов.
Функция СтруктураСостоянияРасчетовПолучатель()
	
	СтруктураСостоянияРасчетов = Новый Структура;
	СтруктураСостоянияРасчетов.Вставить("СуммаОплатыПолучатель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаПоступления", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентОплатыПолучатель", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентПоступления", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаПросроченнойОплатыПолучатель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаДолгаПолучатель", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентДолгаПолучатель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаКОплатеПолучатель", 0);
	
	Возврат СтруктураСостоянияРасчетов
	
КонецФункции

// Осуществляет инициализацию структуры состояния расчетов.
//
Функция СтруктураСостоянияРасчетовОтправитель()
	
	СтруктураСостоянияРасчетов = Новый Структура;
	СтруктураСостоянияРасчетов.Вставить("СуммаОплатыОтправитель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаОтгрузки", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентОплатыОтправитель", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентОтгрузки", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаПросроченнойОплатыОтправитель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаДолгаОтправитель", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентДолгаОтправитель", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаКОплатеОтправитель", 0);
	
	Возврат СтруктураСостоянияРасчетов
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УП 2.4.1,
// заполняет реквизит "Группа финансового учета получателя" документа "ОтчетПоКомиссииМеждуОрганизациями".
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетПоКомиссии.Ссылка
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ОтчетПоКомиссии
	|ГДЕ
	|	(ОтчетПоКомиссии.ГруппаФинансовогоУчетаПолучателя = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)
	|		И ОтчетПоКомиссии.ГруппаФинансовогоУчетаПолучателя <> ОтчетПоКомиссии.ГруппаФинансовогоУчета)
	|	ИЛИ ОтчетПоКомиссии.НачалоПериода = &ПустаяДата
	|	ИЛИ ОтчетПоКомиссии.КонецПериода = &ПустаяДата
	|");
	
	Запрос.УстановитьПараметр("ПустаяДата", Дата("00010101000000"));
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ОтчетПоКомиссииМеждуОрганизациями";
	
	МетаданныеДокумента = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка						  КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных			  КАК ВерсияДанных,
	|	ОбъектыДляОбработки.Ссылка.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОбъектыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеДокумента,
									Выборка.Ссылка,
									ТекстСообщения);
			Продолжить;
			
		КонецПопытки;
		
		ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
		Если ДокументОбъект = Неопределено Тогда
			ЗафиксироватьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДокументОбъект.ГруппаФинансовогоУчетаПолучателя) Тогда
			ДокументОбъект.ГруппаФинансовогоУчетаПолучателя = ДокументОбъект.ГруппаФинансовогоУчета;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДокументОбъект.НачалоПериода) Тогда
			ДокументОбъект.НачалоПериода = НачалоМесяца(ДокументОбъект.Дата);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДокументОбъект.КонецПериода) Тогда
			ДокументОбъект.КонецПериода = КонецМесяца(ДокументОбъект.Дата);
		КонецЕсли;
		
		Попытка
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект, , , РежимЗаписиДокумента.Запись);
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеДокумента,
				Выборка.Ссылка,
				ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
