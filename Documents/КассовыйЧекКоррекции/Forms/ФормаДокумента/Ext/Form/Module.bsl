
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеВопросПроведениеПередПечатьюЧека(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Если Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение)) Тогда
			НапечататьЧекКоррекцииКлиент();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;  
	
	КвалификаторСтроки = Новый КвалификаторыСтроки(50);
	ОснованиеДляКоррекцииЗаданоТолькоСтрокой = Метаданные.ОпределяемыеТипы.ОснованиеКассовогоЧекаКоррекцииБПО.Тип = Новый ОписаниеТипов("Строка",, КвалификаторСтроки);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УстановитьРеквизитыФормы()
	КонецЕсли;
	
	КассовыйЧекКоррекцииПереопределяемый.ПриСозданииНаСервере(Объект, ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	УстановитьДоступностьЭлементовИФормы();
	
	Если Не ПустаяСтрока(Объект.Организация) Тогда
		ОбновитьСистемыНалогообложения();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьРеквизитыФормы();
	
	КассовыйЧекКоррекцииПереопределяемый.ПриЧтенииНаСервере(Объект, ЭтотОбъект, ТекущийОбъект);
	
	УстановитьДоступностьЭлементовИФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьДоступностьЭлементовИФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	КассовыйЧекКоррекцииПереопределяемый.ПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапки

&НаСервере
Процедура ОбновитьСистемыНалогообложения();
	
	СтандартнаяОбработка = Истина;
	МассивСистемНалогообложения = Новый Массив();
	
	КассовыйЧекКоррекцииПереопределяемый.ПолучитьДоступныеСистемыНалогообложения(Объект.Организация, МассивСистемНалогообложения, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка Тогда
		Для Каждого СистемаНалогообложенияККТ Из Перечисления.ТипыСистемНалогообложенияККТ Цикл
			МассивСистемНалогообложения.Добавить(СистемаНалогообложенияККТ);
		КонецЦикла;
	КонецЕсли;
	
	СписокВыбора = Элементы.СистемаНалогообложения.СписокВыбора;
	СписокВыбора.Очистить();
	
	Для Каждого СистемаНалогообложения Из МассивСистемНалогообложения Цикл
		СписокВыбора.Добавить(СистемаНалогообложения);
	КонецЦикла;
	
	Если МассивСистемНалогообложения.Количество() = 1 Тогда
		Объект.СистемаНалогообложения = МассивСистемНалогообложения[0];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.КассаККМ = "";
	
	ОбновитьСистемыНалогообложения();
	
КонецПроцедуры

&НаКлиенте
Процедура КассаККМПриИзменении(Элемент)
	
	КассаККМПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеДляКоррекцииПриИзменении(Элемент)
	
	Если НЕ ОснованиеДляКоррекцииЗаданоТолькоСтрокой И ЗначениеЗаполнено(Объект.ОснованиеДляКоррекции) Тогда
		ОснованиеДляКоррекцииПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатаПриИзменении(Элемент)
	
	ПересчитатьДокументНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура выполняет печать чека на фискальном регистраторе.
//
&НаКлиенте
Процедура НапечататьЧекКоррекции(Команда)
	
	ОчиститьСообщения();
	
	Если Объект.ПробитЧек Тогда
		ТекстСообщения = НСтр("ru = 'Чек уже пробит на фискальном устройстве.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеВопросПроведениеПередПечатьюЧека", ЭтотОбъект);
	
	Если КассовыйЧекКоррекцииКлиентПереопределяемый.ПроверитьВозможностьПечатиЧека(ОбработчикОповещения, ЭтотОбъект) Тогда
		НапечататьЧекКоррекцииКлиент();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедуры

#Область СлужебныеПроцедурыКлеинт

&НаСервере
Функция ВернутьИтогиОплатыПоВиду(ТипОплаты)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ТипОплаты", ТипОплаты);
	НайденныеСтроки = Объект.Оплата.Выгрузить(ПараметрыОтбора,"Сумма");
	Возврат НайденныеСтроки.Итог("Сумма");
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыЧека();
	
	РеквизитыКассир = ПолучитьРеквизитыКассира();
	
	ПараметрыЧека = МенеджерОборудованияКлиентСервер.ПараметрыОперацииЧекаКоррекции();
		
	ПараметрыЧека.ТипРасчета   = Объект.ТипРасчета;
	ПараметрыЧека.ТипКоррекции = Объект.ТипКоррекции;
	
	ПараметрыЧека.Кассир     = РеквизитыКассир.Наименование; // ФИО лица, осуществившего расчет с покупателем (клиентом), оформившего кассовый чек.
	ПараметрыЧека.КассирИНН  = РеквизитыКассир.ИНН; // Идентификационный номер налогоплательщика кассира, при наличии.
	ПараметрыЧека.Сумма      = Объект.СуммаДокумента;
	
	ПараметрыЧека.СистемаНалогообложения  = Объект.СистемаНалогообложения;  // Системы налогообложения
	
	Если ОснованиеДляКоррекцииЗаданоТолькоСтрокой Тогда
		ПараметрыЧека.НаименованиеОснования = Объект.ОснованиеДляКоррекции;   // Наименование документа основания для коррекции
		Если ЗначениеЗаполнено(Объект.ДатаДокументаОснования) Тогда
			ПараметрыЧека.ДатаДокументаОснования  = Объект.ДатаДокументаОснования;  // Дата документа основания для коррекции
		КонецЕсли;
		ПараметрыЧека.НомерДокументаОснования = Объект.НомерДокументаОснования; // Номер документа основания для коррекции
	ИначеЕсли ЗначениеЗаполнено(Объект.ОснованиеДляКоррекции) И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Объект.ОснованиеДляКоррекции)) Тогда
		ПараметрыЧека.НаименованиеОснования   = Строка(ТипЗнч(Объект.ОснованиеДляКоррекции)); 
		ПараметрыЧека.ДатаДокументаОснования  = Объект.ОснованиеДляКоррекции.Дата;
		ПараметрыЧека.НомерДокументаОснования = Объект.ОснованиеДляКоррекции.Номер;
	КонецЕсли;
		
	ПараметрыЧека.СуммаБезНДС = Объект.СуммаБезНДС;
	ПараметрыЧека.СуммаНДС0   = Объект.СуммаНДС0;
	ПараметрыЧека.СуммаНДС10  = Объект.СуммаНДС10;
	ПараметрыЧека.СуммаНДС18  = Объект.СуммаНДС18;
	ПараметрыЧека.СуммаНДС110 = Объект.СуммаНДС110;
	ПараметрыЧека.СуммаНДС118 = Объект.СуммаНДС118;
	
	ПараметрыЧека.НаличнаяОплата           = ВернутьИтогиОплатыПоВиду(Перечисления.ТипыОплатыККТ.Наличные);
	ПараметрыЧека.ЭлектроннаяОплаты        = ВернутьИтогиОплатыПоВиду(Перечисления.ТипыОплатыККТ.Электронно);
	ПараметрыЧека.Предоплатой              = ВернутьИтогиОплатыПоВиду(Перечисления.ТипыОплатыККТ.Предоплата);
	ПараметрыЧека.Постоплатой              = ВернутьИтогиОплатыПоВиду(Перечисления.ТипыОплатыККТ.Постоплата);
	ПараметрыЧека.ВстречнымПредоставлением = ВернутьИтогиОплатыПоВиду(Перечисления.ТипыОплатыККТ.ВстречноеПредоставление);
	
	Возврат ПараметрыЧека;
	
КонецФункции

&НаКлиенте
Процедура НапечататьЧекКоррекцииКлиент()
	
	Перем Отказ, ИдентификаторУстройства, ИспользоватьКассуБезПодключенияОборудования;
	
	Если ПустаяСтрока(Объект.ПодключаемоеОборудование) И ПустаяСтрока(Объект.КассаККМ) Тогда
		ТекстСообщения = НСтр("ru = 'Фискальное устройство не выбрано.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	СуммаНалогов = Объект.СуммаБезНДС + Объект.СуммаНДС0 + Объект.СуммаНДС10 + Объект.СуммаНДС18 + Объект.СуммаНДС110 + Объект.СуммаНДС118;
	Если СуммаНалогов > Объект.СуммаДокумента Тогда 
		ТекстСообщения = НСтр("ru = 'Сумма налогов больше суммы документа.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
		
	Отказ = Ложь;
	
	ПодготовитьИПроверитьПечатьЧека(Отказ, ИдентификаторУстройства, ИспользоватьКассуБезПодключенияОборудования);
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	Если НЕ ИспользоватьПодключаемоеОборудование ИЛИ ИспользоватьКассуБезПодключенияОборудования Тогда
		
		Объект.НомерЧекаККМ  = КассовыйЧекКоррекцииКлиентПереопределяемый.ПорядковыйНомерПродажи();
		Объект.ПробитЧек     = Истина;
		
		Модифицированность = Истина;
		
		РезультатЗаписи = Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
		
		Если РезультатЗаписи = Истина Тогда
			КассовыйЧекКоррекцииКлиентПереопределяемый.УвеличитьПорядковыйНомерПродажи();
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	Если ИдентификаторУстройства <> Неопределено Тогда
		
		Доступность = Ложь;
		
		Контекст = Новый Структура("ИдентификаторУстройства", ИдентификаторУстройства);
		
		ПараметрыЧека = ПолучитьПараметрыЧека();
	
		Оповещение = Новый ОписаниеОповещения("НапечататьЧекКоррекцииЗавершение", ЭтотОбъект, Контекст);
		МенеджерОборудованияКлиент.НачатьФормированиеЧекаКоррекцииНаФискальномУстройстве(Оповещение, УникальныйИдентификатор, ПараметрыЧека, ИдентификаторУстройства); 
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НапечататьЧекКоррекцииЗавершение(РезультатВыполнения, ПараметрыОперации) Экспорт
	
	Доступность = Истина;
	
	Если РезультатВыполнения.Результат Тогда
		
		// Установить полученное значение номера чека реквизиту документа.
		Объект.НомерЧекаККМ = РезультатВыполнения.ВыходныеПараметры[1];
		Объект.ПробитЧек    = Истина;
		Модифицированность  = Истина;
		РезультатЗаписи = Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
		
		Если РезультатЗаписи = Истина Тогда
			КассовыйЧекКоррекцииКлиентПереопределяемый.УвеличитьПорядковыйНомерПродажи();
		КонецЕсли;
		
	Иначе
		ТекстСообщения = НСтр("ru = 'При печати чека коррекции произошла ошибка.
									|Чек коррекции не напечатан на фискальном устройстве.
									|Дополнительное описание: %ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыСервер

&НаСервере
Процедура УстановитьРеквизитыФормы()
	
	КвалификаторСтроки = Новый КвалификаторыСтроки(10);
	КассаККМОтсутствуетВКонфигурации = Метаданные.ОпределяемыеТипы.КассаБПО.Тип = Новый ОписаниеТипов("Строка",,КвалификаторСтроки);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементовИФормы()
	
	ТолькоПросмотр = ТолькоПросмотр ИЛИ Объект.ПробитЧек;
	ТолькоПросмотр = ТолькоПросмотр ИЛИ ЗначениеЗаполнено(Объект.НомерЧекаККМ);
	
	Элементы.НапечататьЧек.Доступность = НЕ ТолькоПросмотр;
	
	Элементы.ГруппаНомерДатаОснования.Видимость = ОснованиеДляКоррекцииЗаданоТолькоСтрокой;
	КассовыйЧекКоррекцииПереопределяемый.УстановитьДоступностьЭлементовИФормы(Объект, ЭтотОбъект);
	
	Элементы.КассаККМ.Видимость = НЕ КассаККМОтсутствуетВКонфигурации;
	Элементы.ПодключаемоеОборудование.Видимость = КассаККМОтсутствуетВКонфигурации;
	
КонецПроцедуры

&НаСервере
Процедура КассаККМПриИзмененииНаСервере()
	
	КассовыйЧекКоррекцииПереопределяемый.КассаККМПриИзменении(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ОснованиеДляКоррекцииПриИзмененииНаСервере()
	
	КассовыйЧекКоррекцииПереопределяемый.ОснованиеДляКоррекцииПриИзменении(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьИПроверитьПечатьЧека(Отказ, 
										  ИдентификаторУстройства, 
										  ИспользоватьКассуБезПодключенияОборудования)
	
	КассовыйЧекКоррекцииПереопределяемый.ПодготовитьИПроверитьПечатьЧека(Объект,
											Отказ, 
											ИдентификаторУстройства, 
											ИспользоватьКассуБезПодключенияОборудования);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитыКассира()
	
	РеквизитыКассир = КассовыйЧекКоррекцииПереопределяемый.ПолучитьРеквизитыКассира(Объект);
	
	Возврат РеквизитыКассир;
	
КонецФункции

&НаКлиенте
Процедура КассаККМНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	КассовыйЧекКоррекцииКлиентПереопределяемый.КассаККМНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, Объект);
	
КонецПроцедуры

// Процедура обновляет информацию о текущем состоянии документа.
//
&НаКлиенте
Процедура ПересчитатьДокументНаКлиенте()
	
	Объект.СуммаДокумента = Объект.Оплата.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти