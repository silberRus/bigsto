#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
	Документы.СчетФактураВыданный.ДобавитьКомандуСоздатьНаОснованииКорректировочныйСчетФактура(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура выданный".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОснованииКорректировочныйСчетФактура(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураВыданный) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.КорректировочныйСчетФактура";
		КомандаСоздатьНаОсновании.Идентификатор = "КорректировочныйСчетФактура";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Корректировочный/исправительный счет-фактура'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Добавляет команду создания документа "Счет-фактура выданный".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураВыданный) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураВыданный.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураВыданный);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
КонецПроцедуры

// Функция находит счета-фактуры заданного документа.
//
// Параметры:
//	Основание - ДокументСсылка - Документ, для которого необходимо найти счет-фактуру
//	ПараметрыОтбора - Структура - Отбор счетов-фактуры по реквизитам. Ключ структуры является именем реквизита.
//	РеквизитыСчетаФактуры - Структура - Возвращаемый. Данные счета-фактуры (Ссылка, Номер, Дата, Организация, Валюта и т.д.).
//	Проведен - Булево - Если признак установлен в значение Истина, то будет произведен поиск только проведенных.
//
// Возвращаемое значение:
//	ТаблицаЗначений - Таблица найденных счетов-фактур (Ссылка, Номер, Дата, Организация, Валюта)
//
Функция СчетаФактурыПоОснованию(Основание, ПараметрыОтбора = Неопределено, РеквизитыСчетаФактуры = Неопределено, Проведен = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СчетФактура.Ссылка                    КАК Ссылка,
	|	СчетФактура.Номер                     КАК Номер,
	|	СчетФактура.Дата                      КАК Дата,
	|	СчетФактура.Организация               КАК Организация,
	|	СчетФактура.Контрагент                КАК Контрагент,
	|	СчетФактура.КППКонтрагента            КАК КППКонтрагента,
	|	СчетФактура.Валюта                    КАК Валюта,
	|	СчетФактура.Проведен                  КАК Проведен,
	|	СчетФактура.Корректировочный          КАК Корректировочный,
	|	СчетФактура.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта,
	|
	|	СчетФактураДокументыОснования.НомерИсходногоДокумента            КАК НомерИсходногоДокумента,
	|	СчетФактураДокументыОснования.ДатаИсходногоДокумента             КАК ДатаИсходногоДокумента,
	|	СчетФактураДокументыОснования.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|	СчетФактураДокументыОснования.ДатаИсправленияИсходногоДокумента  КАК ДатаИсправленияИсходногоДокумента
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактура
	|		ПО СчетФактураДокументыОснования.Ссылка = СчетФактура.Ссылка
	|ГДЕ
	|	СчетФактураДокументыОснования.ДокументОснование = &Основание
	|	И (НЕ СчетФактура.ПометкаУдаления)
	|	//УсловияОтбора
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактура.НомерИсправления УБЫВ
	|");
	
	Запрос.УстановитьПараметр("Основание",   Основание);
	
	Если ПараметрыОтбора <> Неопределено Тогда
		
		ТекстУсловий = "";
		
		Для Каждого ЭлементОтбора Из ПараметрыОтбора Цикл
			ТекстУсловий = ТекстУсловий + "
			|	И СчетФактура." + ЭлементОтбора.Ключ + " = &" + ЭлементОтбора.Ключ;
			Запрос.УстановитьПараметр(ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
		КонецЦикла;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УсловияОтбора", ТекстУсловий);
		
	КонецЕсли;
	
	Если Проведен Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"(НЕ СчетФактура.ПометкаУдаления)",
			"СчетФактура.Проведен");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыСчетаФактуры = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		РеквизитыСчетаФактуры.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ТаблицаСчетовФактур = Новый ТаблицаЗначений;
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТаблицаСчетовФактур = РезультатЗапроса.Выгрузить();
		ЗаполнитьЗначенияСвойств(РеквизитыСчетаФактуры, ТаблицаСчетовФактур[0]);
	КонецЕсли;
	
	Возврат ТаблицаСчетовФактур;
	
КонецФункции

// Помечает на удаление счет-фактуру, если:
// - организация счета-фактуры не соответствует указанной,
// - или если документ-основание помечен на удаление.
// Обновляет реквизиты счета-фактуры, если они были изменены в основании.
// Предназначена для вызова в процедуре ПередЗаписью документа-основания.
//
// Параметры:
//	Основание               - ДокументОбъект - документ-основание счета-фактуры
//
Процедура ПроверитьРеквизитыСчетФактурыПередЗаписьюОснования(Основание) Экспорт
	
	Если Основание.ДополнительныеСвойства.ЭтоНовый Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаСчетовФактур = СчетаФактурыПоОснованию(Основание.Ссылка);
	
	Для Каждого РеквизитыСчетаФактуры Из ТаблицаСчетовФактур Цикл
		
		ПараметрыОбновления = ПараметрыОбновленияРеквизитовСчетаФактуры(Основание, РеквизитыСчетаФактуры);
		
		Если ПараметрыОбновления.ИзмененаОрганизация Или Основание.ПометкаУдаления Тогда
			
			// Если в счете-фактуре несколько оснований, счет-фактура не помечается на удаление и не изменяется,
			// а только очищается ссылка на текущее основание
			
			ДокументОбъект = РеквизитыСчетаФактуры.Ссылка.ПолучитьОбъект();
			Если ДокументОбъект.ДокументыОснования.Количество() > 1 Тогда
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(Основание.Ссылка, "ДокументОснование");
				ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
				ДокументОбъект.Записать(?(ДокументОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			Иначе
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
			
			Продолжить;
			
		ИначеЕсли ПараметрыОбновления.НеобходимоОбновить
			И Основание.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
			
			ДокументОбъект = РеквизитыСчетаФактуры.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ЗаполнитьПараметрыСчетаФактурыПоОснованию();
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает реквизиты исправляемого счета-фактуры.
//
// Параметры:
//	Основание		 - ДокументСсылка - документ-основание счета-фактуры
//	Организация		 - СправочникСсылка.Организации - Организация, для которой формируется счет-фактура
//
// Возвращаемое значение:
//	Структура - Реквизиты счета-фактуры
//
Функция ИсправляемыйСчетФактураПоОснованию(Ссылка, Основание, Организация = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИсправляемыйСчетФактура = Неопределено;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	&ДокументОснование КАК Ссылка
	|ПОМЕСТИТЬ ОснованияСчетаФактуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеКорректировок.ДокументОснование КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаРеализации КАК ДанныеКорректировок
	|ГДЕ
	|	ДанныеКорректировок.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеКорректировок.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаРеализации КАК ДанныеОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаРеализации КАК ДанныеКорректировок
	|	ПО
	|		ДанныеКорректировок.ДокументОснование = ДанныеОснования.ДокументОснование
	|
	|ГДЕ
	|	ДанныеОснования.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаписьКнигиПродаж.ИсправляемыйДокумент КАК Ссылка
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж КАК ЗаписьКнигиПродаж
	|ГДЕ
	|	ЗаписьКнигиПродаж.Ссылка = &ДокументОснование
	|	И ЗаписьКнигиПродаж.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеПрочегоНачисленияНДС)
	|;
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураВыданный.Ссылка                        КАК Ссылка,
	|	СчетФактураВыданный.ДокументОснование             КАК ДокументОснование,
	|	СчетФактураВыданный.Валюта                        КАК Валюта,
	|	СчетФактураВыданный.Организация                   КАК Организация,
	|	СчетФактураВыданный.Контрагент                    КАК Контрагент,
	|	СчетФактураВыданный.КППКонтрагента                КАК КППКонтрагента,
	|	СчетФактураВыданный.КодВидаОперации               КАК КодВидаОперации,
	|	СчетФактураВыданный.Корректировочный              КАК Корректировочный,
	|	СчетФактураВыданный.Номер                         КАК НомерИсходногоДокумента,
	|	СчетФактураВыданный.ИдентификаторГосКонтракта     КАК ИдентификаторГосКонтракта,
	|	ВЫБОР КОГДА СчетФактураВыданный.Исправление ТОГДА
	|		ЕСТЬNULL(СчетФактураВыданный.СчетФактураОснование.Дата, Неопределено)
	|	ИНАЧЕ
	|		СчетФактураВыданный.Дата
	|	КОНЕЦ                                             КАК ДатаИсходногоДокумента,
	|	ВЫБОР КОГДА СчетФактураВыданный.Исправление ТОГДА
	|		СчетФактураВыданный.НомерИсправления
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                             КАК НомерИсправленияИсходногоДокумента,
	|	ВЫБОР КОГДА СчетФактураВыданный.Исправление ТОГДА
	|		СчетФактураВыданный.Дата
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                             КАК ДатаИсправленияИсходногоДокумента,
	|	
	|	СчетФактураВыданный.ДокументыОснования.(
	|		ДокументОснование,
	|		ИсходныйДокумент,
	|		НомерИсходногоДокумента,
	|		ДатаИсходногоДокумента,
	|		НомерИсправленияИсходногоДокумента,
	|		ДатаИсправленияИсходногоДокумента
	|	) КАК ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйОснования
	|	ПО СчетФактураВыданный.Ссылка = СчетФактураВыданныйОснования.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияСчетаФактуры КАК ОснованияСчетаФактуры
	|		ПО ОснованияСчетаФактуры.Ссылка = СчетФактураВыданныйОснования.ДокументОснование
	|
	|ГДЕ
	|	СчетФактураВыданный.Ссылка <> &Ссылка
	|	И (СчетФактураВыданный.Организация = &Организация
	|	ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И СчетФактураВыданный.Проведен
	|	И НЕ СчетФактураВыданный.ПометкаУдаления
	|	И НЕ СчетФактураВыданный.Исправление
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураВыданный.Корректировочный УБЫВ,
	|	СчетФактураВыданный.МоментВремени УБЫВ
	|");
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыСчетаФактуры = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		РеквизитыСчетаФактуры.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(РеквизитыСчетаФактуры, Выборка);
		ТаблицаОснований = Выборка.ДокументыОснования.Выгрузить();
		Если Выборка.ДокументОснование <> Основание Тогда
			
			РеквизитыСчетаФактуры.ДокументОснование = Основание;
			ТаблицаОснований.Очистить();
			
			СтрокаОснования = ТаблицаОснований.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаОснования, Выборка);
			СтрокаОснования.ДокументОснование = Основание;
			Если Выборка.Корректировочный Тогда
				СтрокаОснования.ИсходныйДокумент = Выборка.Ссылка;
				РеквизитыСчетаФактурыОснования = Документы.СчетФактураВыданный.ДанныеСчетаФактуры(Выборка.Ссылка);
				ИсходныеДанныеСчетаФактуры = РеквизитыСчетаФактурыОснования.ДокументыОснования;
				Для Каждого СтрокаТаблицы Из ИсходныеДанныеСчетаФактуры Цикл
					ЗаполнитьЗначенияСвойств(СтрокаОснования, СтрокаТаблицы, "НомерИсходногоДокумента,ДатаИсходногоДокумента");
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		РеквизитыСчетаФактуры.Вставить("ДокументыОснования", ТаблицаОснований);
		
	КонецЕсли;
	
	Возврат РеквизитыСчетаФактуры;
	
КонецФункции

// Получает реквизиты счета-фактуры.
//
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураВыданный - Счет-фактура, данные которого необходимо получить.
//
// Возвращаемое значение:
//	Структура - Реквизиты счета-фактуры
//
Функция ДанныеСчетаФактуры(СчетФактура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СчетФактураВыданный.ДокументОснование             КАК ДокументОснование,
	|	ВЫБОР КОГДА СчетФактураВыданный.Исправление ТОГДА
	|		СчетФактураВыданный.СчетФактураОснование
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК СчетФактураОснование,
	|	СчетФактураВыданный.Валюта                        КАК Валюта,
	|	СчетФактураВыданный.Организация                   КАК Организация,
	|	СчетФактураВыданный.Контрагент                    КАК Контрагент,
	|	СчетФактураВыданный.КППКонтрагента                КАК КППКонтрагента,
	|	СчетФактураВыданный.КодВидаОперации               КАК КодВидаОперации,
	|	СчетФактураВыданный.Корректировочный              КАК Корректировочный,
	|	СчетФактураВыданный.ИдентификаторГосКонтракта     КАК ИдентификаторГосКонтракта,
	|	СчетФактураВыданный.ДокументыОснования.(
	|		ДокументОснование,
	|		ИсходныйДокумент,
	|		НомерИсходногоДокумента,
	|		ДатаИсходногоДокумента,
	|		НомерИсправленияИсходногоДокумента,
	|		ДатаИсправленияИсходногоДокумента
	|	)                                                 КАК ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДанных = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		СтруктураДанных.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка);
		СтруктураДанных.Вставить("ДокументыОснования", Выборка.ДокументыОснования.Выгрузить());
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

// Определяет документы "Корректировка реализации" по переданному основанию, по которым требуется ввести счет-фактуру.
//
// Параметры:
//	Основание - ДокументСсылка - Основание корректировки
//
// Возвращаемое значение:
//	ТаблицаЗначений - Найденные документы корректировки и даты корректировки.
//
Функция КорректировочныеДокументыПоОснованию(Основание) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураВыданный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_СчетаФактурыИсходные
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|	ПО СчетФактураВыданный.Ссылка = ОснованияСчетаФактуры.Ссылка
	|		И НЕ СчетФактураВыданный.Исправление
	|		И СчетФактураВыданный.Проведен
	|ГДЕ
	|	ОснованияСчетаФактуры.ДокументОснование = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализации.Ссылка КАК Ссылка,
	|	КорректировкаРеализации.Дата КАК Дата
	|ИЗ
	|	ВТ_СчетаФактурыИсходные КАК СчетаФактурыИсходные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
	|			ПО СчетаФактурыИсходные.Ссылка = ОснованияСчетаФактуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|			ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаРеализации.ДокументОснование
	|			И КорректировкаРеализации.ВидКорректировки В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяСчетФактура
	|			ПО (КорректировкаРеализации.Ссылка = ТребуетсяСчетФактура.Основание)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ");
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

//Определяет параметры заполнения нового счета-фактуры, вводимого на основании существующего счета-фактуры.
//
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураВыданный - Счет-фактура, на основании которого вводится счет-фактура.
//
// Возвращаемое значение:
//	Структура - структура со следующими свойствами:
//	* Основания - Массив - Документы-основания "Корректировка реализация" нового счета-фактуры
//	* ДатаКорректировки - Дата - Дата нового корректировочного счета-фактуры
//	* Корректировочный - Булево - Истина, указывает на необходимость создания корректировочного счета-фактуры.
//	* Исправление - Булево - Истина, указывает на необходимость создания исправительного счета-фактуры.
//
Функция ПараметрыЗаполненияПоСчетуФактуре(СчетФактура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыЗаполнения = Новый Структура("Основания, ДатаКорректировки");
	ПараметрыЗаполнения.Вставить("Корректировочный", Ложь);
	ПараметрыЗаполнения.Вставить("Исправление", Ложь);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураВыданный.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованийКоррективочныхСФ
	|		ПО СчетФактураВыданный.Ссылка = ОснованийКоррективочныхСФ.ИсходныйДокумент
	|			И НЕ СчетФактураВыданный.Исправление
	|			И (ОснованийКоррективочныхСФ.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураВыданный.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураВыданный.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованийКоррективочныхСФ
	|		ПО СчетФактураВыданный.СчетФактураОснование = ОснованийКоррективочныхСФ.ИсходныйДокумент
	|			И СчетФактураВыданный.Исправление
	|			И (ОснованийКоррективочныхСФ.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураВыданный.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КорректировкаРеализации.ДокументОснование, ОснованияСчетаФактуры.ДокументОснование) КАК ДокументОснование
	|ПОМЕСТИТЬ ВТ_ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаРеализации.Ссылка
	|ГДЕ
	|	ОснованияСчетаФактуры.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОснованияСчетаФактуры.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ИсходныеСчетаФактуры
	|ИЗ
	|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
	|		ПО ВТ_ДокументыОснования.ДокументОснование = ОснованияСчетаФактуры.ДокументОснование
	|			И ОснованияСчетаФактуры.Ссылка.Проведен
	|			И (НЕ ОснованияСчетаФактуры.Ссылка.Исправление)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОснованияСчетаФактуры.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВТ_ОснованияИсходныхСФ
	|ИЗ
	|	ВТ_ИсходныеСчетаФактуры КАК ИсходныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
	|		ПО ИсходныеСчетаФактуры.Ссылка = ОснованияСчетаФактуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка                КАК Ссылка,
	|	КорректировкаРеализации.Дата                  КАК Дата
	|ИЗ
	|	ВТ_ОснованияИсходныхСФ КАК ВТ_ОснованияИсходныхСФ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО ВТ_ОснованияИсходныхСФ.ДокументОснование = КорректировкаРеализации.ДокументОснование
	|			И (КорректировкаРеализации.ВидКорректировки В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок), 
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяСчетФактура
	|		ПО (КорректировкаРеализации.Ссылка = ТребуетсяСчетФактура.Основание)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ");
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатЗапроса[4].Пустой() Тогда
		
		Если РезультатЗапроса[0].Пустой() Тогда
			ПараметрыЗаполнения.Исправление = Истина;
		КонецЕсли;
		
	Иначе
		
		ТаблицаОснований = РезультатЗапроса[4].Выгрузить();
		ПараметрыЗаполнения.Основания = ТаблицаОснований.ВыгрузитьКолонку("Ссылка");
		ПараметрыЗаполнения.ДатаКорректировки = ТаблицаОснований[0].Дата;
		ПараметрыЗаполнения.Корректировочный = Истина;
		
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

//Определяет необходимость ввода корректировочного счета-фактуры для документов-оснований счета-фактуры.
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураВыданный - Счет-фактура, для которого определяется необходимость корректировки.
//	Исходный - Булево - Ложь - Исходный счет-фактура будет вычислен на основании переданного.
//
// Возвращаемое значение:
//	Булево - Истина - требуется создание корректировочного счета-фактуры.
//
Функция ТребуетсяСозданиеКорректировочного(СчетФактура, Исходный = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Исходный Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КорректировкаРеализации.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|			ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаРеализации.ДокументОснование
		|			И КорректировкаРеализации.ВидКорректировки В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяСчетФактура
		|			ПО (КорректировкаРеализации.Ссылка = ТребуетсяСчетФактура.Основание)
		|ГДЕ
		|	ОснованияСчетаФактуры.Ссылка = &Ссылка";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(КорректировкаРеализации.ДокументОснование, ОснованияСчетаФактуры.ДокументОснование) КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ДокументыОснования
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|		ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаРеализации.Ссылка
		|ГДЕ
		|	ОснованияСчетаФактуры.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОснованияСчетаФактуры.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ИсходныеСчетаФактуры
		|ИЗ
		|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ПО ВТ_ДокументыОснования.ДокументОснование = ОснованияСчетаФактуры.ДокументОснование
		|			И ОснованияСчетаФактуры.Ссылка.Проведен
		|			И (НЕ ОснованияСчетаФактуры.Ссылка.Исправление)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОснованияСчетаФактуры.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ОснованияИсходныхСФ
		|ИЗ
		|	ВТ_ИсходныеСчетаФактуры КАК ИсходныеСчетаФактуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ПО ИсходныеСчетаФактуры.Ссылка = ОснованияСчетаФактуры.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КорректировкаРеализации.Ссылка                КАК Ссылка
		|ИЗ
		|	ВТ_ОснованияИсходныхСФ КАК ВТ_ОснованияИсходныхСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|		ПО ВТ_ОснованияИсходныхСФ.ДокументОснование = КорректировкаРеализации.ДокументОснование
		|			И (КорректировкаРеализации.ВидКорректировки В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяСчетФактура
		|		ПО (КорректировкаРеализации.Ссылка = ТребуетсяСчетФактура.Основание)";
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой()
	
КонецФункции

// Заполняет номера и даты платежно-расчетных документов.
//
// Параметры:
//	ПлатежноРасчетныеДокументы - Табличная часть - заполняемая табличная часть документа
//	МассивОснований - Массив - Массив документов-оснований счета-фактуры.
//	Организация - СправочникСсылка.Организации - Организация, для которой формируется счет-фактура.
//
Процедура ЗаполнитьПлатежноРасчетныеДокументы(ПлатежноРасчетныеДокументы, МассивОснований, Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПлатежноРасчетныеДокументы.Очистить();
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		// В подчиненном узле нет всех данных для определения авансов, 
		// поэтому не заполняем.
		Возврат;
	КонецЕсли; 
	
	ТаблицаЗаполненияПлатежноРасчетныхДокументов = Новый ТаблицаЗначений;
	ТаблицаЗаполненияПлатежноРасчетныхДокументов.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"));
	ТаблицаЗаполненияПлатежноРасчетныхДокументов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаЗаполненияПлатежноРасчетныхДокументов.Колонки.Добавить("ДокументОснование", 
		Метаданные.Документы.СчетФактураВыданный.ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип);
	
	Для каждого ДокументОснования из МассивОснований Цикл
		НоваяСтрока = ТаблицаЗаполненияПлатежноРасчетныхДокументов.Добавить();
		НоваяСтрока.Ссылка = Документы.СчетФактураВыданный.ПустаяСсылка();
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.ДокументОснование = ДокументОснования;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.Организация,
	|	Таблица.ДокументОснование
	|ПОМЕСТИТЬ ТаблицаЗаполненияПлатежноРасчетныхДокументов
	|ИЗ
	|	&ТаблицаЗаполненияПлатежноРасчетныхДокументов КАК Таблица";
	Запрос.УстановитьПараметр("ТаблицаЗаполненияПлатежноРасчетныхДокументов", ТаблицаЗаполненияПлатежноРасчетныхДокументов);
	Запрос.Выполнить();
	
	МассивАналитикУчетаПоПартнерам = АналитикиУчетаПоПартнерамДляАктуализацииПлатежноРасчетныхДокументов(Запрос.МенеджерВременныхТаблиц);
	КонецРасчета = КонецРасчетаДляАктуализацииПлатежноРасчетныхДокументов(Запрос.МенеджерВременныхТаблиц);
	
	Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда 
		АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
		АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
		Попытка
			РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(КонецРасчета, АналитикиРасчета);
		Исключение
			ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
			|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаПолученияНомеровИДатПлатежноРасчетныхДокументов();	
	Запрос.УстановитьПараметр("МассивАналитикУчетаПоПартнерам", МассивАналитикУчетаПоПартнерам);
	
	ВыборкаСчетФактур = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаСчетФактур.Следующий() Тогда
		ЗаполнитьТаблицуПлатежноРасчетныхДокументовПоВыборке(ПлатежноРасчетныеДокументы, ВыборкаСчетФактур);
	КонецЕсли;
		
КонецПроцедуры

// Определяет строковое представление таблицы платежно-расчетных документов счета-фактуры
//
//	Параметры:
//		ПлатежноРасчетныеДокументы - ТаблицаЗначений - таблица платежно-расчетных документов
//			(см. ТЧ "ПлатежноРасчетныеДокументы" документа "СчетФактураВыданный";
//
//	Возвращаемое значение:
//		Строка - представление таблицы платежно-расчетных документов,
//			получившеяся перебором строк таблицы, приводимых к виду:"[Номер] от [Дата]";
//
Функция СтрокаРасчетноПлатежныхДокументов(ПлатежноРасчетныеДокументы) Экспорт
	
	СтрокаНомеровИДата = "";
	Для Каждого СтрокаТаблицы Из ПлатежноРасчетныеДокументы Цикл
		СтрокаНомеровИДата = СтрокаНомеровИДата + ?(ПустаяСтрока(СтрокаНомеровИДата), "", ", ")
			+ СтрокаТаблицы.НомерПлатежноРасчетногоДокумента 
			+ " от " + Формат(СтрокаТаблицы.ДатаПлатежноРасчетногоДокумента, "ДЛФ=D");
	КонецЦикла; 
		
	Возврат СтрокаНомеровИДата;
	
КонецФункции

// Приводит состояние проведения счета-фактуры в соответствие с документом-основанием.
// Обновляет реквизиты счета-фактура, если они были изменены в основании.
//
// Параметры:
//	Основание				- ДокументОбъект - документ-основание счета-фактуры
//	Проведен 				- Булево - Состояние проведения документа-основания
//	ТребуетсяСчетФактура	- Булево - Потребность в наличии счета-фактуры для документа-основания
//
Процедура АктуализироватьСчетФактуру(Основание, Проведен, ТребуетсяСчетФактура = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаСчетовФактур = СчетаФактурыПоОснованию(Основание.Ссылка);
	Если ТаблицаСчетовФактур.Количество() > 0 Тогда
		ТаблицаСчетовФактур.Сортировать("Дата Возр")
	КонецЕсли;
	
	Для Каждого РеквизитыСчетаФактуры Из ТаблицаСчетовФактур Цикл
		
		Если Проведен И ТребуетсяСчетФактура Тогда
			Если РеквизитыСчетаФактуры.Проведен Тогда
				РежимЗаписи = РежимЗаписиДокумента.Проведение;
			Иначе
				РежимЗаписи = РежимЗаписиДокумента.Запись;
			КонецЕсли;
		Иначе
			РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения;
		КонецЕсли;	
		
		ДокументОбъект = РеквизитыСчетаФактуры.Ссылка.ПолучитьОбъект();
		
		ПараметрыОбновления = ПараметрыОбновленияРеквизитовСчетаФактуры(Основание, РеквизитыСчетаФактуры);
		Если ПараметрыОбновления.НеобходимоОбновить Тогда
			ДокументОбъект.ЗаполнитьПараметрыСчетаФактурыПоОснованию();
		КонецЕсли;
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписи);
		Исключение
			ТекстОшибки = НСтр("ru='Не удалось записать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       ДокументОбъект);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				,);
		КонецПопытки
	КонецЦикла
	
КонецПроцедуры

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ТипСчетаФактуры", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный"));
	Запрос.Параметры.Вставить("МассивОрганизаций", Параметры.МассивОрганизаций);
	Если Параметры.Свойство("БезОграниченияПериода") Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(1) КАК КоличествоДокументовКОформлению
		|ИЗ
		|	РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяОформлениеСчетаФактуры
		|ГДЕ
		|	ТребуетсяОформлениеСчетаФактуры.ТипСчетаФактуры = &ТипСчетаФактуры
		|	И &УсловиеОтбора";
	Иначе
		Запрос.Параметры.Вставить("КонецПериода", КонецДня(Параметры.КонецПериода));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(1) КАК КоличествоДокументовКОформлению
		|ИЗ
		|	РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяОформлениеСчетаФактуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеОснования
		|		ПО ТребуетсяОформлениеСчетаФактуры.Организация = ДанныеОснования.Организация
		|			И ТребуетсяОформлениеСчетаФактуры.Основание = ДанныеОснования.Документ
		|ГДЕ
		|	ТребуетсяОформлениеСчетаФактуры.ТипСчетаФактуры = &ТипСчетаФактуры
		|	И ЕСТЬNULL(ДанныеОснования.Дата, ДАТАВРЕМЯ(1, 1, 1)) <= &КонецПериода
		|	И &УсловиеОтбора";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.МассивОрганизаций) Тогда
		УсловиеОтбора = "ТребуетсяОформлениеСчетаФактуры.Организация В(&МассивОрганизаций)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеОтбора", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И НЕ Выборка.КоличествоДокументовКОформлению = NULL Тогда
		Возврат Выборка.КоличествоДокументовКОформлению;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	
	Если ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаЖурналУчетаСчетовФактур") Тогда
		
		Для Каждого СтрокаТаблицы Из ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЖурналУчетаСчетовФактур Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.НомерКорректировочногоСчетаФактуры) Тогда
				СтрокаТаблицы.НомерСчетаФактуры = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
				СтрокаТаблицы.НомерСчетаФактуры, 
				Истина,
				Запрос.Параметры.ОбособленноеПодразделение, 
				Запрос.Параметры.ЦифровойИндексОбособленногоПодразделения);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры
	
Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                                              КАК Период,
	|	ДанныеДокумента.Номер                                                             КАК Номер,
	|	ДанныеДокумента.Организация                                                       КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ОбособленноеПодразделение, ЛОЖЬ)             КАК ОбособленноеПодразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ЦифровойИндексОбособленногоПодразделения, 0) КАК ЦифровойИндексОбособленногоПодразделения,
	|	ДанныеДокумента.ДокументОснование.Валюта                                          КАК ВалютаОснования,
	|	ДанныеДокумента.СчетФактураОснование                                              КАК СчетФактураОснование,
	|	ЕСТЬNULL(ДанныеДокумента.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))             КАК ДатаСчетФактурыОснования,
	|	ДанныеДокумента.Исправление                                                       КАК Исправление,
	|	ДанныеДокумента.НомерИсправления                                                  КАК НомерИсправления,
	|	ДанныеДокумента.Корректировочный                                                  КАК Корректировочный,
	|	ДанныеДокумента.Контрагент                                                        КАК Контрагент,
	|	ДанныеДокумента.Валюта                                                            КАК Валюта,
	|	ДанныеДокумента.ВыставленВЭлектронномВиде                                         КАК ВыставленВЭлектронномВиде,
	|	ДанныеДокумента.ДатаВыставления                                                   КАК ДатаВыставления,
	|	ДанныеДокумента.КодВидаОперации                                                   КАК КодВидаОперации,
	|	ДанныеДокумента.КодВидаОперацииНаУменьшение                                       КАК КодВидаОперацииНаУменьшение,
	|	ДанныеДокумента.КППКонтрагента                                                    КАК КППКонтрагента,
	|	ДанныеДокумента.ИННКонтрагента                                                    КАК ИННКонтрагента,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.КПП, """")                                   КАК ОрганизацияКПП,
	|	ДанныеДокумента.Подразделение                                                     КАК Подразделение,
	|	ДанныеДокумента.Ответственный                                                     КАК Ответственный,
	|	ДанныеДокумента.Проведен                                                          КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                                                   КАК ПометкаУдаления
	|ИЗ
	|	Документ.СчетФактураВыданный КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Если Реквизиты.ОбособленноеПодразделение Тогда
		Запрос.УстановитьПараметр("ОбособленноеПодразделение",                Реквизиты.ОбособленноеПодразделение);
		Запрос.УстановитьПараметр("ЦифровойИндексОбособленногоПодразделения", Реквизиты.ЦифровойИндексОбособленногоПодразделения);
		Номер = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
				Реквизиты.Номер, 
				Истина,
				Запрос.Параметры.ОбособленноеПодразделение, 
				Запрос.Параметры.ЦифровойИндексОбособленногоПодразделения);
		
		Запрос.УстановитьПараметр("НомерНаПечать", Номер);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Период",								Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",								Реквизиты.Номер);
	Запрос.УстановитьПараметр("Организация",						Реквизиты.Организация);
	Запрос.УстановитьПараметр("ДатаСчетФактурыОснования",			Реквизиты.ДатаСчетФактурыОснования);
	Запрос.УстановитьПараметр("Исправление",						Реквизиты.Исправление);
	Запрос.УстановитьПараметр("НомерИсправления",					Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("Корректировочный",					Реквизиты.Корректировочный);
	Запрос.УстановитьПараметр("Контрагент",							Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ВалютаСчетаФактуры",					Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаОснования",					Реквизиты.ВалютаОснования);
	Запрос.УстановитьПараметр("ВыставленВЭлектронномВиде",			?(Реквизиты.ВыставленВЭлектронномВиде, 2 ,1));
	Запрос.УстановитьПараметр("КодВидаОперации",					Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("КодВидаОперацииНаУменьшение",		Реквизиты.КодВидаОперацииНаУменьшение);
	Запрос.УстановитьПараметр("ДокументИнтеркампани",
		ТипЗнч(Реквизиты.Контрагент) = Тип("СправочникСсылка.Организации"));
	Запрос.УстановитьПараметр("СчетФактураОснование",				Реквизиты.СчетФактураОснование);
	Запрос.УстановитьПараметр("ОрганизацияКПП",						Реквизиты.ОрганизацияКПП);
	Запрос.УстановитьПараметр("ИННКонтрагента",						Реквизиты.ИННКонтрагента);
	Запрос.УстановитьПараметр("КППКонтрагента",						Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("ДатаПримененияКорректировочныхСФ",	Дата('20130701'));
	Запрос.УстановитьПараметр("Проведен",							Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",					Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",			ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ДокументСсылка)));
	Запрос.УстановитьПараметр("Подразделение",						Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Ответственный",						Реквизиты.Ответственный);
	
	УчетНДСУТ.УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыВыставленного(Реквизиты, Запрос);
	
	ИнформацияПоИсправлению = "";
	Если ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		Если Реквизиты.Исправление Тогда
			ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления% от %ДатаИсправления%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		КонецЕсли;
		Если Реквизиты.Корректировочный Тогда
			ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления% от %ДатаИсправления% (корректировочный)'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		КонецЕсли;
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%НомерИсправления%", СокрЛП(Реквизиты.НомерИсправления));
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%ДатаИсправления%", Формат(Реквизиты.Период,"ДЛФ=D"));
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);
	
	ТипыЗапасовСобственные = Новый СписокЗначений;
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.ПустаяСсылка());
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Товар);
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", ТипыЗапасовСобственные);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаНомерНаПечать(ОсновнойЗапрос)
	
	Если ОсновнойЗапрос.Параметры.Свойство("НомерНаПечать") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПроверкиНаличияИндексов = Новый Запрос;
	ЗапросПроверкиНаличияИндексов.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Регистрации.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения КАК ИндексПодразделения
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане КАК Регистрации
	|ГДЕ
	|	Регистрации.Организация = &Организация
	|	И Регистрации.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения <> 0";
	ЗапросПроверкиНаличияИндексов.УстановитьПараметр("Организация", ОсновнойЗапрос.Параметры.Организация);
	РезультатПроверки = ЗапросПроверкиНаличияИндексов.Выполнить();
	Если Не РезультатПроверки.Пустой() Тогда
			
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаОснований.Ссылка                  КАК Ссылка,
		|	ТаблицаОснований.ДокументОснование       КАК ДокументОснование,
		|	ТаблицаОснований.Ссылка.Корректировочный КАК Корректировочный,
		|	ТаблицаОснований.Ссылка.Дата             КАК Дата
		|ПОМЕСТИТЬ СчетаФактурыОснования
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
		|ГДЕ
		|	ТаблицаОснований.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаФактурыОснования.ДокументОснование КАК ДокументОснование
		|ИЗ
		|	СчетаФактурыОснования КАК СчетаФактурыОснования");
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("МассивОбъектов", ОсновнойЗапрос.Параметры.Ссылка);
		РезультатЗапроса  = Запрос.Выполнить();
		
		МассивОснований = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ДокументОснование");
		
		Если МассивОснований.Количество() = 0 Тогда
			ОсновнойЗапрос.УстановитьПараметр("НомерНаПечать", "");
			Возврат;
		КонецЕсли;
		
		ПоместитьВременнуюТаблицуДанныхОснований(МенеджерВременныхТаблиц, МассивОснований);
			
		МассивАналитикУчетаПоПартнерам = Новый Массив;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	NULL КАК Ссылка,
		|	NULL КАК СтрокаПлатежноРасчетныеДокументы
		|ПОМЕСТИТЬ ТаблицаПлатежноРасчетныеДокументы";
		Запрос.Выполнить();
		
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("ПечатьВВалюте", Ложь);
		ПараметрыПечати.Вставить("ВыводитьНаборы", Ложь);
		СформироватьВременнуюТаблицуТоваровДляПечати(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати);
		
		Запрос.Текст = ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры(ПараметрыПечати);
		
		Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
		Запрос.УстановитьПараметр("ПредставлениеСчетФактураПосредника", НСтр("ru='счет-фактура посредника'"));
		
		Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
		
		МассивОперацийПередачаНаКомиссию = Новый Массив;
		МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
		МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
		МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
		Запрос.УстановитьПараметр("ХозяйственныеОперацииПередачаНаКомиссию", МассивОперацийПередачаНаКомиссию);
		
		ДанныеПечатиШапка = Запрос.Выполнить().Выгрузить();
		Если ДанныеПечатиШапка.Количество() = 1 Тогда
			ИндексПодразделения = ДанныеПечатиШапка[0].ИндексПодразделения;
			Если ЗначениеЗаполнено(ИндексПодразделения) Тогда
				ОсновнойЗапрос.УстановитьПараметр("ОбособленноеПодразделение",                Истина);
				ОсновнойЗапрос.УстановитьПараметр("ЦифровойИндексОбособленногоПодразделения", ИндексПодразделения);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ОсновнойЗапрос.Параметры.Свойство("ОбособленноеПодразделение") Тогда
		ОсновнойЗапрос.УстановитьПараметр("ОбособленноеПодразделение",                Ложь);
		ОсновнойЗапрос.УстановитьПараметр("ЦифровойИндексОбособленногоПодразделения", "");
	КонецЕсли;
	
	Номер = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
			ОсновнойЗапрос.Параметры.Номер, 
			Истина,
			ОсновнойЗапрос.Параметры.ОбособленноеПодразделение, 
			ОсновнойЗапрос.Параметры.ЦифровойИндексОбособленногоПодразделения);
	
	ОсновнойЗапрос.УстановитьПараметр("НомерНаПечать", Номер);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаКоэффициентПересчетаВВалютуРегл(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.ВалютаОснования,
		Запрос.Параметры.ВалютаОснования, Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаСчетФактураПредыдущееИсправление(Запрос)
	
	Если Запрос.Параметры.Свойство("СчетФактураПредыдущееИсправление") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СчетФактураПредыдущееИсправление", ?(Запрос.Параметры.Исправление,
		СчетФактураПредыдущееИсправление(Запрос.Параметры.СчетФактураОснование, Запрос.Параметры.НомерИсправления),
		Неопределено));
	
КонецПроцедуры

Функция ТекстЗапросаВтТаблицаДокументов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВТДокументыОснования";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Основания.ДокументОснование                  КАК ДокументОснование,
	|	Основания.НомерИсходногоДокумента            КАК НомерИсходногоДокумента,
	|	Основания.ДатаИсходногоДокумента             КАК ДатаИсходногоДокумента,
	|	Основания.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|	Основания.ДатаИсправленияИсходногоДокумента  КАК ДатаИсправленияИсходногоДокумента,
	|	Основания.ДокументОснование.Дата             КАК ДатаОснования,
	|	Основания.НомерСтроки - 1                    КАК ИндексСтроки,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.Номер ЕСТЬ NULL ТОГДА
	|			Основания.ДокументОснование.Дата
	|		КОГДА &Корректировочный ТОГДА
	|			Основания.ДатаИсходногоДокумента
	|		ИНАЧЕ
	|			КорректировкаРеализации.ДокументОснование.Дата
	|	КОНЕЦ                                        КАК ПериодКорректировки,
	|	ВЫБОР
	|		КОГДА Основания.ДокументОснование ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|				ИЛИ Основания.ДокументОснование ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|				ИЛИ Основания.ДокументОснование ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|			ТОГДА Основания.ДокументОснование.РасчетыЧерезОтдельногоКонтрагента
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                        КАК СчетФактураПосреднику
	|	
	|ПОМЕСТИТЬ ВТДокументыОснования
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК Основания
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО Основания.ДокументОснование = КорректировкаРеализации.Ссылка
	|			И КорректировкаРеализации.ВидКорректировки В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|ГДЕ
	|	Основания.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтПрошлыеКорректировки(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрошлыеКорректировки"; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Документ,
	|	ДокументыПоиска.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВтПрошлыеКорректировки
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыПоиска
	|		ПО КорректировкаРеализации.ДокументОснование = ДокументыПоиска.Документ
	|			И КорректировкаРеализации.Дата < ДокументыПоиска.Дата
	|			И ДокументыПоиска.КорректируемыйДокумент
	|ГДЕ
	|	КорректировкаРеализации.Проведен
	|	И &Исправление";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДокументыПоиска(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДокументыПоиска";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Основания.ДокументОснование                  КАК Документ,
	|	Основания.ДокументОснование                  КАК ДокументОснование,
	|	НЕОПРЕДЕЛЕНО                                 КАК Дата,
	|	ЛОЖЬ                                         КАК КорректируемыйДокумент,
	|	ЛОЖЬ                                         КАК ИсправляемаяКорректировка
	|ПОМЕСТИТЬ ВтДокументыПоиска
	|ИЗ
	|	ВТДокументыОснования КАК Основания
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.ДокументОснование            КАК Документ,
	|	Основания.ДокументОснование                          КАК ДокументОснование,
	|	КорректировкаРеализации.Дата                         КАК Дата,
	|	ИСТИНА                                               КАК КорректируемыйДокумент,
	|	ЛОЖЬ                                                 КАК ИсправляемаяКорректировка
	|ИЗ
	|	ВТДокументыОснования КАК Основания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|			ПО Основания.ДокументОснование = КорректировкаРеализации.Ссылка
	|			И КорректировкаРеализации.ВидКорректировки В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаписьКнигиПродаж.ИсправляемыйДокумент               КАК Документ,
	|	Основания.ДокументОснование                          КАК ДокументОснование,
	|	ЗаписьКнигиПродаж.Дата                               КАК Дата,
	|	ИСТИНА                                               КАК КорректируемыйДокумент,
	|	ЛОЖЬ                                                 КАК ИсправляемаяКорректировка
	|ИЗ
	|	ВТДокументыОснования КАК Основания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаписьКнигиПродаж КАК ЗаписьКнигиПродаж
	|			ПО Основания.ДокументОснование = ЗаписьКнигиПродаж.Ссылка
	|			И ЗаписьКнигиПродаж.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеПрочегоНачисленияНДС))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОснованияИсправления.ДокументОснование              КАК Документ,
	|	Основания.ДокументОснование                         КАК ДокументОснование,
	|	НЕОПРЕДЕЛЕНО                                        КАК Дата,
	|	ЛОЖЬ                                                КАК КорректируемыйДокумент,
	|	ИСТИНА                                              КАК ИсправляемаяКорректировка
	|ИЗ
	|	ВТДокументыОснования КАК Основания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|			ПО Основания.ДокументОснование = КорректировкаРеализации.Ссылка
	|			И КорректировкаРеализации.ВидКорректировки В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияИсправления
	|			ПО КорректировкаРеализации.ДокументОснование =
	|				ВЫРАЗИТЬ(ОснованияИсправления.ДокументОснование КАК Документ.КорректировкаРеализации).ДокументОснование
	|			И ОснованияИсправления.Ссылка = &СчетФактураОснование
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаСуммДокументов";
	
	УстановитьПараметрЗапросаКоэффициентПересчетаВВалютуРегл(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДокументыПоиска", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДокументыПоиска(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
#Область ТекстРеализацияТоваровУслугВидыЗапасов
	ТекстРеализацияТоваровУслугВидыЗапасов = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенностиПродажи,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенностиЗакупки,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	NULL КАК ЗакупкаПодДеятельность,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	NULL КАК ДатаСчетаФактурыКомиссионера,
	|	NULL КАК Покупатель,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) КАК ТипЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВтТаблицаСуммДокументов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаВидыЗапасов.Ссылка = ДокументыОснования.Документ
	|			
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаВидыЗапасов.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.Ссылка.ВернутьМногооборотнуюТару
	|			ТОГДА Аналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ
	|
	|";
#КонецОбласти
	
#Область ТекстРеализацияТоваровУслугТовары
	ТекстРеализацияТоваровУслугТовары = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ТаблицаТовары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаТовары.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаТовары.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	NULL,
	|	ТаблицаТовары.Ссылка.НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЕСТЬNULL(ТаблицаТовары.Характеристика.Принципал, ТаблицаТовары.Номенклатура.Принципал) КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаТовары.Ссылка = ДокументыОснования.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаТовары.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаТовары.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры НЕ В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|";

#КонецОбласти
	
#Область ТекстРеализацияУслугПрочихАктивов
	ТекстРеализацияУслугПрочихАктивов = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ТаблицаДоходы.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаДоходы.СуммаСНДС - ТаблицаДоходы.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДоходы.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаДоходы.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДоходы.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаДоходы.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДоходы.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	NULL,
	|	ТаблицаДоходы.Ссылка.НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.Доходы КАК ТаблицаДоходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаДоходы.Ссылка = ДокументыОснования.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаДоходы.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаДоходы.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|";
#КонецОбласти
	
#Область ТекстПередачаТоваровМеждуОрганизациямиВидыЗапасов
	ТекстПередачаТоваровМеждуОрганизациямиВидыЗапасов = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ТаблицаВидыЗапасов.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.Ссылка.ПередачаПодДеятельность,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаВидыЗапасов.Ссылка = ДокументыОснования.Документ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаВидыЗапасов.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|";
#КонецОбласти
	
#Область ТекстПередачаТоваровМеждуОрганизациямиТовары
	ТекстПередачаТоваровМеждуОрганизациямиТовары = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ЕСТЬNULL(ТаблицаТовары.СтатьяРасходов.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)),
	|	ТаблицаТовары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаТовары.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаТовары.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ТаблицаТовары.Ссылка.ПередачаПодДеятельность,
	|	ТаблицаТовары.Ссылка.НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЕСТЬNULL(ТаблицаТовары.Характеристика.Принципал, ТаблицаТовары.Номенклатура.Принципал) КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаТовары.Ссылка = ДокументыОснования.Документ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаТовары.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаТовары.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры НЕ В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|";

#КонецОбласти
	
#Область ТекстВозвратТоваровМеждуОрганизациями
	ТекстВозвратТоваровМеждуОрганизациями = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ТаблицаВидыЗапасов.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаВидыЗапасов.Ссылка = ДокументыОснования.Документ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаВидыЗапасов.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|";
#КонецОбласти
	
#Область ТекстОтчетПоКомиссииМеждуОрганизациямиВознаграждение
	ТекстОтчетПоКомиссииМеждуОрганизациямиВознаграждение = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ОтчетПоКомиссии.СтавкаНДСВознаграждения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ОтчетПоКомиссии.СуммаВознаграждения - ОтчетПоКомиссии.СуммаНДСВознаграждения) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетПоКомиссии.СуммаНДСВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ОтчетПоКомиссии.СуммаВознаграждения
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетПоКомиссии.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ОтчетПоКомиссии.СуммаНДСВознаграждения
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетПоКомиссии.СуммаНДСВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|	ВЫБОР
	|		КОГДА ОтчетПоКомиссии.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ОтчетПоКомиссии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ОтчетПоКомиссии.Ссылка = ДокументыОснования.Документ
	|			И ОтчетПоКомиссии.СуммаНДСВознаграждения <> 0
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ОтчетПоКомиссии.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И СуммыДокументовВВалютеРегл.ИдентификаторСтроки = """"
	|";
#КонецОбласти
	
#Область ТекстАктВыполненныхРабот
	ТекстАктВыполненныхРабот = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ТаблицаУслуги.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаУслуги.СуммаСНДС - ТаблицаУслуги.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаУслуги.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаУслуги.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуги.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	NULL,
	|	ТаблицаУслуги.Ссылка.НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЕСТЬNULL(ТаблицаУслуги.Характеристика.Принципал, ТаблицаУслуги.Номенклатура.Принципал) КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.АктВыполненныхРабот.Услуги КАК ТаблицаУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаУслуги.Ссылка = ДокументыОснования.Документ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаУслуги.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаУслуги.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|";
#КонецОбласти
	
#Область ТекстВозвратТоваровПоставщику
	ТекстВозвратТоваровПоставщику = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ТаблицаВидыЗапасов.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	NULL,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаВидыЗапасов.Ссылка = ДокументыОснования.Документ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаВидыЗапасов.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.Ссылка.ВозвратПринятойМногооборотнойТары
	|			ТОГДА Аналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ
	|
	|";
#КонецОбласти
	
#Область ТекстОтчетКомитентуВознаграждение
	ТекстОтчетКомитентуВознаграждение = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ОтчетКомитенту.СтавкаНДСВознаграждения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ОтчетКомитенту.СуммаВознаграждения - ОтчетКомитенту.СуммаНДСВознаграждения) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетКомитенту.СуммаНДСВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ОтчетКомитенту.СуммаВознаграждения
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетКомитенту.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ОтчетКомитенту.СуммаНДСВознаграждения
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетКомитенту.СуммаНДСВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ОтчетКомитенту.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ОтчетКомитенту
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ОтчетКомитенту.Ссылка = ДокументыОснования.Документ
	|			И ОтчетКомитенту.СуммаВознаграждения <> 0
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ОтчетКомитенту.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И СуммыДокументовВВалютеРегл.ИдентификаторСтроки = """"
	|";
#КонецОбласти
	
#Область ТекстВыкупВозвратнойТарыКлиентом
	ТекстВыкупВозвратнойТарыКлиентом = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ТаблицаВидыЗапасов.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	NULL,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ВыкупВозвратнойТарыКлиентом.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаВидыЗапасов.Ссылка = ДокументыОснования.Документ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаВидыЗапасов.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|";
#КонецОбласти
	
#Область ТекстЗаписьКнигиПродаж
	ТекстЗаписьКнигиПродаж = "
	|ВЫБРАТЬ
	|	ТаблицаЦенности.ВидЦенности,
	|	ТаблицаЦенности.ВидЦенности,
	|	ТаблицаЦенности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаЦенности.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаЦенности.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаЦенности.Сумма + ТаблицаЦенности.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаЦенности.Сумма + ТаблицаЦенности.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаЦенности.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаЦенности.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаЦенности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаЦенности.Ссылка = ДокументыОснования.Документ
	|			И НЕ ДокументыОснования.КорректируемыйДокумент
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаЦенности.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаЦенности.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаЦенности.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееНачислениеНДС)
	|";
#КонецОбласти
	
#Область ТекстКорректировкаРеализацииРасхождения
	ТекстКорректировкаРеализацииРасхождения = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ТаблицаРасхождения.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаРасхождения.СуммаСНДС - ТаблицаРасхождения.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаРасхождения.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаРасхождения.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	NULL,
	|	ТаблицаРасхождения.Ссылка.НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЕСТЬNULL(ТаблицаРасхождения.Характеристика.Принципал, ТаблицаРасхождения.Номенклатура.Принципал) КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.КорректировкаРеализации.Расхождения КАК ТаблицаРасхождения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаРасхождения.Ссылка = ДокументыОснования.Документ
	|			И НЕ ДокументыОснования.ИсправляемаяКорректировка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаРасхождения.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаРасхождения.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаРасхождения.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПерепоставленногоТовара)
	|	И (ТаблицаРасхождения.Номенклатура.ТипНоменклатуры НЕ В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|		ИЛИ ТаблицаРасхождения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|";
#КонецОбласти
	
#Область ТекстКорректировкаРеализацииСписание
	ТекстКорректировкаРеализацииСписание = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенностиПродажи,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенностиЗакупки,
	|	ТаблицаСписание.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаСписание.СуммаСНДС - ТаблицаСписание.СуммаНДС)* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаСписание.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаСписание.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаСписание.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаСписание.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаСписание.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	NULL КАК ЗакупкаПодДеятельность,
	|	ТаблицаСписание.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	NULL КАК ДатаСчетаФактурыКомиссионера,
	|	NULL КАК Покупатель,
	|	ТаблицаСписание.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) КАК ТипЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовСписание КАК ТаблицаСписание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаСписание.Ссылка = ДокументыОснования.Документ
	|			И НЕ ДокументыОснования.ИсправляемаяКорректировка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаСписание.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаСписание.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаСписание.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПерепоставленногоТовара)
	|";
#КонецОбласти
	
	
	ТекстЗапроса = ТекстРеализацияТоваровУслугВидыЗапасов 
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстРеализацияТоваровУслугТовары 
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстРеализацияУслугПрочихАктивов
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаТоваровМеждуОрганизациямиВидыЗапасов
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаТоваровМеждуОрганизациямиТовары
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВозвратТоваровМеждуОрганизациями
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтчетПоКомиссииМеждуОрганизациямиВознаграждение
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстАктВыполненныхРабот
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВозвратТоваровПоставщику
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтчетКомитентуВознаграждение
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыкупВозвратнойТарыКлиентом
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗаписьКнигиПродаж
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстКорректировкаРеализацииРасхождения
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстКорректировкаРеализацииСписание
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса, Истина)
	;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса, ПрошлыеКорректировки = Ложь)
	
	ИмяРегистра = "ВтТаблицаКорректировки";
	
	УстановитьПараметрЗапросаКоэффициентПересчетаВВалютуРегл(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДокументыПоиска", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДокументыПоиска(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
#Область ТекстРасхождения
	ТекстРасхождения = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенностиПродажи,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенностиЗакупки,
	|	ТаблицаРасхождения.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаРасхождения.СуммаСНДС - ТаблицаРасхождения.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаРасхождения.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаРасхождения.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК ЗакупкаПодДеятельность,
	|	ТаблицаРасхождения.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	NULL КАК ДатаСчетаФактурыКомиссионера,
	|	NULL КАК Покупатель,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) КАК ТипЗапасовПолучателя,
	|	ЕСТЬNULL(ТаблицаРасхождения.Характеристика.Принципал, ЕСТЬNULL(ТаблицаРасхождения.Номенклатура.Принципал, НЕОПРЕДЕЛЕНО)) КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВтТаблицаКорректировки
	|ИЗ
	|	Документ.КорректировкаРеализации.Расхождения КАК ТаблицаРасхождения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаРасхождения.Ссылка = ДокументыОснования.Документ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаРасхождения.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаРасхождения.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаРасхождения.Ссылка.ВидКорректировки В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|	И (ТаблицаРасхождения.Номенклатура.ТипНоменклатуры НЕ В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|		ИЛИ ТаблицаРасхождения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|	И (&Исправление ИЛИ &Корректировочный)
	|";
#КонецОбласти
	
#Область ТекстВидыЗапасовКорректировкаВыручки
	ТекстВидыЗапасовКорректировкаВыручки = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ТаблицаКорректировкаВыручки.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0 
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаКорректировкаВыручки.СуммаСНДС - ТаблицаКорректировкаВыручки.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировкаВыручки.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаКорректировкаВыручки.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировкаВыручки.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаКорректировкаВыручки.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировкаВыручки.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|	ТаблицаКорректировкаВыручки.Ссылка.НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ТаблицаКорректировкаВыручки.ВидЗапасов.ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовКорректировкаВыручки КАК ТаблицаКорректировкаВыручки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаКорректировкаВыручки.Ссылка = ДокументыОснования.Документ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаКорректировкаВыручки.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаКорректировкаВыручки.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаКорректировкаВыручки.Ссылка.ВидКорректировки В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|	И (&Исправление ИЛИ &Корректировочный)
	|";
#КонецОбласти
	
#Область ТекстВидыЗапасовОприходование
	ТекстВидыЗапасовОприходование = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ТаблицаОприходование.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(-СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(-(ТаблицаОприходование.СуммаСНДС - ТаблицаОприходование.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(-СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(-ТаблицаОприходование.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА -ТаблицаОприходование.СуммаСНДС
	|		КОГДА ЕСТЬNULL(-СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(-ТаблицаОприходование.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ (СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА -ТаблицаОприходование.СуммаНДС
	|		КОГДА ЕСТЬNULL(-СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(-ТаблицаОприходование.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|	ТаблицаОприходование.Ссылка.НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ТаблицаОприходование.ВидЗапасов.ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовОприходование КАК ТаблицаОприходование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаОприходование.Ссылка = ДокументыОснования.Документ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаОприходование.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаОприходование.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаОприходование.Ссылка.ВидКорректировки В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|	И (&Исправление ИЛИ &Корректировочный)
	|
	|";
#КонецОбласти
	
#Область ТекстВидыЗапасовСписание
	ТекстВидыЗапасовСписание = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|	ТаблицаСписание.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаСписание.СуммаСНДС - ТаблицаСписание.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаСписание.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаСписание.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаСписание.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаСписание.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаСписание.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|	ТаблицаСписание.Ссылка.НалогообложениеНДС,
	|	NULL,
	|	NULL,
	|	ТаблицаСписание.ВидЗапасов.ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовСписание КАК ТаблицаСписание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаСписание.Ссылка = ДокументыОснования.Документ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаСписание.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаСписание.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаСписание.Ссылка.ВидКорректировки В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|	И (&Исправление ИЛИ &Корректировочный)";
#КонецОбласти

#Область ТекстЗаписьКнигиПродаж
	ТекстЗаписьКнигиПродаж = "
	|ВЫБРАТЬ
	|	ТаблицаЦенности.ВидЦенности,
	|	ТаблицаЦенности.ВидЦенности,
	|	ТаблицаЦенности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаЦенности.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.БазаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаЦенности.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаЦенности.Сумма + ТаблицаЦенности.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаЦенности.Сумма + ТаблицаЦенности.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаЦенности.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаЦенности.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО КАК Принципал,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж.Ценности КАК ТаблицаЦенности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыОснования
	|		ПО ТаблицаЦенности.Ссылка = ДокументыОснования.Документ
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаЦенности.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаЦенности.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаЦенности.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеПрочегоНачисленияНДС)
	|	И &Исправление
	|";
#КонецОбласти

	ТекстЗапроса = ТекстРасхождения
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВидыЗапасовКорректировкаВыручки
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВидыЗапасовОприходование
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВидыЗапасовСписание
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗаписьКнигиПродаж;
	
	Если ПрошлыеКорректировки Тогда
		
		Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрошлыеКорректировки", ТекстыЗапроса) Тогда
			ТекстЗапросаВтПрошлыеКорректировки(Запрос, ТекстыЗапроса);
		КонецЕсли;

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВтДокументыПоиска","ВтПрошлыеКорректировки");
		ТекстЗапроса = Стрзаменить(ТекстЗапроса,"ПОМЕСТИТЬ ВтТаблицаКорректировки","");
		
		ИмяРегистра = "";
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаВтНДСЗаписиКнигиПродажДокументаОснования(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтНДСЗаписиКнигиПродажДокументаОснования";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапросаНДСЗаписиКнигиПродажДокументаОснования = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера
	|ПОМЕСТИТЬ ВтНДСЗаписиКнигиПродажДокументаОснования
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|		ПО НДСЗаписиКнигиПродаж.Регистратор = ДокументыОснования.ДокументОснование";
	
	ТекстыЗапроса.Добавить(ТекстЗапросаНДСЗаписиКнигиПродажДокументаОснования, ИмяРегистра);
	
	Возврат ТекстЗапросаНДСЗаписиКнигиПродажДокументаОснования;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаНомерНаПечать(Запрос);
	УстановитьПараметрЗапросаСчетФактураПредыдущееИсправление(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаСуммДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	-ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ИСТИНА КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|		&Период,
	|		НЕ Сторно
	|		И Регистратор <> &Ссылка
	|		И СчетФактура = &СчетФактураПредыдущееИсправление) КАК ЖурналУчетаСчетовФактур
	|
	|ГДЕ
	|	&Исправление
	|	И (ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия > 0)
	|";
#КонецОбласти
	
#Область ТекстВыставленныеСчетаФактурыНаРеализацию
	ТекстЗапросаВыставленныеСчетаФактурыНаРеализацию = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	&Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаВыставления КАК ДатаВыставленияПолучения,
	|	&ВыставленВЭлектронномВиде КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации КАК КодВидаОперации,
	|	&НомерНаПечать КАК НомерСчетаФактуры,
	|	&Период КАК ДатаСчетаФактуры,
	|	NULL КАК НомерКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаКорректировочногоСчетаФактуры,
	|	NULL КАК НомерИсправления,
	|	NULL КАК ДатаИсправления,
	|	NULL КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ИндексСтроки,
	|	&ВалютаСчетаФактуры КАК Валюта,
	|	ТаблицаДанных.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	ТаблицаДанных.СуммаНДС КАК СуммаНДС,
	|	NULL КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	NULL КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	NULL КАК СуммаНДСРазницаУменьшение,
	|	NULL КАК СуммаНДСРазницаУвеличение,
	|	ВЫБОР
	|		КОГДА ТаблицаДанных.НалогообложениеНДС
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	|	&КППКонтрагента КАК КППКонтрагента,
	|	&ИННКонтрагента КАК ИННКонтрагента,
	|	NULL КАК Посредник,
	|	NULL КАК СчетФактураВыданныйПокупателю,
	|	
	|	ТаблицаДанных.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ТаблицаДанных.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ВЫБОР 
	|		КОГДА ТаблицаДанных.СуммаПоСчетуФактуреКомиссия <> 0 
	|			ТОГДА &КодВидаОперации
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ТаблицаДокументов.НалогообложениеНДС) КАК НалогообложениеНДС,
	|		СУММА(ТаблицаДокументов.СуммаПоСчетуФактуре) КАК СуммаПоСчетуФактуре,
	|		СУММА(ТаблицаДокументов.СуммаНДС) КАК СуммаНДС,
	|		СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреКомиссия) КАК СуммаПоСчетуФактуреКомиссия,
	|		СУММА(ТаблицаДокументов.СуммаНДСКомиссия) КАК СуммаНДСКомиссия
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаСуммДокументов.НалогообложениеНДС КАК НалогообложениеНДС,
	|			ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал КАК СуммаПоСчетуФактуре,
	|			ТаблицаСуммДокументов.СуммаНДСЖурнал КАК СуммаНДС,
	|			0 КАК СуммаПоСчетуФактуреКомиссия,
	|			0 КАК СуммаНДСКомиссия
	|		ИЗ
	|			ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаСуммДокументов.НалогообложениеНДС КАК НалогообложениеНДС,
	|			0,
	|			0,
	|			ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал,
	|			ТаблицаСуммДокументов.СуммаНДСЖурнал
	|		ИЗ
	|			ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|		ГДЕ
	|			НЕ ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ИЛИ НЕ (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТаблицаСуммДокументов.Принципал = &Организация)
	|			
	|		) КАК ТаблицаДокументов
	|	) КАК ТаблицаДанных
	|
	|ГДЕ
	|	НЕ &Исправление
	|	И НЕ &Корректировочный
	|";
#КонецОбласти
	
#Область ТекстВыставленныеСчетаФактурыНаРеализациюИсправление
	ТекстЗапросаВыставленныеСчетаФактурыНаРеализациюИсправление = "
	|ВЫБРАТЬ
	|	&Период,
	|	&Организация,
	|	&Контрагент,
	|	&Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры),
	|	&ДатаВыставления,
	|	&ВыставленВЭлектронномВиде,
	|	&КодВидаОперации,
	|	&НомерНаПечать,
	|	&ДатаСчетФактурыОснования,
	|	NULL,
	|	NULL,
	|	&НомерИсправления,
	|	&Период,
	|	NULL,
	|	NULL,
	|	NULL,
	|	&ВалютаСчетаФактуры,
	|	ТаблицаДанных.СуммаПоСчетуФактуре,
	|	ТаблицаДанных.СуммаНДС,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ЕстьNULL(ТаблицаДанных.НалогообложениеКорректировки,ТаблицаДанных.НалогообложениеОснования)
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	&КППКонтрагента,
	|	&ИННКонтрагента,
	|	NULL,
	|	NULL,
	|	
	|	ТаблицаДанных.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ТаблицаДанных.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ВЫБОР 
	|		КОГДА ТаблицаДанных.СуммаПоСчетуФактуреКомиссия <> 0 
	|			ТОГДА &КодВидаОперации
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ТаблицаДокументов.НалогообложениеОснования) КАК НалогообложениеОснования,
	|		МАКСИМУМ(ТаблицаДокументов.НалогообложениеКорректировки) КАК НалогообложениеКорректировки,
	|		СУММА(ТаблицаДокументов.СуммаПоСчетуФактуре) КАК СуммаПоСчетуФактуре,
	|		СУММА(ТаблицаДокументов.СуммаНДС) КАК СуммаНДС,
	|		СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреКомиссия) КАК СуммаПоСчетуФактуреКомиссия,
	|		СУММА(ТаблицаДокументов.СуммаНДСКомиссия) КАК СуммаНДСКомиссия
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаСуммДокументов.НалогообложениеНДС КАК НалогообложениеОснования,
	|			NULL КАК НалогообложениеКорректировки,
	|			ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал КАК СуммаПоСчетуФактуре,
	|			ТаблицаСуммДокументов.СуммаНДСЖурнал КАК СуммаНДС,
	|			0 КАК СуммаПоСчетуФактуреКомиссия,
	|			0 КАК СуммаНДСКомиссия
	|		ИЗ
	|			ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|	
	|		ОБЪЕДИНИТЬ ВСЕ
	|	
	|		ВЫБРАТЬ
	|			NULL,
	|			ТаблицаКорректировки.НалогообложениеНДС,
	|			ТаблицаКорректировки.СуммаПоСчетуфактуреЖурнал,
	|			ТаблицаКорректировки.СуммаНДСЖурнал,
	|			0,
	|			0
	|		ИЗ
	|			ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|	
	|		ОБЪЕДИНИТЬ ВСЕ
	|	
	|		ВЫБРАТЬ
	|			ТаблицаСуммДокументов.НалогообложениеНДС,
	|			NULL,
	|			0,
	|			0,
	|			ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал,
	|			ТаблицаСуммДокументов.СуммаНДСЖурнал
	|		ИЗ
	|			ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|		ГДЕ
	|			НЕ ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ИЛИ НЕ (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТаблицаСуммДокументов.Принципал = &Организация)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			NULL,
	|			ТаблицаКорректировки.НалогообложениеНДС,
	|			0,
	|			0,
	|			ТаблицаКорректировки.СуммаПоСчетуфактуреЖурнал,
	|			ТаблицаКорректировки.СуммаНДСЖурнал
	|		ИЗ
	|			ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|		ГДЕ
	|			НЕ ТаблицаКорректировки.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ИЛИ НЕ (ТаблицаКорректировки.Принципал = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТаблицаКорректировки.Принципал = &Организация)
	|		
	|		) КАК ТаблицаДокументов
	|	) КАК ТаблицаДанных
	|
	|ГДЕ
	|	&Исправление
	|	И НЕ &Корректировочный
	|";
#КонецОбласти
	
#Область ТекстВыставленныеСчетаФактурыНаРеализациюКорректировочный
	ТекстЗапросаВыставленныеСчетаФактурыНаРеализациюКорректировочный = "
	|ВЫБРАТЬ
	|	&Период,
	|	&Организация,
	|	&Контрагент,
	|	&Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры),
	|	&ДатаВыставления,
	|	&ВыставленВЭлектронномВиде,
	|	&КодВидаОперации,
	|	ТаблицаДанных.НомерИсходногоДокумента,
	|	ТаблицаДанных.ДатаИсходногоДокумента,
	|	&НомерНаПечать,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &ДатаСчетФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ,
	|	ТаблицаДанных.НомерИсправленияИсходногоДокумента,
	|	ТаблицаДанных.ДатаИсправленияИсходногоДокумента,
	|	&НомерИсправления,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|	КОНЕЦ,
	|	ТаблицаДанных.ИндексСтроки,
	|	&ВалютаСчетаФактуры,
	|	NULL,
	|	NULL,
	|	-ТаблицаДанных.СуммаПоСчетуФактуреУменьшение,
	|	ТаблицаДанных.СуммаПоСчетуФактуреУвеличение,
	|	-ТаблицаДанных.СуммаНДСУменьшение,
	|	ТаблицаДанных.СуммаНДСУвеличение,
	|	ВЫБОР
	|		КОГДА ТаблицаДанных.НалогообложениеНДС
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	&КППКонтрагента,
	|	&ИННКонтрагента,
	|	NULL,
	|	NULL,
	|	
	|	0 КАК СуммаПоСчетуФактуреКомиссия,
	|	0 КАК СуммаНДСКомиссия,
	|	-ТаблицаДанных.СуммаПоСчетуФактуреУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ТаблицаДанных.СуммаНДСУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ТаблицаДанных.СуммаПоСчетуФактуреУвеличениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ТаблицаДанных.СуммаНДСУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ВЫБОР 
	|		КОГДА ТаблицаДанных.СуммаПоСчетуФактуреУменьшениеКомиссия <> 0 
	|			  ИЛИ ТаблицаДанных.СуммаПоСчетуФактуреУвеличениеКомиссия <> 0
	|			ТОГДА &КодВидаОперации
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеОснований.НомерИсходногоДокумента КАК НомерИсходногоДокумента,
	|		ДанныеОснований.ДатаИсходногоДокумента КАК ДатаИсходногоДокумента,
	|		ДанныеОснований.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|		ДанныеОснований.ДатаИсправленияИсходногоДокумента КАК ДатаИсправленияИсходногоДокумента,
	|		ДанныеОснований.ИндексСтроки КАК ИндексСтроки,
	|		МАКСИМУМ(ТаблицаДокументов.НалогообложениеНДС) КАК НалогообложениеНДС,
	|		
	|		СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУменьшение)         КАК СуммаПоСчетуФактуреУменьшение,
	|		СУММА(ТаблицаДокументов.СуммаНДСУменьшение)                    КАК СуммаНДСУменьшение,
	|		СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУвеличение)         КАК СуммаПоСчетуФактуреУвеличение,
	|		СУММА(ТаблицаДокументов.СуммаНДСУвеличение)                    КАК СуммаНДСУвеличение,
	|		
	|		СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУменьшениеКомиссия) КАК СуммаПоСчетуФактуреУменьшениеКомиссия,
	|		СУММА(ТаблицаДокументов.СуммаНДСУменьшениеКомиссия)            КАК СуммаНДСУменьшениеКомиссия,
	|		СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУвеличениеКомиссия) КАК СуммаПоСчетуФактуреУвеличениеКомиссия,
	|		СУММА(ТаблицаДокументов.СуммаНДСУвеличениеКомиссия)            КАК СуммаНДСУвеличениеКомиссия
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаКорректировки.НалогообложениеНДС КАК НалогообложениеНДС,
	|			ТаблицаКорректировки.ДокументОснование КАК ДокументОснование,
	|			
	|			ВЫБОР
	|				КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал < 0 
	|					ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаПоСчетуФактуреУменьшение,
	|			ВЫБОР 
	|				КОГДА ТаблицаКорректировки.СуммаНДСЖурнал < 0 
	|					ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаНДСУменьшение,
	|			ВЫБОР 
	|				КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал > 0 
	|					ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаПоСчетуФактуреУвеличение,
	|			ВЫБОР 
	|				КОГДА ТаблицаКорректировки.СуммаНДСЖурнал > 0 
	|					ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаНДСУвеличение,
	|			
	|			0 КАК СуммаПоСчетуФактуреУменьшениеКомиссия,
	|			0 КАК СуммаНДСУменьшениеКомиссия,
	|			0 КАК СуммаПоСчетуФактуреУвеличениеКомиссия,
	|			0 КАК СуммаНДСУвеличениеКомиссия
	|			
	|		ИЗ
	|			ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаКорректировки.НалогообложениеНДС КАК НалогообложениеНДС,
	|			ТаблицаКорректировки.ДокументОснование КАК ДокументОснование,
	|			
	|			0 КАК СуммаПоСчетуФактуреУменьшение,
	|			0 КАК СуммаНДСУменьшение,
	|			0 КАК СуммаПоСчетуФактуреУвеличение,
	|			0 КАК СуммаНДСУвеличение,
	|			
	|			ВЫБОР
	|				КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал < 0 
	|					ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаПоСчетуФактуреУменьшениеКомиссия,
	|			ВЫБОР 
	|				КОГДА ТаблицаКорректировки.СуммаНДСЖурнал < 0 
	|					ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаНДСУменьшениеКомиссия,
	|			ВЫБОР 
	|				КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал > 0 
	|					ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаПоСчетуФактуреУвеличениеКомиссия,
	|			ВЫБОР 
	|				КОГДА ТаблицаКорректировки.СуммаНДСЖурнал > 0 
	|					ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаНДСУвеличениеКомиссия
	|			
	|		ИЗ
	|			ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|		ГДЕ
	|			НЕ ТаблицаКорректировки.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ИЛИ НЕ (ТаблицаКорректировки.Принципал = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТаблицаКорректировки.Принципал = &Организация)
	|		) КАК ТаблицаДокументов
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДанныеОснований
	|			ПО ТаблицаДокументов.ДокументОснование = ДанныеОснований.ДокументОснование
	|
	|	СГРУППИРОВАТЬ ПО
	|		НомерИсходногоДокумента,
	|		ДатаИсходногоДокумента,
	|		НомерИсправленияИсходногоДокумента,
	|		ДатаИсправленияИсходногоДокумента,
	|		ИндексСтроки
	|
	|	) КАК ТаблицаДанных
	|
	|ГДЕ
	|	&Корректировочный
	|";
#КонецОбласти

#Область ТекстПолученныеСчетаФактуры
	ТекстЗапросаПолученныеСчетаФактуры = "
	|ВЫБРАТЬ
	|	&Период,
	|	&Контрагент,
	|	&Организация,
	|	&Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры),
	|	&ДатаВыставления,
	|	&ВыставленВЭлектронномВиде,
	|	&КодВидаОперации,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА ДанныеОснований.НомерИсходногоДокумента
	|		ИНАЧЕ &НомерНаПечать
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА ДанныеОснований.ДатаИсходногоДокумента
	|		КОГДА &Исправление
	|			ТОГДА &ДатаСчетФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА &НомерНаПечать
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА &Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА ДанныеОснований.НомерИсправленияИсходногоДокумента
	|		ИНАЧЕ &НомерИсправления
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА ДанныеОснований.ДатаИсправленияИсходногоДокумента
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА &НомерИсправления
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный И &Исправление
	|			ТОГДА &Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА ДанныеОснований.ИндексСтроки
	|	КОНЕЦ,
	|	&ВалютаСчетаФактуры,
	|	СУММА(ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал),
	|	СУММА(ТаблицаСуммДокументов.СуммаНДСЖурнал),
	|	0,
	|	0,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	&ОрганизацияКПП,
	|	NULL,
	|	NULL,
	|	NULL,
	|	
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаСуммДокументов.ТипЗапасовПолучателя В (&ТипыЗапасовСобственные)
	|					И (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО ИЛИ ТаблицаСуммДокументов.Принципал = &Организация)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал
	|		КОНЕЦ) КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаСуммДокументов.ТипЗапасовПолучателя В (&ТипыЗапасовСобственные)
	|					И (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО ИЛИ ТаблицаСуммДокументов.Принципал = &Организация)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаСуммДокументов.СуммаНДСЖурнал
	|		КОНЕЦ) КАК СуммаНДСКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.ТипЗапасовПолучателя В (&ТипыЗапасовСобственные)
	|				И (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО ИЛИ ТаблицаСуммДокументов.Принципал = &Организация)
	|			ТОГДА """"
	|		ИНАЧЕ &КодВидаОперации
	|	КОНЕЦ) КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|	
	|ИЗ
	|	ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДанныеОснований
	|			ПО ТаблицаСуммДокументов.ДокументОснование = ДанныеОснований.ДокументОснование
	|ГДЕ
	|	НЕ ТаблицаСуммДокументов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|	И &ДокументИнтеркампани
	|	И &ДатаВыставления <> ДАТАВРЕМЯ(1,1,1)
	|	И &Контрагент <> &Организация 
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА ДанныеОснований.НомерИсходногоДокумента
	|		ИНАЧЕ &НомерНаПечать
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА ДанныеОснований.ДатаИсходногоДокумента
	|		КОГДА &Исправление
	|			ТОГДА &ДатаСчетФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА ДанныеОснований.НомерИсправленияИсходногоДокумента
	|		ИНАЧЕ &НомерИсправления
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА ДанныеОснований.ДатаИсправленияИсходногоДокумента
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Корректировочный
	|			ТОГДА ДанныеОснований.ИндексСтроки
	|	КОНЕЦ";
#КонецОбласти

	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(ТекстЗапросаСторноИсправление);
	МассивТекстов.Добавить(ТекстЗапросаВыставленныеСчетаФактурыНаРеализацию);
	МассивТекстов.Добавить(ТекстЗапросаВыставленныеСчетаФактурыНаРеализациюИсправление);
	МассивТекстов.Добавить(ТекстЗапросаВыставленныеСчетаФактурыНаРеализациюКорректировочный);
	МассивТекстов.Добавить(ТекстЗапросаПолученныеСчетаФактуры);
	ТекстЗапроса = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПокупок";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаСчетФактураПредыдущееИсправление(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = "
	|
	|ВЫБРАТЬ
	|	&Период                                          КАК Период,
	|	НДСЗаписиКнигиПокупок.Организация                КАК Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик                  КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура                КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности                КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СчетУчетаНДС               КАК СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупок.Событие                    КАК Событие,
	|	&Период                                          КАК ДатаСобытия,
	|	&Исправление                                     КАК Исправление,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ                                            КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА НДСЗаписиКнигиПокупок.Период
	|	КОНЕЦ                                            КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	-НДСЗаписиКнигиПокупок.СуммаБезНДСОборот         КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПокупок.НДСОборот                 КАК НДС,
	|	&КодВидаОперацииНаУменьшение                     КАК КодВидаОперации
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|		,
	|		,
	|		Регистратор,
	|		Организация = &Организация
	|			И СчетФактура В (
	|				ВЫБРАТЬ
	|					ДокументыПоиска.Документ
	|				ИЗ 
	|					ВтДокументыПоиска КАК ДокументыПоиска
	|				ГДЕ
	|					(&Корректировочный И НЕ ДокументыПоиска.КорректируемыйДокумент)
	|					ИЛИ
	|					(НЕ &Корректировочный И НЕ ДокументыПоиска.ИсправляемаяКорректировка)
	|				)
	|			И ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление) КАК НДСЗаписиКнигиПокупок
	|
	|ГДЕ
	|	&Исправление
	|	И НДСЗаписиКнигиПокупок.Регистратор <> &Ссылка
	|	И (НДСЗаписиКнигиПокупок.СуммаБезНДСОборот > 0
	|		ИЛИ НДСЗаписиКнигиПокупок.НДСОборот > 0)
	|
	|";
#КонецОбласти

#Область ТекстКорректировка
	ТекстЗапросаКорректировка = "
	|
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&Организация                      КАК Организация,
	|	&Контрагент                       КАК Поставщик,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА ДокументыПоиска.Документ
	|		ИНАЧЕ
	|			ТаблицаДанных.ДокументОснование
	|	КОНЕЦ                             КАК СчетФактура,
	|	ТаблицаДанных.ВидЦенностиПродажи  КАК ВидЦенности,
	|	ТаблицаДанных.СтавкаНДС           КАК СтавкаНДС,
	|	NULL                              КАК СчетУчетаНДС,
	|	ВЫБОР КОГДА ТаблицаДанных.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НалогИсчисляетПокупатель)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ КАК Событие,
	|	&Период                           КАК ДатаСобытия,
	|	ЛОЖЬ                              КАК ЗаписьДополнительногоЛиста,
	|	NULL                              КАК КорректируемыйПериод,
	|	&Исправление                      КАК Исправление,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка
	|	КОНЕЦ                             КАК ИсправленныйСчетФактура,
	|	СУММА(-ТаблицаДанных.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(-ТаблицаДанных.СуммаНДС)    КАК НДС,
	|	&КодВидаОперацииНаУменьшение      КАК КодВидаОперации
	|ИЗ
	|	ВтТаблицаКорректировки КАК ТаблицаДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыПоиска
	|			ПО ТаблицаДанных.ДокументОснование = ДокументыПоиска.ДокументОснование
	|			И ДокументыПоиска.ИсправляемаяКорректировка
	|
	|ГДЕ
	|	&Корректировочный
	|	И (ТаблицаДанных.СуммаНДС < 0 
	|		ИЛИ ТаблицаДанных.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя))
	|	И ТаблицаДанных.ТипЗапасов В (&ТипыЗапасовСобственные)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.ДокументОснование,
	|	ДокументыПоиска.Документ,
	|	ТаблицаДанных.ВидЦенностиПродажи,
	|	ВЫБОР КОГДА ТаблицаДанных.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НалогИсчисляетПокупатель)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ,
	|	ТаблицаДанных.СтавкаНДС
	|";
#КонецОбласти
	
	ТекстЗапроса = 
		ТекстЗапросаСторноИсправление
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаКорректировка;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаСчетФактураПредыдущееИсправление(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаСуммДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтНДСЗаписиКнигиПродажДокументаОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтНДСЗаписиКнигиПродажДокументаОснования(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = "
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	&Исправление КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	-НДСЗаписиКнигиПродаж.СуммаБезНДСОборот КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПродаж.НДСОборот КАК НДС,
	|	NULL КАК НомерДокументаОплаты,
	|	NULL КАК ДатаДокументаОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|		,
	|		,
	|		Регистратор,
	|		Организация = &Организация
	|			И СчетФактура В (
	|				ВЫБРАТЬ
	|					ДокументыПоиска.Документ
	|				ИЗ 
	|					ВтДокументыПоиска КАК ДокументыПоиска
	|				ГДЕ
	|					(&Корректировочный И НЕ ДокументыПоиска.КорректируемыйДокумент)
	|					ИЛИ
	|					(НЕ &Корректировочный И НЕ ДокументыПоиска.ИсправляемаяКорректировка)
	|				)
	|			И ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление) КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	&Исправление
	|	И НДСЗаписиКнигиПродаж.Регистратор <> &Ссылка
	|	И (НДСЗаписиКнигиПродаж.СуммаБезНДСОборот > 0
	|		ИЛИ НДСЗаписиКнигиПродаж.НДСОборот > 0)
	|	И (ВЫБОР 
	|			КОГДА НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.ЗаписьКнигиПродаж
	|				ТОГДА ИСТИНА 
	|			КОГДА НДСЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|				ТОГДА ИСТИНА
	|			КОГДА НДСЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ)
	|
	|";
#КонецОбласти
	
#Область ТекстКорректировка
	ТекстЗапросаКорректировка = "
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Организация,
	|	&Контрагент,
	|	ДокументыПоиска.Документ,
	|	ТаблицаДанных.ВидЦенностиПродажи,
	|	ТаблицаДанных.СтавкаНДС,
	|	NULL,
	|	NULL,
	|	ВЫБОР КОГДА ТаблицаДанных.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ КАК Событие,
	|	&Период,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			И НАЧАЛОПЕРИОДА(ДанныеОснований.ПериодКорректировки, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			И НАЧАЛОПЕРИОДА(ДанныеОснований.ПериодКорректировки, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|		ТОГДА
	|			ДанныеОснований.ПериодКорректировки
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	NULL,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка
	|	КОНЕЦ,
	|	&Исправление,
	|	NULL,
	|	СУММА(ТаблицаДанных.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДанных.СуммаНДС) КАК НДС,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВтТаблицаКорректировки КАК ТаблицаДанных
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыПоиска
	|		ПО ТаблицаДанных.ДокументОснование = ДокументыПоиска.ДокументОснование
	|			И ДокументыПоиска.ИсправляемаяКорректировка = &Исправление
	|			И НЕ ДокументыПоиска.КорректируемыйДокумент
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДанныеОснований
	|		ПО ТаблицаДанных.ДокументОснование = ДанныеОснований.ДокументОснование
	|
	|ГДЕ
	|	ТаблицаДанных.СуммаБезНДС + ТаблицаДанных.СуммаНДС > 0
	|	И ТаблицаДанных.ТипЗапасов В (&ТипыЗапасовСобственные)
	|	И &Корректировочный
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (ТаблицаДанных.Принципал = НЕОПРЕДЕЛЕНО
	|		ИЛИ ТаблицаДанных.Принципал = &Организация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.ВидЦенностиПродажи,
	|	ТаблицаДанных.СтавкаНДС,
	|	ДокументыПоиска.Документ,
	|	ДанныеОснований.ПериодКорректировки,
	|	ВЫБОР КОГДА ТаблицаДанных.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ,
	|	ДанныеОснований.ДатаОснования
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.СуммаБезНДС) <> 0 
	|		ИЛИ СУММА(ТаблицаДанных.СуммаНДС) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Организация,
	|	&Контрагент,
	|	ЕСТЬNULL(ДокументыПоиска.Документ, ДанныеОснований.ДокументОснование),
	|	ТаблицаДанных.ВидЦенностиПродажи,
	|	ТаблицаДанных.СтавкаНДС,
	|	NULL,
	|	NULL,
	|	ВЫБОР КОГДА ТаблицаДанных.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ КАК Событие,
	|	&Период,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ДанныеОснований.ПериодКорректировки, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ДанныеОснований.ПериодКорректировки, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ) ТОГДА
	|			ДанныеОснований.ПериодКорректировки
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	NULL,
	|	&Ссылка,
	|	ИСТИНА,
	|	NULL,
	|	СУММА(ТаблицаДанных.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДанных.СуммаНДС) КАК НДС,
	|	NULL,
	|	NULL
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСуммДокументов.ДокументОснование КАК ДокументОснование,
	|		ТаблицаСуммДокументов.ВидЦенностиПродажи КАК ВидЦенностиПродажи,
	|		ТаблицаСуммДокументов.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаСуммДокументов.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ТаблицаСуммДокументов.СуммаБезНДС КАК СуммаБезНДС,
	|		ТаблицаСуммДокументов.СуммаНДС КАК СуммаНДС
	|	ИЗ
	|		ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|	ГДЕ
	|		ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|		И (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО
	|			ИЛИ ТаблицаСуммДокументов.Принципал = &Организация)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаКорректировки.ДокументОснование КАК ДокументОснование,
	|		ТаблицаКорректировки.ВидЦенностиПродажи,
	|		ТаблицаКорректировки.СтавкаНДС,
	|		ТаблицаКорректировки.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ТаблицаКорректировки.СуммаБезНДС,
	|		ТаблицаКорректировки.СуммаНДС
	|	ИЗ
	|		ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|	ГДЕ
	|		ТаблицаКорректировки.ТипЗапасов В (&ТипыЗапасовСобственные)
	|		И (ТаблицаКорректировки.Принципал = НЕОПРЕДЕЛЕНО
	|			ИЛИ ТаблицаКорректировки.Принципал = &Организация)
	|
	|	) КАК ТаблицаДанных
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДанныеОснований
	|		ПО ТаблицаДанных.ДокументОснование = ДанныеОснований.ДокументОснование
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДокументыПоиска КАК ДокументыПоиска
	|		ПО ТаблицаДанных.ДокументОснование = ДокументыПоиска.ДокументОснование
	|			И ДокументыПоиска.КорректируемыйДокумент
	|
	|ГДЕ
	|	НЕ &Корректировочный
	|	И &Исправление
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.ВидЦенностиПродажи,
	|	ТаблицаДанных.СтавкаНДС,
	|	ЕСТЬNULL(ДокументыПоиска.Документ, ДанныеОснований.ДокументОснование),
	|	ДанныеОснований.ПериодКорректировки,
	|	ВЫБОР КОГДА ТаблицаДанных.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ,
	|	ДанныеОснований.ДатаОснования
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДанных.СуммаБезНДС) <> 0 
	|		ИЛИ СУММА(ТаблицаДанных.СуммаНДС) <> 0
	|";
#КонецОбласти

#Область ТекстДатаИНомерДокументаОплаты
	ТекстЗапросаДатаИНомерДокументаОплаты = "
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Период КАК Период,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия КАК ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	0 КАК СуммаБезНДС,
	|	0 КАК НДС,
	|	ПлатежноРасчетныеДокументы.НомерПлатежноРасчетногоДокумента,
	|	ПлатежноРасчетныеДокументы.ДатаПлатежноРасчетногоДокумента
	|ИЗ
	|	ВтНДСЗаписиКнигиПродажДокументаОснования КАК НДСЗаписиКнигиПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.СчетФактураВыданный.ПлатежноРасчетныеДокументы КАК ПлатежноРасчетныеДокументы
	|		ПО
	|			ПлатежноРасчетныеДокументы.Ссылка = &Ссылка";
#КонецОбласти
	
	ТекстЗапроса = ТекстЗапросаСторноИсправление 
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаКорректировка 
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаДатаИНомерДокументаОплаты;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса
	
КонецФункции

Функция СчетФактураПредыдущееИсправление(СчетФактураОснование, НомерИсправления)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК ИсправленныйСчетФактура,
	|	СчетФактура.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактура
	|ГДЕ
	|	СчетФактура.СчетФактураОснование = &СчетФактураОснование
	|	И СчетФактура.Проведен
	|	И СчетФактура.Исправление
	|	И СчетФактура.НомерИсправления <> &НомерИсправления
	|";
	
	Запрос.УстановитьПараметр("СчетФактураОснование", СчетФактураОснование);
	Запрос.УстановитьПараметр("НомерИсправления", НомерИсправления);
	
	ПредыдущийНомер = 0;
	ИсправленныйСчетФактура = Неопределено;
	НомерИсправленияЧислом = ?(ЗначениеЗаполнено(НомерИсправления),Число(НомерИсправления),1);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерИзВыборки = Число(Выборка.НомерИсправления);
		Если НомерИзВыборки < НомерИсправленияЧислом
			И НомерИзВыборки > ПредыдущийНомер Тогда
			ПредыдущийНомер = НомерИзВыборки;
			ИсправленныйСчетФактура = Выборка.ИсправленныйСчетФактура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИсправленныйСчетФактура
	
КонецФункции


Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.СчетФактураВыданный";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ВалютаСчетаФактуры",      "ДанныеДокумента.Ссылка.Валюта");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоИсправлению", """""");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		Запрос.Параметры.Вставить("НомерНаПечать","""""");
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтДанныеОснований", ТекстЗапросаВтДанныеОснований(Запрос, ТекстыЗапроса));
		СинонимТаблицыДокумента = "ДанныеДокумента";
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	КомандаПечати.Порядок = 1;
	
	// Счет-фактура (в валюте)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактураВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (в валюте)'");
	КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
	КомандаПечати.Порядок = 2;
	
	// Универсальный передаточный документ (УПД)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "УПД";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 3;
	
	// Универсальный корректировочный документ (УКД)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "УКД";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный корректировочный документ (УКД)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 4;
	
КонецПроцедуры

// Функция формирует печатную форму Счета-фактуры
//
Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка                  КАК Ссылка,
	|	ТаблицаОснований.ДокументОснование       КАК ДокументОснование,
	|	ТаблицаОснований.Ссылка.Корректировочный КАК Корректировочный,
	|	ТаблицаОснований.Ссылка.Дата             КАК Дата
	|ПОМЕСТИТЬ СчетаФактурыОснования
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатЗапроса  = Запрос.Выполнить();
	
	МассивОснований = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	
	ПоместитьВременнуюТаблицуДанныхОснований(МенеджерВременныхТаблиц, МассивОснований);
		
	МассивАналитикУчетаПоПартнерам = Новый Массив;
	
	// В подчиненном узле нет всех данных для определения авансов, поэтому заполняем только если главный узел:
	ЗаполнятьПлатежноРасчетныеДокументы = ПланыОбмена.ГлавныйУзел() = Неопределено;
	
	Если ЗаполнятьПлатежноРасчетныеДокументы Тогда
		ПоместитьВременнуюТаблицуЗаполненияПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц);
		МассивАналитикУчетаПоПартнерамПлатежноРасчетныхДокументов = 
			АналитикиУчетаПоПартнерамДляАктуализацииПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивАналитикУчетаПоПартнерам, 
				МассивАналитикУчетаПоПартнерамПлатежноРасчетныхДокументов);
		ОкончаниеПериодаРасчета = КонецРасчетаДляАктуализацииПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц);
	КонецЕсли;
	
	// Актуализировать расчеты для получения сумм по товарам документа-основания
	Если Не ПараметрыПечати.ПечатьВВалюте Тогда
		
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",
			ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
		|
		|ГДЕ
		|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
		|	И РасчетыСКлиентами.Активность
		|";
		
		ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивАналитикУчетаПоПартнерам, 
			ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам"), Истина);
		
		ОкончаниеПериодаРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
				
	КонецЕсли;
	
	Если (ЗаполнятьПлатежноРасчетныеДокументы ИЛИ Не ПараметрыПечати.ПечатьВВалюте)
		И МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
		АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
		АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
		Попытка
			РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета, АналитикиРасчета);
		Исключение
			ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
			|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;
	КонецЕсли;
	
	Если ЗаполнятьПлатежноРасчетныеДокументы Тогда
		ПоместитьВременнуюТаблицуПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц,
			МассивАналитикУчетаПоПартнерамПлатежноРасчетныхДокументов);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	NULL КАК Ссылка,
		|	NULL КАК СтрокаПлатежноРасчетныеДокументы
		|ПОМЕСТИТЬ ТаблицаПлатежноРасчетныеДокументы";
		Запрос.Выполнить();
	КонецЕсли;
	
	ПараметрыПечати.Вставить("ВыводитьНаборы", Ложь);
	СформироватьВременнуюТаблицуТоваровДляПечати(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати);
	
	ПечататьСчетаФактурыПолученные = ПараметрыПечати.Свойство("МассивСчетФактураПолученный");
	Если ПечататьСчетаФактурыПолученные Тогда
		Запрос.УстановитьПараметр("МассивСчетФактураПолученный", ПараметрыПечати.МассивСчетФактураПолученный);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры(ПараметрыПечати)
		+ ТекстЗапросаИсходныхДокументовДляПечатиСчетаФактуры()
		+ ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры(ПараметрыПечати);
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("ПредставлениеСчетФактураПосредника", НСтр("ru='счет-фактура посредника'"));
	
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	МассивОперацийПередачаНаКомиссию = Новый Массив;
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	Запрос.УстановитьПараметр("ХозяйственныеОперацииПередачаНаКомиссию", МассивОперацийПередачаНаКомиссию);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	КоличествоРезультатов     = МассивРезультатов.Количество();
	РезультатПоШапке          = МассивРезультатов[КоличествоРезультатов - 3];
	РезультатПоИсходнымДанным = МассивРезультатов[КоличествоРезультатов - 2];
	РезультатПоТабличнойЧасти = МассивРезультатов[КоличествоРезультатов - 1];
	
	СтруктураДанныхДляПечати  = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоИсходнымДанным",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		РезультатПоИсходнымДанным);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыУПД(Знач ПараметрыПечати, МассивОбъектов) Экспорт
	
	ПараметрыПечати.Вставить("ДополнитьДаннымиУПД", Истина);
	ПараметрыПечати.Вставить("ПечатьВВалюте", Ложь);
	Возврат ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов);
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыУКД(Знач ПараметрыПечати, МассивОбъектов) Экспорт
	
	Возврат ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов);
	
КонецФункции

// Определяет счета-фактуры выданные для печати по переданным документам-основаниям.
// 
// Параметры:
//	МассивОбъектов - Массив - Документ-основания, для которых необходимо найти счета-фактуры
//	Корректировочный - Булево - Отбор счетов-фактуры по признаку "Корректировочный".
//	ПечатьВВалюте - Булево - Признак печати счетов-фактуры в валюте.
//
// Возвращаемое значение:
//	Структура - структура со следующими свойствами:
//	* СчетаФактурыНаПечать - Массив - Найденные счета-фактуры для печати.
//	* ТаблицаОшибок - ТаблицаЗначений - Документы-основания, по которым счет-фактура не может быть напечатан.
//
Функция ПолучитьСчетаФактурыНаПечать(МассивОбъектов, Корректировочный = Ложь, ПечатьВВалюте = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "";
	ПервыйТип    = Истина;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		ИмяОбъекта = Сред(СтруктураОбъектов.Ключ, 10);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ДокументОснование_" + ИмяОбъекта, СтруктураОбъектов.Значение);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА %ТекстУсловияТребуется% ТОГДА
		|			ЛОЖЬ
		|	ИНАЧЕ
		|		ИСТИНА
		|	КОНЕЦ КАК НеТребуетсяСчетФактура,
		|	ВЫБОР
		|		КОГДА &ПечатьВВалюте И ДанныеДокумента.Валюта = &ВалютаРегламентированногоУчета ТОГДА
		|			ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК НеТребуетсяПечатьВВалюте
		|		
		|//ОператорПОМЕСТИТЬ
		|ИЗ
		|	Документ.%ИмяОбъекта% КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка В (&ДокументОснование_%ИмяОбъекта%)";
		
		МенеджерОбъекта = Документы[ИмяОбъекта];
		ТекстУсловияТребуется = МенеджерОбъекта.ТекстУсловияТребуетсяСчетФактура();
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстУсловияТребуется%", ТекстУсловияТребуется);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяОбъекта%", ИмяОбъекта);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаОснований", ""));
		
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка) КАК СчетФактура,
	|	ТаблицаОснований.Ссылка                 КАК ДокументОснование,
	|	МАКСИМУМ(СчетаФактуры.НомерИсправления) КАК НомерИсправления
	|
	|ПОМЕСТИТЬ НомераИсправлений
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетаФактурыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетаФактуры
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ИсправленныйСчетФактура
	|			ПО СчетаФактуры.СчетФактураОснование = ИсправленныйСчетФактура.Ссылка
	|				И СчетаФактуры.Исправление
	|		ПО СчетаФактурыОснования.Ссылка = СчетаФактуры.Ссылка
	|			И СчетаФактуры.Проведен
	|			И НЕ СчетаФактуры.ПометкаУдаления
	|			//УсловиеКорректировочный
	|	ПО ТаблицаОснований.Ссылка = СчетаФактурыОснования.ДокументОснование
	|		И НЕ ТаблицаОснований.НеТребуетсяСчетФактура
	|		И НЕ ТаблицаОснований.НеТребуетсяПечатьВВалюте
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка),
	|	ТаблицаОснований.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыОснования.ДокументОснование КАК Ссылка
	|
	|ПОМЕСТИТЬ ОснованияСоСчетФактурой
	|ИЗ
	|	НомераИсправлений КАК СчетаФактурыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураВыданный.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НомераИсправлений КАК НомераИсправлений
	|	ПО
	|		НомераИсправлений.НомерИсправления = СчетФактураВыданный.НомерИсправления
	|		И НомераИсправлений.СчетФактура    = ВЫБОР КОГДА СчетФактураВыданный.Исправление ТОГДА
	|		                                         СчетФактураВыданный.СчетФактураОснование
	|		                                     ИНАЧЕ
	|		                                         СчетФактураВыданный.Ссылка
	|		                                     КОНЕЦ
	|		И СчетФактураВыданный.Проведен
	|		И НЕ СчетФактураВыданный.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка                   КАК ДокументОснование,
	|	ТаблицаОснований.НеТребуетсяСчетФактура   КАК НеТребуетсяСчетФактура,
	|	ТаблицаОснований.НеТребуетсяПечатьВВалюте КАК НеТребуетсяПечатьВВалюте,
	|	ВЫБОР
	|		КОГДА ОснованияСоСчетФактурой.Ссылка ЕСТЬ NULL ТОГДА
	|			ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                     КАК НеВыставленСчетФактура
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ОснованияСоСчетФактурой КАК ОснованияСоСчетФактурой
	|	ПО ТаблицаОснований.Ссылка = ОснованияСоСчетФактурой.Ссылка";
	
	Запрос.УстановитьПараметр("ПечатьВВалюте", ПечатьВВалюте);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",
		ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Если Корректировочный Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеКорректировочный",
		"И СчетаФактуры.Корректировочный");
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	СчетаФактурыНаПечать = РезультатЗапроса[3].Выгрузить().ВыгрузитьКолонку("СчетФактура");
	ТаблицаОшибок        = РезультатЗапроса[4].Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("СчетаФактурыНаПечать", СчетаФактурыНаПечать);
	Структура.Вставить("ТаблицаОшибок",        ТаблицаОшибок);
	
	Возврат Структура;
	
КонецФункции

Процедура ПоместитьВременнуюТаблицуДанныхОснований(МенеджерВременныхТаблиц, МассивОснований)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
	
	ТекстЗапроса           = "";
	ТекстОтветственныеЛица = "";
	ПервыйТип              = Истина;
	
	Для Каждого ТипОснования Из ТипыОснований Цикл
		
		ОбъектыТипа = ТипОснования.Значение;
		ИмяОбъекта  = Сред(ТипОснования.Ключ, 10);
		
		Запрос.Параметры.Вставить("ДокументОснование_" + ИмяОбъекта, ОбъектыТипа);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		Если Не ПустаяСтрока(ТекстОтветственныеЛица) Тогда
			ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		МенеджерОбъекта = Документы[ИмяОбъекта];
		ТекстЗапроса = ТекстЗапроса +
			МенеджерОбъекта.ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура();
		
		ИмяВременнойТаблицы = ИмяОбъекта + "ОтветственныеЛица";
		
		ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
			ОбъектыТипа, МенеджерВременныхТаблиц, , ,
			ИмяВременнойТаблицы);
			
		ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                       КАК Ссылка,
		|	Таблица.РуководительНаименование     КАК РуководительНаименование,
		|	Таблица.РуководительДолжность        КАК РуководительДолжность,
		|	Таблица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтерНаименование
		|//ОператорПОМЕСТИТЬ
		|ИЗ
		|	" + ИмяВременнойТаблицы + " КАК Таблица";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаДанныхДокументов", ""));
		ТекстОтветственныеЛица = СтрЗаменить(ТекстОтветственныеЛица,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаОтветственныеЛица", ""));
			
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.Текст = ТекстЗапроса + ТекстОтветственныеЛица;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПоместитьВременнуюТаблицуЗаполненияПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураВыданныйДокументыОснования.Ссылка,
	|	СчетФактураВыданныйДокументыОснования.Ссылка.Организация КАК Организация,
	|	СчетФактураВыданныйДокументыОснования.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ТаблицаЗаполненияПлатежноРасчетныхДокументов
	|ИЗ
	|	СчетаФактурыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ПлатежноРасчетныеДокументы КАК СчетФактураВыданныйПлатежноРасчетныеДокументы
	|		ПО СчетФактураВыданныйДокументыОснования.Ссылка = СчетФактураВыданныйПлатежноРасчетныеДокументы.Ссылка
	|ГДЕ
	|	СчетФактураВыданныйПлатежноРасчетныеДокументы.НомерСтроки ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Организация";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПоместитьВременнуюТаблицуПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц, МассивАналитикУчетаПоПартнерам)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаПолученияНомеровИДатПлатежноРасчетныхДокументов();	
	Запрос.УстановитьПараметр("МассивАналитикУчетаПоПартнерам", МассивАналитикУчетаПоПартнерам);
	
	ПлатежноРасчетныеДокументыСводно = Новый ТаблицаЗначений;
	ПлатежноРасчетныеДокументыСводно.Колонки.Добавить("Ссылка",
		Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"));
	ПлатежноРасчетныеДокументыСводно.Колонки.Добавить("СтрокаПлатежноРасчетныеДокументы",
		Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(1000)));
	
	ПлатежноРасчетныеДокументы = Новый ТаблицаЗначений;
	ПлатежноРасчетныеДокументы.Колонки.Добавить("НомерПлатежноРасчетногоДокумента",
		Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(30)));
	ПлатежноРасчетныеДокументы.Колонки.Добавить("ДатаПлатежноРасчетногоДокумента",
		Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	
	ВыборкаСчетФактур = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСчетФактур.Следующий() Цикл
		
		ПлатежноРасчетныеДокументы.Очистить();
		
		ЗаполнитьТаблицуПлатежноРасчетныхДокументовПоВыборке(ПлатежноРасчетныеДокументы, ВыборкаСчетФактур);
		
		НоваяСтрока = ПлатежноРасчетныеДокументыСводно.Добавить();		
		НоваяСтрока.Ссылка = ВыборкаСчетФактур.СчетФактура;
		НоваяСтрока.СтрокаПлатежноРасчетныеДокументы = СтрокаРасчетноПлатежныхДокументов(ПлатежноРасчетныеДокументы);
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.СтрокаПлатежноРасчетныеДокументы
	|ПОМЕСТИТЬ ТаблицаПлатежноРасчетныеДокументы
	|ИЗ
	|	&ПлатежноРасчетныеДокументы КАК Таблица";
	
	Запрос.УстановитьПараметр("ПлатежноРасчетныеДокументы", ПлатежноРасчетныеДокументыСводно); 
	
	Запрос.Выполнить();
		
КонецПроцедуры

Процедура СформироватьВременнуюТаблицуТоваровДляПечати(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
	
	ТекстОбщейТаблицыТовары = "";
	ПервыйТип               = Истина;
	ЕстьНаборы              = Ложь;
	
	Для Каждого ТипОснования Из ТипыОснований Цикл
		
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
		ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = НЕ ПараметрыПечати.ПечатьВВалюте;
		ПараметрыЗаполнения.АктуализироватьРасчеты = Ложь;
		
		ИмяОбъекта = Сред(ТипОснования.Ключ, 10);
		
		Если ИмяОбъекта = "ВозвратТоваровПоставщику"
				Или ИмяОбъекта = "ВыкупВозвратнойТарыКлиентом"
				Или ИмяОбъекта = "ЗаписьКнигиПродаж"
				Или ИмяОбъекта = "ПередачаТоваровМеждуОрганизациями"
				Или ИмяОбъекта = "РеализацияТоваровУслуг" 
				Или ИмяОбъекта = "КорректировкаРеализации" Тогда
			ПараметрыЗаполнения.ВключаяНомераГТД = Истина;
		КонецЕсли;
		
		Если ИмяОбъекта = "КорректировкаРеализации" Тогда
			ПараметрыЗаполнения.ВключаяДоКорректировки = Истина;
		КонецЕсли;
		
		МенеджерОбъекта = Документы[ИмяОбъекта];
		Если ИмяОбъекта = "ОтчетПоКомиссииМеждуОрганизациями" Тогда
			МенеджерОбъекта.ПоместитьВременнуюТаблицуТоваровПоВознаграждению(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
		Иначе
			МенеджерОбъекта.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
		КонецЕсли;
		
		Если ИмяОбъекта = "КорректировкаРеализации"
				Тогда
			МенеджерОбъекта.ПреобразоватьВременнуюТаблицуТоваровДляСчетаФактуры(МенеджерВременныхТаблиц);
		КонецЕсли;
		
		Если Не ПустаяСтрока(ТекстОбщейТаблицыТовары) Тогда
			ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка                                    КАК Ссылка,
		|	ТаблицаДокумента.НомерСтроки                               КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура                              КАК Номенклатура,
		|	ТаблицаДокумента.Характеристика                            КАК Характеристика,
		|	ТаблицаДокумента.Упаковка                                  КАК Упаковка,
		|	ТаблицаДокумента.НомерГТД                                  КАК НомерГТД,
		|//ДанныеТНВЭД
		|	ТаблицаДокумента.Количество                                КАК Количество,
		|	ТаблицаДокумента.КоличествоУпаковок                        КАК КоличествоУпаковок,
		|	ТаблицаДокумента.СуммаБезНДС                               КАК СуммаБезНДС,
		|	ТаблицаДокумента.СтавкаНДС                                 КАК СтавкаНДС,
		|	ТаблицаДокумента.СуммаНДС                                  КАК СуммаНДС,
		|	%Содержание                                                КАК Содержание,
		|//ДанныеНабора
		|//ДанныеКорректировки
		|	ТаблицаДокумента.ЭтоТовар                                  КАК ЭтоТовар,
		|	ТаблицаДокумента.ВернутьМногооборотнуюТару                 КАК ВернутьМногооборотнуюТару
		|//ОператорПОМЕСТИТЬ
		|ИЗ
		|	" + ИмяОбъекта + "ТаблицаТоваров КАК ТаблицаДокумента";
		
		Если ИмяОбъекта = "АктВыполненныхРабот"
				Или ИмяОбъекта = "КорректировкаРеализации"
				Или ИмяОбъекта = "РеализацияУслугПрочихАктивов"
				Или ИмяОбъекта = "ЗаписьКнигиПродаж" Тогда
			ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "%Содержание", "ТаблицаДокумента.Содержание");
		Иначе
			ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "%Содержание", """""");
		КонецЕсли;
		
		Если ИмяОбъекта = "АктВыполненныхРабот" Или ИмяОбъекта = "РеализацияТоваровУслуг" Тогда
			ЕстьНаборы = Истина;
			ТекстЗамены =
			"	ТаблицаДокумента.ВариантКомплектацииНоменклатуры             КАК ВариантКомплектацииНоменклатуры,
			|	ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах   КАК ВариантПредставленияНабораВПечатныхФормах,
			|	ТаблицаДокумента.ВариантРасчетаЦеныНабора                    КАК ВариантРасчетаЦеныНабора,
			|	ТаблицаДокумента.НоменклатураНабора                          КАК НоменклатураНабора,
			|	ТаблицаДокумента.ХарактеристикаНабора                        КАК ХарактеристикаНабора,";
		Иначе
			ТекстЗамены =
			"	НЕОПРЕДЕЛЕНО                                                 КАК ВариантКомплектацииНоменклатуры,
			|	НЕОПРЕДЕЛЕНО                                                 КАК ВариантПредставленияНабораВПечатныхФормах,
			|	НЕОПРЕДЕЛЕНО                                                 КАК ВариантРасчетаЦеныНабора,
			|	&ПустаяНоменклатура                                          КАК НоменклатураНабора,
			|	НЕОПРЕДЕЛЕНО                                                 КАК ХарактеристикаНабора,";
		КонецЕсли;
		ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "//ДанныеНабора", ТекстЗамены);
		
		Если ИмяОбъекта = "КорректировкаРеализации" Тогда
			ТекстЗамены =
			"	ТаблицаДокумента.КоличествоДо                                КАК КоличествоДо,
			|	ТаблицаДокумента.КоличествоУпаковокДо                        КАК КоличествоУпаковокДо,
			|	ТаблицаДокумента.СуммаБезНДСДо                               КАК СуммаБезНДСДо,
			|	ТаблицаДокумента.СуммаНДСДо                                  КАК СуммаНДСДо,
			|	ТаблицаДокумента.РазницаБезНДСУвеличение                     КАК РазницаБезНДСУвеличение,
			|	ТаблицаДокумента.РазницаБезНДСУменьшение                     КАК РазницаБезНДСУменьшение,
			|	ТаблицаДокумента.РазницаНДСУвеличение                        КАК РазницаНДСУвеличение,
			|	ТаблицаДокумента.РазницаНДСУменьшение                        КАК РазницаНДСУменьшение,
			|	ТаблицаДокумента.РазницаСНДСУвеличение                       КАК РазницаСНДСУвеличение,
			|	ТаблицаДокумента.РазницаСНДСУменьшение                       КАК РазницаСНДСУменьшение,";
		Иначе
			ТекстЗамены = 
			"	0                                                            КАК КоличествоДо,
			|	0                                                            КАК КоличествоУпаковокДо,
			|	0                                                            КАК СуммаБезНДСДо,
			|	0                                                            КАК СуммаНДСДо,
			|	0                                                            КАК РазницаБезНДСУвеличение,
			|	0                                                            КАК РазницаБезНДСУменьшение,
			|	0                                                            КАК РазницаНДСУвеличение,
			|	0                                                            КАК РазницаНДСУменьшение,
			|	0                                                            КАК РазницаСНДСУвеличение,
			|	0                                                            КАК РазницаСНДСУменьшение,";
		КонецЕсли;
		ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "//ДанныеКорректировки", ТекстЗамены);
		
		Если ИмяОбъекта = "ЗаписьКнигиПродаж"
			Или ИмяОбъекта = "РеализацияТоваровУслуг" 
			Или ИмяОбъекта = "КорректировкаРеализации" Тогда
			ТекстЗамены = "	ТаблицаДокумента.КодТНВЭД             КАК КодТНВЭД,";
		Иначе
			ТекстЗамены = "	НЕОПРЕДЕЛЕНО                          КАК КодТНВЭД,";
		КонецЕсли;
		ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "//ДанныеТНВЭД", ТекстЗамены);
		
		ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаТоваров", ""));
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстТаблицыНаборов =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                КАК Ссылка,
	|	ТаблицаТоваров.НоменклатураНабора    КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора  КАК ХарактеристикаНабора,
	|	ТаблицаТоваров.СтавкаНДС             КАК СтавкаНДС,
	|	ТаблицаТоваров.КодТНВЭД              КАК КодТНВЭД,
	|	МИНИМУМ(ТаблицаТоваров.НомерСтроки)  КАК НомерСтроки,
	|	СУММА(ТаблицаТоваров.СуммаБезНДС)    КАК СуммаБезНДС,
	|	СУММА(ТаблицаТоваров.СуммаНДС)       КАК СуммаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ДанныеНоменклатуры.Ссылка = ТаблицаТоваров.Номенклатура
	|
	|ГДЕ
	|	ТаблицаТоваров.НоменклатураНабора <> &ПустаяНоменклатура
	|	И (ДанныеНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ НЕ ТаблицаТоваров.ВернутьМногооборотнуюТару)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.КодТНВЭД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                                    КАК Ссылка,
	|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ОсновнаяКомплектующая,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК КоличествоПоУмолчанию,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|
	|ГДЕ
	|	Товары.НоменклатураНабора <> &ПустаяНоменклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Ссылка                                                                                КАК Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	|	ЛОЖЬ КАК ОсновнаяКомплектующая,
	|	NULL КАК СтавкаНДС,
	|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоПоУмолчанию,
	|	0 КАК Количество
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Ссылка ИЗ ТаблицаТоваров КАК Т) КАК Т
	|		ПО ИСТИНА
	|ГДЕ
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ ТаблицаТоваров КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
	|	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
	|	СУММА(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СтавкаНДС
	|			ИНАЧЕ null
	|		КОНЕЦ) КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0 И Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ null
	|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК Количество,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ null
	|		КОНЕЦ) КАК КоэффициентМаксимум,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ null
	|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК КоэффициентМинимум
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	|СГРУППИРОВАТЬ ПО
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры,
	|
	|	ВЫБОР КОГДА ДанныеОснований.ХозяйственнаяОперация В (&ХозяйственныеОперацииПередачаНаКомиссию)
	|			И ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = &ВариантТолькоНабор ТОГДА
	|		&ВариантНаборИКомплектующие
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|	КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	|
	|	ВЫБОР КОГДА ДанныеОснований.ХозяйственнаяОперация В (&ХозяйственныеОперацииПередачаНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = &ВариантТолькоНабор ТОГДА
	|				&ВариантНаборИКомплектующие
	|			ИНАЧЕ
	|				ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|			КОНЕЦ = &ВариантНаборИКомплектующие
	|			И ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям)) ТОГДА
	|
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|	КОНЕЦ КАК ВариантРасчетаЦеныНабора,
	|
	|	Таблица.Ссылка                            КАК Ссылка,
	|	Таблица.НоменклатураНабора                КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора              КАК ХарактеристикаНабора,
	|	Таблица.НомерСтроки                       КАК НомерСтроки,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК КоличествоУпаковок,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
	|	ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.КоэффициентМинимум = ВременнаяТаблицаНаборыДополнительно.КоэффициентМаксимум ТОГДА Истина ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ПолныйНабор,
	|	Таблица.СуммаБезНДС                       КАК СуммаБезНДС,
	|	Таблица.СуммаНДС                          КАК СуммаНДС,
	|	Таблица.КодТНВЭД                          КАК КодТНВЭД,
	|	Таблица.СтавкаНДС                         КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
	|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
	|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеОснований
	|	ПО ДанныеОснований.Ссылка = Таблица.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстРезультирующейТаблицы = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                                    КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки                               КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура                              КАК Номенклатура,
	|	ВЫБОР КОГДА ТаблицаТоваров.Содержание = """" ТОГДА
	|		ДанныеНоменклатуры.НаименованиеПолное
	|	ИНАЧЕ 
	|		ТаблицаТоваров.Содержание
	|	КОНЕЦ                                                    КАК НоменклатураНаименование,
	|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
	|		ДанныеНоменклатуры.Артикул
	|	ИНАЧЕ
	|		ДанныеНоменклатуры.Код
	|	КОНЕЦ                                                    КАК НоменклатураКод,
	|	ТаблицаТоваров.КодТНВЭД                                  КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА ДанныеНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				И ТаблицаТоваров.ВернутьМногооборотнуюТару
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                    КАК ЭтоВозвратнаяТара,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения И ТаблицаТоваров.Номенклатура <> Неопределено
	|			ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
	|	КОНЕЦ                                                    КАК ЕдиницаИзмерения,
	|	ВЫБОР КОГДА ТаблицаТоваров.Содержание = """" ТОГДА
	|		ТаблицаТоваров.Характеристика
	|	ИНАЧЕ 
	|		""""
	|	КОНЕЦ                                                    КАК Характеристика,
	|	ТаблицаТоваров.НомерГТД                                  КАК НомерГТД,
	|	ТаблицаТоваров.СтавкаНДС                                 КАК СтавкаНДС,
	|
	|//РеквизитыТаблицыНаборов
	|
	|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.Количество
	|	ИНАЧЕ
	|		ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ                                                    КАК Количество,
	|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.КоличествоДо
	|	ИНАЧЕ
	|		ТаблицаТоваров.КоличествоУпаковокДо
	|	КОНЕЦ                                                    КАК КоличествоДо,
	|	ВЫБОР КОГДА ТаблицаТоваров.Количество = 0 ТОГДА
	|		0
	|	КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	ИНАЧЕ
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ                                                    КАК Цена,
	|	ВЫБОР КОГДА ТаблицаТоваров.КоличествоДо = 0 ТОГДА
	|		0
	|	КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.СуммаБезНДСДо / ТаблицаТоваров.КоличествоДо
	|	ИНАЧЕ
	|		ТаблицаТоваров.СуммаБезНДСДо / ТаблицаТоваров.КоличествоУпаковокДо
	|	КОНЕЦ                                                    КАК ЦенаДо,
	|	ТаблицаТоваров.СуммаБезНДС                               КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаБезНДСДо                             КАК СуммаБезНДСДо,
	|	ТаблицаТоваров.СуммаНДС                                  КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаНДСДо                                КАК СуммаНДСДо,
	|	ТаблицаТоваров.РазницаБезНДСУвеличение                   КАК РазницаБезНДСУвеличение,
	|	ТаблицаТоваров.РазницаБезНДСУменьшение                   КАК РазницаБезНДСУменьшение,
	|	ТаблицаТоваров.РазницаНДСУвеличение                      КАК РазницаНДСУвеличение,
	|	ТаблицаТоваров.РазницаНДСУменьшение                      КАК РазницаНДСУменьшение,
	|	ТаблицаТоваров.РазницаСНДСУвеличение                     КАК РазницаСНДСУвеличение,
	|	ТаблицаТоваров.РазницаСНДСУменьшение                     КАК РазницаСНДСУменьшение
	|
	|ПОМЕСТИТЬ ТаблицаТоваровДокументов
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|//СоединениеТаблицыНаборов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеУпаковки
	|		ПО НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			И ТаблицаТоваров.Упаковка = ДанныеУпаковки.Ссылка
	|ГДЕ
	|	ТаблицаТоваров.НоменклатураНабора = &ПустаяНоменклатура
	|	ИЛИ (ТаблицаТоваров.НоменклатураНабора <> &ПустаяНоменклатура
	|		И ТаблицаТоваров.ВариантПредставленияНабораВПечатныхФормах В (
	|		&ВариантТолькоКомплектующие, &ВариантНаборИКомплектующие))";
	
	Если ЕстьНаборы Тогда
		
		ТекстРезультирующейТаблицы = СтрЗаменить(ТекстРезультирующейТаблицы, "//РеквизитыТаблицыНаборов",
		"	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|		ВременнаяТаблицаНаборы.НомерСтроки
		|	ИНАЧЕ
		|		ТаблицаТоваров.НомерСтроки
		|	КОНЕЦ                                                    КАК НомерСтрокиНаборы,
		|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
		|	ИНАЧЕ
		|		&ПустойВариантПредставленияНаборов
		|	КОНЕЦ                                                    КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|		ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
		|	ИНАЧЕ
		|		&ПустойВариантРасчетаЦенНаборов
		|	КОНЕЦ                                                    КАК ВариантРасчетаЦеныНабора,
		|	ТаблицаТоваров.НоменклатураНабора                        КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора                      КАК ХарактеристикаНабора,
		|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ                                                    КАК ЭтоКомплектующие,
		|	ЛОЖЬ                                                     КАК ЭтоНабор,
		|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|		ВременнаяТаблицаНаборы.ПолныйНабор
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ                                                    КАК ПолныйНабор,");
		
		ТекстРезультирующейТаблицы = СтрЗаменить(ТекстРезультирующейТаблицы, "//СоединениеТаблицыНаборов",
		"		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
		|		ПО ВременнаяТаблицаНаборы.НоменклатураНабора = ТаблицаТоваров.НоменклатураНабора
		|			И ВременнаяТаблицаНаборы.ХарактеристикаНабора = ТаблицаТоваров.ХарактеристикаНабора
		|			И ВременнаяТаблицаНаборы.Ссылка = ТаблицаТоваров.Ссылка");
		
		ТекстРезультирующейТаблицы = ТекстРезультирующейТаблицы + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|" +
		
		"ВЫБРАТЬ
		|	ВременнаяТаблицаНаборы.Ссылка               КАК Ссылка,
		|	0                                           КАК НомерСтроки,
		|	ВременнаяТаблицаНаборы.НоменклатураНабора   КАК Номенклатура,
		|	ДанныеНоменклатуры.НаименованиеПолное       КАК НоменклатураНаименование,
		|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
		|		ДанныеНоменклатуры.Артикул
		|	ИНАЧЕ
		|		ДанныеНоменклатуры.Код
		|	КОНЕЦ                                       КАК НоменклатураКод,
		|	ВременнаяТаблицаНаборы.КодТНВЭД             КАК КодТНВЭД,
		|	ЛОЖЬ                                        КАК ЭтоВозвратнаяТара,
		|	ДанныеНоменклатуры.ЕдиницаИзмерения         КАК ЕдиницаИзмерения,
		|	ВременнаяТаблицаНаборы.ХарактеристикаНабора КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
		|	ВременнаяТаблицаНаборы.СтавкаНДС            КАК СтавкаНДС,
		|
		|	ВременнаяТаблицаНаборы.НомерСтроки                               КАК НомерСтрокиНаборы,
		|	ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
		|	ВременнаяТаблицаНаборы.НоменклатураНабора                        КАК НоменклатураНабора,
		|	ВременнаяТаблицаНаборы.ХарактеристикаНабора                      КАК ХарактеристикаНабора,
		|	ЛОЖЬ                                                             КАК ЭтоКомплектующие,
		|	ИСТИНА                                                           КАК ЭтоНабор,
		|	ВременнаяТаблицаНаборы.ПолныйНабор                               КАК ПолныйНабор,
		|
		|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
		|		ВременнаяТаблицаНаборы.Количество
		|	ИНАЧЕ
		|		ВременнаяТаблицаНаборы.КоличествоУпаковок
		|	КОНЕЦ                                       КАК Количество,
		|	0                                           КАК КоличествоДо,
		|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
		|		ВременнаяТаблицаНаборы.СуммаБезНДС / ВременнаяТаблицаНаборы.Количество
		|	ИНАЧЕ
		|		ВременнаяТаблицаНаборы.СуммаБезНДС / ВременнаяТаблицаНаборы.КоличествоУпаковок
		|	КОНЕЦ                                       КАК Цена,
		|	0                                           КАК ЦенаДо,
		|	ВременнаяТаблицаНаборы.СуммаБезНДС          КАК СуммаБезНДС,
		|	0                                           КАК СуммаБезНДСДо,
		|	ВременнаяТаблицаНаборы.СуммаНДС             КАК СуммаНДС,
		|	0                                           КАК СуммаНДСДо,
		|	0                                           КАК РазницаБезНДСУвеличение,
		|	0                                           КАК РазницаБезНДСУменьшение,
		|	0                                           КАК РазницаНДСУвеличение,
		|	0                                           КАК РазницаНДСУменьшение,
		|	0                                           КАК РазницаСНДСУвеличение,
		|	0                                           КАК РазницаСНДСУменьшение
		|
		|ИЗ
		|	ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
		|		ПО ВременнаяТаблицаНаборы.НоменклатураНабора = ДанныеНоменклатуры.Ссылка
		|
		|ГДЕ
		|	ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (
		|		&ВариантТолькоНабор, &ВариантНаборИКомплектующие)";
		
	Иначе
		
		ТекстРезультирующейТаблицы = СтрЗаменить(ТекстРезультирующейТаблицы, "//РеквизитыТаблицыНаборов",
		"	ТаблицаТоваров.НомерСтроки          КАК НомерСтрокиНаборы,
		|	&ПустойВариантПредставленияНаборов  КАК ВариантПредставленияНабораВПечатныхФормах,
		|	&ПустойВариантРасчетаЦенНаборов     КАК ВариантРасчетаЦеныНабора,
		|	ТаблицаТоваров.НоменклатураНабора   КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ЛОЖЬ                                КАК ЭтоКомплектующие,
		|	ЛОЖЬ                                КАК ЭтоНабор,
		|	ЛОЖЬ                                КАК ПолныйНабор,");
		
	КонецЕсли;
	
	Запрос.Текст = ТекстОбщейТаблицыТовары +
		?(ЕстьНаборы, ТекстТаблицыНаборов, "") +
		ТекстРезультирующейТаблицы;
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаТоваров.Упаковка",
			?(ИмяОбъекта = "РеализацияУслугПрочихАктивов","","ТаблицаТоваров.Номенклатура")));
	
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	Запрос.УстановитьПараметр("ПустаяНоменклатура", Справочники.Номенклатура.ПустаяСсылка());
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	Запрос.УстановитьПараметр("ВариантТолькоНабор", Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор);
	Запрос.УстановитьПараметр("ВариантТолькоКомплектующие",
		Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие);
	Запрос.УстановитьПараметр("ВариантНаборИКомплектующие",
		Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие);
	Запрос.УстановитьПараметр("ПустойВариантПредставленияНаборов",
		Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойВариантРасчетаЦенНаборов", Перечисления.ВариантыРасчетаЦенНаборов.ПустаяСсылка());
	
	МассивОперацийПередачаНаКомиссию = Новый Массив;
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	Запрос.УстановитьПараметр("ХозяйственныеОперацииПередачаНаКомиссию", МассивОперацийПередачаНаКомиссию);
	
	Запрос.Выполнить();
	
	ПараметрыПечати.ВыводитьНаборы = ЕстьНаборы;
	
КонецПроцедуры

Функция ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры(ПараметрыПечати)
	
	ПечататьСчетаФактурыПолученные = ПараметрыПечати.Свойство("МассивСчетФактураПолученный");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка КАК Ссылка,
	|	МИНИМУМ(СчетаФактурыОснования.ДокументОснование) КАК ДокументОснование
	|ПОМЕСТИТЬ СчетаФактурыОснованияПервые
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактурыОснования.Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка КАК Ссылка,
	|	ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеОснований.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеКонтрагента.СтранаРегистрации КАК СтранаРегистрации,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеОрганизацийПоставщик.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
	|		ДанныеОрганизацийПоставщик.ГоловнаяОрганизация
	|	ИНАЧЕ
	|		СчетФактураВыданный.Организация
	|	КОНЕЦ КАК Организация,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеОрганизацийПокупатель.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
	|		ДанныеОрганизацийПокупатель.ГоловнаяОрганизация
	|	КОГДА ЕСТЬNULL(ДанныеКонтрагента.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
	|		ДанныеКонтрагента.ГоловнойКонтрагент
	|	ИНАЧЕ
	|		СчетФактураВыданный.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеОснований.Грузоотправитель) = ТИП(Справочник.Контрагенты)
	|		И ДанныеОснований.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		ДанныеОснований.Грузоотправитель
	|	КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL ТОГДА
	|		ДанныеПодразделений.РегистрацияВНалоговомОргане
	|	КОГДА ДанныеОснований.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		СчетФактураВыданный.Организация
	|	ИНАЧЕ
	|		ДанныеОснований.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	ВЫБОР КОГДА ДанныеОснований.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		СчетФактураВыданный.Контрагент
	|	ИНАЧЕ
	|		ДанныеОснований.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|
	|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL ТОГДА
	|		ДанныеПодразделений.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения
	|	КОГДА ЕСТЬNULL(ДанныеОрганизацийПоставщик.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
	|		ДанныеОрганизацийПоставщик.ЦифровойИндексОбособленногоПодразделения
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК ЦифровойИндекс,
	|
	|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL ТОГДА
	|		ДанныеПодразделений.РегистрацияВНалоговомОргане.КПП
	|	ИНАЧЕ
	|		ДанныеОрганизацийПоставщик.КПП
	|	КОНЕЦ КАК КПППоставщика,
	|
	|	ВЫБОР КОГДА СчетФактураВыданный.КППКонтрагента ПОДОБНО """" ТОГДА
	|		ВЫБОР КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА """"
	|			  КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.КПП, """")
	|			  ИНАЧЕ """"
	|		КОНЕЦ
	|	ИНАЧЕ
	|		СчетФактураВыданный.КППКонтрагента
	|	КОНЕЦ КАК КПППокупателя,
	|
	|	ВЫБОР КОГДА СчетФактураВыданный.ИННКонтрагента ПОДОБНО """" ТОГДА
	|		ВЫБОР КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА ЕстьNULL(ДанныеКонтрагента.ИНН, """")
	|			  КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.ИНН, """")
	|			  ИНАЧЕ """"
	|		КОНЕЦ
	|	ИНАЧЕ
	|		СчетФактураВыданный.ИННКонтрагента
	|	КОНЕЦ КАК ИННПокупателя,
	|
	|	ДанныеОрганизацийПоставщик.Префикс КАК Префикс,
	|	ДанныеОснований.Комиссионер КАК Комиссионер,
	|	ДанныеВалюты.Ссылка КАК Валюта,
	|	ДанныеВалюты.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеВалюты.Код КАК ВалютаКод,
	|//РеквизитыОснованийДляУПД
	|	ВЫБОР
	|		КОГДА НЕ ДанныеОснований.РасчетыЧерезОтдельногоКонтрагента
	|			ИЛИ СчетФактураВыданный.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ПечататьСчетФактураВыданный
	|
	|ПОМЕСТИТЬ ДанныеОснований
	|ИЗ
	|	СчетаФактурыОснованияПервые КАК СчетаФактурыОснования
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|	ПО СчетФактураВыданный.Ссылка = СчетаФактурыОснования.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеОснований
	|	ПО СчетаФактурыОснования.ДокументОснование = ДанныеОснований.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПоставщик
	|	ПО СчетФактураВыданный.Организация = ДанныеОрганизацийПоставщик.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
	|	ПО ДанныеПодразделений.Организация = СчетФактураВыданный.Организация
	|		И ДанныеПодразделений.Подразделение = ЕСТЬNULL(ДанныеОснований.Склад.Подразделение, ДанныеОснований.Подразделение)
	|		И ДанныеПодразделений.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПокупатель
	|	ПО ДанныеОрганизацийПокупатель.Ссылка = СчетФактураВыданный.Контрагент
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
	|	ПО ДанныеКонтрагента.Ссылка = СчетФактураВыданный.Контрагент
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК ДанныеВалюты
	|	ПО ДанныеОснований.Валюта = ДанныеВалюты.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьУслуги,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьТовары
	|ПОМЕСТИТЬ
	|	НоменклатураДокументов
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаТоваров.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактурыОснования.Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Если ПечататьСчетаФактурыПолученные Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
		|	ТаблицаОснований.Ссылка            КАК Ссылка
		|
		|ПОМЕСТИТЬ СчетаФактурыПолученныеОснования
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
		|ГДЕ
		|	ТаблицаОснований.Ссылка В (&МассивСчетФактураПолученный)
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка КАК Ссылка,
		|	МИНИМУМ(СчетаФактурыОснования.ДокументОснование) КАК ДокументОснование
		|ПОМЕСТИТЬ СчетаФактурыПолученныеОснованияПервые
		|ИЗ
		|	СчетаФактурыПолученныеОснования КАК СчетаФактурыОснования
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетаФактурыОснования.Ссылка
		|
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка КАК Ссылка,
		|	ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеКонтрагента.СтранаРегистрации КАК СтранаРегистрации,
		|
		|	ВЫБОР КОГДА ДанныеКонтрагента.ОбособленноеПодразделение ТОГДА
		|		ДанныеКонтрагента.ГоловнойКонтрагент
		|	ИНАЧЕ
		|		ДанныеКонтрагента.Ссылка
		|	КОНЕЦ КАК Организация,
		|
		|	ВЫБОР КОГДА ДанныеОрганизации.ОбособленноеПодразделение ТОГДА
		|		ДанныеОрганизации.ГоловнаяОрганизация
		|	ИНАЧЕ
		|		ДанныеОрганизации.Ссылка
		|	КОНЕЦ КАК Контрагент,
		|
		|	ВЫБОР КОГДА ДанныеОснований.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
		|		СчетФактураПолученный.Контрагент
		|	ИНАЧЕ
		|		ДанныеОснований.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|
		|	ВЫБОР КОГДА ДанныеОснований.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
		|		СчетФактураПолученный.Организация
		|	ИНАЧЕ
		|		ДанныеОснований.Грузополучатель
		|	КОНЕЦ КАК Грузополучатель,
		|
		|	ДанныеКонтрагента.КПП КАК КПППоставщика,
		|	ДанныеОрганизации.КПП КАК КПППокупателя,
		|	ДанныеОрганизации.ИНН КАК ИННПокупателя,
		|
		|	ВЫБОР КОГДА ДанныеОснований.Комиссионер = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
		|		ДанныеОснований.Организация.Префикс
		|	ИНАЧЕ
		|		ДанныеОснований.Комиссионер.Префикс
		|	КОНЕЦ КАК Префикс,
		|	
		|	ДанныеОснований.Комиссионер КАК Комиссионер,
		|	ДанныеВалюты.Ссылка КАК Валюта,
		|	ДанныеВалюты.НаименованиеПолное КАК ВалютаНаименованиеПолное,
		|	ДанныеВалюты.Код КАК ВалютаКод
		|
		|ПОМЕСТИТЬ ДанныеОснованийСчетФактураПолученный
		|ИЗ
		|	СчетаФактурыПолученныеОснованияПервые КАК СчетаФактурыОснования
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
		|	ПО СчетаФактурыОснования.Ссылка = СчетФактураПолученный.Ссылка
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеОснований
		|	ПО СчетаФактурыОснования.ДокументОснование = ДанныеОснований.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизации
		|	ПО СчетФактураПолученный.Организация = ДанныеОрганизации.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
		|	ПО СчетФактураПолученный.Контрагент = ДанныеКонтрагента.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК ДанныеВалюты
		|	ПО ДанныеОснований.Валюта = ДанныеВалюты.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка КАК Ссылка,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ЕстьУслуги,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ТаблицаТоваров.ЭтоТовар
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ЕстьТовары
		|ПОМЕСТИТЬ
		|	НоменклатураДокументовПолученные
		|ИЗ
		|	СчетаФактурыПолученныеОснования КАК СчетаФактурыОснования
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
		|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаТоваров.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетаФактурыОснования.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                КАК Ссылка,
	|	ДанныеДокумента.ИдентификаторГосКонтракта             КАК ИдентификаторГосКонтракта,
	|	ДанныеОснований.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ДанныеОснований.СтранаРегистрации                     КАК СтранаРегистрации,
	|	
	|	&ПредставлениеСчетФактура                             КАК ПредставлениеДокумента,
	|	ДанныеДокумента.Номер                                 КАК Номер,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ЕСТЬNULL(ДанныеДокумента.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))
	|	ИНАЧЕ 
	|		ДанныеДокумента.Дата
	|	КОНЕЦ                                                 КАК Дата,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ДанныеДокумента.НомерИсправления 
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                 КАК НомерИсправления,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                 КАК ДатаИсправления,
	|	ДанныеДокумента.Исправление                           КАК Исправление,
	|	ДанныеДокумента.Корректировочный                      КАК КорректировочныйСчетФактура,
	|	ЕСТЬNULL(ТаблицаПлатежноРасчетныеДокументы.СтрокаПлатежноРасчетныеДокументы,
	|		ДанныеДокумента.СтрокаПлатежноРасчетныеДокументы) КАК СтрокаПоДокументу,
	|	ДанныеДокумента.Валюта                                КАК ВалютаСчетаФактуры,
	|	ДанныеОснований.Контрагент                            КАК Контрагент,
	|	ДанныеОснований.КПППокупателя                         КАК КПППокупателя,
	|	ДанныеОснований.ИННПокупателя                         КАК ИННПокупателя,
	|	ДанныеОснований.Грузополучатель                       КАК Грузополучатель,
	|	ДанныеОснований.Организация                           КАК Организация,
	|	ДанныеОснований.НалогообложениеНДС                    КАК НалогообложениеНДС,
	|	ДанныеОснований.КПППоставщика                         КАК КПППоставщика,
	|	ДанныеОснований.Грузоотправитель                      КАК Грузоотправитель,
	|	ДанныеОснований.Префикс                               КАК Префикс,
	|	ДанныеОснований.ЦифровойИндекс                        КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование     КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность        КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ДанныеОснований.Валюта                                КАК Валюта,
	|	ДанныеОснований.ВалютаНаименованиеПолное              КАК ВалютаНаименованиеПолное,
	|	ДанныеОснований.ВалютаКод                             КАК ВалютаКод,
	|	//РеквизитыОснованийДляУПД
	|	//ДанныеУПДВыданного
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                 КАК ТолькоУслуги
	|ИЗ
	|	СчетаФактурыОснованияПервые КАК СчетаФактурыОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ДанныеДокумента
	|	ПО СчетаФактурыОснования.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОснований КАК ДанныеОснований
	|	ПО СчетаФактурыОснования.Ссылка = ДанныеОснований.Ссылка
	|		И ДанныеОснований.ПечататьСчетФактураВыданный
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО СчетаФактурыОснования.Ссылка = НоменклатураДокументов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаОтветственныеЛица.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПлатежноРасчетныеДокументы КАК ТаблицаПлатежноРасчетныеДокументы
	|	ПО СчетаФактурыОснования.Ссылка = ТаблицаПлатежноРасчетныеДокументы.Ссылка";
	
	Если ПечататьСчетаФактурыПолученные Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|" +
		
		"ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка                                КАК Ссылка,
		|	НЕОПРЕДЕЛЕНО                                          КАК ИдентификаторГосКонтракта,
		|	ДанныеОснований.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
		|	ДанныеОснований.СтранаРегистрации                     КАК СтранаРегистрации,
		|	&ПредставлениеСчетФактураПосредника                   КАК ПредставлениеДокумента,
		|	ДанныеДокумента.Номер                                 КАК Номер,
		|	ДанныеДокумента.ДатаСоставления                       КАК Дата,
		|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
		|		ДанныеДокумента.НомерИсправления
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                                 КАК НомерИсправления,
		|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
		|		ДанныеДокумента.ДатаИсправления
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                                 КАК ДатаИсправления,
		|	ДанныеДокумента.Исправление                           КАК Исправление,
		|	ЛОЖЬ                                                  КАК КорректировочныйСчетФактура,
		|	""""                                                  КАК СтрокаПоДокументу,
		|	ДанныеДокумента.Валюта                                КАК ВалютаСчетаФактуры,
		|	ДанныеОснований.Контрагент                            КАК Контрагент,
		|	ДанныеОснований.КПППокупателя                         КАК КПППокупателя,
		|	ДанныеОснований.ИННПокупателя                         КАК ИННПокупателя,
		|	ДанныеОснований.Грузополучатель                       КАК Грузополучатель,
		|	ДанныеОснований.Организация                           КАК Организация,
		|	НЕОПРЕДЕЛЕНО                                          КАК НалогообложениеНДС,
		|	ДанныеОснований.КПППоставщика                         КАК КПППоставщика,
		|	ДанныеОснований.Грузоотправитель                      КАК Грузоотправитель,
		|	ДанныеОснований.Префикс                               КАК Префикс,
		|	0                                                     КАК ИндексПодразделения,
		|	""""                                                  КАК Руководитель,
		|	""""                                                  КАК ДолжностьРуководителя,
		|	""""                                                  КАК ГлавныйБухгалтер,
		|	ДанныеОснований.Валюта                                КАК Валюта,
		|	ДанныеОснований.ВалютаНаименованиеПолное              КАК ВалютаНаименованиеПолное,
		|	ДанныеОснований.ВалютаКод                             КАК ВалютаКод,
		|	//ДанныеУПДПолученного
		|	ВЫБОР
		|		КОГДА НоменклатураДокументов.ЕстьУслуги
		|				И НЕ НоменклатураДокументов.ЕстьТовары
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                 КАК ТолькоУслуги
		|
		|ИЗ
		|	СчетаФактурыПолученныеОснованияПервые КАК СчетаФактурыОснования
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК ДанныеДокумента
		|	ПО СчетаФактурыОснования.Ссылка = ДанныеДокумента.Ссылка
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОснованийСчетФактураПолученный КАК ДанныеОснований
		|	ПО СчетаФактурыОснования.Ссылка = ДанныеОснований.Ссылка
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураДокументовПолученные КАК НоменклатураДокументов
		|	ПО СчетаФактурыОснования.Ссылка = НоменклатураДокументов.Ссылка";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|";
	
	Если ПараметрыПечати.Свойство("ДополнитьДаннымиУПД") И ПараметрыПечати.ДополнитьДаннымиУПД Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//РеквизитыОснованийДляУПД",
		"	ДанныеОснований.Основание           КАК Основание,
		|	ДанныеОснований.ОснованиеДата       КАК ОснованиеДата,
		|	ДанныеОснований.ОснованиеНомер      КАК ОснованиеНомер,
		|	ДанныеОснований.ДоверенностьНомер   КАК ДоверенностьНомер,
		|	ДанныеОснований.ДоверенностьДата    КАК ДоверенностьДата,
		|	ДанныеОснований.ДоверенностьВыдана  КАК ДоверенностьВыдана,
		|	ДанныеОснований.ДоверенностьЛицо    КАК ДоверенностьЛицо,
		|	ДанныеОснований.Кладовщик           КАК Кладовщик,
		|	ДанныеОснований.ДолжностьКладовщика КАК ДолжностьКладовщика,");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеУПДВыданного",
		"	ИСТИНА                              КАК ВыводитьКодНоменклатуры,
		|	НЕ ДанныеДокумента.Корректировочный КАК ПечатьНеТребуется,
		|	1                                   КАК СтатусУПД,");

		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеУПДПолученного",
		"	НЕОПРЕДЕЛЕНО                        КАК Основание,
		|	НЕОПРЕДЕЛЕНО                        КАК ОснованиеДата,
		|	НЕОПРЕДЕЛЕНО                        КАК ОснованиеНомер,
		|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьНомер,
		|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьДата,
		|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьВыдана,
		|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьЛицо,
		|	НЕОПРЕДЕЛЕНО                        КАК Кладовщик,
		|	НЕОПРЕДЕЛЕНО                        КАК ДолжностьКладовщика,
		|	ЛОЖЬ                                КАК ВыводитьКодНоменклатуры,
		|	ЛОЖЬ                                КАК ПечатьНеТребуется,
		|	1                                   КАК СтатусУПД,");
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры(ПараметрыПечати)
	
	ПечататьСчетаФактурыПолученные = ПараметрыПечати.Свойство("МассивСчетФактураПолученный");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка                                 КАК Ссылка,
	|	МИНИМУМ(ТаблицаДокумента.НомерСтроки)                        КАК НомерСтроки,
	
	|	ТаблицаДокумента.Номенклатура                                КАК Номенклатура,
	|	ТаблицаДокумента.НоменклатураНаименование                    КАК НоменклатураНаименование,
	|	ТаблицаДокумента.НоменклатураКод                             КАК НоменклатураКод,
	|	ТаблицаДокумента.КодТНВЭД                                    КАК КодТНВЭД,
	|	ТаблицаДокумента.ЕдиницаИзмерения                            КАК ЕдиницаИзмерения,
	|	ДанныеЕдиницыИзмерения.Представление                         КАК ЕдиницаИзмеренияНаименование,
	|	ДанныеЕдиницыИзмерения.Код                                   КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(ДанныеХарактеристики.НаименованиеПолное, """")      КАК ХарактеристикаНаименование,
	|	ВЫБОР КОГДА ТаблицаДокумента.НомерГТД.РегистрационныйНомер = """" 
	|		ТОГДА ТаблицаДокумента.НомерГТД
	|	ИНАЧЕ ТаблицаДокумента.НомерГТД.РегистрационныйНомер КОНЕЦ   КАК НомерГТД,
	|	ДанныеСтраныПросхождения.Ссылка                              КАК СтранаПроисхождения,
	|	ДанныеСтраныПросхождения.Код                                 КАК СтранаПроисхожденияКод,
	|	СУММА(ТаблицаДокумента.Количество)                           КАК Количество,
	|	ТаблицаДокумента.Цена                                        КАК Цена,
	|	СУММА(ТаблицаДокумента.СуммаБезНДС)                          КАК СуммаБезНДС,
	|	СУММА(ТаблицаДокумента.СуммаНДС)                             КАК СуммаНДС,
	|	СУММА(ТаблицаДокумента.СуммаБезНДС
	|		+ ТаблицаДокумента.СуммаНДС)                             КАК СуммаСНДС,
	|	ТаблицаДокумента.СтавкаНДС                                   КАК СтавкаНДС,
	|
	|	СУММА(ТаблицаДокумента.КоличествоДо)                         КАК КоличествоДо,
	|	ТаблицаДокумента.ЦенаДо                                      КАК ЦенаДо,
	|	СУММА(ТаблицаДокумента.СуммаБезНДСДо)                        КАК СуммаБезНДСДо,
	|	СУММА(ТаблицаДокумента.РазницаБезНДСУвеличение)              КАК РазницаБезНДСУвеличение,
	|	СУММА(ТаблицаДокумента.РазницаБезНДСУменьшение)              КАК РазницаБезНДСУменьшение,
	|	СУММА(ТаблицаДокумента.СуммаНДСДо)                           КАК СуммаНДСДо,
	|	СУММА(ТаблицаДокумента.РазницаНДСУвеличение)                 КАК РазницаНДСУвеличение,
	|	СУММА(ТаблицаДокумента.РазницаНДСУменьшение)                 КАК РазницаНДСУменьшение,
	|	СУММА(ТаблицаДокумента.СуммаБезНДСДо
	|		+ ТаблицаДокумента.СуммаНДСДо)                           КАК СуммаСНДСДо,
	|	СУММА(ТаблицаДокумента.РазницаСНДСУвеличение)                КАК РазницаСНДСУвеличение,
	|	СУММА(ТаблицаДокумента.РазницаСНДСУменьшение)                КАК РазницаСНДСУменьшение,
	|
	|	//ДанныеНаборов
	|
	|	ЛОЖЬ                                                         КАК ЭтоВозвратнаяТара
	|
	|ИЗ ТаблицаТоваровДокументов КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыОснования КАК СчетаФактурыОснования
	|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|	ПО ТаблицаДокумента.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ДанныеХарактеристики
	|	ПО ТаблицаДокумента.Характеристика = ДанныеХарактеристики.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныПросхождения
	|	ПО ТаблицаДокумента.НомерГТД.СтранаПроисхождения = ДанныеСтраныПросхождения.Ссылка
	|
	|ГДЕ
	|	НЕ ТаблицаДокумента.ЭтоВозвратнаяТара
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактурыОснования.Ссылка,
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.НоменклатураНаименование,
	|	ТаблицаДокумента.НоменклатураКод,
	|	ТаблицаДокумента.КодТНВЭД,
	|	ТаблицаДокумента.ЕдиницаИзмерения,
	|	ДанныеЕдиницыИзмерения.Представление,
	|	ДанныеЕдиницыИзмерения.Код,
	|	ТаблицаДокумента.Характеристика,
	|	ДанныеХарактеристики.НаименованиеПолное,
	|	ВЫБОР КОГДА ТаблицаДокумента.НомерГТД.РегистрационныйНомер = """" ТОГДА ТаблицаДокумента.НомерГТД ИНАЧЕ ТаблицаДокумента.НомерГТД.РегистрационныйНомер КОНЕЦ,
	|	ДанныеСтраныПросхождения.Ссылка,
	|	ТаблицаДокумента.Цена,
	|	ТаблицаДокумента.ЦенаДо,
	|	//ГруппировкаНаборов
	|	ТаблицаДокумента.СтавкаНДС";
	
	Если ПараметрыПечати.ВыводитьНаборы Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеНаборов",
		"МИНИМУМ(ТаблицаДокумента.НомерСтрокиНаборы)                     КАК НомерСтрокиНаборы,
		|	ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах   КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ТаблицаДокумента.ВариантРасчетаЦеныНабора                    КАК ВариантРасчетаЦеныНабора,
		|	ТаблицаДокумента.НоменклатураНабора                          КАК НоменклатураНабора,
		|	ТаблицаДокумента.ХарактеристикаНабора                        КАК ХарактеристикаНабора,
		|	ТаблицаДокумента.ЭтоКомплектующие                            КАК ЭтоКомплектующие,
		|	ТаблицаДокумента.ЭтоНабор                                    КАК ЭтоНабор,
		|	ТаблицаДокумента.ПолныйНабор                                 КАК ПолныйНабор,");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ГруппировкаНаборов",
		"ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах,
		|	ТаблицаДокумента.ВариантРасчетаЦеныНабора,
		|	ТаблицаДокумента.НоменклатураНабора,
		|	ТаблицаДокумента.ХарактеристикаНабора,
		|	ТаблицаДокумента.ЭтоКомплектующие,
		|	ТаблицаДокумента.ЭтоНабор,
		|	ТаблицаДокумента.ПолныйНабор,");
		
	КонецЕсли;
	
	Если ПечататьСчетаФактурыПолученные Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|" +
		СтрЗаменить(ТекстЗапроса, "СчетаФактурыОснования", "СчетаФактурыПолученныеОснования");
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	//ПорядокНаборов
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;";
	
	Если ПараметрыПечати.ВыводитьНаборы Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПорядокНаборов",
		"НомерСтрокиНаборы,
		|	НоменклатураНабора,
		|	ХарактеристикаНабора,
		|	ЭтоНабор УБЫВ,");
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаИсходныхДокументовДляПечатиСчетаФактуры()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка                        КАК Ссылка,
	|	ТаблицаОснований.ДокументОснование                  КАК ДокументОснование,
	|	ТаблицаОснований.ИсходныйДокумент                   КАК ИсходныйДокумент,
	|	ТаблицаОснований.НомерИсходногоДокумента            КАК НомерСчетаФактуры,
	|	ТаблицаОснований.ДатаИсходногоДокумента             КАК ДатаСчетаФактуры,
	|	ТаблицаОснований.НомерИсправленияИсходногоДокумента КАК НомерИсправленияСчетаФактуры,
	|	ТаблицаОснований.ДатаИсправленияИсходногоДокумента  КАК ДатаИсправленияСчетаФактуры
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ДанныеДокумента
	|	ПО СчетаФактурыОснования.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|	ПО СчетаФактурыОснования.Ссылка = ТаблицаОснований.Ссылка
	|		И СчетаФактурыОснования.ДокументОснование = ТаблицаОснований.ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ИсходныйДокумент
	|ИТОГИ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#Область Прочее

Функция ПараметрыОбновленияРеквизитовСчетаФактуры(Основание, РеквизитыСчетаФактуры)
	
	СтруктураОбновления = Новый Структура("НеобходимоОбновить, ИзмененаОрганизация", Ложь, Ложь);
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ПроверяемыеРеквизиты = Новый Структура;
	ПроверяемыеРеквизиты.Вставить("Организация");
	ПроверяемыеРеквизиты.Вставить("Контрагент");
	ПроверяемыеРеквизиты.Вставить("Валюта");
	
	ЗаполнитьЗначенияСвойств(ПроверяемыеРеквизиты, Основание);
	
	Если (ТипЗнч(Основание) = Тип("ДокументОбъект.ВозвратТоваровМеждуОрганизациями")
			Или ТипЗнч(Основание) = Тип("ДокументОбъект.ПередачаТоваровМеждуОрганизациями"))
			И Не Основание.РасчетыЧерезОтдельногоКонтрагента Тогда
		
		ПроверяемыеРеквизиты.Контрагент = Основание.ОрганизацияПолучатель;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументОбъект.ОтчетПоКомиссииМеждуОрганизациями") Тогда
			
		ПроверяемыеРеквизиты.Организация = Основание.Комиссионер;
		Если Не Основание.РасчетыЧерезОтдельногоКонтрагента Тогда
			ПроверяемыеРеквизиты.Контрагент = Основание.Организация;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьРеквизиты = Ложь;
	
	Если ПроверяемыеРеквизиты.Организация <> Неопределено
			И РеквизитыСчетаФактуры.Организация <> ПроверяемыеРеквизиты.Организация Тогда
		СтруктураОбновления.ИзмененаОрганизация = Истина;
		ОбновитьРеквизиты = Истина;
	КонецЕсли;
		
	Если ПроверяемыеРеквизиты.Валюта <> Неопределено И РеквизитыСчетаФактуры.Валюта <> ВалютаРегламентированногоУчета
			И РеквизитыСчетаФактуры.Валюта <> ПроверяемыеРеквизиты.Валюта Тогда
		ОбновитьРеквизиты = Истина;
	КонецЕсли;
		
	Если ПроверяемыеРеквизиты.Контрагент <> Неопределено
			И РеквизитыСчетаФактуры.Контрагент <> ПроверяемыеРеквизиты.Контрагент Тогда
		ОбновитьРеквизиты = Истина;
	КонецЕсли;
	
	СтруктураОбновления.НеобходимоОбновить = ОбновитьРеквизиты;
	
	Возврат СтруктураОбновления;
	
КонецФункции

Функция АналитикиУчетаПоПартнерамДляАктуализацииПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЗаполненияПлатежноРасчетныхДокументов КАК ТаблицаДокументов
	|		ПО Расчеты.Регистратор = ТаблицаДокументов.ДокументОснование
	|			И Расчеты.АналитикаУчетаПоПартнерам.Организация = ТаблицаДокументов.Организация
	|ГДЕ
	|	Расчеты.Активность";
	
	ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
	
КонецФункции

Функция КонецРасчетаДляАктуализацииПлатежноРасчетныхДокументов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(Расчеты.Период), ДАТАВРЕМЯ(1,1,1)) КАК Период
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЗаполненияПлатежноРасчетныхДокументов КАК ТаблицаДокументов
	|		ПО Расчеты.Регистратор = ТаблицаДокументов.ДокументОснование
	|			И Расчеты.АналитикаУчетаПоПартнерам.Организация = ТаблицаДокументов.Организация
	|ГДЕ
	|	Расчеты.Активность
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Расчеты.Период) ЕСТЬ НЕ NULL";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		ТаблицаПериод = Результат.Выгрузить();
		КонецРасчета = КонецМесяца(ТаблицаПериод[0].Период) + 1;
	Иначе
		КонецРасчета = КонецМесяца(ТекущаяДатаСеанса())+1;
	КонецЕсли;
	
	Возврат КонецРасчета;
	
КонецФункции

Функция ТекстЗапросаПолученияНомеровИДатПлатежноРасчетныхДокументов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР 
	|		КОГДА НЕ РасчетыВзаимозачета.РасчетныйДокумент ЕСТЬ NULL 
	|			ТОГДА ЕСТЬNULL(РасчетыВзаимозачета.РасчетныйДокумент,Неопределено)
	|		ИНАЧЕ Расчеты.РасчетныйДокумент 
	|	КОНЕЦ КАК РасчетныйДокумент,
	|	ТаблицаДокументов.Ссылка КАК СчетФактура
	|ПОМЕСТИТЬ ВтТаблицаДокументов
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЗаполненияПлатежноРасчетныхДокументов КАК ТаблицаДокументов
	|		ПО Расчеты.Регистратор = ТаблицаДокументов.ДокументОснование
	|			И (Расчеты.АналитикаУчетаПоПартнерам В (&МассивАналитикУчетаПоПартнерам))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыВзаимозачета
	|		ПО РасчетыВзаимозачета.Регистратор = Расчеты.РасчетныйДокумент
	|			И Расчеты.РасчетныйДокумент ССЫЛКА Документ.ВзаимозачетЗадолженности
	|ГДЕ
	|	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Расчеты.Предоплата > 0
	|	И Расчеты.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ТаблицаДокументов.СчетФактура КАК СчетФактура
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаДокументов КАК ТаблицаДокументов
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокументов.РасчетныйДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	0,
	|	0,
	|	ТаблицаДокументов.СчетФактура
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаДокументов КАК ТаблицаДокументов
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокументов.РасчетныйДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	0,
	|	0,
	|	ТаблицаДокументов.СчетФактура
	|ИЗ
	|	Документ.ОперацияПоПлатежнойКарте КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаДокументов КАК ТаблицаДокументов
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокументов.РасчетныйДокумент
	|ИТОГИ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТаблицаДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаЗаполненияПлатежноРасчетныхДокументов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьТаблицуПлатежноРасчетныхДокументовПоВыборке(ПлатежноРасчетныеДокументы, ДанныеВыборки)
	
	Выборка = ДанныеВыборки.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ПлатежноРасчетныеДокументы.Добавить();
		
		Если ЗначениеЗаполнено(Выборка.НомерВходящегоДокумента) Тогда
			НоваяСтрока.НомерПлатежноРасчетногоДокумента = Выборка.НомерВходящегоДокумента;
		Иначе
			НоваяСтрока.НомерПлатежноРасчетногоДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
				Выборка.Номер,
				Ложь,
				Истина);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ДатаВходящегоДокумента) Тогда
			НоваяСтрока.ДатаПлатежноРасчетногоДокумента = Выборка.ДатаВходящегоДокумента;
		Иначе
			НоваяСтрока.ДатаПлатежноРасчетногоДокумента = Выборка.Дата;
		КонецЕсли;
		
	КонецЦикла;
	ПлатежноРасчетныеДокументы.Свернуть("ДатаПлатежноРасчетногоДокумента, НомерПлатежноРасчетногоДокумента", "");
	ПлатежноРасчетныеДокументы.Сортировать("ДатаПлатежноРасчетногоДокумента Возр, НомерПлатежноРасчетногоДокумента Возр");
		
КонецПроцедуры

Функция ТекстЗапросаВтДанныеОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДанныеОснований";
	
	ТекстЗапроса =  "
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО							КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО							КАК МестоХранения,
	|		ШапкаОснования.Договор					КАК Договор,
	|		ШапкаОснования.Партнер					КАК Партнер
	|	ПОМЕСТИТЬ ВтДанныеОснований
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктВыполненныхРабот КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		ШапкаОснования.Склад					КАК МестоХранения,
	|		ШапкаОснования.Договор					КАК Договор,
	|		ШапкаОснования.Партнер					КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		ШапкаОснования.Склад					КАК МестоХранения,
	|		ШапкаОснования.Договор					КАК Договор,
	|		ШапкаОснования.Партнер					КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО							КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО							КАК МестоХранения,
	|		ШапкаОснования.Договор					КАК Договор,
	|		ШапкаОснования.Партнер					КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыкупВозвратнойТарыКлиентом КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка				 КАК Ссылка,
	|		НЕОПРЕДЕЛЕНО						 КАК НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование	 КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО						 КАК МестоХранения,
	|		НЕОПРЕДЕЛЕНО						 КАК Договор,
	|		ШапкаОснования.Контрагент.Партнер	 КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаписьКнигиПродаж КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка 					КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		ДанныеРеестра.ХозяйственнаяОперация		КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		ШапкаОснования.Склад					КАК МестоХранения,
	|		ШапкаОснования.Договор					КАК Договор,
	|		ШапкаОснования.Партнер					КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК ДанныеРеестра
	|			ПО ДанныеДокумента.ДокументОснование = ДанныеРеестра.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО							КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО							КАК МестоХранения,
	|		ШапкаОснования.Договор					КАК Договор,
	|		ШапкаОснования.Партнер					КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитенту КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО							КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО							КАК МестоХранения,
	|		ШапкаОснования.Договор					КАК Договор,
	|		ШапкаОснования.Партнер					КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		ШапкаОснования.Склад					КАК МестоХранения,
	|		ШапкаОснования.Договор					КАК Договор,
	|		ШапкаОснования.Партнер					КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		ШапкаОснования.Склад					КАК МестоХранения,
	|		ШапкаОснования.Договор					КАК Договор,
	|		ШапкаОснования.Партнер					КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО							КАК МестоХранения,
	|		ШапкаОснования.Договор					КАК Договор,
	|		ШапкаОснования.Партнер					КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрЗапросаНомерНаПечать(Запрос);
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДанныеОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                  КАК Ссылка,
	|	&Период                  КАК ДатаДокументаИБ,
	|	&Номер                   КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&Организация             КАК Организация,
	|	&Контрагент              КАК Контрагент,
	|	&Подразделение           КАК Подразделение,
	|	&Ответственный           КАК Ответственный,
	|	""""                     КАК Комментарий,
	|	&ВалютаСчетаФактуры      КАК Валюта,
	|	СУММА(0)                 КАК Сумма,
	|	НЕОПРЕДЕЛЕНО             КАК Статус,
	|	&Проведен                КАК Проведен,
	|	&ПометкаУдаления         КАК ПометкаУдаления,
	|	&ИнформацияПоИсправлению КАК Дополнительно,
	|	&Период                  КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать           КАК НомерПервичногоДокумента,
	|	ДанныеОснований.ХозяйственнаяОперация 			КАК ХозяйственнаяОперация,
	|	ДанныеОснований.Партнер  						КАК Партнер,
	|	ДанныеОснований.НаправлениеДеятельности 		КАК НаправлениеДеятельности,
	|	ДанныеОснований.МестоХранения 					КАК МестоХранения,
	|	МАКСИМУМ(ДанныеОснований.Договор) 				КАК Договор,
	|	МИНИМУМ(ДанныеОснований.ДополнительнаяЗапись) 	КАК ДополнительнаяЗапись
	|ИЗ
	|(ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК СсылкаНаДокумент,
	|	ВЫБОР
	|		КОГДА ТаблицаОснований.ДокументОснование ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|		ИНАЧЕ ВЫБОР ТИПЗНАЧЕНИЯ(ТаблицаОснований.ДокументОснование)
	|				КОГДА ТИП(Документ.АктВыполненныхРабот)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|				КОГДА ТИП(Документ.ВозвратТоваровПоставщику)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|				КОГДА ТИП(Документ.ВыкупВозвратнойТарыКлиентом)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|				КОГДА ТИП(Документ.ОтчетКомитенту)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту)
	|				КОГДА ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|				ИНАЧЕ
	|					ЕСТЬNULL(ТаблицаХозопераций.ХозяйственнаяОперация, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту))
	|			КОНЕЦ
	|	КОНЕЦ                    КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоДоговоров, 0) = 1
	|			ТОГДА ТаблицаОснований.Договор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ						КАК Договор,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоПартнеров, 0) = 1
	|			ТОГДА ТаблицаОснований.Партнер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК Партнер,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоНаправленийДеятельности, 0) = 1
	|			ТОГДА ТаблицаОснований.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоМестХранения, 0) = 1
	|			ТОГДА ТаблицаОснований.МестоХранения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК МестоХранения,
	|	ЛОЖЬ                     КАК ДополнительнаяЗапись
	|ИЗ
	|	Документ.СчетФактураВыданный КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТекстЗапросаТаблицаДанныхОснований КАК ТаблицаОснований
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОснований.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТекстЗапросаХозяйственныеОперацииОснований КАК ТаблицаХозопераций
	|		ПО ДанныеДокумента.Ссылка = ТаблицаХозопераций.Ссылка
	|		   И ТаблицаОснований.ДокументОснование = ТаблицаХозопераций.ДокументОснование
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка,
	|	ВЫБОР ТИПЗНАЧЕНИЯ(Основания.ДокументОснование)
	|		КОГДА ТИП(Документ.АктВыполненныхРабот)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|		КОГДА ТИП(Документ.ВозвратТоваровПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|		КОГДА ТИП(Документ.ВыкупВозвратнойТарыКлиентом)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|		КОГДА ТИП(Документ.ОтчетКомитенту)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту)
	|		КОГДА ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаХозопераций.ХозяйственнаяОперация, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ						КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КоличествоДоговоров = 1
	|			ТОГДА ДанныеДокумента.Договор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ						КАК Договор,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КоличествоПартнеров = 1
	|			ТОГДА ДанныеДокумента.Партнер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ						КАК Партнер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КоличествоНаправленийДеятельности = 1
	|			ТОГДА ДанныеДокумента.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ						КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КоличествоМестХранения = 1
	|			ТОГДА ДанныеДокумента.МестоХранения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ						КАК МестоХранения,
	|	ИСТИНА						КАК ДополнительнаяЗапись
	|ИЗ
	|	ТекстЗапросаТаблицаДанныхОснований КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК Основания
	|		ПО ДанныеДокумента.Ссылка = Основания.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТекстЗапросаХозяйственныеОперацииОснований КАК ТаблицаХозопераций
	|		ПО ДанныеДокумента.Ссылка = ТаблицаХозопераций.Ссылка
	|		   И Основания.ДокументОснование = ТаблицаХозопераций.ДокументОснование
	|ГДЕ
	|	НЕ Основания.ДокументОснование = ДанныеДокумента.ДокументОснование) КАК ДанныеОснований
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДанныеОснований.СсылкаНаДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	ДанныеОснований.ХозяйственнаяОперация,
	|	ДанныеОснований.Партнер,
	|	ДанныеОснований.НаправлениеДеятельности,
	|	ДанныеОснований.МестоХранения";
	
	
	ТекстЗапросаТаблицаДанныхОснований =  "
	|ВЫБРАТЬ
	|	ДанныеОснований.Ссылка											КАК Ссылка,
	|	МИНИМУМ(ДанныеОснований.ДокументОснование)						КАК ДокументОснование,
	|	МАКСИМУМ(ДанныеОснований.НаправлениеДеятельности)				КАК НаправлениеДеятельности,
	|	МАКСИМУМ(ДанныеОснований.МестоХранения)							КАК МестоХранения,
	|	МАКСИМУМ(ДанныеОснований.Договор)                  				КАК Договор,
	|	МАКСИМУМ(ДанныеОснований.Партнер)								КАК Партнер,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.НаправлениеДеятельности)	КАК КоличествоНаправленийДеятельности,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.МестоХранения)				КАК КоличествоМестХранения,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.Договор)					КАК КоличествоДоговоров,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.Партнер)					КАК КоличествоПартнеров
	|ИЗ
	|  ВтДанныеОснований КАК ДанныеОснований
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОснований.Ссылка
    |";
	
	ТекстЗапросаХозяйственныеОперацииОснований =  "
    |ВЫБРАТЬ
    |	ДанныеОснований.ДокументОснование 				КАК ДокументОснование,
    |	МАКСИМУМ(ДанныеОснований.ХозяйственнаяОперация) КАК ХозяйственнаяОперация,
    |	ДанныеОснований.Ссылка 							КАК Ссылка
    |ИЗ
    |	ВтДанныеОснований КАК ДанныеОснований
    |
    |СГРУППИРОВАТЬ ПО
    |	ДанныеОснований.ДокументОснование,
    |	ДанныеОснований.Ссылка
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстЗапросаТаблицаДанныхОснований", 			"(" + ТекстЗапросаТаблицаДанныхОснований + ")");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстЗапросаХозяйственныеОперацииОснований", 	"(" + ТекстЗапросаХозяйственныеОперацииОснований + ")");
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеПродаж 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	Параметры.Вставить("БезОграниченияПериода");
	
	ПоказыватьСчетаФактуры = ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ТребуетсяОформлениеСчетаФактуры)
		И ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураВыданный);
		
	Гиперссылка = Неопределено;
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ выданные'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры выданные'");
	КонецЕсли;
	
	Если ПоказыватьСчетаФактуры Тогда
		Гиперссылка = Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСпискаСчетФактураВыданный());
	КонецЕсли;
	
	Если ПоказыватьСчетаФактуры И ЕстьСчетаФактурыКОформлению(Параметры) Тогда
		Гиперссылка = Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСпискаСчетФактураВыданный());
	КонецЕсли;
	
	Возврат Гиперссылка;
	
КонецФункции

Функция ИмяФормыСпискаСчетФактураВыданный() Экспорт
	
	Возврат "Документ.СчетФактураВыданный.Форма.ФормаСпискаДокументов";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Обработчики_11_4_1

// Регистрирует данные для обработчика обновления УТ 11.4.1
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ДокументыОснования.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка.Корректировочный
	|	И ДокументыОснования.Ссылка.Проведен
	|	И НЕ ДокументыОснования.Ссылка.СводныйКорректировочный
	|	И ДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОснования.Ссылка
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДокументыОснования.ДокументОснование) > 1
	|;");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Заполняет признак СводныйКорректировочный
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяДокумента = "Документ.СчетФактураВыданный";
	МетаданныеДокумента = Метаданные.Документы.СчетФактураВыданный;
	
	ДополнительныеПараметрыВыборкиДанных = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь,
		ПолноеИмяДокумента,
		ДополнительныеПараметрыВыборкиДанных);
		
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеДокумента,
									Выборка.Ссылка,
									ТекстСообщения);
			Продолжить;
		КонецПопытки;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если ДокументОбъект = Неопределено Тогда
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		СводныйКорректировочный = ДокументОбъект.СводныйКорректировочный;
		ДокументОбъект.ЗаполнитьПризнакСводныйКорректировочный();
		
		Попытка
			Если ДокументОбъект.СводныйКорректировочный <> СводныйКорректировочный Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект, , , РежимЗаписиДокумента.Запись);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка); // отмечаем как отработанный
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеДокумента,
				Выборка.Ссылка,
				ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяДокумента);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
