
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	НачалоПериода = Параметры.НачалоПериода;
	КонецПериода = Параметры.КонецПериода;
	Валюта = Параметры.Валюта;
	Организация = Параметры.Организация;
	Партнер = Параметры.Партнер;
	Соглашение = Параметры.Соглашение;
	
	ЗаполнитьДокументыРеализации();
	
	СписокТипов = Новый Массив;
	Для каждого ТипДокумента Из ДокументыРеализации Цикл
		СписокТипов.Добавить(ТипЗнч(ТипДокумента.Ссылка));
	КонецЦикла;
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.Источники = Новый ОписаниеТипов(СписокТипов);
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ДокументыРеализацииКоманднаяПанель;
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Оповестить("ОформленыНедостающиеСчетаФактуры");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДокументыРеализации

&НаКлиенте
Процедура ДокументыРеализацииПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ДокументыРеализацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "ДокументыРеализацииДокументРеализации" Тогда
		ПоказатьЗначение(Неопределено, Элемент.ТекущиеДанные.Ссылка);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ДокументыРеализацииСчетФактура"
			И ЗначениеЗаполнено(Элемент.ТекущиеДанные.СчетФактура) Тогда
		ПоказатьЗначение(Неопределено, Элемент.ТекущиеДанные.СчетФактура);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОформитьСчетаФактуры(Команда)
	
	ОформитьСчетаФактурыСервер();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДокументыРеализацииСчетФактура.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДокументыРеализации.СчетФактура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<отсутствует>'"));

	//

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументыРеализации()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов
	|
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.ВладелецТовара = &Партнер
	|	И (ВидыЗапасов.Соглашение = &Соглашение
	|		ИЛИ (НЕ &ОтбиратьПоСоглашениям))
	|	И ВидыЗапасов.Валюта = &Валюта
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыКОформлению.ДокументРеализации КАК Ссылка,
	|	ТоварыКОформлению.ДокументРеализации.Дата КАК Дата,
	|	ТоварыКОформлению.ДокументРеализации.СуммаДокумента КАК Сумма,
	|	ТоварыКОформлению.ДокументРеализации.Валюта КАК Валюта,
	|
	|	ВЫБОР КОГДА ТоварыКОформлению.ДокументРеализации ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	ИНАЧЕ
	|		ТоварыКОформлению.ДокументРеализации.Партнер
	|	КОНЕЦ КАК Партнер,
	|
	|	ВЫБОР КОГДА ТоварыКОформлению.ДокументРеализации ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями ТОГДА
	|		ТоварыКОформлению.ДокументРеализации.ОрганизацияПолучатель
	|	ИНАЧЕ
	|		ТоварыКОформлению.ДокументРеализации.Контрагент
	|	КОНЕЦ КАК Контрагент
	|
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВидыЗапасов КАК ВидыЗапасов
	|	ПО
	|		ТоварыКОформлению.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеСчетаФактуры
	|	ПО
	|		ТоварыКОформлению.ДокументРеализации = ДанныеСчетаФактуры.ДокументОснование
	|		И НЕ ДанныеСчетаФактуры.Ссылка.ПометкаУдаления
	|
	|ГДЕ
	|	ТоварыКОформлению.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ТоварыКОформлению.Количество > 0
	|	И ТоварыКОформлению.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|	И (НЕ ТоварыКОформлению.ДокументРеализации ССЫЛКА Документ.ОтчетОРозничныхПродажах)
	|	И ТоварыКОформлению.Активность
	|	И ДанныеСчетаФактуры.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыКОформлению.ДокументРеализации.Дата
	|");
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(?(ЗначениеЗаполнено(КонецПериода), КонецПериода, ТекущаяДатаСеанса())));
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Запрос.УстановитьПараметр("Соглашение", Соглашение);
	Запрос.УстановитьПараметр("ОтбиратьПоСоглашениям", ЗначениеЗаполнено(Соглашение));
	
	ДокументыРеализации.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ОформитьСчетаФактурыСервер()
	
	Для Каждого ИндексСтроки Из Элементы.ДокументыРеализации.ВыделенныеСтроки Цикл
		
		СтрокаТаблицы = ДокументыРеализации.НайтиПоИдентификатору(ИндексСтроки);
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеСчетаФактуры = Новый Структура;
		ДанныеСчетаФактуры.Вставить("ДокументОснование", СтрокаТаблицы.Ссылка);
		ДанныеСчетаФактуры.Вставить("Организация", Организация);
		ДанныеСчетаФактуры.Вставить("Дата", СтрокаТаблицы.Дата);
		
		ДокументОбъект = Документы.СчетФактураВыданный.СоздатьДокумент();
		ДокументОбъект.Заполнить(ДанныеСчетаФактуры);
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		СтрокаТаблицы.СчетФактура = ДокументОбъект.Ссылка;
		
	КонецЦикла;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.ДокументыРеализации);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.ДокументыРеализации, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.ДокументыРеализации);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти