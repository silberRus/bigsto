#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
КонецПроцедуры

// Добавляет команду создания документа "Корректировка назначения товаров".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.КорректировкаНазначенияТоваров) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.КорректировкаНазначенияТоваров.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.КорректировкаНазначенияТоваров);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьОбособленноеОбеспечениеЗаказов";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//  Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// 
// Возвращаемое значение:
//  Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.КорректировкаНазначенияТоваров";
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад");
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПустаяСсылка());
	
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("Склад");
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("ИсходноеНазначение");
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("НовоеНазначение");
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;

КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	ВЫРАЗИТЬ(Товары.ИсходноеНазначение КАК Справочник.Назначения) КАК ИсходноеНазначение,
	|	ВЫРАЗИТЬ(Товары.НовоеНазначение КАК Справочник.Назначения) КАК НовоеНазначение,
	|	Товары.Склад,
	|	Товары.Серия,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Товары.ИсходноеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|				ИЛИ ЕСТЬNULL(Товары.НовоеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьСкладскиеДвижения,
	|	Товары.Склад,
	|	Товары.Серия,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ТоварыДляЗапроса КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.ЕстьСкладскиеДвижения
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|								ТОГДА ВЫБОР
	|										КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|											ТОГДА ВЫБОР
	|													КОГДА Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|														ТОГДА 13
	|													ИНАЧЕ 14
	|												КОНЕЦ
	|										ИНАЧЕ ВЫБОР
	|												КОГДА Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|													ТОГДА 9
	|												ИНАЧЕ 10
	|											КОНЕЦ
	|									КОНЕЦ
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|								ТОГДА ВЫБОР
	|										КОГДА Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|											ТОГДА 7
	|										ИНАЧЕ 8
	|									КОНЕЦ
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|									И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА ВЫБОР
	|										КОГДА Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|											ТОГДА 3
	|										ИНАЧЕ 4
	|									КОНЕЦ
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|							ТОГДА ВЫБОР
	|									КОГДА Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|										ТОГДА 13
	|									ИНАЧЕ 14
	|								КОНЕЦ
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|		ПО (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|			И (ПолитикиУчетаСерий.Склад = Товары.Склад)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

// Возвращает текст запроса, определяющий используются ли складские перемещения на переданном складе,
// и используется ли адресное хранение в переданном перемещении
//
// Параметры:
//  ИмяВременнойТаблицы - Строка - Имя временной таблицы в которую нужно поместить результат. Если не задать параметр, временная таблица не будет создана
// 
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаИспользованиеПомещенийИАдресногоХранения(ИмяВременнойТаблицы = "") Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ИспользоватьСкладскиеПомещения
	|				И &Период >= ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ТаблицаТоваров.Помещение КАК Справочник.СкладскиеПомещения).ИспользоватьАдресноеХранение
	|							И &Период >= ВЫРАЗИТЬ(ТаблицаТоваров.Помещение КАК Справочник.СкладскиеПомещения).ДатаНачалаАдресногоХраненияОстатков
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ИспользоватьАдресноеХранение
	|						И &Период >= ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ДатаНачалаАдресногоХраненияОстатков
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ИспользоватьАдресноеХранение,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ИспользоватьСкладскиеПомещения
	|				И &Период >= ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьСкладскиеПомещения
	|//&ИмяВременнойТаблицы
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров";
	
	Если Не ПустаяСтрока(ИмяВременнойТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ИмяВременнойТаблицы", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает массив доступных действий с документом КорректировкаНазначенияТоваров
//
// Параметры:
//  Назначение		 - СправочникСсылка.Назначения	 - нащначение, выбранное в корректировке, для алгоритма имеет смысл только давальческое
//  ТекущееДействие	 - ПеречислениеСсылка.ВидыОперацийКорректировкиНазначения - действие указанное в текущем документе
// 
// Возвращаемое значение:
//  Массив - массив элементов типа ПеречислениеСсылка.ВидыОперацийКорректировкиНазначения
//
Функция ДоступныеДействия(Назначение = Неопределено, ТекущееДействие = Неопределено) Экспорт
	
	ИспользоватьОдинВидРезерва = Ложь;
	
	ЧастичныеПрава = Ложь;
	
	Если Не РольДоступна(Метаданные.Роли.ДобавлениеИзменениеКорректировокНазначенияТоваровРасширенный)
		И Не РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		ЧастичныеПрава = Истина;
	КонецЕсли;
	
	
	Массив = Новый Массив();
	Массив.Добавить(Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезерв); // 0
	
	Если Не ЧастичныеПрава Тогда
		Массив.Добавить(Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезервПоМногимНазначениям); // 1
	КонецЕсли;
	
	Если Не ИспользоватьОдинВидРезерва Тогда
		Массив.Добавить(Перечисления.ВидыОперацийКорректировкиНазначения.Резервировать); // 2
		Если Не ЧастичныеПрава Тогда
			Массив.Добавить(Перечисления.ВидыОперацийКорректировкиНазначения.РезервироватьИКорректировать); // 3
		КонецЕсли;
	Иначе
		Массив.Добавить(Перечисления.ВидыОперацийКорректировкиНазначения.РезервироватьИКорректировать); // 3
	КонецЕсли;
	
	Если ТекущееДействие = Перечисления.ВидыОперацийКорректировкиНазначения.ПроизвольнаяКорректировкаНазначений Тогда
		Массив.Добавить(Перечисления.ВидыОперацийКорректировкиНазначения.ПроизвольнаяКорректировкаНазначений); // 4
	КонецЕсли;
	
	Возврат Массив;
	
КонецФункции

// Возвращает признак необходимости проверки превышения обеспеченного количества над потребностью
//  Если используется Заказ давальца, контроль всегда выключен
//
// Параметры:
//  Назначение - СправочникСсылка.Назначения - назначение, выбранное в корректировке, для алгоритма имеет смысл только давальческое
// 
// Возвращаемое значение:
//  Булево - 
//
Функция КонтролироватьПревышениеПотребностиПоЗаказу(Назначение) Экспорт
	
	РеквизитыНазначения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Назначение, "Заказ, Партнер, ТипНазначения");
	
	Если Не ЗначениеЗаполнено(РеквизитыНазначения.Заказ)
		И Не ЗначениеЗаполнено(РеквизитыНазначения.Партнер) Тогда
		
		Возврат Ложь;
		
	Иначе
		
		КонтролироватьПревышениеПотребности = Не ПолучитьФункциональнуюОпцию("РазрешитьОбособлениеТоваровСверхПотребности");
		
		
		Возврат КонтролироватьПревышениеПотребности;
		
	КонецЕсли;
	
КонецФункции

// Производит поиск назначения соответствующего заказу
//
// Параметры:
//  Заказ - ЛюбаяСсылка - Ссылка на заказ, назначение которого нужно определить.
// 
// Возвращаемое значение:
//  СправочникСсылка.Назначения - назначения, связанное с заказом.
//
Функция НазначениеЗаказа(Заказ) Экспорт
	
	Если Не ЗначениеЗаполнено(Заказ) Тогда
		Возврат Справочники.Назначения.ПустаяСсылка();
	КонецЕсли;
	
	ПутьКПолюНазначение = "Назначение";
	
	// Исключения.
	
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
		
		Назначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Заказ, "Назначение");
		Если Не ЗначениеЗаполнено(Назначение) Тогда
			ПутьКПолюНазначение = "НазначениеТовары";
		КонецЕсли;
		
	КонецЕсли;
	
	Назначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Заказ, ПутьКПолюНазначение);
	
	Если ЗначениеЗаполнено(Назначение) Тогда
		ЗаказНазначения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Назначение, "Заказ");
		Если ЗначениеЗаполнено(ЗаказНазначения) И ЗаказНазначения = Заказ Тогда
			Возврат Назначение;
		Иначе
			Возврат Справочники.Назначения.ПустаяСсылка();
		КонецЕсли;
	Иначе
		Возврат Справочники.Назначения.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

// Проверяет есть ли доступ у текущего пользователя к изменению документа
//
// Параметры:
//  Ссылка - ДокументСсылка.КорректировкаНазначенияТоваров - 
// 
// Возвращаемое значение:
//  Булево - 
//
Функция ДоступнаВозможностьИзменения(Ссылка) Экспорт
	
	ЕстьДоступ = Истина;
	ВидОперацииДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВидОперации");
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.КорректировкаНазначенияТоваров) Тогда
		ЕстьДоступ = Ложь;
	ИначеЕсли Не РольДоступна(Метаданные.Роли.ДобавлениеИзменениеКорректировокНазначенияТоваровРасширенный)
		И Не РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		// Частичные права
		ВидОперацииДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВидОперации");
		Если ВидОперацииДокумента = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезервПоМногимНазначениям
			Или ВидОперацииДокумента = Перечисления.ВидыОперацийКорректировкиНазначения.РезервироватьИКорректировать Тогда
			ЕстьДоступ = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЕстьДоступ;
	
КонецФункции


// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
// 
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.ДавальческоеПродукция22));
	
	// Остатки списываемых товаров на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Товары.ИсходноеНазначение", "ВНаличии");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("ВНаличии").Пометка = Истина;
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.Товары.Склад";
	
	// Потребности в оприходуемых товарах на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Товары.НовоеНазначение", "Потребность");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.Товары.Склад";
	
	Возврат МакетФормы;
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создание запроса инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Формирование текста запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Ссылка", 			   Реквизиты.Ссылка); // Предназначен для использования в процедуре ИнициализироватьВидыЗапасов
	Запрос.УстановитьПараметр("Период", 			   Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", 		   Реквизиты.Организация);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КорректировкаОбособленногоУчета);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	Запрос.УстановитьПараметр("ИспользуетсяНазначение", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.Номенклатура         КАК Номенклатура,
	|	Ключи.Характеристика       КАК Характеристика,
	|	Ключи.Назначение           КАК Назначение,
	|	Ключи.Серия                КАК Серия,
	|	Ключи.Склад                КАК Склад
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Ключи.Номенклатура         КАК Номенклатура,
	|		Ключи.Характеристика       КАК Характеристика,
	|		&ПустоеНазначение          КАК Назначение,
	|		Ключи.Серия                КАК Серия,
	|		Ключи.Склад                КАК Склад
	|	ИЗ
	|		Документ.КорректировкаНазначенияТоваров.ВидыЗапасов КАК Товары
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|		ПО Товары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|	ГДЕ
	|		Товары.Ссылка = &Ссылка
	|		И Не &ИспользуетсяНазначение
	|	) КАК Ключи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Ключи.Номенклатура      = Аналитика.Номенклатура
	|		И Ключи.Характеристика = Аналитика.Характеристика
	|		И Ключи.Серия          = Аналитика.Серия
	|		И Ключи.Склад          = Аналитика.Склад
	|		И Ключи.Назначение     = Аналитика.Назначение
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL
	|");
	
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("ИспользуетсяНазначение", Запрос.Параметры.ИспользуетсяНазначение);
	ЗапросАналитик.УстановитьПараметр("ПустоеНазначение", Справочники.Назначения.ПустаяСсылка());
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
КонецПроцедуры

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА ЕСТЬNULL(ВидыЗапасовВладельца.Организация, ЕСТЬNULL(ВидыЗапасов.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))) <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|				ЕСТЬNULL(ВидыЗапасовВладельца.Организация, ВидыЗапасов.Организация)
	|			ИНАЧЕ
	|				&Организация
	|		КОНЕЦ                                                   КАК Организация,
	|	ТаблицаВидыЗапасов.НомерСтроки								КАК НомерСтроки,
	|	Аналитика.Номенклатура										КАК Номенклатура,
	|	Аналитика.Характеристика									КАК Характеристика,
	|	Аналитика.Серия												КАК Серия,
	|	Аналитика.Склад.ЦеховаяКладовая								КАК ЦеховаяКладовая,
	|	Аналитика.Назначение										КАК Назначение,
	|	АналитикаОприходование.Назначение							КАК НовоеНазначение,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры				КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики						КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование	КАК АналитикаУчетаНоменклатурыОприходование,
	|	АналитикаБезНазначения.КлючАналитики						КАК АналитикаУчетаНоменклатурыОприходованиеБезНазначения,
	|	ЕСТЬNULL(ВидыЗапасовВладельца.Ссылка, ВидыЗапасов.Ссылка)	КАК ВидЗапасов,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасовОприходование = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(ВидыЗапасовВладельца.Ссылка, ВидыЗапасов.Ссылка)
	|		ИНАЧЕ ТаблицаВидыЗапасов.ВидЗапасовОприходование
	|	КОНЕЦ														КАК ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.НомерГТД									КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество								КАК Количество
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО ТаблицаВидыЗапасов.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|	ПО ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|		И ВидыЗапасов.ВидЗапасовВладельца = ВидыЗапасовВладельца.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаОприходование
	|	ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование = АналитикаОприходование.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.Склад = АналитикаБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	Товары.Номенклатура                    КАК Номенклатура,
	|	Товары.Характеристика                  КАК Характеристика,
	|	-Товары.Количество                     КАК НаличиеПодЗаказ,
	|	Товары.Количество                      КАК КЗаказу,
	|	Товары.Склад                           КАК Склад,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Товары.ИсходноеНазначение              КАК Назначение,
	|	ИСТИНА                                 КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.ИсходноеНазначение <> ЗНАЧЕНИЕ(Справочник.назначения.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Количество,
	|	-Товары.Количество,
	|	Товары.Склад,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Товары.НовоеНазначение,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.НовоеНазначение <> ЗНАЧЕНИЕ(Справочник.назначения.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	Товары.Номенклатура                    Номенклатура,
	|	Товары.Характеристика                  Характеристика,
	|	Товары.Количество                      ВНаличии,
	|	ВЫБОР КОГДА Товары.НовоеНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				Товары.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ,
	|	Товары.Склад                           КАК Склад,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	Товары.Номенклатура                    КАК Номенклатура,
	|	Товары.Характеристика                  КАК Характеристика,
	|	Товары.Количество                      КАК ВНаличии,
	|	ВЫБОР КОГДА Товары.ИсходноеНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				Товары.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ,
	|	Товары.Склад                           КАК Склад,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	1												КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	&Период											КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)			КАК ВидДвижения,
	|	ТаблицаВидыЗапасов.Организация					КАК Организация,
	|	ТаблицаВидыЗапасов.Организация					КАК ОрганизацияОтгрузки,
	|	ТаблицаВидыЗапасов.Номенклатура					КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика				КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация							КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование		КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2												КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	&Период											КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)			КАК ВидДвижения,
	|	ТаблицаВидыЗапасов.Организация					КАК Организация,
	|	НЕОПРЕДЕЛЕНО									КАК ОрганизацияОтгрузки,
	|	ТаблицаВидыЗапасов.Номенклатура					КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика				КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование		КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация							КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Порядок";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступленияТоваров.ДатаПоступления КАК ДатаПоступления,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.НовоеНазначение КАК Назначение,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ПоступленияТоваров.ВидЗапасов
	|		И ТаблицаВидыЗапасов.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = ПоступленияТоваров.Характеристика
	|		И ТаблицаВидыЗапасов.Серия = ПоступленияТоваров.Серия
	|		И ТаблицаВидыЗапасов.НовоеНазначение = ПоступленияТоваров.Назначение
	|		И ТаблицаВидыЗапасов.НомерГТД = ПоступленияТоваров.НомерГТД
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваровПолучатель
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасовОприходование = ПоступленияТоваровПолучатель.ВидЗапасов
	|		И ТаблицаВидыЗапасов.Номенклатура = ПоступленияТоваровПолучатель.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = ПоступленияТоваровПолучатель.Характеристика
	|		И ТаблицаВидыЗапасов.Серия = ПоступленияТоваровПолучатель.Серия
	|		И ТаблицаВидыЗапасов.НовоеНазначение = ПоступленияТоваровПолучатель.Назначение
	|		И ТаблицаВидыЗапасов.НомерГТД = ПоступленияТоваровПолучатель.НомерГТД
	|
	|ГДЕ
	|	(ПоступленияТоваровПолучатель.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваровПолучатель.ДатаПоступления < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаВидыЗапасов.Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика,
	|	ТаблицаВидыЗапасов.Серия,
	|	ТаблицаВидыЗапасов.НовоеНазначение,
	|	ТаблицаВидыЗапасов.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	(ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ) КАК РазделУчета,
	|
	|	(ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ) КАК КорРазделУчета,
	|	1												КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)			КАК ВидДвижения,
	|	&Период											КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ											КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.Организация, &Организация)	КАК Организация,
	|   ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	0												КАК Стоимость,
	|	&ХозяйственнаяОперация							КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование		КАК КорВидЗапасов,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходованиеБезНазначения
	|	КОНЕЦ											КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено									КАК АналитикаУчетаПоПартнерам,
	|	Аналитика.Склад.Подразделение					КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВидыЗапасов.Ссылка = ТаблицаВидыЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	&УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ) КАК РазделУчета,
	|
	|	НЕОПРЕДЕЛЕНО 									КАК КорРазделУчета,
	|	2												КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)			КАК ВидДвижения,
	|	&Период											КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходованиеБезНазначения
	|	КОНЕЦ											КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.Организация, &Организация)	КАК Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование		КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	0												КАК Стоимость,
	|	&ХозяйственнаяОперация							КАК ХозяйственнаяОперация,
	|   НЕОПРЕДЕЛЕНО									КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО									КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО									КАК АналитикаУчетаПоПартнерам,
	|	Аналитика.Склад.Подразделение					КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВидыЗапасов.Ссылка = ТаблицаВидыЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	&УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Порядок";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Помещение                КАК Помещение,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.НовоеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.НовоеНазначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (ЕСТЬNULL(ТаблицаТовары.НовоеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(ТаблицаТовары.ИсходноеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Помещение                КАК Помещение,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.ИсходноеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.ИсходноеНазначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (ЕСТЬNULL(ТаблицаТовары.НовоеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(ТаблицаТовары.ИсходноеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыВЯчейках";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Ячейка КАК Ячейка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.НовоеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.НовоеНазначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (ЕСТЬNULL(ТаблицаТовары.НовоеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(ТаблицаТовары.ИсходноеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ))
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Склад.ИспользоватьСкладскиеПомещения
	|					И &Период >= ТаблицаТовары.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|				ТОГДА ВЫБОР
	|						КОГДА ТаблицаТовары.Помещение.ИспользоватьАдресноеХранение
	|								И &Период >= ТаблицаТовары.Помещение.ДатаНачалаАдресногоХраненияОстатков
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОГДА ТаблицаТовары.Склад.ИспользоватьАдресноеХранение
	|					И &Период >= ТаблицаТовары.Склад.ДатаНачалаАдресногоХраненияОстатков
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Ячейка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.ИсходноеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.ИсходноеНазначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ 
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (ЕСТЬNULL(ТаблицаТовары.НовоеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(ТаблицаТовары.ИсходноеНазначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ))
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Склад.ИспользоватьСкладскиеПомещения
	|					И &Период >= ТаблицаТовары.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|				ТОГДА ВЫБОР
	|						КОГДА ТаблицаТовары.Помещение.ИспользоватьАдресноеХранение
	|								И &Период >= ТаблицаТовары.Помещение.ДатаНачалаАдресногоХраненияОстатков
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОГДА ТаблицаТовары.Склад.ИспользоватьАдресноеХранение
	|					И &Период >= ТаблицаТовары.Склад.ДатаНачалаАдресногоХраненияОстатков
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период											КАК Период,
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.Организация, &Организация)	КАК Организация,
	|	&ХозяйственнаяОперация							КАК ХозяйственнаяОперация,
	|	Аналитика.Склад.Подразделение					КАК Подразделение,
	|
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ											КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК НаправлениеДеятельности,
	|	Аналитика.Склад									КАК Склад,
	|	ВидыЗапасов.ТипЗапасов							КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходованиеБезНазначения
	|	КОНЕЦ											КАК КорАналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК КорНаправлениеДеятельности,
	|	Аналитика.Склад									КАК КорСклад,
	|	КорВидыЗапасов.ТипЗапасов						КАК КорТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование		КАК КорВидЗапасов,
	|
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.Количество					КАК КорКоличество,
	|
	|	0												КАК Стоимость,
	|	0												КАК СтоимостьБезНДС,
	|	0												КАК СтоимостьРегл,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ИсточникГФУНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование		КАК КорИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВидыЗапасов.Ссылка = ТаблицаВидыЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|		ПО КорВидыЗапасов.Ссылка = ТаблицаВидыЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	&УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|	И ВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеТабличнойЧасти

// Возвращает таблицу товаров по заказу для которых производится обособленное обеспечение
//
// Параметры:
//  ВидОперации							 - ПеречислениеСсылка.ВидыОперацийКорректировкиНазначения - Вид операции заказа
//  Назначение							 - Назначение, по которому необходимо получить данные обособленного обеспечения
//  Заказ								 - ДокументСсылка - Заказ, по товарам которого необходимо ограничить полученный список потребности назначения
//  ТекущаяКорректировка				 - ДокументСсылка.КорректировкаНазначенияТоваров - текущий документ корректировки, задается для того что бы
// 													исключить его движения из расчетов
//  ТолькоПоСкладуОтгрузки				 - Булево - При виде операции резервирование, будут ли помещены
//													в результирующую таблицу остатки по складам не указанным в заказе
//  Организация							 - СправочникСсылка.Организации - 
//  СнятьИзлишекРезервов                 - Булево - Признак необходимости снятия только излишка для операций снятия резерва, если передано Ложь -- выполняется снятие всей потребности
// 
// Возвращаемое значение:
//   - ТаблицаЗначений - таблица значения с колонками:
//		* Заказ						 - ДокументСсылка.ЗаказКлиента, ДокументСсылка.ЗаказНаВнутреннееПотребление, ДокументСсылка.ЗаказНаПеремещение, 
//			ДокументСсылка.ЗаказНаСборку, ДокументСсылка.ЗаказПоставщику - заказ переданный как входящий параметр функции
//		* ЗаказИсточник				 - ДокументСсылка.ЗаказКлиента, ДокументСсылка.ЗаказНаВнутреннееПотребление, ДокументСсылка.ЗаказНаПеремещение, 
//			ДокументСсылка.ЗаказНаСборку, ДокументСсылка.ЗаказПоставщику - заказ который зарезервировал тот же товар который нужен заказу
//				переданному как входящий параметр функции
//		* ИсходноеНазначение		 - СправочникСсылка.Назначения - назначение соответствующее колонке Заказ
//		* НовоеНазначение			 - СправочникСсылка.Назначения - назначение соответствующее колонке ЗаказИсточник
//		* Номенклатура				 - СправочникСсылка.Номенклатура - 
//		* Характеристика			 - СправочникСсылка.ХарактеристикиНоменклатуры - 
//		* ЕдиницаИзмерения			 - СправочникСсылка.УпаковкиЕдиницыИзмерения - 
//		* Склад						 - СправочникСсылка.Склады - склад на котором в данный момент находится товар
//		* СкладОтгрузки				 - СправочникСсылка.Склады - склад указанный в заказе, склад потребности
//		* Потребность				 - Число - количество необеспеченного товара по заказу
//		* Обеспечено				 - Число - количество зарезервированного и ожидаемого к прибытию обособленного товара
//		* СвободныйОстаток			 - Число - свободный остаток товара по складу
//		* ПотребностьОсновногоСклада - Булево - признак того что текущий склад соответствует складу отгрузки
//		* Количество				 - Число - всегда 0
//		* Отметка					 - Булево - всегда Ложь
//		* СортировкаСклада			 - Число - данные для сортировки складов
//		* ЭтоОстатокЗаказа			 - Булево - признак того что в колонке СвободныйОстаток не остаток склада, а резерв заказа
//
Функция ЗаполнитьТаблицуСнятияУстановкиРезервов(ВидОперации, Назначение, Заказ, ТекущаяКорректировка, ТолькоПоСкладуОтгрузки, Организация, СнятьИзлишекРезервов = Истина) Экспорт
	
	СнятиеРезерва = (ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезерв
		Или ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезервПоМногимНазначениям);
	
	КорректировкаРезерваИныхЗаказов = (ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.РезервироватьИКорректировать);
	
	ТребуемыеТовары = МатериалыИзТабличнойЧастиДокумента(Заказ);
	
	Отборы = Новый Структура();
	Отборы.Вставить("Назначение",      Назначение);
	Отборы.Вставить("Организация",     Организация);
	Отборы.Вставить("ТребуемыеТовары", ТребуемыеТовары);
	
	СтруктураВозврата = ТаблицаЗаполненияКорректировки(ВидОперации, ТолькоПоСкладуОтгрузки, Отборы, ТекущаяКорректировка);
	Таблица = СтруктураВозврата.ТаблицаЗаполненияКорректировки;
	Таблица.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Отметка", Новый ОписаниеТипов("Булево"));
	
	Если СнятиеРезерва Тогда
		
		СнятьРезервы(Таблица, СнятьИзлишекРезервов);
		
	Иначе
		
		УстановитьРезервы(Таблица);
		
	КонецЕсли;
	
	Таблица.Колонки.Добавить("СкладЗаказИсточник", Новый ОписаниеТипов("Строка"));
	Для Каждого Строка Из Таблица Цикл
		
		Строка.СкладЗаказИсточник = ?(Строка.ИсточникПредставление = "", "", Строка.ИсточникПредставление + ", ") + Строка.СкладПредставление;
		
		Если Не СнятиеРезерва Тогда
			Строка.ИсходноеНазначение = Строка.НазначениеИсточник; // Пустое значение (со склада) или назначение конкретного заказа
		Иначе
			Строка.ИсходноеНазначение = Строка.Назначение;
		КонецЕсли;
		
	КонецЦикла;
	
	// Восстановление сортировки после изменения таблицы, по строковому представлению
	Таблица.Сортировать("ИсходноеНазначение, Номенклатура, Характеристика, СортировкаСклада УБЫВ, НазначениеИсточник, Потребность УБЫВ, ВНаличии УБЫВ");
	
	СтруктураВозврата.Вставить("ТаблицаЗаполненияКорректировки", Таблица);
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция МатериалыИзТабличнойЧастиДокумента(Заказ)
	
	ТребуемыеТовары = Новый ТаблицаЗначений();
	ТребуемыеТовары.Колонки.Добавить("Номенклатура",   Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТребуемыеТовары.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	
	
	Возврат ТребуемыеТовары;
	
КонецФункции

// Возвращает таблицу товаров с остатками детализированными до серии, помещения, ячейки
//
// Параметры:
// 
//  - ТаблицаЗначений - таблица значения с колонками:
//		* Заказ						 - ДокументСсылка.ЗаказКлиента, ДокументСсылка.ЗаказНаВнутреннееПотребление, ДокументСсылка.ЗаказНаПеремещение, 
//			ДокументСсылка.ЗаказНаСборку, ДокументСсылка.ЗаказПоставщику - заказ переданный как входящий параметр функции
//		* ЗаказИсточник				 - ДокументСсылка.ЗаказКлиента, ДокументСсылка.ЗаказНаВнутреннееПотребление, ДокументСсылка.ЗаказНаПеремещение, 
//			ДокументСсылка.ЗаказНаСборку, ДокументСсылка.ЗаказПоставщику - заказ который зарезервировал тот же товар который нужен заказу
//				переданному как входящий параметр функции
//		* ИсходноеНазначение		 - СправочникСсылка.Назначения - назначение соответствующее колонке Заказ
//		* НовоеНазначение			 - СправочникСсылка.Назначения - назначение соответствующее колонке ЗаказИсточник
//		* Номенклатура				 - СправочникСсылка.Номенклатура - 
//		* Характеристика			 - СправочникСсылка.ХарактеристикиНоменклатуры - 
//		* ЕдиницаИзмерения			 - СправочникСсылка.УпаковкиЕдиницыИзмерения - 
//		* Склад						 - СправочникСсылка.Склады - склад на котором в данный момент находится товар
//		* СкладОтгрузки				 - СправочникСсылка.Склады - склад указанный в заказе, склад потребности
//		* Потребность				 - Число - количество необеспеченного товара по заказу
//		* Обеспечено				 - Число - количество зарезервированного и ожидаемого к прибытию обособленного товара
//		* СвободныйОстаток			 - Число - свободный остаток товара по складу
//		* ПотребностьОсновногоСклада - Булево - признак того что текущий склад соответствует складу отгрузки
//		* Количество				 - Число - всегда 0
//		* Отметка					 - Булево - всегда Ложь
//		* СортировкаСклада			 - Число - данные для сортировки складов
//		* ЭтоОстатокЗаказа			 - Булево - признак того что в колонке СвободныйОстаток не остаток склада, а резерв заказа
//  Ссылка	 - ДокументСсылка.КорректировкаНазначенияТоваров - Будет ли помещены в результирующую таблицу остатки по складам не указанным в заказе
//  ТолькоОтмеченные - Булево - будут ли получены остатки по ячейкам и помещениям по строкам переданной таблице, у которых не взведен флаг Отметка
// 
// Возвращаемое значение:
//   - ТаблицаЗначений - таблица значения с колонками:
//		* ИсходноеНазначение		 - СправочникСсылка.Назначения - назначение соответствующее колонке Заказ
//		* ИсходноеНазначениеДвиженияПоСкладскимРегистрам	 - Булево - назначение соответствующее колонке ЗаказИсточник
//		* Номенклатура				 - СправочникСсылка.Номенклатура - 
//		* Характеристика			 - СправочникСсылка.ХарактеристикиНоменклатуры - 
//		* Серия						 - СправочникСсылка.СерииНоменклатуры - 
//		* Склад						 - СправочникСсылка.Склады - склад на котором в данный момент находится товар
//		* Обеспечено				 - Число - количество товара зарезервированного заказом по указанному товару или свободный остаток товара по складу, помещению, серии
//		* ОбеспеченоУпаковок		 - Число - количество товара зарезервированного заказом по указанному товару или свободный остаток товара по складу, помещению, серии
//		* Помещение					 - СправочникСсылка.СкладскиеПомещения - количество зарезервированного и ожидаемого к прибытию обособленного товара
//		* Упаковка					 - СправочникСсылка.УпаковкиЕдиницыИзмерения - 
//		* Ячейка					 - СправочникСсылка.СкладскиеЯчейки - 
//		* СвободныйОстаток			 - Число - свободный остаток товара по складу
//		* Количество				 - Число - количество к корректировке введенное пользователем
//
Функция ТаблицаПомещенияЯчейкиПоТоварам(ТаблицаТовары, Ссылка, ТолькоОтмеченные = Истина) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	таб.ИсходноеНазначение КАК Назначение,
	|	таб.Номенклатура,
	|	таб.Характеристика,
	|	таб.Склад,
	|	таб.ВНаличии КАК Обеспечено,
	|	таб.СвободныйОстаток,
	|	таб.Количество,
	|	таб.Отметка
	|ПОМЕСТИТЬ ВтТоварыЗаказа
	|ИЗ
	|	&ТаблицаТовары КАК таб
	|ГДЕ
	|	&УсловиеПоОтметке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Назначение,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Серия,
	|	Таблица.Склад,
	|	СУММА(Таблица.ВНаличии) КАК ВНаличии,
	|	МАКСИМУМ(Таблица.СвободныйОстаток) КАК СвободныйОстаток,
	|	МАКСИМУМ(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Склад КАК Склад,
	|		ТоварыОрганизаций.КоличествоОстаток КАК ВНаличии,
	|		Т.СвободныйОстаток КАК СвободныйОстаток,
	|		Т.Количество КАК Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.Остатки КАК ТоварыОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТоварыЗаказа КАК Т
	|			ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение = Т.Назначение
	|				И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура = Т.Номенклатура
	|				И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика = Т.Характеристика
	|				И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Склад = Т.Склад
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Склад,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ТоварыОрганизаций.Количество
	|			ИНАЧЕ ТоварыОрганизаций.Количество
	|		КОНЕЦ,
	|		Т.СвободныйОстаток,
	|		Т.Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТоварыЗаказа КАК Т
	|			ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение = Т.Назначение
	|				И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура = Т.Номенклатура
	|				И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика = Т.Характеристика
	|				И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Склад = Т.Склад
	|	ГДЕ
	|		ТоварыОрганизаций.Регистратор = &Регистратор) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Назначение,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Серия,
	|	Таблица.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Назначение,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Серия,
	|	Таблица.Склад,
	|	Таблица.Помещение,
	|	Таблица.Упаковка,
	|	Таблица.Ячейка,
	|	СУММА(Таблица.ВНаличии) КАК ВНаличии,
	|	МАКСИМУМ(Таблица.СвободныйОстаток) КАК СвободныйОстаток,
	|	МАКСИМУМ(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыВЯчейкахОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыВЯчейкахОстатки.Назначение КАК Назначение,
	|		ТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
	|		ТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
	|		ТоварыВЯчейкахОстатки.Серия КАК Серия,
	|		ТоварыВЯчейкахОстатки.Ячейка.Владелец КАК Склад,
	|		ТоварыВЯчейкахОстатки.Ячейка.Помещение КАК Помещение,
	|		ТоварыВЯчейкахОстатки.Упаковка КАК Упаковка,
	|		ТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|		ТоварыВЯчейкахОстатки.ВНаличииОстаток - ТоварыВЯчейкахОстатки.КОтборуОстаток КАК ВНаличии,
	|		Т.СвободныйОстаток КАК СвободныйОстаток,
	|		Т.Количество КАК Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыВЯчейках.Остатки КАК ТоварыВЯчейкахОстатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТоварыЗаказа КАК Т
	|			ПО ТоварыВЯчейкахОстатки.Назначение = Т.Назначение
	|				И ТоварыВЯчейкахОстатки.Номенклатура = Т.Номенклатура
	|				И ТоварыВЯчейкахОстатки.Характеристика = Т.Характеристика
	|				И ТоварыВЯчейкахОстатки.Ячейка.Владелец = Т.Склад
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыВЯчейках.Назначение,
	|		ТоварыВЯчейках.Номенклатура,
	|		ТоварыВЯчейках.Характеристика,
	|		ТоварыВЯчейках.Серия,
	|		ТоварыВЯчейках.Ячейка.Владелец,
	|		ТоварыВЯчейках.Ячейка.Помещение,
	|		ТоварыВЯчейках.Упаковка,
	|		ТоварыВЯчейках.Ячейка,
	|		ВЫБОР
	|			КОГДА ТоварыВЯчейках.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ТоварыВЯчейках.ВНаличии
	|			ИНАЧЕ ТоварыВЯчейках.ВНаличии
	|		КОНЕЦ,
	|		Т.СвободныйОстаток,
	|		Т.Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыВЯчейках КАК ТоварыВЯчейках
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТоварыЗаказа КАК Т
	|			ПО ТоварыВЯчейках.Назначение = Т.Назначение
	|				И ТоварыВЯчейках.Номенклатура = Т.Номенклатура
	|				И ТоварыВЯчейках.Характеристика = Т.Характеристика
	|				И ТоварыВЯчейках.Ячейка.Владелец = Т.Склад
	|	ГДЕ
	|		ТоварыВЯчейках.Регистратор = &Регистратор) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Назначение,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Серия,
	|	Таблица.Склад,
	|	Таблица.Помещение,
	|	Таблица.Упаковка,
	|	Таблица.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Назначение,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Серия,
	|	Таблица.Склад,
	|	Таблица.Помещение,
	|	СУММА(Таблица.ВНаличии) КАК ВНаличии,
	|	МАКСИМУМ(Таблица.СвободныйОстаток) КАК СвободныйОстаток,
	|	МАКСИМУМ(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыНаСкладахОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Назначение КАК Назначение,
	|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|		ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	|		ТоварыНаСкладахОстатки.Серия КАК Серия,
	|		ТоварыНаСкладахОстатки.Склад КАК Склад,
	|		ТоварыНаСкладахОстатки.Помещение КАК Помещение,
	|		ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток КАК ВНаличии,
	|		Т.СвободныйОстаток КАК СвободныйОстаток,
	|		Т.Количество КАК Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТоварыЗаказа КАК Т
	|			ПО ТоварыНаСкладахОстатки.Назначение = Т.Назначение
	|				И ТоварыНаСкладахОстатки.Номенклатура = Т.Номенклатура
	|				И ТоварыНаСкладахОстатки.Характеристика = Т.Характеристика
	|				И ТоварыНаСкладахОстатки.Склад = Т.Склад
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РегТоварыНаСкладах.Назначение,
	|		РегТоварыНаСкладах.Номенклатура,
	|		РегТоварыНаСкладах.Характеристика,
	|		РегТоварыНаСкладах.Серия,
	|		РегТоварыНаСкладах.Склад,
	|		РегТоварыНаСкладах.Помещение,
	|		ВЫБОР
	|			КОГДА РегТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -РегТоварыНаСкладах.ВНаличии
	|			ИНАЧЕ РегТоварыНаСкладах.ВНаличии
	|		КОНЕЦ,
	|		Т.СвободныйОстаток,
	|		Т.Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах КАК РегТоварыНаСкладах
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТоварыЗаказа КАК Т
	|			ПО РегТоварыНаСкладах.Назначение = Т.Назначение
	|				И РегТоварыНаСкладах.Номенклатура = Т.Номенклатура
	|				И РегТоварыНаСкладах.Характеристика = Т.Характеристика
	|				И РегТоварыНаСкладах.Склад = Т.Склад
	|	ГДЕ
	|		РегТоварыНаСкладах.Регистратор = &Регистратор) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Назначение,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Серия,
	|	Таблица.Склад,
	|	Таблица.Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Склады.Ссылка КАК Склад,
	|	ЕСТЬNULL(СкладыИПомещения.Ссылка, ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)) КАК Помещение,
	|	ВЫБОР
	|		КОГДА Склады.Ссылка.ИспользоватьСкладскиеПомещения
	|				И &Дата >= Склады.Ссылка.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА СкладыИПомещения.Ссылка.ИспользоватьАдресноеХранение
	|							И &Дата >= СкладыИПомещения.Ссылка.ДатаНачалаАдресногоХраненияОстатков
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Склады.Ссылка.ИспользоватьАдресноеХранение
	|						И &Дата >= Склады.Ссылка.ДатаНачалаАдресногоХраненияОстатков
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ИспользоватьАдресноеХранение
	|ПОМЕСТИТЬ СкладыИПомещения
	|ИЗ
	|	Справочник.Склады КАК Склады
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладскиеПомещения КАК СкладыИПомещения
	|		ПО (СкладыИПомещения.Владелец = Склады.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТоварыЗаказа КАК СкладыЗаказа
	|		ПО (СкладыЗаказа.Склад = Склады.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	СкладыИПомещения.Ссылка,
	|	ВЫБОР
	|		КОГДА Склады.Ссылка.ИспользоватьСкладскиеПомещения
	|				И &Дата >= Склады.Ссылка.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА СкладыИПомещения.Ссылка.ИспользоватьАдресноеХранение
	|							И &Дата >= СкладыИПомещения.Ссылка.ДатаНачалаАдресногоХраненияОстатков
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Склады.Ссылка.ИспользоватьАдресноеХранение
	|						И &Дата >= Склады.Ссылка.ДатаНачалаАдресногоХраненияОстатков
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	Склады.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВЯчейкахОстатки.Назначение,
	|	ТоварыВЯчейкахОстатки.Назначение.ДвиженияПоСкладскимРегистрам КАК НазначениеДвиженияПоСкладскимРегистрам,
	|	ТоварыВЯчейкахОстатки.Номенклатура,
	|	ТоварыВЯчейкахОстатки.Характеристика,
	|	ТоварыВЯчейкахОстатки.Серия,
	|	ТоварыВЯчейкахОстатки.Склад,
	|	ТоварыВЯчейкахОстатки.Помещение,
	|	ТоварыВЯчейкахОстатки.Упаковка,
	|	ТоварыВЯчейкахОстатки.Ячейка,
	|	ТоварыВЯчейкахОстатки.ВНаличии,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК Коэффициент,
	|	ТоварыВЯчейкахОстатки.СвободныйОстаток,
	|	ТоварыВЯчейкахОстатки.Количество
	|ПОМЕСТИТЬ Таблица
	|ИЗ
	|	ТоварыВЯчейкахОстатки КАК ТоварыВЯчейкахОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СкладыИПомещения КАК СкладыИПомещения
	|		ПО ТоварыВЯчейкахОстатки.Склад = СкладыИПомещения.Склад
	|			И ТоварыВЯчейкахОстатки.Помещение = СкладыИПомещения.Помещение
	|ГДЕ
	|	СкладыИПомещения.ИспользоватьАдресноеХранение = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Назначение,
	|	ТоварыНаСкладахОстатки.Назначение.ДвиженияПоСкладскимРегистрам,
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика,
	|	ТоварыНаСкладахОстатки.Серия,
	|	ТоварыНаСкладахОстатки.Склад,
	|	ТоварыНаСкладахОстатки.Помещение,
	|	СправочникНоменклатура.ЕдиницаИзмерения,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка),
	|	ТоварыНаСкладахОстатки.ВНаличии,
	|	1,
	|	ТоварыНаСкладахОстатки.СвободныйОстаток,
	|	ТоварыНаСкладахОстатки.Количество
	|ИЗ
	|	ТоварыНаСкладахОстатки КАК ТоварыНаСкладахОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СкладыИПомещения КАК СкладыИПомещения
	|		ПО ТоварыНаСкладахОстатки.Помещение = СкладыИПомещения.Помещение
	|			И ТоварыНаСкладахОстатки.Склад = СкладыИПомещения.Склад
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СкладыИПомещения.ИспользоватьАдресноеХранение = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Назначение,
	|	ЛОЖЬ,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.Серия,
	|	ТоварыОрганизаций.Склад,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	СправочникНоменклатура.ЕдиницаИзмерения,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка),
	|	ТоварыОрганизаций.ВНаличии,
	|	1,
	|	ТоварыОрганизаций.СвободныйОстаток,
	|	ТоварыОрганизаций.Количество
	|ИЗ
	|	ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТоварыОрганизаций.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	НЕ ТоварыОрганизаций.Назначение.ДвиженияПоСкладскимРегистрам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Назначение КАК Назначение,
	|	Таблица.НазначениеДвиженияПоСкладскимРегистрам КАК НазначениеДвиженияПоСкладскимРегистрам,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Серия КАК Серия,
	|	Таблица.Склад КАК Склад,
	|	СУММА(Таблица.ВНаличии * Таблица.Коэффициент) КАК Обеспечено,
	|	СУММА(Таблица.ВНаличии) КАК ОбеспеченоУпаковок,
	|	Таблица.Помещение КАК Помещение,
	|	ВЫБОР
	|		КОГДА Таблица.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА Таблица.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ КАК Упаковка,
	|	Таблица.Ячейка КАК Ячейка,
	|	МАКСИМУМ(Таблица.СвободныйОстаток) КАК СвободныйОстаток,
	|	МАКСИМУМ(Таблица.Количество) КАК Количество
	|ИЗ
	|	Таблица КАК Таблица
	|ГДЕ
	|	Таблица.ВНаличии > 0
	|	И (Таблица.Помещение <> ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			ИЛИ Таблица.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			ИЛИ Таблица.Ячейка <> ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Серия,
	|	Таблица.Склад,
	|	Таблица.Назначение,
	|	Таблица.НазначениеДвиженияПоСкладскимРегистрам,
	|	Таблица.Помещение,
	|	Таблица.Упаковка,
	|	Таблица.Ячейка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Назначение,
	|	Номенклатура,
	|	Характеристика,
	|	Склад,
	|	Помещение,
	|	Ячейка,
	|	Серия";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТоварыВЯчейкахОстатки.Упаковка",
			"ТоварыВЯчейкахОстатки.Номенклатура"));
			
	Если ТолькоОтмеченные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОтметке", "таб.Отметка");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОтметке", "Истина");
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Запрос.УстановитьПараметр("Регистратор",	 Ссылка);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

Процедура СлитьТаблицыПоСкладуИПомещениям(ТаблицаПоСкладамВЦелом, ТаблицаПомещенияЯчейки) Экспорт
	
	Если ТаблицаПоСкладамВЦелом.Колонки.Найти("Серия") = Неопределено Тогда
		ТаблицаПоСкладамВЦелом.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	КонецЕсли;
	Если ТаблицаПоСкладамВЦелом.Колонки.Найти("Помещение") = Неопределено Тогда
		ТаблицаПоСкладамВЦелом.Колонки.Добавить("Помещение", Новый ОписаниеТипов("СправочникСсылка.СкладскиеПомещения"));
	КонецЕсли;
	Если ТаблицаПоСкладамВЦелом.Колонки.Найти("Ячейка") = Неопределено Тогда
		ТаблицаПоСкладамВЦелом.Колонки.Добавить("Ячейка", Новый ОписаниеТипов("СправочникСсылка.СкладскиеЯчейки"));
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("Назначение, Номенклатура, Характеристика, Склад");
	
	СтрокиКУдалению = Новый Массив();
	
	Для ИндексСтроки = 0 По ТаблицаПоСкладамВЦелом.Количество() - 1 Цикл
		
		Строка = ТаблицаПоСкладамВЦелом[ИндексСтроки];
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
		СтруктураПоиска.Назначение = Строка.ИсходноеНазначение;
		
		НайденныеСтроки = ТаблицаПомещенияЯчейки.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			КоличествоОстаток = Строка.Количество;
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НоваяСтрока = ТаблицаПоСкладамВЦелом.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока, "Помещение, Ячейка, Серия, Упаковка, Количество");
				
				Если НайденнаяСтрока.Обеспечено > КоличествоОстаток Тогда
					НоваяСтрока.Количество = КоличествоОстаток;
					КоличествоОстаток = 0;
				Иначе
					НоваяСтрока.Количество = НайденнаяСтрока.Обеспечено;
					КоличествоОстаток = КоличествоОстаток - НайденнаяСтрока.Обеспечено;
				КонецЕсли;
				
			КонецЦикла;
			
			СтрокиКУдалению.Добавить(Строка); // Текущая строка заменена на строки из таблицы по помещениям
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ТаблицаПоСкладамВЦелом.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
КонецПроцедуры

Функция ПостобработкаТаблицыТовары(ТаблицаТовары, Операция, Организация = Неопределено, КорректировкаНазначения = Неопределено) Экспорт
	
	ЕстьИзмененияКоличества = Ложь;
	
	
	Возврат ЕстьИзмененияКоличества;
	
КонецФункции


Функция ВременнаяТаблицаОбеспечениеЗаказовОстатки(ВидОперации, ЕстьОтборПоОрганизации, ЕстьОтборПоНоменклатуре)
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаОстатков.Назначение             КАК Назначение,
		|	ТаблицаОстатков.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатков.Характеристика         КАК Характеристика,
		|	ТаблицаОстатков.Склад                  КАК Склад,
		|	ТаблицаОстатков.НаличиеПодЗаказОстаток КАК НаличиеПодЗаказ,
		|	ТаблицаОстатков.КЗаказуОстаток         КАК КЗаказу,
		|	ТаблицаОстатков.ПотребностьОстаток     КАК Потребность
		|ПОМЕСТИТЬ ВТОбеспечениеЗаказовОстатки
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Остатки(, &ПараметрыВиртуальнойТаблицы) КАК ТаблицаОстатков
		|ГДЕ
		|	&УсловиеТаблицаОстатков";
		
	Если ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезервПоМногимНазначениям И ЕстьОтборПоОрганизации Тогда
		
		УсловиеТаблицаОстатков      = "ТаблицаОстатков.Назначение.Заказ.Организация = &Организация И ТаблицаОстатков.НаличиеПодЗаказОстаток > 0";
		
		ПараметрыВиртуальнойТаблицы = "ИСТИНА";
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезервПоМногимНазначениям И Не ЕстьОтборПоОрганизации Тогда
		
		УсловиеТаблицаОстатков      = "ТаблицаОстатков.НаличиеПодЗаказОстаток > 0";
		
		ПараметрыВиртуальнойТаблицы = "ИСТИНА";
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезерв Тогда
		
		УсловиеТаблицаОстатков      = "ТаблицаОстатков.НаличиеПодЗаказОстаток > 0";
		
		ПараметрыВиртуальнойТаблицы = "Назначение = &Назначение";
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.Резервировать
		Или ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.РезервироватьИКорректировать Тогда
		
		УсловиеТаблицаОстатков      = "ИСТИНА";
		ПараметрыВиртуальнойТаблицы = "Назначение = &Назначение";
		
	КонецЕсли;
	
	Если ЕстьОтборПоНоменклатуре Тогда
		
		ТекстЗапросаВТТребуемыеТовары = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура   КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ВТТребуемыеТовары
		|ИЗ
		|	&ТребуемыеТовары КАК Товары
		|
		|;
		|";
		
		ТекстЗапроса = ТекстЗапросаВТТребуемыеТовары + ТекстЗапроса;
		
		УсловиеТаблицаОстатков = УсловиеТаблицаОстатков
			+ " И (ТаблицаОстатков.Номенклатура, ТаблицаОстатков.Характеристика) В (ВЫБРАТЬ Товары.Номенклатура, Товары.Характеристика ИЗ ВТТребуемыеТовары КАК Товары)";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеТаблицаОстатков",      УсловиеТаблицаОстатков);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПараметрыВиртуальнойТаблицы", ПараметрыВиртуальнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаОбеспечениеЗаказовОстаткиСУчетомКорректировки(ВидОперации, ЕстьОтборПоОрганизации, ЕстьОтборПоНоменклатуре)
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Набор.Назначение      КАК Назначение,
		|	Набор.Номенклатура    КАК Номенклатура,
		|	Набор.Характеристика  КАК Характеристика,
		|	Набор.Склад           КАК Склад,
		|	СУММА(Набор.НаличиеПодЗаказ) КАК НаличиеПодЗаказ,
		|	СУММА(Набор.КЗаказу)         КАК КЗаказу,
		|	СУММА(Набор.Потребность)     КАК Потребность
		|ПОМЕСТИТЬ ВТОбеспечениеЗаказовОстатки
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТаблицаОстатков.Назначение             КАК Назначение,
		|		ТаблицаОстатков.Номенклатура           КАК Номенклатура,
		|		ТаблицаОстатков.Характеристика         КАК Характеристика,
		|		ТаблицаОстатков.Склад                  КАК Склад,
		|		ТаблицаОстатков.НаличиеПодЗаказОстаток КАК НаличиеПодЗаказ,
		|		ТаблицаОстатков.КЗаказуОстаток         КАК КЗаказу,
		|		ТаблицаОстатков.ПотребностьОстаток     КАК Потребность
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказов.Остатки(, &ПараметрыВиртуальнойТаблицы) КАК ТаблицаОстатков
		|	ГДЕ
		|		&УсловиеТаблицаОстатков
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДвиженияДокумента.Назначение             КАК Назначение,
		|		ДвиженияДокумента.Номенклатура           КАК Номенклатура,
		|		ДвиженияДокумента.Характеристика         КАК Характеристика,
		|		ДвиженияДокумента.Склад                  КАК Склад,
		|		
		|		ВЫБОР КОГДА ДвиженияДокумента.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Расход) ТОГДА
		|					ДвиженияДокумента.НаличиеПодЗаказ
		|				ИНАЧЕ
		|					-ДвиженияДокумента.НаличиеПодЗаказ
		|			КОНЕЦ                                КАК НаличиеПодЗаказ,
		|		
		|		ВЫБОР КОГДА ДвиженияДокумента.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Расход) ТОГДА
		|					ДвиженияДокумента.КЗаказу
		|				ИНАЧЕ
		|					-ДвиженияДокумента.КЗаказу
		|			КОНЕЦ                                КАК КЗаказу,
		|		
		|		ВЫБОР КОГДА ДвиженияДокумента.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Расход) ТОГДА
		|					ДвиженияДокумента.Потребность
		|				ИНАЧЕ
		|					-ДвиженияДокумента.Потребность
		|			КОНЕЦ                                КАК Потребность
		|		ИЗ
		|			РегистрНакопления.ОбеспечениеЗаказов КАК ДвиженияДокумента
		|		ГДЕ
		|			ДвиженияДокумента.Активность
		|			И ДвиженияДокумента.Регистратор = &ТекущаяКорректировка
		|			И &УсловиеТаблицаДвижений) КАК Набор
		|	
		|СГРУППИРОВАТЬ ПО
		|	Набор.Назначение, Набор.Номенклатура, Набор.Характеристика, Набор.Склад
		|	
		|ИМЕЮЩИЕ
		|	&УсловиеГруппировкиНабора = ИСТИНА";
		
	Если ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезервПоМногимНазначениям И ЕстьОтборПоОрганизации Тогда
		
		УсловиеТаблицаОстатков      = "ТаблицаОстатков.Назначение.Заказ.Организация = &Организация";
		УсловиеТаблицаДвижений      = "ДвиженияДокумента.Назначение.Заказ.Организация = &Организация";
		
		УсловиеГруппировкиНабора    = "СУММА(Набор.НаличиеПодЗаказ) > 0";
		ПараметрыВиртуальнойТаблицы = "ИСТИНА";
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезервПоМногимНазначениям И Не ЕстьОтборПоОрганизации Тогда
		
		УсловиеТаблицаОстатков      = "ИСТИНА";
		УсловиеТаблицаДвижений      = "ИСТИНА";
		
		УсловиеГруппировкиНабора    = "СУММА(Набор.НаличиеПодЗаказ) > 0";
		ПараметрыВиртуальнойТаблицы = "ИСТИНА";
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезерв Тогда
		
		УсловиеТаблицаОстатков      = "ИСТИНА";
		УсловиеТаблицаДвижений      = "ДвиженияДокумента.Назначение = &Назначение";
		
		УсловиеГруппировкиНабора    = "СУММА(Набор.НаличиеПодЗаказ) > 0";
		ПараметрыВиртуальнойТаблицы = "Назначение = &Назначение";
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.Резервировать
		Или ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.РезервироватьИКорректировать Тогда
		
		УсловиеТаблицаОстатков      = "ИСТИНА";
		УсловиеТаблицаДвижений      = "ДвиженияДокумента.Назначение = &Назначение";
		УсловиеГруппировкиНабора    = "ИСТИНА";
		ПараметрыВиртуальнойТаблицы = "Назначение = &Назначение";
		
	КонецЕсли;
	
	Если ЕстьОтборПоНоменклатуре Тогда
		
		ТекстЗапросаВТТребуемыеТовары = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура   КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ВТТребуемыеТовары
		|ИЗ
		|	&ТребуемыеТовары КАК Товары
		|
		|;
		|";
		
		ТекстЗапроса = ТекстЗапросаВТТребуемыеТовары + ТекстЗапроса;
		
		УсловиеТаблицаОстатков = УсловиеТаблицаОстатков
			+ " И (ТаблицаОстатков.Номенклатура, ТаблицаОстатков.Характеристика) В (ВЫБРАТЬ Товары.Номенклатура, Товары.Характеристика ИЗ ВТТребуемыеТовары КАК Товары)";
		УсловиеТаблицаДвижений = УсловиеТаблицаДвижений
			+ " И (ДвиженияДокумента.Номенклатура, ДвиженияДокумента.Характеристика) В (ВЫБРАТЬ Товары.Номенклатура, Товары.Характеристика ИЗ ВТТребуемыеТовары КАК Товары)";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеТаблицаОстатков", УсловиеТаблицаОстатков);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеТаблицаДвижений", УсловиеТаблицаДвижений);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеГруппировкиНабора", УсловиеГруппировкиНабора);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПараметрыВиртуальнойТаблицы", ПараметрыВиртуальнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаСкладыОтгрузки()
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Склад          КАК Склад,
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Назначение     КАК Назначение
		|ПОМЕСТИТЬ ВтСкладыОтгрузки
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Остатки(, 
		|			(Назначение, Склад, Номенклатура, Характеристика)
		|			В (ВЫБРАТЬ 
		|					Т.Назначение, 
		|					Т.Склад, 
		|					Т.Номенклатура, 
		|					Т.Характеристика 
		|				ИЗ ВтОбеспечениеЗаказовОстатки КАК Т)
		|			И НЕ Склад ЕСТЬ NULL) КАК Таблица
		|ГДЕ
		|	
		|	Таблица.ПотребностьОстаток > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаСвободныеОстатки()
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаОтбора.Номенклатура   КАК Номенклатура,
		|	ТаблицаОтбора.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	ВтОбеспечениеЗаказовОстатки КАК ТаблицаОтбора
		|;
		|/////////////////////////////////
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Набор.Номенклатура      КАК Номенклатура,
		|	Набор.Характеристика    КАК Характеристика,
		|	Набор.Склад             КАК Склад,
		|	СУММА(Набор.Количество) КАК Количество
		|ПОМЕСТИТЬ ВтСвободныеОстатки
		|ИЗ(
		|	ВЫБРАТЬ
		|		СвободныеОстатки.Номенклатура   КАК Номенклатура,
		|		СвободныеОстатки.Характеристика КАК Характеристика,
		|		СвободныеОстатки.Склад          КАК Склад,
		|		СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеСоСкладаОстаток - СвободныеОстатки.ВРезервеПодЗаказОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.СвободныеОстатки.Остатки(,
		|			(Номенклатура, Характеристика) В(
		|				ВЫБРАТЬ
		|					ТаблицаОтбора.Номенклатура   КАК Номенклатура,
		|					ТаблицаОтбора.Характеристика КАК Характеристика
		|				ИЗ
		|					ВтТовары КАК ТаблицаОтбора)) КАК СвободныеОстатки
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ТаблицаОтбора.Номенклатура   КАК Номенклатура,
		|			ТаблицаОтбора.Характеристика КАК Характеристика,
		|			РезервыИзЗаказов.Склад       КАК Склад,
		|			РезервыИзЗаказов.Количество  КАК Количество
		|		ИЗ
		|			ВтТовары КАК ТаблицаОтбора
		|				
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК РезервыИзЗаказов
		|				ПО РезервыИзЗаказов.Номенклатура = ТаблицаОтбора.Номенклатура
		|				 И РезервыИзЗаказов.Характеристика = ТаблицаОтбора.Характеристика
		|				 И РезервыИзЗаказов.ДатаДоступности = ДАТАВРЕМЯ(1, 1, 1)
		|				 И РезервыИзЗаказов.Количество < 0) КАК Набор
		|СГРУППИРОВАТЬ ПО
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Склад
		|ИМЕЮЩИЕ
		|	СУММА(Набор.Количество) > 0";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаСвободныеОстаткиСУчетомКорректировки() 
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаОтбора.Номенклатура   КАК Номенклатура,
		|	ТаблицаОтбора.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	ВтОбеспечениеЗаказовОстатки КАК ТаблицаОтбора
		|;
		|/////////////////////////////////
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Набор.Номенклатура      КАК Номенклатура,
		|	Набор.Характеристика    КАК Характеристика,
		|	Набор.Склад             КАК Склад,
		|	СУММА(Набор.Количество) КАК Количество
		|ПОМЕСТИТЬ ВтСвободныеОстатки
		|ИЗ(
		|	ВЫБРАТЬ
		|		СвободныеОстатки.Номенклатура   КАК Номенклатура,
		|		СвободныеОстатки.Характеристика КАК Характеристика,
		|		СвободныеОстатки.Склад          КАК Склад,
		|		СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеСоСкладаОстаток - СвободныеОстатки.ВРезервеПодЗаказОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.СвободныеОстатки.Остатки(,
		|			(Номенклатура, Характеристика) В(
		|				ВЫБРАТЬ
		|					ТаблицаОтбора.Номенклатура   КАК Номенклатура,
		|					ТаблицаОтбора.Характеристика КАК Характеристика
		|				ИЗ
		|					ВтТовары КАК ТаблицаОтбора)) КАК СвободныеОстатки
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ТаблицаОтбора.Номенклатура   КАК Номенклатура,
		|			ТаблицаОтбора.Характеристика КАК Характеристика,
		|			РезервыИзЗаказов.Склад       КАК Склад,
		|			РезервыИзЗаказов.Количество  КАК Количество
		|		ИЗ
		|			ВтТовары КАК ТаблицаОтбора
		|				
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК РезервыИзЗаказов
		|				ПО РезервыИзЗаказов.Номенклатура = ТаблицаОтбора.Номенклатура
		|				 И РезервыИзЗаказов.Характеристика = ТаблицаОтбора.Характеристика
		|				 И РезервыИзЗаказов.ДатаДоступности = ДАТАВРЕМЯ(1, 1, 1)
		|				 И РезервыИзЗаказов.Количество < 0
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ДвиженияДокумента.Номенклатура            КАК Номенклатура,
		|			ДвиженияДокумента.Характеристика          КАК Характеристика,
		|			ДвиженияДокумента.Склад                   КАК Склад,
		|			
		|			ВЫБОР КОГДА ДвиженияДокумента.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Расход) ТОГДА
		|						ДвиженияДокумента.ВНаличии - ДвиженияДокумента.ВРезервеСоСклада - ДвиженияДокумента.ВРезервеПодЗаказ
		|					ИНАЧЕ
		|						-(ДвиженияДокумента.ВНаличии - ДвиженияДокумента.ВРезервеСоСклада - ДвиженияДокумента.ВРезервеПодЗаказ)
		|				КОНЕЦ                                 КАК Количество
		|	ИЗ
		|		РегистрНакопления.СвободныеОстатки КАК ДвиженияДокумента
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВтТовары КАК ТаблицаОтбора
		|			ПО ТаблицаОтбора.Номенклатура  = ДвиженияДокумента.Номенклатура
		|			 И ТаблицаОтбора.Характеристика = ДвиженияДокумента.Характеристика
		|		ГДЕ
		|			ДвиженияДокумента.Активность
		|			И ДвиженияДокумента.Регистратор = &ТекущаяКорректировка) КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Склад
		|ИМЕЮЩИЕ
		|	СУММА(Набор.Количество) > 0";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаОбеспечениеЗаказовОстаткиНазначений(ВидОперации, ЕстьОтборПоОрганизации)
	
	// Обращение к ссылке заказа через точку позволяет отработать механизмам RLS.
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаОстатков.Назначение              КАК Назначение,
		|	ТаблицаОстатков.Номенклатура            КАК Номенклатура,
		|	ТаблицаОстатков.Характеристика          КАК Характеристика,
		|	ТаблицаОстатков.Склад                   КАК Склад,
		|	ТаблицаОстатков.НаличиеПодЗаказОстаток  КАК НаличиеПодЗаказ,
		|	ЕСТЬNULL(ТаблицаОстатков.Назначение.Заказ.Ссылка, НЕОПРЕДЕЛЕНО) КАК Заказ
		|
		|ПОМЕСТИТЬ ВтОбеспечениеЗаказовОстаткиНазначений
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Остатки(,
		|		Назначение <> &Назначение
		|		И (Номенклатура, Характеристика) В(
		|			ВЫБРАТЬ
		|				ТаблицаОтбора.Номенклатура   КАК Номенклатура,
		|				ТаблицаОтбора.Характеристика КАК Характеристика
		|			ИЗ
		|				ВтТовары КАК ТаблицаОтбора)) КАК ТаблицаОстатков
		|ГДЕ
		|	ТаблицаОстатков.НаличиеПодЗаказОстаток > 0
		|	И &ЭтоОперацияРезервироватьИКорректировать
		|	И &УсловиеТаблицыОстатков
		// Назначение под заказ или под партнера.
		|	И (НЕ ТаблицаОстатков.Назначение.Заказ ЕСТЬ NULL
		|		ИЛИ ТаблицаОстатков.Назначение.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
		|";
	
	Если ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.РезервироватьИКорректировать Тогда
		ЭтоОперацияРезервироватьИКорректировать = "ИСТИНА";
	Иначе
		ЭтоОперацияРезервироватьИКорректировать = "ЛОЖЬ";
	КонецЕсли;
	
	Если ЕстьОтборПоОрганизации Тогда
		УсловиеТаблицыОстатков = "(ТаблицаОстатков.Назначение.Заказ.Организация = &Организация
									|ИЛИ ТаблицаОстатков.Назначение.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))";
	Иначе
		УсловиеТаблицыОстатков = "ИСТИНА";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЭтоОперацияРезервироватьИКорректировать", ЭтоОперацияРезервироватьИКорректировать);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеТаблицыОстатков", УсловиеТаблицыОстатков);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаОбеспечениеЗаказовОстаткиНазначенийСУчетомКорректировки(ВидОперации, ЕстьОтборПоОрганизации)
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Набор.Назначение                                      КАК Назначение,
		|	Набор.Номенклатура                                    КАК Номенклатура,
		|	Набор.Характеристика                                  КАК Характеристика,
		|	Набор.Склад                                           КАК Склад,
		|
		|	СУММА(Набор.НаличиеПодЗаказ)                          КАК НаличиеПодЗаказ,
		|
		|	Набор.Заказ                                           КАК Заказ
		|
		|ПОМЕСТИТЬ ВтОбеспечениеЗаказовОстаткиНазначений
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТаблицаОстатков.Назначение              КАК Назначение,
		|		ЕСТЬNULL(ТаблицаОстатков.Назначение.Заказ.Ссылка,
		|			НЕОПРЕДЕЛЕНО)                       КАК Заказ,
		|		ТаблицаОстатков.Номенклатура            КАК Номенклатура,
		|		ТаблицаОстатков.Характеристика          КАК Характеристика,
		|		ТаблицаОстатков.Склад                   КАК Склад,
		|		ТаблицаОстатков.НаличиеПодЗаказОстаток  КАК НаличиеПодЗаказ
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказов.Остатки(,
		|			Назначение <> &Назначение
		|			И (Номенклатура, Характеристика) В(
		|				ВЫБРАТЬ
		|					ТаблицаОтбора.Номенклатура   КАК Номенклатура,
		|					ТаблицаОтбора.Характеристика КАК Характеристика
		|				ИЗ
		|					ВтТовары КАК ТаблицаОтбора)) КАК ТаблицаОстатков
		|	ГДЕ
		|		&ЭтоОперацияРезервироватьИКорректировать
		|		И &УсловиеТаблицыОстатков
		|		И (ТаблицаОстатков.Назначение.Заказ = НЕОПРЕДЕЛЕНО ИЛИ НЕ ТаблицаОстатков.Назначение.Заказ.Ссылка ЕСТЬ NULL) // проверка что к заказу есть доступ
		|		
		|	ОБЪЕДИНИТЬ ВСЕ
		|		
		|	ВЫБРАТЬ
		|		ДвиженияДокумента.Назначение              КАК Назначение,
		|		ЕСТЬNULL(ДвиженияДокумента.Назначение.Заказ.Ссылка,
		|			НЕОПРЕДЕЛЕНО)                         КАК Заказ,
		|		ДвиженияДокумента.Номенклатура            КАК Номенклатура,
		|		ДвиженияДокумента.Характеристика          КАК Характеристика,
		|		ДвиженияДокумента.Склад                   КАК Склад,
		|		
		|		ВЫБОР КОГДА ДвиженияДокумента.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Расход) ТОГДА
		|					ДвиженияДокумента.НаличиеПодЗаказ
		|				ИНАЧЕ
		|					-ДвиженияДокумента.НаличиеПодЗаказ
		|		КОНЕЦ                                     КАК НаличиеПодЗаказ
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказов КАК ДвиженияДокумента
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВтТовары КАК ТаблицаОтбора
		|			ПО ТаблицаОтбора.Номенклатура  = ДвиженияДокумента.Номенклатура
		|			 И ТаблицаОтбора.Характеристика = ДвиженияДокумента.Характеристика
		|		ГДЕ
		|			ДвиженияДокумента.Активность
		|			И ДвиженияДокумента.Регистратор = &ТекущаяКорректировка
		|			И Назначение <> &Назначение
		|			И НЕ ТаблицаОтбора.Номенклатура ЕСТЬ NULL
		|			И &ЭтоОперацияРезервироватьИКорректировать
		|			И &УсловиеТаблицыДвижений
		|			И (ДвиженияДокумента.Назначение.Заказ = НЕОПРЕДЕЛЕНО ИЛИ НЕ ДвиженияДокумента.Назначение.Заказ.Ссылка ЕСТЬ NULL) // проверка что к заказу есть доступ
		|	)КАК Набор
		|
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Назначение,
		|	Набор.Номенклатура,
		|	Набор.Характеристика,
		|	Набор.Склад,
		|	Набор.Заказ
		|	
		|ИМЕЮЩИЕ
		|	СУММА(Набор.НаличиеПодЗаказ) > 0";
		
	Если ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.РезервироватьИКорректировать Тогда
		ЭтоОперацияРезервироватьИКорректировать = "ИСТИНА";
	Иначе
		ЭтоОперацияРезервироватьИКорректировать = "ЛОЖЬ";
	КонецЕсли;
	
	Если ЕстьОтборПоОрганизации Тогда
		УсловиеТаблицыОстатков = "(ТаблицаОстатков.Назначение.Заказ.Организация = &Организация
									|ИЛИ ТаблицаОстатков.Назначение.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))";
		УсловиеТаблицыДвижений = "(ДвиженияДокумента.Назначение.Заказ.Организация = &Организация
									|ИЛИ ДвиженияДокумента.Назначение.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))";
	Иначе
		УсловиеТаблицыОстатков = "ИСТИНА";
		УсловиеТаблицыДвижений = "ИСТИНА";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЭтоОперацияРезервироватьИКорректировать", ЭтоОперацияРезервироватьИКорректировать);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеТаблицыОстатков", УсловиеТаблицыОстатков);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеТаблицыДвижений", УсловиеТаблицыДвижений);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаСводнаяРезервыОстатки()
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Назначение КАК Назначение
		|ПОМЕСТИТЬ ВтНазначения
		|ИЗ
		|	ВтОбеспечениеЗаказовОстатки КАК Таблица
		|;
		|/////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Набор.Назначение         КАК Назначение,
		|	Набор.НазначениеИсточник КАК НазначениеИсточник,
		|	Набор.Номенклатура       КАК Номенклатура,
		|	Набор.Характеристика     КАК Характеристика,
		|	ПРЕДСТАВЛЕНИЕ(Набор.Склад) КАК СкладПредставление,
		|	Набор.ИсточникПредставление КАК ИсточникПредставление,
		|	Набор.Склад              КАК Склад,
		|	СУММА(Набор.ВНаличии)    КАК ВНаличии,
		|	СУММА(Набор.Обеспечено)  КАК Обеспечено,
		|	СУММА(Набор.Доступно)    КАК Доступно,
		|	СУММА(Набор.Потребность) КАК Потребность,
		|
		|	МАКСИМУМ(Набор.ЗаказИсточник) КАК ЗаказИсточник
		|
		|ПОМЕСТИТЬ ВтСводнаяРезервыОстатки
		|ИЗ(
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК НазначениеИсточник,
		|		НЕОПРЕДЕЛЕНО                  КАК ЗаказИсточник,
		|		""""                          КАК ИсточникПредставление,
		|		Таблица.Назначение            КАК Назначение,
		|		Таблица.Номенклатура          КАК Номенклатура,
		|		Таблица.Характеристика        КАК Характеристика,
		|		Таблица.Склад                 КАК Склад,
		|		Таблица.НаличиеПодЗаказ       КАК ВНаличии,
		|		Таблица.Потребность
		|			- Таблица.КЗаказу         КАК Обеспечено,
		|		Таблица.Потребность           КАК Потребность,
		|		0                             КАК Доступно
		|	ИЗ
		|		ВтОбеспечениеЗаказовОстатки КАК Таблица
		|		
		|	ОБЪЕДИНИТЬ ВСЕ
		|		
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК НазначениеИсточник,
		|		НЕОПРЕДЕЛЕНО                  КАК ЗаказИсточник,
		|		""""                          КАК ИсточникПредставление,
		|		ТаблицаНазначений.Назначение  КАК Назначение,
		|		Таблица.Номенклатура          КАК Номенклатура,
		|		Таблица.Характеристика        КАК Характеристика,
		|		Таблица.Склад                 КАК Склад,
		|		0                             КАК ВНаличии,
		|		0                             КАК Обеспечено,
		|		0                             КАК Потребность,
		|		Таблица.Количество            КАК Доступно
		|	ИЗ
		|		ВтНазначения КАК ТаблицаНазначений
		|		
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВтСвободныеОстатки КАК Таблица
		|			ПО ИСТИНА
		|	ГДЕ
		|		НЕ Таблица.Номенклатура ЕСТЬ NULL
		|		
		|	ОБЪЕДИНИТЬ ВСЕ
		|		
		|	ВЫБРАТЬ
		|		ТаблицаНазначенийИсточников.Назначение      КАК НазначениеИсточник,
		|		ТаблицаНазначенийИсточников.Заказ           КАК ЗаказИсточник,
		|		
		|		ВЫБОР КОГДА ТаблицаНазначенийИсточников.Заказ <> НЕОПРЕДЕЛЕНО ТОГДА
		|						ПРЕДСТАВЛЕНИЕ(ТаблицаНазначенийИсточников.Заказ)
		|					ИНАЧЕ
		|						ПРЕДСТАВЛЕНИЕ(ТаблицаНазначенийИсточников.Назначение)
		|			КОНЕЦ                                        КАК ИсточникПредставление,
		|		
		|		ТаблицаНовыхНазначений.Назначение           КАК Назначение,
		|		ТаблицаНазначенийИсточников.Номенклатура    КАК Номенклатура,
		|		ТаблицаНазначенийИсточников.Характеристика  КАК Характеристика,
		|		ТаблицаНазначенийИсточников.Склад           КАК Склад,
		|		0                                           КАК ВНаличии,
		|		0                                           КАК Обеспечено,
		|		0                                           КАК Потребность,
		|		ТаблицаНазначенийИсточников.НаличиеПодЗаказ КАК Доступно
		|	ИЗ
		|		ВтНазначения КАК ТаблицаНовыхНазначений
		|		
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОбеспечениеЗаказовОстаткиНазначений КАК ТаблицаНазначенийИсточников
		|			ПО ИСТИНА
		|			
		|	
		|	) КАК Набор
		|СГРУППИРОВАТЬ ПО
		|	Набор.Назначение,
		|	Набор.НазначениеИсточник,
		|	Набор.Номенклатура,
		|	Набор.Характеристика,
		|	Набор.Склад,
		|	Набор.ИсточникПредставление";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТаблицаИсточниковОбеспеченияПеремещением()
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	
		|	Таблица.Склад          КАК СкладПолучатель,
		|	Таблица.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей КАК СкладОтправитель,
		|
		|	1 КАК Уровень
		|ИЗ
		|	ВтСпособыОбеспечения КАК Таблица
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика,
		|	СкладОтправитель, СкладПолучатель";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура РассчитатьИерархиюСкладов(ТаблицаИсходная)
	
	ГруппировкиПоТоварам = ОбеспечениеСервер.РазбитьТаблицуПоЗначениюКлюча(ТаблицаИсходная, "Номенклатура, Характеристика", "");
	Для Каждого Группировка Из ГруппировкиПоТоварам Цикл
		
		Таблица = Группировка.Таблица;
		Таблица.Индексы.Добавить("СкладПолучатель");
		
		ОбработкаЗавершена = Ложь;
		Пока Не ОбработкаЗавершена Цикл
			
			ОбработкаЗавершена = Истина;
			Для Каждого СтрокаТаблицы Из Группировка.Таблица Цикл
				
				НайденнаяСтрока = Таблица.Найти(СтрокаТаблицы.СкладОтправитель, "СкладПолучатель");
				Если НайденнаяСтрока <> Неопределено Тогда
					
					ОбработкаЗавершена = Ложь;
					СтрокаТаблицы.Уровень = СтрокаТаблицы.Уровень + НайденнаяСтрока.Уровень;
					СтрокаТаблицы.СкладОтправитель = НайденнаяСтрока.СкладОтправитель;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаИсходная.Очистить();
	Для Каждого Группировка Из ГруппировкиПоТоварам Цикл
		ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(ТаблицаИсходная, Группировка.Таблица);
	КонецЦикла;
	
КонецПроцедуры

Функция ВременнаяТаблицаСортировкаСкладов()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	
		|	Таблица.СкладПолучатель  КАК Склад,
		|	Таблица.СкладОтправитель КАК КорневойИсточник,
		|	Таблица.Уровень          КАК Уровень
		|ПОМЕСТИТЬ ВтИерархияСкладов
		|ИЗ
		|	&ТаблицаИерархииСкладов КАК Таблица
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад
		|
		|;
		|
		|///////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Назначение     КАК Назначение,
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	
		|	МАКСИМУМ(ЕСТЬNULL(ИерархияСкладов.Уровень, 0)
		|		+ ВЫБОР КОГДА ИерархияСкладов.КорневойИсточник = ИерархияСкладовСкладДокумента.КорневойИсточник
		|			И ИерархияСкладов.Уровень <= ИерархияСкладовСкладДокумента.Уровень ТОГДА
		|					1000
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ) КАК ПриоритетСклада
		|ПОМЕСТИТЬ ВтСортировкаСкладов
		|ИЗ
		|	ВтСводнаяРезервыОстатки КАК Таблица
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОбеспечениеЗаказовОстатки КАК ТаблицаДокумента
		|		ПО ТаблицаДокумента.Назначение     = Таблица.Назначение
		|		 И ТаблицаДокумента.Номенклатура   = Таблица.Номенклатура
		|		 И ТаблицаДокумента.Характеристика = Таблица.Характеристика
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтИерархияСкладов КАК ИерархияСкладовСкладДокумента
		|		ПО ИерархияСкладовСкладДокумента.Номенклатура   = Таблица.Номенклатура
		|		 И ИерархияСкладовСкладДокумента.Характеристика = Таблица.Характеристика
		|		 И ИерархияСкладовСкладДокумента.Склад          = ТаблицаДокумента.Склад
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтИерархияСкладов КАК ИерархияСкладов
		|		ПО ИерархияСкладов.Номенклатура   = Таблица.Номенклатура
		|		 И ИерархияСкладов.Характеристика = Таблица.Характеристика
		|		 И ИерархияСкладов.Склад          = Таблица.Склад
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Назначение, Таблица.Номенклатура, Таблица.Характеристика, Таблица.Склад
		|ИНДЕКСИРОВАТЬ ПО
		|	Назначение, Номенклатура, Характеристика, Склад";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТаблицаЗаполненияКорректировки(ВидОперации, ТолькоСкладОтгрузки, Отборы, ТекущаяКорректировка)
	
	ЭтоНовыйДокумент = Не ЗначениеЗаполнено(ТекущаяКорректировка);
	ЕстьОтборПоОрганизации = ЗначениеЗаполнено(Отборы.Организация);
	ЕстьОтборПоНоменклатуре = ЗначениеЗаполнено(Отборы.ТребуемыеТовары);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущаяКорректировка", ТекущаяКорректировка);
	Для Каждого Свойство Из Отборы Цикл
		Запрос.УстановитьПараметр(Свойство.Ключ, Свойство.Значение);
	КонецЦикла;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ЭтоНовыйДокумент Тогда
		ТекстЗапроса = ВременнаяТаблицаОбеспечениеЗаказовОстатки(ВидОперации, ЕстьОтборПоОрганизации, ЕстьОтборПоНоменклатуре);
	Иначе
		ТекстЗапроса = ВременнаяТаблицаОбеспечениеЗаказовОстаткиСУчетомКорректировки(ВидОперации, ЕстьОтборПоОрганизации, ЕстьОтборПоНоменклатуре);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Если ЭтоНовыйДокумент Тогда
		БлокТекста = ВременнаяТаблицаСвободныеОстатки() + ТекстРазделителяЗапросов()
			+ ВременнаяТаблицаОбеспечениеЗаказовОстаткиНазначений(ВидОперации, ЕстьОтборПоОрганизации) + ТекстРазделителяЗапросов();
	Иначе
		БлокТекста = ВременнаяТаблицаСвободныеОстаткиСУчетомКорректировки() + ТекстРазделителяЗапросов()
			+ ВременнаяТаблицаОбеспечениеЗаказовОстаткиНазначенийСУчетомКорректировки(ВидОперации, ЕстьОтборПоОрганизации) + ТекстРазделителяЗапросов();
	КонецЕсли;
	
	ТекстЗапроса = БлокТекста
		+ РегистрыСведений.СхемыОбеспечения.ВременнаяТаблицаСпособыОбеспеченияВсехСкладов(Перечисления.ТипыОбеспечения.Перемещение);

	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ТекстЗапроса = ВременнаяТаблицаСкладыОтгрузки() + ТекстРазделителяЗапросов()
		+ ВременнаяТаблицаСводнаяРезервыОстатки() + ТекстРазделителяЗапросов()
		+ ТаблицаИсточниковОбеспеченияПеремещением();
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Текст = ТекстЗапроса;
	ТаблицаИсточниковОбеспеченияПеремещением = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	РассчитатьИерархиюСкладов(ТаблицаИсточниковОбеспеченияПеремещением);
	Запрос.УстановитьПараметр("ТаблицаИерархииСкладов", ТаблицаИсточниковОбеспеченияПеремещением);
	
	ТекстЗапроса = "";
	ТекстЗапроса = ТекстЗапроса + ВременнаяТаблицаСортировкаСкладов() + ТекстРазделителяЗапросов();
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	Таблица.НазначениеИсточник  КАК НазначениеИсточник,
	|	Таблица.Назначение          КАК Назначение,
	|	Таблица.Номенклатура        КАК Номенклатура,
	|	Таблица.Характеристика      КАК Характеристика,
	|	Таблица.Склад               КАК Склад,
	|	Таблица.СкладПредставление     КАК СкладПредставление,
	|	Таблица.ИсточникПредставление  КАК ИсточникПредставление,
	|	
	|	Таблица.Доступно            КАК СвободныйОстаток,
	|	Таблица.ВНаличии            КАК ВНаличии,
	|	Таблица.Обеспечено
	|		- Таблица.ВНаличии      КАК ОбеспеченоОжидается,
	|	Таблица.Потребность         КАК Потребность,
	|	
	|	ВЫБОР КОГДА ТаблицаСкладовОтгрузки.Склад ЕСТЬ NULL ТОГДА
	|				ЛОЖЬ
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ                   КАК ПотребностьОсновногоСклада,
	|	
	|	ЕСТЬNULL(ТаблицаСортировкиСкладов.ПриоритетСклада, 0) КАК СортировкаСклада,
	|
	|	Таблица.Назначение.Заказ              КАК Заказ,
	|	Таблица.ЗаказИсточник                 КАК ЗаказИсточник,
	|	&ВыражениеНовоеНазначение             КАК НовоеНазначение,
	|	&ВыражениеИсходноеНазначение          КАК ИсходноеНазначение
	|
	|ИЗ
	|	ВтСводнаяРезервыОстатки КАК Таблица
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСортировкаСкладов КАК ТаблицаСортировкиСкладов
	|		ПО ТаблицаСортировкиСкладов.Склад          = Таблица.Склад
	|		 И ТаблицаСортировкиСкладов.Назначение     = Таблица.Назначение
	|		 И ТаблицаСортировкиСкладов.Номенклатура   = Таблица.Номенклатура
	|		 И ТаблицаСортировкиСкладов.Характеристика = Таблица.Характеристика
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСкладыОтгрузки КАК ТаблицаСкладовОтгрузки
	|		ПО ТаблицаСкладовОтгрузки.Склад          = Таблица.Склад
	|		 И ТаблицаСкладовОтгрузки.Номенклатура   = Таблица.Номенклатура
	|		 И ТаблицаСкладовОтгрузки.Характеристика = Таблица.Характеристика
	|		 И ТаблицаСкладовОтгрузки.Назначение     = Таблица.Назначение
	|ГДЕ
	|	&УсловиеОтбораСкладовОтгрузки
	|	И &УсловиеОтбораПоНаличию
	|УПОРЯДОЧИТЬ ПО
	|	Назначение, Номенклатура, Характеристика,
	|	СортировкаСклада УБЫВ,
	|	НазначениеИсточник,
	|	Потребность УБЫВ, ВНаличии УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Назначение          КАК Назначение,
	|	Таблица.Номенклатура        КАК Номенклатура,
	|	Таблица.Характеристика      КАК Характеристика,
	|	Таблица.Склад               КАК Склад,
	|	
	|	МАКСИМУМ(Таблица.ВНаличии)    КАК НаСкладе,
	|	МАКСИМУМ(Таблица.Обеспечено)  КАК Обеспечено,
	|	МАКСИМУМ(Таблица.Потребность) КАК Потребность,
	|	
	|	МАКСИМУМ(ВЫБОР КОГДА ТаблицаСкладовОтгрузки.Склад ЕСТЬ NULL ТОГДА
	|				ЛОЖЬ
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ)                   КАК ПотребностьОсновногоСклада,
	|	
	|	МАКСИМУМ(Таблица.Назначение.Заказ) КАК Заказ
	|
	|ИЗ
	|	ВтСводнаяРезервыОстатки КАК Таблица
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСкладыОтгрузки КАК ТаблицаСкладовОтгрузки
	|		ПО ТаблицаСкладовОтгрузки.Склад          = Таблица.Склад
	|		 И ТаблицаСкладовОтгрузки.Номенклатура   = Таблица.Номенклатура
	|		 И ТаблицаСкладовОтгрузки.Характеристика = Таблица.Характеристика
	|		 И ТаблицаСкладовОтгрузки.Назначение     = Таблица.Назначение
	|ГДЕ
	|	&УсловиеОтбораСкладовОтгрузки
	|	И &УсловиеОтбораПоНаличию
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Назначение, Таблица.Номенклатура, Таблица.Характеристика, Таблица.Склад
	|УПОРЯДОЧИТЬ ПО
	|	Назначение, Номенклатура, Характеристика,
	|	Потребность УБЫВ,
	|	НаСкладе УБЫВ";
	
	Если ТолькоСкладОтгрузки Тогда
		
		УсловиеОтбораСкладовОтгрузки = "НЕ ТаблицаСкладовОтгрузки.Склад ЕСТЬ NULL";
		
	Иначе
		
		УсловиеОтбораСкладовОтгрузки = "ИСТИНА";
		
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезерв
		Или ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезервПоМногимНазначениям Тогда
		
		УсловиеОтбораПоНаличию = "Таблица.ВНаличии > 0";
		
		ВыражениеИсходноеНазначение = "Таблица.Назначение";
		ВыражениеНовоеНазначение    = "НЕОПРЕДЕЛЕНО";
		
	Иначе
		
		УсловиеОтбораПоНаличию = "ИСТИНА";
		
		ВыражениеИсходноеНазначение = "Таблица.НазначениеИсточник";
		ВыражениеНовоеНазначение    = "Таблица.Назначение";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораСкладовОтгрузки", УсловиеОтбораСкладовОтгрузки);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоНаличию",       УсловиеОтбораПоНаличию);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеИсходноеНазначение",  ВыражениеИсходноеНазначение);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеНовоеНазначение",     ВыражениеНовоеНазначение);
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	ВсегоТаблиц = Результат.Количество();
	СтруктураВозврата = Новый Структура();
	СтруктураВозврата.Вставить("ТаблицаЗаполненияКорректировки", Результат[ВсегоТаблиц - 2].Выгрузить());
	СтруктураВозврата.Вставить("ТаблицаИтогов", Результат[ВсегоТаблиц - 1].Выгрузить());
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Возвращает признак того, имеются ли необходимые для обеспечения переданного назначения
// товары в свободном остатке на складах или зарезервированные в других заказах
//
// Параметры:
//  Назначение	 - СправочникСсылка.Назначения - 
//  Заказ		 - ДокументСсылка - Заказ, по товарам которого необходимо ограничить полученный список потребности назначения
//  ВидОперации	 - ПеречислениеСсылка.ВидыОперацийКорректировкиНазначения - Вид операции заказа
// 
// Возвращаемое значение:
//   - Булево
//
Функция ЕстьДоступныйРезервОстаток(Назначение, Заказ, ВидОперации) Экспорт
	
	Если Не ЗначениеЗаполнено(Назначение) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЭтоРезервирование = (ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.РезервироватьИКорректировать
		Или ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.Резервировать);
	
	ТребуемыеТовары         = МатериалыИзТабличнойЧастиДокумента(Заказ);
	ЕстьОтборПоНоменклатуре = ЗначениеЗаполнено(ТребуемыеТовары);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Назначение",      Назначение);
	Запрос.УстановитьПараметр("ТребуемыеТовары", ТребуемыеТовары);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = ВременнаяТаблицаОбеспечениеЗаказовОстатки(ВидОперации, Ложь, ЕстьОтборПоНоменклатуре);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Если ЭтоРезервирование Тогда
		ТекстЗапроса = ВременнаяТаблицаСвободныеОстатки() + ТекстРазделителяЗапросов()
		+ ВременнаяТаблицаОбеспечениеЗаказовОстаткиНазначений(ВидОперации, Ложь);
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
	КонецЕсли;
	
	Если Не ЭтоРезервирование Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ОбеспеченоПодНазначение.НаличиеПодЗаказ
			|	ИЗ
			|		ВТОбеспечениеЗаказовОстатки КАК ОбеспеченоПодНазначение
			|	ГДЕ
			|		ОбеспеченоПодНазначение.НаличиеПодЗаказ > 0";
	Иначе
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СУММА(Таблица.Доступно) КАК Доступно
			|ИЗ
			|	(ВЫБРАТЬ
			|		ЕСТЬNULL(ОстаткиПоНоменклатуре.Количество, 0) КАК Доступно
			|	ИЗ
			|		ВтСвободныеОстатки КАК ОстаткиПоНоменклатуре
			|	ГДЕ
			|		ОстаткиПоНоменклатуре.Количество > 0
			|		И НЕ ОстаткиПоНоменклатуре.Количество ЕСТЬ NULL 
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ЕСТЬNULL(ДоступноВДругихЗаказах.НаличиеПодЗаказ, 0)
			|	ИЗ
			|		ВтОбеспечениеЗаказовОстаткиНазначений КАК ДоступноВДругихЗаказах
			|	ГДЕ
			|		ДоступноВДругихЗаказах.НаличиеПодЗаказ > 0
			|		И НЕ ДоступноВДругихЗаказах.НаличиеПодЗаказ ЕСТЬ NULL) КАК Таблица
			|
			|ИМЕЮЩИЕ
			|	НЕ СУММА(Таблица.Доступно) ЕСТЬ NULL И
			|	СУММА(Таблица.Доступно) > 0";
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗапроса.Следующий() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Функция проверяет что по назначению есть товары с действием Обеспечивать обособленно
//
// Параметры:
//  Назначение	 - СправочникСсылка.Назначения	 - 
// 
// Возвращаемое значение:
//   - Булево
//
Функция ЕстьТоварыКОбособленномуОбеспечению(Назначение) Экспорт
	
	Если Не ЗначениеЗаполнено(Назначение) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОбеспечениеЗаказов.Регистратор
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов КАК ОбеспечениеЗаказов
	|ГДЕ
	|	ОбеспечениеЗаказов.Назначение = &Назначение";
	
	Запрос.УстановитьПараметр("Назначение", Назначение);
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Не Запрос.Выполнить().Пустой();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецФункции

// Расчитывает поле количество в переданной таблице значений для снятия текущего обособленного резерва
//
// Параметры:
//  Таблица							- ТаблицаЗначений - таблица значения с колонками:
//		* Заказ						 - ДокументСсылка.ЗаказКлиента, ДокументСсылка.ЗаказНаВнутреннееПотребление, ДокументСсылка.ЗаказНаПеремещение, 
//			ДокументСсылка.ЗаказНаСборку, ДокументСсылка.ЗаказПоставщику - заказ переданный как входящий параметр функции
//		* ЗаказИсточник				 - ДокументСсылка.ЗаказКлиента, ДокументСсылка.ЗаказНаВнутреннееПотребление, ДокументСсылка.ЗаказНаПеремещение, 
//			ДокументСсылка.ЗаказНаСборку, ДокументСсылка.ЗаказПоставщику - заказ который зарезервировал тот же товар который нужен заказу
//				переданному как входящий параметр функции
//		* ИсходноеНазначение		 - СправочникСсылка.Назначения - назначение соответствующее колонке Заказ
//		* НовоеНазначение			 - СправочникСсылка.Назначения - назначение соответствующее колонке ЗаказИсточник
//		* Номенклатура				 - СправочникСсылка.Номенклатура - 
//		* Характеристика			 - СправочникСсылка.ХарактеристикиНоменклатуры - 
//		* ЕдиницаИзмерения			 - СправочникСсылка.УпаковкиЕдиницыИзмерения - 
//		* Склад						 - СправочникСсылка.Склады - склад на котором в данный момент находится товар
//		* СкладОтгрузки				 - СправочникСсылка.Склады - склад указанный в заказе, склад потребности
//		* Потребность				 - Число - количество необеспеченного товара по заказу
//		* Обеспечено				 - Число - количество зарезервированного и ожидаемого к прибытию обособленного товара
//		* СвободныйОстаток			 - Число - свободный остаток товара по складу
//		* ПотребностьОсновногоСклада - Булево - признак того что текущий склад соответствует складу отгрузки
//		* Количество				 - Число - количество
//		* Отметка					 - Булево - признак использования количества в алгоритмах
//		* СортировкаСклада			 - Число - данные для сортировки складов
//		* ЭтоОстатокЗаказа			 - Булево - признак того что в колонке СвободныйОстаток не остаток склада, а резерв заказа
//	СнятьИзлишекРезервов		 - Булево - признак того что алгоритм должен выставить в колонке количество излишек обеспечения.
//											при значении Ложь колонка Количество будет заполнена данным колонки Обеспечено
//
Процедура СнятьРезервы(Таблица, СнятьИзлишекРезервов = Истина) Экспорт
	
	СтруктураКлючевыхПолей = Новый Структура("ИсходноеНазначение, Номенклатура, Характеристика, Склад");
	Потребность = 0;
	
	Для Каждого Строка Из Таблица Цикл
		
		Если СнятьИзлишекРезервов Тогда
			
			// Снять излишние резервы
			// Таблица отсортирована по приоритетности складов. На первых складах необходимо оставить максимальное количество товара.
			Если Не (СтруктураКлючевыхПолей.ИсходноеНазначение = Строка.ИсходноеНазначение
				И СтруктураКлючевыхПолей.Номенклатура = Строка.Номенклатура
				И СтруктураКлючевыхПолей.Характеристика = Строка.Характеристика
				И СтруктураКлючевыхПолей.Склад = Строка.Склад)
				И Строка.ПотребностьОсновногоСклада = Истина Тогда
				
				ЗаполнитьЗначенияСвойств(СтруктураКлючевыхПолей, Строка);
				Потребность = Строка.Потребность;
			КонецЕсли;
			
			Если Потребность > 0 Тогда
				Строка.Количество = Строка.ВНаличии - Потребность;
				Потребность = Потребность - Строка.ВНаличии;
			Иначе
				Строка.Количество = Строка.ВНаличии;
			КонецЕсли;
			
			Если Строка.Количество > 0 Тогда
				Строка.Отметка = Истина;
			Иначе
				Строка.Отметка = Ложь;
			КонецЕсли;
		Иначе
			
			// Снять все резервы
			Строка.Количество = Строка.ВНаличии;
			Если Строка.Количество > 0 Тогда
				Строка.Отметка = Истина;
			Иначе
				Строка.Отметка = Ложь;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Расчитывает поле количество в переданной таблице значений для установки обособленного резерва
//
// Параметры:
//  Таблица							- ТаблицаЗначений - таблица значения с колонками:
//		* Заказ						 - ДокументСсылка.ЗаказКлиента, ДокументСсылка.ЗаказНаВнутреннееПотребление, ДокументСсылка.ЗаказНаПеремещение, 
//			ДокументСсылка.ЗаказНаСборку, ДокументСсылка.ЗаказПоставщику - заказ переданный как входящий параметр функции
//		* ЗаказИсточник				 - ДокументСсылка.ЗаказКлиента, ДокументСсылка.ЗаказНаВнутреннееПотребление, ДокументСсылка.ЗаказНаПеремещение, 
//			ДокументСсылка.ЗаказНаСборку, ДокументСсылка.ЗаказПоставщику - заказ который зарезервировал тот же товар который нужен заказу
//				переданному как входящий параметр функции
//		* ИсходноеНазначение		 - СправочникСсылка.Назначения - назначение соответствующее колонке Заказ
//		* НовоеНазначение			 - СправочникСсылка.Назначения - назначение соответствующее колонке ЗаказИсточник
//		* Номенклатура				 - СправочникСсылка.Номенклатура - 
//		* Характеристика			 - СправочникСсылка.ХарактеристикиНоменклатуры - 
//		* ЕдиницаИзмерения			 - СправочникСсылка.УпаковкиЕдиницыИзмерения - 
//		* Склад						 - СправочникСсылка.Склады - склад на котором в данный момент находится товар
//		* СкладОтгрузки				 - СправочникСсылка.Склады - склад указанный в заказе, склад потребности
//		* Потребность				 - Число - количество необеспеченного товара по заказу
//		* Обеспечено				 - Число - количество зарезервированного и ожидаемого к прибытию обособленного товара
//		* СвободныйОстаток			 - Число - свободный остаток товара по складу
//		* ПотребностьОсновногоСклада - Булево - признак того что текущий склад соответствует складу отгрузки
//		* Количество				 - Число - количество
//		* Отметка					 - Булево - признак использования количества в алгоритмах
//		* СортировкаСклада			 - Число - данные для сортировки складов
//		* ЭтоОстатокЗаказа			 - Булево - признак того что в колонке СвободныйОстаток не остаток склада, а резерв заказа
//
Процедура УстановитьРезервы(Таблица) Экспорт
	
	СтруктураКлючевыхПолей = Новый Структура("ИсходноеНазначение, Номенклатура, Характеристика, Склад");
	Потребность = 0;
	
	Для Каждого Строка Из Таблица Цикл
		
		// Таблица отсортирована по приоритетности складов. На первых складах необходимо зарезервировать максимальное количество товара.
		
		Если Не (СтруктураКлючевыхПолей.Номенклатура = Строка.Номенклатура
			И СтруктураКлючевыхПолей.Характеристика = Строка.Характеристика
			И СтруктураКлючевыхПолей.ИсходноеНазначение = Строка.ИсходноеНазначение 
			И СтруктураКлючевыхПолей.Склад = Строка.Склад)
			И Строка.ПотребностьОсновногоСклада Тогда
			ЗаполнитьЗначенияСвойств(СтруктураКлючевыхПолей, Строка);
			Потребность = Строка.Потребность - Строка.ВНаличии - Строка.ОбеспеченоОжидается;
		КонецЕсли;
		
		Если Строка.ПотребностьОсновногоСклада Тогда
			Если Не ЗначениеЗаполнено(Строка.ИсходноеНазначение) Тогда
				Если Потребность > 0 Тогда
					Если Строка.СвободныйОстаток > Потребность Тогда
						Строка.Количество = Потребность;
						Потребность = 0;
					Иначе
						Строка.Количество = Строка.СвободныйОстаток;
						Потребность = Потребность - Строка.СвободныйОстаток;
					КонецЕсли;
					Строка.Отметка = Строка.СвободныйОстаток > 0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСлужебныеРеквизитыТЧ(Товары)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.Помещение КАК Помещение
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ИспользоватьСкладскиеПомещения
	|				И &Период >= ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ТаблицаТоваров.Помещение КАК Справочник.СкладскиеПомещения).ИспользоватьАдресноеХранение
	|							И &Период >= ВЫРАЗИТЬ(ТаблицаТоваров.Помещение КАК Справочник.СкладскиеПомещения).ДатаНачалаАдресногоХраненияОстатков
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ИспользоватьАдресноеХранение
	|						И &Период >= ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ДатаНачалаАдресногоХраненияОстатков
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ИспользоватьАдресноеХранение,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ИспользоватьСкладскиеПомещения
	|				И &Период >= ВЫРАЗИТЬ(ТаблицаТоваров.Склад КАК Справочник.Склады).ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьСкладскиеПомещения
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров";
	
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ТаблицаТоваров", Товары.Выгрузить(,"НомерСтроки,Склад,Помещение"));
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		Строка = Товары[Выборка.НомерСтроки - 1];
		ЗаполнитьЗначенияСвойств(Строка, Выборка, "ИспользоватьАдресноеХранение,ИспользоватьСкладскиеПомещения");
	КонецЦикла;
	
КонецПроцедуры

// Непосредственное заполнение табличной части Товары документа КорректировкаНазначенияТоваров 
// обособленными резервами по переданному назначению.
//
// Параметры:
//  Назначение					 - СправочникСсылка.Назначения - Назначение по которому необходимо полученить данные обособленного обеспечения
//  Организация					 - СправочникСсылка.Организации - 
//  ТекущаяКорректировка		 - ДокументСсылка.КорректировкаНазначенияТоваров - текущая корректировка, для сторнирования ее движений
//  ВидОперации					 - ПеречислениеСсылка.ВидыОперацийКорректировкиНазначения - вид операции текущего/создаваемого 
//  																		документа КорректировкаНазначенияТоваров
//  Товары						 - ДанныеФормыКоллекция - табличная часть Товары корректировки
//  ЗаполнятьДополнительныеПоля	 - Булево - признак необходимости заполнения в ТЧ Товары служебных полей
//
Процедура ЗаполнитьПоОснованию(Назначение, Организация, ТекущаяКорректировка, ВидОперации, Товары, ЗаполнятьДополнительныеПоля = Ложь) Экспорт
	
	Если ЗначениеЗаполнено(Назначение) Тогда
		
		РеквизитыНазначения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Назначение, "Заказ");
		
		// Для толкающих назначений запрещено автоматическое заполнение ТЧ Товары
		Если Не ЗначениеЗаполнено(РеквизитыНазначения.Заказ) Тогда
			Возврат;
		КонецЕсли;
		
		Заказ = ?(ЗначениеЗаполнено(Заказ), Заказ, РеквизитыНазначения.Заказ);
		
		СнятиеРезерва = (ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезерв
			Или ВидОперации = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезервПоМногимНазначениям);
		
		ТолькоСкладОтгрузки = Не СнятиеРезерва И КонтролироватьПревышениеПотребностиПоЗаказу(Назначение);
		
		СтруктураЗаполнения = ЗаполнитьТаблицуСнятияУстановкиРезервов(ВидОперации, Назначение, Заказ, ТекущаяКорректировка, ТолькоСкладОтгрузки, Организация);
		Таблица = СтруктураЗаполнения.ТаблицаЗаполненияКорректировки;
		
		ТаблицаПомещенияЯчейки = ТаблицаПомещенияЯчейкиПоТоварам(Таблица, ТекущаяКорректировка, Ложь);
		
		// В Таблица на данном этапе количество соответствует единице измерения номенклатуры
		Таблица.Колонки.Добавить("Упаковка", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
		
		СлитьТаблицыПоСкладуИПомещениям(Таблица, ТаблицаПомещенияЯчейки);
		
		СтрокиКУдалению = Новый Массив();
		
		Для ИндексСтроки = 0 По Таблица.Количество() - 1 Цикл
			ИндексСКонца = Таблица.Количество() - ИндексСтроки - 1;
			Если Таблица[ИндексСКонца].Количество <= 0 Тогда
				СтрокиКУдалению.Добавить(Таблица[ИндексСКонца]);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			Таблица.Удалить(СтрокаКУдалению);
		КонецЦикла;
		
		Если Таблица.Количество() > 0 Тогда
			
			ПостобработкаТаблицыТовары(Таблица, ВидОперации, Организация);
			
			Товары.Загрузить(Таблица);
			
			СтруктураДействий = Новый Структура;
			СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
			
			ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, Неопределено);
			
			Если ЗаполнятьДополнительныеПоля Тогда
				
				СтруктураДействий = Новый Структура();
				СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", 
					Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
				СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", 
					Новый Структура("Номенклатура", "ТипНоменклатуры"));
				
				НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Товары, СтруктураДействий);
				
				ЗаполнитьСлужебныеРеквизитыТЧ(Товары);
				
				Для Каждого Строка Из Товары Цикл
					
					ПараметрыПомещенияЯчейки = Новый Структура();
					ПараметрыПомещенияЯчейки.Вставить("Склад", Строка.Склад);
					ПараметрыПомещенияЯчейки.Вставить("Помещение", Строка.Помещение);
					ПараметрыПомещенияЯчейки.Вставить("Дата", ТекущаяДатаСеанса());
					
					СтруктураДействий = Новый Структура;
					СтруктураДействий.Вставить("ЗаполнитьПризнакИспользованияПомещений", ПараметрыПомещенияЯчейки);
					СтруктураДействий.Вставить("ЗаполнитьПризнакАдресногоХранения", ПараметрыПомещенияЯчейки);
					СтруктураДействий.Вставить("ЗаполнитьПризнакДвиженияПоСкладскимРегистрам", "НовоеНазначение");
					СтруктураДействий.Вставить("ЗаполнитьПризнакДвиженияПоСкладскимРегистрам", "ИсходноеНазначение");
					
					ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Строка, СтруктураДействий, Неопределено);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстРазделителяЗапросов()
	
	Возврат 
	"
	|	
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Регистрирует данные для обработчика обновления УТ 11.4.1
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	(ВидыЗапасов.АналитикаУчетаНоменклатурыОприходование = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|		ИЛИ ВидыЗапасов.ВидЗапасовОприходование = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|	И ВидыЗапасов.Ссылка.Проведен
	|");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления УТ 11.4.1, производится заполнение
// вида запасов оприходования в ТЧ "Виды запасов"
// и АналитикаУчетаНоменклатурыОприходование в ТЧ "ВидыЗапасов" и ТЧ "Товары".
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяДокумента = "Документ.КорректировкаНазначенияТоваров";
	МетаданныеДокумента = Метаданные.Документы.КорректировкаНазначенияТоваров;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяДокумента, МенеджерВременныхТаблиц);
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	РезультатыСозданияВТ = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
																					"РегистрНакопления.ТоварыОрганизаций",
	                                                                                 МенеджерВременныхТаблиц);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОбработке.Ссылка КАК Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	МАКСИМУМ(Товары.АналитикаУчетаНоменклатурыОприходование = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)) КАК ОбрабатыватьАналитикуОприходование,
	|	МАКСИМУМ(ВидыЗапасов.ВидЗапасовОприходование = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)) КАК ОбработатьВидЗапасов
	|ИЗ
	|	&ВТДокументыДляОбработки КАК КОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаНазначенияТоваров.Товары КАК Товары
	|		ПО КОбработке.Ссылка = Товары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаНазначенияТоваров.ВидыЗапасов КАК ВидыЗапасов
	|		ПО КОбработке.Ссылка = ВидыЗапасов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	КОбработке.Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДокументыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстЗапросаВидЗапасовОприходование =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидЗапасов.УстарелоНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				И Ключи.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА Аналитика.КлючАналитики
	|		ИНАЧЕ ТоварыОрганизаций.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ АналитикаУчетаНоменклатурыВидЗапасов
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ИмяВТЗаблокированныхРегистраторов КАК ЗаблокированныеРегистраторы
	|		ПО (ЗаблокированныеРегистраторы.Регистратор = ТоварыОрганизаций.Регистратор)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|		ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Ключи.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО (Ключи.Номенклатура = Аналитика.Номенклатура)
	|			И (Ключи.Характеристика = Аналитика.Характеристика)
	|			И (Ключи.Серия = Аналитика.Серия)
	|			И (Ключи.Склад = Аналитика.Склад)
	|			И ТоварыОрганизаций.ВидЗапасов.УстарелоНазначение = Аналитика.Назначение
	|			И (Ключи.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции)
	|ГДЕ
	|	ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ТоварыОрганизаций.Регистратор = &Регистратор
	|	И ЗаблокированныеРегистраторы.Регистратор ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаНоменклатурыВидЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КОЛИЧЕСТВО(АналитикаУчетаНоменклатурыВидЗапасов.ВидЗапасов) КАК КоличествоВидовЗапасов
	|ПОМЕСТИТЬ КоличествоВидовЗапасовПоАналитике
	|ИЗ
	|	АналитикаУчетаНоменклатурыВидЗапасов КАК АналитикаУчетаНоменклатурыВидЗапасов
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатурыВидЗапасов.АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоличествоВидовЗапасовПоАналитике.КоличествоВидовЗапасов КАК КоличествоВидовЗапасов,
	|	АналитикаУчетаНоменклатурыВидЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	АналитикаУчетаНоменклатурыВидЗапасов.ВидЗапасов КАК ВидЗапасов
	|ИЗ
	|	АналитикаУчетаНоменклатурыВидЗапасов КАК АналитикаУчетаНоменклатурыВидЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоВидовЗапасовПоАналитике КАК КоличествоВидовЗапасовПоАналитике
	|		ПО АналитикаУчетаНоменклатурыВидЗапасов.АналитикаУчетаНоменклатуры = КоличествоВидовЗапасовПоАналитике.АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АналитикаУчетаНоменклатурыВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КоличествоВидовЗапасовПоАналитике";
	
	ТекстЗапросаВидЗапасовОприходование = СтрЗаменить(ТекстЗапросаВидЗапасовОприходование,
														"#ИмяВТЗаблокированныхРегистраторов",
														РезультатыСозданияВТ.ИмяВременнойТаблицы);
														
	ВыборкаПоДокументам = Запрос.Выполнить().Выбрать();
	Пока ВыборкаПоДокументам.Следующий() Цикл
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоДокументам.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыОрганизаций.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаПоДокументам.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ВыборкаПоДокументам.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеДокумента,
				ВыборкаПоДокументам.Ссылка,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
		
		ДокОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(ВыборкаПоДокументам.Ссылка, ВыборкаПоДокументам.ВерсияДанных, Параметры.Очередь);
		Если ДокОбъект = Неопределено Тогда
			ЗафиксироватьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		ДокументИзменен = Ложь;
		Если ВыборкаПоДокументам.ОбрабатыватьАналитикуОприходование Тогда
			
			ДокументИзменен = Истина;
			
			МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(Перечисления.ХозяйственныеОперации.КорректировкаОбособленногоУчета, Неопределено, Неопределено, Неопределено);
			ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
			ИменаПолей.Номенклатура = "Номенклатура";
			ИменаПолей.Характеристика = "Характеристика";
			ИменаПолей.Серия = "Серия";
			ИменаПолей.Произвольный = "Склад";
			ИменаПолей.АналитикаУчетаНоменклатуры = "АналитикаУчетаНоменклатурыОприходование";
			ИменаПолей.Назначение = "НовоеНазначение";
			
			ПараметрыЗаполненияКлючей = РегистрыСведений.АналитикаУчетаНоменклатуры.ПараметрыЗаполненияКлючейАналитики();
			ПараметрыЗаполненияКлючей.СоздаватьВКлючи = Ложь;
			
			Попытка
				РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ДокОбъект.Товары, МестаУчета, ИменаПолей, Ложь, ПараметрыЗаполненияКлючей);
			Исключение
				ОтменитьТранзакцию();
				ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: ошибка заполнения ключей аналитики оприходования'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", ВыборкаПоДокументам.Ссылка);
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Документы.КорректировкаНазначенияТоваров,
					,
					ТекстСообщения);
				Продолжить;
			КонецПопытки;	
			
			Для Каждого СтрокаТоваров Из ДокОбъект.Товары Цикл
				ОтборСтрок = Новый Структура("АналитикаУчетаНоменклатуры, УдалитьНовоеНазначение",
					СтрокаТоваров.АналитикаУчетаНоменклатуры, СтрокаТоваров.НовоеНазначение);
				
				НайденныеСтрокиВидовЗапасов = ДокОбъект.ВидыЗапасов.НайтиСтроки(ОтборСтрок);
				Для Каждого СтрокаВидовЗапасов из НайденныеСтрокиВидовЗапасов Цикл
					СтрокаВидовЗапасов.АналитикаУчетаНоменклатурыОприходование = СтрокаТоваров.АналитикаУчетаНоменклатурыОприходование;
					СтрокаВидовЗапасов.НовоеНазначениеПустое = НЕ ЗначениеЗаполнено(СтрокаТоваров.НовоеНазначение);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		Если ВыборкаПоДокументам.ОбработатьВидЗапасов Тогда
			ДокументИзменен = Истина;
		
			Запрос = Новый Запрос(ТекстЗапросаВидЗапасовОприходование);
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.УстановитьПараметр("Регистратор", ВыборкаПоДокументам.Ссылка);
			
			ВыборкаПоАналитикам = Запрос.Выполнить().Выбрать();
			
			РазныеВидыЗапасов = Ложь;
			
			Пока ВыборкаПоАналитикам.Следующий() Цикл
				Если ВыборкаПоАналитикам.КоличествоВидовЗапасов <> 1 Тогда
					РазныеВидыЗапасов = Истина;
				КонецЕсли;
				
				НайденныеСтрокиВидовЗапасов = ДокОбъект.ВидыЗапасов.НайтиСтроки(Новый Структура("АналитикаУчетаНоменклатурыОприходование", ВыборкаПоАналитикам.АналитикаУчетаНоменклатуры));
				Для Каждого СтрокаВидовЗапасов Из НайденныеСтрокиВидовЗапасов Цикл
					Если РазныеВидыЗапасов Тогда
						РеквизитыВидаЗапасов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаВидовЗапасов.ВидЗапасов, "РеализацияЗапасовДругойОрганизации,ВидЗапасовВладельца");
						Если РеквизитыВидаЗапасов.РеализацияЗапасовДругойОрганизации Тогда
							СтрокаВидовЗапасов.ВидЗапасовОприходование = РеквизитыВидаЗапасов.ВидЗапасовВладельца;
						Иначе
							СтрокаВидовЗапасов.ВидЗапасовОприходование = СтрокаВидовЗапасов.ВидЗапасов;
						КонецЕсли;
					Иначе
						СтрокаВидовЗапасов.ВидЗапасовОприходование = ВыборкаПоАналитикам.ВидЗапасов;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
		КонецЕсли;
		Попытка
			Если ДокументИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаПоДокументам.Ссылка);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", ВыборкаПоДокументам.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.КорректировкаНазначенияТоваров,
				,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяДокумента);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
