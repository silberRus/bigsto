#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Функция определяет реквизиты выбранного авансового отчета.
//
// Параметры:
//  АвансовыйОтчет - ДокументСсылка.АвансовыйОтчет - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - реквизиты авансового отчета
//
Функция РеквизитыДокумента(АвансовыйОтчет) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.АвансовыйОтчет КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &АвансовыйОтчет
	|");
	
	Запрос.УстановитьПараметр("АвансовыйОтчет", АвансовыйОтчет);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
		Валюта = Выборка.Валюта;
		ПодотчетноеЛицо = Выборка.ПодотчетноеЛицо;
		Подразделение = Выборка.Подразделение;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		Валюта = Справочники.Валюты.ПустаяСсылка();
		ПодотчетноеЛицо = Справочники.Пользователи.ПустаяСсылка();
		Подразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Дата", Дата);
	СтруктураРеквизитов.Вставить("Организация", Организация);
	СтруктураРеквизитов.Вставить("Валюта", Валюта);
	СтруктураРеквизитов.Вставить("ПодотчетноеЛицо", ПодотчетноеЛицо);
	СтруктураРеквизитов.Вставить("Подразделение", Подразделение);
	
	Возврат СтруктураРеквизитов;
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Мультивалютный КАК Мультивалютный,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность
	|ИЗ
	|	Документ.АвансовыйОтчет КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Реквизиты.Валюта,
		Неопределено, // ВалютаВзаиморасчетов
		Реквизиты.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",                Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",               Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",                Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",                    Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов",         ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр("КонтролироватьВыдачуПодОтчетВРазрезеЦелей",     ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей"));
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)

	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОплата.Заказ      КАК Заказ,
	|	ТаблицаОплата.Поставщик  КАК Партнер,
	|	ТаблицаОплата.Контрагент КАК Контрагент,
	|	ВЫБОР КОГДА ТаблицаОплата.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		ТаблицаОплата.Заказ
	|	ИНАЧЕ
	|		ЕСТЬNULL(ТаблицаОплата.Заказ.Договор, &ПустойДоговор)
	|	КОНЕЦ КАК Договор,
	|	ЕСТЬNULL(ТаблицаОплата.Заказ.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|
	|
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетов
	|ИЗ
	|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК ТаблицаОплата
	|	
	|ГДЕ
	|	ТаблицаОплата.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация                       				КАК Организация,
	|	ТаблицаОбъектовРасчетов.Контрагент 				КАК Контрагент,
	|	ТаблицаОбъектовРасчетов.Партнер    				КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор    				КАК Договор,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И ТаблицаОбъектовРасчетов.Контрагент = Аналитика.Контрагент
	|		И ТаблицаОбъектовРасчетов.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	Аналитика.КлючАналитики ЕСТЬ NULL
	|");
	
	ЗапросАналитик.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("ПустойДоговор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПоПартнерамИнициализированы", Истина);

КонецПроцедуры

Функция ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса)
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ИмяРегистра = "ТаблицаОплатаПоставщикам";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаОплатаПоставщикам.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОплатаПоставщикам.Заказ КАК Заказ,
	|
	|	ТаблицаОплатаПоставщикам.Сумма КАК Сумма,
	|	ТаблицаОплатаПоставщикам.Валюта КАК Валюта,
	|	ТаблицаОплатаПоставщикам.СуммаВзаиморасчетов,
	|	ТаблицаОплатаПоставщикам.ВалютаВзаиморасчетов,
	|
	|	Аналитика.КлючАналитики КАК АналитикаУчетаПоПартнерам
	|
	|ПОМЕСТИТЬ ТаблицаОплатаПоставщикам
	|ИЗ
	|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК ТаблицаОплатаПоставщикам
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаОплатаПоставщикам.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|		И ТаблицаОплатаПоставщикам.Контрагент = ТаблицаОбъектовРасчетов.Контрагент
	|		И ТаблицаОплатаПоставщикам.Поставщик = ТаблицаОбъектовРасчетов.Партнер
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И ТаблицаОбъектовРасчетов.Контрагент = Аналитика.Контрагент
	|		И ТаблицаОбъектовРасчетов.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаОплатаПоставщикам.Ссылка = &Ссылка
	|	И ТаблицаОплатаПоставщикам.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТКурсыВалютУпр(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВТКурсыВалютУпр";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КурсВалюты.Валюта КАК Валюта,
	|	КурсВалюты.Курс * КурсВалютыУпр.Кратность / (КурсВалюты.Кратность * КурсВалютыУпр.Курс) КАК КоэффициентПересчета
	|ПОМЕСТИТЬ ВТКурсыВалютУпр
	|ИЗ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсВалюты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаУправленческогоУчета) КАК КурсВалютыУпр
	|	ПО (ИСТИНА)
	|ГДЕ
	|	КурсВалюты.Кратность <> 0
	|	И КурсВалютыУпр.Курс <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТКурсыВалютРегл(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВТКурсыВалютРегл";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КурсВалюты.Валюта КАК Валюта,
	|	КурсВалюты.Курс * КурсВалютыРегл.Кратность / (КурсВалюты.Кратность * КурсВалютыРегл.Курс) КАК КоэффициентПересчета
	|ПОМЕСТИТЬ ВТКурсыВалютРегл
	|ИЗ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсВалюты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаРегламентированногоУчета) КАК КурсВалютыРегл
	|	ПО (ИСТИНА)
	|ГДЕ
	|	КурсВалюты.Кратность <> 0
	|	И КурсВалютыРегл.Курс <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ТаблицаКурсовыхРазниц";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютУпр", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютУпр(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютРегл", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютРегл(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Валюта КАК ВалютаКонвертации,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств,
	|	
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКонвертации * ТаблицаКурсыВалютУпрКонвертации.КоэффициентПересчета КАК ЧИСЛО(15,2))
	|		- ВЫРАЗИТЬ(ДанныеДокумента.Сумма * ТаблицаКурсыВалютУпр.КоэффициентПересчета КАК ЧИСЛО(15,2))
	|	КАК СуммаУпр,
	|	
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаКонвертации * ТаблицаКурсыВалютРеглКонвертации.КоэффициентПересчета КАК ЧИСЛО(15,2))
	|		- ВЫРАЗИТЬ(ДанныеДокумента.Сумма * ТаблицаКурсыВалютРегл.КоэффициентПересчета КАК ЧИСЛО(15,2))
	|	КАК СуммаРегл
	|
	|ПОМЕСТИТЬ ТаблицаКурсовыхРазниц
	|ИЗ
	|	Документ.АвансовыйОтчет.КонвертацияВалюты КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = ДанныеДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпрКонвертации
	|		ПО ТаблицаКурсыВалютУпрКонвертации.Валюта = ДанныеДокумента.ВалютаКонвертации
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = ДанныеДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРеглКонвертации
	|		ПО ТаблицаКурсыВалютРеглКонвертации.Валюта = ДанныеДокумента.ВалютаКонвертации
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.Ссылка.Мультивалютный
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютУпр", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютУпр(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютРегл", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютРегл(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	&Подразделение КАК Подразделение,
	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ПрочиеРасходы.Валюта
	|	ИНАЧЕ
	|		&Валюта
	|	КОНЕЦ КАК Валюта,
	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ПрочиеРасходы.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|	
	|	ПрочиеРасходы.Сумма КАК Сумма,
	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ПрочиеРасходы.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ПрочиеРасходы.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ПрочиеРасходы.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ПрочиеРасходы.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	
	|	ПрочиеРасходы.Сумма КАК КОтчету,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходыПодотчетногоЛица) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ПрочиеРасходы.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	Документ.АвансовыйОтчет.ПрочиеРасходы КАК ПрочиеРасходы
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = ПрочиеРасходы.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = ПрочиеРасходы.Валюта
	|
	|ГДЕ
	|	ПрочиеРасходы.Ссылка = &Ссылка
	|	И НЕ ПрочиеРасходы.Отменено
	|	И ПрочиеРасходы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	&Подразделение КАК Подразделение,
	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ОплатаПоставщикам.Валюта
	|	ИНАЧЕ
	|		&Валюта
	|	КОНЕЦ КАК Валюта,
	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ОплатаПоставщикам.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|	
	|	ОплатаПоставщикам.Сумма КАК Сумма,
	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ОплатаПоставщикам.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ОплатаПоставщикам.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ОплатаПоставщикам.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ОплатаПоставщикам.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	
	|	ОплатаПоставщикам.Сумма КАК КОтчету,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщикуПодотчетнымЛицом) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ОплатаПоставщикам.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК ОплатаПоставщикам
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = ОплатаПоставщикам.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = ОплатаПоставщикам.Валюта
	|	
	|ГДЕ
	|	ОплатаПоставщикам.Ссылка = &Ссылка
	|	И ОплатаПоставщикам.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|	
	|ОБЪЕДИНИТЬ ВСЕ // Конвертация
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	&Подразделение КАК Подразделение,
	
	|	КонвертацияВалюты.Валюта КАК Валюта,
	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		КонвертацияВалюты.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|	
	|	КонвертацияВалюты.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(КонвертацияВалюты.СуммаКонвертации * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2)) КАК СуммаУпр,
	|	ВЫРАЗИТЬ(КонвертацияВалюты.СуммаКонвертации * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	КонвертацияВалюты.Сумма КАК КОтчету,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалютыПодотчетнымЛицом) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		КонвертацияВалюты.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	Документ.АвансовыйОтчет.КонвертацияВалюты КАК КонвертацияВалюты
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = КонвертацияВалюты.ВалютаКонвертации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = КонвертацияВалюты.ВалютаКонвертации
	|
	|ГДЕ
	|	КонвертацияВалюты.Ссылка = &Ссылка
	|	И &Мультивалютный
	|	И КонвертацияВалюты.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|	
	|ОБЪЕДИНИТЬ ВСЕ // Конвертация
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	&Подразделение КАК Подразделение,
	
	|	КонвертацияВалюты.ВалютаКонвертации КАК Валюта,
	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		КонвертацияВалюты.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|	
	|	КонвертацияВалюты.СуммаКонвертации КАК Сумма,
	|	ВЫРАЗИТЬ(КонвертацияВалюты.СуммаКонвертации * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2)) КАК СуммаУпр,
	|	ВЫРАЗИТЬ(КонвертацияВалюты.СуммаКонвертации * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	КонвертацияВалюты.СуммаКонвертации КАК КОтчету,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалютыПодотчетнымЛицом) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		КонвертацияВалюты.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	Документ.АвансовыйОтчет.КонвертацияВалюты КАК КонвертацияВалюты
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = КонвертацияВалюты.ВалютаКонвертации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = КонвертацияВалюты.ВалютаКонвертации
	|
	|ГДЕ
	|	КонвертацияВалюты.Ссылка = &Ссылка
	|	И &Мультивалютный
	|	И КонвертацияВалюты.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Отрицательные курсовые разницы
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	&Подразделение КАК Подразделение,
	|
	|	ТаблицаКурсовыхРазниц.ВалютаКонвертации КАК Валюта,
	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаКурсовыхРазниц.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|	
	|	0 КАК Сумма,
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК СуммаУпр,
	|	-ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаРегл,
	|	0 КАК КОтчету,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСУбыток) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаКурсовыхРазниц.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|	
	|ГДЕ
	|	ТаблицаКурсовыхРазниц.СуммаУпр < 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл < 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Положительные курсовые разницы
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	&Подразделение КАК Подразделение,
	|
	|	ТаблицаКурсовыхРазниц.ВалютаКонвертации КАК Валюта,
	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаКурсовыхРазниц.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|	
	|	0 КАК Сумма,
	|	ТаблицаКурсовыхРазниц.СуммаУпр КАК СуммаУпр,
	|	ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаРегл,
	|	0 КАК КОтчету,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаКурсовыхРазниц.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|	
	|ГДЕ
	|	ТаблицаКурсовыхРазниц.СуммаУпр > 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл > 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаОплатаПоставщикам", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютУпр", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютУпр(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютРегл", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютРегл(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаОплатаПоставщикам.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаОплатаПоставщикам.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаОплатаПоставщикам.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаОплатаПоставщикам.Заказ КАК ЗаказПоставщику,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная) КАК ФормаОплаты,
	|	
	|	ТаблицаОплатаПоставщикам.СуммаВзаиморасчетов КАК Сумма,
	|	ТаблицаОплатаПоставщикам.СуммаВзаиморасчетов КАК КОплате,
	|
	|	ВЫБОР КОГДА ТаблицаОплатаПоставщикам.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета ТОГДА
	|		ТаблицаОплатаПоставщикам.СуммаВзаиморасчетов
	|	КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР КОГДА ТаблицаОплатаПоставщикам.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета ТОГДА
	|		ТаблицаОплатаПоставщикам.СуммаВзаиморасчетов
	|	КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	&Организация КАК Организация
	|
	|ИЗ
	|	ТаблицаОплатаПоставщикам КАК ТаблицаОплатаПоставщикам
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = ТаблицаОплатаПоставщикам.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = ТаблицаОплатаПоставщикам.Валюта
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;

	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.КурсовыеРазницы) КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаДоходов,
	|	&Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль) КАК ХозяйственнаяОперация,
	|
	|	ТаблицаКурсовыхРазниц.СуммаУпр КАК Сумма,
	|	
	|	(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаКурсовыхРазниц.СуммаУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	|	(ВЫБОР
	|		КОГДА &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА ТаблицаКурсовыхРазниц.СуммаРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл
	|
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И (ТаблицаКурсовыхРазниц.СуммаУпр > 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл > 0)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютУпр", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютУпр(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютРегл", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютРегл(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ПрочиеРасходы.Подразделение КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	// Рассчитаем сумму в валюте управленческого учета
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ПрочиеРасходы.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0)
	|	ИНАЧЕ
	|		ПрочиеРасходы.Сумма * &КоэффициентПересчетаВВалютуУпр
	|	КОНЕЦ КАК СуммаСНДС,
	|
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ((ПрочиеРасходы.СуммаСНДС - ПрочиеРасходы.СуммаНДС) * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ПрочиеРасходы.СуммаСНДС - ПрочиеРасходы.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаБезНДС,
	|
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ((ПрочиеРасходы.СуммаСНДС - ПрочиеРасходы.СуммаНДС) * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ПрочиеРасходы.СуммаСНДС - ПрочиеРасходы.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ПрочиеРасходы.СуммаСНДС * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0)
	|	ИНАЧЕ
	|		ПрочиеРасходы.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ КАК СуммаСНДСРегл,
	|	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		(ПрочиеРасходы.СуммаСНДС - ПрочиеРасходы.СуммаНДС) * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0)
	|	ИНАЧЕ
	|		(ПрочиеРасходы.СуммаСНДС - ПрочиеРасходы.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	Документ.АвансовыйОтчет.ПрочиеРасходы КАК ПрочиеРасходы
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = ПрочиеРасходы.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = ПрочиеРасходы.Валюта
	|ГДЕ
	|	ПрочиеРасходы.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(ПрочиеРасходы.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И ПрочиеРасходы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|	И НЕ ПрочиеРасходы.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК СуммаСНДС,
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК СуммаБезНДС,
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК СуммаБезНДСУпр,
	|	
	|	-ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаСНДСРегл,
	|	-ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСУбыток) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|
	|ГДЕ
	|	ТаблицаКурсовыхРазниц.СуммаУпр < 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл < 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютУпр", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютУпр(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ПрочиеРасходы.Подразделение КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов КАК Статья,
	|	ПрочиеРасходы.АналитикаАктивовПассивов КАК Аналитика,
	|
	|	// Рассчитаем сумму в валюте управленческого учета
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ПрочиеРасходы.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ПрочиеРасходы.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	Документ.АвансовыйОтчет.ПрочиеРасходы КАК ПрочиеРасходы
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = ПрочиеРасходы.Валюта
	|ГДЕ
	|	ПрочиеРасходы.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(ПрочиеРасходы.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И ПрочиеРасходы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|	И НЕ ПрочиеРасходы.Отменено
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютРегл", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютРегл(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютУпр", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютУпр(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ТаблицаДокумента.Валюта
	|	ИНАЧЕ
	|		&Валюта
	|	КОНЕЦ КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ((ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов,
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ((ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаДокумента.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаНДСУпр
	|
	|ИЗ
	|	Документ.АвансовыйОтчет.ПрочиеРасходы КАК ТаблицаДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = ТаблицаДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = ТаблицаДокумента.Валюта
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА ТаблицаДокумента.ВалютаКонвертации <> &ВалютаРегламентированногоУчета ТОГДА
	|		ТаблицаДокумента.ВалютаКонвертации
	|	ИНАЧЕ
	|		ТаблицаДокумента.Валюта
	|	КОНЕЦ КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР КОГДА ТаблицаДокумента.ВалютаКонвертации <> &ВалютаРегламентированногоУчета ТОГДА
	|		ТаблицаДокумента.СуммаКонвертации
	|	ИНАЧЕ
	|		ТаблицаДокумента.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	ВЫБОР КОГДА ТаблицаДокумента.ВалютаКонвертации <> &ВалютаРегламентированногоУчета ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаДокумента.СуммаКонвертации * ЕСТЬNULL(ТаблицаКурсыВалютРеглСуммаКонвертации.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютРеглСумма.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	0 КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов,
	|	ВЫБОР КОГДА ТаблицаДокумента.ВалютаКонвертации <> &ВалютаУправленческогоУчета ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаДокумента.СуммаКонвертации * ЕСТЬNULL(ТаблицаКурсыВалютУпрСуммаКонвертации.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютУпрСумма.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|	0 КАК СуммаНДСУпр
	|
	|ИЗ
	|	Документ.АвансовыйОтчет.КонвертацияВалюты КАК ТаблицаДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРеглСумма
	|		ПО ТаблицаКурсыВалютРеглСумма.Валюта = ТаблицаДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРеглСуммаКонвертации
	|		ПО ТаблицаКурсыВалютРеглСуммаКонвертации.Валюта = ТаблицаДокумента.ВалютаКонвертации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпрСумма
	|		ПО ТаблицаКурсыВалютУпрСумма.Валюта = ТаблицаДокумента.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпрСуммаКонвертации
	|		ПО ТаблицаКурсыВалютУпрСуммаКонвертации.Валюта = ТаблицаДокумента.ВалютаКонвертации
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Мультивалютный
	|	И ТаблицаДокумента.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл()

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютУпр", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютУпр(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютРегл", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютРегл(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период										КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)		КАК ВидДвижения,
	|	&Организация 								КАК Организация,
	|	ПрочиеРасходы.Подразделение 				КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности		КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов				КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов				КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаАктивовПассивов,
	|	&Ссылка 									КАК ДокументПоступленияРасходов,
	|	НЕОПРЕДЕЛЕНО 								КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                КАК ВидДеятельностиНДС,
	|
	|	// Рассчитаем сумму в валюте управленческого учета.
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ПрочиеРасходы.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ПрочиеРасходы.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ Стоимость,
	|
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ((ПрочиеРасходы.СуммаСНДС - ПрочиеРасходы.СуммаНДС) * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ПрочиеРасходы.СуммаСНДС - ПрочиеРасходы.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ((ПрочиеРасходы.СуммаСНДС - ПрочиеРасходы.СуммаНДС) * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ПрочиеРасходы.СуммаСНДС - ПрочиеРасходы.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы) КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	Документ.АвансовыйОтчет.ПрочиеРасходы КАК ПрочиеРасходы
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = ПрочиеРасходы.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = ПрочиеРасходы.Валюта
	|ГДЕ
	|	ПрочиеРасходы.Ссылка = &Ссылка
	|	И ПрочиеРасходы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|	И НЕ ПрочиеРасходы.Отменено
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныхСредств";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютУпр", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютУпр(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютРегл", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютРегл(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	Значение(Перечисление.ХозяйственныеОперации.КонвертацияВалютыПодотчетнымЛицом) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ДенежныеСредства,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК ТипДенежныхСредств,
	|	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаКонвертацияВалюты.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаКонвертацияВалюты.Валюта КАК Валюта,
	|
	|	ДанныеДокумента.ПодотчетноеЛицо КАК КорДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК КорТипДенежныхСредств,
	|	ТаблицаКонвертацияВалюты.ВалютаКонвертации КАК КорВалюта,
	|
	|	ВЫРАЗИТЬ(ТаблицаКонвертацияВалюты.СуммаКонвертации * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаКонвертацияВалюты.СуммаКонвертации * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ТаблицаКонвертацияВалюты.Сумма КАК СуммаВВалюте,
	|	ТаблицаКонвертацияВалюты.СуммаКонвертации КАК СуммаВКорВалюте,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	Документ.АвансовыйОтчет.КонвертацияВалюты КАК ТаблицаКонвертацияВалюты
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет КАК ДанныеДокумента
	|	ПО ТаблицаКонвертацияВалюты.Ссылка = ДанныеДокумента.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = ТаблицаКонвертацияВалюты.ВалютаКонвертации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = ТаблицаКонвертацияВалюты.ВалютаКонвертации
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютУпр", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютУпр(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютРегл", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютРегл(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаКурсовыхРазниц", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаКурсовыхРазниц(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	Значение(Перечисление.ХозяйственныеОперации.ПрочиеРасходыПодотчетногоЛица) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ТаблицаПрочиеРасходы.Подразделение КАК ПодразделениеДоходовРасходов,
	|
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК ТипДенежныхСредств,
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаПрочиеРасходы.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ТаблицаПрочиеРасходы.Валюта
	|	ИНАЧЕ
	|		ДанныеДокумента.Валюта
	|	КОНЕЦ КАК Валюта,
	|	
	|	ТаблицаПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ТаблицаПрочиеРасходы.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ТаблицаПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаПрочиеРасходы.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаПрочиеРасходы.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаПрочиеРасходы.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК Сумма,
	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаПрочиеРасходы.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаПрочиеРасходы.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	
	|	ТаблицаПрочиеРасходы.Сумма КАК СуммаВВалюте,
	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаПрочиеРасходы.СуммаНДС * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаПрочиеРасходы.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаНДС,
	
	|	ВЫБОР КОГДА &Мультивалютный ТОГДА
	|		ВЫРАЗИТЬ(ТаблицаПрочиеРасходы.СуммаНДС * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаПрочиеРасходы.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|	ТаблицаПрочиеРасходы.СуммаНДС КАК СуммаНДСВВалютеПлатежа,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	ТаблицаПрочиеРасходы.СтатьяРасходов КАК ИсточникГФУДоходовРасходов,
	|	ТаблицаПрочиеРасходы.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	Документ.АвансовыйОтчет КАК ДанныеДокумента
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.АвансовыйОтчет.ПрочиеРасходы КАК ТаблицаПрочиеРасходы
	|		ПО
	|			ТаблицаПрочиеРасходы.Ссылка = &Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = ТаблицаПрочиеРасходы.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = ТаблицаПрочиеРасходы.Валюта
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|	И НЕ ТаблицаПрочиеРасходы.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Расчет доходов от курсовых разниц
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Подразделение КАК ПодразделениеДоходовРасходов,
	|
	|	&ПодотчетноеЛицо КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК ТипДенежныхСредств,
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаКурсовыхРазниц.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаКурсовыхРазниц.ВалютаКонвертации КАК Валюта,
	|
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиСтатьи,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.КурсовыеРазницы) КАК СтатьяДоходовРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	
	|	ТаблицаКурсовыхРазниц.СуммаУпр КАК Сумма,
	|	ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаРегл,
	|	0 КАК СуммаВВалюте,
	
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.КурсовыеРазницы) КАК ИсточникГФУДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|
	|ГДЕ
	|	ТаблицаКурсовыхРазниц.СуммаУпр > 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Расчет расходов от курсовых разниц
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КурсовыеРазницыДСУбыток) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Подразделение КАК ПодразделениеДоходовРасходов,
	|
	|	&ПодотчетноеЛицо КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК ТипДенежныхСредств,
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаКурсовыхРазниц.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаКурсовыхРазниц.ВалютаКонвертации КАК Валюта,
	|
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиСтатьи,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ЗНАЧЕНИЕ(Перечисление.АналитикаКурсовыхРазниц.ДенежныеСредства) КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|
	|	-ТаблицаКурсовыхРазниц.СуммаУпр КАК Сумма,
	|	-ТаблицаКурсовыхРазниц.СуммаРегл КАК СуммаРегл,
	|	0 КАК СуммаВВалюте,
	
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.КурсовыеРазницы) КАК ИсточникГФУДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|
	|ИЗ
	|	ТаблицаКурсовыхРазниц КАК ТаблицаКурсовыхРазниц
	|
	|ГДЕ
	|	ТаблицаКурсовыхРазниц.СуммаУпр < 0 ИЛИ ТаблицаКурсовыхРазниц.СуммаРегл < 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваКонтрагент";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаОплатаПоставщикам", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютУпр", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютУпр(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТКурсыВалютРегл", ТекстыЗапроса) Тогда
		ТекстЗапросаВТКурсыВалютРегл(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.ДенежныеСредства КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК ТипДенежныхСредств,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа КАК ВалютаПлатежа,
	|
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|	
	|	СУММА(ДанныеДокумента.СуммаОплаты) КАК СуммаОплаты,
	|	СУММА(ДанныеДокумента.СуммаОплатыРегл) КАК СуммаОплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаОплатыВВалютеПлатежа) КАК СуммаОплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаПостоплаты) КАК СуммаПостоплаты,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыРегл) КАК СуммаПостоплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыВВалютеПлатежа) КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаПредоплаты) КАК СуммаПредоплаты,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыРегл) КАК СуммаПредоплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыВВалютеПлатежа) КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|	СУММА(ДанныеДокумента.СуммаОплатыВВалютеВзаиморасчетов) КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыВВалютеВзаиморасчетов) КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыВВалютеВзаиморасчетов) КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ЛОЖЬ КАК ОтложенноеПроведение 
	|
	|ИЗ (
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Дата КАК Период,
	|		Значение(Перечисление.ХозяйственныеОперации.ОплатаПоставщикуПодотчетнымЛицом) КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|		ДанныеДокумента.ПодотчетноеЛицо КАК ДенежныеСредства,
	|		ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|			ТаблицаОплатаПоставщикам.СтатьяДвиженияДенежныхСредств
	|		КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	
	|		ВЫБОР КОГДА &Мультивалютный ТОГДА
	|			ТаблицаОплатаПоставщикам.Валюта
	|		ИНАЧЕ
	|			ДанныеДокумента.Валюта
	|		КОНЕЦ КАК ВалютаПлатежа,
	|
	|		ТаблицаОплатаПоставщикам.Поставщик КАК Партнер,
	|		ТаблицаОплатаПоставщикам.Контрагент КАК Контрагент,
	|		ВЫБОР
	|			КОГДА ТаблицаОплатаПоставщикам.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ТаблицаОплатаПоставщикам.Заказ
	|			ИНАЧЕ ТаблицаОплатаПоставщикам.Заказ.Договор
	|		КОНЕЦ КАК Договор,
	|		ТаблицаОплатаПоставщикам.Заказ КАК ОбъектРасчетов,
	
	|		ВЫБОР КОГДА &Мультивалютный ТОГДА
	|			ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютУпр.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаОплаты,
	
	|		ВЫБОР КОГДА &Мультивалютный ТОГДА
	|			ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.Сумма * ЕСТЬNULL(ТаблицаКурсыВалютРегл.КоэффициентПересчета, 0) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ТаблицаОплатаПоставщикам.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаОплатыРегл,
	
	|		ТаблицаОплатаПоставщикам.Сумма КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,	
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		ТаблицаОплатаПоставщикам.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		ТаблицаОплатаПоставщикам.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаОплатаПоставщикам.Заказ КАК ИсточникГФУРасчетов
	|	ИЗ
	|		Документ.АвансовыйОтчет КАК ДанныеДокумента
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.АвансовыйОтчет.ОплатаПоставщикам КАК ТаблицаОплатаПоставщикам
	|		ПО
	|			ДанныеДокумента.Ссылка = ТаблицаОплатаПоставщикам.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютУпр КАК ТаблицаКурсыВалютУпр
	|		ПО ТаблицаКурсыВалютУпр.Валюта = ТаблицаОплатаПоставщикам.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалютРегл КАК ТаблицаКурсыВалютРегл
	|		ПО ТаблицаКурсыВалютРегл.Валюта = ТаблицаОплатаПоставщикам.Валюта
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАвансовогоОтчета.Утвержден)
	|	
	|	) КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ДенежныеСредства,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа,	
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ОбъектРасчетов,
	|	ДанныеДокумента.ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период,
	|	ДанныеРегистра.ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Подразделение,
	|
	|	ДанныеРегистра.ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа,
	|
	|	ДанныеРегистра.Партнер,
	|	ДанныеРегистра.Контрагент,
	|	ДанныеРегистра.Договор,
	|	ДанныеРегистра.ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов,
	|
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов,
	|	ИСТИНА 
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Регистратор = &Ссылка
	|	И ОтложенноеПроведение";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


#КонецОбласти

#Область СозданиеНаОсновании

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.РасходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.СчетФактураПолученныйАванс.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ЗаписьКнигиПокупок.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

#КонецОбласти

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.АвансовыйОтчет) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.АвансовыйОтчет.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.АвансовыйОтчет);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

#Область Отчеты

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПравоДоступа("Изменение", Метаданные.Документы.АвансовыйОтчет) Тогда
		
		// Авансовый отчет
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "АвансовыйОтчет";
		КомандаПечати.Представление = НСтр("ru = 'Авансовый отчет'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
		// Извещение
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетовНаОплату";
		КомандаПечати.Идентификатор = "Извещение";
		КомандаПечати.Представление = НСтр("ru = 'Извещение'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
	КонецЕсли;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчет") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АвансовыйОтчет",
			НСтр("ru='Авансовый отчет'"),
			СформироватьПечатнуюФормуАвансовогоОтчета(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуАвансовогоОтчета(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ШаблонОшибки = НСтр("ru = 'Печать АО-1 используется только для документов с операцией ""Закупка через подотчетное лицо"".'");
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИспользуетсяРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АвансовыйОтчет";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	АвансовыйОтчет.Ссылка            КАК Ссылка,
	|	АвансовыйОтчет.МоментВремени     КАК МоментВремени,
	|	АвансовыйОтчет.Организация       КАК Организация,
	|	АвансовыйОтчет.ПодотчетноеЛицо   КАК ПодотчетноеЛицо
	|
	|ПОМЕСТИТЬ АвансовыйОтчетНаПечатьВТ1
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В (&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчет.Ссылка,
	|	АвансовыйОтчет.МоментВремени,
	|	АвансовыйОтчет.Организация,
	|	АвансовыйОтчет.ПодотчетноеЛицо
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В (&МассивДокументов)
	|	И АвансовыйОтчет.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчет.Ссылка,
	|	АвансовыйОтчет.МоментВремени,
	|	АвансовыйОтчет.Организация,
	|	АвансовыйОтчет.ПодотчетноеЛицо
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка В (&МассивДокументов)
	|	И АвансовыйОтчет.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчетНаПечатьВТ1.Ссылка,
	|	АвансовыйОтчетНаПечатьВТ1.Организация,
	|	АвансовыйОтчетНаПечатьВТ1.ПодотчетноеЛицо,
	|	АвансовыйОтчетНаПечатьВТ1.МоментВремени,
	|	МАКСИМУМ(ДенежныеСредства.Период) КАК ПериодПредыдущийОтчет
	|
	|ПОМЕСТИТЬ АвансовыйОтчетНаПечатьВТ2
	|ИЗ
	|	АвансовыйОтчетНаПечатьВТ1
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.Организация = АвансовыйОтчетНаПечатьВТ1.Организация
	|		И ДенежныеСредства.ПодотчетноеЛицо = АвансовыйОтчетНаПечатьВТ1.ПодотчетноеЛицо
	|		И ДенежныеСредства.МоментВремени < АвансовыйОтчетНаПечатьВТ1.МоментВремени
	|		И ТИПЗНАЧЕНИЯ(ДенежныеСредства.Регистратор) В (
	|			ТИП(Документ.АвансовыйОтчет),
	|			ТИП(Документ.ПриобретениеТоваровУслуг),
	|			ТИП(Документ.ПриобретениеУслугПрочихАктивов)
	|		)
	|	
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетНаПечатьВТ1.Ссылка,
	|	АвансовыйОтчетНаПечатьВТ1.Организация,
	|	АвансовыйОтчетНаПечатьВТ1.ПодотчетноеЛицо,
	|	АвансовыйОтчетНаПечатьВТ1.МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АвансовыйОтчетНаПечатьВТ2.Организация,
	|	АвансовыйОтчетНаПечатьВТ2.ПодотчетноеЛицо,
	|	АвансовыйОтчетНаПечатьВТ2.Ссылка,
	|	АвансовыйОтчетНаПечатьВТ2.МоментВремени,
	|	ДенежныеСредства.Регистратор КАК ПредыдущийОтчет,
	|	ДенежныеСредства.МоментВремени КАК МоментВремениПредыдущийОтчет
	|
	|ПОМЕСТИТЬ АвансовыйОтчетНаПечатьВТ3
	|ИЗ
	|	АвансовыйОтчетНаПечатьВТ2 КАК АвансовыйОтчетНаПечатьВТ2
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.Организация = АвансовыйОтчетНаПечатьВТ2.Организация
	|		И ДенежныеСредства.ПодотчетноеЛицо = АвансовыйОтчетНаПечатьВТ2.ПодотчетноеЛицо
	|		И ДенежныеСредства.Период = АвансовыйОтчетНаПечатьВТ2.ПериодПредыдущийОтчет
	|		И ТИПЗНАЧЕНИЯ(ДенежныеСредства.Регистратор) В (
	|			ТИП(Документ.АвансовыйОтчет),
	|			ТИП(Документ.ПриобретениеТоваровУслуг),
	|			ТИП(Документ.ПриобретениеУслугПрочихАктивов)
	|		)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // 3
	|	АвансовыйОтчетНаПечатьВТ3.Организация,
	|	АвансовыйОтчетНаПечатьВТ3.ПодотчетноеЛицо,
	|	АвансовыйОтчетНаПечатьВТ3.Ссылка,
	|	ДенежныеСредстваВыдано.Валюта,
	|	
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредстваВыдано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			И ТИПЗНАЧЕНИЯ(ДенежныеСредстваВыдано.Регистратор) В (
	|				ТИП(Документ.РасходныйКассовыйОрдер),
	|				ТИП(Документ.ВводОстатков)
	|				) ТОГДА
	|			ЕСТЬNULL(ДенежныеСредстваВыдано.СуммаРегл, 0)
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ) КАК СуммаВыданоНаличными,
	|
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредстваВыдано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			И ДенежныеСредстваВыдано.Валюта <> &ВалютаРегламентированногоУчета
	|			И ТИПЗНАЧЕНИЯ(ДенежныеСредстваВыдано.Регистратор) В (
	|				ТИП(Документ.РасходныйКассовыйОрдер),
	|				ТИП(Документ.ВводОстатков)
	|				) ТОГДА
	|			ЕСТЬNULL(ДенежныеСредстваВыдано.Сумма, 0)
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ) КАК СуммаВыданоНаличнымиВВалюте,
	|
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредстваВыдано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			И ДенежныеСредстваВыдано.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств ТОГДА
	|			ЕСТЬNULL(ДенежныеСредстваВыдано.СуммаРегл, 0)
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ) КАК СуммаВыданоКартой,
	|
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредстваВыдано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			И ДенежныеСредстваВыдано.Валюта <> &ВалютаРегламентированногоУчета
	|			И ДенежныеСредстваВыдано.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств ТОГДА
	|			ЕСТЬNULL(ДенежныеСредстваВыдано.Сумма, 0)
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ) КАК СуммаВыданоКартойВВалюте,
	|
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредстваВыдано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			И ДенежныеСредстваВыдано.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратденежныхСредствОтПодотчетника) ТОГДА
	|			ЕСТЬNULL(ДенежныеСредстваВыдано.СуммаРегл, 0)
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ) КАК СуммаВозвращено,
	|
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредстваВыдано.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			И ДенежныеСредстваВыдано.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратденежныхСредствОтПодотчетника) ТОГДА
	|			ЕСТЬNULL(ДенежныеСредстваВыдано.Сумма, 0)
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ) КАК СуммаВозвращеноВВалюте
	|
	|ИЗ
	|	АвансовыйОтчетНаПечатьВТ3
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДенежныеСредстваВыдано
	|	ПО
	|		((ДенежныеСредстваВыдано.МоментВремени > АвансовыйОтчетНаПечатьВТ3.МоментВремениПредыдущийОтчет ИЛИ АвансовыйОтчетНаПечатьВТ3.МоментВремениПредыдущийОтчет ЕСТЬ NULL)
	|			И ДенежныеСредстваВыдано.МоментВремени < АвансовыйОтчетНаПечатьВТ3.МоментВремени)
	|		И ДенежныеСредстваВыдано.Организация = АвансовыйОтчетНаПечатьВТ3.Организация
	|		И ДенежныеСредстваВыдано.ПодотчетноеЛицо = АвансовыйОтчетНаПечатьВТ3.ПодотчетноеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетНаПечатьВТ3.Организация,
	|	АвансовыйОтчетНаПечатьВТ3.ПодотчетноеЛицо,
	|	АвансовыйОтчетНаПечатьВТ3.Ссылка,
	|	ДенежныеСредстваВыдано.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // 4
	|	АвансовыйОтчетНаПечатьВТ3.Ссылка,
	|	АвансовыйОтчетНаПечатьВТ3.Организация,
	|	АвансовыйОтчетНаПечатьВТ3.ПодотчетноеЛицо,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ДенежныеСредстваПредыдущийОтчет.СуммаРеглКонечныйОстаток, 0) > 0 ТОГДА
	|		ЕСТЬNULL(ДенежныеСредстваПредыдущийОтчет.СуммаРеглКонечныйОстаток, 0)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК НачальныйОстаток,
	|	ВЫБОР КОГДА ЕСТЬNULL(ДенежныеСредстваПредыдущийОтчет.СуммаРеглКонечныйОстаток, 0) < 0 ТОГДА
	|		-ЕСТЬNULL(ДенежныеСредстваПредыдущийОтчет.СуммаРеглКонечныйОстаток, 0)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК НачальныйПерерасход,
	|
	|	ЕСТЬNULL(ДенежныеСредстваТекущийОтчет.СуммаРеглРасход, 0) КАК Израсходовано,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(ДенежныеСредстваТекущийОтчет.СуммаРеглКонечныйОстаток, 0) > 0 ТОГДА
	|		ЕСТЬNULL(ДенежныеСредстваТекущийОтчет.СуммаРеглКонечныйОстаток, 0)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КонечныйОстаток,
	|	ВЫБОР КОГДА ЕСТЬNULL(ДенежныеСредстваТекущийОтчет.СуммаРеглКонечныйОстаток, 0) < 0 ТОГДА
	|		-ЕСТЬNULL(ДенежныеСредстваТекущийОтчет.СуммаРеглКонечныйОстаток, 0)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КонечныйПерерасход
	|
	|ИЗ
	|	АвансовыйОтчетНаПечатьВТ3
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц.ОстаткиИОбороты(, , Регистратор, , ) КАК ДенежныеСредстваПредыдущийОтчет
	|	ПО
	|		ДенежныеСредстваПредыдущийОтчет.Регистратор = АвансовыйОтчетНаПечатьВТ3.ПредыдущийОтчет
	|		И ДенежныеСредстваПредыдущийОтчет.Организация = АвансовыйОтчетНаПечатьВТ3.Организация
	|		И ДенежныеСредстваПредыдущийОтчет.ПодотчетноеЛицо = АвансовыйОтчетНаПечатьВТ3.ПодотчетноеЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц.ОстаткиИОбороты(, , Регистратор, , ) КАК ДенежныеСредстваТекущийОтчет
	|	ПО
	|		ДенежныеСредстваТекущийОтчет.Регистратор = АвансовыйОтчетНаПечатьВТ3.Ссылка
	|		И ДенежныеСредстваТекущийОтчет.Организация = АвансовыйОтчетНаПечатьВТ3.Организация
	|		И ДенежныеСредстваТекущийОтчет.ПодотчетноеЛицо = АвансовыйОтчетНаПечатьВТ3.ПодотчетноеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // 5
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Ссылка.Номер КАК Номер,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Ссылка.Дата КАК ДатаДокумента,
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.ПодотчетноеЛицо.Представление КАК ПредставлениеПодотчетногоЛица,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.НаименованиеСокращенное КАК ПредставлениеОрганизации,
	|	ДанныеДокумента.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
	|	ДанныеДокумента.Ссылка.НазначениеАванса КАК НазначениеАванса,
	|	ДанныеДокумента.Ссылка.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Ссылка.Подразделение.Представление КАК ПредставлениеПодразделения,
	|	ДанныеДокумента.Ссылка.Подразделение.Код КАК КодПодразделения,
	|	ДанныеДокумента.Ссылка.Валюта КАК Валюта,
	|	ДанныеДокумента.Ссылка.Валюта.Представление КАК ПредставлениеВалютыДокумента,
	
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) = ТИП(Документ.АвансовыйОтчет) ТОГДА
	|		ДанныеДокумента.Ссылка.Мультивалютный
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК Мультивалютный,
	
	|	ДанныеДокумента.Ссылка.КоличествоДокументов КАК КоличествоДокументов,
	|	ДанныеДокумента.Ссылка.КоличествоЛистов КАК КоличествоЛистов,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителяПредставление,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер
	|ИЗ
	|	АвансовыйОтчетНаПечатьВТ1 КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // 6
	|	ПрочиеРасходы.Ссылка                           КАК Ссылка,
	|	ПрочиеРасходы.НаименованиеВходящегоДокумента   КАК НаименованиеРасхода,
	|	ПрочиеРасходы.НомерВходящегоДокумента          КАК ДокументНомер,
	|	ПрочиеРасходы.ДатаВходящегоДокумента           КАК ДокументДата,
	|	ПрочиеРасходы.СтатьяРасходов                   КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов                КАК АналитикаРасходов,
	|	ПрочиеРасходы.Контрагент                       КАК Контрагент,
	|	NULL                                           КАК КонтрагентОплаты,
	|	ВЫБОР КОГДА ПрочиеРасходы.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) ТОГДА
	|		ПрочиеРасходы.Ссылка.Валюта
	|	ИНАЧЕ
	|		ПрочиеРасходы.Валюта
	|	КОНЕЦ КАК Валюта,
	|	ПрочиеРасходы.СчетУчета                        КАК СчетУчета,
	
	|	ВЫБОР КОГДА НЕ ПрочиеРасходы.Отменено ТОГДА
	|		ВЫБОР КОГДА ПрочиеРасходы.Ссылка.Валюта = &ВалютаРегламентированногоУчета ТОГДА
	|			ЕСТЬNULL(ДвиженияПрочиеРасходы.СуммаРегл, ПрочиеРасходы.Сумма)
	|		ИНАЧЕ
	|			ЕСТЬNULL(ДвиженияПрочиеРасходы.СуммаРегл, ЕСТЬNULL(Суммы.СуммаНДСРегл, 0) + ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0))
	|		КОНЕЦ
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК ПоУчету,
	
	|	ВЫБОР КОГДА НЕ ПрочиеРасходы.Отменено ТОГДА
	|		ВЫБОР КОГДА ПрочиеРасходы.Ссылка.Валюта <> &ВалютаРегламентированногоУчета ТОГДА
	|			ПрочиеРасходы.Сумма
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК ПоУчетуВВалюте,
	|	
	|	ВЫБОР КОГДА ПрочиеРасходы.Ссылка.Валюта = &ВалютаРегламентированногоУчета ТОГДА
	|		ЕСТЬNULL(ДвиженияПрочиеРасходы.СуммаРегл, ПрочиеРасходы.Сумма)
	|	ИНАЧЕ
	|		ЕСТЬNULL(ДвиженияПрочиеРасходы.СуммаРегл, ЕСТЬNULL(Суммы.СуммаНДСРегл, 0) + ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0))
	|	КОНЕЦ КАК ПоОтчету,
	
	|	ВЫБОР КОГДА ПрочиеРасходы.Ссылка.Валюта <> &ВалютаРегламентированногоУчета ТОГДА
	|		ПрочиеРасходы.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК ПоОтчетуВВалюте,
	|	
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, ПрочиеРасходы.СуммаНДС) КАК СуммаНДС,
	
	|	1 КАК НомерРаздела,
	|	ПрочиеРасходы.НомерСтроки КАК НомерСтроки
	|	
	|ИЗ
	|	Документ.АвансовыйОтчет.ПрочиеРасходы КАК ПрочиеРасходы
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДвиженияПрочиеРасходы
	|	ПО
	|		ДвиженияПрочиеРасходы.Регистратор = ПрочиеРасходы.Ссылка
	|		И ДвиженияПрочиеРасходы.СтатьяДоходовРасходов = ПрочиеРасходы.СтатьяРасходов
	|		И ДвиженияПрочиеРасходы.АналитикаРасходов = ПрочиеРасходы.АналитикаРасходов
	|		И ДвиженияПрочиеРасходы.АналитикаАктивовПассивов = ПрочиеРасходы.АналитикаАктивовПассивов
	|		И ДвиженияПрочиеРасходы.Подразделение = ПрочиеРасходы.Подразделение
	|		И ДвиженияПрочиеРасходы.СуммаВВалюте = ПрочиеРасходы.Сумма
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = ПрочиеРасходы.Ссылка
	|		И Суммы.ИдентификаторСтроки = ПрочиеРасходы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|		
	|	
	|ГДЕ
	|	ПрочиеРасходы.Ссылка В (&МассивДокументов)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ОплатаПоставщикам.Ссылка,
	|	"""",
	|	ОплатаПоставщикам.НомерВходящегоДокумента,
	|	ОплатаПоставщикам.ДатаВходящегоДокумента,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ОплатаПоставщикам.Контрагент,
	|	ВЫБОР КОГДА ОплатаПоставщикам.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) ТОГДА
	|		ОплатаПоставщикам.Ссылка.Валюта
	|	ИНАЧЕ
	|		ОплатаПоставщикам.Валюта
	|	КОНЕЦ КАК Валюта,
	|	НЕОПРЕДЕЛЕНО,
	|	ОплатаПоставщикам.Сумма,
	|	ВЫБОР
	|		КОГДА ОплатаПоставщикам.Ссылка.Валюта <> &ВалютаРегламентированногоУчета ТОГДА
	|			ОплатаПоставщикам.Сумма
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ,
	|	ОплатаПоставщикам.Сумма,
	|	ВЫБОР
	|		КОГДА ОплатаПоставщикам.Ссылка.Валюта <> &ВалютаРегламентированногоУчета ТОГДА
	|			ОплатаПоставщикам.Сумма
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ,
	|	0,
	
	|	2 КАК НомерРаздела,
	|	ОплатаПоставщикам.НомерСтроки КАК НомерСтроки
	|	
	|ИЗ
	|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК ОплатаПоставщикам
	|	
	|ГДЕ
	|	ОплатаПоставщикам.Ссылка В (&МассивДокументов)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	"""",
	|	ДанныеДокумента.НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ДанныеДокумента.Валюта,
	|	НЕОПРЕДЕЛЕНО,
	|	ЕСТЬNULL(ДенежныеСредства.СуммаРегл, 0),
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Валюта <> &ВалютаРегламентированногоУчета ТОГДА
	|			ЕСТЬNULL(ДенежныеСредства.Сумма, 0)
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ,
	|	ЕСТЬNULL(ДенежныеСредства.СуммаРегл, 0),
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Валюта <> &ВалютаРегламентированногоУчета ТОГДА
	|			ЕСТЬNULL(ДенежныеСредства.Сумма, 0)
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ,
	|	0,
	
	|	0 КАК НомерРаздела,
	|	0 КАК НомерСтроки
	|
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.Регистратор = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	"""",
	|	ДанныеДокумента.НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ДанныеДокумента.Валюта,
	|	НЕОПРЕДЕЛЕНО,
	|	ЕСТЬNULL(ДенежныеСредства.СуммаРегл, 0),
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Валюта <> &ВалютаРегламентированногоУчета ТОГДА
	|			ЕСТЬNULL(ДенежныеСредства.Сумма, 0)
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ,
	|	ЕСТЬNULL(ДенежныеСредства.СуммаРегл, 0),
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Валюта <> &ВалютаРегламентированногоУчета ТОГДА
	|			ЕСТЬNULL(ДенежныеСредства.Сумма, 0)
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ,
	|	0,
	
	|	0 КАК НомерРаздела,
	|	0 КАК НомерСтроки
	|
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.Регистратор = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерРаздела,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // 7
	|	АвансовыйОтчетНаПечатьВТ3.Ссылка,
	|	АвансовыйОтчетНаПечатьВТ3.Организация,
	|	АвансовыйОтчетНаПечатьВТ3.ПодотчетноеЛицо,
	|	ТаблицаКонвертацияВалюты.Валюта КАК ВалютаИсходная,
	|	ТаблицаКонвертацияВалюты.Сумма КАК СуммаИсходная,
	|	ТаблицаКонвертацияВалюты.ВалютаКонвертации КАК ВалютаКонвертации,
	|	ТаблицаКонвертацияВалюты.СуммаКонвертации КАК СуммаКонвертации,
	|	ТаблицаКонвертацияВалюты.Курс КАК Курс
	|ИЗ
	|	АвансовыйОтчетНаПечатьВТ3
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.АвансовыйОтчет.КонвертацияВалюты КАК ТаблицаКонвертацияВалюты
	|	ПО
	|		ТаблицаКонвертацияВалюты.Ссылка = АвансовыйОтчетНаПечатьВТ3.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // 8
	|	АвансовыйОтчетНаПечатьВТ3.Организация,
	|	АвансовыйОтчетНаПечатьВТ3.ПодотчетноеЛицо,
	|	АвансовыйОтчетНаПечатьВТ3.Ссылка,
	|	АвансовыйОтчетНаПечатьВТ3.МоментВремени,
	|	АвансовыйОтчетНаПечатьВТ3.ПредыдущийОтчет,
	|	ЕСТЬNULL(АвансовыйОтчетНаПечатьВТ3.МоментВремениПредыдущийОтчет, ДАТАВРЕМЯ(1,1,1,0,0,1)) КАК МоментВремениПредыдущийОтчет
	|
	|ИЗ
	|	АвансовыйОтчетНаПечатьВТ3 КАК АвансовыйОтчетНаПечатьВТ3
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // 9
	|	АвансовыйОтчетНаПечатьВТ3.Ссылка,
	|	АвансовыйОтчетНаПечатьВТ3.Организация,
	|	АвансовыйОтчетНаПечатьВТ3.ПодотчетноеЛицо,
	|	ДенежныеСредстваТекущийОтчет.Валюта,
	|	ЕСТЬNULL(СУММА(ДенежныеСредстваТекущийОтчет.Сумма), 0) КАК Сумма
	|
	|ИЗ
	|	АвансовыйОтчетНаПечатьВТ3
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДенежныеСредстваТекущийОтчет
	|	ПО
	|		ДенежныеСредстваТекущийОтчет.Регистратор = АвансовыйОтчетНаПечатьВТ3.Ссылка
	|		И ДенежныеСредстваТекущийОтчет.Организация = АвансовыйОтчетНаПечатьВТ3.Организация
	|		И ДенежныеСредстваТекущийОтчет.ПодотчетноеЛицо = АвансовыйОтчетНаПечатьВТ3.ПодотчетноеЛицо
	|		И ДенежныеСредстваТекущийОтчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И ДенежныеСредстваТекущийОтчет.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетНаПечатьВТ3.Ссылка,
	|	АвансовыйОтчетНаПечатьВТ3.Организация,
	|	АвансовыйОтчетНаПечатьВТ3.ПодотчетноеЛицо,
	|	ДенежныеСредстваТекущийОтчет.Валюта
	|;
	|";
	
	Если Не ИспользуетсяРеглУчет Тогда
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОплатаПоставщикам.Ссылка КАК Регистратор,
		|	""60"" КАК СчетДт,
		|	ОплатаПоставщикам.Контрагент КАК ЗначениеСубконто,
		|	ВЫБОР КОГДА ОплатаПоставщикам.Ссылка.Валюта = &ВалютаРегламентированногоУчета ТОГДА
		|		""71.01""
		|	ИНАЧЕ
		|		""71.21""
		|	КОНЕЦ КАК СчетКт,
		|	ОплатаПоставщикам.НомерСтроки КАК НомерСтроки,
		|	ОплатаПоставщикам.Сумма
		|	
		|ИЗ
		|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК ОплатаПоставщикам
		|ГДЕ
		|	ОплатаПоставщикам.Ссылка В (&МассивДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПрочиеРасходы.Ссылка КАК Регистратор,
		|	ПрочиеРасходы.СтатьяРасходов.КорреспондирующийСчет,
		|	ПрочиеРасходы.СтатьяРасходов КАК ЗначениеСубконто,
		|	ВЫБОР КОГДА ПрочиеРасходы.Ссылка.Валюта = &ВалютаРегламентированногоУчета ТОГДА
		|		""71.01""
		|	ИНАЧЕ
		|		""71.21""
		|	КОНЕЦ КАК СчетКт,
		|	ПрочиеРасходы.НомерСтроки КАК НомерСтроки,
		
		|	ВЫБОР КОГДА НЕ ПрочиеРасходы.Отменено ТОГДА
		|		ВЫБОР КОГДА ПрочиеРасходы.Ссылка.Валюта = &ВалютаРегламентированногоУчета ТОГДА
		|			ЕСТЬNULL(ДвиженияПрочиеРасходы.СуммаРегл, ПрочиеРасходы.Сумма)
		|		ИНАЧЕ
		|			ЕСТЬNULL(ДвиженияПрочиеРасходы.СуммаРегл, ЕСТЬNULL(Суммы.СуммаНДСРегл, 0) + ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0))
		|		КОНЕЦ
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ
		|	
		|ИЗ
		|	Документ.АвансовыйОтчет.ПрочиеРасходы КАК ПрочиеРасходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДвиженияПрочиеРасходы
		|		ПО
		|			ДвиженияПрочиеРасходы.Регистратор = ПрочиеРасходы.Ссылка
		|			И ДвиженияПрочиеРасходы.НомерСтроки = ПрочиеРасходы.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
		|		ПО
		|			Суммы.Регистратор = ПрочиеРасходы.Ссылка
		|			И Суммы.ИдентификаторСтроки = ПрочиеРасходы.ИдентификаторСтроки
		|			И Суммы.СуммаБезНДСРегл <> 0
		|ГДЕ
		|	ПрочиеРасходы.Ссылка В (&МассивДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПриобретениеТоваровУслуг.Ссылка КАК Регистратор,
		|	ВЫБОР КОГДА ПриобретениеТоваровУслугТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар) ТОГДА
		|		""41""
		|	ИНАЧЕ
		|		""91.02""
		|	КОНЕЦ КАК СчетДт,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫБОР КОГДА ПриобретениеТоваровУслуг.Валюта = &ВалютаРегламентированногоУчета ТОГДА
		|		""71.01""
		|	ИНАЧЕ
		|		""71.21""
		|	КОНЕЦ КАК СчетКт,
		|	1 КАК НомерСтроки,
		|	ВЫБОР КОГДА ПриобретениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) ТОГДА
		|		СУММА(ПриобретениеТоваровУслугТовары.СуммаСНДС) - СУММА(ПриобретениеТоваровУслугТовары.СуммаНДС)
		|	ИНАЧЕ
		|		СУММА(ПриобретениеТоваровУслугТовары.СуммаСНДС)
		|	КОНЕЦ КАК Сумма
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
		|		ПО ПриобретениеТоваровУслугТовары.Ссылка = ПриобретениеТоваровУслуг.Ссылка
		|ГДЕ
		|	ПриобретениеТоваровУслуг.Ссылка В (&МассивДокументов)
		|	
		|СГРУППИРОВАТЬ ПО
		|	ПриобретениеТоваровУслуг.Ссылка,
		|	ПриобретениеТоваровУслуг.Валюта,
		|	ПриобретениеТоваровУслуг.СуммаДокумента,
		|	ПриобретениеТоваровУслуг.НалогообложениеНДС,
		|	ПриобретениеТоваровУслугТовары.Номенклатура
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПриобретениеТоваровУслуг.Ссылка КАК Регистратор,
		|	""19"" КАК СчетДт,
		|	НЕОПРЕДЕЛЕНО,
		|	ВЫБОР КОГДА ПриобретениеТоваровУслуг.Валюта = &ВалютаРегламентированногоУчета ТОГДА
		|		""71.01""
		|	ИНАЧЕ
		|		""71.21""
		|	КОНЕЦ КАК СчетКт,
		|	2 КАК НомерСтроки,
		|	СУММА(ПриобретениеТоваровУслугТовары.СуммаНДС) КАК Сумма
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
		|		ПО ПриобретениеТоваровУслугТовары.Ссылка = ПриобретениеТоваровУслуг.Ссылка
		|ГДЕ
		|	ПриобретениеТоваровУслуг.Ссылка В (&МассивДокументов)
		|	И ПриобретениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|	
		|СГРУППИРОВАТЬ ПО
		|	ПриобретениеТоваровУслуг.Ссылка,
		|	ПриобретениеТоваровУслуг.Валюта
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор,
		|	НомерСтроки
		|;
		|";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	
	
	ЗапросВалютныхОстатков = Новый Запрос;
	ЗапросВалютныхОстатков.Текст = "
	|ВЫБРАТЬ
	|	Данные.Валюта КАК Валюта,
	|	СУММА(СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
	|	СУММА(СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток,
	|	СУММА(СуммаНачальныйПерерасход) КАК СуммаНачальныйПерерасход,
	|	СУММА(СуммаКонечныйПерерасход) КАК СуммаКонечныйПерерасход
	|ИЗ
	|(ВЫБРАТЬ
	|	ДанныеРегистра.Валюта КАК Валюта,
	|	ВЫБОР КОГДА ДанныеРегистра.СуммаОстаток > 0 ТОГДА
	|		ДанныеРегистра.СуммаОстаток
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаНачальныйОстаток,
	|	ВЫБОР КОГДА ДанныеРегистра.СуммаОстаток < 0 ТОГДА
	|		-ДанныеРегистра.СуммаОстаток
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаНачальныйПерерасход,
	|	0 КАК СуммаКонечныйОстаток,
	|	0 КАК СуммаКонечныйПерерасход
	|	
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц.Остатки(
	|		&ДатаНачальныхОстатков,
	|		Организация = &Организация И ПодотчетноеЛицо = &ПодотчетноеЛицо
	|	) КАК ДанныеРегистра
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Валюта КАК Валюта,
	|	0,
	|	0,
	|	ВЫБОР КОГДА ДанныеРегистра.СуммаОстаток > 0 ТОГДА
	|		ДанныеРегистра.СуммаОстаток
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ДанныеРегистра.СуммаОстаток < 0 ТОГДА
	|		-ДанныеРегистра.СуммаОстаток
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ
	|	
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц.Остатки(
	|		&ДатаКонечныхОстатков,
	|		Организация = &Организация И ПодотчетноеЛицо = &ПодотчетноеЛицо
	|	) КАК ДанныеРегистра) КАК Данные
	|СГРУППИРОВАТЬ ПО
	|	Валюта
	|";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Выборка = МассивРезультатов[5].Выбрать();
	ВыборкаОстатки = МассивРезультатов[4].Выбрать();
	ВыборкаВыдано = МассивРезультатов[3].Выбрать();
	
	ВыборкаКонвертация = МассивРезультатов[7].Выбрать();
	ВыборкаДатыОстатков = МассивРезультатов[8].Выбрать();
	ВыборкаИзрасходованоВВалюте = МассивРезультатов[9].Выбрать();
	
	ВыборкаОборотнаяСторона = МассивРезультатов[6].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ИспользуетсяРеглУчет Тогда
		ВыборкаПроводок = МассивРезультатов[11].Выбрать();
		ВыборкаСчетов = МассивРезультатов[12].Выбрать();
		ВыборкаСчетовУточнение = МассивРезультатов[12].Выбрать();
		Проводки = МассивРезультатов[11].Выгрузить();
	Иначе
		ВыборкаПроводок = МассивРезультатов[10].Выбрать();
		ВыборкаСчетов = МассивРезультатов[10].Выбрать();
		ВыборкаСчетовУточнение = МассивРезультатов[10].Выбрать();
		Проводки = МассивРезультатов[10].Выгрузить();
	КонецЕсли;
	
	Если МассивРезультатов[5].Пустой() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ШаблонОшибки);
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ПечатьВИностраннойВалюте = (Выборка.Валюта <> ВалютаРегламентированногоУчета Или Выборка.Мультивалютный);
		Если ПечатьВИностраннойВалюте Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АвансовыйОтчет.ПФ_MXL_АвансовыйОтчетВИностраннойВалюте");
		Иначе
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АвансовыйОтчет.ПФ_MXL_АвансовыйОтчет");
		КонецЕсли;
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Выводим титульный лист авансового отчета
		ОбластьТитул = Макет.ПолучитьОбласть("Титул");
		ОбластьТитулПодвал = Макет.ПолучитьОбласть("ТитулПодвал");
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьТитул, Выборка.Ссылка);
		
		Постфикс = ПостфиксНомераДокумента(Выборка.Ссылка);
		
		ОбластьТитул.Параметры.Заполнить(Выборка);
		ОбластьТитул.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер) + Постфикс;
		ОбластьТитул.Параметры.РуководительПредставление = Выборка.Руководитель;
		
		ОбластьТитулПодвал.Параметры.Заполнить(Выборка);
		ОбластьТитулПодвал.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер) + Постфикс;
		ОбластьТитулПодвал.Параметры.ГлавныйБухгалтерПредставление = Выборка.ГлавныйБухгалтер;
		
		
		СтруктураПоиска = Новый Структура("Ссылка", Выборка.Ссылка);
		
		Если Не ПечатьВИностраннойВалюте Тогда
			
			// Обороты
			ПолученоИзКассы = 0;
			ПолученоПоБанковскимКартам = 0;
			Возвращено = 0;
			ПолученоИзКассыВВалюте = "";
			ПолученоПоБанковскимКартамВВалюте = "";
			
			Пока ВыборкаВыдано.НайтиСледующий(СтруктураПоиска) Цикл
				
				Если ВыборкаВыдано.Валюта <> ВалютаРегламентированногоУчета Тогда
					Если ВыборкаВыдано.СуммаВыданоНаличнымиВВалюте > 0 Тогда
						ПолученоИзКассыВВалюте = ПолученоИзКассыВВалюте
							+ " " + Строка(ВыборкаВыдано.СуммаВыданоНаличнымиВВалюте)
							+ " " + Строка(ВыборкаВыдано.Валюта) + " ";
					КонецЕсли;
					Если ВыборкаВыдано.СуммаВыданоКартойВВалюте > 0 Тогда
						ПолученоПоБанковскимКартамВВалюте = ПолученоПоБанковскимКартамВВалюте
							+ " " + Строка(ВыборкаВыдано.СуммаВыданоКартойВВалюте)
							+ " " + Строка(ВыборкаВыдано.Валюта) + " ";
					КонецЕсли;
				КонецЕсли;
				ПолученоИзКассы = ПолученоИзКассы + ВыборкаВыдано.СуммаВыданоНаличными;
				ПолученоПоБанковскимКартам = ПолученоПоБанковскимКартам + ВыборкаВыдано.СуммаВыданоКартой;
				Возвращено = Возвращено + ВыборкаВыдано.СуммаВозвращено;
			КонецЦикла;
			
			ОбластьТитул.Параметры.ПолученоИзКассы = ПолученоИзКассы;
			ОбластьТитул.Параметры.ПолученоПоБанковскимКартам = ПолученоПоБанковскимКартам;
			ОбластьТитул.Параметры.ИтогоПолучено = ПолученоИзКассы + ПолученоПоБанковскимКартам;
			ОбластьТитул.Параметры.ПолученоИзКассыВВалюте = ПолученоИзКассыВВалюте;
			ОбластьТитул.Параметры.ПолученоПоБанковскимКартамВВалюте = ПолученоПоБанковскимКартамВВалюте;
			
			// Остатки
			Если ВыборкаОстатки.НайтиСледующий(СтруктураПоиска) Тогда
				
				ОбластьТитул.Параметры.Заполнить(ВыборкаОстатки);
				
				// Возвраты трактуются как уменьшение остатка с предыдущего отчета
				Остаток = ВыборкаОстатки.НачальныйОстаток - ВыборкаОстатки.НачальныйПерерасход - Возвращено;
				Если Остаток > 0 Тогда
					ОбластьТитул.Параметры.НачальныйОстаток = Остаток;
					ОбластьТитул.Параметры.НачальныйПерерасход = 0;
				Иначе
					ОбластьТитул.Параметры.НачальныйОстаток = 0;
					ОбластьТитул.Параметры.НачальныйПерерасход = -Остаток;
				КонецЕсли;
				
				ОбластьТитулПодвал.Параметры.СуммаОтчетаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
					ВыборкаОстатки.Израсходовано,
					ВалютаРегламентированногоУчета,
					Ложь);
				
				ИспСумма = Окр(ВыборкаОстатки.Израсходовано, 2, 1);
				ЦелСумма = Цел(ВыборкаОстатки.Израсходовано);
				КопСумма = 100 * (Окр(ИспСумма - ЦелСумма, 2, 1));
				
				ОбластьТитул.Параметры.ИзрасходованоРуб = ЦелСумма;
				ОбластьТитул.Параметры.ИзрасходованоКоп = Формат(КопСумма,"ЧН=00");
			КонецЕсли;
			
			Счетчик = 0;
			Проводки.Свернуть("Регистратор, СчетДт, СчетКт", "Сумма");
			СтруктураПоиска = Новый Структура("Регистратор", Выборка.Ссылка);
			НайденныеПроводки = Проводки.НайтиСтроки(СтруктураПоиска);
			Для каждого Проводка из НайденныеПроводки Цикл
				Счетчик = Счетчик + 1;
				Если Счетчик < 9 Тогда
					ОбластьТитул.Параметры["СубСчетДебет"  + Счетчик] = Проводка.СчетДт;
					ОбластьТитул.Параметры["СуммаДебет"    + Счетчик] = Проводка.Сумма;
					ОбластьТитул.Параметры["СубСчетКредит" + Счетчик] = Проводка.СчетКт;
					ОбластьТитул.Параметры["СуммаКредит"   + Счетчик] = Проводка.Сумма;
				Иначе
					Если Счетчик = 9 Тогда
						ТабличныйДокумент.Вывести(ОбластьТитул);
					КонецЕсли;
					ОбластьПроводок = Макет.ПолучитьОбласть("СтрокаПроводок");
					ОбластьПроводок.Параметры["СубСчетДебет" ] = Проводка.СчетДт;
					ОбластьПроводок.Параметры["СуммаДебет"   ] = Проводка.Сумма;
					ОбластьПроводок.Параметры["СубСчетКредит"] = Проводка.СчетКт;
					ОбластьПроводок.Параметры["СуммаКредит"  ] = Проводка.Сумма;
					ТабличныйДокумент.Вывести(ОбластьПроводок);
				КонецЕсли;
			КонецЦикла;
			
			Если Счетчик < 9 Тогда
				ТабличныйДокумент.Вывести(ОбластьТитул);
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьТитулПодвал);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			// Оборотная сторона
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			
			ИтогоПоОтчету = 0;
			ИтогоПоОтчетуВВалюте = 0;
			ИтогоПоУчету = 0;
			ИтогоПоУчетуВВалюте = 0;
			
			НомерСтроки = 0;
			
			СтруктураПоиска = Новый Структура("Ссылка", Выборка.Ссылка);
			ВыборкаОборотнаяСторона.НайтиСледующий(СтруктураПоиска);
			
			ОбработанныеНомераСтрок = Новый Массив;
			ТекущийРаздел = 0;
			
			ВыборкаПоРасходам = ВыборкаОборотнаяСторона.Выбрать();
			Пока ВыборкаПоРасходам.Следующий() Цикл
				
				Если ТекущийРаздел <> ВыборкаПоРасходам.НомерРаздела Тогда
					ОбработанныеНомераСтрок.Очистить();
					ТекущийРаздел = ВыборкаПоРасходам.НомерРаздела;
				КонецЕсли;
				
				Если ОбработанныеНомераСтрок.Найти(ВыборкаПоРасходам.НомерСтроки) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				ОбработанныеНомераСтрок.Добавить(ВыборкаПоРасходам.НомерСтроки);
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаПоРасходам);
				НомерСтроки = НомерСтроки + 1;
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				
				ИтогоПоОтчету = ИтогоПоОтчету + ВыборкаПоРасходам.ПоОтчету;
				ИтогоПоОтчетуВВалюте = ИтогоПоОтчетуВВалюте + ВыборкаПоРасходам.ПоОтчетуВВалюте;
				ИтогоПоУчету = ИтогоПоУчету + ВыборкаПоРасходам.ПоУчету;
				ИтогоПоУчетуВВалюте = ИтогоПоУчетуВВалюте + ВыборкаПоРасходам.ПоУчетуВВалюте;
				
				ОбластьМакета.Параметры.ДебетСубСчета = "";
				
				Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда // Оплата и прочие расходы
					
					МассивСчетов = Новый Массив;
					
					Если ЗначениеЗаполнено(ВыборкаПоРасходам.СчетУчета) Тогда
						
						МассивСчетов.Добавить(ВыборкаПоРасходам.СчетУчета);
					Иначе
						
						Если ИспользуетсяРеглУчет Тогда
						
							СтруктураПоиска = Новый Структура;
							СтруктураПоиска.Вставить("Регистратор",      Выборка.Ссылка);
							СтруктураПоиска.Вставить("ЗначениеСубконто", ВыборкаПоРасходам.СтатьяРасходов);
							
							ВыборкаСчетов.Сбросить();
						
							Пока ВыборкаСчетов.НайтиСледующий(СтруктураПоиска) Цикл
								МассивСчетов.Добавить(ВыборкаСчетов.СчетДт);
							КонецЦикла;
							
							СтруктураПоиска.Вставить("ЗначениеСубконто", ВыборкаПоРасходам.АналитикаРасходов);
							
							ВыборкаСчетов.Сбросить();
							Пока ВыборкаСчетов.НайтиСледующий(СтруктураПоиска) Цикл
								МассивСчетов.Добавить(ВыборкаСчетов.СчетДт);
							КонецЦикла;
							
							// НДС
							Если ВыборкаПоРасходам.НомерРаздела = 1 Тогда
								
								СтруктураПоиска = Новый Структура;
								СтруктураПоиска.Вставить("Регистратор",      Выборка.Ссылка);
								СтруктураПоиска.Вставить("ЗначениеСубконто", ВыборкаПоРасходам.Контрагент);
								
								ВыборкаСчетов.Сбросить();
								Пока ВыборкаСчетов.НайтиСледующий(СтруктураПоиска) Цикл
									
									СтруктураПоискаУточнение = Новый Структура;
									СтруктураПоискаУточнение.Вставить("СчетДт",           ВыборкаСчетов.СчетДт);
									СтруктураПоискаУточнение.Вставить("Регистратор",      Выборка.Ссылка);
									СтруктураПоискаУточнение.Вставить("ЗначениеСубконто", Выборка.Ссылка);
									
									ВыборкаСчетовУточнение.Сбросить();
									Пока ВыборкаСчетовУточнение.НайтиСледующий(СтруктураПоискаУточнение) Цикл
										МассивСчетов.Добавить(ВыборкаСчетов.СчетДт);
									КонецЦикла;
								КонецЦикла;
							КонецЕсли;
							
							// Оплата
							Если ВыборкаПоРасходам.НомерРаздела = 2 Тогда
								
								СтруктураПоиска = Новый Структура;
								СтруктураПоиска.Вставить("Регистратор",      Выборка.Ссылка);
								СтруктураПоиска.Вставить("ЗначениеСубконто", ВыборкаПоРасходам.КонтрагентОплаты);
								
								ВыборкаСчетов.Сбросить();
								Пока ВыборкаСчетов.НайтиСледующий(СтруктураПоиска) Цикл
									
									СтруктураПоискаУточнение = Новый Структура;
									СтруктураПоискаУточнение.Вставить("СчетДт",           ВыборкаСчетов.СчетДт);
									СтруктураПоискаУточнение.Вставить("Регистратор",      Выборка.Ссылка);
									СтруктураПоискаУточнение.Вставить("ЗначениеСубконто", Выборка.Ссылка);
									
									ВыборкаСчетовУточнение.Сбросить();
									Если Не ВыборкаСчетовУточнение.НайтиСледующий(СтруктураПоискаУточнение) Тогда
										МассивСчетов.Добавить(ВыборкаСчетов.СчетДт);
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						Иначе
							
							СтруктураПоиска = Новый Структура;
							СтруктураПоиска.Вставить("Регистратор",      Выборка.Ссылка);
							СтруктураПоиска.Вставить("ЗначениеСубконто", ВыборкаПоРасходам.СтатьяРасходов);
							
							ВыборкаСчетов.Сбросить();
							Пока ВыборкаСчетов.НайтиСледующий(СтруктураПоиска) Цикл
								МассивСчетов.Добавить(ВыборкаСчетов.СчетДт);
							КонецЦикла;
							
							СтруктураПоиска.Вставить("ЗначениеСубконто", ВыборкаПоРасходам.АналитикаРасходов);
							
							ВыборкаСчетов.Сбросить();
							Пока ВыборкаСчетов.НайтиСледующий(СтруктураПоиска) Цикл
								МассивСчетов.Добавить(ВыборкаСчетов.СчетДт);
							КонецЦикла;
							
							СтруктураПоиска = Новый Структура;
							СтруктураПоиска.Вставить("Регистратор",      Выборка.Ссылка);
							СтруктураПоиска.Вставить("ЗначениеСубконто", ВыборкаПоРасходам.КонтрагентОплаты);
							
							ВыборкаСчетов.Сбросить();
							Пока ВыборкаСчетов.НайтиСледующий(СтруктураПоиска) Цикл
								МассивСчетов.Добавить(ВыборкаСчетов.СчетДт);
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
					
				Иначе // Закупка
					СтруктураПоиска = Новый Структура();
					СтруктураПоиска.Вставить("Регистратор", Выборка.Ссылка);
					
					ВыборкаПроводок.Сбросить();
					МассивСчетов = Новый Массив;
					
					Пока ВыборкаПроводок.НайтиСледующий(СтруктураПоиска) Цикл
						МассивСчетов.Добавить(ВыборкаПроводок.СчетДт);
					КонецЦикла;
				КонецЕсли;
				
				ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(МассивСчетов);
				Для каждого СчетДт из МассивСчетов Цикл
					ОбластьМакета.Параметры.ДебетСубСчета = ОбластьМакета.Параметры.ДебетСубСчета
						+ ?(ПустаяСтрока(ОбластьМакета.Параметры.ДебетСубСчета), "", ", ")
						+ СчетДт;
				КонецЦикла;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
			
			// Подвал авансового отчета
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ОбластьМакета.Параметры.ИтогоПоОтчету                 = ИтогоПоОтчету;
			ОбластьМакета.Параметры.ИтогоПоОтчетувВалюте          = ИтогоПоОтчетуВВалюте;
			ОбластьМакета.Параметры.ИтогоПоУчету                  = ИтогоПоУчету;
			ОбластьМакета.Параметры.ИтогоПоУчетувВалюте           = ИтогоПоУчетуВВалюте;
			ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица = Выборка.ПредставлениеПодотчетногоЛица;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ВыборкаОборотнаяСторона.Сбросить();
			
		Иначе // Валютный отчет
			
			ТабличныйДокумент.Вывести(ОбластьТитул);
			
			Область = Макет.ПолучитьОбласть("Титул1|Показатели");
			ТабличныйДокумент.Вывести(Область);
			
			ЕстьСтрокаКонвертации = ВыборкаКонвертация.НайтиСледующий(СтруктураПоиска);
			Если ЕстьСтрокаКонвертации Тогда
				Область = Макет.ПолучитьОбласть("Титул1|Конвертация");
				ТабличныйДокумент.Присоединить(Область);
			КонецЕсли;
			
			ВыборкаВалютныхОстатков = Неопределено;
			
			// Остатки
			Если ВыборкаДатыОстатков.НайтиСледующий(СтруктураПоиска) Тогда
				
				ЗапросВалютныхОстатков.УстановитьПараметр("ДатаНачальныхОстатков", Новый Граница(ВыборкаДатыОстатков.МоментВремениПредыдущийОтчет));
				ЗапросВалютныхОстатков.УстановитьПараметр("ДатаКонечныхОстатков", Новый Граница(ВыборкаДатыОстатков.МоментВремени));
				ЗапросВалютныхОстатков.УстановитьПараметр("Организация", ВыборкаДатыОстатков.Организация);
				ЗапросВалютныхОстатков.УстановитьПараметр("ПодотчетноеЛицо", ВыборкаДатыОстатков.ПодотчетноеЛицо);
				
				ВыборкаВалютныхОстатков = ЗапросВалютныхОстатков.Выполнить().Выбрать();
				
				Пока ВыборкаВалютныхОстатков.Следующий() Цикл
					Если ВыборкаВалютныхОстатков.СуммаНачальныйОстаток <> 0 Тогда
						Область = Макет.ПолучитьОбласть("СтрокаТитул|Показатели");
						Область.Параметры.Валюта = ВыборкаВалютныхОстатков.Валюта;
						Область.Параметры.Сумма = ВыборкаВалютныхОстатков.СуммаНачальныйОстаток;
						ТабличныйДокумент.Вывести(Область);
						
						Если ЕстьСтрокаКонвертации Тогда
							ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				ВыборкаВалютныхОстатков.Сбросить();
				
				Область = Макет.ПолучитьОбласть("Титул2|Показатели");
				ТабличныйДокумент.Вывести(Область);
				
				Если ЕстьСтрокаКонвертации Тогда
					ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
				КонецЕсли;
				
				Пока ВыборкаВалютныхОстатков.Следующий() Цикл
					Если ВыборкаВалютныхОстатков.СуммаНачальныйПерерасход <> 0 Тогда
						Область = Макет.ПолучитьОбласть("СтрокаТитул|Показатели");
						Область.Параметры.Валюта = ВыборкаВалютныхОстатков.Валюта;
						Область.Параметры.Сумма = ВыборкаВалютныхОстатков.СуммаНачальныйПерерасход;
						ТабличныйДокумент.Вывести(Область);
						
						Если ЕстьСтрокаКонвертации Тогда
							ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				ВыборкаВалютныхОстатков.Сбросить();
				
			КонецЕсли;
			
			// Обороты
			Область = Макет.ПолучитьОбласть("Титул3|Показатели");
			ТабличныйДокумент.Вывести(Область);
			Если ЕстьСтрокаКонвертации Тогда
				ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
			КонецЕсли;
			
			Пока ВыборкаВыдано.НайтиСледующий(СтруктураПоиска) Цикл
				Если ВыборкаВыдано.СуммаВыданоНаличными <> 0 Или ВыборкаВыдано.СуммаВыданоНаличнымиВВалюте <> 0 Тогда
					Область = Макет.ПолучитьОбласть("СтрокаТитул|Показатели");
					Область.Параметры.Валюта = ВыборкаВыдано.Валюта;
					Если ВыборкаВыдано.Валюта = ВалютаРегламентированногоУчета Тогда
						Область.Параметры.Сумма = ВыборкаВыдано.СуммаВыданоНаличными;
					Иначе
						Область.Параметры.Сумма = ВыборкаВыдано.СуммаВыданоНаличнымиВВалюте;
					КонецЕсли;
					ТабличныйДокумент.Вывести(Область);
				КонецЕсли;
				
				Если ЕстьСтрокаКонвертации Тогда
					ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
				КонецЕсли;
			КонецЦикла;
			ВыборкаВыдано.Сбросить();
			
			Область = Макет.ПолучитьОбласть("Титул4|Показатели");
			ТабличныйДокумент.Вывести(Область);
			Если ЕстьСтрокаКонвертации Тогда
				ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
			КонецЕсли;
			
			Пока ВыборкаВыдано.НайтиСледующий(СтруктураПоиска) Цикл
				Если ВыборкаВыдано.СуммаВыданоКартой <> 0 Или ВыборкаВыдано.СуммаВыданоКартойВВалюте <> 0 Тогда
					Область = Макет.ПолучитьОбласть("СтрокаТитул|Показатели");
					Область.Параметры.Валюта = ВыборкаВыдано.Валюта;
					Если ВыборкаВыдано.Валюта = ВалютаРегламентированногоУчета Тогда
						Область.Параметры.Сумма = ВыборкаВыдано.СуммаВыданоКартой;
					Иначе
						Область.Параметры.Сумма = ВыборкаВыдано.СуммаВыданоКартойВВалюте;
					КонецЕсли;
					ТабличныйДокумент.Вывести(Область);
				КонецЕсли;
				
				Если ЕстьСтрокаКонвертации Тогда
					ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
				КонецЕсли;
			КонецЦикла;
			
			Область = Макет.ПолучитьОбласть("Титул5|Показатели");
			ТабличныйДокумент.Вывести(Область);
			Если ЕстьСтрокаКонвертации Тогда
				ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
			КонецЕсли;
			
			Пока ВыборкаИзрасходованоВВалюте.НайтиСледующий(СтруктураПоиска) Цикл
				Область = Макет.ПолучитьОбласть("СтрокаТитул|Показатели");
				ЗаполнитьЗначенияСвойств(Область.Параметры, ВыборкаИзрасходованоВВалюте);
				ТабличныйДокумент.Вывести(Область);
				
				Если ЕстьСтрокаКонвертации Тогда
					ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
				КонецЕсли;
			КонецЦикла;
			
			// Остатки
			Область = Макет.ПолучитьОбласть("Титул6|Показатели");
			ТабличныйДокумент.Вывести(Область);
			Если ЕстьСтрокаКонвертации Тогда
				ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
			КонецЕсли;
			
			Если ВыборкаВалютныхОстатков <> Неопределено Тогда
				
				Пока ВыборкаВалютныхОстатков.Следующий() Цикл
					Если ВыборкаВалютныхОстатков.СуммаКонечныйОстаток <> 0 Тогда
						Область = Макет.ПолучитьОбласть("СтрокаТитул|Показатели");
						Область.Параметры.Валюта = ВыборкаВалютныхОстатков.Валюта;
						Область.Параметры.Сумма = ВыборкаВалютныхОстатков.СуммаКонечныйОстаток;
						ТабличныйДокумент.Вывести(Область);
						
						Если ЕстьСтрокаКонвертации Тогда
							ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				ВыборкаВалютныхОстатков.Сбросить();
				
				Пока ЕстьСтрокаКонвертации Цикл
					ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
				КонецЦикла;
			КонецЕсли;
			
			Область = Макет.ПолучитьОбласть("Титул7|Показатели");
			ТабличныйДокумент.Вывести(Область);
			Пока ЕстьСтрокаКонвертации Цикл
				ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
			КонецЦикла;
			
			Если ВыборкаВалютныхОстатков <> Неопределено Тогда
				
				Пока ВыборкаВалютныхОстатков.Следующий() Цикл
					Если ВыборкаВалютныхОстатков.СуммаКонечныйПерерасход <> 0 Тогда
						Область = Макет.ПолучитьОбласть("СтрокаТитул|Показатели");
						Область.Параметры.Валюта = ВыборкаВалютныхОстатков.Валюта;
						Область.Параметры.Сумма = ВыборкаВалютныхОстатков.СуммаКонечныйПерерасход;
						ТабличныйДокумент.Вывести(Область);
						
						Если ЕстьСтрокаКонвертации Тогда
							ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				Пока ЕстьСтрокаКонвертации Цикл
					ЕстьСтрокаКонвертации = ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска);
				КонецЦикла;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьТитулПодвал);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			// Оборотная сторона
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			
			НомерСтроки = 0;
			
			СтруктураПоиска = Новый Структура("Ссылка", Выборка.Ссылка);
			ВыборкаОборотнаяСторона.НайтиСледующий(СтруктураПоиска);
			
			ОбработанныеНомераСтрок = Новый Массив;
			ТекущийРаздел = 0;
			
			ВыборкаПоРасходам = ВыборкаОборотнаяСторона.Выбрать();
			Пока ВыборкаПоРасходам.Следующий() Цикл
				
				Если ТекущийРаздел <> ВыборкаПоРасходам.НомерРаздела Тогда
					ОбработанныеНомераСтрок.Очистить();
					ТекущийРаздел = ВыборкаПоРасходам.НомерРаздела;
				КонецЕсли;
				
				Если ОбработанныеНомераСтрок.Найти(ВыборкаПоРасходам.НомерСтроки) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				ОбработанныеНомераСтрок.Добавить(ВыборкаПоРасходам.НомерСтроки);
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаПоРасходам);
				НомерСтроки = НомерСтроки + 1;
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
			
			// Подвал авансового отчета
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ВыборкаОборотнаяСторона.Сбросить();
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ВывестиСтрокуКонвертации(Макет, ТабличныйДокумент, ВыборкаКонвертация, СтруктураПоиска)
	
	Область = Макет.ПолучитьОбласть("СтрокаТитул|Конвертация");
	ЗаполнитьЗначенияСвойств(Область.Параметры, ВыборкаКонвертация);
	ТабличныйДокумент.Присоединить(Область);
	Возврат ВыборкаКонвертация.НайтиСледующий(СтруктураПоиска);
	
КонецФункции

// Функция получает данные для формирования печатной формы "Извещение"
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив - Массив ссылок на документы, по которым необходимо получить данные
//
// Возвращаемое значение:
//	Структура - Структура с полем "РезультатПоШапке"
//
Функция ПолучитьДанныеДляПечатнойФормыИзвещения(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	|	Документы.Организация КАК Организация,
	|	Документы.ПодотчетноеЛицо КАК Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо) КАК КонтрагентЮрФизЛицо,
	|	Документы.БанковскийСчет КАК БанковскийСчет,
	|	Документы.БанковскийСчет.НомерСчета КАК НомерБанковскогоСчета,
	|	ВЫБОР
	|		КОГДА Документы.БанковскийСчет.РучноеИзменениеРеквизитовБанка
	|			ТОГДА Документы.БанковскийСчет.БИКБанка
	|		ИНАЧЕ КлассификаторБанков.Код
	|	КОНЕЦ КАК БИКБанк,
	|	ВЫБОР
	|		КОГДА Документы.БанковскийСчет.РучноеИзменениеРеквизитовБанка
	|			ТОГДА Документы.БанковскийСчет.НаименованиеБанка
	|		ИНАЧЕ КлассификаторБанков.Наименование
	|	КОНЕЦ КАК НаименованиеБанка,
	|	ВЫБОР
	|		КОГДА Документы.БанковскийСчет.РучноеИзменениеРеквизитовБанка
	|			ТОГДА Документы.БанковскийСчет.КоррСчетБанка
	|		ИНАЧЕ КлассификаторБанков.КоррСчет
	|	КОНЕЦ КАК КоррСчетБанка,
	|	ВЫБОР
	|		КОГДА Документы.БанковскийСчет.РучноеИзменениеРеквизитовБанка
	|			ТОГДА Документы.БанковскийСчет.ГородБанка
	|		ИНАЧЕ КлассификаторБанков.Город
	|	КОНЕЦ КАК ГородБанка,
	|	ВЫБОР
	|		КОГДА Документы.БанковскийСчет.РучноеИзменениеРеквизитовБанкаДляРасчетов
	|			ТОГДА Документы.БанковскийСчет.БИКБанкаДляРасчетов
	|		ИНАЧЕ КлассификаторБанковКорреспондентовРФ.Код
	|	КОНЕЦ КАК БИКБанкаДляРасчетов,
	|	ВЫБОР
	|		КОГДА Документы.БанковскийСчет.РучноеИзменениеРеквизитовБанкаДляРасчетов
	|			ТОГДА Документы.БанковскийСчет.НаименованиеБанкаДляРасчетов
	|		ИНАЧЕ КлассификаторБанковКорреспондентовРФ.Наименование
	|	КОНЕЦ КАК НаименованиеБанкаДляРасчетов,
	|	ВЫБОР
	|		КОГДА Документы.БанковскийСчет.РучноеИзменениеРеквизитовБанкаДляРасчетов
	|			ТОГДА Документы.БанковскийСчет.КоррСчетБанкаДляРасчетов
	|		ИНАЧЕ КлассификаторБанковКорреспондентовРФ.КоррСчет
	|	КОНЕЦ КАК КоррСчетБанкаДляРасчетов,
	|	ВЫБОР
	|		КОГДА Документы.БанковскийСчет.РучноеИзменениеРеквизитовБанкаДляРасчетов
	|			ТОГДА Документы.БанковскийСчет.ГородБанкаДляРасчетов
	|		ИНАЧЕ КлассификаторБанковКорреспондентовРФ.Город
	|	КОНЕЦ КАК ГородБанкаДляРасчетов,
	|	Документы.БанковскийСчет.ТекстКорреспондента КАК БанковскийСчетТекстКорреспондента,
	|	Документы.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	&НазначениеПлатежа КАК НазначениеПлатежа,
	|	Документы.СуммаИзрасходовано КАК СуммаДокумента
	|
	|ИЗ
	|	Документ.АвансовыйОтчет КАК Документы
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторБанков КАК КлассификаторБанков
	|	ПО
	|		Документы.БанковскийСчет.Банк = КлассификаторБанков.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторБанков КАК КлассификаторБанковКорреспондентовРФ
	|	ПО
	|		Документы.БанковскийСчет.БанкДляРасчетов = КлассификаторБанковКорреспондентовРФ.Ссылка
	|	
	|ГДЕ
	|	Документы.Ссылка В (&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("НазначениеПлатежа", НСтр("ru = 'Возврат суммы, выданной под отчет.'"));
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", ПакетРезультатовЗапроса[0]);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ПостфиксНомераДокумента(Ссылка)
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		Возврат НСтр("ru = 'А'");
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		Возврат НСтр("ru = 'Т'");
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПриобретениеУслугПрочихАктивов") Тогда
		Возврат НСтр("ru = 'П'");
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
