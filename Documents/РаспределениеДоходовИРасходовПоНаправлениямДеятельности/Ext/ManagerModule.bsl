#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Распределение доходов и расходов ".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ФормироватьФинансовыйРезультат";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

// Создает документы распределения за указанный месяц
//	
//	Параметры:
//		Период - Дата - Начало месяца, за который необходимо создать документы.
//		Организация - Массив, Неопределено - Список организаций по которым формируются документы. Если список пустой,
//												то документы формируются по всем организациям.
//		Отказ - Булево - Используется при вызове из формы закрытия месяца. При установке в "Истина" - дальнейшие операции
//							выполняться не будут.
Процедура СоздатьДокументыЗаПериод(Период, Организация = Неопределено, Отказ = Ложь) Экспорт
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(НСтр("ru='Распределение доходов и расходов по направлениям деятельности'"));
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеМесяца.РаспределениеДоходовИРасходовПоНаправлениямДеятельности");
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеСправочника.Ссылка КАК Организация
	|ПОМЕСТИТЬ ВТОрганизации
	|ИЗ
	|	Справочник.Организации КАК ДанныеСправочника
	|ГДЕ
	|	(ДанныеСправочника.Ссылка = &Организация
	|		ИЛИ &ПоВсемОрганизациям)
	|	И (ДанныеСправочника.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|		ИЛИ &УчитыватьУпрОрганизацию)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Организация КАК Организация
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности КАК Док
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОрганизации КАК ВТОрганизации
	|	ПО Док.Организация = ВТОрганизации.Организация
	|ГДЕ
	|	Док.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Док.ПометкаУдаления = ЛОЖЬ
	|	И Док.РаспределениеПоВсемОрганизациям = ЛОЖЬ
	|	И
	|	(Док.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|		ИЛИ &УчитыватьУпрОрганизацию)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОрганизации.Организация КАК Организация,
	|	ВТДокументы.Ссылка КАК Документ
	|ИЗ
	|	ВТОрганизации КАК ВТОрганизации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы
	|	ПО ВТОрганизации.Организация = ВТДокументы.Организация
	|");

	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", (Организация = Неопределено ИЛИ Организация = Справочники.Организации.ПустаяСсылка()));
	Запрос.УстановитьПараметр("УчитыватьУпрОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Индекс = РезультатЗапроса.ВГраница();
	
	
	ДокументыРаспределения = РезультатЗапроса[Индекс].Выбрать();
	Пока ДокументыРаспределения.Следующий() Цикл 
		
		Если ДокументыРаспределения.Документ = Null Тогда
			ДокументРаспределения = Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.СоздатьДокумент();
			ДокументРаспределения.Дата = КонецМесяца(Период);
			ДокументРаспределения.РаспределениеПоВсемОрганизациям 	= Ложь;
			ДокументРаспределения.Организация = ДокументыРаспределения.Организация;
			ДокументРаспределения.Ответственный = Пользователи.ТекущийПользователь();
		Иначе
			ДокументРаспределения = ДокументыРаспределения.Документ.ПолучитьОбъект();
		КонецЕсли;
		
		Если ДокументРаспределения.Проведен Тогда
			ДокументРаспределения.Записать(РежимЗаписиДокумента.ОтменаПроведения)
		КонецЕсли;
		
		ДокументРаспределения.ЗаполнитьРасходыПоОстаткам();
		ДокументРаспределения.ЗаполнитьДоходыПоОстаткам();
		
		ДокументРаспределения.Записать(РежимЗаписиДокумента.Запись);
		
		// Проверим корректность заполнения документа.
		ТекстОшибки = УниверсальныеМеханизмыПартийИСебестоимости.ПроверитьЗаполнениеОбъектаСПерехватомСообщений(ДокументРаспределения);
		
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда
			
			// Проверка заполнения документа обнаружила ошибки.
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'При проверке документа ""%1"" были обнаружены ошибки:
					|%2'"),
				СокрЛП(ДокументРаспределения),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеМногострочногоТекста(ТекстОшибки, " - "));
			
		Иначе
			
			// Проведем документ.
			ТекстОшибки = УниверсальныеМеханизмыПартийИСебестоимости.ПровестиДокументСПерехватомСообщений(ДокументРаспределения);
			
			Если ЗначениеЗаполнено(ТекстОшибки) Тогда
				// Проведение документа выполнено с ошибками.
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'При проведении документа ""%1"" были обнаружены ошибки:
						|%2'"),
					СокрЛП(ДокументРаспределения),
					ПротоколРасчетаПартийИСебестоимости.ПредставлениеМногострочногоТекста(ТекстОшибки, " - "));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда
			
			ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемыРасчета(
				Перечисления.ОперацииЗакрытияМесяца.РаспределениеДоходовИРасходовПоНаправлениямДеятельности,
				ДокументыРаспределения.Организация,
				НачалоМесяца(Период));
			
			ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыРегистрации,
				НСтр("ru='При распределение доходов и расходов по организации ""%1"" за период %2 были диагностированы ошибки'"),
				Перечисления.ВариантыВажностиПроблемыСостоянияСистемы.Ошибка,
				ТекстОшибки,
				ДокументРаспределения.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, ДокументыРаспределения.Количество());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаФинансовыеРезультаты(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства);
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства);
	ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства);
	
	
	////////////////////////////////////////////////////////////////////////////
	// Поместим результаты запроса в дополнительные свойства
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.РаспределениеПоВсемОрганизациям КАК РаспределениеПоВсемОрганизациям
	|ИЗ
	|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";

	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("РаспределениеПоВсемОрганизациям", Реквизиты.РаспределениеПоВсемОрганизациям);
	Запрос.УстановитьПараметр("НачДата", НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонДата", КонецМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("НачГраница", Новый Граница(НачалоМесяца(Реквизиты.Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонГраница", Новый Граница(КонецМесяца(Реквизиты.Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ФормироватьФинансовыйРезультат",	ПолучитьФункциональнуюОпцию("ФормироватьФинансовыйРезультат"));
	
	ДоляТранспортныхРасходов = 1;
	Запрос.УстановитьПараметр("ДоляСписанияТранспортныхРасходов", ДоляТранспортныхРасходов);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПрочиеДоходы(Запрос, ТекстыЗапроса = Неопределено)
	
	ИмяРегистра = "ВтПрочиеДоходы";
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВтПрочиеДоходы") <> Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПрочиеДоходы.НомерСтроки КАК НомерСтроки,
	|	ПрочиеДоходы.Организация КАК Организация,
	|	ПрочиеДоходы.Подразделение КАК Подразделение,
	|	ПрочиеДоходы.СтатьяДоходов КАК СтатьяДоходов,
	|	ПрочиеДоходы.АналитикаДоходов КАК АналитикаДоходов,
	|	ПрочиеДоходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеДоходы.СпособРаспределения КАК СпособРаспределения,
	|
	|	ПрочиеДоходы.Сумма КАК Сумма,
	|	ПрочиеДоходы.СуммаУпр КАК СуммаУпр,
	|	ПрочиеДоходы.СуммаРегл КАК СуммаРегл
	|
	|ПОМЕСТИТЬ ВтПрочиеДоходы
	|ИЗ
	|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Доходы КАК ПрочиеДоходы
	|ГДЕ
	|	ПрочиеДоходы.Ссылка = &Ссылка
	|";
	
	Если ТекстыЗапроса <> Неопределено Тогда
		ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	КонецЕсли;
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
		
	ИмяРегистра = "ПрочиеДоходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	РезультатРаспределенияПоБазе(Запрос, ТекстыЗапроса, Новый Структура());
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)   КАК ВидДвижения,
	|	ТаблицаДоходы.Организация                КАК Организация,
	|	ТаблицаДоходы.Подразделение              КАК Подразделение,
	|	ТаблицаДоходы.ИсходноеНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДоходы.СтатьяДоходов              КАК СтатьяДоходов,
	|	ТаблицаДоходы.АналитикаДоходов           КАК АналитикаДоходов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеДоходовПоНаправлениямДеятельности) КАК ХозяйственнаяОперация,
	|	ТаблицаДоходы.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|
	|	СУММА(ТаблицаДоходы.Доходы)              КАК Сумма,
	|	СУММА(ТаблицаДоходы.ДоходыУпр)           КАК СуммаУпр,
	|	СУММА(ТаблицаДоходы.ДоходыРегл)          КАК СуммаРегл
	|ИЗ
	|	ВТФинансовыеРезультаты КАК ТаблицаДоходы
	|ГДЕ
	|	ТаблицаДоходы.Доходы <> 0
	|	ИЛИ ТаблицаДоходы.ДоходыУпр <> 0
	|	ИЛИ ТаблицаДоходы.ДоходыРегл <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДоходы.Организация,
	|	ТаблицаДоходы.Подразделение,
	|	ТаблицаДоходы.НаправлениеДеятельности,
	|	ТаблицаДоходы.СтатьяДоходов,
	|	ТаблицаДоходы.АналитикаДоходов,
	|	ТаблицаДоходы.ИсходноеНаправлениеДеятельности
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаВтДолиСписанияКосвенныхРасходов(Запрос, ТекстыЗапроса = Неопределено)
	
	ИмяРегистра = "ВтДолиСписанияКосвенныхРасходов";
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВтДолиСписанияКосвенныхРасходов") <> Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатьиРасходов.Ссылка КАК Ссылка,
	|			ЛОЖЬ
	|	КАК Нормируемые,
	|			ЛОЖЬ
	|	КАК Транспортные,
	|		1
	|	КАК ДоляСписания
	|
	|ПОМЕСТИТЬ ВтДолиСписанияКосвенныхРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|";
	Если ТекстыЗапроса <> Неопределено Тогда
		ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	КонецЕсли;
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса = Неопределено)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВтПрочиеРасходы") <> Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДолиСписанияКосвенныхРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтДолиСписанияКосвенныхРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПрочиеРасходы.НомерСтроки КАК НомерСтроки,
	|	ПрочиеРасходы.Организация КАК Организация,
	|	ПрочиеРасходы.Подразделение КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.СпособРаспределения КАК СпособРаспределения,
	|	ЕСТЬNULL(ДолиСписания.Нормируемые, ЛОЖЬ) КАК Нормируемые,
	|
	|	ПрочиеРасходы.Сумма КАК Сумма,
	|	ПрочиеРасходы.СуммаУпр КАК СуммаУпр,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(ДолиСписания.Транспортные, ЛОЖЬ)
	|			ТОГДА ПрочиеРасходы.СуммаРегл * ДолиСписания.ДоляСписания
	|		ИНАЧЕ ПрочиеРасходы.СуммаРегл КОНЕЦ) КАК СуммаРегл,
	|	(ВЫБОР
	|		КОГДА ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|			И ЕСТЬNULL(ДолиСписания.Нормируемые, ЛОЖЬ)
	//		Постоянная разница формируется расчетом себестоимости
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ДолиСписания.Транспортные, ЛОЖЬ)
	|			ТОГДА ПрочиеРасходы.ПостояннаяРазница * ДолиСписания.ДоляСписания
	//		Сумма нормируемых расходов по НУ к списанию: БУ - НУ (в части отнесения затрат на 90 счет)
	|		КОГДА ЕСТЬNULL(ДолиСписания.Нормируемые, ЛОЖЬ)
	|		 И ПрочиеРасходы.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|			ТОГДА ПрочиеРасходы.СуммаРегл - ПрочиеРасходы.ВременнаяРазница                                      // Остаток БУ
	|				- (ПрочиеРасходы.СуммаРегл - ПрочиеРасходы.ПостояннаяРазница - ПрочиеРасходы.ВременнаяРазница)
	|					* ДолиСписания.ДоляСписания  																// Остаток НУ, который мы можем отнести на затраты (90 счет)
	//		Закрытие года или не нормируемые расходы
	|		ИНАЧЕ ПрочиеРасходы.ПостояннаяРазница КОНЕЦ) КАК ПостояннаяРазница,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(ДолиСписания.Транспортные, ЛОЖЬ)
	|			ТОГДА ПрочиеРасходы.ВременнаяРазница * ДолиСписания.ДоляСписания
	|		ИНАЧЕ ПрочиеРасходы.ВременнаяРазница КОНЕЦ) КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ ВтПрочиеРасходы
	|ИЗ
	|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Расходы КАК ПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДолиСписанияКосвенныхРасходов КАК ДолиСписания
	|		ПО ДолиСписания.Ссылка = ПрочиеРасходы.СтатьяРасходов
	|ГДЕ
	|	ПрочиеРасходы.Ссылка = &Ссылка
	|";
	
	Если ТекстыЗапроса <> Неопределено Тогда
		ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	КонецЕсли;
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	РезультатРаспределенияПоБазе(Запрос, ТекстыЗапроса, Новый Структура());
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	ТаблицаРасходы.Организация                КАК Организация,
	|	ТаблицаРасходы.Подразделение              КАК Подразделение,
	|	ТаблицаРасходы.ИсходноеНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов             КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов          КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовПоНаправлениямДеятельности) КАК ХозяйственнаяОперация,
	|	ТаблицаРасходы.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|
	|	СУММА(ТаблицаРасходы.Расходы)             КАК Сумма,
	|	СУММА(ТаблицаРасходы.РасходыУпр)          КАК СуммаУпр,
	|	СУММА(ТаблицаРасходы.РасходыРегл)         КАК СуммаРегл,
	|	СУММА(ТаблицаРасходы.ПостояннаяРазница)   КАК ПостояннаяРазница,
	|	СУММА(ТаблицаРасходы.ВременнаяРазница)    КАК ВременнаяРазница
	|ИЗ
	|	ВТФинансовыеРезультаты КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.Расходы <> 0
	|	ИЛИ ТаблицаРасходы.РасходыУпр <> 0
	|	ИЛИ ТаблицаРасходы.РасходыРегл <> 0
	|	ИЛИ ТаблицаРасходы.ПостояннаяРазница <> 0
	|	ИЛИ ТаблицаРасходы.ВременнаяРазница <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасходы.Организация,
	|	ТаблицаРасходы.Подразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов,
	|	ТаблицаРасходы.ИсходноеНаправлениеДеятельности
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаФинансовыеРезультаты(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства = Неопределено)
	
	ИмяРегистра = "ФинансовыеРезультаты";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ДополнительныеСвойства = Неопределено Тогда
		 ДополнительныеСвойства = Новый Структура();
	КонецЕсли;
	
	РезультатРаспределенияПоБазе(Запрос, ТекстыЗапроса, ДополнительныеСвойства);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Таблица.Период                  КАК Период,
	|	Таблица.Регистратор             КАК Регистратор,
	|	Таблица.НомерСтроки             КАК НомерСтроки,
	|	Таблица.Организация             КАК Организация,
	|	Таблица.Подразделение           КАК Подразделение,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Таблица.СтатьяДоходов           КАК СтатьяДоходов,
	|	Таблица.СтатьяРасходов          КАК СтатьяРасходов,
	|	СУММА(Таблица.Доходы)           КАК Доходы,
	|	СУММА(Таблица.Расходы)          КАК Расходы,
	|	Таблица.СпособРаспределения     КАК СпособРаспределения
	|ИЗ
	|	ВТФинансовыеРезультаты КАК Таблица
	|ГДЕ
	|	&ФормироватьФинансовыйРезультат
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	Таблица.НомерСтроки,
	|	Таблица.Организация,
	|	Таблица.Подразделение,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.СтатьяДоходов,
	|	Таблица.СтатьяРасходов,
	|	Таблица.СпособРаспределения
	|ИМЕЮЩИЕ
	|	СУММА(Таблица.Доходы) <> 0
	|	ИЛИ СУММА(Таблица.Расходы) <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаДоходыРасходыКРаспределению()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаДоходы.НомерСтроки) КАК НомерСтроки,
	|	&Период                             КАК Период,
	|	ТаблицаДоходы.Организация           КАК Организация,
	|	ТаблицаДоходы.Подразделение         КАК Подразделение,
	|	ТаблицаДоходы.НаправлениеДеятельности КАК ИсходноеНаправлениеДеятельности,
	|	ТаблицаДоходы.СтатьяДоходов         КАК СтатьяДоходов,
	|	ТаблицаДоходы.АналитикаДоходов      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                        КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                        КАК АналитикаРасходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаДоходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДоходы.СпособРаспределения КОНЕЦ) КАК СпособРаспределения,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаДоходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ТаблицаДоходы.НаправлениеДеятельности
	|		КОГДА ТаблицаДоходы.АналитикаДоходов ССЫЛКА Справочник.НаправленияДеятельности
	|			ТОГДА ТаблицаДоходы.АналитикаДоходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ) КАК НаправлениеДеятельности,
	|	ЛОЖЬ КАК Нормируемые,
	|
	|	СУММА(ТаблицаДоходы.Сумма)          КАК Доходы,
	|	СУММА(ТаблицаДоходы.СуммаУпр)       КАК ДоходыУпр,
	|	СУММА(ТаблицаДоходы.СуммаРегл)      КАК ДоходыРегл,
	|	0                                   КАК Расходы,
	|	0                                   КАК РасходыУпр,
	|	0                                   КАК РасходыРегл,
	|	0                                   КАК ПостояннаяРазница,
	|	0                                   КАК ВременнаяРазница
	|ИЗ
	|	ВтПрочиеДоходы КАК ТаблицаДоходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДоходы.Организация,
	|	ТаблицаДоходы.Подразделение,
	|	ТаблицаДоходы.НаправлениеДеятельности,
	|	ТаблицаДоходы.СтатьяДоходов,
	|	ТаблицаДоходы.АналитикаДоходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаДоходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДоходы.СпособРаспределения КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА ТаблицаДоходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ТаблицаДоходы.НаправлениеДеятельности
	|		КОГДА ТаблицаДоходы.АналитикаДоходов ССЫЛКА Справочник.НаправленияДеятельности
	|			ТОГДА ТаблицаДоходы.АналитикаДоходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ)
	|
 	|ОБЪЕДИНИТЬ ВСЕ
 	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаРасходы.НомерСтроки)    КАК НомерСтроки,
	|	&Период                                 КАК Период,
	|	ТаблицаРасходы.Организация              КАК Организация,
	|	ТаблицаРасходы.Подразделение            КАК Подразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности  КАК ИсходноеНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО                            КАК АналитикаДоходов,
	|	ТаблицаРасходы.СтатьяРасходов           КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов        КАК АналитикаРасходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаРасходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаРасходы.СпособРаспределения КОНЕЦ) КАК СпособРаспределения,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаРасходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ТаблицаРасходы.НаправлениеДеятельности
	|		КОГДА ТаблицаРасходы.АналитикаРасходов ССЫЛКА Справочник.НаправленияДеятельности
	|			ТОГДА ТаблицаРасходы.АналитикаРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ) КАК НаправлениеДеятельности,
	|	ТаблицаРасходы.Нормируемые              КАК Нормируемые,
	|
	|	0                                       КАК Доходы,
	|	0                                       КАК ДоходыУпр,
	|	0                                       КАК ДоходыРегл,
	|	СУММА(ТаблицаРасходы.Сумма)             КАК Расходы,
	|	СУММА(ТаблицаРасходы.СуммаУпр)          КАК РасходыУпр,
	|	СУММА(ТаблицаРасходы.СуммаРегл)         КАК РасходыРегл,
	|	СУММА(ТаблицаРасходы.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ТаблицаРасходы.ВременнаяРазница)  КАК ВременнаяРазница
	|ИЗ
	|	ВтПрочиеРасходы КАК ТаблицаРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасходы.Организация,
	|	ТаблицаРасходы.Подразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаРасходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаРасходы.СпособРаспределения КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА ТаблицаРасходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ТаблицаРасходы.НаправлениеДеятельности
	|		КОГДА ТаблицаРасходы.АналитикаРасходов ССЫЛКА Справочник.НаправленияДеятельности
	|			ТОГДА ТаблицаРасходы.АналитикаРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ),
	|	ТаблицаРасходы.Нормируемые
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	СпособРаспределения,
	|	СтатьяДоходов,
	|	АналитикаДоходов,
	|	СтатьяРасходов,
	|	АналитикаРасходов
	|;
	|///////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаСпособовРаспределения()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация                              КАК Организация,
	|	ДанныеДокумента.СпособРаспределения                      КАК СпособРаспределения,
	|	СпособыРаспределения.ПравилоРаспределения                КАК ПравилоРаспределения,
	|	(ВЫБОР
	|		КОГДА СпособыРаспределения.ПравилоРаспределения <>
	|				ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияПоНаправлениямДеятельности.ПропорциональноКоэффициентам)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК СпособРасчетаАвтоматически,
	|	ЕСТЬNULL(Направления.НаправлениеДеятельности, Неопределено) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(Направления.Коэффициент, 1) КАК Коэффициент
	|	
	|ПОМЕСТИТЬ ТаблицаСпособовРаспределения
	|ИЗ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаДоходы.Организация КАК Организация,
	|		ТаблицаДоходы.СпособРаспределения КАК СпособРаспределения
	|	ИЗ
	|		ВтПрочиеДоходы КАК ТаблицаДоходы
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаРасходы.Организация КАК Организация,
	|		ТаблицаРасходы.СпособРаспределения КАК СпособРаспределения
	|	ИЗ
	|		ВтПрочиеРасходы КАК ТаблицаРасходы
	|	) КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыРаспределенияПоНаправлениямДеятельности КАК СпособыРаспределения
	|		ПО СпособыРаспределения.Ссылка = ДанныеДокумента.СпособРаспределения
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыРаспределенияПоНаправлениямДеятельности.НаправленияДеятельности КАК Направления
	|		ПО ДанныеДокумента.СпособРаспределения = Направления.Ссылка
	|;
	|///////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаБазыРаспределения()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаСпособовРаспределения.Организация КАК Организация,
	|	ТаблицаСпособовРаспределения.СпособРаспределения КАК СпособРаспределения,
	|	ЕСТЬNULL(
	|		ФинансовыеРезультаты.НаправлениеДеятельности,
	|		ТаблицаСпособовРаспределения.НаправлениеДеятельности) КАК НаправлениеДеятельности,
	|
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаСпособовРаспределения.ПравилоРаспределения =
	|			ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияПоНаправлениямДеятельности.ПропорциональноКоэффициентам)
	|		ТОГДА
	|			ТаблицаСпособовРаспределения.Коэффициент
	|
	|		КОГДА ТаблицаСпособовРаспределения.ПравилоРаспределения =
	|			ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияПоНаправлениямДеятельности.ПропорциональноДоходам)
	|		ТОГДА
	|			ЕСТЬNULL(ФинансовыеРезультаты.ДоходыОборот, 0)
	|		
	|		КОГДА ТаблицаСпособовРаспределения.ПравилоРаспределения =
	|			ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияПоНаправлениямДеятельности.ПропорциональноРасходам)
	|		ТОГДА
	|			ЕСТЬNULL(ФинансовыеРезультаты.РасходыОборот, 0)
	|		
	|		ИНАЧЕ
	|			ЕСТЬNULL(ФинансовыеРезультаты.ДоходыОборот - ФинансовыеРезультаты.РасходыОборот, 0)
	|		
	|		КОНЕЦ
	|	) КАК База
	|ИЗ
	|	ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	| 	
	| 	ЛЕВОЕ СОЕДИНЕНИЕ
	|
	|		(ВЫБРАТЬ
	|			ФинансовыеРезультаты.НаправлениеДеятельности,
	|			СУММА(ФинансовыеРезультаты.Доходы) КАК ДоходыОборот,
	|			СУММА(ФинансовыеРезультаты.Расходы) КАК РасходыОборот
	|		ИЗ
	|			РегистрНакопления.ФинансовыеРезультаты КАК ФинансовыеРезультаты
	|		ГДЕ
	|			ФинансовыеРезультаты.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|			И ФинансовыеРезультаты.Активность
	|			И ФинансовыеРезультаты.Организация В
	|				(ВЫБРАТЬ
	|						ТаблицаСпособовРаспределения.Организация
	|					ИЗ
	|						ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения)
	|			И (ФинансовыеРезультаты.СтатьяДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ВыручкаОтПродаж)
	|					ИЛИ ФинансовыеРезультаты.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.СебестоимостьПродаж))
	|			И (ФинансовыеРезультаты.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
	|					ИЛИ ФинансовыеРезультаты.РасчетСебестоимости)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ФинансовыеРезультаты.НаправлениеДеятельности
	|
	|	) КАК ФинансовыеРезультаты
	|
	| 	ПО
	| 		ТаблицаСпособовРаспределения.СпособРасчетаАвтоматически
	| 		И (ТаблицаСпособовРаспределения.НаправлениеДеятельности = ФинансовыеРезультаты.НаправлениеДеятельности
	| 			ИЛИ ТаблицаСпособовРаспределения.НаправлениеДеятельности = Неопределено)
	|
	|СГРУППИРОВАТЬ ПО
	| 	ТаблицаСпособовРаспределения.Организация,
	| 	ТаблицаСпособовРаспределения.СпособРаспределения,
	|	ЕСТЬNULL(
	|		ФинансовыеРезультаты.НаправлениеДеятельности,
	|		ТаблицаСпособовРаспределения.НаправлениеДеятельности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	| 	СпособРаспределения,
	| 	НаправлениеДеятельности
	|
	|ИТОГИ
	|	СУММА(База)
	|ПО
	|	Организация,
	| 	СпособРаспределения
	|";
	
	Возврат ТекстЗапроса;
КонецФункции

Процедура РезультатРаспределенияПоБазе(Запрос, ТекстыЗапроса, ДополнительныеСвойства)
	
	Если Запрос = Неопределено ИЛИ Запрос.Параметры.Свойство("РаспределеныДоходыИРасходыПоБазе") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросРаспределения = Новый Запрос;
	ЗапросРаспределения.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросРаспределения.Текст = 
		ТекстЗапросаТаблицаВтДолиСписанияКосвенныхРасходов(Запрос) + ";"
		+ ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос) + ";"
		+ ТекстЗапросаТаблицаВтПрочиеДоходы(Запрос) + ";"
		+ ТекстЗапросаТаблицаСпособовРаспределения()
		+ ТекстЗапросаТаблицаДоходыРасходыКРаспределению()
		+ ТекстЗапросаТаблицаБазыРаспределения();
		
	ЗапросРаспределения.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросРаспределения.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросРаспределения.УстановитьПараметр("РаспределениеПоВсемОрганизациям", Запрос.Параметры.РаспределениеПоВсемОрганизациям);
	ЗапросРаспределения.УстановитьПараметр("Период", Запрос.Параметры.Период);
	ЗапросРаспределения.УстановитьПараметр("НачДата", Запрос.Параметры.НачДата);
	ЗапросРаспределения.УстановитьПараметр("КонДата", Запрос.Параметры.КонДата);
	ЗапросРаспределения.УстановитьПараметр("НачГраница", Запрос.Параметры.НачГраница);
	ЗапросРаспределения.УстановитьПараметр("КонГраница", Запрос.Параметры.КонГраница);
	ЗапросРаспределения.УстановитьПараметр("ДоляСписанияТранспортныхРасходов", Запрос.Параметры.ДоляСписанияТранспортныхРасходов);
	
	Результат = ЗапросРаспределения.ВыполнитьПакет();
	
	// Результат[0] - ВтДолиСписанияКосвенныхРасходов
	// Результат[1] - ВтПрочиеРасходы
	// Результат[2] - ВтПрочиеДоходы
	// Результат[3] - ТаблицаСпособовРаспределения
	РезультатРаспределения = РаспределитьДоходыИРасходыПоБазе(Результат[4].Выгрузить(), Результат[5], ДополнительныеСвойства, Запрос.Параметры.Ссылка);
	
	ЗапросДанных = Новый Запрос("
	|ВЫБРАТЬ
	|	Таблица.Период                  КАК Период,
	|	Таблица.Регистратор             КАК Регистратор,
	|	Таблица.НомерСтроки             КАК НомерСтроки,
	|	Таблица.Организация             КАК Организация,
	|	Таблица.Подразделение           КАК Подразделение,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Таблица.ИсходноеНаправлениеДеятельности КАК ИсходноеНаправлениеДеятельности,
	|	Таблица.СтатьяДоходов           КАК СтатьяДоходов,
	|	Таблица.АналитикаДоходов        КАК АналитикаДоходов,
	|	Таблица.СтатьяРасходов          КАК СтатьяРасходов,
	|	Таблица.АналитикаРасходов       КАК АналитикаРасходов,
	|	Таблица.Доходы                  КАК Доходы,
	|	Таблица.ДоходыУпр               КАК ДоходыУпр,
	|	Таблица.ДоходыРегл              КАК ДоходыРегл,
	|	Таблица.Расходы                 КАК Расходы,
	|	Таблица.РасходыУпр              КАК РасходыУпр,
	|	Таблица.РасходыРегл             КАК РасходыРегл,
	|	Таблица.ПостояннаяРазница       КАК ПостояннаяРазница,
	|	Таблица.ВременнаяРазница        КАК ВременнаяРазница,
	|	Таблица.СпособРаспределения     КАК СпособРаспределения
	|ПОМЕСТИТЬ ВТФинансовыеРезультаты
	|ИЗ
	|	&ТаблицаФинансовыеРезультаты КАК Таблица
	|");
	ЗапросДанных.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросДанных.УстановитьПараметр("ТаблицаФинансовыеРезультаты", РезультатРаспределения);
	ЗапросДанных.Выполнить();
	
	Запрос.УстановитьПараметр("РаспределеныДоходыИРасходыПоБазе", Истина);
	
КонецПроцедуры

Функция РаспределитьДоходыИРасходыПоБазе(ТаблицаФинансовыеРезультаты, РезультатЗапросаПоБазе, ДополнительныеСвойства, СсылкаНаДокумент)
	
	НаборЗаписей = РегистрыНакопления.ФинансовыеРезультаты.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	НаборЗаписей.Колонки.Добавить("ИсходноеНаправлениеДеятельности", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Измерения.КорНаправлениеДеятельности.Тип);
	НаборЗаписей.Колонки.Добавить("АналитикаДоходов", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Измерения.АналитикаДоходов.Тип);
	НаборЗаписей.Колонки.Добавить("АналитикаРасходов", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Измерения.АналитикаРасходов.Тип);
	НаборЗаписей.Колонки.Добавить("ДоходыУпр", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Ресурсы.СуммаУпр.Тип);
	НаборЗаписей.Колонки.Добавить("ДоходыРегл", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Ресурсы.СуммаУпр.Тип);
	НаборЗаписей.Колонки.Добавить("РасходыУпр", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Ресурсы.СуммаУпр.Тип);
	НаборЗаписей.Колонки.Добавить("РасходыРегл", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Ресурсы.СуммаУпр.Тип);
	НаборЗаписей.Колонки.Добавить("ПостояннаяРазница", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Ресурсы.СуммаУпр.Тип);
	НаборЗаписей.Колонки.Добавить("ВременнаяРазница", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Ресурсы.СуммаУпр.Тип);
	НаборЗаписей.Колонки.Удалить("Активность");
	
	Если ТаблицаФинансовыеРезультаты.Количество() = 0 ИЛИ РезультатЗапросаПоБазе.Пустой() Тогда
		Возврат НаборЗаписей;
	КонецЕсли;
	
	ФормироватьФинансовыйРезультат = ПолучитьФункциональнуюОпцию("ФормироватьФинансовыйРезультат");
	
	КодЯзыка = Метаданные.ОсновнойЯзык.КодЯзыка;
	
	СуммовыеРесурсы = Новый Структура("Доходы, ДоходыУпр, ДоходыРегл, Расходы, РасходыУпр, РасходыРегл, ПостояннаяРазница, ВременнаяРазница");
	
	// Выборка строк базы распределения по способу распределения.
	ВыборкаПоОрганизации = РезультатЗапросаПоБазе.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоОрганизации.Следующий() Цикл
		
		ВыборкаПоСпособуРаспределения = ВыборкаПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоСпособуРаспределения.Следующий() Цикл
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Организация", ВыборкаПоСпособуРаспределения.Организация);
			СтруктураОтбора.Вставить("СпособРаспределения", ВыборкаПоСпособуРаспределения.СпособРаспределения);
			
			// Получаем массив расходов, имеющих одинаковый индекс аналитики, соответствующий текущей выборки базы распределения.
			// Данные затраты будут распределены по одинаковой базе распределения.
			МассивСтрокТаблицы = ТаблицаФинансовыеРезультаты.НайтиСтроки(СтруктураОтбора);
			Если МассивСтрокТаблицы.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если ВыборкаПоСпособуРаспределения.База = 0
			 И ЗначениеЗаполнено(ВыборкаПоСпособуРаспределения.СпособРаспределения)
			 И ФормироватьФинансовыйРезультат Тогда
			
				Если МассивСтрокТаблицы[0].Доходы <> 0
				 ИЛИ МассивСтрокТаблицы[0].ДоходыРегл <> 0 Тогда
					
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Отсутствует база для распределения доходов по способу распределения ""%1"". Укажите другой способ распределения или удалите строку доходов из документа.'", КодЯзыка),
						ВыборкаПоСпособуРаспределения.СпособРаспределения);
					
					Если ДополнительныеСвойства.Свойство("ВыводитьСообщенияВЖурналРегистрации")
					 И ДополнительныеСвойства.ВыводитьСообщенияВЖурналРегистрации Тогда
						ЗаписьЖурналаРегистрации(
							НСтр("ru = 'Ошибка при проведении документа'", КодЯзыка), 
							УровеньЖурналаРегистрации.Ошибка,
							Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности,
							СсылкаНаДокумент,
							Текст,
							РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
					Иначе
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							Текст,
							СсылкаНаДокумент,
							"Доходы[" + (МассивСтрокТаблицы[0].НомерСтроки - 1) + "].СпособРаспределения",
							,
							);
					КонецЕсли;
					
					ДополнительныеСвойства.Вставить("НетБазыРаспределения", Истина);
					ДополнительныеСвойства.Вставить("ТекстСообщенияОбОшибкеПроведения", Текст);
					
				КонецЕсли;
				
				Если МассивСтрокТаблицы[0].Расходы <> 0
				 ИЛИ МассивСтрокТаблицы[0].РасходыРегл <> 0 Тогда
					
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Отсутствует база для распределения расходов по способу распределения ""%1"". Укажите другой способ распределения или удалите строку расходов из документа.'", КодЯзыка),
						ВыборкаПоСпособуРаспределения.СпособРаспределения);
					
					Если ДополнительныеСвойства.Свойство("ВыводитьСообщенияВЖурналРегистрации")
					 И ДополнительныеСвойства.ВыводитьСообщенияВЖурналРегистрации Тогда
						ЗаписьЖурналаРегистрации(
							НСтр("ru = 'Ошибка при проведении документа'", КодЯзыка), 
							УровеньЖурналаРегистрации.Ошибка,
							Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности,
							СсылкаНаДокумент,
							Текст,
							РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
					Иначе
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							Текст,
							СсылкаНаДокумент,
							"Расходы[" + (МассивСтрокТаблицы[0].НомерСтроки - 1) + "].СпособРаспределения",
							,
							);
					КонецЕсли;
					
					ДополнительныеСвойства.Вставить("НетБазыРаспределения", Истина);	
					ДополнительныеСвойства.Вставить("ТекстСообщенияОбОшибкеПроведения", Текст);
					
				КонецЕсли;
				
				Для Каждого СтрокаТаблицы Из МассивСтрокТаблицы Цикл
					Если СтрокаТаблицы.Нормируемые И СтрокаТаблицы.ПостояннаяРазница <> 0 Тогда
						НоваяЗапись = НаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицы);
						Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
							Если ИмяРесурса.Ключ <> "ПостояннаяРазница" Тогда
								НоваяЗапись[ИмяРесурса.Ключ] = 0;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
				КонецЦикла;
				
				Продолжить;
				
			КонецЕсли;
			
			Выборка = ВыборкаПоСпособуРаспределения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
			Для Каждого СтрокаТаблицы Из МассивСтрокТаблицы Цикл
				
				Если ЗначениеЗаполнено(СтрокаТаблицы.НаправлениеДеятельности)
				 ИЛИ НЕ ФормироватьФинансовыйРезультат Тогда
					
					НоваяЗапись = НаборЗаписей.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицы);
					НоваяЗапись.СпособРаспределения = Неопределено;
					
				Иначе
			
					ЗаполнитьЗначенияСвойств(СуммовыеРесурсы, СтрокаТаблицы);
					БазаВсего = ВыборкаПоСпособуРаспределения.База;
				
					// Выборка строк базы распределения по индексу базы распределения
					Выборка.Сбросить();
					Пока Выборка.Следующий() Цикл
					
						НоваяЗапись = НаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицы);
						НоваяЗапись.НаправлениеДеятельности = Выборка.НаправлениеДеятельности;
						
						Базис = ?(БазаВсего <> 0, Выборка.База / БазаВсего, 0);
						Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
							НоваяЗапись[ИмяРесурса.Ключ] = Окр(Базис * ИмяРесурса.Значение, 2, 1);
							СуммовыеРесурсы[ИмяРесурса.Ключ] = ИмяРесурса.Значение - НоваяЗапись[ИмяРесурса.Ключ];
						КонецЦикла;
						
						БазаВсего = БазаВсего - Выборка.База;
					
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат НаборЗаписей;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства = Неопределено)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ДополнительныеСвойства = Неопределено Тогда
		 ДополнительныеСвойства = Новый Структура();
	КонецЕсли;
	
	РезультатРаспределенияПоБазе(Запрос, ТекстыЗапроса, ДополнительныеСвойства);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ФинансовыеРезультаты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	СУММА(ФинансовыеРезультаты.Доходы) КАК Сумма
	|ИЗ
	|	ВТФинансовыеРезультаты КАК ФинансовыеРезультаты
	|
	|ГДЕ
	|	НЕ ФинансовыеРезультаты.Доходы = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыеРезультаты.Организация,
	|	ФинансовыеРезультаты.НаправлениеДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ФинансовыеРезультаты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	СУММА(ФинансовыеРезультаты.Расходы) КАК Сумма
	|ИЗ
	|	ВТФинансовыеРезультаты КАК ФинансовыеРезультаты
	|
	|ГДЕ
	|	НЕ ФинансовыеРезультаты.Расходы = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыеРезультаты.Организация,
	|	ФинансовыеРезультаты.НаправлениеДеятельности
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства = Неопределено)
	
	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ДополнительныеСвойства = Неопределено Тогда
		 ДополнительныеСвойства = Новый Структура();
	КонецЕсли;
	
	РезультатРаспределенияПоБазе(Запрос, ТекстыЗапроса, ДополнительныеСвойства);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеДоходовПоНаправлениямДеятельности) КАК ХозяйственнаяОперация,
	|	ФинансовыеРезультаты.Организация КАК Организация,
	|
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ФинансовыеРезультаты.Организация КАК АналитикаАктивовПассивов,
	|
	|	ФинансовыеРезультаты.Подразделение КАК КорПодразделение,
	|	ФинансовыеРезультаты.ИсходноеНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ФинансовыеРезультаты.СтатьяДоходов КАК КорСтатья,
	|	ФинансовыеРезультаты.АналитикаДоходов КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаАктивовПассивов,
	|
	|	СУММА(ФинансовыеРезультаты.Доходы) КАК Сумма,
	|	СУММА(ФинансовыеРезультаты.ДоходыУпр) КАК СуммаУпр,
	|	СУММА(ФинансовыеРезультаты.ДоходыРегл) КАК СуммаРегл
	|ИЗ
	|	ВТФинансовыеРезультаты КАК ФинансовыеРезультаты
	|
	|ГДЕ
	|	ФинансовыеРезультаты.Доходы <> 0
	|	ИЛИ ФинансовыеРезультаты.ДоходыУпр <> 0
	|	ИЛИ ФинансовыеРезультаты.ДоходыРегл <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыеРезультаты.Организация,
	|	ФинансовыеРезультаты.Подразделение,
	|	ФинансовыеРезультаты.ИсходноеНаправлениеДеятельности,
	|	ФинансовыеРезультаты.НаправлениеДеятельности,
	|	ФинансовыеРезультаты.СтатьяДоходов,
	|	ФинансовыеРезультаты.АналитикаДоходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовПоНаправлениямДеятельности) КАК ХозяйственнаяОперация,
	|	ФинансовыеРезультаты.Организация КАК Организация,
	|
	|	ФинансовыеРезультаты.Подразделение КАК Подразделение,
	|	ФинансовыеРезультаты.ИсходноеНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ФинансовыеРезультаты.СтатьяРасходов КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ФинансовыеРезультаты.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК КорПодразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаРасходов,
	|	ФинансовыеРезультаты.Организация КАК КорАналитикаАктивовПассивов,
	|
	|	СУММА(ФинансовыеРезультаты.Расходы) КАК Сумма,
	|	СУММА(ФинансовыеРезультаты.РасходыУпр) КАК СуммаУпр,
	|	СУММА(ФинансовыеРезультаты.РасходыРегл) КАК СуммаРегл
	|ИЗ
	|	ВТФинансовыеРезультаты КАК ФинансовыеРезультаты
	|
	|ГДЕ
	|	ФинансовыеРезультаты.Расходы <> 0
	|	ИЛИ ФинансовыеРезультаты.РасходыУпр <> 0
	|	ИЛИ ФинансовыеРезультаты.РасходыРегл <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыеРезультаты.Организация,
	|	ФинансовыеРезультаты.Подразделение,
	|	ФинансовыеРезультаты.ИсходноеНаправлениеДеятельности,
	|	ФинансовыеРезультаты.НаправлениеДеятельности,
	|	ФинансовыеРезультаты.СтатьяРасходов,
	|	ФинансовыеРезультаты.АналитикаРасходов
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции


#КонецОбласти

#Область БлокировкаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ПредставлениеОперации)
	
	ВходящиеДанные = Новый Соответствие;
	
	ВходящиеДанные.Вставить(Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеДоходы);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы);
	
	ЗакрытиеМесяцаСервер.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, ПредставлениеОперации);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
