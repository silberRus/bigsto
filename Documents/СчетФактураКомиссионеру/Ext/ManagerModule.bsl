#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.СчетФактураКомиссионеру.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура выданный комиссионеру (агенту)".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураКомиссионеру) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураКомиссионеру.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураКомиссионеру);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКомиссиюПриПродажах,ИспользоватьПередачиТоваровМеждуОрганизациями";
		
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
КонецПроцедуры

// Функция находит счета-фактуры заданного документа.
//
// Параметры:
//	Основание - ДокументСсылка - Документ, для которого необходимо найти счет-фактуру
//	Организация - СправочникСсылка.Организации - Организация, для которой формируется счет-фактура
//
// Возвращаемое значение:
//	ТаблицаЗначений - Таблица найденных счетов-фактур (Ссылка, Номер, Дата, Организация, Контрагент, Валюта)
//
Функция СчетаФактурыПоОснованию(Основание, Организация = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка КАК Ссылка,
	|	СчетФактураВыданный.Номер КАК Номер,
	|	СчетФактураВыданный.Дата КАК Дата,
	|	СчетФактураВыданный.Организация КАК Организация,
	|	СчетФактураВыданный.Комиссионер КАК Контрагент,
	|	СчетФактураВыданный.Валюта КАК Валюта
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.ДокументОснование = &Основание
	|	И (НЕ СчетФактураВыданный.ПометкаУдаления)
	|	И (СчетФактураВыданный.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|");
	Запрос.УстановитьПараметр("Основание",   Основание);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыСчетаФактуры = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		РеквизитыСчетаФактуры.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ТаблицаСчетовФактур = Новый ТаблицаЗначений;
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТаблицаСчетовФактур = РезультатЗапроса.Выгрузить();
		ЗаполнитьЗначенияСвойств(РеквизитыСчетаФактуры, ТаблицаСчетовФактур[0]);
	КонецЕсли;
	
	Возврат ТаблицаСчетовФактур;
	
КонецФункции

// Приводит состояние проведения счетов-фактур в соответствие с документом-основанием
//
// Параметры:
//	Основание				- Документ - документ-основание счета-фактуры
//	Проведен 				- Булево - Состояние проведения документа-основания
//
Процедура АктуализироватьСчетаФактуры(Основание, Проведен) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Проведен Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение
	Иначе
		РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения
	КонецЕсли;
		
	ТаблицаСчетовФактур = СчетаФактурыПоОснованию(Основание);
	Если ТаблицаСчетовФактур.Количество() > 0 Тогда
		ТаблицаСчетовФактур.Сортировать("Дата Возр")
	КонецЕсли;
	
	Для Каждого РеквизитыСчетаФактуры Из ТаблицаСчетовФактур Цикл
		
		ДокументОбъект = РеквизитыСчетаФактуры.Ссылка.ПолучитьОбъект();
		Попытка
			ДокументОбъект.Записать(РежимЗаписи);
		Исключение
			ТекстОшибки = НСтр("ru='Не удалось записать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       ДокументОбъект);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				,);
		КонецПопытки
	КонецЦикла
	
КонецПроцедуры

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", Параметры.МассивОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода",     Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      Параметры.КонецПериода);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(1) КАК КоличествоДокументовКОформлению
	|ИЗ
	|	РегистрСведений.СчетаФактурыКомиссионерамКОформлению КАК КОформлению
	|ГДЕ
	|	КОформлению.ДатаСчетаФактуры МЕЖДУ &НачалоПериода И &КонецПериода
	|	И &УсловиеОтбора
	|";
	
	Если ЗначениеЗаполнено(Параметры.МассивОрганизаций) Тогда
		УсловиеОтбора = "КОформлению.Организация В(&МассивОрганизаций)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеОтбора", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И НЕ Выборка.КоличествоДокументовКОформлению = NULL Тогда
		Возврат Выборка.КоличествоДокументовКОформлению;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.СчетФактураКомиссионеру";
	
	ВЗапросеЕстьИсточник = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	ПереопределениеРасчетаПараметров.Вставить("СуммаНДС",           	 0);
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоИсправлению", """""");
	ПереопределениеРасчетаПараметров.Вставить("ВалютаСчетаФактуры",      "ДанныеДокумента.Ссылка.Валюта");
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтТаблицаДанныхОснований", ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса));
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ОбособленноеПодразделение, ЛОЖЬ) КАК ОбособленноеПодразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ЦифровойИндексОбособленногоПодразделения, 0) КАК ЦифровойИндексОбособленногоПодразделения,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ДанныеДокумента.ДокументОснование.Валюта КАК ВалютаОснования,
	|	ДанныеДокумента.ДокументОснование.Дата КАК ДатаОснования,
	|	ДанныеДокумента.ДокументОснование.Партнер КАК Партнер,
	|	ДанныеДокумента.ДокументОснование.Подразделение КАК Подразделение,
	|	ДанныеДокумента.ДокументОснование.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР ТИПЗНАЧЕНИЯ(ДанныеДокумента.ДокументОснование)
	|		КОГДА ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|		КОГДА ТИП(Документ.ОтчетКомиссионера)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СчетФактураОснование КАК СчетФактураОснование,
	|	ДанныеДокумента.СчетФактураОснование.Дата КАК ДатаСчетФактурыОснования,
	|	ДанныеДокумента.Исправление КАК Исправление,
	|	ДанныеДокумента.НомерИсправления КАК НомерИсправления,
	|	ДанныеДокумента.ДокументОснование.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ВыставленВЭлектронномВиде КАК ВыставленВЭлектронномВиде,
	|	ДанныеДокумента.ДатаВыставления КАК ДатаВыставления,
	|	ДанныеДокумента.КодВидаОперации КАК КодВидаОперации,
	|	ДанныеДокумента.Ответственный                                    	 КАК Ответственный,
	|	ДанныеДокумента.Комментарий                                    		 КАК Комментарий,
	|	ДанныеДокумента.Проведен                                   	 		 КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                                   	 КАК ПометкаУдаления,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|			ТОГДА ДанныеДокумента.ДокументОснование.Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ОрганизацияПолучатель,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеДокумента.ДокументОснование.РасчетыЧерезОтдельногоКонтрагента
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ИСТИНА 
	|	КОНЕЦ КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Комиссионер КАК Комиссионер,
	|	ДанныеДокумента.СчетФактураОснование КАК СчетФактураПредыдущееИсправление
	|	
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Номер = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
			Реквизиты.Номер, 
			Истина,
			Реквизиты.ОбособленноеПодразделение, 
			Реквизиты.ЦифровойИндексОбособленногоПодразделения);
	
	Запрос.УстановитьПараметр("Период",								Реквизиты.Период);
	Запрос.УстановитьПараметр("НомерНаПечать",						Номер);
	Запрос.УстановитьПараметр("Номер",           					Реквизиты.Номер);
	Запрос.УстановитьПараметр("Организация",						Реквизиты.Организация);
	Запрос.УстановитьПараметр("ДокументОснование",					Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ДатаОснования",						Реквизиты.ДатаОснования);
	Запрос.УстановитьПараметр("ДатаСчетФактурыОснования",			Реквизиты.ДатаСчетФактурыОснования);
	Запрос.УстановитьПараметр("СчетФактураОснование",				Реквизиты.СчетФактураОснование);
	Запрос.УстановитьПараметр("Исправление",						Реквизиты.Исправление);
	Запрос.УстановитьПараметр("НомерИсправления",					Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("Контрагент",							Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ВалютаСчетаФактуры",					Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаОснования",					Реквизиты.ВалютаОснования);
	Запрос.УстановитьПараметр("ВыставленВЭлектронномВиде",			?(Реквизиты.ВыставленВЭлектронномВиде, 2 ,1));
	Запрос.УстановитьПараметр("КодВидаОперации",					Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель",				Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("РасчетыЧерезОтдельногоКонтрагента",	Реквизиты.РасчетыЧерезОтдельногоКонтрагента);
	Запрос.УстановитьПараметр("Комиссионер",						Реквизиты.Комиссионер);
	Запрос.УстановитьПараметр("ПериодКорректировки",				Реквизиты.ДатаОснования);
	Запрос.УстановитьПараметр("Ответственный",						Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("Комментарий",						Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("СуммаНДС",							0);
	Запрос.УстановитьПараметр("Проведен",							Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",					Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",				Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Партнер",							Реквизиты.Партнер);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",			Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("Подразделение",						Реквизиты.Подразделение);
	
	УчетНДСУТ.УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыВыставленного(Реквизиты, Запрос);
	
	ДатаКомиссионера = 
		?(ЗначениеЗаполнено(Реквизиты.ДатаСчетФактурыОснования), 
			Реквизиты.ДатаСчетФактурыОснования, Реквизиты.Период); 
	Запрос.УстановитьПараметр("ДатаКомиссионера",					ДатаКомиссионера);
	
	СчетФактураПредыдущееИсправление = Неопределено;
	Если Реквизиты.Исправление Тогда
		СчетФактураПредыдущееИсправление = СчетФактураПредыдущееИсправление(Реквизиты.СчетФактураОснование, Реквизиты.НомерИсправления);
	КонецЕсли;
	Запрос.УстановитьПараметр("СчетФактураПредыдущееИсправление", СчетФактураПредыдущееИсправление);
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Реквизиты.ВалютаОснования,
		Реквизиты.ВалютаОснования,
		Реквизиты.Период);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",	Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
	ОрганизацияКПП = ?(Реквизиты.ОрганизацияПолучатель <> Неопределено,
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.Организация, "КПП"),
		Неопределено);
	Запрос.УстановитьПараметр("ОрганизацияКПП", ОрганизацияКПП);
	
	ОрганизацияПолучательКПП = ?(ЗначениеЗаполнено(Реквизиты.ОрганизацияПолучатель),
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.ОрганизацияПолучатель, "КПП"),
		Неопределено);
	Запрос.УстановитьПараметр("ОрганизацияПолучательКПП", ОрганизацияПолучательКПП);
	
	Если Реквизиты.Исправление Тогда
		ЗаписьДопЛиста = (НачалоКвартала(Реквизиты.ДатаОснования) < НачалоКвартала(Реквизиты.Период));
	Иначе
		ЗаписьДопЛиста = (НачалоКвартала(Реквизиты.ДатаОснования) < НачалоКвартала(Реквизиты.Период)) И Реквизиты.ДатаОснования < '20130701';
	КонецЕсли;
	Запрос.УстановитьПараметр("ЗаписьДопЛиста", ЗаписьДопЛиста);
	
	ТипыЗапасовСобственные = Новый СписокЗначений;
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.ПустаяСсылка());
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Товар);
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", ТипыЗапасовСобственные);

	ИнформацияПоИсправлению = "";
	Если Реквизиты.Исправление
		И ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления% от %ДатаИсправления%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%НомерИсправления%", Реквизиты.НомерИсправления);
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%ДатаИсправления%", Реквизиты.Период);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураКомиссионеру"));

	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтТаблицаСуммДокументов";
	
#Область ТекстОтчетПоКомиссииМеждуОрганизациямиВидыЗапасов
	ТекстОтчетПоКомиссииМеждуОрганизациямиВидыЗапасов = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенностиПродажи,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенностиЗакупки,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК ЗакупкаПодДеятельность,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	ТаблицаВидыЗапасов.Покупатель КАК Покупатель,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.ВидЗапасовКомитента.ТипЗапасов,ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) КАК ТипЗапасов,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов,ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) КАК ТипЗапасовПолучателя,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.СчетФактураВыставленныйКомиссионера.Номер, """") КАК НомерСчетаФактурыКомиссионера,
	|	ТаблицаВидыЗапасов.СчетФактураВыставленныйКомиссионера КАК СчетФактураВыставленныйКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК Принципал
	|ПОМЕСТИТЬ ВтТаблицаСуммДокументов
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаВидыЗапасов.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &ДокументОснование
	|
	|";
#КонецОбласти

#Область ТекстОтчетПоКомиссииМеждуОрганизациямиУслуги
	ТекстОтчетПоКомиссииМеждуОрганизациямиУслуги = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенностиПродажи,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенностиЗакупки,
	|	Услуги.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((Услуги.СуммаПродажи - Услуги.СуммаПродажиНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(Услуги.СуммаПродажиНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА Услуги.СуммаПродажи
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(Услуги.СуммаПродажи * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА Услуги.СуммаПродажиНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(Услуги.СуммаПродажиНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК ЗакупкаПодДеятельность,
	|	Услуги.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	Услуги.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	Услуги.Покупатель КАК Покупатель,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) КАК ТипЗапасовПолучателя,
	|	ЕСТЬNULL(Услуги.СчетФактураВыставленныйКомиссионера.Номер, """") КАК НомерСчетаФактурыКомиссионера,
	|	Услуги.СчетФактураВыставленныйКомиссионера КАК СчетФактураВыставленныйКомиссионера,
	|	ЕСТЬNULL(Услуги.Характеристика.Принципал, Услуги.Номенклатура.Принципал) КАК Принципал
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК Услуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО Услуги.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И Услуги.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	Услуги.Ссылка = &ДокументОснование
	|	И Услуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|";
#КонецОбласти

#Область ТекстОтчетКомиссионераВидыЗапасов
	ТекстОтчетКомиссионераВидыЗапасов = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенностиПродажи,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенностиЗакупки,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	NULL КАК ЗакупкаПодДеятельность,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	ТаблицаВидыЗапасов.Покупатель КАК Покупатель,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) КАК ТипЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактурыКомиссионера,
	|	ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка) КАК СчетФактураВыставленныйКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК Принципал
	|ИЗ
	|	Документ.ОтчетКомиссионера.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаВидыЗапасов.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &ДокументОснование
	|
	|";
#КонецОбласти

#Область ТекстОтчетКомиссионераУслуги
	ТекстОтчетКомиссионераУслуги = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенностиПродажи,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенностиЗакупки,
	|	ТаблицаУслуг.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаУслуг.СуммаПродажи - ТаблицаУслуг.СуммаПродажиНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуг.СуммаПродажиНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаУслуг.СуммаПродажи
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуг.СуммаПродажи * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаУслуг.СуммаПродажиНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаУслуг.СуммаПродажиНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	NULL КАК ЗакупкаПодДеятельность,
	|	ТаблицаУслуг.Ссылка.НалогообложениеНДС,
	|	ТаблицаУслуг.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	ТаблицаУслуг.Покупатель КАК Покупатель,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) КАК ТипЗапасовПолучателя,
	|	ТаблицаУслуг.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактурыКомиссионера,
	|	ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка) КАК СчетФактураВыставленныйКомиссионера,
	|	ЕСТЬNULL(ТаблицаУслуг.Характеристика.Принципал, ТаблицаУслуг.Номенклатура.Принципал) КАК Принципал
	|ИЗ
	|	Документ.ОтчетКомиссионера.Товары КАК ТаблицаУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаУслуг.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаУслуг.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаУслуг.Ссылка = &ДокументОснование
	|	И ТаблицаУслуг.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|";
#КонецОбласти
	
	ТекстЗапроса = ТекстОтчетПоКомиссииМеждуОрганизациямиВидыЗапасов
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтчетКомиссионераВидыЗапасов
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтчетКомиссионераУслуги
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтчетПоКомиссииМеждуОрганизациямиУслуги;
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаСуммДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	-ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ИСТИНА КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|		&Период,
	|		НЕ Сторно
	|		И Регистратор <> &Ссылка
	|		И СчетФактура = &СчетФактураПредыдущееИсправление) КАК ЖурналУчетаСчетовФактур
	|
	|ГДЕ
	|	&Исправление
	|	И (ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия > 0)
	|";
#КонецОбласти
	
#Область ТекстЗапросаВыставленныеСчетаФактурыВыставляемыйКомиссионеру
	ТекстЗапросаВыставленныеСчетаФактурыВыставляемыйКомиссионеру = "
	|ВЫБРАТЬ
	|	&Период                                                                       КАК Период,
	|	&Организация                                                                  КАК Организация,
	|	Покупатели.Покупатель                                                         КАК Контрагент,
	|	&Ссылка                                                                       КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаВыставления                                                              КАК ДатаВыставленияПолучения,
	|	&ВыставленВЭлектронномВиде                                                    КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                                                              КАК КодВидаОперации,
	|	&НомерНаПечать                                                                КАК НомерСчетаФактуры,
	|	&Период                                                                       КАК ДатаСчетаФактуры,
	|	NULL                                                                          КАК НомерКорректировочногоСчетаФактуры,
	|	NULL                                                                          КАК ДатаКорректировочногоСчетаФактуры,
	|	ВЫБОР КОГДА &Исправление
	|		ТОГДА &НомерИсправления
	|	КОНЕЦ                                                                         КАК НомерИсправления,
	|	ВЫБОР КОГДА &Исправление
	|		ТОГДА &Период
	|	КОНЕЦ                                                                         КАК ДатаИсправления,
	|	NULL                                                                          КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL                                                                          КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	Покупатели.НомерСтроки                                                        КАК ИндексСтроки,
	|	&ВалютаСчетаФактуры                                                           КАК Валюта,
	|	СУММА(ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал)                        КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаСуммДокументов.СуммаНДСЖурнал)                                   КАК СуммаНДС,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                                                             КАК СуммаНДСРазницаУменьшение,
	|	0                                                                             КАК СуммаНДСРазницаУвеличение,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|														  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                                         КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                                                          КАК СчетФактураНеВыставляется,
	|	Покупатели.КПППокупателя                                                      КАК КППКонтрагента,
	|	Покупатели.ИННПокупателя                                                      КАК ИННКонтрагента,
	|	&Комиссионер                                                                  КАК Посредник,
	|	NULL                                                                          КАК СчетФактураВыданныйПокупателю,
	|	
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|					 И (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО ИЛИ ТаблицаСуммДокументов.Принципал = &Организация)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал
	|		КОНЕЦ)                                                                    КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|					 И (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО ИЛИ ТаблицаСуммДокументов.Принципал = &Организация)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаСуммДокументов.СуммаНДСЖурнал
	|		КОНЕЦ)                                                                    КАК СуммаНДСКомиссия,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                                                             КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                                                             КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				И (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО ИЛИ ТаблицаСуммДокументов.Принципал = &Организация)
	|			ТОГДА """"
	|		ИНАЧЕ &КодВидаОперации
	|	КОНЕЦ)                                                                        КАК КодВидаОперацииКомиссия,
	|	""""                                                                          КАК КодВидаСделки,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|	
	|ИЗ
	|	Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|	ПО
	|		Покупатели.Покупатель = ТаблицаСуммДокументов.Покупатель
	|		И (Покупатели.НомерСчетаФактуры = ТаблицаСуммДокументов.НомерСчетаФактурыКомиссионера)
	|		И (НАЧАЛОПЕРИОДА(ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаКомиссионера, ДЕНЬ)
	|				ИЛИ ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1,1,1))
	|ГДЕ
	|	Покупатели.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|														  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Покупатели.НомерСтроки,
	|	Покупатели.Покупатель,
	|	Покупатели.КПППокупателя,
	|	Покупатели.ИННПокупателя
	|";
#КонецОбласти
	
#Область ТекстЗапросаПолученныеСчетаФактуры
	ТекстЗапросаПолученныеСчетаФактуры = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Комиссионер КАК Организация,
	|	&ОрганизацияПолучатель КАК Контрагент,
	|	&Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаВыставления КАК ДатаВыставленияПолучения,
	|	&ВыставленВЭлектронномВиде КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации КАК КодВидаОперации,
	|	&НомерНаПечать КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &ДатаСчетФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	NULL КАК НомерКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаКорректировочногоСчетаФактуры,
	|	NULL КАК НомерИсправления,
	|	NULL КАК ДатаИсправления,
	|	NULL КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	Покупатели.НомерСтроки КАК ИндексСтроки,
	|	&ВалютаСчетаФактуры,
	|	СУММА(ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал) КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаСуммДокументов.СуммаНДСЖурнал) КАК СуммаНДС,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0 КАК СуммаНДСРазницаУменьшение,
	|	0 КАК СуммаНДСРазницаУвеличение,
	|	МИНИМУМ(ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	|	"""" КАК КППКонтрагента,
	|	"""" КАК ИППКонтрагента,
	|	NULL КАК Посредник,
	|	ТаблицаСуммДокументов.СчетФактураВыставленныйКомиссионера КАК СчетФактураВыданныйПокупателю,
	|	
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаСуммДокументов.ТипЗапасовПолучателя В (&ТипыЗапасовСобственные)
	|					И (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО ИЛИ ТаблицаСуммДокументов.Принципал <> &Организация)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал
	|		КОНЕЦ) КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаСуммДокументов.ТипЗапасовПолучателя В (&ТипыЗапасовСобственные)
	|					И (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО ИЛИ ТаблицаСуммДокументов.Принципал <> &Организация)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаСуммДокументов.СуммаНДСЖурнал
	|		КОНЕЦ) КАК СуммаНДСКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.ТипЗапасовПолучателя В (&ТипыЗапасовСобственные)
	|				И (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО ИЛИ ТаблицаСуммДокументов.Принципал <> &Организация)
	|			ТОГДА """"
	|		ИНАЧЕ &КодВидаОперации
	|	КОНЕЦ) КАК КодВидаОперацииКомиссия,
	|	""2"" КАК КодВидаСделки,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|	
	|ИЗ
	|	Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|	ПО
	|		Покупатели.Покупатель = ТаблицаСуммДокументов.Покупатель
	|		И (Покупатели.НомерСчетаФактуры = ТаблицаСуммДокументов.НомерСчетаФактурыКомиссионера)
	|		И (НАЧАЛОПЕРИОДА(ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаКомиссионера, ДЕНЬ)
	|				ИЛИ ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1,1,1))
	|ГДЕ
	|	Покупатели.Ссылка = &Ссылка
	|	И &ОрганизацияПолучатель <> НЕОПРЕДЕЛЕНО
	|	И НЕ &РасчетыЧерезОтдельногоКонтрагента
	|	И &ДатаВыставления <> ДАТАВРЕМЯ(1,1,1)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Покупатели.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммДокументов.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ТаблицаСуммДокументов.СчетФактураВыставленныйКомиссионера";
#КонецОбласти
	
	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(ТекстЗапросаСторноИсправление);
	МассивТекстов.Добавить(ТекстЗапросаВыставленныеСчетаФактурыВыставляемыйКомиссионеру);
	МассивТекстов.Добавить(ТекстЗапросаПолученныеСчетаФактуры);
	ТекстЗапроса = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапросаСторноИсправление = "
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ИСТИНА КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	-НДСЗаписиКнигиПродаж.СуммаБезНДСОборот КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПродаж.НДСОборот КАК НДС,
	|	NULL КАК НомерДокументаОплаты,
	|	NULL КАК ДатаДокументаОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|		,
	|		,
	|		Регистратор,
	|		Организация = &Организация
	|			И СчетФактура = &СчетФактураОснование
	|			И ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление
	|			И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	) КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	&Исправление
	|	И НДСЗаписиКнигиПродаж.Регистратор <> &Ссылка
	|	И (НДСЗаписиКнигиПродаж.СуммаБезНДСОборот > 0
	|		ИЛИ НДСЗаписиКнигиПродаж.НДСОборот > 0)
	|
	|";
	
	ТекстЗапросаВыставляемыйКомиссионеру = "
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|		ИНАЧЕ &ДатаОснования 
	|	КОНЕЦ КАК Период,
	|	&Организация КАК Организация,
	|	Покупатели.Покупатель КАК Покупатель,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &СчетФактураОснование
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК СчетФактура,
	|	ТаблицаСуммДокументов.ВидЦенностиПродажи КАК ВидЦенности,
	|	ТаблицаСуммДокументов.СтавкаНДС КАК СтавкаНДС,
	|	NULL КАК ДатаОплаты,
	|	NULL КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация) КАК Событие,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|		ИНАЧЕ &ДатаОснования 
	|	КОНЕЦ КАК ДатаСобытия,
	|	&ЗаписьДопЛиста КАК ЗаписьДополнительногоЛиста, 
	|	ВЫБОР
	|		КОГДА &ЗаписьДопЛиста
	|			ТОГДА &ПериодКорректировки
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	NULL КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка
	|	КОНЕЦ КАК ИсправленныйСчетФактура,
	|	&Исправление КАК Исправление,
	|	ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера,
	|	СУММА(ТаблицаСуммДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаСуммДокументов.СуммаНДС) КАК НДС,
	|	NULL КАК НомерДокументаОплаты,
	|	NULL КАК ДатаДокументаОплаты
	|ИЗ
	|	Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|	ПО
	|		Покупатели.Покупатель = ТаблицаСуммДокументов.Покупатель
	|		И (Покупатели.НомерСчетаФактуры = ТаблицаСуммДокументов.НомерСчетаФактурыКомиссионера)
	|		И (НАЧАЛОПЕРИОДА(ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаКомиссионера, ДЕНЬ)
	|				ИЛИ ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1,1,1))
	|ГДЕ
	|	Покупатели.Ссылка = &Ссылка
	|	И ТаблицаСуммДокументов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ТаблицаСуммДокументов.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|												  ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС))
	|	И (ТаблицаСуммДокументов.Принципал = НЕОПРЕДЕЛЕНО ИЛИ ТаблицаСуммДокументов.Принципал = &Организация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСуммДокументов.ВидЦенностиПродажи,
	|	Покупатели.Покупатель,
	|	ТаблицаСуммДокументов.СтавкаНДС,
	|	ТаблицаСуммДокументов.ДатаСчетаФактурыКомиссионера";
	
	ТекстЗапроса = ТекстЗапросаСторноИсправление 
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаВыставляемыйКомиссионеру;
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция СчетФактураПредыдущееИсправление(СчетФактураОснование, НомерИсправления)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК ИсправленныйСчетФактура,
	|	СчетФактура.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК СчетФактура
	|ГДЕ
	|	СчетФактура.СчетФактураОснование = &СчетФактураОснование
	|	И СчетФактура.Проведен
	|	И СчетФактура.Исправление
	|	И СчетФактура.НомерИсправления <> &НомерИсправления
	|";
	
	Запрос.УстановитьПараметр("СчетФактураОснование", СчетФактураОснование);
	Запрос.УстановитьПараметр("НомерИсправления", НомерИсправления);
	
	ПредыдущийНомер = 0;
	ИсправленныйСчетФактура = Неопределено;
	НомерИсправленияЧислом = ?(ЗначениеЗаполнено(НомерИсправления),Число(НомерИсправления),1);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерИзВыборки = Число(Выборка.НомерИсправления);
		Если НомерИзВыборки < НомерИсправленияЧислом
			И НомерИзВыборки > ПредыдущийНомер Тогда
			ПредыдущийНомер = НомерИзВыборки;
			ИсправленныйСчетФактура = Выборка.ИсправленныйСчетФактура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИсправленныйСчетФактура
	
КонецФункции

Функция ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаДанныхОснований";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР ТИПЗНАЧЕНИЯ(ДанныеДокумента.ДокументОснование)
	|		КОГДА ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|		КОГДА ТИП(Документ.ОтчетКомиссионера)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ДокументОснование.Договор КАК Договор,
	|	ДанныеДокумента.ДокументОснование.Партнер КАК Партнер,
	|	ДанныеДокумента.ДокументОснование.Контрагент КАК Контрагент,
	|	ДанныеДокумента.ДокументОснование.Подразделение КАК Подразделение,
	|	ДанныеДокумента.ДокументОснование.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВтТаблицаДанныхОснований
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаДанныхОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                       			КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	ТаблицаОснований.ХозяйственнаяОперация 	КАК ХозяйственнаяОперация,
	|	ТаблицаОснований.Партнер                КАК Партнер,
	|	ТаблицаОснований.Договор             	КАК Договор,
	|	ТаблицаОснований.Контрагент             КАК Контрагент,
	|	ТаблицаОснований.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК МестоХранения,
	|	ТаблицаОснований.Подразделение          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&ВалютаСчетаФактуры                     КАК Валюта,
	|	&СуммаНДС                         		КАК Сумма,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК РазделительЗаписи,
	|	&ИнформацияПоИсправлению                КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаДанныхОснований КАК ТаблицаОснований
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОснований.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураКомиссионеру) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ комиссионерам'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры комиссионерам'");
	КонецЕсли;	
	
	Если ЕстьСчетаФактурыКОформлению(Параметры) Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураКомиссионеру());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураКомиссионеру());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураКомиссионеру() Экспорт
	
	Возврат "Документ.СчетФактураКомиссионеру.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	КомандаПечати.Порядок = 1;
	
	// Счет-фактура (в валюте)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактураВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (в валюте)'");
	КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
	КомандаПечати.Порядок = 2;
	
	// Универсальный передаточный документ (УПД)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "УПД";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 3;
	
КонецПроцедуры

// Функция формирует печатную форму Счета-фактуры
//
Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеСчетаФактуры.Ссылка                  КАК Ссылка,
	|	ДанныеСчетаФактуры.ДокументОснование       КАК ДокументОснование,
	|	ДанныеСчетаФактуры.Дата                    КАК Дата
	|ПОМЕСТИТЬ СчетаФактурыОснования
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК ДанныеСчетаФактуры
	|ГДЕ
	|	ДанныеСчетаФактуры.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатЗапроса  = Запрос.Выполнить();
	
	МассивОснований = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	
	ПоместитьВременнуюТаблицуДанныхОснований(МенеджерВременныхТаблиц, МассивОснований);
	
	// Актуализировать расчеты для получения сумм по товарам документа-основания
	Если Не ПараметрыПечати.ПечатьВВалюте Тогда
		
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",
			ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
		|
		|ГДЕ
		|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
		|	И РасчетыСКлиентами.Активность
		|";
		
		ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
		МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
		
		Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
			КонецРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
			АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
			АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
			Попытка
				РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(КонецРасчета, АналитикиРасчета);
			Исключение
				ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
				|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	СформироватьВременнуюТаблицуТоваровДляПечати(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати);
	
	Запрос.Текст = ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры(ПараметрыПечати)
		+ ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры();
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("ПредставлениеСчетФактураКомиссионера", НСтр("ru='счет-фактура комиссионера'"));
	Запрос.УстановитьПараметр("ПредставлениеСчетФактураПосредника", НСтр("ru='счет-фактура посредника'"));
	
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	МассивОперацийПередачаНаКомиссию = Новый Массив;
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
	МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	Запрос.УстановитьПараметр("ХозяйственныеОперацииПередачаНаКомиссию", МассивОперацийПередачаНаКомиссию);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	КоличествоРезультатов     = МассивРезультатов.Количество();
	РезультатПоШапке          = МассивРезультатов[КоличествоРезультатов - 3];
	РезультатПоКонтрагентам   = МассивРезультатов[КоличествоРезультатов - 2];
	РезультатПоТабличнойЧасти = МассивРезультатов[КоличествоРезультатов - 1];
	
	СтруктураДанныхДляПечати  = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоКонтрагентам",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		РезультатПоКонтрагентам);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыУПД(Знач ПараметрыПечати, МассивОбъектов) Экспорт
	
	ПараметрыПечати.Вставить("ДополнитьДаннымиУПД", Истина);
	ПараметрыПечати.Вставить("ПечатьВВалюте", Ложь);
	Возврат ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов);
	
КонецФункции

// Определяет счета-фактуры коммисионеру для печати по переданным документам-основаниям.
// 
// Параметры:
//	МассивОбъектов - Массив - Документ-основания, для которых необходимо найти счета-фактуры
//	ПечатьВВалюте - Булево - Признак печати счетов-фактуры в валюте.
//
// Возвращаемое значение:
//	Структура - структура со следующими свойствами:
//	* СчетаФактурыНаПечать - Массив - Найденные счета-фактуры для печати.
//	* ТаблицаОшибок - ТаблицаЗначений - Документы-основания, по которым счет-фактура не может быть напечатан.
//
Функция ПолучитьСчетаФактурыНаПечать(МассивОбъектов, ПечатьВВалюте = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "";
	ПервыйТип    = Истина;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		ИмяОбъекта = Сред(СтруктураОбъектов.Ключ, 10);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ДокументОснование_" + ИмяОбъекта, СтруктураОбъектов.Значение);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка КАК Ссылка,
		|	ЛОЖЬ КАК НеТребуетсяСчетФактура,
		|	ВЫБОР
		|		КОГДА &ПечатьВВалюте И ДанныеДокумента.Валюта = &ВалютаРегламентированногоУчета ТОГДА
		|			ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК НеТребуетсяПечатьВВалюте
		|		
		|//ОператорПОМЕСТИТЬ
		|ИЗ
		|	Документ.%ИмяОбъекта% КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка В (&ДокументОснование_%ИмяОбъекта%)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяОбъекта%", ИмяОбъекта);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаОснований", ""));
		
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка) КАК СчетФактура,
	|	ТаблицаОснований.Ссылка                 КАК ДокументОснование,
	|	МАКСИМУМ(СчетаФактуры.НомерИсправления) КАК НомерИсправления
	|
	|ПОМЕСТИТЬ НомераИсправлений
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК ИсправленныйСчетФактура
	|		ПО СчетаФактуры.СчетФактураОснование = ИсправленныйСчетФактура.Ссылка
	|			И СчетаФактуры.Исправление
	|	ПО ТаблицаОснований.Ссылка = СчетаФактуры.ДокументОснование
	|		И НЕ ТаблицаОснований.НеТребуетсяСчетФактура
	|		И НЕ ТаблицаОснований.НеТребуетсяПечатьВВалюте
	|		И СчетаФактуры.Проведен
	|		И НЕ СчетаФактуры.ПометкаУдаления
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка),
	|	ТаблицаОснований.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактурыОснования.ДокументОснование КАК Ссылка
	|
	|ПОМЕСТИТЬ ОснованияСоСчетФактурой
	|ИЗ
	|	НомераИсправлений КАК СчетаФактурыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураКомиссионеру.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НомераИсправлений КАК НомераИсправлений
	|	ПО
	|		НомераИсправлений.НомерИсправления = СчетФактураКомиссионеру.НомерИсправления
	|		И НомераИсправлений.СчетФактура    = ВЫБОР КОГДА СчетФактураКомиссионеру.Исправление ТОГДА
	|		                                         СчетФактураКомиссионеру.СчетФактураОснование
	|		                                     ИНАЧЕ
	|		                                         СчетФактураКомиссионеру.Ссылка
	|		                                     КОНЕЦ
	|		И СчетФактураКомиссионеру.Проведен
	|		И НЕ СчетФактураКомиссионеру.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка                   КАК ДокументОснование,
	|	ТаблицаОснований.НеТребуетсяСчетФактура   КАК НеТребуетсяСчетФактура,
	|	ТаблицаОснований.НеТребуетсяПечатьВВалюте КАК НеТребуетсяПечатьВВалюте,
	|	ВЫБОР
	|		КОГДА ОснованияСоСчетФактурой.Ссылка ЕСТЬ NULL ТОГДА
	|			ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                     КАК НеВыставленСчетФактура
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ОснованияСоСчетФактурой КАК ОснованияСоСчетФактурой
	|	ПО ТаблицаОснований.Ссылка = ОснованияСоСчетФактурой.Ссылка";
	
	Запрос.УстановитьПараметр("ПечатьВВалюте", ПечатьВВалюте);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",
		ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	СчетаФактурыНаПечать = РезультатЗапроса[3].Выгрузить().ВыгрузитьКолонку("СчетФактура");
	ТаблицаОшибок        = РезультатЗапроса[4].Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("СчетаФактурыНаПечать", СчетаФактурыНаПечать);
	Структура.Вставить("ТаблицаОшибок",        ТаблицаОшибок);
	
	Возврат Структура;
	
КонецФункции

Процедура ПоместитьВременнуюТаблицуДанныхОснований(МенеджерВременныхТаблиц, МассивОснований)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
	
	ТекстЗапроса           = "";
	ТекстОтветственныеЛица = "";
	ПервыйТип              = Истина;
	
	Для Каждого ТипОснования Из ТипыОснований Цикл
		
		ОбъектыТипа = ТипОснования.Значение;
		ИмяОбъекта  = Сред(ТипОснования.Ключ, 10);
		
		Запрос.Параметры.Вставить("ДокументОснование_" + ИмяОбъекта, ОбъектыТипа);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		Если Не ПустаяСтрока(ТекстОтветственныеЛица) Тогда
			ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		МенеджерОбъекта = Документы[ИмяОбъекта];
		ТекстЗапроса = ТекстЗапроса +
			МенеджерОбъекта.ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура();
			
		ИмяВременнойТаблицы = ИмяОбъекта + "ОтветственныеЛица";
		
		Если ИмяОбъекта = "ОтчетПоКомиссииМеждуОрганизациями" Тогда
			
			РеквизитыОтветственныеЛица = Новый Структура(
				"Руководитель, ГлавныйБухгалтер",
				Перечисления.ОтветственныеЛицаОрганизаций.Руководитель,
				Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
			
			ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
				ОбъектыТипа, МенеджерВременныхТаблиц,
				"Организация", РеквизитыОтветственныеЛица,
				ИмяВременнойТаблицы);
			
		Иначе
			
			ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
				ОбъектыТипа, МенеджерВременныхТаблиц, , ,
				ИмяВременнойТаблицы);
			
		КонецЕсли;
		
		ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
		|ВЫБРАТЬ
		|	Таблица.Ссылка                       КАК Ссылка,
		|	Таблица.РуководительНаименование     КАК РуководительНаименование,
		|	Таблица.РуководительДолжность        КАК РуководительДолжность,
		|	Таблица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтерНаименование
		|//ОператорПОМЕСТИТЬ
		|ИЗ
		|	" + ИмяВременнойТаблицы + " КАК Таблица";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаДанныхДокументов", ""));
		ТекстОтветственныеЛица = СтрЗаменить(ТекстОтветственныеЛица,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаОтветственныеЛица", ""));
			
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.Текст = ТекстЗапроса + ТекстОтветственныеЛица;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьВременнуюТаблицуТоваровДляПечати(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
	
	ТекстОбщейТаблицыТовары = "";
	ПервыйТип               = Истина;
	
	Для Каждого ТипОснования Из ТипыОснований Цикл
		
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
		ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = НЕ ПараметрыПечати.ПечатьВВалюте;
		ПараметрыЗаполнения.АктуализироватьРасчеты = Ложь;
		
		ИмяОбъекта = Сред(ТипОснования.Ключ, 10);
		
		МенеджерОбъекта = Документы[ИмяОбъекта];
		МенеджерОбъекта.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
		
		Если Не ПустаяСтрока(ТекстОбщейТаблицыТовары) Тогда
			ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка                                    КАК Ссылка,
		|	ТаблицаДокумента.НомерСтроки                               КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура                              КАК Номенклатура,
		|	ТаблицаДокумента.Характеристика                            КАК Характеристика,
		|	ТаблицаДокумента.Упаковка                                  КАК Упаковка,
		|	ТаблицаДокумента.НомерГТД                                  КАК НомерГТД,
		|	ТаблицаДокумента.Количество                                КАК Количество,
		|	ТаблицаДокумента.КоличествоУпаковок                        КАК КоличествоУпаковок,
		|	ТаблицаДокумента.СуммаБезНДС                               КАК СуммаБезНДС,
		|	ТаблицаДокумента.СтавкаНДС                                 КАК СтавкаНДС,
		|	ТаблицаДокумента.СуммаНДС                                  КАК СуммаНДС,
		|	ТаблицаДокумента.ДатаСчетаФактурыКомиссионера              КАК ДатаСчетаФактурыКомиссионера,
		|	ТаблицаДокумента.НомерСчетаФактурыКомиссионера             КАК НомерСчетаФактурыКомиссионера,
		|	ТаблицаДокумента.Покупатель                                КАК Покупатель,
		|	ТаблицаДокумента.ЭтоТовар                                  КАК ЭтоТовар
		|//ОператорПОМЕСТИТЬ
		|ИЗ
		|	" + ИмяОбъекта + "ТаблицаТоваров КАК ТаблицаДокумента";
		
		ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаТоваров", ""));
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстРезультирующейТаблицы = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                                    КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки                               КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура                              КАК Номенклатура,
	|	ДанныеНоменклатуры.НаименованиеПолное                    КАК НоменклатураНаименование,
	|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
	|		ДанныеНоменклатуры.Артикул
	|	ИНАЧЕ
	|		ДанныеНоменклатуры.Код
	|	КОНЕЦ                                                    КАК НоменклатураКод,
	|	ЛОЖЬ                                                     КАК ЭтоВозвратнаяТара,
	|	ВЫБОР 
	|		КОГДА НЕ ДанныеУпаковки.Ссылка ЕСТЬ NULL ТОГДА
	|			ДанныеУпаковки.ЕдиницаИзмерения
	|		КОГДА ДанныеНоменклатуры.Ссылка ЕСТЬ NULL ТОГДА
	|			ТаблицаТоваров.Упаковка
	|		ИНАЧЕ
	|			ДанныеНоменклатуры.ЕдиницаИзмерения
	|	КОНЕЦ                                                    КАК ЕдиницаИзмерения,
	|	ТаблицаТоваров.Характеристика                            КАК Характеристика,
	|	ТаблицаТоваров.НомерГТД                                  КАК НомерГТД,
	|	ТаблицаТоваров.СтавкаНДС                                 КАК СтавкаНДС,
	|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.Количество
	|	ИНАЧЕ
	|		ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ                                                    КАК Количество,
	|	ВЫБОР КОГДА ТаблицаТоваров.Количество = 0 ТОГДА
	|		0
	|	КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	ИНАЧЕ
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ                                                    КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС                               КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС                                  КАК СуммаНДС,
	|	ТаблицаТоваров.Покупатель                                КАК Покупатель,
	|	ТаблицаТоваров.ДатаСчетаФактурыКомиссионера              КАК ДатаСчетаФактурыКомиссионера,
	|	ТаблицаТоваров.НомерСчетаФактурыКомиссионера             КАК НомерСчетаФактурыКомиссионера
	|
	|ПОМЕСТИТЬ ТаблицаТоваровДокументов
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеУпаковки
	|		ПО НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			И ТаблицаТоваров.Упаковка = ДанныеУпаковки.Ссылка";
	
	Запрос.Текст = ТекстОбщейТаблицыТовары + ТекстРезультирующейТаблицы;
	
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры(ПараметрыПечати)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка КАК Ссылка,
	|	ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеОснований.НалогообложениеНДС КАК НалогообложениеНДС,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеОрганизацийПоставщик.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
	|		ДанныеОрганизацийПоставщик.ГоловнаяОрганизация
	|	ИНАЧЕ
	|		ДанныеСчетаФактуры.Организация
	|	КОНЕЦ КАК Организация,
	|	
	|	ВЫБОР КОГДА ДанныеОснований.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
	|		ДанныеСчетаФактуры.Организация
	|	ИНАЧЕ
	|		ДанныеОснований.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|
	|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане ЕСТЬ NULL ТОГДА
	|		ДанныеПодразделений.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения
	|	КОГДА ЕСТЬNULL(ДанныеОрганизацийПоставщик.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
	|		ДанныеОрганизацийПоставщик.ЦифровойИндексОбособленногоПодразделения
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК ЦифровойИндекс,
	|
	|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане ЕСТЬ NULL ТОГДА
	|		ДанныеПодразделений.РегистрацияВНалоговомОргане.КПП
	|	ИНАЧЕ
	|		ДанныеОрганизацийПоставщик.КПП
	|	КОНЕЦ КАК КПППоставщика,
	|
	|	ДанныеОрганизацийПоставщик.Префикс КАК Префикс,
	|	ДанныеСчетаФактуры.Комиссионер КАК Комиссионер,
	|	ДанныеВалюты.Ссылка КАК Валюта,
	|	ДанныеВалюты.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеВалюты.Код КАК ВалютаКод,
	|//РеквизитыОснованийДляУПД
	|	ВЫБОР
	|		КОГДА НЕ ДанныеОснований.РасчетыЧерезОтдельногоКонтрагента
	|			ИЛИ ДанныеСчетаФактуры.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ПечататьСчетФактуру
	|
	|ПОМЕСТИТЬ ДанныеОснований
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК ДанныеСчетаФактуры
	|	ПО ДанныеСчетаФактуры.Ссылка = СчетаФактурыОснования.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеОснований
	|	ПО СчетаФактурыОснования.ДокументОснование = ДанныеОснований.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПоставщик
	|	ПО ДанныеСчетаФактуры.Организация = ДанныеОрганизацийПоставщик.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
	|	ПО ДанныеПодразделений.Организация = ДанныеСчетаФактуры.Организация
	|		И ДанныеПодразделений.Подразделение = ДанныеОснований.Подразделение
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК ДанныеВалюты
	|	ПО ДанныеОснований.Валюта = ДанныеВалюты.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                КАК Ссылка,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.Организация <> ДанныеОснований.Комиссионер ТОГДА
	|			&ПредставлениеСчетФактураКомиссионера
	|		ИНАЧЕ &ПредставлениеСчетФактура
	|	КОНЕЦ                                                 КАК ПредставлениеДокумента,
	|	ДанныеДокумента.Номер                                 КАК Номер,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ЕСТЬNULL(ДанныеДокумента.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))
	|	ИНАЧЕ 
	|		ДанныеДокумента.Дата
	|	КОНЕЦ                                                 КАК Дата,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ДанныеДокумента.НомерИсправления 
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                 КАК НомерИсправления,
	|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                 КАК ДатаИсправления,
	|	ДанныеДокумента.Исправление                           КАК Исправление,
	|	ЛОЖЬ                                                  КАК КорректировочныйСчетФактура,
	|	ДанныеДокумента.СтрокаПлатежноРасчетныеДокументы      КАК СтрокаПоДокументу,
	|	ДанныеДокумента.Валюта                                КАК ВалютаСчетаФактуры,
	|	ДанныеОснований.Организация                           КАК Организация,
	|	ДанныеОснований.НалогообложениеНДС                    КАК НалогообложениеНДС,
	|	ДанныеОснований.КПППоставщика                         КАК КПППоставщика,
	|	ДанныеОснований.Грузоотправитель                      КАК Грузоотправитель,
	|	ДанныеОснований.Префикс                               КАК Префикс,
	|	ДанныеОснований.ЦифровойИндекс                        КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование     КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность        КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ДанныеОснований.Валюта                                КАК Валюта,
	|	ДанныеОснований.ВалютаНаименованиеПолное              КАК ВалютаНаименованиеПолное,
	|	ДанныеОснований.ВалютаКод                             КАК ВалютаКод,
	|	//РеквизитыОснованийДляУПД
	|	//ДанныеУПДВыданного
	|	ЛОЖЬ                                                  КАК ТолькоУслуги
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактурыОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК ДанныеДокумента
	|	ПО СчетаФактурыОснования.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОснований КАК ДанныеОснований
	|	ПО СчетаФактурыОснования.Ссылка = ДанныеОснований.Ссылка
	|		И ДанныеОснований.ПечататьСчетФактуру
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаФактуры.Ссылка      КАК Ссылка,
	|	Покупатели.Покупатель    КАК Грузополучатель,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеКонтрагента.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
	|		ДанныеКонтрагента.ГоловнойКонтрагент
	|	ИНАЧЕ
	|		Покупатели.Покупатель
	|	КОНЕЦ                    КАК Контрагент,
	|
	|	ВЫБОР КОГДА Покупатели.КПППокупателя ПОДОБНО """" ТОГДА
	|		ВЫБОР КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Контрагенты ТОГДА """"
	|			  КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.КПП, """")
	|			  ИНАЧЕ """"
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Покупатели.КПППокупателя
	|	КОНЕЦ КАК КПППокупателя,
	|
	|	ВЫБОР КОГДА Покупатели.ИННПокупателя ПОДОБНО """" ТОГДА
	|		ВЫБОР КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Контрагенты ТОГДА ЕстьNULL(ДанныеКонтрагента.ИНН, """")
	|			  КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.ИНН, """")
	|			  ИНАЧЕ """"
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Покупатели.ИННПокупателя
	|	КОНЕЦ КАК ИННПокупателя
	|
	|ИЗ
	|	СчетаФактурыОснования КАК СчетаФактуры
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
	|	ПО СчетаФактуры.Ссылка = Покупатели.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
	|	ПО ДанныеКонтрагента.Ссылка = Покупатели.Покупатель
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПокупатель
	|	ПО ДанныеОрганизацийПокупатель.Ссылка = Покупатели.Покупатель
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|";
	
	Если ПараметрыПечати.Свойство("ДополнитьДаннымиУПД") И ПараметрыПечати.ДополнитьДаннымиУПД Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//РеквизитыОснованийДляУПД",
		"	ДанныеОснований.Основание           КАК Основание,
		|	ДанныеОснований.ДоверенностьНомер   КАК ДоверенностьНомер,
		|	ДанныеОснований.ДоверенностьДата    КАК ДоверенностьДата,
		|	ДанныеОснований.ДоверенностьВыдана  КАК ДоверенностьВыдана,
		|	ДанныеОснований.ДоверенностьЛицо    КАК ДоверенностьЛицо,
		|	ДанныеОснований.Кладовщик           КАК Кладовщик,
		|	ДанныеОснований.ДолжностьКладовщика КАК ДолжностьКладовщика,");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеУПДВыданного",
		"	ИСТИНА                              КАК ВыводитьКодНоменклатуры,
		|	ЛОЖЬ                                КАК ПечатьНеТребуется,
		|	1                                   КАК СтатусУПД,");
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаФактурыОснования.Ссылка                                 КАК Ссылка,
	|	МИНИМУМ(ТаблицаДокумента.НомерСтроки)                        КАК НомерСтроки,
	|
	|	ТаблицаДокумента.Номенклатура                                КАК Номенклатура,
	|	ТаблицаДокумента.НоменклатураНаименование                    КАК НоменклатураНаименование,
	|	ТаблицаДокумента.НоменклатураКод                             КАК НоменклатураКод,
	|	ТаблицаДокумента.ЕдиницаИзмерения                            КАК ЕдиницаИзмерения,
	|	ДанныеЕдиницыИзмерения.Представление                         КАК ЕдиницаИзмеренияНаименование,
	|	ДанныеЕдиницыИзмерения.Код                                   КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(ДанныеХарактеристики.НаименованиеПолное, """")      КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.НомерГТД                                    КАК НомерГТД,
	|	ДанныеСтраныПросхождения.Ссылка                              КАК СтранаПроисхождения,
	|	ДанныеСтраныПросхождения.Код                                 КАК СтранаПроисхожденияКод,
	|	СУММА(ТаблицаДокумента.Количество)                           КАК Количество,
	|	ТаблицаДокумента.Цена                                        КАК Цена,
	|	СУММА(ТаблицаДокумента.СуммаБезНДС)                          КАК СуммаБезНДС,
	|	СУММА(ТаблицаДокумента.СуммаНДС)                             КАК СуммаНДС,
	|	СУММА(ТаблицаДокумента.СуммаБезНДС
	|		+ ТаблицаДокумента.СуммаНДС)                             КАК СуммаСНДС,
	|	ТаблицаДокумента.СтавкаНДС                                   КАК СтавкаНДС,
	|
	|	Покупатели.Покупатель                                        КАК Покупатель,
	|	ТаблицаДокумента.ДатаСчетаФактурыКомиссионера                КАК Дата,
	|	ЛОЖЬ                                                         КАК ЭтоВозвратнаяТара
	|
	|ИЗ СчетаФактурыОснования КАК СчетаФактурыОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
	|	ПО СчетаФактурыОснования.Ссылка = Покупатели.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровДокументов КАК ТаблицаДокумента
	|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаДокумента.Ссылка
	|		И Покупатели.Покупатель = ТаблицаДокумента.Покупатель
	|		И (ТаблицаДокумента.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ ТаблицаДокумента.ДатаСчетаФактурыКомиссионера = НАЧАЛОПЕРИОДА(СчетаФактурыОснования.Дата, ДЕНЬ))
	|		И (Покупатели.НомерСчетаФактуры = ТаблицаДокумента.НомерСчетаФактурыКомиссионера)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|	ПО ТаблицаДокумента.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ДанныеХарактеристики
	|	ПО ТаблицаДокумента.Характеристика = ДанныеХарактеристики.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныПросхождения
	|	ПО ТаблицаДокумента.НомерГТД.СтранаПроисхождения = ДанныеСтраныПросхождения.Ссылка
	|
	|ГДЕ
	|	НЕ ТаблицаДокумента.ЭтоВозвратнаяТара
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактурыОснования.Ссылка,
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.НоменклатураНаименование,
	|	ТаблицаДокумента.НоменклатураКод,
	|	ТаблицаДокумента.ЕдиницаИзмерения,
	|	ДанныеЕдиницыИзмерения.Представление,
	|	ДанныеЕдиницыИзмерения.Код,
	|	ТаблицаДокумента.Характеристика,
	|	ДанныеХарактеристики.НаименованиеПолное,
	|	ТаблицаДокумента.НомерГТД,
	|	ДанныеСтраныПросхождения.Ссылка,
	|	ТаблицаДокумента.Цена,
	|	ТаблицаДокумента.СтавкаНДС,
	|	Покупатели.Покупатель,
	|	ТаблицаДокумента.ДатаСчетаФактурыКомиссионера
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли
