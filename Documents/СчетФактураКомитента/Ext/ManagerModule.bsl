

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура полученный от комитента (принципала)".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураКомитента) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураКомитента.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураКомитента);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКомиссиюПриЗакупках";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
КонецПроцедуры

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", Параметры.МассивОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода",     Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      Параметры.КонецПериода);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(1) КАК КоличествоДокументовКОформлению
	|ИЗ
	|	РегистрСведений.СчетаФактурыКомитентовКРегистрации КАК КРегистрации
	|	ГДЕ
	|		КРегистрации.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|		И &УсловиеОтбора
	|";
	
	Если ЗначениеЗаполнено(Параметры.МассивОрганизаций) Тогда
		УсловиеОтбора = "КРегистрации.Организация В (&МассивОрганизаций)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеОтбора", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И НЕ Выборка.КоличествоДокументовКОформлению = NULL Тогда
		Возврат Выборка.КоличествоДокументовКОформлению;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.СчетФактураКомитента";
	
	ВЗапросеЕстьИсточник = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ВалютаСчетаФактуры",      "ДанныеДокумента.Ссылка.Валюта");
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтТаблицаДанныхОснований", ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса));
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Поместим результаты запроса в дополнительные свойства
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.ДатаСоставления КАК Период,
	|	ДанныеДокумента.Дата КАК ДатаПолучения,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Комитент КАК Контрагент,
	|	ДанныеДокумента.КППКомитента КАК КонтрагентКПП,
	|	ДанныеДокумента.ИННКомитента КАК КонтрагентИНН,
	|	ДанныеДокумента.Исправление КАК Исправление,
	|	ДанныеДокумента.ПолученВЭлектронномВиде КАК ПолученВЭлектронномВиде,
	|	ДанныеДокумента.КодВидаОперации КАК КодВидаОперации,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.НомерИсправления КАК НомерИсправления,
	|	ДанныеДокумента.ДатаИсправления КАК ДатаИсправления,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.СуммаНДС КАК СуммаНДС,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.СчетФактураКомитента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",							Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",					Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",						Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Исправление",					Реквизиты.Исправление);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде",		?(Реквизиты.ПолученВЭлектронномВиде, 2, 1));
	Запрос.УстановитьПараметр("КодВидаОперации",				Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("Номер",							Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерИсправления",				Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("ДатаИсправления",				Реквизиты.ДатаИсправления);
	Запрос.УстановитьПараметр("ВалютаСчетаФактуры",				Реквизиты.Валюта);
	Запрос.УстановитьПараметр("КонтрагентКПП",					Реквизиты.КонтрагентКПП);
	Запрос.УстановитьПараметр("КонтрагентИНН",					Реквизиты.КонтрагентИНН);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("Ответственный",					Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("Комментарий",					Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("СуммаНДС",						Реквизиты.СуммаНДС);
	Запрос.УстановитьПараметр("Проведен",						Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",				Реквизиты.ПометкаУдаления);
	
	УчетНДСУТ.УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыПолученного(Реквизиты, Запрос);

	ИнформацияПоИсправлению = "";
	Если Реквизиты.Исправление
		И ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления% от %ДатаИсправления%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%НомерИсправления%", Реквизиты.НомерИсправления);
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%ДатаИсправления%", Реквизиты.ДатаИсправления);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);

	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураКомитента"));
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация",  Перечисления.ХозяйственныеОперации.ОтчетКомитенту);

	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                                                     КАК Период,
	|	&Организация                                                                КАК Организация,
	|	&Контрагент                                                                 КАК Контрагент,
	|	&Ссылка                                                                     КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	Покупатели.НомерСтроки                                                      КАК ИндексСтроки,
	|	&ДатаПолучения                                                              КАК ДатаВыставленияПолучения,
	|	&ПолученВЭлектронномВиде                                                    КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                                                            КАК КодВидаОперации,
	|	&Номер                                                                      КАК НомерСчетаФактуры,
	|	&Период                                                                     КАК ДатаСчетаФактуры,
	|	NULL                                                                        КАК НомерКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаКорректировочногоСчетаФактуры,
	|	&НомерИсправления                                                           КАК НомерИсправления,
	|	&ДатаИсправления                                                            КАК ДатаИсправления,
	|	NULL                                                                        КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	&ВалютаСчетаФактуры                                                         КАК Валюта,
	|	Покупатели.СуммаСНДС                                                        КАК СуммаПоСчетуФактуре,
	|	Покупатели.СуммаНДС                                                         КАК СуммаНДС,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                                                           КАК СуммаНДСРазницаУменьшение,
	|	0                                                                           КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                                                        КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                                                        КАК СчетФактураНеВыставляется,
	|	&КонтрагентКПП                                                              КАК КППКонтрагента,
	|	&КонтрагентИНН                                                              КАК ИННКонтрагента,
	|	Покупатели.СчетФактураВыданный                                              КАК СчетФактураВыданныйПокупателю,
	|	Покупатели.Субкомиссионер                                                   КАК Субкомиссионер,
	|	Покупатели.ИННСубкомиссионера                                               КАК ИННСубкомиссионера,
	|	Покупатели.КППСубкомиссионера                                               КАК КППСубкомиссионера,
	|	""2""                                                                       КАК КодВидаСделки,
	|	Покупатели.СуммаСНДС                                                        КАК СуммаПоСчетуФактуреКомиссия,
	|	Покупатели.СуммаНДС                                                         КАК СуммаНДСКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	&КодВидаОперацииКомиссия                                                    КАК КодВидаОперацииКомиссия
	|
	|ИЗ
	|	Документ.СчетФактураКомитента.Покупатели КАК Покупатели
	|ГДЕ
	|	Покупатели.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &Период <> ДАТАВРЕМЯ(1,1,1)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаДанныхОснований";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеОснований.Ссылка											КАК Ссылка,
	|	МИНИМУМ(ДанныеОснований.ДокументОснование)						КАК ДокументОснование,
	|	МАКСИМУМ(ДанныеОснований.НаправлениеДеятельности)				КАК НаправлениеДеятельности,
	|	МАКСИМУМ(ДанныеОснований.МестоХранения)							КАК МестоХранения,
	|	МАКСИМУМ(ДанныеОснований.Партнер)								КАК Партнер,
	|	МАКСИМУМ(ДанныеОснований.Контрагент)							КАК Контрагент,
	|	МАКСИМУМ(ДанныеОснований.Договор)								КАК Договор,
	|	МАКСИМУМ(ДанныеОснований.Подразделение)							КАК Подразделение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.НаправлениеДеятельности)	КАК КоличествоНаправленийДеятельности,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.МестоХранения)				КАК КоличествоМестХранения,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.Партнер)					КАК КоличествоПартнеров,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.Подразделение)				КАК КоличествоПодразделений,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.Договор)					КАК КоличествоДоговоров,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.Контрагент)				КАК КоличествоКонтрагентов
	|ПОМЕСТИТЬ ВтТаблицаДанныхОснований
	|ИЗ
	|	(		
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ДанныеРеестра.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		ДанныеДокумента.СчетФактураВыданный		КАК ДокументОснование,
	|		ДанныеРеестра.МестоХранения				КАК МестоХранения,
	|		ДанныеРеестра.Контрагент				КАК Контрагент,
	|		ДанныеРеестра.Договор					КАК Договор,
	|		ДанныеРеестра.Подразделение				КАК Подразделение,
	|		ДанныеРеестра.Партнер					КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураКомитента.Покупатели КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК ДанныеРеестра
	|			ПО ДанныеДокумента.СчетФактураВыданный = ДанныеРеестра.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	) КАК ДанныеОснований
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОснований.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаДанныхОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК ДатаДокументаИБ,
	|	ДанныеДокумента.Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	ДанныеДокумента.Организация КАК Организация,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоПартнеров, 0) = 1
	|			ТОГДА ТаблицаОснований.Партнер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК Партнер,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоКонтрагентов, 0) = 1
	|			ТОГДА ТаблицаОснований.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоДоговоров, 0) = 1
	|			ТОГДА ТаблицаОснований.Договор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК Договор,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоНаправленийДеятельности, 0) = 1
	|			ТОГДА ТаблицаОснований.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоМестХранения, 0) = 1
	|			ТОГДА ТаблицаОснований.МестоХранения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК МестоХранения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоПодразделений, 0) = 1
	|			ТОГДА ТаблицаОснований.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК Подразделение,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	&Комментарий КАК Комментарий,
	|	&ВалютаСчетаФактуры КАК Валюта,
	|	&СуммаНДС КАК Сумма,
	|	НЕОПРЕДЕЛЕНО КАК Статус,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО КАК РазделительЗаписи,
	|	"""" КАК Дополнительно,
	|	ДанныеДокумента.Дата КАК ДатаПервичногоДокумента,
	|	ДанныеДокумента.Номер КАК НомерПервичногоДокумента
	|ИЗ
	|	Документ.СчетФактураКомитента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаДанныхОснований КАК ТаблицаОснований
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОснований.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураКомитента) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ комитентов'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры комитентов'");
	КонецЕсли;	
	
	Если ЕстьСчетаФактурыКОформлению(Параметры) Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураКомитента());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураКомитента());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураКомитента() Экспорт
	
	Возврат "Документ.СчетФактураКомитента.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли