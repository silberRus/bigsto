#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Доставка

// Функция возвращает текст запроса для определения реквизитов доставки.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстЗапросаРеквизитыДоставки() Экспорт
	
	ТекстЗапросаРаспоряжения =
	"ВЫБРАТЬ
	|	Т.Ссылка КАК Ссылка,
	|	Т.Ссылка.Договор КАК Договор,
	|	Т.Склад КАК Склад
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК Т
	|ГДЕ
	|	Т.Ссылка В(&Ссылки)
	|	И Т.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Ссылка,
	|	Т.Ссылка.Договор,
	|	Т.Склад";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Шапка.Номер КАК Номер,
	|	Шапка.Проведен КАК Проведен,
	|	Шапка.Ссылка КАК Ссылка,
	|	Шапка.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА Шапка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|			ТОГДА Шапка.ПодотчетноеЛицо
	|		ИНАЧЕ Шапка.Партнер
	|	КОНЕЦ КАК ПолучательОтправитель,
	|	Шапка.ПеревозчикПартнер КАК Перевозчик,
	|	Шапка.СпособДоставки КАК СпособДоставки,
	|	Шапка.ЗонаДоставки КАК Зона,
	|	ВЫБОР
	|		КОГДА Шапка.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаДоПунктаПередачи)
	|			ТОГДА Шапка.АдресДоставкиПеревозчика
	|		ИНАЧЕ Шапка.АдресДоставки
	|	КОНЕЦ КАК Адрес,
	|	ВЫБОР
	|		КОГДА Шапка.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаДоПунктаПередачи)
	|			ТОГДА Шапка.АдресДоставкиПеревозчикаЗначенияПолей
	|		ИНАЧЕ Шапка.АдресДоставкиЗначенияПолей
	|	КОНЕЦ КАК АдресЗначенияПолей,
	|	Шапка.ВремяДоставкиС КАК ВремяС,
	|	Шапка.ВремяДоставкиПо КАК ВремяПо,
	|	Шапка.ДополнительнаяИнформацияПоДоставке КАК ДополнительнаяИнформация,
	|	Распоряжения.Склад КАК Склад,
	|	ИСТИНА КАК ДоставитьПолностью,
	|	Шапка.ОсобыеУсловияПеревозки КАК ОсобыеУсловияПеревозки,
	|	Шапка.ОсобыеУсловияПеревозкиОписание КАК ОсобыеУсловияПеревозкиОписание,
	|	ЛОЖЬ КАК РазбиватьРасходныеОрдераПоРаспоряжениям
	|ИЗ
	|	&ВтРаспоряжения КАК Распоряжения
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Шапка
	|		ПО (Шапка.Ссылка = Распоряжения.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорКонтрагента
	|		ПО ДоговорКонтрагента.Ссылка = Распоряжения.Договор
	|
	|ГДЕ
	|	ДоговорКонтрагента.Ссылка ЕСТЬ NULL
	|	ИЛИ НЕ ДоговорКонтрагента.СпособДоставки В (&ИспользуемыеСпособыДоставки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ИсточникДанныхДоставки.Ссылка В (&ДоговораРаспоряженияНаПоступление)
	|			ТОГДА ИсточникДанныхДоставки.Номер
	|		ИНАЧЕ
	|			Распоряжения.Ссылка.Номер
	|	КОНЕЦ                                       КАК Номер,
	|	ВЫБОР
	|		КОГДА ИсточникДанныхДоставки.Ссылка В (&ДоговораРаспоряженияНаПоступление)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ
	|			Распоряжения.Ссылка.Проведен
	|	КОНЕЦ                                       КАК Проведен,
	|	ВЫБОР
	|		КОГДА ИсточникДанныхДоставки.Ссылка В (&ДоговораРаспоряженияНаПоступление)
	|			ТОГДА ИсточникДанныхДоставки.Ссылка
	|		ИНАЧЕ
	|			Распоряжения.Ссылка
	|	КОНЕЦ                                       КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ИсточникДанныхДоставки.Ссылка В (&ДоговораРаспоряженияНаПоступление)
	|			ТОГДА ИсточникДанныхДоставки.Дата
	|		ИНАЧЕ
	|			Распоряжения.Ссылка.Дата
	|	КОНЕЦ                                       КАК Дата,
	|	ИсточникДанныхДоставки.Партнер				КАК ПолучательОтправитель,
	|	ИсточникДанныхДоставки.ПеревозчикПартнер	КАК Перевозчик,
	|	ВЫБОР
	|		КОГДА ИсточникДанныхДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|				И НЕ &ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
	|		ИНАЧЕ ИсточникДанныхДоставки.СпособДоставки
	|	КОНЕЦ										КАК СпособДоставки,
	|	ИсточникДанныхДоставки.ЗонаДоставки			КАК Зона,
	|	ВЫБОР
	|		КОГДА ИсточникДанныхДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
	|			ТОГДА ИсточникДанныхДоставки.АдресДоставкиПеревозчика
	|		ИНАЧЕ ИсточникДанныхДоставки.АдресДоставки
	|	КОНЕЦ										КАК Адрес,
	|	ВЫБОР
	|		КОГДА ИсточникДанныхДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
	|			ТОГДА ИсточникДанныхДоставки.АдресДоставкиПеревозчикаЗначенияПолей
	|		ИНАЧЕ ИсточникДанныхДоставки.АдресДоставкиЗначенияПолей
	|	КОНЕЦ										КАК АдресЗначенияПолей,
	|	ИсточникДанныхДоставки.ВремяДоставкиС		КАК ВремяС,
	|	ИсточникДанныхДоставки.ВремяДоставкиПо		КАК ВремяПо,
	|	ИсточникДанныхДоставки.ДополнительнаяИнформацияПоДоставке	КАК ДополнительнаяИнформация,
	|	Распоряжения.Склад							КАК Склад,
	|	ЛОЖЬ										КАК ДоставитьПолностью,
	|	ЛОЖЬ										КАК ОсобыеУсловияПеревозки,
	|	""""										КАК ОсобыеУсловияПеревозкиОписание,
	|	ЛОЖЬ										КАК РазбиватьРасходныеОрдераПоРаспоряжениям
	|ИЗ
	|	&ВтРаспоряжения КАК Распоряжения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ИсточникДанныхДоставки
	|		ПО ИсточникДанныхДоставки.Ссылка = Распоряжения.Договор
	|ГДЕ
	|	ИсточникДанныхДоставки.СпособДоставки В (&ИспользуемыеСпособыДоставки)";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВтРаспоряжения", "(" + ТекстЗапросаРаспоряжения + ")");
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса получения товаров к доставке по распоряжению.
//
//Возвращаемое значение
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаТоварыКДоставке() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Ссылка,
	|	Т.Склад,
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	Т.Назначение,
	|	СУММА(Т.Количество) КАК Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК Т
	|ГДЕ
	|	Т.Ссылка В(&Ссылки)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Ссылка,
	|	Т.Склад,
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	Т.Назначение";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьАктыРасхожденийПослеПриемкиПоПоступлениям") Тогда
		КомандаСоздания = Документы.АктОРасхожденияхПослеПриемки.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
		Если КомандаСоздания <> Неопределено Тогда
			КомандаСоздания.Представление = НСтр("ru = 'Акт о расхождениях после поступления'");
			
			Если ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков")
				Или ПолучитьФункциональнуюОпцию("ИспользоватьНеотфактурованныеПоставки") Тогда
				
				КомандаСоздания.Обработчик =
					"СозданиеНаОснованииУТКлиент.СоздатьАктОРасхожденияхПослеПриемкиНаОснованииПриобретенияТоваровУслуг";
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Документы.ВозвратТоваровПоставщику.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ВыкупВозвратнойТарыУПоставщика.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ЗаказНаПеремещение.ДобавитьКомандуСоздатьНаОснованииПриобретенияТоваровУслугПоГруппеСкладов(КомандыСозданияНаОсновании);
	
	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ЗаявлениеОВвозеТоваров.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.КорректировкаПриобретения.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПеремещениеТоваров.ДобавитьКомандуСоздатьНаОснованииПоГруппеСкладов(КомандыСозданияНаОсновании);
	
	Документы.РасходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.РеализацияТоваровУслуг.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	КомандаСоздатьНаОсновании = Документы.РегистрацияЦенНоменклатурыПоставщика.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если КомандаСоздатьНаОсновании <> Неопределено Тогда
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Регистрация цен поставщика'");
	КонецЕсли; 
	
	Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ТаможеннаяДекларацияИмпорт.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.УстановкаЦенНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
	Документы.ВнутреннееПотреблениеТоваров.ДобавитьКомандуСоздатьНаОснованииПередачаВЭксплуатацию(КомандыСозданияНаОсновании);
	
	Документы.ВнутреннееПотреблениеТоваров.ДобавитьКомандуСоздатьНаОснованииСписаниеНаРасходыАктивы(КомандыСозданияНаОсновании);
	
	Обработки.СправочноеРазмещениеНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПоручениеЭкспедитору.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.КорректировкаВидаДеятельностиНДС.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПрочиеДоходыРасходы.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	
	Документы.УпаковочныйЛист.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Приобретение товаров и услуг".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПриобретениеТоваровУслуг) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПриобретениеТоваровУслуг.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПриобретениеТоваровУслуг);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Добавляет команду создания документа "Приобретение товаров и услуг".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОснованииЗаказа(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПриобретениеТоваровУслуг) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.ПриобретениеТоваровУслугСоздатьНаОснованииЗаказа";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьНаОснованииЗаказа";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Приобретение товаров и услуг'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.МножественныйВыбор = Истина;
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		
	КонецЕсли;
	
	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСостояниеВыполненияДокументЗакупки(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.Порядок = 1;
		КомандаОтчет.ВидимостьВФормах = "ФормаДокумента";
		
	КонецЕсли;
	
	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОтклоненияОтУсловийЗакупок(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.ВидимостьВФормах = "ФормаДокумента";
		
	КонецЕсли;
	
	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуКарточкаРасчетовСПоставщикомПоДокументам(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		
		
	КонецЕсли;
	
	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуКарточкаРасчетовПоПринятойВозвратнойТаре(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.ВидимостьВФормах = "ФормаДокумента";
		
	КонецЕсли;
	
	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСостояниеРасчетовСПоставщикомПоДокументам(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		
		
	КонецЕсли;
	
	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуАнализЦенПоставщиковПоДокументу(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		
		
	КонецЕсли;
	
КонецПроцедуры

#Область Состояние

// Осуществляет вычисление текущего состояния по поступлению без заказа
//
// Параметры:
//	ЗаказПоставщику         - ДокументСсылка.ПриобретениеТоваровУслуг - Документ, состояние которого необходимо вычислить
//	Договор                 - СправочникСсылка.ДоговорыКонтрагентов    - Договор с клиентом
//	СостояниеРасчетов       - УправляемаяФорма - Форма, в реквизиты которой будет помещено рассчитанное состояние
//
Процедура РассчитатьСостояние(Знач ПриобретениеТоваровУслуг, Знач Договор, СостояниеРасчетов) Экспорт
	
	ЗаполнитьЗначенияСвойств(СостояниеРасчетов, СтруктураСостоянияРасчетов());
	
	Если ЗначениеЗаполнено(ПриобретениеТоваровУслуг) И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РасчетыСПоставщиками) Тогда
		УстановитьПривилегированныйРежим(Истина);
		Запрос = Новый Запрос("
			|ВЫБРАТЬ 
			|// СУММА ОПЛАТЫ /////////////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПриобретениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПриобретениеТоваровУслуг.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) И
			|		ДокументПриобретениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0) КАК ЧИСЛО(15, 2))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаОплаты,
			|// ПРОЦЕНТ ОПЛАТЫ ///////////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПриобретениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПриобретениеТоваровУслуг.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) И
			|		ДокументПриобретениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0) * 100 / РасчетыСПоставщикамиОстатки.КОплатеРасход КАК ЧИСЛО(15, 0))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК ПроцентОплаты,
			|// СУММА ПРОСРОЧЕННОЙ ОПЛАТЫ ////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПриобретениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПриобретениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|		И ЕСТЬNULL(РасчетыСПоставщикамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) < 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (-ЕСТЬNULL(РасчетыСПоставщикамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) КАК ЧИСЛО(15, 2))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаПросроченнойОплаты,
			|// СУММА ПОСТУПЛЕНИЯ ////////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПриобретениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПриобретениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаПоступления,
			|// ПРОЦЕНТ ПОСТУПЛЕНИЯ //////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПриобретениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПриобретениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) КАК ЧИСЛО(15, 0))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК ПроцентПоступления,
			|// ДОЛГ (+ НАМ ДОЛЖНЫ, - МЫ ДОЛЖНЫ)//////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПриобретениеТоваровУслуг.Проведен И
			|		(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0 ИЛИ
			|		ДокументПриобретениеТоваровУслуг.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов))
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) КАК ЧИСЛО(15, 2))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаДолга,
			|ВЫБОР
			|	КОГДА
			|		ДокументПриобретениеТоваровУслуг.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПриобретениеТоваровУслуг.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫБОР
			|			КОГДА
			|				ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) > 0
			|			ТОГДА
			|				ВЫРАЗИТЬ ((ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)) КАК ЧИСЛО(15, 0))
			|			ИНАЧЕ
			|				ВЫРАЗИТЬ ((ЕСТЬNULL(-РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)) КАК ЧИСЛО(15, 0))
			|		КОНЕЦ
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК ПроцентДолга,
			|ВЫБОР
			|	КОГДА
			|		ДокументПриобретениеТоваровУслуг.Проведен И
			|		ДокументПриобретениеТоваровУслуг.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
			|	ТОГДА
			|		-РасчетыСПоставщикамиОстатки.КОплатеКонечныйОстаток
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаКОплате
			|ИЗ
			|	Документ.ПриобретениеТоваровУслуг КАК ДокументПриобретениеТоваровУслуг
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	РегистрНакопления.РасчетыСПоставщиками.ОстаткиИОбороты(,,,,ЗаказПоставщику = &РасчетныйДокумент) КАК РасчетыСПоставщикамиОстатки
			|ПО
			|	Истина
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	РегистрНакопления.РасчетыСПоставщиками.Остатки(КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ), ЗаказПоставщику = &РасчетныйДокумент) КАК РасчетыСПоставщикамиОстаткиНаДатуАктуальности
			|ПО
			|	Истина
			|ГДЕ
			|	ДокументПриобретениеТоваровУслуг.Ссылка = &ПриобретениеТоваровУслуг
			|
			|");
		
		ПорядокРасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПриобретениеТоваровУслуг, "ПорядокРасчетов");
		
		Запрос.УстановитьПараметр("ПриобретениеТоваровУслуг", ПриобретениеТоваровУслуг);
		Запрос.УстановитьПараметр("РасчетныйДокумент", ?(ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов,
			Договор,
			ПриобретениеТоваровУслуг));
		Запрос.УстановитьПараметр("ТекущаяДата",  НачалоДня(ТекущаяДатаСеанса()));
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СостояниеРасчетов, Выборка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область Заполнение

// Заполняет таблицу товаров по данным отбора или массиву заказов
//
// Параметры:
//	ДанныеОтбора            - Структура - поля, по которым будут отобраны остатки заказов для заполнения документа
//	Товары                  - ДанныеФормыКоллекция - таблица товаров, в которую будут помещены остатки заказов
//	МассивЗаказов           - Массив - заказы, по которым будут отобраны остатки
//
Процедура ЗаполнитьПоОстаткамЗаказов(ДанныеОтбора, Товары, СкладПоступления, МассивЗаказов = Неопределено) Экспорт
	
	// Данные по остаткам товаров заказа.
	ВыборкаТовары = ПолучитьРезультатЗапросаПоОстаткамЗаказов(ДанныеОтбора, СкладПоступления, МассивЗаказов).Выбрать();
	
	МассивЗаказовПоставщику = Новый Массив();
	
	Пока ВыборкаТовары.Следующий() Цикл
		Если МассивЗаказовПоставщику.Найти(ВыборкаТовары.ЗаказПоставщику) = Неопределено Тогда
			МассивЗаказовПоставщику.Добавить(ВыборкаТовары.ЗаказПоставщику);
		КонецЕсли;
	КонецЦикла;
	
	МассивЗаказов = МассивЗаказовПоставщику;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивЗаказовПоставщику", МассивЗаказовПоставщику);
	Запрос.УстановитьПараметр("ВалютаДокумента", ДанныеОтбора.Валюта);
	
	Запрос.Текст =
	"
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ТаблицаЗаказов.Дата, ДЕНЬ) КАК Дата,
	|	ТаблицаЗаказов.Ссылка                    КАК ЗаказПоставщику,
	|	ТаблицаЗаказов.Валюта                    КАК Валюта,
	|	ТаблицаЗаказов.ЦенаВключаетНДС           КАК ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаЗаказов.Валюта <> &ВалютаДокумента
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ПересчитатьВВалютуДокумента
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ТаблицаЗаказов
	|ГДЕ
	|	ТаблицаЗаказов.Ссылка В (&МассивЗаказовПоставщику)
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ТаблицаЗаказов.Дата, ДЕНЬ) КАК Дата,
	|	ТаблицаЗаказов.Валюта                    КАК Валюта
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ТаблицаЗаказов
	|ГДЕ
	|	ТаблицаЗаказов.Ссылка В (&МассивЗаказовПоставщику)
	|	И ТаблицаЗаказов.Валюта <> &ВалютаДокумента
	|
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	РеквизитыЗаказов = РезультатЗапроса[0].Выбрать();
	
	ТаблицаКурсовВалют = Новый ТаблицаЗначений;
	ТаблицаКурсовВалют.Колонки.Добавить("Валюта",    Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаКурсовВалют.Колонки.Добавить("Дата",      Новый ОписаниеТипов("Дата"));
	ТаблицаКурсовВалют.Колонки.Добавить("Курс",      Новый ОписаниеТипов("Число"));
	ТаблицаКурсовВалют.Колонки.Добавить("Кратность", Новый ОписаниеТипов("Число"));
	
	Выборка = РезультатЗапроса[1].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКурсовВалют.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		КурсыВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, Выборка.Дата);
		НоваяСтрока.Курс = КурсыВалюты.Курс;
		НоваяСтрока.Кратность = КурсыВалюты.Кратность;
		
	КонецЦикла;
	
	Если ТаблицаКурсовВалют.Количество() > 0 Тогда
		СтруктураКурсовНовойВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДанныеОтбора.Валюта, ТекущаяДатаСеанса());
	КонецЕсли;
	
	ВыборкаТовары.Сбросить();
	Пока ВыборкаТовары.Следующий() Цикл
		
		НеобходимПересчетСумм = (ВыборкаТовары.Количество<>ВыборкаТовары.КоличествоПоЗаказу);
		
		СтрокаТаб = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаб, ВыборкаТовары);
		
		СтрокаТаб.Количество = ВыборкаТовары.Количество;
		СтрокаТаб.КоличествоУпаковок = ВыборкаТовары.Количество / ВыборкаТовары.Коэффициент;
		
		РеквизитыЗаказов.Сбросить();
		ЗаказНайден = РеквизитыЗаказов.НайтиСледующий(СтрокаТаб.ЗаказПоставщику, "ЗаказПоставщику");
		
		Если ЗаказНайден Тогда
			
			Если РеквизитыЗаказов.ПересчитатьВВалютуДокумента Тогда
				
				ПараметрыОтбора = Новый Структура("Валюта,Дата", РеквизитыЗаказов.Валюта, РеквизитыЗаказов.Дата);
				КурсВалюты = ТаблицаКурсовВалют.НайтиСтроки(ПараметрыОтбора);
				
				Если КурсВалюты.Количество() = 1 Тогда
					
					СтрокаТаб.Цена = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
							СтрокаТаб.Цена,
							РеквизитыЗаказов.Валюта, ДанныеОтбора.Валюта,
							КурсВалюты[0].Курс,СтруктураКурсовНовойВалюты.Курс,
							КурсВалюты[0].Кратность,СтруктураКурсовНовойВалюты.Кратность);
					НеобходимПересчетСумм = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗаказНайден И НеобходимПересчетСумм Тогда
			
			Ценообразование.ПересчитатьСуммыВСтроке(СтрокаТаб, Ложь, Ложь, Истина, РеквизитыЗаказов.ЦенаВключаетНДС);
			
			Если ДанныеОтбора.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
				СтрокаТаб.СуммаНДС = 0;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,ХозяйственнаяОперация,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение
//   Структура - cостав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПриобретениеТоваровУслуг";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Истина);
	
	ЗакупкаУПоставщикаПоРеглУчету = (Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	
	Если ЗакупкаУПоставщикаПоРеглУчету Тогда
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости    = Истина;
	Иначе
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = 
						(ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры И Не СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Объект.Склад, Объект.Дата, Истина))
						Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости    = Ложь;
		ПараметрыУказанияСерий.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	КонецЕсли;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаОтПоставщика);
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Склад");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Соглашение");
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Договор");
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("ПоступлениеПоЗаказам");
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Товары_ЗаказПоставщику");
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("ВариантПриемкиТоваров");
	ПараметрыУказанияСерий.ОперацияДокумента = Объект.ХозяйственнаяОперация;
	
	ОперацииТоварыВПутиИНеотфактуровка = Новый Массив();
	ОперацииТоварыВПутиИНеотфактуровка.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути);
	ОперацииТоварыВПутиИНеотфактуровка.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути);
	ОперацииТоварыВПутиИНеотфактуровка.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути);
	ОперацииТоварыВПутиИНеотфактуровка.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки);
	ОперацииТоварыВПутиИНеотфактуровка.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки);
	
	ХозОперацияТоварыВПутиИНеотфактуровка = ОперацииТоварыВПутиИНеотфактуровка.Найти(Объект.ХозяйственнаяОперация) <> Неопределено;
	
	ПараметрыУказанияСерий.ПараметрыЗапроса.Вставить("ХозОперацияТоварыВПутиИНеотфактуровка", ХозОперацияТоварыВПутиИНеотфактуровка);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ИЛИ &ХозОперацияТоварыВПутиИНеотфактуровка
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				КОГДА НЕ &ТолькоСерииДляСебестоимости
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|								ТОГДА ВЫБОР
	|										КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|											ТОГДА ВЫБОР
	|													КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|															И ТоварыДляЗапроса.Количество > 0
	|														ТОГДА 10
	|													ИНАЧЕ 9
	|												КОНЕЦ
	|										ИНАЧЕ 0
	|									КОНЕЦ
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|								ТОГДА ВЫБОР
	|										КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|												ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|											ТОГДА ВЫБОР
	|													КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|															И ТоварыДляЗапроса.Количество > 0
	|														ТОГДА 8
	|													ИНАЧЕ 7
	|												КОНЕЦ
	|										ИНАЧЕ 0
	|									КОНЕЦ
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|									И (НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|										ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении)
	|									И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеОтПоставщика
	|								ТОГДА ВЫБОР
	|										КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|											ТОГДА ВЫБОР
	|													КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|															И ТоварыДляЗапроса.Количество > 0
	|														ТОГДА 4
	|													ИНАЧЕ 3
	|												КОНЕЦ
	|										ИНАЧЕ ВЫБОР
	|												КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|														И ТоварыДляЗапроса.Количество > 0
	|													ТОГДА 2
	|												ИНАЧЕ 1
	|											КОНЕЦ
	|									КОНЕЦ
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ТоварыДляЗапроса.ВидНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТоварыДляЗапроса.ВидНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА
	|						ВЫБОР
	|							КОГДА (ТоварыДляЗапроса.ВидНоменклатуры.ПолитикаУчетаСерий.УчетСерийВНеотфактурованныхПоставкахТоваров
	|									ИЛИ ТоварыДляЗапроса.ВидНоменклатуры.ПолитикаУчетаСерий.УчетТоваровВПутиОтПоставщикаПоСериям)
	|								ТОГДА ВЫБОР
	|										КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|											ТОГДА 18
	|										ИНАЧЕ 17
	|									КОНЕЦ
	|								ИНАЧЕ 0
	|						КОНЕЦ
	|					ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерийТоварыУПартнеров
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Склад = СерииДляЗапроса.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Склад = ТоварыДляЗапроса.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки                         КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА &ХозОперацияТоварыВПутиИНеотфактуровка
	|			ТОГДА Статусы.СтатусУказанияСерийТоварыУПартнеров
	|		ИНАЧЕ Статусы.СтатусУказанияСерий
	|	КОНЕЦ                                       КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	ВЫБОР
	|		КОГДА &ХозОперацияТоварыВПутиИНеотфактуровка
	|			ТОГДА Статусы.СтатусУказанияСерийТоварыУПартнеров
	|		ИНАЧЕ Статусы.СтатусУказанияСерий
	|	КОНЕЦ <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти


#Область Прочее

// Заполняет таблицу реквизитов, зависимых от хозяйственной операции
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - хозяйственная операция соглашения
//	МассивВсехРеквизитов - Массив - реквизиты, которые не зависят от хозяйственной операции
//	МассивРеквизитовОперации - Массив - реквизиты, которые зависят от хозяйственной операции
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ПодотчетноеЛицо");
	МассивВсехРеквизитов.Добавить("СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("ДатаПлатежа");
	МассивВсехРеквизитов.Добавить("ФормаОплаты");
	МассивВсехРеквизитов.Добавить("ГруппаФинансовогоУчета");
	МассивВсехРеквизитов.Добавить("ЗакупкаПодДеятельность");
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("Партнер");
	МассивВсехРеквизитов.Добавить("Договор");
	МассивВсехРеквизитов.Добавить("НалогообложениеНДС");
	МассивВсехРеквизитов.Добавить("ЦенаВключаетНДС");
	МассивВсехРеквизитов.Добавить("РегистрироватьЦеныПоставщика");
	МассивВсехРеквизитов.Добавить("ВернутьМногооборотнуюТару");
	МассивВсехРеквизитов.Добавить("ДатаВозвратаМногооборотнойТары");
	МассивВсехРеквизитов.Добавить("ТребуетсяЗалогЗаТару");
	
	МассивВсехРеквизитов.Добавить("Сделка");
	МассивВсехРеквизитов.Добавить("ПорядокРасчетов");
	МассивВсехРеквизитов.Добавить("БанковскийСчетОрганизации");
	МассивВсехРеквизитов.Добавить("Руководитель");
	МассивВсехРеквизитов.Добавить("БанковскийСчетКонтрагента");
	МассивВсехРеквизитов.Добавить("Грузоотправитель");
	МассивВсехРеквизитов.Добавить("БанковскийСчетГрузоотправителя");
	МассивВсехРеквизитов.Добавить("Принял");
	МассивВсехРеквизитов.Добавить("ПринялДолжность");
	
	МассивВсехРеквизитов.Добавить("Товары.ПроцентРучнойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.СуммаРучнойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("Товары.АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("Товары.НомерГТД");
	МассивВсехРеквизитов.Добавить("Товары.НоменклатураПоставщика");
	
	ИспользоватьРучныеСкидкиВЗакупках = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВЗакупках");
	
	ХозОперацииЗакупкаУПоставщика = ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(
		Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	
	ХозОперацииЗакупкаВСтранахЕАЭС = ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(
		Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
	
	ХозОперацииЗакупкаПоИмпорту = ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(
		Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозОперацииЗакупкаУПоставщика.Найти(ХозяйственнаяОперация) <> Неопределено
	 Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("Партнер");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("ДатаПлатежа");
		МассивРеквизитовОперации.Добавить("ФормаОплаты");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("ЗакупкаПодДеятельность");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		МассивРеквизитовОперации.Добавить("ЦенаВключаетНДС");
		МассивРеквизитовОперации.Добавить("РегистрироватьЦеныПоставщика");
		МассивРеквизитовОперации.Добавить("ВернутьМногооборотнуюТару");
		МассивРеквизитовОперации.Добавить("ДатаВозвратаМногооборотнойТары");
		МассивРеквизитовОперации.Добавить("ТребуетсяЗалогЗаТару");
		
		МассивРеквизитовОперации.Добавить("Сделка");
		МассивРеквизитовОперации.Добавить("ПорядокРасчетов");
		МассивРеквизитовОперации.Добавить("БанковскийСчетОрганизации");
		МассивРеквизитовОперации.Добавить("Руководитель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Грузоотправитель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетГрузоотправителя");
		МассивРеквизитовОперации.Добавить("Принял");
		МассивРеквизитовОперации.Добавить("ПринялДолжность");
		
		МассивРеквизитовОперации.Добавить("Товары.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("Товары.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("Товары.НомерГТД");
		МассивРеквизитовОперации.Добавить("Товары.НоменклатураПоставщика");
		
		Если ИспользоватьРучныеСкидкиВЗакупках Тогда
			МассивРеквизитовОперации.Добавить("Товары.ПроцентРучнойСкидки");
			МассивРеквизитовОперации.Добавить("Товары.СуммаРучнойСкидки");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо Тогда
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ЗакупкаПодДеятельность");
		МассивРеквизитовОперации.Добавить("Руководитель");
		МассивРеквизитовОперации.Добавить("Товары.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("Товары.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("Товары.НомерГТД");
		
		Если ИспользоватьРучныеСкидкиВЗакупках Тогда
			МассивРеквизитовОперации.Добавить("Товары.ПроцентРучнойСкидки");
			МассивРеквизитовОперации.Добавить("Товары.СуммаРучнойСкидки");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("Партнер");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		МассивРеквизитовОперации.Добавить("ЦенаВключаетНДС");
		МассивРеквизитовОперации.Добавить("РегистрироватьЦеныПоставщика");
		МассивРеквизитовОперации.Добавить("ВернутьМногооборотнуюТару");
		МассивРеквизитовОперации.Добавить("ДатаВозвратаМногооборотнойТары");
		МассивРеквизитовОперации.Добавить("ТребуетсяЗалогЗаТару");
		
		МассивРеквизитовОперации.Добавить("Сделка");
		МассивРеквизитовОперации.Добавить("ПорядокРасчетов");
		МассивРеквизитовОперации.Добавить("БанковскийСчетОрганизации");
		МассивРеквизитовОперации.Добавить("Руководитель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Грузоотправитель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетГрузоотправителя");
		МассивРеквизитовОперации.Добавить("Принял");
		МассивРеквизитовОперации.Добавить("ПринялДолжность");
		
		МассивРеквизитовОперации.Добавить("Товары.НомерГТД");
		МассивРеквизитовОперации.Добавить("Товары.НоменклатураПоставщика");
		
	ИначеЕсли ХозОперацииЗакупкаПоИмпорту.Найти(ХозяйственнаяОперация) <> Неопределено Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("Партнер");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("ДатаПлатежа");
		МассивРеквизитовОперации.Добавить("ФормаОплаты");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("ЗакупкаПодДеятельность");
		МассивРеквизитовОперации.Добавить("ЦенаВключаетНДС");
		МассивРеквизитовОперации.Добавить("РегистрироватьЦеныПоставщика");
		МассивРеквизитовОперации.Добавить("ВернутьМногооборотнуюТару");
		МассивРеквизитовОперации.Добавить("ДатаВозвратаМногооборотнойТары");
		МассивРеквизитовОперации.Добавить("ТребуетсяЗалогЗаТару");
		
		МассивРеквизитовОперации.Добавить("Сделка");
		МассивРеквизитовОперации.Добавить("ПорядокРасчетов");
		МассивРеквизитовОперации.Добавить("БанковскийСчетОрганизации");
		МассивРеквизитовОперации.Добавить("Руководитель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Грузоотправитель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетГрузоотправителя");
		МассивРеквизитовОперации.Добавить("Принял");
		МассивРеквизитовОперации.Добавить("ПринялДолжность");
		
		МассивРеквизитовОперации.Добавить("Товары.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("Товары.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("Товары.НоменклатураПоставщика");
		
		Если ИспользоватьРучныеСкидкиВЗакупках Тогда
			МассивРеквизитовОперации.Добавить("Товары.ПроцентРучнойСкидки");
			МассивРеквизитовОперации.Добавить("Товары.СуммаРучнойСкидки");
		КонецЕсли;
	
	ИначеЕсли ХозОперацииЗакупкаВСтранахЕАЭС.Найти(ХозяйственнаяОперация) <> Неопределено Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("Партнер");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("ДатаПлатежа");
		МассивРеквизитовОперации.Добавить("ФормаОплаты");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("ЗакупкаПодДеятельность");
		МассивРеквизитовОперации.Добавить("ЦенаВключаетНДС");
		МассивРеквизитовОперации.Добавить("РегистрироватьЦеныПоставщика");
		МассивРеквизитовОперации.Добавить("ВернутьМногооборотнуюТару");
		МассивРеквизитовОперации.Добавить("ДатаВозвратаМногооборотнойТары");
		МассивРеквизитовОперации.Добавить("ТребуетсяЗалогЗаТару");
		
		МассивРеквизитовОперации.Добавить("Сделка");
		МассивРеквизитовОперации.Добавить("ПорядокРасчетов");
		МассивРеквизитовОперации.Добавить("БанковскийСчетОрганизации");
		МассивРеквизитовОперации.Добавить("Руководитель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Грузоотправитель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетГрузоотправителя");
		МассивРеквизитовОперации.Добавить("Принял");
		МассивРеквизитовОперации.Добавить("ПринялДолжность");
		
		МассивРеквизитовОперации.Добавить("Товары.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("Товары.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("Товары.НомерГТД");
		МассивРеквизитовОперации.Добавить("Товары.НоменклатураПоставщика");
		
		Если ИспользоватьРучныеСкидкиВЗакупках Тогда
			МассивРеквизитовОперации.Добавить("Товары.ПроцентРучнойСкидки");
			МассивРеквизитовОперации.Добавить("Товары.СуммаРучнойСкидки");
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

// Возвращает значение распоряжения на поступление или отгрузку.
//
// Параметры:
//  ЗначенияПолейДляОпределенияРаспоряжения - Структура - состав полей определяется значением
//  поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
//
// Возвращаемое значение:
//  ДокументСсылка - ссылка на распоряжение для выполнения складской операции
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	Если Не ЗначениеЗаполнено(ЗначенияПолейДляОпределенияРаспоряжения.Соглашение)
		И Не ЗначениеЗаполнено(ЗначенияПолейДляОпределенияРаспоряжения.Договор) Тогда
		Если ЗначенияПолейДляОпределенияРаспоряжения.ПоступлениеПоЗаказам Тогда
			Возврат ЗначенияПолейДляОпределенияРаспоряжения.Товары_ЗаказПоставщику;
		Иначе
			Возврат ЗначенияПолейДляОпределенияРаспоряжения.Ссылка;
		КонецЕсли;
	Иначе
		ВариантПриемкиТоваров = ЗначенияПолейДляОпределенияРаспоряжения.ВариантПриемкиТоваров;
		
		Если ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным Тогда 
			Если ЗначенияПолейДляОпределенияРаспоряжения.ПоступлениеПоЗаказам Тогда
				Возврат ЗначенияПолейДляОпределенияРаспоряжения.Товары_ЗаказПоставщику;
			Иначе
				Возврат ЗначенияПолейДляОпределенияРаспоряжения.Ссылка;
			КонецЕсли;
		ИначеЕсли Справочники.СоглашенияСПоставщиками.СоглашениеИспользуетсяПриПриемке(ВариантПриемкиТоваров) Тогда
			Возврат ЗначенияПолейДляОпределенияРаспоряжения.Соглашение;
		ИначеЕсли Справочники.ДоговорыКонтрагентов.ДоговорИспользуетсяПриПриемке(ВариантПриемкиТоваров) Тогда
			Возврат ЗначенияПолейДляОпределенияРаспоряжения.Договор;
		КонецЕсли;
		
	КонецЕсли;
КонецФункции

// Осуществляет инициализацию структуры состояния выполнения документа.
//
// Возвращаемое значение:
//   Структура - инициализированная структура выполнения документа.
//
Функция СтруктураСостояниеВыполненияДокумента() Экспорт
	
	СтруктураСостояние = Отчеты.СостояниеВыполненияДокументов.ИнициализироватьСтруктуруСостояниеВыполненияДокумента();
	
	СтруктураСостояние.Вставить("ВыводитьТаблицуРасчетыСПоставщиками", 1);
	СтруктураСостояние.Вставить("ВыводитьТаблицыПоступление", 2);
	СтруктураСостояние.Вставить("ЭтоНакладная", Истина);
	СтруктураСостояние.Вставить("ЕстьСуммовыеПоказателиПоступления", Истина);
	СтруктураСостояние.Вставить("ИмяПоляНакладнаяПоЗаказам", "ПоступлениеПоЗаказам");
	
	Возврат СтруктураСостояние
	
КонецФункции

Функция ОписаниеФормыДокументаДляЗаполненияРеквизитовСвязанныхСНаправлениемДеятельности() Экспорт
	
	СтруктураОбъекта = НаправленияДеятельностиСервер.СтруктураОбъекта();
	Возврат СтруктураОбъекта;
	
КонецФункции

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
// 
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	
	// Потребности в товарах на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Товары.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.Товары.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.Товары.Склад";
	
	// Потребности в работах в подразделении-получателе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовРаботами", Истина, "Объект.Товары.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.Товары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение    = "Объект.Товары.Подразделение";
	
	Возврат МакетФормы;
	
КонецФункции

// Заполняет параметры запроса, выполняющего получение данных об используемых в документе хозяйственных операциях.
//
// Параметры:
//	ПараметрыЗапроса - Структура - параметры запроса, которые нужно инициализировать:
//		* ХозОперацииЗакупкаУПоставщика				 - Массив, Неопределено - массив элементов с типом
//														ПеречислениеСсылка.ХозяйственныеОперации.
//		* ХозОперацииЗакупкаПоИмпорту				 - Массив, Неопределено - массив элементов с типом
//														ПеречислениеСсылка.ХозяйственныеОперации.
//		* ХозОперацииЗакупкаВСтранахЕАЭС			 - Массив, Неопределено - массив элементов с типом
//														ПеречислениеСсылка.ХозяйственныеОперации.
//		* ХозОперацииПриемНаКомиссию				 - Массив, Неопределено - массив элементов с типом
//														ПеречислениеСсылка.ХозяйственныеОперации.
//		* ХозОперацииТоварыВПути					 - Массив, Неопределено - массив элементов с типом
//														ПеречислениеСсылка.ХозяйственныеОперации.
//		* ХозОперацииНеотфактурованныеПоставки		 - Массив, Неопределено - массив элементов с типом
//														ПеречислениеСсылка.ХозяйственныеОперации.
//		* ХозОперацииНеРазделятьОформлениеЗакупок	 - Массив, Неопределено - массив элементов с типом
//														ПеречислениеСсылка.ХозяйственныеОперации.
//
Процедура ЗаполнитьПараметрыХозяйственныхОпераций(ПараметрыЗапроса) Экспорт
	
	ИспользоватьИмпортныеЗакупки = ПолучитьФункциональнуюОпцию("ИспользоватьИмпортныеЗакупки");
	ИспользоватьКомиссиюПриЗакупках = ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках");
	ИспользоватьТоварыВПутиОтПоставщиков = ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков");
	ИспользоватьНеотфактурованныеПоставки = ПолучитьФункциональнуюОпцию("ИспользоватьНеотфактурованныеПоставки");
	
	ХозОперацииЗакупкаУПоставщика = Новый Массив;
	ХозОперацииЗакупкаУПоставщика.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ХозОперацииЗакупкаУПоставщика.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	ХозОперацииЗакупкаУПоставщика.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	
	Если ИспользоватьТоварыВПутиОтПоставщиков Тогда
		ХозОперацииЗакупкаУПоставщика.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути);
	КонецЕсли;
	
	Если ИспользоватьНеотфактурованныеПоставки Тогда
		ХозОперацииЗакупкаУПоставщика.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки);
	КонецЕсли;
	
	ХозОперацииЗакупкаПоИмпорту = Новый Массив;
	Если ИспользоватьИмпортныеЗакупки Тогда
		ХозОперацииЗакупкаПоИмпорту.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
		
		Если ИспользоватьТоварыВПутиОтПоставщиков Тогда
			ХозОперацииЗакупкаПоИмпорту.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути);
		КонецЕсли;
	КонецЕсли;
	
	ХозОперацииЗакупкаВСтранахЕАЭС = Новый Массив;
	Если ИспользоватьИмпортныеЗакупки Тогда
		ХозОперацииЗакупкаВСтранахЕАЭС.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
		
		Если ИспользоватьТоварыВПутиОтПоставщиков Тогда
			ХозОперацииЗакупкаВСтранахЕАЭС.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути);
		КонецЕсли;
		
		Если ИспользоватьНеотфактурованныеПоставки Тогда
			ХозОперацииЗакупкаВСтранахЕАЭС.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки);
		КонецЕсли;
	КонецЕсли;
	
	ХозОперацииПриемНаКомиссию = Новый Массив;
	Если ИспользоватьКомиссиюПриЗакупках Тогда
		ХозОперацииПриемНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаКомиссию);
	КонецЕсли;
	
	ХозОперацииТоварыВПути = Новый Массив;
	Если ИспользоватьТоварыВПутиОтПоставщиков Тогда
		ХозОперацииТоварыВПути.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути);
		
		Если ИспользоватьИмпортныеЗакупки Тогда
			ХозОперацииТоварыВПути.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути);
			ХозОперацииТоварыВПути.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути);
		КонецЕсли;
	КонецЕсли;
	
	ХозОперацииНеотфактурованныеПоставки = Новый Массив;
	Если ИспользоватьНеотфактурованныеПоставки Тогда
		ХозОперацииНеотфактурованныеПоставки.Добавить(
			Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки);
		
		Если ИспользоватьИмпортныеЗакупки Тогда
			ХозОперацииНеотфактурованныеПоставки.Добавить(
				Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки);
		КонецЕсли;
	КонецЕсли;
	
	ХозОперацииНеРазделятьОформлениеЗакупок = Новый Массив;
	ХозОперацииНеРазделятьОформлениеЗакупок.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ХозОперацииНеРазделятьОформлениеЗакупок.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	ХозОперацииНеРазделятьОформлениеЗакупок.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	
	Если ИспользоватьКомиссиюПриЗакупках Тогда
		ХозОперацииНеРазделятьОформлениеЗакупок.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаКомиссию);
	КонецЕсли;
	
	Если ИспользоватьИмпортныеЗакупки Тогда
		ХозОперацииНеРазделятьОформлениеЗакупок.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
		ХозОперацииНеРазделятьОформлениеЗакупок.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
	КонецЕсли;
	
	ПараметрыЗапроса.ХозОперацииЗакупкаУПоставщика           = ХозОперацииЗакупкаУПоставщика;
	ПараметрыЗапроса.ХозОперацииЗакупкаПоИмпорту             = ХозОперацииЗакупкаПоИмпорту;
	ПараметрыЗапроса.ХозОперацииПриемНаКомиссию              = ХозОперацииПриемНаКомиссию;
	ПараметрыЗапроса.ХозОперацииЗакупкаВСтранахЕАЭС          = ХозОперацииЗакупкаВСтранахЕАЭС;
	ПараметрыЗапроса.ХозОперацииТоварыВПути                  = ХозОперацииТоварыВПути;
	ПараметрыЗапроса.ХозОперацииНеотфактурованныеПоставки    = ХозОперацииНеотфактурованныеПоставки;
	ПараметрыЗапроса.ХозОперацииНеРазделятьОформлениеЗакупок = ХозОперацииНеРазделятьОформлениеЗакупок;
	
КонецПроцедуры

// Возвращает текст запроса для расчета необходимости ввода счета-фактуры полученного налогового агента.
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДляРасчетаНеобходимостиСчетаФактуры() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка         КАК Основание,
	|	ДанныеДокумента.Дата           КАК ДатаДокумента,
	|	ДанныеДокумента.Организация    КАК Организация,
	|	ДанныеДокумента.Контрагент     КАК Контрагент,
	|	ДанныеДокумента.Валюта         КАК Валюта,
	|	&ТипСФПолученныйНалоговыйАгент КАК ТипСчетаФактуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаСчетовФактуры.СчетФактура ЕСТЬ NULL 
	|				И ДанныеДокумента.Проведен
	|				И %ТекстУсловия%
	|			ТОГДА
	|				ВЫБОР 
	|					КОГДА УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС
	|							И ДанныеДокумента.НалогообложениеНДС <> &ПродажаОблагаетсяЕНВД
	|						ТОГДА ИСТИНА
	|					КОГДА НЕ ТоварыСНДС.Ссылка ЕСТЬ NULL
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) КАК Требуется
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактуры КАК ТаблицаСчетовФактуры
	|		ПО ДанныеДокумента.Ссылка = ТаблицаСчетовФактуры.Основание
	|			И ДанныеДокумента.Организация = ТаблицаСчетовФактуры.Организация
	|			И ДанныеДокумента.Контрагент = ТаблицаСчетовФактуры.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитика КАК УчетнаяПолитика
	|		ПО ДанныеДокумента.Ссылка = УчетнаяПолитика.Ссылка
	|			И ДанныеДокумента.Организация = УчетнаяПолитика.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ТоварыСНДС
	|		ПО ДанныеДокумента.Ссылка = ТоварыСНДС.Ссылка
	|			И ТоварыСНДС.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивОснований)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.Валюта
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстУсловия%", ТекстУсловияТребуетсяСчетФактура());
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст условия запроса, по которым документу требуется счет-фактура.
// Условие применяется для таблица "ДанныеДокумента", содержащую реквизиты документа.
//
//	Возвращаемое значение:
//		Строка - текст условия запроса
//
Функция ТекстУсловияТребуетсяСчетФактура() Экспорт
	
	ТекстУсловия = "ДанныеДокумента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)";
	
	Возврат ТекстУсловия;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Если ИмяРегистра = "ЦеныНоменклатурыПоставщиков" Тогда
		ИсточникиДанных.Вставить("Товары.ВидЦеныПоставщика");
	КонецЕсли;
	
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЗаказыПоставщикам(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЦеныНоменклатурыПоставщиков(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказовРаботами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПринятаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыУПартнеров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюТаможенныхДеклараций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюЗаявленийОВвозе(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	ДанныеДокумента.ФормаОплаты КАК ФормаОплаты,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|			ТОГДА ДанныеДокумента.ПодотчетноеЛицо
	|		ИНАЧЕ ДанныеДокумента.Партнер
	|	КОНЕЦ КАК Отправитель,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Партнер КАК Поставщик,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(ДанныеДокумента.Контрагент.СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаРегистрации,
	|	ДанныеДокумента.Соглашение КАК Соглашение,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ЕСТЬNULL(ДанныеДокумента.Соглашение.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК ВалютаСоглашения,
	|	ДанныеДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЕСТЬNULL(ДанныеДокумента.Соглашение.ЦенаВключаетНДС, ЛОЖЬ) КАК ЦенаВключаетНДССоглашения,
	|	ДанныеДокумента.РегистрироватьЦеныПоставщика КАК РегистрироватьЦеныПоставщика,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути)
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуетсяОперацияИмпортаТоварыВПутиИНеотфактуровка,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Подразделение.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка)) КАК ВариантОбособленногоУчетаТоваров,
	|	ДанныеДокумента.ПоступлениеПоЗаказам КАК ПоступлениеПоЗаказам,
	|	ДанныеДокумента.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		КОГДА НЕ ДанныеДокумента.Договор.ВариантОформленияЗакупок ЕСТЬ NULL
	|				И ДанныеДокумента.Договор.ВариантОформленияЗакупок <> ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияЗакупок.НеРазделять)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуетсяДокументПоступлениеТоваров,
	|	ДанныеДокумента.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
	|	ДанныеДокумента.ТребуетсяЗалогЗаТару КАК ТребуетсяЗалогЗаТару,
	|	ДанныеДокумента.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоДоговорам,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоНакладным,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|				И ДанныеДокумента.ПоступлениеПоЗаказам
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоЗаказам,
	|	ДанныеДокумента.Менеджер КАК Менеджер,
	|	ДанныеДокумента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Сделка КАК Сделка,
	|	ЕСТЬNULL(ДанныеДокумента.Сделка.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ) КАК ОбособленныйУчетТоваровПоСделке,
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|		И ЕСТЬNULL(ДанныеДокумента.Договор.ЗаданГрафикИсполнения, ЛОЖЬ) ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ГрафикИсполненияВДоговоре,
	|	ДанныеДокумента.СуммаДокумента                 КАК СуммаДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента         КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.НомерВходящегоДокумента        КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.Номер                          КАК Номер,
	|	ДанныеДокумента.Комментарий                    КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления                КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен                       КАК Проведен
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета",
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям",
		ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям"));
		
	Запрос.УстановитьПараметр("Период",                                     Реквизиты.Период);
	Запрос.УстановитьПараметр("Валюта",                                     Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов",                       Реквизиты.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",             Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",                 Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаПлатежа",                                Реквизиты.ДатаПлатежа);
	Запрос.УстановитьПараметр("ФормаОплаты",                                Реквизиты.ФормаОплаты);
	Запрос.УстановитьПараметр("Организация",                                Реквизиты.Организация);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",                            ?(Реквизиты.ЦенаВключаетНДС, 0, 1));
	Запрос.УстановитьПараметр("ПодотчетноеЛицо",                            Реквизиты.ПодотчетноеЛицо);
	Запрос.УстановитьПараметр("Партнер",                                    Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Отправитель",                                Реквизиты.Отправитель);
	Запрос.УстановитьПараметр("ЗаказПоставщику",                            Реквизиты.ЗаказПоставщику);
	Запрос.УстановитьПараметр("Подразделение",                              Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ПоступлениеПоЗаказам",                       Реквизиты.ПоступлениеПоЗаказам);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",                      Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ИспользуетсяОперацияИмпортаТоварыВПутиИНеотфактуровка", Реквизиты.ИспользуетсяОперацияИмпортаТоварыВПутиИНеотфактуровка);
	Запрос.УстановитьПараметр("СтатьяДвиженияДенежныхСредств",              Реквизиты.СтатьяДвиженияДенежныхСредств);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов",      ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов")); 
	Запрос.УстановитьПараметр("РегистрироватьЦеныПоставщика",               Реквизиты.РегистрироватьЦеныПоставщика);
	Запрос.УстановитьПараметр("ВалютаСоглашения",                           Реквизиты.ВалютаСоглашения);
	Запрос.УстановитьПараметр("Соглашение",                                 Реквизиты.Соглашение);
	Запрос.УстановитьПараметр("ЦенаВключаетНДСДокумента",                   Реквизиты.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("ЦенаВключаетНДССоглашения",                  Реквизиты.ЦенаВключаетНДССоглашения);
	Запрос.УстановитьПараметр("Договор",                                    Реквизиты.Договор);
	Запрос.УстановитьПараметр("РасчетыПоДоговорам",                         Реквизиты.РасчетыПоДоговорам);
	Запрос.УстановитьПараметр("РасчетыПоНакладным",                         Реквизиты.РасчетыПоНакладным);
	Запрос.УстановитьПараметр("РасчетыПоЗаказам",                           Реквизиты.РасчетыПоЗаказам);
	Запрос.УстановитьПараметр("ЗакупкаПодДеятельность",                     Реквизиты.ЗакупкаПодДеятельность);
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару",                  Реквизиты.ВернутьМногооборотнуюТару);
	Запрос.УстановитьПараметр("ТребуетсяЗалогЗаТару",                       Реквизиты.ТребуетсяЗалогЗаТару);
	Запрос.УстановитьПараметр("Контрагент",                                 Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Менеджер",                                   Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("СтранаРегистрации",                          Реквизиты.СтранаРегистрации);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета",                     Реквизиты.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("ПоступлениеПоНесколькимЗаказам",             ?(Не ЗначениеЗаполнено(Реквизиты.ЗаказПоставщику), Истина, Ложь));
	Запрос.УстановитьПараметр("КонтролироватьВыдачуПодОтчетВРазрезеЦелей",  ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей"));
	Запрос.УстановитьПараметр("МногооборотнаяТара",                         Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",                    Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ГрафикИсполненияВДоговоре",                  Реквизиты.ГрафикИсполненияВДоговоре);
	Запрос.УстановитьПараметр("ИспользуетсяНазначение",                     ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("Сделка",                                     Реквизиты.Сделка);
	Запрос.УстановитьПараметр("ОбособленныйУчетТоваровПоСделке",            Реквизиты.ОбособленныйУчетТоваровПоСделке);
	Запрос.УстановитьПараметр("ВариантОбособленногоУчетаТоваров",           Реквизиты.ВариантОбособленногоУчетаТоваров);
	Запрос.УстановитьПараметр("ИспользуетсяДокументПоступлениеТоваров",     Реквизиты.ИспользуетсяДокументПоступлениеТоваров);
	Запрос.УстановитьПараметр("ХозОперацииЗакупкаПоИмпорту",				ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(
																				Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту));
	Запрос.УстановитьПараметр("ХозОперацииЗакупкаУПоставщика",				ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(
																				Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика));
	Запрос.УстановитьПараметр("ХозОперацииЗакупкаВСтранахЕАЭС",				ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(
																				Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС));
																				
	Запрос.УстановитьПараметр("СуммаДокумента",                Реквизиты.СуммаДокумента);
	Запрос.УстановитьПараметр("Склад",                         Реквизиты.Склад);
	Запрос.УстановитьПараметр("ДатаВходящегоДокумента",        Реквизиты.ДатаВходящегоДокумента);
	Запрос.УстановитьПараметр("НомерВходящегоДокумента",       Реквизиты.НомерВходящегоДокумента);
	Запрос.УстановитьПараметр("Номер",                         Реквизиты.Номер);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",       ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяОбъекта()));
	Запрос.УстановитьПараметр("Комментарий",                   Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("ПометкаУдаления",               Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",                      Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ВариантПриемкиТоваров",         Реквизиты.ВариантПриемкиТоваров);
	
	Если ЗначениеЗаполнено(Реквизиты.Договор) Тогда
		ИнформацияПоДоговору = НСтр("ru='По договору ""%Договор%""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоДоговору = СтрЗаменить(ИнформацияПоДоговору, "%Договор%", Реквизиты.Договор);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоДоговору", ИнформацияПоДоговору);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.Номенклатура         КАК Номенклатура,
	|	Ключи.Характеристика       КАК Характеристика,
	|	&ПустоеНазначение          КАК Назначение,
	|	Ключи.Серия                КАК Серия,
	|	Ключи.Склад                КАК Склад
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Ключи.Номенклатура = Аналитика.Номенклатура
	|		И Ключи.Характеристика = Аналитика.Характеристика
	|		И Ключи.Серия = Аналитика.Серия
	|		И Ключи.Склад = Аналитика.Склад
	|		И &ПустоеНазначение = Аналитика.Назначение
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И Не &ИспользуетсяНазначение
	|");
	
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("ПустоеНазначение", Справочники.Назначения.ПустаяСсылка());
	ЗапросАналитик.УстановитьПараметр("ИспользуетсяНазначение", Запрос.Параметры.ИспользуетсяНазначение);
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПартнеровИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПоАналитикам = Новый Запрос;
	ЗапросПоАналитикам.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросПоАналитикам.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасшифровкаПлатежа.Заказ КАК Заказ,
	|
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет) ТОГДА
	|		&Договор
	|	КОГДА РасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		РасшифровкаПлатежа.Заказ
	|	ИНАЧЕ
	|		ЕСТЬNULL(РасшифровкаПлатежа.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|	КОНЕЦ КАК Договор,
	|	
	|	ВЫБОР 
	|		КОГДА &РасчетыПоЗаказам 
	|			ТОГДА ЕСТЬNULL(РасшифровкаПлатежа.Заказ.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|		ИНАЧЕ
	|			&НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетов
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|	
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&Договор 	 КАК Договор,
	|	&Контрагент  КАК Контрагент,
	|	&Партнер 	 КАК Партнер,
	|	ВЫБОР 
	|		КОГДА &РасчетыПоЗаказам
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику.НаправлениеДеятельности 	
	|		ИНАЧЕ
	|			&НаправлениеДеятельности
	|	КОНЕЦ  		 КАК НаправлениеДеятельности 
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И &Договор = Аналитика.Договор
	|		И ВЫБОР 
	|			КОГДА &РасчетыПоЗаказам 
	|				ТОГДА ТаблицаТовары.ЗаказПоставщику.НаправлениеДеятельности 	
	|			ИНАЧЕ
	|				&НаправлениеДеятельности
	|		  КОНЕЦ = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ОрганизацияУпр                                 КАК Организация,
	|	ТаблицаОбъектовРасчетов.Договор                 КАК Договор,
	|	&Контрагент                                     КАК Контрагент,
	|	&Партнер                                        КАК Партнер,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&ОрганизацияУпр = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	Аналитика.КлючАналитики ЕСТЬ NULL
	|";
	
	ЗапросПоАналитикам.УстановитьПараметр("Ссылка",                	 Запрос.Параметры.Ссылка);
	ЗапросПоАналитикам.УстановитьПараметр("Организация",           	 Запрос.Параметры.Организация); 
	ЗапросПоАналитикам.УстановитьПараметр("ОрганизацияУпр",          Справочники.Организации.УправленческаяОрганизация);
	ЗапросПоАналитикам.УстановитьПараметр("Контрагент",            	 Запрос.Параметры.Контрагент);
	ЗапросПоАналитикам.УстановитьПараметр("Партнер",       			 Запрос.Параметры.Партнер);
	ЗапросПоАналитикам.УстановитьПараметр("Договор",       			 Запрос.Параметры.Договор);
	ЗапросПоАналитикам.УстановитьПараметр("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	ЗапросПоАналитикам.УстановитьПараметр("РасчетыПоЗаказам", 		 Запрос.Параметры.РасчетыПоЗаказам);
	ЗапросПоАналитикам.УстановитьПараметр("ХозяйственнаяОперация",	 Запрос.Параметры.ХозяйственнаяОперация);
	
	Выборка = ЗапросПоАналитикам.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПартнеровИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаСведенийПоПоступлениям(Запрос)
	
	Если Запрос = Неопределено
		Или Запрос.Параметры.Свойство("ДокументПоступления") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Справочники.ДоговорыКонтрагентов.ДоговорИспользуетсяПриПриемке(Запрос.Параметры.ВариантПриемкиТоваров)
		И ЕстьОрдерныеСкладыВТЧТовары(Запрос.Параметры.Ссылка) Тогда
		
		Запрос.УстановитьПараметр("ДокументПоступления",             Запрос.Параметры.Договор);
		Запрос.УстановитьПараметр("Распоряжение",
			Справочники.ДоговорыКонтрагентов.ПолучитьДокументРегистрации(Запрос.Параметры.Договор));
		Запрос.УстановитьПараметр("ДоговорЯвляетсяРаспоряжением",    Истина);
		Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением",  Ложь);
		Запрос.УстановитьПараметр("ПоДоговорамПослеНакладных",
			Запрос.Параметры.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.ПоДоговорамПослеНакладных);
	
	ИначеЕсли Справочники.СоглашенияСПоставщиками.СоглашениеИспользуетсяПриПриемке(Запрос.Параметры.ВариантПриемкиТоваров)
		И ЕстьОрдерныеСкладыВТЧТовары(Запрос.Параметры.Ссылка) Тогда
		
		// Используется для закрытия существующей потребности по заказу, и сохранения движений по сущестующим документам.
		// Новые движения по соглашениям открывать запрещено.
		
		Запрос.УстановитьПараметр("ДокументПоступления",             Запрос.Параметры.Соглашение);
		Запрос.УстановитьПараметр("Распоряжение",
			Справочники.СоглашенияСПоставщиками.ПолучитьДокументРегистрации(Запрос.Параметры.Соглашение));
		Запрос.УстановитьПараметр("ДоговорЯвляетсяРаспоряжением",    Истина);
		Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением",  Ложь);
		Запрос.УстановитьПараметр("ПоДоговорамПослеНакладных",
			Запрос.Параметры.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.НеРазделенаПоНакладным);
		
	ИначеЕсли ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Запрос.Параметры.ВариантПриемкиТоваров) Тогда
		
		Запрос.УстановитьПараметр("ДокументПоступления",             Запрос.Параметры.Ссылка);
		Запрос.УстановитьПараметр("Распоряжение",                    Запрос.Параметры.Ссылка);
		Запрос.УстановитьПараметр("ДоговорЯвляетсяРаспоряжением",    Ложь);
		Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением",  Истина);
		Запрос.УстановитьПараметр("ПоДоговорамПослеНакладных",       Ложь);
		
	Иначе
		
		Запрос.УстановитьПараметр("ДокументПоступления",             Запрос.Параметры.Ссылка);
		Запрос.УстановитьПараметр("Распоряжение",                    Запрос.Параметры.Ссылка);
		Запрос.УстановитьПараметр("ДоговорЯвляетсяРаспоряжением",    Ложь);
		Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением",  Ложь);
		Запрос.УстановитьПараметр("ПоДоговорамПослеНакладных",       Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаСтранаЯвляетсяЧленомЕАЭС(Запрос)
	
	Если Запрос.Параметры.Свойство("СтранаЯвляетсяЧленомЕАЭС") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СтранаЯвляетсяЧленомЕАЭС", УчетНДСУТ.СтранаЯвляетсяЧленомЕАЭС(
		Запрос.Параметры.СтранаРегистрации, Запрос.Параметры.Период));
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаНалогообложениеОрганизации(Запрос)
	
	Если Запрос.Параметры.Свойство("НалогообложениеОрганизации") Тогда
		Возврат;
	КонецЕсли;
	
	НалогообложениеОрганизации = Справочники.Организации.НалогообложениеНДС(Запрос.Параметры.Организация, Запрос.Параметры.Период);
	Запрос.УстановитьПараметр("НалогообложениеОрганизации", НалогообложениеОрганизации);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерамПоНакладным") Тогда
		Возврат;
	КонецЕсли;
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамПоНакладным", РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Запрос.Параметры));
	
КонецПроцедуры

Функция ТекстЗапросаВтРасчетыПоНакладной(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасчетыПоНакладной";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СУММА(РасчетыПоНакладной.Сумма)      КАК СуммаВзаиморасчетов,
	|	СУММА(РасчетыПоНакладной.СуммаРегл)  КАК СуммаРегл,
	|	СУММА(РасчетыПоНакладной.СуммаУпр)   КАК СуммаУпр,
	|	СУММА(РасчетыПоНакладной.СуммаЗалога) КАК СуммаЗалога
	|ПОМЕСТИТЬ ВтРасчетыПоНакладной
	|ИЗ (ВЫБРАТЬ
	|		СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК Сумма,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|				ТОГДА СУММА(ТаблицаТовары.СуммаВзаиморасчетов)
	|				ИНАЧЕ ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаРегл,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА СУММА(ТаблицаТовары.СуммаВзаиморасчетов)
	|				ИНАЧЕ ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаУпр,
	|		0 КАК СуммаЗалога
	|	ИЗ
	|		Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		(НЕ &ПоступлениеПоЗаказам И НЕ &РасчетыПоДоговорам ИЛИ &РасчетыПоНакладным)
	|		И ТаблицаТовары.Ссылка = &Ссылка
	|		И (&ХозяйственнаяОперация В (&ХозОперацииЗакупкаУПоставщика)
	|			ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|			ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|			ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|		)
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		СУММА(-РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК Сумма,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|				ТОГДА СУММА(-РасшифровкаПлатежа.СуммаВзаиморасчетов)
	|				ИНАЧЕ ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаРегл,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА СУММА(-РасшифровкаПлатежа.СуммаВзаиморасчетов)
	|				ИНАЧЕ ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК СуммаУпр,
	|		0 КАК СуммаЗалога
	|	ИЗ
	|		Документ.ПриобретениеТоваровУслуг.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|	ГДЕ
	|		РасшифровкаПлатежа.Ссылка = &Ссылка
	|		И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|		И НЕ РасшифровкаПлатежа.Заказ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		0 КАК Сумма,
	|		0 КАК СуммаРегл,
	|		0 КАК СуммаУпр,
	|		СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаЗалога
	|		ИЗ
	|		Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		(НЕ &ПоступлениеПоЗаказам И НЕ &РасчетыПоДоговорам ИЛИ &РасчетыПоНакладным)
	|		И ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		И &ТребуетсяЗалогЗаТару) КАК РасчетыПоНакладной
	|ИМЕЮЩИЕ СУММА(РасчетыПоНакладной.Сумма) <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗаказыПоставщикам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЗаказыПоставщикам";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.ЗаказПоставщику          КАК ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	ВЫБОР КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|			ТаблицаТовары.Склад
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Склад,
	|	ТаблицаТовары.Количество               КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ПоступлениеПоЗаказам
	|	И ТаблицаТовары.КодСтроки <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.ЗаказПоставщику          КАК ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	ВЫБОР КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|			ТаблицаТовары.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Склад,
	|	0                                      КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки = 0
	|	И &ПоступлениеПоЗаказам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.ЗаказПоставщику          КАК ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	ВЫБОР КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|			ТаблицаТовары.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Склад,
	|	0                                      КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки = 0
	|	И &ПоступлениеПоЗаказам
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКПоступлению";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаСведенийПоПоступлениям(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.ЗаказПоставщику          КАК ДокументПоступления,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	&Отправитель                           КАК Отправитель,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ТаблицаТовары.Количество               КАК КОформлениюНакладныхПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоОрдерам,
	|	0                                      КАК КОформлениюОрдеров,
	|	0                                      КАК КОформлениюПоступленийПоНакладным
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользуетсяДокументПоступлениеТоваров
	|	И &ПоступлениеПоЗаказам
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.КодСтроки <> 0
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ВЫБОР
	|		КОГДА (&ДоговорЯвляетсяРаспоряжением
	|				ИЛИ &НакладнаяЯвляетсяРаспоряжением
	|				ИЛИ НЕ &ПоступлениеПоЗаказам)
	|			ТОГДА &ДокументПоступления
	|		ИНАЧЕ ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ                                  КАК ДокументПоступления,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	&Отправитель                           КАК Отправитель,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	0                                      КАК КОформлениюНакладныхПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоРаспоряжению,
	|	ТаблицаТовары.Количество               КАК КОформлениюПоступленийПоОрдерам,
	|	0                                      КАК КОформлениюОрдеров,
	|	0                                      КАК КОформлениюПоступленийПоНакладным
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользуетсяДокументПоступлениеТоваров
	|	И ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ВЫБОР
	|		КОГДА (&ДоговорЯвляетсяРаспоряжением
	|				ИЛИ &НакладнаяЯвляетсяРаспоряжением
	|				ИЛИ НЕ &ПоступлениеПоЗаказам
	|				ИЛИ &ПоДоговорамПослеНакладных)
	|			ТОГДА &ДокументПоступления
	|		ИНАЧЕ ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ                                  КАК ДокументПоступления,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	&Отправитель                           КАК Отправитель,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	0                                      КАК КОформлениюНакладныхПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоОрдерам,
	|	ТаблицаТовары.Количество               КАК КОформлениюОрдеров,
	|	0                                      КАК КОформлениюПоступленийПоНакладным
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользуетсяДокументПоступлениеТоваров
	|	И (&НакладнаяЯвляетсяРаспоряжением
	|		ИЛИ ТаблицаТовары.КодСтроки = 0
	|		ИЛИ &ПоДоговорамПослеНакладных)
	|	И ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.ЗаказПоставщику          КАК ДокументПоступления,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	&Отправитель                           КАК Отправитель,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ТаблицаТовары.Количество               КАК КОформлениюНакладныхПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоОрдерам,
	|	0                                      КАК КОформлениюОрдеров,
	|	0                                      КАК КОформлениюПоступленийПоНакладным
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ИспользуетсяДокументПоступлениеТоваров
	|	И &ПоступлениеПоЗаказам
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.КодСтроки <> 0
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ВЫБОР
	|		КОГДА (&НакладнаяЯвляетсяРаспоряжением
	|				ИЛИ НЕ &ПоступлениеПоЗаказам
	|				ИЛИ &ПоДоговорамПослеНакладных
	|				ИЛИ &ДоговорЯвляетсяРаспоряжением
	|				)
	|			ТОГДА &ДокументПоступления
	|		ИНАЧЕ ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ                                  КАК ДокументПоступления,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	&Отправитель                           КАК Отправитель,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 18
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Серия,
	|	0                                      КАК КОформлениюНакладныхПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоОрдерам,
	|	0                                      КАК КОформлениюОрдеров,
	|	ТаблицаТовары.Количество               КАК КОформлениюПоступленийПоНакладным
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ИспользуетсяДокументПоступлениеТоваров
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ВЫБОР
	|		КОГДА (&НакладнаяЯвляетсяРаспоряжением
	|				ИЛИ НЕ &ПоступлениеПоЗаказам
	|				ИЛИ &ПоДоговорамПослеНакладных)
	|			ТОГДА &ДокументПоступления
	|		ИНАЧЕ ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ                                  КАК ДокументПоступления,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	&Отправитель                           КАК Отправитель,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	0                                      КАК КОформлениюНакладныхПоРаспоряжению,
	|	ТаблицаТовары.Количество               КАК КОформлениюПоступленийПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоОрдерам,
	|	0                                      КАК КОформлениюОрдеров,
	|	0                                      КАК КОформлениюПоступленийПоНакладным
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ИспользуетсяДокументПоступлениеТоваров
	|	И (&НакладнаяЯвляетсяРаспоряжением
	|		ИЛИ ТаблицаТовары.КодСтроки = 0
	|		ИЛИ &ПоДоговорамПослеНакладных)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ВЫБОР
	|		КОГДА (&ДоговорЯвляетсяРаспоряжением
	|				ИЛИ НЕ &ПоступлениеПоЗаказам)
	|				И НЕ &ПоДоговорамПослеНакладных
	|			ТОГДА &ДокументПоступления
	|		ИНАЧЕ ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ                                  КАК ДокументПоступления,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	&Отправитель                           КАК Отправитель,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	0                                      КАК КОформлениюНакладныхПоРаспоряжению,
	|	ТаблицаТовары.Количество               КАК КОформлениюПоступленийПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоОрдерам,
	|	0                                      КАК КОформлениюОрдеров,
	|	0                                      КАК КОформлениюПоступленийПоНакладным
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользуетсяДокументПоступлениеТоваров
	|	И ТаблицаТовары.КодСтроки <> 0
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ВЫБОР
	|		КОГДА (&ДоговорЯвляетсяРаспоряжением
	|				ИЛИ &НакладнаяЯвляетсяРаспоряжением
	|				ИЛИ НЕ &ПоступлениеПоЗаказам
	|				ИЛИ &ПоДоговорамПослеНакладных)
	|			ТОГДА &ДокументПоступления
	|		ИНАЧЕ ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ                                  КАК ДокументПоступления,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	&Отправитель                           КАК Отправитель,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	0                                      КАК КОформлениюНакладныхПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоРаспоряжению,
	|	0                                      КАК КОформлениюПоступленийПоОрдерам,
	|	ТаблицаТовары.Количество               КАК КОформлениюОрдеров,
	|	0                                      КАК КОформлениюПоступленийПоНакладным
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ИспользуетсяДокументПоступлениеТоваров
	|	И (&НакладнаяЯвляетсяРаспоряжением
	|		ИЛИ ТаблицаТовары.КодСтроки = 0
	|		ИЛИ &ПоДоговорамПослеНакладных)
	|	И ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение
	|ИЗ
	|	ВтТаблицаСерииТоваров КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ИспользуетсяДокументПоступлениеТоваров
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	// На неордерном складе
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВРезервеПодЗаказ
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И НЕ ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Не &ИспользуетсяДокументПоступлениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе для старых назначений установка резерва под заказ (т.к. в приходном ордере нет старых 
	// назначений, приходный ордер этогосделать не мог)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	0,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И Не &ИспользуетсяДокументПоступлениеТоваров
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвижениеТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаСведенийПоПоступлениям(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	// На неордерном складе, если не используется документ ПоступлениеТоваров,
	// либо он используется при поступлении по накладным.
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаТовары.ЗаказПоставщику КАК Распоряжение,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоЗаказам
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И (НЕ &ИспользуетсяДокументПоступлениеТоваров
	|		ИЛИ &НакладнаяЯвляетсяРаспоряжением)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе при поступлении по распоряжению накладной (-/+)
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаТовары.ЗаказПоставщику КАК Распоряжение,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоЗаказам
	|	И &НакладнаяЯвляетсяРаспоряжением
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Распоряжение КАК Распоряжение,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоЗаказам
	|	И &НакладнаяЯвляетсяРаспоряжением
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На неордерном складе при поступлении по распоряжению накладной, если используется документ ПоступлениеТоваров
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Распоряжение КАК Распоряжение,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоЗаказам
	|	И &НакладнаяЯвляетсяРаспоряжением
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И &ИспользуетсяДокументПоступлениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе при поступлении по заказу по старым назначениям
	|ВЫБРАТЬ
	|	&Период,
	|	ВЫБОР
	|		КОГДА &ДоговорЯвляетсяРаспоряжением
	|			ТОГДА &Распоряжение
	|		ИНАЧЕ ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	0,
	|	-ТаблицаТовары.Количество,
	|	0,
	|	-ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоЗаказам
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И НЕ &ПоДоговорамПослеНакладных
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе сторно приходного ордера при поступлении по заказу по старым назначениям
	|ВЫБРАТЬ
	|	&Период,
	|	ВЫБОР
	|		КОГДА &ДоговорЯвляетсяРаспоряжением
	|			ТОГДА &Распоряжение
	|		ИНАЧЕ ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
	|	ТаблицаТовары.Количество,
	|	0,
	|	ТаблицаТовары.Количество,
	|	0
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоЗаказам
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И НЕ &ПоДоговорамПослеНакладных
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе при поступлении по соглашению (но без заказа) сторно приходного ордера по старым назначениям и поступлением без назначения
	|ВЫБРАТЬ
	|	&Период,
	|	&Распоряжение,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
	|	ТаблицаТовары.Количество,
	|	0,
	|	ТаблицаТовары.Количество,
	|	0
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ПоступлениеПоЗаказам
	|	И &ДоговорЯвляетсяРаспоряжением
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам И НЕ &ПоДоговорамПослеНакладных
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// На ордерном складе при поступлении по соглашению (но без заказа) сторно приходного ордера по новым назначениям
	|ВЫБРАТЬ
	|	&Период,
	|	&Распоряжение,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	0,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ПоступлениеПоЗаказам
	|	И &ДоговорЯвляетсяРаспоряжением
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	ТаблицаСерии.Склад КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК ПомещениеПолучателя,
	|	&Партнер КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаОтПоставщика) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА (НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &Период < ТаблицаСерии.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Склад,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	&Партнер,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаОтПоставщика),
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	ВЫБОР
	|		КОГДА (НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &Период < ТаблицаСерии.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	&Период 								КАК Период,
	|	ТаблицаТовары.Номенклатура 				КАК Номенклатура,
	|	ТаблицаТовары.Характеристика 			КАК Характеристика,
	|	ВЫБОР
	|		КОГДА НЕ(&ПоступлениеПоЗаказам
	|					И ТаблицаТовары.КодСтроки <> 0)
	|			ТОГДА -ТаблицаТовары.Количество
	|	КОНЕЦ 									КАК КЗаказу,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользуетсяДокументПоступлениеТоваров
	|				И (НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|					ИЛИ НЕ(ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|						И &Период >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении))
	|			ТОГДА ТаблицаТовары.Количество
	|	КОНЕЦ 									КАК НаличиеПодЗаказ,
	|	ТаблицаТовары.Склад 					КАК Склад,
	|	ТаблицаТовары.Назначение 				КАК Назначение
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (НЕ(&ПоступлениеПоЗаказам
	|					И ТаблицаТовары.КодСтроки <> 0)
	|		ИЛИ (НЕ &ИспользуетсяДокументПоступлениеТоваров 
	|			И (НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|				ИЛИ НЕ(ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|					И &Период >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении))))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказовРаботами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказовРаботами";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК КОбеспечению,
	|	ТаблицаТовары.Подразделение            КАК Подразделение,
	|	ТаблицаТовары.Назначение               КАК Назначение
	|
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ (&ПоступлениеПоЗаказам И ТаблицаТовары.КодСтроки <> 0)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПринятаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПринятаяВозвратнаяТара";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.СуммаСНДС                КАК Сумма,
	|	&Партнер                               КАК Партнер,
	|	&Ссылка                                КАК ДокументПоступления,
	|	&ТребуетсяЗалогЗаТару                  КАК ПредусмотренЗалог
	|ИЗ
	|	втТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ВернутьМногооборотнуюТару
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                      КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия          КАК Серия,
	|	ТаблицаТовары.Назначение     КАК Назначение,
	|	ТаблицаТовары.ВидЗапасов     КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД       КАК НомерГТД
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТаблицаТовары.ВидЗапасов = ПоступленияТоваров.ВидЗапасов 
	|		И ТаблицаТовары.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика 
	|		И ТаблицаТовары.Серия = ПоступленияТоваров.Серия
	|		И ТаблицаТовары.Назначение = ПоступленияТоваров.Назначение
	|		И ТаблицаТовары.НомерГТД = ПоступленияТоваров.НомерГТД 
	|
	|ГДЕ
	|	НЕ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка))
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		)
	|	И (ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|	И НЕ &ИспользуетсяДокументПоступлениеТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.НомерГТД
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ОрганизацияОтгрузки,
	|	ИСТИНА КАК Первичное
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|	И НЕ &ИспользуетсяДокументПоступлениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация),
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация) КАК ОрганизацияОтгрузки,
	|	ЛОЖЬ КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И НЕ &ИспользуетсяДокументПоступлениеТоваров
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюТаможенныхДеклараций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюТаможенныхДеклараций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТоварыКОформлениюТаможенныхДеклараций", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТоварыКОформлениюТаможенныхДеклараций(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Партнер КАК Поставщик,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА НЕ &КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ВтТоварыКОформлениюТаможенныхДеклараций.ДокументПоступленияЗаполнен ЕСТЬ NULL
	|			ТОГДА &Ссылка
	|		КОГДА НЕ ВтТоварыКОформлениюТаможенныхДеклараций.ДокументПоступленияЗаполнен
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ДокументПоступления,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ВтТоварыКОформлениюТаможенныхДеклараций.ДокументПоступленияЗаполнен ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|							И &Валюта <> &ВалютаРегламентированногоУчета
	|						ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|					ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		КОГДА НЕ ВтТоварыКОформлениюТаможенныхДеклараций.ДокументПоступленияЗаполнен
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|						И &Валюта <> &ВалютаРегламентированногоУчета
	|					ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|				ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ КАК Сумма,
	|	ИСТИНА КАК Первичное
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыКОформлениюТаможенныхДеклараций КАК ВтТоварыКОформлениюТаможенныхДеклараций
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|	И НЕ &ИспользуетсяДокументПоступлениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Организация,
	|	&Партнер,
	|	ТаблицаВидыЗапасов.Склад,
	|	ТаблицаВидыЗапасов.Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА НЕ &КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ВтТоварыКОформлениюТаможенныхДеклараций.ДокументПоступленияЗаполнен ЕСТЬ NULL
	|			ТОГДА &Ссылка
	|		КОГДА НЕ ВтТоварыКОформлениюТаможенныхДеклараций.ДокументПоступленияЗаполнен
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.Количество,
	|	ВЫБОР
	|		КОГДА НЕ &КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ВтТоварыКОформлениюТаможенныхДеклараций.ДокументПоступленияЗаполнен ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|							И &Валюта <> &ВалютаРегламентированногоУчета
	|						ТОГДА ТаблицаВидыЗапасов.СуммаВзаиморасчетов
	|					ИНАЧЕ ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		КОГДА НЕ ВтТоварыКОформлениюТаможенныхДеклараций.ДокументПоступленияЗаполнен
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|						И &Валюта <> &ВалютаРегламентированногоУчета
	|					ТОГДА ТаблицаВидыЗапасов.СуммаВзаиморасчетов
	|				ИНАЧЕ ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ИСТИНА
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыКОформлениюТаможенныхДеклараций КАК ВтТоварыКОформлениюТаможенныхДеклараций
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И ТаблицаВидыЗапасов.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|	И &ИспользуетсяДокументПоступлениеТоваров";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаТовары.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ФормироватьВидыЗапасовПоСделкам И &ОбособленныйУчетТоваровПоСделке
	|					ТОГДА &Сделка
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|					ТОГДА &Менеджер
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаУчетаПартий,
	|	СУММА(ВЫБОР 
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаНДСРегл
	|	КОНЕЦ) 															КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО 													КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 													КАК КорВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ									КАК ТипЗаписи,
	|
	|	СУММА(ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаСНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ) 															КАК СтоимостьЗабалансовая,
	|	СУММА(ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ) 															КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаСНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ) 															КАК Стоимость,
	|	СУММА(ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаБезНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ) 															КАК СтоимостьБезНДС,
	|	СУММА(ВЫБОР КОГДА &УправленческийУчетОрганизаций И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|				) ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|			ТОГДА
	|				ТаблицаТовары.СуммаСНДСУпр
	|			ИНАЧЕ
	|				ТаблицаТовары.СуммаБезНДСУпр
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) 															КАК СтоимостьУпр,
	|	СУММА(ВЫБОР 
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДСУпр - ТаблицаТовары.СуммаБезНДСУпр
	|	КОНЕЦ) 															КАК НДСУпр,
	|	СУММА(ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|				) ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|			ТОГДА
	|				ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл
	|			ИНАЧЕ
	|				ТаблицаТовары.СуммаБезНДСРегл
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) 															КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		)
	|	И (&ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию))
	|		)
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ФормироватьВидыЗапасовПоСделкам И &ОбособленныйУчетТоваровПоСделке
	|					ТОГДА &Сделка
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|					ТОГДА &Менеджер
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ТаблицаТовары.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ
	|
	// Товары в пути
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути) КАК РазделУчета,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ФормироватьВидыЗапасовПоСделкам И &ОбособленныйУчетТоваровПоСделке
	|					ТОГДА &Сделка
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|					ТОГДА &Менеджер
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаУчетаПартий,
	|	СУММА(ВЫБОР 
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаНДСРегл
	|	КОНЕЦ) 															КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО 													КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 													КАК КорВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ									КАК ТипЗаписи,
	|
	|	0	 															КАК СтоимостьЗабалансовая,
	|	0	 															КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр)								КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр)								КАК СтоимостьБезНДС,
	|	СУММА(ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|				)
	|			ТОГДА
	|				ТаблицаТовары.СуммаСНДСУпр
	|			ИНАЧЕ
	|				ТаблицаТовары.СуммаБезНДСУпр
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) 															КАК СтоимостьУпр,
	|	СУММА(ВЫБОР 
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДСУпр - ТаблицаТовары.СуммаБезНДСУпр
	|	КОНЕЦ) 															КАК НДСУпр,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|				) ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|			ТОГДА
	|				ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл
	|			ИНАЧЕ
	|				ТаблицаТовары.СуммаБезНДСРегл
	|	КОНЕЦ) 															КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		)
	|	И (&ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути))
	|		)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ФормироватьВидыЗапасовПоСделкам И &ОбособленныйУчетТоваровПоСделке
	|					ТОГДА &Сделка
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|					ТОГДА &Менеджер
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	// Нефактурованные поставки
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки) КАК РазделУчета,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО КАК Партия,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
	|	СУММА(ВЫБОР 
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаНДСРегл
	|	КОНЕЦ) 															КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоСделкам И &ОбособленныйУчетТоваровПоСделке
	|			ТОГДА &Сделка
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|			ТОГДА &Менеджер
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаТовары.ВидДеятельностиНДС								КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)			КАК ТипЗаписи,
	|
	|	0	 															КАК СтоимостьЗабалансовая,
	|	0	 															КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) 								КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) 							КАК СтоимостьБезНДС,
	|	СУММА(ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|				)
	|			ТОГДА
	|				ТаблицаТовары.СуммаСНДСУпр
	|			ИНАЧЕ
	|				ТаблицаТовары.СуммаБезНДСУпр
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) 															КАК СтоимостьУпр,
	|	СУММА(ВЫБОР 
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДСУпр - ТаблицаТовары.СуммаБезНДСУпр
	|	КОНЕЦ) 															КАК НДСУпр,
	|	СУММА(ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|				) ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА
	|			ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл
	|		ИНАЧЕ
	|			ТаблицаТовары.СуммаБезНДСРегл
	|	КОНЕЦ) 															КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		)
	|	И (&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки))
	|		)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ФормироватьВидыЗапасовПоСделкам И &ОбособленныйУчетТоваровПоСделке
	|					ТОГДА &Сделка
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|					ТОГДА &Менеджер
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаТовары.ВидДеятельностиНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаТовары.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО КАК Партия,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
	|	0 			 КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоСделкам И &ОбособленныйУчетТоваровПоСделке
	|			ТОГДА &Сделка
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|			ТОГДА &Менеджер
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 												 КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО										 КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|
	|	0 КАК СтоимостьЗабалансовая,
	|	0 КАК СтоимостьЗабалансоваяРегл,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьУпр,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация) КАК Организация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА ТаблицаТовары.ВидЗапасов ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	ВЫБОР КОГДА ТаблицаТовары.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения КАК АналитикаУчетаНоменклатуры,
	|
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО КАК Партия,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
	|	0 			 КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК ТипЗаписи,
	|
	|	0 КАК СтоимостьЗабалансовая,
	|	0 КАК СтоимостьЗабалансоваяРегл,
	|	-СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Стоимость,
	|	-СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СтоимостьБезНДС,
	|	-СУММА(ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА
	|				ТаблицаТовары.СуммаСНДСУпр
	|			ИНАЧЕ
	|				ТаблицаТовары.СуммаБезНДСУпр
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СтоимостьУпр,
	|	0 КАК НДСУпр,
	|	-СУММА(ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА
	|				ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл
	|			ИНАЧЕ
	|				ТаблицаТовары.СуммаБезНДСРегл
	|			КОНЕЦ) КАК СтоимостьРегл,
	|	0 	   КАК ПостояннаяРазница,
	|	0 	   КАК ВременнаяРазница,
	|
	|	-СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация) КАК Организация
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ФормироватьВидыЗапасовПоСделкам И &ОбособленныйУчетТоваровПоСделке
	|					ТОГДА &Сделка
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|					ТОГДА &Менеджер
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаУчетаПартий,
	|	СУММА(ВЫБОР 
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаНДСРегл
	|	КОНЕЦ) 															КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО 													КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 													КАК КорВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ									КАК ТипЗаписи,
	|
	|	СУММА(ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаСНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СтоимостьЗабалансовая,
	|	СУММА(ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА
	|				ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл
	|			ИНАЧЕ
	|				ТаблицаТовары.СуммаБезНДСРегл
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(ВЫБОР КОГДА НЕ (&ПартионныйУчетВерсии22 И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию))
	|		ТОГДА ТаблицаТовары.СуммаСНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК Стоимость,
	|	СУММА(ВЫБОР КОГДА НЕ (&ПартионныйУчетВерсии22 И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию))
	|		ТОГДА ТаблицаТовары.СуммаБезНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СтоимостьБезНДС,
	|	СУММА(ВЫБОР КОГДА &УправленческийУчетОрганизаций И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА
	|				ТаблицаТовары.СуммаСНДСУпр
	|			ИНАЧЕ
	|				ТаблицаТовары.СуммаБезНДСУпр
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СтоимостьУпр,
	|	СУММА(ВЫБОР 
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДСУпр - ТаблицаТовары.СуммаБезНДСУпр
	|	КОНЕЦ) КАК НДСУпр,
	|	СУММА(ВЫБОР КОГДА НЕ (&ПартионныйУчетВерсии22 И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию))
	|		ТОГДА
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА
	|				ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл
	|			ИНАЧЕ
	|				ТаблицаТовары.СуммаБезНДСРегл
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СтоимостьРегл,
	|	0 	   КАК ПостояннаяРазница,
	|	0 	   КАК ВременнаяРазница,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Не ТаблицаТовары.СписатьНаРасходы
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ФормироватьВидыЗапасовПоСделкам И &ОбособленныйУчетТоваровПоСделке
	|					ТОГДА &Сделка
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|					ТОГДА &Менеджер
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК СуммаСНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СуммаБезНДСУпр,
	|
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаСНДСРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(ТаблицаТовары.СписатьНаРасходы ИЛИ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.ВидДеятельностиНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаСНДСРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(ТаблицаТовары.СписатьНаРасходы ИЛИ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.ВидДеятельностиНДС
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);

	ТекстЗапроса = "
	// Расходы
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СтоимостьБезНДС,
	|	СУММА(ТаблицаТовары.СуммаНДСУпр) КАК НДСУпр,
	|
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	СУММА(ТаблицаТовары.СуммаНДСРегл) КАК НДСРегл,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(ТаблицаТовары.СписатьНаРасходы ИЛИ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.ВидДеятельностиНДС
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);

	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ" + "
	// Расходы
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходовРегл =
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТовары.СтатьяРасходов КОНЕЦ) КАК СтатьяРасходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходовРегл =
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТовары.АналитикаРасходов КОНЕЦ) КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	СУММА(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций ТОГДА ТаблицаТовары.СуммаНДСУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК НДСУпр,
	|
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	СУММА(ТаблицаТовары.СуммаНДСРегл) КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(ТаблицаТовары.СписатьНаРасходы ИЛИ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|	И ((ТаблицаТовары.СтатьяРасходов.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|				И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
	|		ИЛИ (ТаблицаТовары.ВидЦенности В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|				И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
	|		ИЛИ (ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|				И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
	|		)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|СГРУППИРОВАТЬ ПО
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходовРегл =
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТовары.СтатьяРасходов КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходовРегл =
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТовары.АналитикаРасходов КОНЕЦ),
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Товары
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Склад.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	СУММА(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций ТОГДА ТаблицаТовары.СуммаНДСУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК НДСУпр,
	|
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	СУММА(ТаблицаТовары.СуммаНДСРегл) КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.ВидЦенности В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)) 
	|	И ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И ТаблицаТовары.СуммаНДСРегл <> 0
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Склад.Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Работы
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	СУММА(ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА ТаблицаТовары.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК НДСУпр,
	|
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	СУММА(ТаблицаТовары.СуммаНДСРегл) КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ ТаблицаТовары.СписатьНаРасходы
	|	И ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И ТаблицаТовары.СуммаНДСРегл <> 0
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Подразделение,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	&ПодотчетноеЛицо                       КАК ПодотчетноеЛицо,
	|	&Подразделение                         КАК Подразделение,
	|	&Валюта                                КАК Валюта,
	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств         КАК СтатьяДвиженияДенежныхСредств,
	|	СУММА(ТаблицаТовары.СуммаСНДС)         КАК Сумма,
	|	ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС)
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО (15,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС)
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО (15,2)) КАК СуммаУпр,
	|	СУММА(ТаблицаТовары.СуммаСНДС)         КАК КОтчету
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыПоНакладной", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыПоНакладной(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		ТаблицаТовары.ЗаказПоставщику
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗакупкаПоЗаказу,
	|
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ФормаОплаты,
	|	
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК Сумма,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА СУММА(ТаблицаТовары.СуммаВзаиморасчетов)
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА СУММА(ТаблицаТовары.СуммаВзаиморасчетов)
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|	СУММА(0) КАК КОплате,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК КПоступлению,
	|	0 КАК ЗалогЗаТару,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация  = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер 	  = Аналитика.Партнер
	|		И &Договор    = Аналитика.Договор
	|		И ВЫБОР 
	|				КОГДА &РасчетыПоЗаказам 
	|					ТОГДА ТаблицаТовары.ЗаказПоставщику.НаправлениеДеятельности
	|				ИНАЧЕ
	|					&НаправлениеДеятельности
	|		  КОНЕЦ 	  = Аналитика.НаправлениеДеятельности
	|
	|ГДЕ
	|	(&ХозяйственнаяОперация В (&ХозОперацииЗакупкаУПоставщика)
	|		ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|	)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки <> 0
	|	И &ПоступлениеПоЗаказам
	|	И Не &РасчетыПоНакладным
	|	И (ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара) ИЛИ НЕ &ВернутьМногооборотнуюТару)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		ТаблицаТовары.ЗаказПоставщику
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗакупкаПоЗаказу,
	|
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ФормаОплаты,
	|	
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК Сумма,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА СУММА(ТаблицаТовары.СуммаВзаиморасчетов)
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА СУММА(ТаблицаТовары.СуммаВзаиморасчетов)
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|	СУММА(0) КАК КОплате,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК КПоступлению,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК ЗалогЗаТару,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация  = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер 	  = Аналитика.Партнер
	|		И &Договор    = Аналитика.Договор
	|		И ВЫБОР 
	|				КОГДА &РасчетыПоЗаказам 
	|					ТОГДА ТаблицаТовары.ЗаказПоставщику.НаправлениеДеятельности
	|				ИНАЧЕ
	|					&НаправлениеДеятельности
	|		  КОНЕЦ 	  = Аналитика.НаправлениеДеятельности
	|
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС)
	|		)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки <> 0
	|	И &ПоступлениеПоЗаказам
	|	И Не &РасчетыПоНакладным
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ТребуетсяЗалогЗаТару
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ФормаОплаты,
	|	
	|	СУММА(0) КАК Сумма,
	|	СУММА(0) КАК СуммаРегл,
	|	СУММА(0) КАК СуммаУпр,
	|	СУММА(0) КАК КОплате,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК КПоступлению,
	|	0 КАК ЗалогЗаТару,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация  = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер 	  = Аналитика.Партнер
	|		И &Договор    = Аналитика.Договор
	|		И ВЫБОР 
	|				КОГДА &РасчетыПоЗаказам 
	|					ТОГДА ТаблицаТовары.ЗаказПоставщику.НаправлениеДеятельности
	|				ИНАЧЕ
	|					&НаправлениеДеятельности
	|		  КОНЕЦ 	  = Аналитика.НаправлениеДеятельности
	|
	|ГДЕ
	|	(&ХозяйственнаяОперация В (&ХозОперацииЗакупкаУПоставщика)
	|		ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|	)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки = 0
	|	И &ПоступлениеПоЗаказам
	|	И Не &РасчетыПоНакладным
	|	И (ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ &ТребуетсяЗалогЗаТару
	|		ИЛИ НЕ &ВернутьМногооборотнуюТару)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ФормаОплаты,
	|	
	|	СУММА(0) КАК Сумма,
	|	СУММА(0) КАК СуммаРегл,
	|	СУММА(0) КАК СуммаУпр,
	|	СУММА(0) КАК КОплате,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК КПоступлению,
	|	0 КАК ЗалогЗаТару,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация  = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер 	  = Аналитика.Партнер
	|		И &Договор    = Аналитика.Договор
	|		И ВЫБОР 
	|				КОГДА &РасчетыПоЗаказам 
	|					ТОГДА ТаблицаТовары.ЗаказПоставщику.НаправлениеДеятельности
	|				ИНАЧЕ
	|					&НаправлениеДеятельности
	|		  КОНЕЦ 	  = Аналитика.НаправлениеДеятельности
	|
	|ГДЕ
	|	(&ХозяйственнаяОперация В (&ХозОперацииЗакупкаУПоставщика)
	|		ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|	)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки = 0
	|	И (&ПоступлениеПоЗаказам ИЛИ &ГрафикИсполненияВДоговоре)
	|	И Не &РасчетыПоНакладным
	|	И (ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ &ТребуетсяЗалогЗаТару
	|		ИЛИ НЕ &ВернутьМногооборотнуюТару)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		ТаблицаТовары.ЗаказПоставщику
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗакупкаПоЗаказу,
	|
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ФормаОплаты,
	|
	|	СУММА(0) КАК Сумма,
	|	СУММА(0) КАК СуммаРегл,
	|	СУММА(0) КАК СуммаУпр,
	|	СУММА(0) КАК КОплате,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК КПоступлению,
	|	0 КАК ЗалогЗаТару,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация  = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер 	  = Аналитика.Партнер
	|		И &Договор    = Аналитика.Договор
	|		И ВЫБОР 
	|				КОГДА &РасчетыПоЗаказам 
	|					ТОГДА ТаблицаТовары.ЗаказПоставщику.НаправлениеДеятельности
	|				ИНАЧЕ
	|					&НаправлениеДеятельности
	|		  КОНЕЦ 	  = Аналитика.НаправлениеДеятельности
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки <> 0
	|	И &ПоступлениеПоЗаказам
	|	И Не &РасчетыПоНакладным
	|	И (ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара) ИЛИ НЕ &ВернутьМногооборотнуюТару)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ФормаОплаты КАК ФормаОплаты,
	|
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК Сумма,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА СУММА(ТаблицаТовары.СуммаВзаиморасчетов)
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА СУММА(ТаблицаТовары.СуммаВзаиморасчетов)
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|	СУММА(0) КАК КОплате,
	|	СУММА(0) КАК КПоступлению,
	|	0 КАК ЗалогЗаТару,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация  = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер 	  = Аналитика.Партнер
	|		И &Договор    = Аналитика.Договор
	|		И ВЫБОР 
	|				КОГДА &РасчетыПоЗаказам 
	|					ТОГДА ТаблицаТовары.ЗаказПоставщику.НаправлениеДеятельности
	|				ИНАЧЕ
	|					&НаправлениеДеятельности
	|		  КОНЕЦ 	  = Аналитика.НаправлениеДеятельности
	|
	|ГДЕ
	|	(&ХозяйственнаяОперация В (&ХозОперацииЗакупкаУПоставщика)
	|		ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|	)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки = 0
	|	И (&РасчетыПоДоговорам ИЛИ (&РасчетыПоЗаказам И &ПоступлениеПоЗаказам))
	|	И (ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара) ИЛИ НЕ &ВернутьМногооборотнуюТару)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ФормаОплаты КАК ФормаОплаты,
	|
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК Сумма,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА СУММА(ТаблицаТовары.СуммаВзаиморасчетов)
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА СУММА(ТаблицаТовары.СуммаВзаиморасчетов)
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|	СУММА(0) КАК КОплате,
	|	СУММА(0) КАК КПоступлению,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК ЗалогЗаТару,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация  = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер 	  = Аналитика.Партнер
	|		И &Договор    = Аналитика.Договор
	|		И ВЫБОР 
	|				КОГДА &РасчетыПоЗаказам 
	|					ТОГДА ТаблицаТовары.ЗаказПоставщику.НаправлениеДеятельности
	|				ИНАЧЕ
	|					&НаправлениеДеятельности
	|		  КОНЕЦ 	  = Аналитика.НаправлениеДеятельности
	|
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС)
	|		)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки = 0
	|	И (&РасчетыПоДоговорам ИЛИ (&РасчетыПоЗаказам И &ПоступлениеПоЗаказам))
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ТребуетсяЗалогЗаТару
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаРегистратора,
	|	&ДатаПлатежа                           КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерамПоНакладным  КАК АналитикаУчетаПоПартнерам,
	|
	|	&Ссылка                                КАК ЗаказПоставщику,
	|	Неопределено                           КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов                  КАК Валюта,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	&ФормаОплаты                           КАК ФормаОплаты,
	|	
	|	РасчетыПоНакладной.СуммаВзаиморасчетов КАК Сумма,
	|	РасчетыПоНакладной.СуммаРегл           КАК СуммаРегл,
	|	РасчетыПоНакладной.СуммаУпр            КАК СуммаУпр,
	|	0                                      КАК КОплате,
	|	0                                      КАК КПоступлению,
	|
	|	РасчетыПоНакладной.СуммаЗалога         КАК ЗалогЗаТару,
	|	&Организация                           КАК Организация
	|ИЗ
	|	ВтРасчетыПоНакладной КАК РасчетыПоНакладной
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(&ДатаПлатежа, День) КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		ВЫБОР КОГДА &ПоступлениеПоЗаказам И Не &РасчетыПоНакладным ТОГДА
	|			ТаблицаТовары.ЗаказПоставщику
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ФормаОплаты КАК ФормаОплаты,
	|
	|	СУММА(0) КАК Сумма,
	|	СУММА(0) КАК СуммаРегл,
	|	СУММА(0) КАК СуммаУпр,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК КОплате,
	|	СУММА(0) КАК КПоступлению,
	|	0 КАК ЗалогЗаТару,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация  = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер 	  = Аналитика.Партнер
	|		И &Договор    = Аналитика.Договор
	|		И ВЫБОР 
	|				КОГДА &РасчетыПоЗаказам 
	|					ТОГДА ТаблицаТовары.ЗаказПоставщику.НаправлениеДеятельности
	|				ИНАЧЕ
	|					&НаправлениеДеятельности
	|		  КОНЕЦ 	  = Аналитика.НаправлениеДеятельности
	|
	|ГДЕ
	|	(&ХозяйственнаяОперация В (&ХозОперацииЗакупкаУПоставщика)
	|		ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|	)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И (ТаблицаТовары.КодСтроки = 0
	|		Или &РасчетыПоНакладным)
	|	И (ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ &ТребуетсяЗалогЗаТару
	|		ИЛИ НЕ &ВернутьМногооборотнуюТару)
	|	И НЕ &ГрафикИсполненияВДоговоре
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ЗаказПоставщику,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Период КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК ЗаказПоставщику,
	|	Неопределено КАК ЗакупкаПоЗаказу,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Неопределено КАК ФормаОплаты,
	|	
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА НЕ &ГрафикИсполненияВДоговоре ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КОплате,
	|	0 КАК КПоступлению,
	|	0 КАК ЗалогЗаТару,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация) = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер 	  = Аналитика.Партнер
	|		И &Договор    = Аналитика.Договор
	|		И ВЫБОР 
	|			КОГДА &РасчетыПоЗаказам 
	|				ТОГДА ТаблицаРасшифровкаПлатежа.Заказ.НаправлениеДеятельности 	
	|			ИНАЧЕ
	|				&НаправлениеДеятельности
	|		КОНЕЦ = Аналитика.НаправлениеДеятельности
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	&Период                                       КАК ДатаРегистратора,
	|	&Период                                       КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерамПоНакладным         КАК АналитикаУчетаПоПартнерам,
	|
	|	&Ссылка                                       КАК ЗаказПоставщику,
	|
	|	Неопределено                                  КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов                         КАК Валюта,
	|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
	|	&ФормаОплаты                                  КАК ФормаОплаты,
	|
	|	СУММА(0)                                      КАК Сумма,
	|	СУММА(0)                                      КАК СуммаРегл,
	|	СУММА(0)                                      КАК СуммаУпр,
	|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК КОплате,
	|	СУММА(0)                                      КАК КПоступлению,
	|	0                                             КАК ЗалогЗаТару,
	|	&Организация                                  КАК Организация
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|	И НЕ РасшифровкаПлатежа.Заказ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|ИМЕЮЩИЕ
	|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаРегистратора,
	|	&ДатаПлатежа                           КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерамПоНакладным  КАК АналитикаУчетаПоПартнерам,
	|
	|	РасшифровкаПлатежа.Заказ               КАК ЗаказПоставщику,
	|	Неопределено                           КАК ЗакупкаПоЗаказу,
	|	&ВалютаВзаиморасчетов                  КАК Валюта,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                           КАК ФормаОплаты,
	|	
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА РасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА РасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК КОплате,
	|	0                                      КАК КПоступлению,
	|	0                                      КАК ЗалогЗаТару,
	|	&Организация                           КАК Организация
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|	И НЕ РасшифровкаПлатежа.Заказ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ЕстьОрдерныеСкладыВТЧТовары(ДокументСсылка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПоступлениеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Поступление
	|		ПО (Поступление.Ссылка = ПоступлениеТовары.Ссылка)
	|ГДЕ
	|	ПоступлениеТовары.Ссылка = &ДокументСсылка
	|	И ПоступлениеТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И Поступление.Дата >= ПоступлениеТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении");
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Возврат Не Запрос.Выполнить().Пустой();

КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СтоимостьБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СтоимостьРегл,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|				ТОГДА 0 
	|			ИНАЧЕ ТаблицаТовары.СуммаНДСРегл
	|		КОНЕЦ) КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ИСТИНА КАК Первичное,
	|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|	И &ПартионныйУчетВерсии21
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ВидЗапасов, ТаблицаТовары.АналитикаУчетаНоменклатуры, ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура, ТаблицаТовары.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СтоимостьБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ИСТИНА КАК Первичное,
	|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|	И &ПартионныйУчетВерсии21
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ВидЗапасов, ТаблицаТовары.АналитикаУчетаНоменклатуры, ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура, ТаблицаТовары.Характеристика
	|";  
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыУПартнеров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыУПартнеров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Склад                                 КАК Склад,
	|	&Партнер                               КАК Партнер,
	|	&Контрагент                            КАК Контрагент,
	|	&Договор                               КАК Договор,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение     КАК Назначение,
	|	ТаблицаВидыЗапасов.ВидЗапасов          КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД            КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество          КАК Передано
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	&ИспользуетсяДокументПоступлениеТоваров
	|	И Не &ИспользуетсяОперацияИмпортаТоварыВПутиИНеотфактуровка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ПересчитатьТаблицуТоваров(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.ПересчетВВалютуРегл ТОГДА 0.
	|	ИНАЧЕ ТаблицаТовары.СуммаБезНДСРегл КОНЕЦ КАК СуммаБезНДСРегл,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.ПересчетВВалютуРегл ТОГДА 0.
	|	ИНАЧЕ ТаблицаТовары.СуммаНДСРегл КОНЕЦ КАК СуммаНДСРегл,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.ПересчетВВалютуУпр ТОГДА 0.
	|	ИНАЧЕ ТаблицаТовары.СуммаБезНДСУпр КОНЕЦ КАК СуммаБезНДСУпр,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.ПересчетВВалютуУпр ТОГДА 0.
	|	ИНАЧЕ ТаблицаТовары.СуммаНДСУпр КОНЕЦ КАК СуммаНДСУпр,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.ПересчетВВалютуРегл ТОГДА 0.
	|	ИНАЧЕ ТаблицаТовары.БазаНДСРегл КОНЕЦ КАК БазаНДСРегл,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.ПересчетВВалютуУпр ТОГДА 0.
	|	ИНАЧЕ ТаблицаТовары.БазаНДСУпр КОНЕЦ КАК БазаНДСУпр,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.ЭтоТараКВозврату И НЕ &ТребуетсяЗалогЗаТару 
	|		ТОГДА Неопределено
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	КОНЕЦ КАК ТипРасчетов
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	НЕ &ИспользуетсяДокументПоступлениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ПересчетВВалютуРегл ТОГДА 0.
	|	ИНАЧЕ ТаблицаВидыЗапасов.СуммаБезНДСРегл КОНЕЦ КАК СуммаБезНДСРегл,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ПересчетВВалютуРегл ТОГДА 0.
	|	ИНАЧЕ ТаблицаВидыЗапасов.СуммаНДСРегл КОНЕЦ КАК СуммаНДСРегл,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ПересчетВВалютуУпр ТОГДА 0.
	|	ИНАЧЕ ТаблицаВидыЗапасов.СуммаБезНДСУпр КОНЕЦ КАК СуммаБезНДСУпр,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ПересчетВВалютуУпр ТОГДА 0.
	|	ИНАЧЕ ТаблицаВидыЗапасов.СуммаНДСУпр КОНЕЦ КАК СуммаНДСУпр,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ПересчетВВалютуРегл ТОГДА 0.
	|	ИНАЧЕ ТаблицаВидыЗапасов.БазаНДСРегл КОНЕЦ КАК БазаНДСРегл,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ПересчетВВалютуУпр ТОГДА 0.
	|	ИНАЧЕ ТаблицаВидыЗапасов.БазаНДСУпр КОНЕЦ КАК БазаНДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком) КАК ТипРасчетов
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ГДЕ
	|	&ИспользуетсяДокументПоступлениеТоваров
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ИСТИНА КАК Первичное
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Не ТаблицаТовары.СписатьНаРасходы
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПроизводственныхЗатрат";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	&Ссылка КАК ДокументПоступления,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СтоимостьБезНДС,
	|
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СтоимостьРегл,
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаТовары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением) 
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаТовары.СуммаНДСРегл
	|		КОНЕЦ ) КАК НДСРегл
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ ТаблицаТовары.СписатьНаРасходы
	|	И НЕ &ПартионныйУчетВерсии22
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры, 
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.ВидЗапасов
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "Закупки";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 

#Область ПоступлениеТоваров
	ПоступлениеТоваров =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	&Соглашение КАК Соглашение,
	|	&Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоЗаказам
	|				И &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам
	|				И НЕ &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК Заказ,
	|	НЕОПРЕДЕЛЕНО КАК ПодотчетноеЛицо,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СуммаРеглБезНДС,
	|	СУММА(ТаблицаТовары.СуммаСкидки) КАК СуммаСкидки,
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС), 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(ТаблицаТовары.СуммаБезНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|	&Валюта КАК ВалютаДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		КОГДА &ПоступлениеПоЗаказам
	|				И &ПоступлениеПоНесколькимЗаказам
	|				И НЕ &РасчетыПоНакладным
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам
	|				И НЕ &ПоступлениеПоНесколькимЗаказам
	|				И НЕ &РасчетыПоНакладным
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|			ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|			ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|			ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаУПоставщика))
	|	И НЕ &ИспользуетсяДокументПоступлениеТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоЗаказам
	|				И &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам
	|				И НЕ &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		КОГДА &ПоступлениеПоЗаказам
	|				И &ПоступлениеПоНесколькимЗаказам
	|				И НЕ &РасчетыПоНакладным
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам
	|				И НЕ &ПоступлениеПоНесколькимЗаказам
	|				И НЕ &РасчетыПоНакладным
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|	ТаблицаТовары.ВидДеятельностиНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&ХозяйственнаяОперация,
	|	&Организация,
	|	&Подразделение,
	|	&Менеджер,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки))
	|		ИЛИ &ИспользуетсяНазначение
	|			ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности,
	|	ТаблицаВидыЗапасов.Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	&Партнер,
	|	&Контрагент,
	|	&НаправлениеДеятельности,
	|	&Соглашение,
	|	&Договор,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоЗаказам
	|				И &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА ТаблицаВидыЗапасов.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам
	|				И НЕ &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	СУММА(ТаблицаВидыЗапасов.Количество),
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр),
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСУпр),
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл),
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл),
	|	СУММА(ТаблицаВидыЗапасов.СуммаСкидки),
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр),
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСУпр),
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС), ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл)
	|	КОНЕЦ,
	|	0,
	|	0,
	|	&Валюта,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС),
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС),
	|	&ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаВидыЗапасов.СуммаВзаиморасчетов),
	|	СУММА(ТаблицаВидыЗапасов.СуммаВзаиморасчетов - ТаблицаВидыЗапасов.СуммаНДСВзаиморасчетов),
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ КлючиАналитикиУчетаНоменклатуры.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		КОГДА &ПоступлениеПоЗаказам
	|				И &ПоступлениеПоНесколькимЗаказам
	|				И НЕ &РасчетыПоНакладным
	|			ТОГДА ТаблицаВидыЗапасов.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам
	|				И НЕ &ПоступлениеПоНесколькимЗаказам
	|				И НЕ &РасчетыПоНакладным
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	И (&ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|			ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|			ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаУПоставщика))
	|	И &ИспользуетсяДокументПоступлениеТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки))
	|		ИЛИ &ИспользуетсяНазначение
	|			ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.НаправлениеДеятельности,
	|	ТаблицаВидыЗапасов.Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоЗаказам
	|				И &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА ТаблицаВидыЗапасов.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам
	|				И НЕ &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ КлючиАналитикиУчетаНоменклатуры.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		КОГДА &ПоступлениеПоЗаказам
	|				И &ПоступлениеПоНесколькимЗаказам
	|				И НЕ &РасчетыПоНакладным
	|			ТОГДА ТаблицаВидыЗапасов.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам
	|				И НЕ &ПоступлениеПоНесколькимЗаказам
	|				И НЕ &РасчетыПоНакладным
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС";
#КонецОбласти

#Область ПоступлениеРабот
	ПоступлениеРабот =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	&Подразделение КАК Склад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	&Соглашение КАК Соглашение,
	|	&Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоЗаказам И &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам И Не &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК Заказ,
	|	НЕОПРЕДЕЛЕНО КАК ПодотчетноеЛицо,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СуммаРеглБезНДС,
	|	СУММА(ТаблицаТовары.СуммаСкидки) КАК СуммаСкидки,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(ТаблицаТовары.СуммаБезНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		КОГДА &ПоступлениеПоЗаказам И &ПоступлениеПоНесколькимЗаказам И НЕ &РасчетыПоНакладным
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам И Не &ПоступлениеПоНесколькимЗаказам И НЕ &РасчетыПоНакладным
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Не ТаблицаТовары.СписатьНаРасходы
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|	И НЕ &ИспользуетсяДокументПоступлениеТоваров
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоЗаказам И &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам И Не &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		КОГДА &ПоступлениеПоЗаказам И &ПоступлениеПоНесколькимЗаказам И НЕ &РасчетыПоНакладным
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам И Не &ПоступлениеПоНесколькимЗаказам И НЕ &РасчетыПоНакладным
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|	ТаблицаТовары.Подразделение,
	|	ТаблицаТовары.ВидДеятельностиНДС
	|";
#КонецОбласти

#Область ПриемНаКомиссию
	ПриемНаКомиссию = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	&Соглашение КАК Соглашение,
	|	&Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоЗаказам И &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам И Не &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК Заказ,
	|	НЕОПРЕДЕЛЕНО КАК ПодотчетноеЛицо,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(ТаблицаТовары.СуммаБезНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		КОГДА &ПоступлениеПоЗаказам И &ПоступлениеПоНесколькимЗаказам И НЕ &РасчетыПоНакладным
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам И Не &ПоступлениеПоНесколькимЗаказам И НЕ &РасчетыПоНакладным
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоЗаказам И &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам И Не &ПоступлениеПоНесколькимЗаказам
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		КОГДА &ПоступлениеПоЗаказам И &ПоступлениеПоНесколькимЗаказам И НЕ &РасчетыПоНакладным
	|			ТОГДА ТаблицаТовары.ЗаказПоставщику
	|		КОГДА &ПоступлениеПоЗаказам И Не &ПоступлениеПоНесколькимЗаказам И НЕ &РасчетыПоНакладным
	|			ТОГДА &ЗаказПоставщику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ,
	|	ТаблицаТовары.ВидДеятельностиНДС
	|";
#КонецОбласти

#Область ПоступлениеТоваровЧерезПодотчетника
	ПоступлениеТоваровЧерезПодотчетника =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	НЕОПРЕДЕЛЕНО КАК Партнер,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	&Ссылка КАК Заказ,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СуммаРеглБезНДС,
	|	СУММА(ТаблицаТовары.СуммаСкидки) КАК СуммаСкидки,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(ТаблицаТовары.СуммаБезНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ,
	|	ТаблицаТовары.ВидДеятельностиНДС
	|";
#КонецОбласти

#Область ПоступлениеРаботЧерезПодотчетника
	ПоступлениеРаботЧерезПодотчетника =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	&Подразделение КАК Склад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	&Соглашение КАК Соглашение,
	|	&Договор КАК Договор,
	|	&Ссылка КАК Заказ,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СуммаРеглБезНДС,
	|	СУММА(ТаблицаТовары.СуммаСкидки) КАК СуммаСкидки,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Стоимость,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(ТаблицаТовары.СуммаБезНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Не ТаблицаТовары.СписатьНаРасходы
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ,
	|	ТаблицаТовары.Подразделение,
	|	ТаблицаТовары.ВидДеятельностиНДС
	|";
#КонецОбласти

	ТекстЗапроса = ПоступлениеТоваров
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПоступлениеРабот
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПриемНаКомиссию
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПоступлениеТоваровЧерезПодотчетника
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПоступлениеРаботЧерезПодотчетника;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеУслуг) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	&Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		ИНАЧЕ ВЫБОР КОГДА &ПоступлениеПоЗаказам И НЕ &РасчетыПоНакладным
	|				ТОГДА ТаблицаТовары.ЗаказПоставщику
	|				ИНАЧЕ &Ссылка
	|			КОНЕЦ
	|	КОНЕЦ КАК ОбъектРасчетов,
	|
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|	
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРеглБезНДС,
	|
	|	&Валюта КАК Валюта,
	|	ТаблицаТовары.СуммаСНДС КАК СуммаВВалюте,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНДСВВалюте,
	|		
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаТовары.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		ИНАЧЕ ВЫБОР КОГДА &ПоступлениеПоЗаказам И НЕ &РасчетыПоНакладным
	|				ТОГДА ТаблицаТовары.ЗаказПоставщику
	|				ИНАЧЕ &Ссылка
	|			КОНЕЦ
	|	КОНЕЦ КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(ТаблицаТовары.СписатьНаРасходы ИЛИ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|	И (&ХозяйственнаяОперация =
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаПоИмпорту)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаУПоставщика)
	|		)
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходыПодотчетногоЛица) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ТаблицаТовары.Подразделение КАК ПодразделениеДоходовРасходов,
	|	&ПодотчетноеЛицо КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК ТипДенежныхСредств,
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	&Валюта КАК Валюта,
	|
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ТаблицаТовары.СуммаСНДС КАК СуммаВВалюте,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	ТаблицаТовары.СтатьяРасходов КАК ИсточникГФУДоходовРасходов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(ТаблицаТовары.СписатьНаРасходы ИЛИ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо))
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюЗаявленийОВвозе(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТаблицаТоварыКОформлениюЗаявленийОВвозеТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрЗапросаСтранаЯвляетсяЧленомЕАЭС(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	&Ссылка                                КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК КОформлению,
	|	ТаблицаТовары.Сумма                    КАК ФактурнаяСтоимость
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&ХозяйственнаяОперация В (&ХозОперацииЗакупкаВСтранахЕАЭС)
	|		ИЛИ (&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|				И &СтранаЯвляетсяЧленомЕАЭС))
	|	И ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаСерииТоваров";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ТаблицаТовары.Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество                            КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерий                   КАК СтатусУказанияСерий,
	|	ТаблицаТовары.Серия                                 КАК Серия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваров
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|		ИЛИ &Период < ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий),
	|	ТаблицаСерии.Серия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Поступление
	|		ПО Поступление.Ссылка = ТаблицаСерии.Ссылка
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|		ИЛИ &Период < ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	УстановитьПараметрЗапросаНалогообложениеОрганизации(Запрос);
	
	ТекстВыборкаПоляАналитик = "
	|ВЫБРАТЬ
	|	""Товары"" 								КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 			КАК НомерСтроки,
	|	ДанныеДокумента.Партнер					КАК Поставщик,
	|	ДанныеДокумента.Контрагент				КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 				КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаДокумента.УдалитьАналитикаУчетаПартий.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.УдалитьАналитикаУчетаПартий.НалогообложениеНДС // Для корректного обновления на 2.2 берем из ключа
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В
	|		  (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|		  И ЕСТЬNULL(Статьи.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		  И ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		КОГДА ДанныеДокумента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			И ДанныеДокумента.ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			ТОГДА &НалогообложениеОрганизации
	|		ИНАЧЕ ДанныеДокумента.ЗакупкаПодДеятельность
	|	КОНЕЦ                               	КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|		КОГДА СпрНоменклатура.ТипНоменклатуры В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		  И НЕ ТаблицаДокумента.СписатьНаРасходы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)) <>
	|		  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|			ТОГДА Статьи.ВидЦенностиНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ                               	КАК ВидЦенности,
	|	0										КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО СпрНоменклатура.Ссылка = ТаблицаДокумента.Номенклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО ТаблицаДокумента.СтатьяРасходов = Статьи.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО СпрНоменклатура.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	""ВидыЗапасов"" 						КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 			КАК НомерСтроки,
	|	ДанныеДокумента.Партнер					КАК Поставщик,
	|	ДанныеДокумента.Контрагент				КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 				КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			И ДанныеДокумента.ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			ТОГДА &НалогообложениеОрганизации
	|		ИНАЧЕ ДанныеДокумента.ЗакупкаПодДеятельность
	|	КОНЕЦ                               	КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|		КОГДА СпрНоменклатура.ТипНоменклатуры В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ                               	КАК ВидЦенности,
	|	0										КАК КодСтроки
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.ВидыЗапасов КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Ссылка = ТаблицаДокумента.АналитикаУчетаНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО СпрНоменклатура.Ссылка = Аналитика.Номенклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО СпрНоменклатура.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаТовары";
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                       		КАК Ссылка,
	|	ТаблицаТовары.КодСтроки                    		КАК КодСтроки,
	|	ТаблицаТовары.СтатьяРасходов               		КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов            		КАК АналитикаРасходов,
	|	ТаблицаТовары.ЗаказПоставщику              		КАК ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура                 		КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 		КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика               		КАК Характеристика,
	|	ТаблицаТовары.Серия                        		КАК Серия,
	|
	|	ТаблицаТовары.НомерГТД                     		КАК НомерГТД,
	|	ТаблицаТовары.ВидЗапасов                   		КАК ВидЗапасов,
	|
	|	ТаблицаТовары.Количество                   		КАК Количество,
	|	ТаблицаТовары.Цена                         		КАК Цена,
	|	ТаблицаТовары.Склад                        		КАК Склад,
	|	ТаблицаТовары.Склад.ЦеховаяКладовая        		КАК ЦеховаяКладовая,
	|	ВЫБОР КОГДА ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			И &Период >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                      		КАК ИспользоватьОрдернуюСхемуПриПоступлении,
	|	ТаблицаТовары.Сумма                        		КАК Сумма,
	|	ТаблицаТовары.СуммаНДС                     		КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС                    		КАК СуммаСНДС,
	|	ТаблицаТовары.ИдентификаторСтроки          		КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Назначение                   		КАК Назначение,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   		КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики       		КАК АналитикаУчетаНоменклатурыБезНазначения,
	|
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			И &ВернутьМногооборотнуюТару ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТараКВозврату,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуУПР) КАК ЧИСЛО(15,2))
	|	КОНЕЦ) КАК СуммаСНДСУпр,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ(((ТаблицаТовары.СуммаСНДС-ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуУПР) КАК ЧИСЛО(15,2))
	|	КОНЕЦ) КАК СуммаБезНДСУпр,
	|
	|	ЕСТЬNULL(Суммы.СуммаНДСУпр,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТаблицаТовары.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ((ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуУПР) КАК ЧИСЛО(15,2))
	|	КОНЕЦ) КАК СуммаНДСУпр,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) 
	|		КОНЕЦ 
	|	) КАК СуммаБезНДСРегл,
	|
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, 
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТаблицаТовары.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|		КОНЕЦ
	|	) КАК СуммаНДСРегл,
	|
	|	ЕСТЬNULL(Суммы.БазаНДСРегл, ЕСТЬNULL(Суммы.СуммаБезНДСРегл,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) 
	|		КОНЕЦ 
	|	)) КАК БазаНДСРегл,
	|
	|	ЕСТЬNULL(Суммы.БазаНДСУпр, ЕСТЬNULL(Суммы.СуммаБезНДСУпр,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) 
	|		КОНЕЦ 
	|	)) КАК БазаНДСУпр,
	|
	|	Суммы.Регистратор ЕСТЬ NULL И &ВалютаВзаиморасчетов <> &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета КАК ПересчетВВалютуРегл,
	|	Суммы.Регистратор ЕСТЬ NULL И &ВалютаВзаиморасчетов <> &ВалютаУправленческогоУчета И &Валюта <> &ВалютаУправленческогоУчета КАК ПересчетВВалютуУпр,
	|
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаРучнойСкидки * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(15,1)) КАК СуммаСкидки,
	|
	|	ТаблицаТовары.Подразделение                  КАК Подразделение,
	|	ТаблицаТовары.СписатьНаРасходы               КАК СписатьНаРасходы,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ИЛИ (СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И ЕСТЬNULL(Аналитика.Назначение.НаправлениеДеятельности,
	|					ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|			ТОГДА &НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(Аналитика.Назначение.НаправлениеДеятельности,
	|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(АналитикаРасчетов.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = ТаблицаТовары.Номенклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.Склад = АналитикаБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаТовары.Ссылка = Суммы.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|		И (ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) = Суммы.СуммаБезНДС
	|		И ТаблицаТовары.СуммаНДС = Суммы.СуммаНДС
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаТовары.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Товары""
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|	ПО
	|		&Организация = АналитикаРасчетов.Организация
	|		И &Контрагент = АналитикаРасчетов.Контрагент
	|		И &Партнер = АналитикаРасчетов.Партнер
	|		И &Договор = АналитикаРасчетов.Договор
	|		И ВЫБОР 
	|			КОГДА &РасчетыПоЗаказам 
	|				ТОГДА ТаблицаТовары.ЗаказПоставщику.НаправлениеДеятельности
	|			ИНАЧЕ
	|				&НаправлениеДеятельности
	|		  КОНЕЦ = АналитикаРасчетов.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТоварыКОформлениюТаможенныхДеклараций(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТоварыКОформлениюТаможенныхДеклараций";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВЫБОР КОГДА
	|		ТоварыКОформлениюТаможенныхДеклараций.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
	|	ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ДокументПоступленияЗаполнен
	|ПОМЕСТИТЬ ВтТоварыКОформлениюТаможенныхДеклараций
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюТаможенныхДеклараций КАК ТоварыКОформлениюТаможенныхДеклараций
	|ГДЕ
	|	ТоварыКОформлениюТаможенныхДеклараций.Регистратор = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТЧВидыЗапасов.Ссылка КАК Ссылка,
	|	ТЧВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТЧВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТЧВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТЧВидыЗапасов.Количество КАК Количество,
	|	ТЧВидыЗапасов.Цена КАК Цена,
	|	ТЧВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТЧВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	ТЧВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТЧВидыЗапасов.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТЧВидыЗапасов.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	ТЧВидыЗапасов.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры.Склад КАК Склад,
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры.Склад.ЦеховаяКладовая КАК ЦеховаяКладовая,
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТЧВидыЗапасов.ЗаказПоставщику КАК ЗаказПоставщику,
	|	АналитикаБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ЕСТЬNULL(Аналитика.Назначение.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|
	|	ЕСТЬNULL(АналитикаРасчетов.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТЧВидыЗапасов.СуммаВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ((ТЧВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУПР) КАК ЧИСЛО(15,2))
	|	КОНЕЦ) КАК СуммаСНДСУпр,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТЧВидыЗапасов.СуммаВзаиморасчетов - ТЧВидыЗапасов.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ(((ТЧВидыЗапасов.СуммаСНДС-ТЧВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуУПР) КАК ЧИСЛО(15,2))
	|	КОНЕЦ) КАК СуммаБезНДСУпр,
	|
	|	ЕСТЬNULL(Суммы.СуммаНДСУпр,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТЧВидыЗапасов.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ((ТЧВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуУПР) КАК ЧИСЛО(15,2))
	|	КОНЕЦ) КАК СуммаНДСУпр,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТЧВидыЗапасов.СуммаВзаиморасчетов - ТЧВидыЗапасов.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ((ТЧВидыЗапасов.СуммаСНДС - ТЧВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) 
	|		КОНЕЦ 
	|	) КАК СуммаБезНДСРегл,
	|
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, 
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТЧВидыЗапасов.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ(ТЧВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|		КОНЕЦ
	|	) КАК СуммаНДСРегл,
	|
	|	ЕСТЬNULL(Суммы.БазаНДСРегл, ЕСТЬNULL(Суммы.СуммаБезНДСРегл,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТЧВидыЗапасов.СуммаВзаиморасчетов - ТЧВидыЗапасов.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ((ТЧВидыЗапасов.СуммаСНДС - ТЧВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) 
	|		КОНЕЦ 
	|	)) КАК БазаНДСРегл,
	|
	|	ЕСТЬNULL(Суммы.БазаНДСУпр, ЕСТЬNULL(Суммы.СуммаБезНДСУпр,
	|		ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета И &Валюта <> &ВалютаВзаиморасчетов
	|			ТОГДА ТЧВидыЗапасов.СуммаВзаиморасчетов - ТЧВидыЗапасов.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ((ТЧВидыЗапасов.СуммаСНДС - ТЧВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) 
	|		КОНЕЦ 
	|	)) КАК БазаНДСУпр,
	|
	|	Суммы.Регистратор ЕСТЬ NULL И &ВалютаВзаиморасчетов <> &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета КАК ПересчетВВалютуРегл,
	|	Суммы.Регистратор ЕСТЬ NULL И &ВалютаВзаиморасчетов <> &ВалютаУправленческогоУчета И &Валюта <> &ВалютаУправленческогоУчета КАК ПересчетВВалютуУпр,
	|
	|	ВЫРАЗИТЬ(ТЧВидыЗапасов.СуммаРучнойСкидки * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(15,1)) КАК СуммаСкидки
	|
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.ВидыЗапасов КАК ТЧВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ТЧВидыЗапасов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО ТЧВидыЗапасов.Ссылка = Суммы.Регистратор
	|			И ТЧВидыЗапасов.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|			И (Суммы.СуммаБезНДСРегл <> 0)
	|			И (ТЧВидыЗапасов.СуммаСНДС - ТЧВидыЗапасов.СуммаНДС = Суммы.СуммаБезНДС)
	|			И ТЧВидыЗапасов.СуммаНДС = Суммы.СуммаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТЧВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|		ПО ТЧВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаБезНазначения.Номенклатура
	|			И ТЧВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = АналитикаБезНазначения.Характеристика
	|			И ТЧВидыЗапасов.АналитикаУчетаНоменклатуры.Серия = АналитикаБезНазначения.Серия
	|			И ТЧВидыЗапасов.АналитикаУчетаНоменклатуры.Склад = АналитикаБезНазначения.Склад
	|			И (ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|		ПО ТаблицаАналитикУчетаПартий.НомерСтроки = ТЧВидыЗапасов.НомерСтроки
	|		И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ВидыЗапасов""
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|	ПО
	|		&Организация = АналитикаРасчетов.Организация
	|		И &Контрагент = АналитикаРасчетов.Контрагент
	|		И &Партнер = АналитикаРасчетов.Партнер
	|		И &Договор = АналитикаРасчетов.Договор
	|		И ВЫБОР 
	|			КОГДА &РасчетыПоЗаказам 
	|				ТОГДА ТЧВидыЗапасов.ЗаказПоставщику.НаправлениеДеятельности 	
	|			ИНАЧЕ
	|				&НаправлениеДеятельности
	|		  КОНЕЦ = АналитикаРасчетов.НаправлениеДеятельности
	|ГДЕ
	|	ТЧВидыЗапасов.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаКурсыВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВременнаяТаблицаКурсыВалют";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс      КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ
	|	ВременнаяТаблицаКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период) КАК КурсыВалютСрезПоследних
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаТовары(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВременнаяТаблицаТовары";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВременнаяТаблицаКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.НоменклатураПоставщика КАК НоменклатураПоставщика,
	|	Товары.Номенклатура           КАК Номенклатура,
	|	Товары.Характеристика         КАК Характеристика,
	|	Товары.ВидЦеныПоставщика      КАК ВидЦеныПоставщика,
	|	Товары.Упаковка               КАК Упаковка,
	|	ВЫРАЗИТЬ(Товары.Цена
	|				* ВЫБОР
	|					КОГДА
	|						&Валюта <> ВидыЦенПоставщиков.Валюта
	|					ТОГДА
	|						ВЫБОР
	|							КОГДА ЕСТЬNULL(КурсыВалютыВидыЦеныПоставщика.Кратность, 0) > 0
	|								И ЕСТЬNULL(КурсыВалютыВидыЦеныПоставщика.Курс, 0) > 0
	|								И ЕСТЬNULL(КурсыВалюты.Кратность, 0) > 0
	|								И ЕСТЬNULL(КурсыВалюты.Курс, 0) > 0
	|							ТОГДА 
	|								(КурсыВалюты.Курс * КурсыВалютыВидыЦеныПоставщика.Кратность)
	|								/ (КурсыВалютыВидыЦеныПоставщика.Курс * КурсыВалюты.Кратность)
	|							ИНАЧЕ
	|								0
	|						КОНЕЦ
	|					ИНАЧЕ 
	|						1
	|				КОНЕЦ КАК ЧИСЛО(15, 2))
	|	КАК Цена
	|ПОМЕСТИТЬ
	|	ВременнаяТаблицаТовары
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК Товары
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.ВидыЦенПоставщиков КАК ВидыЦенПоставщиков
	|ПО
	|	ВидыЦенПоставщиков.Ссылка = Товары.ВидЦеныПоставщика
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяТаблицаКурсыВалют КАК КурсыВалюты
	|ПО
	|	КурсыВалюты.Валюта = &Валюта
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяТаблицаКурсыВалют КАК КурсыВалютыВидыЦеныПоставщика
	|ПО
	|	КурсыВалютыВидыЦеныПоставщика.Валюта = ВидыЦенПоставщиков.Валюта
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И &РегистрироватьЦеныПоставщика
	|	И (Товары.КодСтроки = 0 ИЛИ НЕ Товары.ЗаказПоставщику.РегистрироватьЦеныПоставщика)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыСРазличнымиУпаковкамиЦенами(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ТоварыСРазличнымиУпаковкамиЦенами";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВременнаяТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.Номенклатура                    КАК Номенклатура,
	|	Товары.Характеристика                  КАК Характеристика,
	|	Товары.ВидЦеныПоставщика               КАК ВидЦеныПоставщика,
	|	СРЕДНЕЕ(
	|		Товары.Цена / ВЫБОР
	|				КОГДА
	|					Товары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА
	|					&ТекстЗапросаКоэффициентУпаковки
	|				ИНАЧЕ
	|					1
	|			КОНЕЦ
	|	) КАК ЦенаЗаБазовуюЕдиницу,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.Упаковка)  КАК КоличествоРазличныхУпаковок
	|ПОМЕСТИТЬ
	|	ТоварыСРазличнымиУпаковкамиЦенами
	|ИЗ
	|	ВременнаяТаблицаТовары КАК Товары
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ВидЦеныПоставщика
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЦеныНоменклатурыПоставщиков(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЦеныНоменклатурыПоставщиков";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВременнаяТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТоварыСРазличнымиУпаковкамиЦенами", ТекстыЗапроса) Тогда
		ТекстЗапросаТоварыСРазличнымиУпаковкамиЦенами(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВременнаяТаблицаКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МАКСИМУМ(Товары.НоменклатураПоставщика) КАК НоменклатураПоставщика,
	|	Товары.Номенклатура                     КАК Номенклатура,
	|	Товары.Характеристика                   КАК Характеристика,
	|	Товары.ВидЦеныПоставщика                КАК ВидЦеныПоставщика,
	|	Товары.ВидЦеныПоставщика.Валюта         КАК Валюта,
	|	&Период                                 КАК Период,
	|	&Партнер                                КАК Партнер,
	|	МИНИМУМ(ВЫБОР
	|				КОГДА
	|					ТоварыСРазличнымиУпаковкамиЦенами.КоличествоРазличныхУпаковок > 1
	|				ТОГДА
	|					ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ИНАЧЕ
	|					Товары.Упаковка
	|				КОНЕЦ
	|			) КАК Упаковка,
	|	ВЫРАЗИТЬ(СРЕДНЕЕ(ВЫБОР
	|				КОГДА
	|					ТоварыСРазличнымиУпаковкамиЦенами.КоличествоРазличныхУпаковок > 1
	|				ТОГДА
	|					ТоварыСРазличнымиУпаковкамиЦенами.ЦенаЗаБазовуюЕдиницу
	|				ИНАЧЕ
	|					Товары.Цена
	|				КОНЕЦ) КАК Число(15,2)) КАК Цена
	|ИЗ
	|	ВременнаяТаблицаТовары КАК Товары
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ТоварыСРазличнымиУпаковкамиЦенами КАК ТоварыСРазличнымиУпаковкамиЦенами
	|ПО
	|	Товары.Номенклатура = ТоварыСРазличнымиУпаковкамиЦенами.Номенклатура
	|	И Товары.Характеристика = ТоварыСРазличнымиУпаковкамиЦенами.Характеристика
	|	И Товары.ВидЦеныПоставщика = ТоварыСРазличнымиУпаковкамиЦенами.ВидЦеныПоставщика
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяТаблицаКурсыВалют КАК КурсыВалюты
	|ПО
	|	КурсыВалюты.Валюта = &Валюта
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяТаблицаКурсыВалют КАК КурсыВалютыЦены
	|ПО
	|	КурсыВалютыЦены.Валюта = Товары.ВидЦеныПоставщика.Валюта
	|ГДЕ
	|	Не Товары.ВидЦеныПоставщика = ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.ВидЦеныПоставщика,
	|	Товары.ВидЦеныПоставщика.Валюта
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУПР")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;

	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.Валюта, Запрос.Параметры.ВалютаВзаиморасчетов, Запрос.Параметры.Период);
		
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУПР",            Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",           Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.ПриобретениеТоваровУслуг";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	
	ЗначенияПараметров = Новый Структура();
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоДоговору",    """""");
	ПереопределениеРасчетаПараметров.Вставить("НомерВходящегоДокумента", """""");
	ПереопределениеРасчетаПараметров.Вставить("ДоговорЯвляетсяРаспоряжением",
		"ВЫБОР КОГДА ТаблицаТовары.Ссылка.ВариантПриемкиТоваров В (ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных),
		|														  ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоЗаказамИНакладным),
		|														  ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоНакладным))
		|ТОГДА
		|	ИСТИНА
		|	   КОГДА ТаблицаТовары.Ссылка.ВариантПриемкиТоваров В (ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных),
		|													ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеЗаказовИлиНакладных),
		|													ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеНакладных))
		|ТОГДА
		|	ИСТИНА
		|ИНАЧЕ
		|	ЛОЖЬ
		|КОНЕЦ");
	ПереопределениеРасчетаПараметров.Вставить("НакладнаяЯвляетсяРаспоряжением",
		"ВЫБОР КОГДА ТаблицаТовары.Ссылка.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
		|ТОГДА
		|	ИСТИНА
		|ИНАЧЕ
		|	ЛОЖЬ
		|КОНЕЦ");
	ПереопределениеРасчетаПараметров.Вставить("ДокументПоступления",
		"ВЫБОР КОГДА ТаблицаТовары.Ссылка.ВариантПриемкиТоваров В (ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных),
		|														  ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоЗаказамИНакладным),
		|														  ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоНакладным))
		|ТОГДА
		|	ТаблицаТовары.Ссылка.Соглашение
		|КОГДА ТаблицаТовары.Ссылка.ВариантПриемкиТоваров В (ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных),
		|													ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеЗаказовИлиНакладных),
		|													ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеНакладных))
		|ТОГДА
		|	ТаблицаТовары.Ссылка.Договор
		|ИНАЧЕ
		|	ТаблицаТовары.Ссылка
		|КОНЕЦ");
	ПереопределениеРасчетаПараметров.Вставить("ПоДоговорамПослеНакладных",
		"ВЫБОР КОГДА ТаблицаТовары.Ссылка.ВариантПриемкиТоваров В (ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеНакладных),
		|														  ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоНакладным))
		|ТОГДА
		|	ИСТИНА
		|ИНАЧЕ
		|	ЛОЖЬ
		|КОНЕЦ");
	ПереопределениеРасчетаПараметров.Вставить("ХозяйственнаяОперацияКПоступлению", 
		"ВЫБОР
		|	КОГДА Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути)
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути)
		|	КОГДА Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка)
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки)
		|	КОГДА Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути)
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути)
		|	КОГДА Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка)
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки)
		|	КОГДА Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути)
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути)
		|КОНЕЦ");
	ПереопределениеРасчетаПараметров.Вставить("ИспользуетсяДокументПоступлениеТоваров", 
		"ВЫБОР
		|	КОГДА Ссылка.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|		ТОГДА ЛОЖЬ
		|	КОГДА НЕ Ссылка.Договор.ВариантОформленияЗакупок ЕСТЬ NULL
		|			И Ссылка.Договор.ВариантОформленияЗакупок <> ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияЗакупок.НеРазделять)
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ ЛОЖЬ
		|КОНЕЦ");
	ПереопределениеРасчетаПараметров.Вставить("Отправитель", 
		"ВЫБОР
		|	КОГДА Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
		|		ТОГДА Ссылка.ПодотчетноеЛицо
		|	ИНАЧЕ Ссылка.Партнер
		|КОНЕЦ");
	
	Если ИмяРегистра = "ЗаказыПоставщикам" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаЗаказыПоставщикам(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыКПоступлению" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКПоступлению(Неопределено, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ЦеныНоменклатурыПоставщиков" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаЦеныНоменклатурыПоставщиков(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ВЗапросеЕстьИсточник = Ложь;
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСПредъявленный";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	&Контрагент                            КАК Поставщик,
	|	ТаблицаТовары.ВидЦенности              КАК ВидЦенности,
	|	ТаблицаТовары.ВидДеятельностиНДС       КАК ВидДеятельностиНДС,
	|	ТаблицаТовары.СтавкаНДС                КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	СУММА(ТаблицаТовары.БазаНДСРегл)	   КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.СуммаНДСРегл)      КАК НДС,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА &УправленческийУчетОрганизаций 
	|				ТОГДА ТаблицаТовары.СуммаНДСУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ)                             КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО                           КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	ТаблицаТовары.ИдентификаторСтроки      КАК ИдентификаторСтроки
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ТаблицаТовары.БазаНДСРегл <> 0
	|	И ТаблицаТовары.ВидДеятельностиНДС В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуиспользованию),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|	И (&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо))
	|		ИЛИ &ХозяйственнаяОперация В (&ХозОперацииЗакупкаУПоставщика)
	|		)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ВидЦенности,
	|	ТаблицаТовары.ВидДеятельностиНДС,
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.ИдентификаторСтроки
	|
	|ИМЕЮЩИЕ
	|	 СУММА(ТаблицаТовары.СуммаНДСРегл) <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Партнер                                КАК Партнер,
	|	&Контрагент                             КАК Контрагент,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Склад                                  КАК МестоХранения,
	|	&Подразделение                          КАК Подразделение,
	|	&Менеджер                               КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Валюта                                 КАК Валюта,
	|	&СуммаДокумента                         КАК Сумма,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&ИнформацияПоДоговору                   КАК Дополнительно,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции


#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Поступление товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Приобретение товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	// Приходная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриходнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Приходная накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	// Акт об оказании услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	// Задание на размещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru = 'Задание на размещение товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаРазмещение");

	// Приходный ордер (М-4)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "М4";
	КомандаПечати.Представление = НСтр("ru = 'Приходный ордер (М-4)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Акт о приемке товара, поступившего без счета поставщика (ТОРГ-4)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "ТОРГ4";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приемке товара, поступившего без счета поставщика (ТОРГ-4)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	Если ПраваПользователяПовтИсп.ПечатьЭтикетокИЦенников() Тогда
		// Ценники
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьЭтикетокИЦенников";
		КомандаПечати.МенеджерПечати = "Документ.ПриобретениеТоваровУслуг";
		КомандаПечати.Идентификатор = "Ценники";
		КомандаПечати.Представление = НСтр("ru = 'Ценники'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

		// Этикетки
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьЭтикетокИЦенников";
		КомандаПечати.МенеджерПечати = "Документ.ПриобретениеТоваровУслуг";
		КомандаПечати.Идентификатор = "Этикетки";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-1 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ1";
		КомандаПечати.Представление = НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
	// Авансовый отчет
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.АвансовыйОтчет";
	КомандаПечати.Идентификатор = "АвансовыйОтчет";
	КомандаПечати.Представление = НСтр("ru = 'Авансовый отчет'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", НСтр("ru='Накладная'"), СформироватьПечатнуюФормуНакладная(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриходнаяНакладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПриходнаяНакладная", НСтр("ru='Приходная накладная'"), СформироватьПечатнуюФормуПриходнаяНакладная(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт", НСтр("ru='Акт об оказании услуг'"), СформироватьПечатнуюФормуАктОбОказанииУслуг(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчет") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АвансовыйОтчет",
			НСтр("ru='Авансовый отчет'"),
			Документы.АвансовыйОтчет.СформироватьПечатнуюФормуАвансовогоОтчета(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриобретениеТоваровУслугТовары.Ссылка КАК Ссылка,
	|	ПриобретениеТоваровУслугТовары.Склад КАК Склад
	|ПОМЕСТИТЬ СкладыДокумента
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|ГДЕ
	|	ПриобретениеТоваровУслугТовары.Ссылка В(&МассивОбъектов)
	|	И ПриобретениеТоваровУслугТовары.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	И ПриобретениеТоваровУслугТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриобретениеТоваровУслугТовары.Ссылка,
	|	ПриобретениеТоваровУслугТовары.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СкладыДокумента.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(СкладыДокумента.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(СкладыДокумента.Склад) КАК СкладПредставление,
	|	СкладыДокумента.Склад КАК Склад,
	|	"""" КАК ПомещениеПредставление,
	|	Поступление.Дата КАК Дата,
	|	Поступление.Номер КАК Номер,
	|	ЛОЖЬ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА СкладыДокумента.Склад.ИспользоватьАдресноеХранениеСправочно
	|				И (НЕ СкладыДокумента.Склад.ИспользоватьАдресноеХранение
	|					ИЛИ Поступление.Дата < СкладыДокумента.Склад.ДатаНачалаАдресногоХраненияОстатков)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	ВЫБОР
	|		КОГДА СкладыДокумента.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И Поступление.Дата >= СкладыДокумента.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НарушенаОрдернаяСхема,
	|	СкладыДокумента.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры,
	|	СкладыДокумента.Склад.ИспользованиеРабочихУчастков КАК ИспользованиеРабочихУчастков
	|ИЗ
	|	СкладыДокумента КАК СкладыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Поступление
	|		ПО (Поступление.Ссылка = СкладыДокумента.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Поступление
	|		ПО (Поступление.Ссылка = ТаблицаТовары.Ссылка)
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10)
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			ИЛИ Поступление.Дата < ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Поступление
	|		ПО (Поступление.Ссылка = ТаблицаСерии.Ссылка)
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|	И ТаблицаСерии.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			ИЛИ Поступление.Дата < ТаблицаСерии.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.НаборУпаковок КАК НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Упаковка,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаТоваровСуммированная
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ТаблицаТовары.Ссылка.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваровСуммированная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСуммированная.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСуммированная.Серия КАК Серия,
	|	ТаблицаТоваровСуммированная.Номенклатура.Код КАК Код,
	|	ТаблицаТоваровСуммированная.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТоваровСуммированная.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТоваровСуммированная.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТоваровСуммированная.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТоваровСуммированная.Количество КАК Количество,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТоваровСуммированная.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий,
	|	ТаблицаТоваровСуммированная.Количество КАК КоличествоУпаковок,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Упаковка) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Склад)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТоваровСуммированная.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТоваровСуммированная.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаТоваровСуммированная.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаТоваровСуммированная.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Склад)
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|	И НЕ ТаблицаТовары.Серия ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаТоваровСуммированная.Номенклатура"));
			
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[4];
	РезультатПоУпаковкам 		= МассивРезультатов[5];
	РезультатПоСериям 			= МассивРезультатов[6];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоУпаковкам, РезультатПоСериям",
													РезультатПоШапке,
													РезультатПоТабличнойЧасти,
													РезультатПоУпаковкам,
													РезультатПоСериям);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы  М-4
//
Функция ПолучитьДанныеДляПечатнойФормыМ4(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Дата                 КАК Дата,
	|	ДанныеДокументов.Валюта               КАК Валюта,
	|	ДанныеДокументов.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	Запрос.Текст = "
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка                     КАК Ссылка,
	|	ПриобретениеТоваровУслуг.Номер                      КАК Номер,
	|	ПриобретениеТоваровУслуг.Дата                       КАК Дата,
	|	ПриобретениеТоваровУслуг.Дата                       КАК ДатаСоставления,
	|	ПриобретениеТоваровУслуг.НомерВходящегоДокумента    КАК НомерСопроводительногоДокумента,
	|	ПриобретениеТоваровУслуг.Контрагент                 КАК Поставщик,
	|	ПриобретениеТоваровУслуг.Организация                КАК Организация,
	|	ПриобретениеТоваровУслуг.Организация.Префикс        КАК Префикс,
	|	ПриобретениеТоваровУслуг.БанковскийСчетОрганизации  КАК БанковскийСчетОрганизации,
	|
	|	ВЫБОР
	|		КОГДА
	|			ПриобретениеТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		ТОГДА
	|			ПриобретениеТоваровУслуг.Организация
	|		ИНАЧЕ
	|			ПриобретениеТоваровУслуг.Грузоотправитель
	|	КОНЕЦ                                              КАК Грузоотправитель,
	|
	|	ПриобретениеТоваровУслуг.Подразделение              КАК Подразделение,
	|	ПриобретениеТоваровУслуг.Подразделение.Наименование КАК ПредставлениеПодразделения,
	|	ПриобретениеТоваровУслуг.Валюта                     КАК Валюта,
	|	ПриобретениеТоваровУслуг.Принял        			   КАК МОЛ,
	|	ПриобретениеТоваровУслуг.ПринялДолжность            КАК ДолжностьМОЛ
	|
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ПриобретениеТоваровУслуг.Ссылка = ДанныеДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                                  КАК Ссылка,
	|	ТаблицаТоваров.Склад                                   КАК Склад,
	|	ТаблицаТоваров.Склад.Наименование                      КАК СкладНаименование,
	|	ТаблицаТоваров.Номенклатура                            КАК Номенклатура,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное         КАК ТоварНаименование,
	|	
	|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
	|		ТаблицаТоваров.Номенклатура.Артикул
	|	ИНАЧЕ
	|		ТаблицаТоваров.Номенклатура.Код
	|	КОНЕЦ КАК ТоварКод,
	|	
	|	ТаблицаТоваров.ЕдиницаИзмерения.Представление          КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаТоваров.ЕдиницаИзмерения.Код                    КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное       КАК Характеристика,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1 ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТаблицаТоваров.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|
	|	ТаблицаТоваров.КоличествоУпаковок                      КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок                      КАК КоличествоПринято,
	|	ВЫБОР КОГДА ТаблицаТоваров.Количество <> 0 ТОГДА 
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                                  КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС                             КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС                                КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС   КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТоваров.Ссылка.ВернутьМногооборотнуюТару
	|			И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваров.НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка, Склад
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
			
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы  ТОРГ-4
//
Функция ПолучитьДанныеДляПечатнойФормыТОРГ4(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Валюта КАК Валюта
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПриобретениеТоваровУслуг.Номер КАК Номер,
	|	ПриобретениеТоваровУслуг.Дата КАК Дата,
	|	ПриобретениеТоваровУслуг.Дата КАК ДатаДокумента,
	|	ПриобретениеТоваровУслуг.ДатаВходящегоДокумента КАК ДатаДокументаСопровождения,
	|	ПриобретениеТоваровУслуг.НомерВходящегоДокумента КАК НомерДокументаСопровождения,
	|	ПриобретениеТоваровУслуг.Контрагент КАК Поставщик,
	|	ПриобретениеТоваровУслуг.Организация КАК Организация,
	|	ПриобретениеТоваровУслуг.Организация.Префикс КАК Префикс,
	|	ПриобретениеТоваровУслуг.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ПриобретениеТоваровУслуг.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ПриобретениеТоваровУслуг.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ВЫБОР
	|		КОГДА ПриобретениеТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПриобретениеТоваровУслуг.Организация
	|		ИНАЧЕ ПриобретениеТоваровУслуг.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ПриобретениеТоваровУслуг.Подразделение.Наименование КАК ПредставлениеПодразделения,
	|	ПриобретениеТоваровУслуг.Валюта КАК Валюта,
	|	ПриобретениеТоваровУслуг.Принял КАК МОЛ,
	|	ПриобретениеТоваровУслуг.ПринялДолжность КАК ДолжностьМОЛ
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ПриобретениеТоваровУслуг.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ПриобретениеТоваровУслуг.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.Склад.Наименование КАК МестоПриемки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаТоваров.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Код
	|	КОНЕЦ КАК ТоварКод,
	|	ТаблицаТоваров.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаТоваров.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	1 КАК КоличествоВОдномМесте,
	|	ТаблицаТоваров.КоличествоУпаковок КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоМест,
	|	ВЫБОР
	|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|						ТОГДА ТаблицаТоваров.Количество
	|					ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|				КОНЕЦ * &ТекстЗапросаВесУпаковки
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МассаБрутто,
	|	ВЫБОР
	|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|			ТОГДА ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МассаНетто,
	|	ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТоваров.Ссылка.ВернутьМногооборотнуюТару
	|			И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваров.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("ТаблицаТоваров.Упаковка", "ТаблицаТоваров.Номенклатура"));
		
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения", "ТаблицаТоваров.Номенклатура"));
	
	Запрос.УстановитьПараметр("КолонкаКодов",                  КолонкаКодов);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияВеса",          Константы.ЕдиницаИзмеренияВеса.Получить());
	Запрос.УстановитьПараметр("ЗаполненаЕдиницаИзмеренияВеса", ЗначениеЗаполнено(Константы.ЕдиницаИзмеренияВеса.Получить()));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 1
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Ссылка.Номер КАК Номер,
	|	Документ.Ссылка.Дата КАК Дата,
	|	Документ.Ссылка.Дата КАК ДатаДокумента,
	|	Документ.Ссылка.Организация КАК Организация,
	|	Документ.Ссылка.Организация.Префикс КАК Префикс,
	|	Документ.Склад КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Ссылка.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Ссылка.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Ссылка.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.Склад = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Ссылка.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Ссылка.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения1 КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения1 КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения1 КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Склад = Шапка.Склад
	|			И Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Аналитика.Склад КАК Склад,
	|	ВидыЗапасов.Упаковка КАК Упаковка,
	|	МИНИМУМ(ВидыЗапасов.НомерСтроки) КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения2 КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения2 КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения2 КАК ВидУпаковки,
	|	СУММА(ВидыЗапасов.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ВидыЗапасов.Количество) КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры.Склад = Шапка.Склад
	|			И ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.Ссылка,
	|	Шапка.Организация,
	|	Аналитика.Склад,
	|	Шапка.ПредварительныйРасчет,
	|	ВидыЗапасов.ВидЗапасов,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	ВидыЗапасов.Упаковка
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "ВидыЗапасов.Упаковка", "Аналитика.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "ВидыЗапасов.Упаковка", "Аналитика.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции


Функция СформироватьПечатнуюФормуНакладная(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	ИспользоватьРучныеСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВЗакупках");
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка                                   КАК Ссылка,
	|	ПриобретениеТоваровУслуг.Номер                                    КАК Номер,
	|	ПриобретениеТоваровУслуг.Дата                                     КАК Дата,
	|	ПриобретениеТоваровУслуг.Партнер                                  КАК Партнер,
	|	ПриобретениеТоваровУслуг.Контрагент                               КАК Поставщик,
	|	ПриобретениеТоваровУслуг.Организация                              КАК Организация,
	|	ПриобретениеТоваровУслуг.Организация.Префикс                      КАК Префикс,
	|	ПриобретениеТоваровУслуг.Валюта                                   КАК Валюта,
	|	ПриобретениеТоваровУслуг.ЦенаВключаетНДС                          КАК ЦенаВключаетНДС,
	|	ПриобретениеТоваровУслуг.Принял                      			 КАК ПолучениеПроизвел,
	|	ВЫБОР
	|		КОГДА
	|			ПриобретениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьНДС
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка В (&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код                                           КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул                                       КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование                              КАК ЕдиницаЦены,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное                          КАК Характеристика,
	|	ВложенныйЗапрос.Серия.Наименование							               КАК Серия,
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ                                                                      КАК Упаковка,
	|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                                                       КАК Цена,
	|	ВложенныйЗапрос.Количество                                                 КАК Количество,
	|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
	|	ВложенныйЗапрос.СуммаСкидки                                                КАК СуммаСкидки,
	|	ВложенныйЗапрос.СуммаБезСкидки                                             КАК СуммаБезСкидки,
	|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА
	|			ВложенныйЗапрос.Ссылка.ВернутьМногооборотнуюТару
	|			И ВложенныйЗапрос.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|ИЗ (
	|	ВЫБРАТЬ
	|		ПриобретениеТоваровУслуг.Ссылка КАК Ссылка,
	|		ПриобретениеТоваровУслуг.Номенклатура КАК Номенклатура,
	|
	|		ВЫБОР КОГДА ПриобретениеТоваровУслуг.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|			1
	|		ИНАЧЕ
	|			&ТекстЗапросаКоэффициентУпаковки2
	|		КОНЕЦ КАК Коэффициент,
	|
	|		ВЫБОР КОГДА ПриобретениеТоваровУслуг.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|			ПриобретениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ
	|			ПриобретениеТоваровУслуг.Упаковка
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|
	|		ПриобретениеТоваровУслуг.ПроцентРучнойСкидки         КАК ПроцентСкидки,
	|		ПриобретениеТоваровУслуг.Характеристика              КАК Характеристика,
	|		ПриобретениеТоваровУслуг.Серия              			КАК Серия,
	|		ПриобретениеТоваровУслуг.Упаковка                    КАК Упаковка,
	|		ПриобретениеТоваровУслуг.СтавкаНДС                   КАК СтавкаНДС,
	|		ПриобретениеТоваровУслуг.Цена                        КАК Цена,
	|		ПриобретениеТоваровУслуг.КоличествоУпаковок          КАК Количество,
	|		ПриобретениеТоваровУслуг.Сумма                       КАК Сумма,
	|		ПриобретениеТоваровУслуг.СуммаРучнойСкидки           КАК СуммаСкидки,
	|		ПриобретениеТоваровУслуг.Сумма +
	|		ПриобретениеТоваровУслуг.СуммаРучнойСкидки           КАК СуммаБезСкидки,
	|		ПриобретениеТоваровУслуг.СуммаНДС                    КАК СуммаНДС,
	|		ПриобретениеТоваровУслуг.НомерСтроки                 КАК НомерСтроки
	|	ИЗ
	|		Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслуг
	|	ГДЕ
	|		ПриобретениеТоваровУслуг.Ссылка В (&МассивДокументов)
	|		И ПриобретениеТоваровУслуг.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ
	|	СУММА(СуммаСкидки)
	|ПО
	|	Ссылка
	|");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВложенныйЗапрос.Упаковка",
			"ВложенныйЗапрос.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ПриобретениеТоваровУслуг.Упаковка",
			"ПриобретениеТоваровУслуг.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", 				МассивОбъектов);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриобретениеТоваровУслуг_Накладная";
	
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам 	= МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		// Если в накладной только услуги - перейдем к следующему документу
		
		Если НайденСледующий Тогда
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
			ЗаголовокСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ВыборкаПоТоварам, ИспользоватьРучныеСкидки);
			ЕстьСкидки = ЗаголовокСкидки.ЕстьСкидки;
			ВыборкаПоТоварам.Сбросить();
		Иначе
			Продолжить;
		КонецЕсли;
		
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриобретениеТоваровУслуг.ПФ_MXL_ПоступлениеТоваров");
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		
		СтруктураДанныхШапки = Новый Структура;
		СтруктураДанныхШапки.Вставить("ТекстЗаголовка", ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Приобретение товаров'")));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
		СтруктураДанныхПоставщик = Новый Структура;
		ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.Дата), "ПолноеНаименование");
		СтруктураДанныхПоставщик.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);
		СтруктураДанныхПоставщик.Вставить("Поставщик", ДанныеПечати.Поставщик);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПоставщик);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
		СтруктураДанныхПокупатель = Новый Структура;
		ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование");
		СтруктураДанныхПокупатель.Вставить("ПредставлениеПолучателя", ПредставлениеПолучателя);
		СтруктураДанныхПокупатель.Вставить("Получатель", ДанныеПечати.Организация);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПокупатель);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы Товары
		
		Если ЕстьСкидки Тогда
			ОбластьКолонкаТовар = Макет.Область("ТоварСоСкидкой");
		Иначе
			ОбластьКолонкаТовар = Макет.Область("Товар");
		КонецЕсли;
			
		Если Не ВыводитьКоды Тогда
			
			Если ЕстьСкидки Тогда
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.35;
			Иначе
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.2;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЕстьСкидки Тогда
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|ТоварСоСкидкой");
			ОбластьДанных  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой|ДанныеСоСкидкой");
			
			СтруктураЗаголовокСкидки = Новый Структура("Скидка, СуммаБезСкидки", 
				ЗаголовокСкидки.Скидка,
				ЗаголовокСкидки.СуммаСкидки);
			ОбластьДанных.Параметры.Заполнить(СтруктураЗаголовокСкидки);
			
		Иначе
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
			
		КонецЕсли;
			
		ТабличныйДокумент.Вывести(ОбластьНомера);
			
		Если ВыводитьКоды Тогда
			СтруктураДанныхКоды = Новый Структура("ИмяКолонкиКодов", КолонкаКодов);
			ОбластьКодов.Параметры.Заполнить(СтруктураДанныхКоды);
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
			
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		
		Если ЕстьСкидки Тогда
			
			ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|ТоварСоСкидкой");
			ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой|ДанныеСоСкидкой");
			
		Иначе
			
			ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицы|Данные");
			
		КонецЕсли;
			
		Сумма          = 0;
		СуммаНДС       = 0;
		ВсегоСкидок    = 0;
		НомерСтроки    = 0;
		ВсегоБезСкидок = 0;
		
		// Выводим строки таблицы Товары
			
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			СтруктураДанныхНомерСтроки = Новый Структура("НомерСтроки", НомерСтроки);
			ОбластьНомера.Параметры.Заполнить(СтруктураДанныхНомерСтроки);
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				СтруктураДанныхКоды = Новый Структура("Артикул", ВыборкаПоТоварам[КолонкаКодов]);
				ОбластьКодов.Параметры.Заполнить(СтруктураДанныхКоды);
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(ВыборкаПоТоварам);
			
			ДополнительныеПараметрыПолученияНаименованияДляПечати = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
			ДополнительныеПараметрыПолученияНаименованияДляПечати.ВозвратнаяТара = ВыборкаПоТоварам.ЭтоВозвратнаяТара;			
			
			Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоТоварам.ТоварНаименованиеПолное,
				ВыборкаПоТоварам.Характеристика,
				,
				ВыборкаПоТоварам.Серия,
				ДополнительныеПараметрыПолученияНаименованияДляПечати);
			СтруктураДанныхТовар = Новый Структура("Товар", Товар);
			ОбластьТовар.Параметры.Заполнить(СтруктураДанныхТовар);
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);

			ОбластьДанных.Параметры.Заполнить(ВыборкаПоТоварам);
			Если ЗаголовокСкидки.ЕстьСкидки Тогда
				СтруктураДанныхСуммаСкидки = Новый Структура("СуммаСкидки", 
					?(ЗаголовокСкидки.ТолькоНаценка,- ВыборкаПоТоварам.СуммаСкидки,ВыборкаПоТоварам.СуммаСкидки));
				ОбластьДанных.Параметры.Заполнить(СтруктураДанныхСуммаСкидки);
			КонецЕсли;

			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Сумма          = Сумма          + ВыборкаПоТоварам.Сумма;
			СуммаНДС       = СуммаНДС       + ВыборкаПоТоварам.СуммаНДС;
			
			Если ЕстьСкидки Тогда
				ВсегоСкидок    = ВсегоСкидок    + ВыборкаПоТоварам.СуммаСкидки;
				ВсегоБезСкидок = ВсегоБезСкидок + ВыборкаПоТоварам.СуммаБезСкидки;
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал
		
		Если ЕстьСкидки Тогда
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|ТоварСоСкидкой");
			ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой|ДанныеСоСкидкой");
			
		Иначе
			
			ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицы|Данные");
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		
		СтруктураДанныхВсегоСкидки = Новый Структура;
		Если ЕстьСкидки Тогда
			СтруктураДанныхВсегоСкидки.Вставить("ВсегоСкидок", ?(ЗаголовокСкидки.ТолькоНаценка,-ВсегоСкидок, ВсегоСкидок));
			СтруктураДанныхВсегоСкидки.Вставить("ВсегоБезСкидок", ВсегоБезСкидок);
		КонецЕсли;
		СтруктураДанныхВсегоСкидки.Вставить("Всего",  ФормированиеПечатныхФорм.ФорматСумм(Сумма));
		ОбластьДанных.Параметры.Заполнить(СтруктураДанныхВсегоСкидки);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		
		// Выводим ИтогоНДС
		
		Если ДанныеПечати.УчитыватьНДС Тогда
			
			Если ЕстьСкидки Тогда
				
				ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|НомерСтроки");
				ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|КолонкаКодов");
				ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|ТоварСоСкидкой");
				ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицыНДССоСкидкой|ДанныеСоСкидкой");
				
			Иначе
				
				ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|НомерСтроки");
				ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|КолонкаКодов");
				ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Товар");
				ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Данные");
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			
			СтруктураДанныхНДС = Новый Структура;
			СтруктураДанныхНДС.Вставить("ВсегоНДС", ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС));
			СтруктураДанныхНДС.Вставить("НДС", ?(ДанныеПечати.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:'"), НСтр("ru='Сумма НДС:'")));
			ОбластьДанных.Параметры.Заполнить(СтруктураДанныхНДС);
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		КонецЕсли;
		
		// Выводим Сумму прописью
		
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
		
		ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Всего наименований %1, на сумму %2'"),
			ВыборкаПоТоварам.Количество(),
			ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));
	
		СтруктураДанныхИтоговаяСтрока = Новый Структура;
		СтруктураДанныхИтоговаяСтрока.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
		СтруктураДанныхИтоговаяСтрока.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхИтоговаяСтрока);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		Если ЗначениеЗаполнено(ДанныеПечати.ПолучениеПроизвел) Тогда
			СтруктураДанныхПолучениеПроизвел = Новый Структура;
			СтруктураДанныхПолучениеПроизвел.Вставить("ПолучениеПроизвел", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.ПолучениеПроизвел, ДанныеПечати.Дата));
			ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПолучениеПроизвел);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;

КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище
//
// Возвращаемое значение:
//	Адрес   - адрес структуры данных во временном хранилище
//
Функция ДанныеДляПечатиЭтикеток(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриобретениеТоваровУслугТовары.Номенклатура   КАК Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|
	|	ВЫБОР КОГДА ПриобретениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|		ЦеныНоменклатуры.Упаковка
	|	ИНАЧЕ
	|		ПриобретениеТоваровУслугТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|
	|	МИНИМУМ(ПриобретениеТоваровУслугТовары.НомерСтроки) КАК Порядок,
	|	СУММА(
	|		ВЫБОР КОГДА ПриобретениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|			ПриобретениеТоваровУслугТовары.КоличествоУпаковок * (ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1))
	|		ИНАЧЕ
	|			ПриобретениеТоваровУслугТовары.КоличествоУпаковок
	|		КОНЕЦ) КАК Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатуры
	|		ПО ЦеныНоменклатуры.Номенклатура   = ПриобретениеТоваровУслугТовары.Номенклатура
	|		 И ЦеныНоменклатуры.Характеристика = ПриобретениеТоваровУслугТовары.Характеристика
	|		 И ЦеныНоменклатуры.ВидЦены        = ПриобретениеТоваровУслугТовары.Ссылка.Склад.РозничныйВидЦены
	|	
	|ГДЕ
	|	ПриобретениеТоваровУслугТовары.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриобретениеТоваровУслугТовары.Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Характеристика,
	|	ВЫБОР КОГДА ПриобретениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|		ЦеныНоменклатуры.Упаковка
	|	ИНАЧЕ
	|		ПриобретениеТоваровУслугТовары.Упаковка
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриобретениеТоваровУслуг.Организация            КАК Организация,
	|	ПриобретениеТоваровУслуг.Склад                  КАК Склад,
	|	ПриобретениеТоваровУслуг.Склад.РозничныйВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка В(&МассивДокументов)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ПриобретениеТоваровУслугТовары.Упаковка",
			"ПриобретениеТоваровУслугТовары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЦеныНоменклатуры.Упаковка",
			"ЦеныНоменклатуры.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивОрганизаций = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Организация").ВыгрузитьКолонку(0);
	МассивСкладов     = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Склад").ВыгрузитьКолонку(0);
	МассивВидовЦен    = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "ВидЦены").ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", ?(МассивОрганизаций.Количество() = 1, МассивОрганизаций[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад",       ?(МассивСкладов.Количество() = 1,     МассивСкладов[0],     МассивСкладов));
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1,    МассивВидовЦен[0],    Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Истина);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЭтикеток");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЭтикетокПоДокументу");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//	Адрес - адрес структуры данных во временном хранилище
//
Функция ДанныеДляПечатиЦенников(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриобретениеТоваровУслугТовары.Номенклатура   КАК Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|
	|	ВЫБОР КОГДА ПриобретениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|		ЦеныНоменклатуры.Упаковка
	|	ИНАЧЕ
	|		ПриобретениеТоваровУслугТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|
	|	МИНИМУМ(ПриобретениеТоваровУслугТовары.НомерСтроки) КАК Порядок,
	|	СУММА(
	|		ВЫБОР КОГДА ПриобретениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|			ПриобретениеТоваровУслугТовары.КоличествоУпаковок * (ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1))
	|		ИНАЧЕ
	|			ПриобретениеТоваровУслугТовары.КоличествоУпаковок
	|		КОНЕЦ) КАК Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатуры
	|		ПО ЦеныНоменклатуры.Номенклатура   = ПриобретениеТоваровУслугТовары.Номенклатура
	|		 И ЦеныНоменклатуры.Характеристика = ПриобретениеТоваровУслугТовары.Характеристика
	|		 И ЦеныНоменклатуры.ВидЦены        = ПриобретениеТоваровУслугТовары.Ссылка.Склад.РозничныйВидЦены
	|	
	|ГДЕ
	|	ПриобретениеТоваровУслугТовары.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриобретениеТоваровУслугТовары.Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Характеристика,
	|	ВЫБОР КОГДА ПриобретениеТоваровУслугТовары.Ссылка.Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.РозничныйМагазин) ТОГДА
	|		ЦеныНоменклатуры.Упаковка
	|	ИНАЧЕ
	|		ПриобретениеТоваровУслугТовары.Упаковка
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриобретениеТоваровУслуг.Организация            КАК Организация,
	|	ПриобретениеТоваровУслуг.Склад                  КАК Склад,
	|	ПриобретениеТоваровУслуг.Склад.РозничныйВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка В(&МассивДокументов)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ПриобретениеТоваровУслугТовары.Упаковка",
			"ПриобретениеТоваровУслугТовары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЦеныНоменклатуры.Упаковка",
			"ЦеныНоменклатуры.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивОрганизаций = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Организация").ВыгрузитьКолонку(0);
	МассивСкладов     = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Склад").ВыгрузитьКолонку(0);
	МассивВидовЦен    = ОбщегоНазначенияУТ.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "ВидЦены").ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", ?(МассивОрганизаций.Количество() = 1, МассивОрганизаций[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад",       ?(МассивСкладов.Количество() = 1,     МассивСкладов[0],     МассивСкладов));
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1,    МассивВидовЦен[0],    Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Истина);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЦенников");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЦенниковПоДокументу");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

Функция СформироватьПечатнуюФормуПриходнаяНакладная(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриобретениеТоваровУслуг_ПриходнаяНакладная";
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ИспользованиеУпаковок = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация КАК Организация,
	|	Документы.Контрагент КАК Контрагент,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.Организация.Префикс КАК Префикс
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Склад КАК Склад,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	Товары.Номенклатура.Код КАК Код,
	|	Товары.Номенклатура.Артикул КАК Артикул,
	|	Товары.Номенклатура.НаименованиеПолное КАК Номенклатура,
	|	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА
	|			Товары.Ссылка.ВернутьМногооборотнуюТару
	|			И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|	И Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	Товары.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Товары.Упаковка",
			"Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриобретениеТоваровУслуг.ПФ_MXL_ПриходнаяНакладная");
	
	Смещать = ТипСмещенияТабличногоДокумента.ПоВертикали;
	ШиринаУдаленныхКолонок = 0;
	Если КолонкаКодов <> "Артикул" Тогда
		ШиринаУдаленныхКолонок = ШиринаУдаленныхКолонок + Макет.Область("Артикул").ШиринаКолонки;
		Макет.УдалитьОбласть(Макет.Область("Артикул"), Смещать);
	КонецЕсли;
	Если КолонкаКодов<>"Код" Тогда
		ШиринаУдаленныхКолонок = ШиринаУдаленныхКолонок + Макет.Область("Код").ШиринаКолонки;
		Макет.УдалитьОбласть(Макет.Область("Код"), Смещать);
	КонецЕсли;
	
	Если Не ИспользованиеУпаковок Тогда
		ШиринаУдаленныхКолонок = ШиринаУдаленныхКолонок + Макет.Область("УпаковкаКоличество").ШиринаКолонки;
		Макет.УдалитьОбласть(Макет.Область("УпаковкаКоличество"), Смещать);
		ШиринаУдаленныхКолонок = ШиринаУдаленныхКолонок + Макет.Область("УпаковкаПредставление").ШиринаКолонки;
		Макет.УдалитьОбласть(Макет.Область("УпаковкаПредставление"), Смещать);
	КонецЕсли;
	ОбластьПервойКолонкиТоваров = Макет.Область("ПерваяКолонкаТовара");
	ОбластьПервойКолонкиТоваров.ШиринаКолонки = ОбластьПервойКолонкиТоваров.ШиринаКолонки + ШиринаУдаленныхКолонок;
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Создание массива для проверки: какие из докуметов не попали в выборку
	МассивПроверки = Новый Массив;
	Для Каждого Ссылка Из МассивОбъектов Цикл
		МассивПроверки.Добавить(Ссылка);
	КонецЦикла;
	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс, Представление, ПредставлениеРаспоряжения, ПредставлениеОрганизации, ПредставлениеПартнера");
	РеквизитыДокумента.Вставить("ТекстЗаголовка", НСтр("ru='Приходная накладная'"));
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПроверки.Удалить(МассивПроверки.Найти(ДанныеПечати.Ссылка));
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ДанныеПечати);
		РеквизитыДокумента.ПредставлениеРаспоряжения = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, НСтр("ru='Приобретение товаров'"));
		РеквизитыДокумента.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеПечати.Организация,
				ДанныеПечати.Дата
			),
			"ПолноеНаименование");
		РеквизитыДокумента.ПредставлениеПартнера = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ДанныеПечати.Контрагент,
				ДанныеПечати.Дата
			),
			"ПолноеНаименование");
		
		ВыборкаПоСкладам = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСкладам.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			Область = Макет.ПолучитьОбласть("Заголовок");
			Область.Параметры.Заполнить(РеквизитыДокумента);
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, Область, ДанныеПечати.Ссылка);
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Шапка");
			Область.Параметры.Заполнить(РеквизитыДокумента);
			СтруктураДанныхШапка = Новый Структура;
			СтруктураДанныхШапка.Вставить("ПредставлениеСклада", ВыборкаПоСкладам.Склад);
			Область.Параметры.Заполнить(СтруктураДанныхШапка);
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Поставщик");
			Область.Параметры.Заполнить(РеквизитыДокумента);
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Покупатель");
			Область.Параметры.Заполнить(РеквизитыДокумента);
			ТабличныйДокумент.Вывести(Область);
			
			ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицы"));
			
			СчетСтрок = 1;
			ВыборкаПоТоварам = ВыборкаПоСкладам.Выбрать();
			Пока ВыборкаПоТоварам.Следующий() Цикл
				
				Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
				СтруктураДанныхНомерСтроки = Новый Структура("НомерСтроки", СчетСтрок);
				Область.Параметры.Заполнить(СтруктураДанныхНомерСтроки);
				
				СчетСтрок = СчетСтрок + 1;
				ДополнительныеПараметрыПолученияНаименованияДляПечати = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
				ДополнительныеПараметрыПолученияНаименованияДляПечати.ВозвратнаяТара = ВыборкаПоТоварам.ЭтоВозвратнаяТара;
				
				Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоТоварам.Номенклатура,
					ВыборкаПоТоварам.Характеристика,
					,
					,
					ДополнительныеПараметрыПолученияНаименованияДляПечати);
					
				СтруктураДанныхТовар = Новый Структура("Товар", Товар);
				Область.Параметры.Заполнить(СтруктураДанныхТовар);
				Область.Параметры.Заполнить(ВыборкаПоТоварам);
				ТабличныйДокумент.Вывести(Область);
				
			КонецЦикла;
			
			Область = Макет.ПолучитьОбласть("ПодвалТаблицы");
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Подписи");
			ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
			СтруктураДанныхИтоговаяСтрока = Новый Структура;
			СтруктураДанныхИтоговаяСтрока.Вставить("ИтоговаяСтрока", ТекстИтоговойСтроки);
			Область.Параметры.Заполнить(СтруктураДанныхИтоговаяСтрока);
			ТабличныйДокумент.Вывести(Область);
			
		КонецЦикла;
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Для Каждого Ссылка Из МассивПроверки Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(
				НСтр("ru = 'В документе %Ссылка% отсутствуют товары. Печать приходной накладной не требуется.'"),
				"%Ссылка%",
				Ссылка
			),
			Ссылка);
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуАктОбОказанииУслуг(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	ИспользоватьРучныеСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВЗакупках");
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка              КАК Ссылка,
	|	ПриобретениеТоваровУслуг.Номер               КАК Номер,
	|	ПриобретениеТоваровУслуг.Дата                КАК Дата,
	|	ПриобретениеТоваровУслуг.Партнер             КАК Партнер,
	|	ПриобретениеТоваровУслуг.Контрагент          КАК Контрагент,
	|	ПриобретениеТоваровУслуг.Организация         КАК Организация,
	|	ПриобретениеТоваровУслуг.Организация.Префикс КАК Префикс,
	|	ПриобретениеТоваровУслуг.Валюта              КАК Валюта,
	|	ПриобретениеТоваровУслуг.ЦенаВключаетНДС     КАК ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА
	|			ПриобретениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                                             КАК УчитыватьНДС,
	|	ПриобретениеТоваровУслуг.Склад.ТекущийОтветственный.Наименование   КАК ОтпускПроизвел
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка В (&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК УслугаНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код                                           КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул                                       КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование                              КАК ЕдиницаЦены,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное                          КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1 
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ                                                                      КАК Упаковка,
	|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                                                       КАК Цена,
	|	ВложенныйЗапрос.Количество                                                 КАК Количество,
	|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
	|	ВложенныйЗапрос.СуммаСкидки                                                КАК СуммаСкидки,
	|	ВложенныйЗапрос.СуммаБезСкидки                                             КАК СуммаБезСкидки,
	|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
	|	Ложь                                                                       КАК ЭтоВозвратнаяТара
	|ИЗ (
	|	ВЫБРАТЬ
	|		ПриобретениеТоваровУслуг.Ссылка КАК Ссылка,
	|		ПриобретениеТоваровУслуг.Номенклатура КАК Номенклатура,
	|
	|		ВЫБОР КОГДА ПриобретениеТоваровУслуг.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|			1
	|		ИНАЧЕ
	|			&ТекстЗапросаКоэффициентУпаковки2
	|		КОНЕЦ КАК Коэффициент,
	|		&ТекстЗапросаЕдиницаИзмерения 						КАК ЕдиницаИзмерения,
	|		ПриобретениеТоваровУслуг.ПроцентРучнойСкидки         КАК ПроцентСкидки,
	|		ПриобретениеТоваровУслуг.Характеристика              КАК Характеристика,
	|		ПриобретениеТоваровУслуг.Упаковка                    КАК Упаковка,
	|		ПриобретениеТоваровУслуг.СтавкаНДС                   КАК СтавкаНДС,
	|		ПриобретениеТоваровУслуг.Цена                        КАК Цена,
	|		ПриобретениеТоваровУслуг.КоличествоУпаковок          КАК Количество,
	|		ПриобретениеТоваровУслуг.Сумма                       КАК Сумма,
	|		ПриобретениеТоваровУслуг.СуммаРучнойСкидки           КАК СуммаСкидки,
	|		ПриобретениеТоваровУслуг.Сумма +
	|		ПриобретениеТоваровУслуг.СуммаРучнойСкидки           КАК СуммаБезСкидки,
	|		ПриобретениеТоваровУслуг.СуммаНДС                    КАК СуммаНДС,
	|		ПриобретениеТоваровУслуг.НомерСтроки                 КАК НомерСтроки
	|	ИЗ
	|		Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслуг
	|	ГДЕ
	|		ПриобретениеТоваровУслуг.Ссылка В (&МассивДокументов)
	|		И ПриобретениеТоваровУслуг.Номенклатура.ТипНоменклатуры В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|	
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ
	|	СУММА(СуммаСкидки)
	|ПО
	|	Ссылка
	|");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВложенныйЗапрос.Упаковка",
			"ВложенныйЗапрос.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ПриобретениеТоваровУслуг.Упаковка",
			"ПриобретениеТоваровУслуг.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ПриобретениеТоваровУслуг.Упаковка",
			"ПриобретениеТоваровУслуг.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриобретениеТоваровУслуг_Акт";
	
	МассивРезультатов   = Запрос.ВыполнитьПакет();
	ДанныеПечати        = МассивРезультатов[0].Выбрать();;
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);;
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		// Если в накладной только услуги - перейдем к следующему документу
		Если НайденСледующий Тогда
			ВыборкаПоУслугам = ВыборкаПоДокументам.Выбрать();
			ЗаголовокСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ВыборкаПоУслугам, ИспользоватьРучныеСкидки);
			ЕстьСкидки = ЗаголовокСкидки.ЕстьСкидки;
			ВыборкаПоУслугам.Сбросить();
		Иначе
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В документе %1 отсутствуют услуги. Печать акта об оказании услуг не требуется.'"),
				ДанныеПечати.Ссылка);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка);
			
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПриобретениеТоваровУслуг.ПФ_MXL_Акт");
		
		// Выводим шапку акта
		
		ОбластьМакета                          = Макет.ПолучитьОбласть("Заголовок");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		
		ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Акт'"));
		
		СтруктураДанныхШапки = Новый Структура;
		СтруктураДанныхШапки.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
		СтруктураДанныхПоставщик = Новый Структура;
		ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата), "ПолноеНаименование");
		СтруктураДанныхПоставщик.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);
		СтруктураДанныхПоставщик.Вставить("Поставщик", ДанныеПечати.Контрагент);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПоставщик);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
		СтруктураДанныхПокупатель = Новый Структура;
		ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование");
		СтруктураДанныхПокупатель.Вставить("ПредставлениеПолучателя", ПредставлениеПолучателя);
		СтруктураДанныхПокупатель.Вставить("Получатель", ДанныеПечати.Организация);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПокупатель);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы Услуги
		
		Если ЕстьСкидки Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой");
			ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаСоСкидкой");
			
			СтруктураЗаголовокСкидки = Новый Структура("Скидка, СуммаБезСкидки", 
				ЗаголовокСкидки.Скидка,
				ЗаголовокСкидки.СуммаСкидки);
			ОбластьМакета.Параметры.Заполнить(СтруктураЗаголовокСкидки);
		Иначе
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Сумма       = 0;
		СуммаНДС    = 0;
		НомерСтроки = 0;
		
		// Выводим строки таблицы Услуги
		
		Пока ВыборкаПоУслугам.Следующий() Цикл
		
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтроки.Параметры.Заполнить(ВыборкаПоУслугам);
			
			СтруктураДанныхСтроки = Новый Структура;
			СтруктураДанныхСтроки.Вставить("НомерСтроки", НомерСтроки);
			СтруктураДанныхСтроки.Вставить("Товар", НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоУслугам.УслугаНаименованиеПолное,
				ВыборкаПоУслугам.Характеристика));
			
			Если ЕстьСкидки Тогда
				СтруктураДанныхСтроки.Вставить("Скидка", ?(ЗаголовокСкидки.ТолькоНаценка,- ВыборкаПоУслугам.СуммаСкидки,ВыборкаПоУслугам.СуммаСкидки));
				СтруктураДанныхСтроки.Вставить("СуммаБезСкидки", ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоУслугам.Сумма + ВыборкаПоУслугам.СуммаСкидки));
			КонецЕсли;
			ОбластьСтроки.Параметры.Заполнить(СтруктураДанныхСтроки);
			
			Сумма    = Сумма    + ВыборкаПоУслугам.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаПоУслугам.СуммаНДС;
			
			ТабличныйДокумент.Вывести(ОбластьСтроки);
		
		КонецЦикла;
		
		ОбластьМакета                 = Макет.ПолучитьОбласть("Итого");
		СтруктураДанныхВсего = Новый Структура;
		СтруктураДанныхВсего.Вставить("Всего", ФормированиеПечатныхФорм.ФорматСумм(Сумма));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхВсего);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если ДанныеПечати.УчитыватьНДС Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
			СтруктураДанныхИтогоНДС = Новый Структура;
			
			СтруктураДанныхИтогоНДС.Вставить("ВсегоНДС", ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС));
			СтруктураДанныхИтогоНДС.Вставить("НДС", ?(ДанныеПечати.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС'"), НСтр("ru = 'Сумма НДС'")));
			ОбластьМакета.Параметры.Заполнить(СтруктураДанныхИтогоНДС);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;

		СуммаКПрописи                          = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
		ОбластьМакета                          = Макет.ПолучитьОбласть("СуммаПрописью");
		
		ИтоговаяСтрока = НСтр("ru = 'Всего оказано услуг %КоличествоНаименований%, на сумму %СуммаДокумента%'");
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", НомерСтроки);
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));
		
		СтруктураДанныхИтоговаяСтрока = Новый Структура;
		СтруктураДанныхИтоговаяСтрока.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
		СтруктураДанныхИтоговаяСтрока.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхИтоговаяСтрока);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузоотправитель");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузополучатель");
	
КонецПроцедуры

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПересчитыватьВВалютуРегл - Булево - Признак необходимости пересчета сумм табличной части в валюте регламентированного учета.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПересчитыватьВВалютуРегл = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПересчитыватьВВалютуРегл);
	
	Если ПересчитыватьВВалютуРегл Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		РасчетыСПоставщиками.Регистратор = ДанныеДокументов.Ссылка
		|
		|ГДЕ
		|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
		|	И РасчетыСПоставщиками.Активность
		|";
		ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
		МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
		
		Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
			КонецРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
			АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
			АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
			Попытка
				РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСПоставщиками(КонецРасчета, АналитикиРасчета);
			Исключение
				ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
				|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                          КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                        КАК Характеристика,
	|	ТаблицаДокумента.Количество                            КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок                    КАК КоличествоУпаковок,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	ТаблицаДокумента.Упаковка                              КАК Упаковка,
	|   &ТекстЗапросаЕдиницаИзмерения 						   КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Склад                                 КАК Склад
	|
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта = &ВалютаРегламентированногоУчета
	|	ИЛИ (НЕ &ПересчитыватьВВалютуРегл)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок                     КАК КоличествоУпаковок,
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл, 0) КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаНДСРегл, 0)    КАК СуммаНДС,
	|	ТаблицаДокумента.Упаковка                               КАК Упаковка,
	|   &ТекстЗапросаЕдиницаИзмерения							КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Склад                                  КАК Склад
	|
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
	|	И &ПересчитыватьВВалютуРегл
	|	И СуммыДокументовВВалютеРегл.Активность
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаДокумента.Упаковка",
			"ТаблицаДокумента.Номенклатура"));
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПересчитатьТаблицуТоваров(Запрос)
	
	ЗапросПредварительный = Новый Запрос;
	ЗапросПредварительный.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросПредварительный.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС                             КАК СуммаСНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И (ТаблицаДокумента.Номенклатура.ТипНоменклатуры = &МногооборотнаяТара И &ВернутьМногооборотнуюТару
	|		И &ХозяйственнаяОперация В (&ОперацииДляПересчетаМногооборотнойТары)
	|		ИЛИ &ХозяйственнаяОперация В (&ОперацииДляПересчета))
	|";
	
	ОперацииДляПересчета = Новый Массив;
	ОперацииДляПересчета.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	ОперацииДляПересчета.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаКомиссию);
	
	ОперацииДляПересчетаМногооборотнойТары = Новый Массив;
	ОперацииДляПересчетаМногооборотнойТары.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ОперацииДляПересчетаМногооборотнойТары.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	ОперацииДляПересчетаМногооборотнойТары.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	ОперацииДляПересчетаМногооборотнойТары.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
	
	ЗапросПредварительный.УстановитьПараметр("ОперацииДляПересчета", ОперацииДляПересчета);
	ЗапросПредварительный.УстановитьПараметр("ОперацииДляПересчетаМногооборотнойТары", ОперацииДляПересчетаМногооборотнойТары);
	ЗапросПредварительный.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросПредварительный.УстановитьПараметр("Период", Запрос.Параметры.Период);
	ЗапросПредварительный.УстановитьПараметр("Валюта", Запрос.Параметры.Валюта);
	ЗапросПредварительный.УстановитьПараметр("МногооборотнаяТара", Запрос.Параметры.МногооборотнаяТара);
	ЗапросПредварительный.УстановитьПараметр("ВернутьМногооборотнуюТару", Запрос.Параметры.ВернутьМногооборотнуюТару);
	ЗапросПредварительный.УстановитьПараметр("ХозяйственнаяОперация", Запрос.Параметры.ХозяйственнаяОперация);
	
	ЗапросПредварительный.Выполнить();
	
	ВалютыДляПересчета = Новый Структура;
	ВалютыДляПересчета.Вставить("Регл", Запрос.Параметры.ВалютаРегламентированногоУчета);
	ВалютыДляПересчета.Вставить("Упр", Запрос.Параметры.ВалютаУправленческогоУчета);
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалюты(Запрос.МенеджерВременныхТаблиц, ВалютыДляПересчета);
	
КонецПроцедуры

#КонецОбласти

#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl" и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов 
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

#КонецОбласти 

#Область Прочее

Функция ПолноеИмяОбъекта()
	Возврат "Документ.ПриобретениеТоваровУслуг";
КонецФункции

// Осуществляет инициализацию структуры состояния расчетов
Функция СтруктураСостоянияРасчетов()
	
	СтруктураСостоянияРасчетов = Новый Структура;
	СтруктураСостоянияРасчетов.Вставить("СуммаОплаты", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаПоступления", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентОплаты", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентПоступления", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаПросроченнойОплаты", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаДолга", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентДолга", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаКОплате", 0);
	
	Возврат СтруктураСостоянияРасчетов
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область Заполнение

// Формирует результат запроса по непоставленной части заказов
//
// Параметры:
//	ДанныеОтбора     - Структура - поля, по которым будут отобраны остатки заказов
//	СкладПоступления - СправочникСсылка.Склады - склад, по которому будут отобраны остатки заказов
//	МассивЗаказов      Массив - заказы, по которым будут отобраны остатки
//
// Вовращаемое значение:
//	Результат запроса - результат запроса по непоставленной части заказов
//
Функция ПолучитьРезультатЗапросаПоОстаткамЗаказов(ДанныеОтбора, СкладПоступления = Неопределено,
		МассивЗаказов = Неопределено)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивЗаказов",             МассивЗаказов);
	Запрос.УстановитьПараметр("Партнер",                   ДанныеОтбора.Партнер);
	Запрос.УстановитьПараметр("Контрагент",                ДанныеОтбора.Контрагент);
	Запрос.УстановитьПараметр("Договор",                   ДанныеОтбора.Договор);
	Запрос.УстановитьПараметр("ВариантПриемкиТоваров",     ДанныеОтбора.ВариантПриемкиТоваров);
	Запрос.УстановитьПараметр("Организация",               ДанныеОтбора.Организация);
	Запрос.УстановитьПараметр("Соглашение",                ДанныеОтбора.Соглашение);
	
	Если ДанныеОтбора.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет Или
		ДанныеОтбора.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо Тогда
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	Иначе
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", ДанныеОтбора.ХозяйственнаяОперация);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов",      ДанныеОтбора.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("НалогообложениеНДС",        ДанныеОтбора.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ПорядокРасчетов",           ДанныеОтбора.ПорядокРасчетов);
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару", ДанныеОтбора.ВернутьМногооборотнуюТару);

	Запрос.УстановитьПараметр("ЦенаВключаетНДС",           ДанныеОтбора.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("Регистратор",               ДанныеОтбора.Ссылка);
	Запрос.УстановитьПараметр("СкладПоступления",          СкладПоступления);
	Запрос.УстановитьПараметр("ОтобратьПоЗаказу",          МассивЗаказов <> Неопределено);
	Запрос.УстановитьПараметр("ТекущаяДата",               НачалоДня(ТекущаяДатаСеанса()));
	Если ДанныеОтбора.ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоЗаказамНакладным 
		И ДанныеОтбора.НаправлениеДеятельности = Справочники.НаправленияДеятельности.ПустаяСсылка() Тогда
		Запрос.УстановитьПараметр("БезОтбораПоНаправлениямДеятельности", Истина);
	Иначе
		Запрос.УстановитьПараметр("БезОтбораПоНаправлениямДеятельности", Ложь);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НаправлениеДеятельности", ДанныеОтбора.НаправлениеДеятельности);
	
	Если ТипЗнч(ДанныеОтбора) = Тип("Структура")
		И ДанныеОтбора.Свойство("ТоварыНакладной") Тогда
		
		Запрос.УстановитьПараметр("ТоварыНакладной", ДанныеОтбора.ТоварыНакладной);
		
	Иначе
		ТоварыНакладной = Новый ТаблицаЗначений;
		ТоварыНакладной.Колонки.Добавить("ЗаказПоставщику", Новый ОписаниеТипов("ДокументСсылка.ЗаказПоставщику"));
		ТоварыНакладной.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТоварыНакладной.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТоварыНакладной.Колонки.Добавить("КодСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0)));
		ТоварыНакладной.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
		ТоварыНакладной.Колонки.Добавить("СуммаВзаиморасчетов", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		ТоварыНакладной.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
		ТоварыНакладной.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0)));
		ТоварыНакладной.Колонки.Добавить("Упаковка", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
		ТоварыНакладной.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		ТоварыНакладной.Колонки.Добавить("КоличествоВЗаказе", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
		ТоварыНакладной.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		ТоварыНакладной.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
		ТоварыНакладной.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		ТоварыНакладной.Колонки.Добавить("СуммаНДС", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		ТоварыНакладной.Колонки.Добавить("СуммаСНДС", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		ТоварыНакладной.Колонки.Добавить("ПроцентРучнойСкидки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 2)));
		ТоварыНакладной.Колонки.Добавить("СуммаРучнойСкидки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		ТоварыНакладной.Колонки.Добавить("Сделка", Новый ОписаниеТипов("СправочникСсылка.СделкиСКлиентами"));
		ТоварыНакладной.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
		ТоварыНакладной.Колонки.Добавить("АналитикаРасходов", Новый ОписаниеТипов("СправочникСсылка.ПрочиеРасходы"));
		ТоварыНакладной.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
		ТоварыНакладной.Колонки.Добавить("СписатьНаРасходы", Новый ОписаниеТипов("Булево"));
		ТоварыНакладной.Колонки.Добавить("ВидЦеныПоставщика", Новый ОписаниеТипов("СправочникСсылка.ВидыЦенПоставщиков"));
		ТоварыНакладной.Колонки.Добавить("НоменклатураПоставщика", Новый ОписаниеТипов("СправочникСсылка.НоменклатураПоставщиков"));
		ТоварыНакладной.Колонки.Добавить("Назначение", Новый ОписаниеТипов("СправочникСсылка.Назначения"));
		
		Запрос.УстановитьПараметр("ТоварыНакладной", ТоварыНакладной);
	КонецЕсли;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаЗаказы.ЗаказПоставщику        КАК ЗаказПоставщику,
	|	ТаблицаЗаказы.Номенклатура           КАК Номенклатура,
	|	ТаблицаЗаказы.Характеристика         КАК Характеристика,
	|	ТаблицаЗаказы.КодСтроки              КАК КодСтроки,
	|	ТаблицаЗаказы.Склад                  КАК Склад,
	|	СУММА(ТаблицаЗаказы.КОформлению)     КАК Количество
	|
	|ПОМЕСТИТЬ ТаблицаОстатки
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.ЗаказПоставщику        КАК ЗаказПоставщику,
	|		ЗаказыОстатки.Номенклатура           КАК Номенклатура,
	|		ЗаказыОстатки.Характеристика         КАК Характеристика,
	|		ЗаказыОстатки.КодСтроки              КАК КодСтроки,
	|		ЗаказыОстатки.Склад                  КАК Склад,
	|		ЗаказыОстатки.КОформлениюОстаток     КАК КОформлению
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(,
	|				ВЫБОР КОГДА &ОтобратьПоЗаказу ТОГДА
	|					ЗаказПоставщику В (&МассивЗаказов)
	|				ИНАЧЕ
	|					ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Партнер = &Партнер
	|					И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Контрагент = &Контрагент
	|					И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Договор = &Договор
	|					И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ВариантПриемкиТоваров = &ВариантПриемкиТоваров
	|					И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Организация = &Организация
	|					И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ХозяйственнаяОперация = &ХозяйственнаяОперация
	|					И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Соглашение = &Соглашение
	|					И (ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).Валюта = &ВалютаВзаиморасчетов
	|						ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию))
	|					И (ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).НалогообложениеНДС = &НалогообложениеНДС
	|						И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ПорядокРасчетов = &ПорядокРасчетов)
	|					И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ЦенаВключаетНДС = &ЦенаВключаетНДС
	|					И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ВернутьМногооборотнуюТару = &ВернутьМногооборотнуюТару
	|					И (&БезОтбораПоНаправлениямДеятельности 
	|						ИЛИ ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).НаправлениеДеятельности = &НаправлениеДеятельности 
	|						ИЛИ ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				КОНЕЦ
	|				И
	|				ВЫБОР
	|					КОГДА
	|						ВЫРАЗИТЬ(&СкладПоступления КАК Справочник.Склады).ЭтоГруппа
	|					ТОГДА
	|						Склад В ИЕРАРХИИ (&СкладПоступления) ИЛИ Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|					ИНАЧЕ
	|						Склад В (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), &СкладПоступления)
	|				КОНЕЦ
	|			) КАК ЗаказыОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗаказыДвижения.ЗаказПоставщику,
	|		ЗаказыДвижения.Номенклатура,
	|		ЗаказыДвижения.Характеристика,
	|		ЗаказыДвижения.КодСтроки,
	|		ЗаказыДвижения.Склад,
	|		ВЫБОР КОГДА ЗаказыДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				-ЗаказыДвижения.КОформлению
	|			ИНАЧЕ
	|				ЗаказыДвижения.КОформлению
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам КАК ЗаказыДвижения
	|	ГДЕ
	|		ЗаказыДвижения.Регистратор = &Регистратор
	|		И ВЫБОР КОГДА &ОтобратьПоЗаказу ТОГДА
	|			ЗаказыДвижения.ЗаказПоставщику В (&МассивЗаказов)
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).Партнер = &Партнер
	|			И ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).Контрагент = &Контрагент
	|			И ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).Договор = &Договор
	|			И ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).ВариантПриемкиТоваров = &ВариантПриемкиТоваров
	|			И ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).Организация = &Организация
	|			И ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).ХозяйственнаяОперация = &ХозяйственнаяОперация
	|			И ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).Соглашение = &Соглашение
	|					И (ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).Валюта = &ВалютаВзаиморасчетов
	|						ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию))
	|					И (ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).НалогообложениеНДС = &НалогообложениеНДС
	|						И ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).ПорядокРасчетов = &ПорядокРасчетов)
	|			И ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).ЦенаВключаетНДС = &ЦенаВключаетНДС
	|			И ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).ВернутьМногооборотнуюТару = &ВернутьМногооборотнуюТару
	|			И (&БезОтбораПоНаправлениямДеятельности 
	|				ИЛИ (ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).НаправлениеДеятельности = &НаправлениеДеятельности 
	|						ИЛИ ВЫРАЗИТЬ(ЗаказыДвижения.ЗаказПоставщику КАК Документ.ЗаказПоставщику).НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)))
	|		КОНЕЦ
	|		И ЗаказыДвижения.Активность
	|				И ВЫБОР
	|					КОГДА
	|						ВЫРАЗИТЬ(&СкладПоступления КАК Справочник.Склады).ЭтоГруппа
	|					ТОГДА
	|						ЗаказыДвижения.Склад В ИЕРАРХИИ (&СкладПоступления) ИЛИ Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|					ИНАЧЕ
	|						ЗаказыДвижения.Склад В (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), &СкладПоступления)
	|				КОНЕЦ
	|	) КАК ТаблицаЗаказы
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаЗаказы.ЗаказПоставщику,
	|		ТаблицаЗаказы.Номенклатура,
	|		ТаблицаЗаказы.Характеристика,
	|		ТаблицаЗаказы.КодСтроки,
	|		ТаблицаЗаказы.Склад
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ТаблицаЗаказы.КОформлению) > 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Регистратор КАК ЗаказПоставщику,
	|	ВЫРАЗИТЬ(ТоварыНакладной.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТоварыНакладной.Характеристика КАК Характеристика,
	|	ТоварыНакладной.КодСтроки КАК КодСтроки,
	|	ТоварыНакладной.Количество КАК Количество,
	|	ТоварыНакладной.Сумма КАК СуммаВзаиморасчетов,
	|	ВЫРАЗИТЬ(ТоварыНакладной.Склад КАК Справочник.Склады) КАК Склад,
	|	ТоварыНакладной.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(ТоварыНакладной.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения) КАК Упаковка,
	|	ТоварыНакладной.Серия КАК Серия,
	|	ТоварыНакладной.ВидЦеныПоставщика КАК ВидЦеныПоставщика,
	|	ТоварыНакладной.Количество КАК КоличествоВЗаказе,
	|	ТоварыНакладной.Цена КАК Цена,
	|	ТоварыНакладной.СтавкаНДС КАК СтавкаНДС,
	|	ТоварыНакладной.Сумма КАК Сумма,
	|	ТоварыНакладной.СуммаНДС КАК СуммаНДС,
	|	ТоварыНакладной.СуммаСНДС КАК СуммаСНДС,
	|	ТоварыНакладной.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
	|	ТоварыНакладной.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
	|	ТоварыНакладной.Сделка                   КАК Сделка,
	|	ТоварыНакладной.СтатьяРасходов           КАК СтатьяРасходов,
	|	ТоварыНакладной.АналитикаРасходов        КАК АналитикаРасходов,
	|	ТоварыНакладной.Подразделение            КАК Подразделение,
	|	ТоварыНакладной.СписатьНаРасходы         КАК СписатьНаРасходы,
	|	ТоварыНакладной.НоменклатураПоставщика   КАК НоменклатураПоставщика,
	|	ТоварыНакладной.Назначение               КАК Назначение
	|ПОМЕСТИТЬ
	|	ВтТоварыНакладной
	|ИЗ
	|	&ТоварыНакладной КАК ТоварыНакладной;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатки.ЗаказПоставщику           КАК ЗаказПоставщику,
	|	ТаблицаОстатки.Номенклатура              КАК Номенклатура,
	|	ТаблицаОстатки.Характеристика            КАК Характеристика,
	|	ТаблицаОстатки.КодСтроки                 КАК КодСтроки,
	|	ТаблицаОстатки.Количество                КАК Количество,
	|	ТаблицаОстатки.Склад                     КАК Склад,
	|	ЕСТЬNULL(НакладнаяТовары.Количество,0)   КАК КоличествоВНакладной,
	|	ЗаказТовары.Количество                   КАК КоличествоВЗаказе,
	|	ЗаказТовары.НомерСтроки                  КАК НомерСтроки,
	|	ЗаказТовары.Ссылка.Сделка                КАК Сделка,
	|	ЗаказТовары.СтатьяРасходов               КАК СтатьяРасходов,
	|	ЗаказТовары.АналитикаРасходов            КАК АналитикаРасходов,
	|	ЗаказТовары.Подразделение                КАК Подразделение,
	|	ЗаказТовары.СписатьНаРасходы             КАК СписатьНаРасходы,
	|	ЗаказТовары.ДатаПоступления              КАК ДатаПоступления,
	|	ЕСТЬNULL(НакладнаяТовары.Упаковка, ЗаказТовары.Упаковка) КАК Упаковка,
	|	ЗаказТовары.ВидЦеныПоставщика            КАК ВидЦеныПоставщика,
	|	ЗаказТовары.Количество                   КАК КоличествоПоЗаказу,
	|	ЗаказТовары.Цена                         КАК Цена,
	|	ЗаказТовары.СтавкаНДС                    КАК СтавкаНДС,
	|	ЗаказТовары.Сумма                        КАК Сумма,
	|	ЗаказТовары.СуммаНДС                     КАК СуммаНДС,
	|	ЗаказТовары.СуммаСНДС                    КАК СуммаСНДС,
	|	ЗаказТовары.ПроцентРучнойСкидки          КАК ПроцентРучнойСкидки,
	|	ЗаказТовары.СуммаРучнойСкидки            КАК СуммаРучнойСкидки,
	|	ЗаказТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказТовары.НоменклатураПоставщика       КАК НоменклатураПоставщика,
	|	ЗаказТовары.Назначение                   КАК Назначение,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НакладнаяТовары.Упаковка, ЗаказТовары.Упаковка) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, &ТекстЗапросаКоэффициентУпаковки2)
	|	КОНЕЦ КАК Коэффициент,
	|	ТаблицаОстатки.Количество / ЕСТЬNULL(ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, &ТекстЗапросаКоэффициентУпаковки2), 1) КАК КоличествоУпаковок,
	|	ВЫБОР 
	|		КОГДА ТаблицаОстатки.Склад.ИспользоватьОрдернуюСхемуПриПоступлении = ИСТИНА
	|			И ТаблицаОстатки.Склад.ДатаНачалаОрдернойСхемыПриПоступлении <= &ТекущаяДата
	|			И НЕ ТаблицаОстатки.Номенклатура.ТипНоменклатуры В(
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказТовары
	|		ПО  ТаблицаОстатки.Номенклатура     = ЗаказТовары.Номенклатура
	|			И ТаблицаОстатки.Характеристика = ЗаказТовары.Характеристика
	|			И ТаблицаОстатки.КодСтроки      = ЗаказТовары.КодСтроки
	|			И ТаблицаОстатки.ЗаказПоставщику = ЗаказТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыНакладной КАК НакладнаяТовары
	|		ПО ТаблицаОстатки.Номенклатура = НакладнаяТовары.Номенклатура
	|			И ТаблицаОстатки.Характеристика = НакладнаяТовары.Характеристика
	|			И ТаблицаОстатки.КодСтроки = НакладнаяТовары.КодСтроки
	|			И ТаблицаОстатки.ЗаказПоставщику = НакладнаяТовары.ЗаказПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыНакладной.ЗаказПоставщику          КАК ЗаказПоставщику,
	|	ТоварыНакладной.Номенклатура             КАК Номенклатура,
	|	ТоварыНакладной.Характеристика           КАК Характеристика,
	|	ТоварыНакладной.КодСтроки                КАК КодСтроки,
	|	ТоварыНакладной.Количество               КАК Количество,
	|	ТоварыНакладной.Склад                    КАК Склад,
	|	ЕСТЬNULL(ТоварыНакладной.Количество,0)   КАК КоличествоВНакладной,
	|	0                                        КАК КоличествоВЗаказе,
	|	ТоварыНакладной.НомерСтроки              КАК НомерСтроки,
	|	ТоварыНакладной.Сделка                   КАК Сделка,
	|	ТоварыНакладной.СтатьяРасходов           КАК СтатьяРасходов,
	|	ТоварыНакладной.АналитикаРасходов        КАК АналитикаРасходов,
	|	ТоварыНакладной.Подразделение            КАК Подразделение,
	|	ТоварыНакладной.СписатьНаРасходы         КАК СписатьНаРасходы,
	|	НЕОПРЕДЕЛЕНО                             КАК ДатаПоступления,
	|	ТоварыНакладной.Упаковка                 КАК Упаковка,
	|	ТоварыНакладной.ВидЦеныПоставщика        КАК ВидЦеныПоставщика,
	|	0                                        КАК КоличествоПоЗаказу,
	|	ТоварыНакладной.Цена                     КАК Цена,
	|	ТоварыНакладной.СтавкаНДС                КАК СтавкаНДС,
	|	ТоварыНакладной.Сумма                    КАК Сумма,
	|	ТоварыНакладной.СуммаНДС                 КАК СуммаНДС,
	|	ТоварыНакладной.СуммаСНДС                КАК СуммаСНДС,
	|	ТоварыНакладной.ПроцентРучнойСкидки          КАК ПроцентРучнойСкидки,
	|	ТоварыНакладной.СуммаРучнойСкидки            КАК СуммаРучнойСкидки,
	|	ТоварыНакладной.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТоварыНакладной.НоменклатураПоставщика       КАК НоменклатураПоставщика,
	|	ТоварыНакладной.Назначение                   КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТоварыНакладной.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки3
	|	КОНЕЦ КАК Коэффициент,
	|	ТоварыНакладной.Количество / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1) КАК КоличествоУпаковок,
	|	ВЫБОР 
	|		КОГДА ТоварыНакладной.Склад.ИспользоватьОрдернуюСхемуПриПоступлении = ИСТИНА
	|			И ТоварыНакладной.Склад.ДатаНачалаОрдернойСхемыПриПоступлении <= &ТекущаяДата
	|			И НЕ ТоварыНакладной.Номенклатура.ТипНоменклатуры В(
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	ВтТоварыНакладной КАК ТоварыНакладной
	|ГДЕ
	|	ТоварыНакладной.КодСтроки = 0
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОстатки.ЗаказПоставщику,
	|	ЗаказТовары.НомерСтроки";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"НакладнаяТовары.Упаковка",
			"НакладнаяТовары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЗаказТовары.Упаковка",
			"ЗаказТовары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки3",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТоварыНакладной.Упаковка",
			"ТоварыНакладной.Номенклатура"));
		
	Возврат Запрос.Выполнить();
КонецФункции

#КонецОбласти

#Область ТекущиеДела

Функция ТекстЗапросаЗаказыКОформлению(Организация = Неопределено, Склад = Неопределено) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыПоставщикам.Ссылка КАК Ссылка,
	|	ТИПЗНАЧЕНИЯ(ЗаказыПоставщикам.Ссылка) КАК ТипРаспоряжения,
	|	ЗаказыПоставщикам.Дата КАК Дата,
	|	ЗаказыПоставщикам.Номер КАК Номер,
	|	ЗаказыПоставщикам.Партнер КАК Партнер,
	|	ЗаказыПоставщикам.Контрагент КАК Контрагент,
	|	ЗаказыПоставщикам.Организация КАК Организация,
	|	ЗаказыПоставщикам.Склад КАК Склад,
	|	ЗаказыПоставщикам.Соглашение КАК Соглашение,
	|	ЗаказыПоставщикам.Договор КАК Договор,
	|	ЗаказыПоставщикам.Валюта КАК Валюта,
	|	ЗаказыПоставщикам.Менеджер КАК Менеджер,
	|	ЗаказыПоставщикам.СуммаДокумента КАК СуммаДокумента,
	|	ЗаказыПоставщикам.Приоритет КАК Приоритет,
	|	ЗаказыПоставщикам.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА СУММА(ТаблицаРаспоряжений.КОформлениюРасход) = 0
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК СостояниеПоступления
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(, , , , ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику {(Склад) КАК Склад}) КАК ТаблицаРаспоряжений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ЗаказыПоставщикам
	|		ПО (ЗаказыПоставщикам.Ссылка = ТаблицаРаспоряжений.ЗаказПоставщику)
	|ГДЕ
	|	ТаблицаРаспоряжений.КОформлениюКонечныйОстаток > 0
	|	И &УсловиеОтбораСклад
	|	И &УсловиеОтбораОрганизация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПоставщикам.Ссылка,
	|	ТИПЗНАЧЕНИЯ(ЗаказыПоставщикам.Ссылка),
	|	ЗаказыПоставщикам.Дата,
	|	ЗаказыПоставщикам.Номер,
	|	ЗаказыПоставщикам.Партнер,
	|	ЗаказыПоставщикам.Контрагент,
	|	ЗаказыПоставщикам.Организация,
	|	ЗаказыПоставщикам.Склад,
	|	ЗаказыПоставщикам.Соглашение,
	|	ЗаказыПоставщикам.Договор,
	|	ЗаказыПоставщикам.Валюта,
	|	ЗаказыПоставщикам.Менеджер,
	|	ЗаказыПоставщикам.СуммаДокумента,
	|	ЗаказыПоставщикам.Приоритет,
	|	ЗаказыПоставщикам.ХозяйственнаяОперация";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		УсловиеОтбора = "ЗаказыПоставщикам.Организация = &Организация";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеОтбораОрганизация", УсловиеОтбора);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И &УсловиеОтбораОрганизация", "");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Склад) Тогда
		УсловиеОтбора = "ЗаказыПоставщикам.Склад = &Склад";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеОтбораСклад", УсловиеОтбора);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И &УсловиеОтбораСклад", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаРаспоряженияНаПриемку(Организация = Неопределено, Склад = Неопределено) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ТаблицаРаспоряжений.Ссылка,
	|	ТИПЗНАЧЕНИЯ(ТаблицаРаспоряжений.Ссылка) КАК ТипРаспоряжения,
	|	ТаблицаРаспоряжений.Дата,
	|	ТаблицаРаспоряжений.Номер,
	|	ТаблицаРаспоряжений.ПометкаУдаления,
	|	ТаблицаРаспоряжений.Партнер,
	|	ТаблицаРаспоряжений.Контрагент,
	|	ТаблицаРаспоряжений.Организация,
	|	ТаблицаРаспоряжений.Склад,
	|	ТаблицаРаспоряжений.Соглашение,
	|	ТаблицаРаспоряжений.Договор,
	|	ТаблицаРаспоряжений.Валюта,
	|	ТаблицаРаспоряжений.Менеджер,
	|	ТаблицаРаспоряжений.СуммаДокумента,
	|	ТаблицаРаспоряжений.Приоритет,
	|	ТаблицаРаспоряжений.ХозяйственнаяОперация,
	|	МАКСИМУМ(ТаблицаРаспоряжений.СостояниеОрдера) КАК СостояниеОрдера
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаРаспоряжений.ДокументПоступления.Ссылка КАК Ссылка,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).Дата
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).Дата
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Дата
	|		КОНЕЦ КАК Дата,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).Номер
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).Номер
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Номер
	|		КОНЕЦ КАК Номер,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).ПометкаУдаления
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).ПометкаУдаления
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).ПометкаУдаления
	|		КОНЕЦ КАК ПометкаУдаления,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).Партнер
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).Партнер
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Партнер
	|		КОНЕЦ КАК Партнер,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).Контрагент
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).Контрагент
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Контрагент
	|		КОНЕЦ КАК Контрагент,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).Организация
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).Организация
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Организация
	|		КОНЕЦ КАК Организация,
	|		ТаблицаРаспоряжений.Склад КАК Склад,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).Соглашение
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).Соглашение
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Ссылка
	|		КОНЕЦ КАК Соглашение,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).Договор
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).Договор
	|		КОНЕЦ КАК Договор,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).Валюта
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).Валюта
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Валюта
	|		КОНЕЦ КАК Валюта,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).Менеджер
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).Менеджер
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).Менеджер
	|		КОНЕЦ КАК Менеджер,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).СуммаДокумента
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).СуммаДокумента
	|		КОНЕЦ КАК СуммаДокумента,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).Приоритет
	|		КОНЕЦ КАК Приоритет,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ЗаказПоставщику).ХозяйственнаяОперация
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг).ХозяйственнаяОперация
	|			КОГДА ТаблицаРаспоряжений.ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаРаспоряжений.ДокументПоступления КАК Справочник.СоглашенияСПоставщиками).ХозяйственнаяОперация
	|		КОНЕЦ КАК ХозяйственнаяОперация,
	|		ТаблицаРаспоряжений.Склад КАК СкладОтгрузки,
	|		ТаблицаРаспоряжений.Номенклатура КАК Номенклатура,
	|		ТаблицаРаспоряжений.Характеристика КАК ХарактеристикаНоменклатуры,
	|		ТаблицаРаспоряжений.Назначение КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаРаспоряжений.КОформлениюПоступленийПоОрдерамКонечныйОстаток = 0
	|					И ТаблицаРаспоряжений.КОформлениюПоступленийПоОрдерамПриход > 0
	|				ТОГДА 0
	|			КОГДА ТаблицаРаспоряжений.КОформлениюПоступленийПоОрдерамПриход > 0
	|				ТОГДА 3
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК СостояниеОрдера
	|	ИЗ
	|		РегистрНакопления.ТоварыКПоступлению.ОстаткиИОбороты(
	|				,
	|				,
	|				,
	|				,
	|				ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|					ИЛИ ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|					ИЛИ ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками {(Склад) КАК Склад}) КАК ТаблицаРаспоряжений
	|	ГДЕ
	|		ТаблицаРаспоряжений.КОформлениюПоступленийПоОрдерамКонечныйОстаток <> 0) КАК ТаблицаРаспоряжений
	|ГДЕ
	|	НЕ ТаблицаРаспоряжений.Номер ЕСТЬ NULL
	|	И &УсловиеОтбораСклад
	|	И &УсловиеОтбораОрганизация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРаспоряжений.Ссылка,
	|	ТИПЗНАЧЕНИЯ(ТаблицаРаспоряжений.Ссылка),
	|	ТаблицаРаспоряжений.ПометкаУдаления,
	|	ТаблицаРаспоряжений.Номер,
	|	ТаблицаРаспоряжений.Дата,
	|	ТаблицаРаспоряжений.Партнер,
	|	ТаблицаРаспоряжений.Контрагент,
	|	ТаблицаРаспоряжений.Организация,
	|	ТаблицаРаспоряжений.Соглашение,
	|	ТаблицаРаспоряжений.Договор,
	|	ТаблицаРаспоряжений.Валюта,
	|	ТаблицаРаспоряжений.Склад,
	|	ТаблицаРаспоряжений.Менеджер,
	|	ТаблицаРаспоряжений.Приоритет,
	|	ТаблицаРаспоряжений.ХозяйственнаяОперация,
	|	ТаблицаРаспоряжений.СуммаДокумента";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		УсловиеОтбора = "ТаблицаРаспоряжений.Организация = &Организация";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеОтбораОрганизация", УсловиеОтбора);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И &УсловиеОтбораОрганизация", "");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Склад) Тогда
		УсловиеОтбора = "ТаблицаРаспоряжений.Склад = &Склад";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеОтбораСклад", УсловиеОтбора);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И &УсловиеОтбораСклад", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ЕстьЗаказыКОформлению(Организация = Неопределено, Склад = Неопределено) Экспорт
		
	ТекстЗапроса = ТекстЗапросаЗаказыКОформлению(Организация, Склад);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВЫБРАТЬ", "ВЫБРАТЬ ПЕРВЫЕ 1");

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ЕстьРаспоряженияНаПриемку(Организация = Неопределено, Склад = Неопределено) Экспорт
	
	ТекстЗапроса = ТекстЗапросаРаспоряженияНаПриемку(Организация, Склад);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВЫБРАТЬ РАЗЛИЧНЫЕ", "ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1");

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	Возврат Не Запрос.Выполнить().Пустой();
		
КонецФункции

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	ИмяФормы = "Обработка.ЖурналДокументовЗакупки.Форма.СписокНакладныеКОформлению";
	
	ОбщиеПараметрыЗапросов = ТекущиеДелаСлужебный.ОбщиеПараметрыЗапросов();
	
	// Определим доступны ли текущему пользователю показатели группы
	Доступность =
		(ОбщиеПараметрыЗапросов.ЭтоПолноправныйПользователь
			Или ПравоДоступа("Просмотр", Метаданные.Документы.ПриобретениеТоваровУслуг))
		И ПравоДоступа("Добавление", Метаданные.Документы.ПриобретениеТоваровУслуг)
		И ПравоДоступа("Просмотр", Метаданные.Документы.ЗаказПоставщику)
		И ПравоДоступа("Чтение",   Метаданные.РегистрыНакопления.ЗаказыПоставщикам)
		И ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыПоставщикам");
	
	Если НЕ Доступность Тогда
		Возврат;
	КонецЕсли;
	
	// Расчет показателей
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаРаспоряжений.ЗаказПоставщику) КАК РаспоряженияНаОформлениеПоступленийТоваровИУслугВсегоВРаботе
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ЗаказПоставщику В (
	|		ВЫБРАТЬ
	|			ЗаказПоставщику.Ссылка
	|		ИЗ
	|			Документ.ЗаказПоставщику КАК ЗаказПоставщику)) КАК ТаблицаРаспоряжений
	|ГДЕ
	|	ТаблицаРаспоряжений.КОформлениюОстаток > 0";
	
	Результат = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	// Заполнение дел.
	// ДокументыПоступленияТоваровИУслуг
	ДелоРодитель = ТекущиеДела.Добавить();
	ДелоРодитель.Идентификатор  = "ДокументыПоступленияТоваровИУслуг";
	ДелоРодитель.Представление  = НСтр("ru = 'Документы приобретения товаров и услуг'");
	ДелоРодитель.ЕстьДела       = Результат.РаспоряженияНаОформлениеПоступленийТоваровИУслугВсегоВРаботе > 0;
	ДелоРодитель.Владелец       = Метаданные.Подсистемы.Закупки;
	
	// РаспоряженияНаОформлениеПоступленийТоваровИУслугВсегоВРаботе
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	ПараметрыФормы.Вставить("ИмяТекущейСтраницы", "СтраницаРаспоряженияНаОформление");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "РаспоряженияНаОформлениеПоступленийТоваровИУслугВсегоВРаботе";
	Дело.ЕстьДела       = Результат.РаспоряженияНаОформлениеПоступленийТоваровИУслугВсегоВРаботе > 0;
	Дело.Представление  = НСтр("ru = 'Распоряжения на оформление в работе'");
	Дело.Количество     = Результат.РаспоряженияНаОформлениеПоступленийТоваровИУслугВсегоВРаботе;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = "ДокументыПоступленияТоваровИУслуг";
	
КонецПроцедуры

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Организация = Параметры.Организация;
	Склад = Параметры.Склад;
	
	ПоказыватьЗаказы = ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыПоставщикам")
		И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПоставщику)
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗаказыПоставщикам)
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКПоступлению);
	
	ПоказыватьРаспоряженияНаПриемку = СкладыСервер.ЕстьОрдерныйНаПоступлениеСклад(Склад,ТекущаяДатаСеанса())
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКПоступлению);
		
	Гиперссылка = Неопределено;
	ТекстГиперссылки = НСтр("ru = 'Накладные'");
	Если ПоказыватьЗаказы
		Или ПоказыватьРаспоряженияНаПриемку Тогда
		
		Гиперссылка = Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСпискаПриобретениеТоваровУслуг());
		
	КонецЕсли;
	
	Если ПоказыватьЗаказы
			И ЕстьЗаказыКОформлению(Организация, Склад)
		Или ПоказыватьРаспоряженияНаПриемку
			И ЕстьРаспоряженияНаПриемку(Организация, Склад) Тогда
			
		Гиперссылка = Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСпискаПриобретениеТоваровУслуг());
			
	КонецЕсли;
	
	Возврат Гиперссылка;
	
КонецФункции

Функция ИмяФормыСпискаПриобретениеТоваровУслуг() Экспорт
	
	Возврат "Документ.ПриобретениеТоваровУслуг.Форма.ФормаСпискаДокументов";
	
КонецФункции


#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Функция определяет реквизиты выбранного документа
//
// Параметры:
//	ДокументСсылка - Ссылка на документа
//
// Возвращаемое значение:
//	Структура - реквизиты выбранного документа
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ДанныеДокумента.ПоступлениеПоЗаказам КАК ПоступлениеПоЗаказам,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ПорядокРасчетов КАК ПорядокРасчетов,
	|	ДанныеДокумента.Курс КАК Курс,
	|	ДанныеДокумента.Кратность КАК Кратность
	|
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
		Партнер = Выборка.Партнер;
		Контрагент = Выборка.Контрагент;
		Договор = Выборка.Договор;
		НаправлениеДеятельности = Выборка.НаправлениеДеятельности;
		ПорядокРасчетов = Выборка.ПорядокРасчетов;
		Валюта = Выборка.Валюта;
		ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
		ХозяйственнаяОперация = ?(ЗначениеЗаполнено(Выборка.ХозяйственнаяОперация), Выборка.ХозяйственнаяОперация, Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
		ПоЗаказу = Выборка.ПоступлениеПоЗаказам;
		СуммаДокумента = Выборка.СуммаДокумента;
		СуммаВзаиморасчетов = ?(Выборка.Проведен, Выборка.СуммаВзаиморасчетов, 0);
		Курс = Выборка.Курс;
		Кратность = Выборка.Кратность;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		НаправлениеДеятельности = Справочники.НаправленияДеятельности.ПустаяСсылка();
		ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПустаяСсылка();
		Валюта = Справочники.Валюты.ПустаяСсылка();
		ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		ПоЗаказу = Ложь;
		СуммаДокумента = 0;
		СуммаВзаиморасчетов = 0;
		Курс = 1;
		Кратность = 1;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация, Партнер, Контрагент, Договор, ПорядокРасчетов, Валюта, ВалютаВзаиморасчетов, ХозяйственнаяОперация, ПоЗаказу, СуммаДокумента, СуммаВзаиморасчетов, Курс, Кратность, НаправлениеДеятельности",
		Дата,
		Организация,
		Партнер,
		Контрагент,
		Договор,
		ПорядокРасчетов,
		Валюта,
		ВалютаВзаиморасчетов,
		ХозяйственнаяОперация,
		ПоЗаказу,
		СуммаДокумента,
		СуммаВзаиморасчетов,
		Курс,
		Кратность,
		НаправлениеДеятельности);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Обработчик обновления УТ 11.4.1:
// - для операции ЗакупкаУПоставщикаРеглУчет заполняется ТЧ "ВидыЗапасов";
// - очищается вид запасов для работ.
// - заполняется реквизит ВариантПриемкиТоваров.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОбработке.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Товары.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПриобретениеТоваровУслуг.Товары КАК Товары
	|	ГДЕ
	|		(Товары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|				ИЛИ Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|					И Товары.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПриобретениеТоваровУслуг.Ссылка
	|	ИЗ
	|		Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.ВидыЗапасов КАК ПриобретениеТоваровУслугВидыЗапасов
	|			ПО (ПриобретениеТоваровУслугВидыЗапасов.Ссылка = ПриобретениеТоваровУслуг.Ссылка)
	|	ГДЕ
	|		ПриобретениеТоваровУслугВидыЗапасов.Ссылка ЕСТЬ NULL
	|		И ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		И ПриобретениеТоваровУслуг.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументПриобретение.Ссылка
	|	ИЗ
	|		Документ.ПриобретениеТоваровУслуг КАК ДокументПриобретение
	|	ГДЕ
	|		ДокументПриобретение.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПриобретениеТоваровУслуг.Ссылка
	|	ИЗ
	|		Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|	ГДЕ
	|		ПриобретениеТоваровУслуг.УдалитьТоварноТранспортнаяНакладнаяЕГАИС <> ЗНАЧЕНИЕ(Документ.ТТНВходящаяЕГАИС.ПустаяСсылка)
	|		И ПриобретениеТоваровУслуг.УдалитьТоварноТранспортнаяНакладнаяЕГАИС ССЫЛКА Документ.ТТНВходящаяЕГАИС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументДляОбработки.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПриобретениеТоваровУслуг КАК ДокументДляОбработки
	|	ГДЕ
	|		(ДокументДляОбработки.АдресДоставки <> """"
	|			И ВЫРАЗИТЬ(ДокументДляОбработки.АдресДоставкиЗначенияПолей КАК СТРОКА (500)) <> """"
	|			И НЕ ДокументДляОбработки.АдресДоставкиЗначенияПолей ПОДОБНО ""%</КонтактнаяИнформация>"")
	|		ИЛИ
	|		(ДокументДляОбработки.АдресДоставкиПеревозчика <> """"
	|			И ВЫРАЗИТЬ(ДокументДляОбработки.АдресДоставкиПеревозчикаЗначенияПолей КАК СТРОКА (500)) <> """"
	|			И НЕ ДокументДляОбработки.АдресДоставкиПеревозчикаЗначенияПолей ПОДОБНО ""%</КонтактнаяИнформация>"")
	|) КАК КОбработке";
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления УТ 11.4.1:
// - для операции ЗакупкаУПоставщикаРеглУчет заполняется ТЧ "ВидыЗапасов";
// - очищается вид запасов для работ.
// - заполняется реквизит ВариантПриемкиТоваров.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ПриобретениеТоваровУслуг";
	
	ИмяДокумента = СтрРазделить(ПолноеИмяОбъекта,".")[1];
	МетаданныеДокумента = Метаданные.Документы.ПриобретениеТоваровУслуг;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	РезультатыСозданияВТ = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"РегистрНакопления.ТоварыОрганизаций",
		МенеджерВременныхТаблиц);
	
	РезультатЗаблокированоТТНВходящаяЕГАИС = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
		Параметры.Очередь,
		"Документ.ТТНВходящаяЕГАИС",
		МенеджерВременныхТаблиц);
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВариантПриемкиКонстанта = Константы.ВариантПриемкиТоваров.Получить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка                       КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных          КАК ВерсияДанных,
	|	ОбъектыДляОбработки.Ссылка.Проведен              КАК Проведен,
	|	ОбъектыДляОбработки.Ссылка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ОбъектыДляОбработки.Ссылка.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
	|	ОбъектыДляОбработки.Ссылка.Соглашение            КАК Соглашение,
	|	ОбъектыДляОбработки.Ссылка.УдалитьТоварноТранспортнаяНакладнаяЕГАИС КАК ТТНВходящаяЕГАИССсылка,
	|	ВЫБОР КОГДА
	|		ОбъектыДляОбработки.Ссылка.УдалитьТоварноТранспортнаяНакладнаяЕГАИС <> ЗНАЧЕНИЕ(Документ.ТТНВходящаяЕГАИС.ПустаяСсылка)
	|		И ОбъектыДляОбработки.Ссылка.УдалитьТоварноТранспортнаяНакладнаяЕГАИС ССЫЛКА Документ.ТТНВходящаяЕГАИС ТОГДА
	|			ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ ОчиститьСсылкуНаТТНВходящаяЕГАИС,
	|	ОбъектыДляОбработки.Ссылка.АдресДоставки         КАК АдресДоставки,
	|	ОбъектыДляОбработки.Ссылка.АдресДоставкиПеревозчика КАК АдресДоставкиПеревозчика,
	|	ОбъектыДляОбработки.Ссылка.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	|	ОбъектыДляОбработки.Ссылка.АдресДоставкиПеревозчикаЗначенияПолей КАК АдресДоставкиПеревозчикаЗначенияПолей
	|ПОМЕСТИТЬ ТаблицаСсылок
	|ИЗ
	|	ВТДокументыДляОбработки КАК ОбъектыДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСсылок.Ссылка
	|ПОМЕСТИТЬ КОбновлениюАналитик
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК Товары
	|		ПО ТаблицаСсылок.Ссылка = Товары.Ссылка
	|ГДЕ
	|	Товары.АналитикаУчетаНоменклатуры.Назначение <> Товары.ВидЗапасов.УстарелоНазначение
	|	И Товары.ВидЗапасов.УстарелоНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТаблицаСсылок.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Ссылка
	|ПОМЕСТИТЬ КЗаполнениюВидовЗапасов
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ТаблицаСсылок.Ссылка = ВидыЗапасов.Ссылка
	|ГДЕ
	|	ТаблицаСсылок.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|	И ТаблицаСсылок.Проведен
	|	И ВидыЗапасов.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Ссылка                   КАК Ссылка,
	|	ДанныеДляОбработки.ВерсияДанных             КАК ВерсияДанных,
	|	НЕ КЗаполнениюВидовЗапасов.Ссылка ЕСТЬ NULL КАК ЗаполнитьВидыЗапасов,
	|	НЕ КОбновлениюАналитик.Ссылка ЕСТЬ NULL     КАК ОбновитьАналитики,
	|	ВЫБОР КОГДА
	|		ДанныеДляОбработки.ВариантПриемкиТоваров <> ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПустаяСсылка)
	|		ТОГДА
	|			ЛОЖЬ
	|		ИНАЧЕ
	|			ИСТИНА
	|		КОНЕЦ
	|	КАК                                         ТребуетсяУказаниеВариантаПриемки,
	|	ВЫБОР
	|		КОГДА ДанныеДляОбработки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки)
	|			И ЕСТЬNULL(ДанныеДляОбработки.Соглашение.ВариантПриемкиТоваров, &ВариантПриемкиКонстанта) = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
	|			ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным)
	|			ИНАЧЕ
	|				ЕСТЬNULL(ДанныеДляОбработки.Соглашение.ВариантПриемкиТоваров, &ВариантПриемкиКонстанта)
	|		КОНЕЦ
	|	КАК РассчитанныйВариантПриемки,
	|
	|	ТТНВходящаяЕГАИС.ДокументОснование                  КАК ТТНВходящаяЕГАИСДокументОснование,
	|	ДанныеДляОбработки.ОчиститьСсылкуНаТТНВходящаяЕГАИС КАК ОчиститьСсылкуНаТТНВходящаяЕГАИС,
	|
	|	(ДанныеДляОбработки.АдресДоставки <> """"
	|	И ВЫРАЗИТЬ(ДанныеДляОбработки.АдресДоставкиЗначенияПолей КАК СТРОКА (500)) <> """"
	|		И НЕ ДанныеДляОбработки.АдресДоставкиЗначенияПолей ПОДОБНО ""%</КонтактнаяИнформация>"")
	|	ИЛИ (ДанныеДляОбработки.АдресДоставкиПеревозчика <> """"
	|		И ВЫРАЗИТЬ(ДанныеДляОбработки.АдресДоставкиПеревозчикаЗначенияПолей КАК СТРОКА (500)) <> """"
	|		И НЕ ДанныеДляОбработки.АдресДоставкиПеревозчикаЗначенияПолей ПОДОБНО ""%</КонтактнаяИнформация>"")
	|	КАК                                                 ТребуетсяПересчетЗначенийПолейАдреса
	|ИЗ
	|	ТаблицаСсылок КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ КОбновлениюАналитик КАК КОбновлениюАналитик
	|	ПО ДанныеДляОбработки.Ссылка = КОбновлениюАналитик.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ КЗаполнениюВидовЗапасов КАК КЗаполнениюВидовЗапасов
	|	ПО ДанныеДляОбработки.Ссылка = КЗаполнениюВидовЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДляОбработки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|	ПО ТТНВходящаяЕГАИС.Ссылка = ДанныеДляОбработки.ТТНВходящаяЕГАИССсылка
	|ГДЕ
	|	(ДанныеДляОбработки.ОчиститьСсылкуНаТТНВходящаяЕГАИС И ДокументЗаблокировано.Ссылка ЕСТЬ NULL)
	|	ИЛИ НЕ ДанныеДляОбработки.ОчиститьСсылкуНаТТНВходящаяЕГАИС
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДокументыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.УстановитьПараметр("ВариантПриемкиКонстанта", ВариантПриемкиКонстанта);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстЗапросаЗаполненияВидовЗапасов = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.УстарелоНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА Аналитика.КлючАналитики
	|		ИНАЧЕ ТоварыОрганизаций.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.Количество,
	|	ТоварыОрганизаций.КорВидЗапасов КАК ВидЗапасовПолучателя
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия = Аналитика.Серия
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Склад = Аналитика.Склад
	|			И ТоварыОрганизаций.ВидЗапасов.УстарелоНазначение = Аналитика.Назначение
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ИмяВТЗаблокированныхРегистраторов КАК ЗаблокированныеРегистраторы
	|		ПО (ЗаблокированныеРегистраторы.Регистратор = ТоварыОрганизаций.Регистратор)
	|ГДЕ
	|	ТоварыОрганизаций.Регистратор = &Регистратор
	|	И ТоварыОрганизаций.Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ЗаблокированныеРегистраторы.Регистратор ЕСТЬ NULL
	|";
	
	ТекстЗапросаЗаполненияВидовЗапасов = СтрЗаменить(ТекстЗапросаЗаполненияВидовЗапасов, "#ИмяВТЗаблокированныхРегистраторов", РезультатыСозданияВТ.ИмяВременнойТаблицы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Если Выборка.ЗаполнитьВидыЗапасов Тогда
				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыОрганизаций.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			КонецЕсли;
			Блокировка.Заблокировать();
		
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ОбъектИзменен = Ложь;
			Если Выборка.ЗаполнитьВидыЗапасов Тогда
				Запрос.Текст = ТекстЗапросаЗаполненияВидовЗапасов;
				Запрос.УстановитьПараметр("Регистратор", Выборка.Ссылка);
				
				ДокументОбъект.ВидыЗапасов.Загрузить(Запрос.Выполнить().Выгрузить());
				ОбъектИзменен = Истина;
			КонецЕсли;
			
			Если Выборка.ОчиститьСсылкуНаТТНВходящаяЕГАИС
				И Выборка.ТТНВходящаяЕГАИСДокументОснование = Выборка.Ссылка Тогда
				ДокументОбъект.УдалитьТоварноТранспортнаяНакладнаяЕГАИС = Неопределено;
				ОбъектИзменен = Истина;
			КонецЕсли;
		
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Товары.НомерСтроки КАК НомерСтроки
			|ИЗ
			|	Документ.ПриобретениеТоваровУслуг.Товары КАК Товары
			|ГДЕ
			|	(Товары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
			|			ИЛИ Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			|				И Товары.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
			|	И Товары.Ссылка = &Ссылка";
			
			Запрос.УстановитьПараметр("Ссылка", Выборка.Ссылка);
			СтрокиКОбработке = Запрос.Выполнить();
			Если Не СтрокиКОбработке.Пустой() Тогда
				СтрокаКОбработке = СтрокиКОбработке.Выбрать();
				Пока СтрокаКОбработке.Следующий() Цикл 
					ДокументОбъект.Товары[СтрокаКОбработке.НомерСтроки - 1].ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
				КонецЦикла;
				ОбъектИзменен = Истина;
			КонецЕсли;
			
			Если Выборка.ТребуетсяУказаниеВариантаПриемки Тогда
				ОбъектИзменен = Истина;
				ДокументОбъект.ВариантПриемкиТоваров = Выборка.РассчитанныйВариантПриемки;
			КонецЕсли;
			
			Если Выборка.ТребуетсяПересчетЗначенийПолейАдреса Тогда
				Если Не ПустаяСтрока(ДокументОбъект.АдресДоставкиЗначенияПолей) Тогда
					НовыеЗначенияПолей = "";
					ОбщегоНазначенияУТ.ЗаполнитьЗначенияПолейКИПоПредставлению(ДокументОбъект.АдресДоставки, НовыеЗначенияПолей);
					ДокументОбъект.АдресДоставкиЗначенияПолей = НовыеЗначенияПолей;
					ОбъектИзменен = Истина;
				КонецЕсли;
				Если Не ПустаяСтрока(ДокументОбъект.АдресДоставкиПеревозчикаЗначенияПолей) Тогда
					НовыеЗначенияПолей = "";
					ОбщегоНазначенияУТ.ЗаполнитьЗначенияПолейКИПоПредставлению(ДокументОбъект.АдресДоставкиПеревозчика, НовыеЗначенияПолей);
					ДокументОбъект.АдресДоставкиПеревозчикаЗначенияПолей = НовыеЗначенияПолей;
					ОбъектИзменен = Истина;
				КонецЕсли;
			КонецЕсли;
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеДокумента,
				Выборка.Ссылка,
				ТекстСообщения);
			Продолжить;;
		КонецПопытки;
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
