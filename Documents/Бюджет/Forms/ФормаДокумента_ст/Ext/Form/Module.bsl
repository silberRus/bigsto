
&НаКлиенте
Процедура ПоказателиСтатьяБюджетаПриИзменении(Элемент)
	ТекДанные=Элементы.Показатели.ТекущиеДанные;
	СтатьяБюджетаПриИзменении(ТекДанные);
КонецПроцедуры
&НаКлиенте
Процедура СтатьяБюджетаПриИзменении(ТекДанные)
	//Струк=ПолучитьТипАналитики(ТекДанные.СтатьяБюджета);
	//ТекДанные.ТипАналитики1=Струк.ТипАналитики1;
	//Элементы.Показатели.ПодчиненныеЭлементы.ПоказателиАналитика1.Доступность=ЗначениеЗаполнено(Струк.ТипАналитики1);
	//ТекДанные.типАналитики2=Струк.ТипАналитики2;
	//Элементы.Показатели.ПодчиненныеЭлементы.ПоказателиАналитика2.Доступность=ЗначениеЗаполнено(Струк.ТипАналитики2);
	//ТекДанные.типАналитики3=Струк.ТипАналитики3;
	//Элементы.Показатели.ПодчиненныеЭлементы.ПоказателиАналитика3.Доступность=ЗначениеЗаполнено(Струк.ТипАналитики3);	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипАналитики(Статья)
	Возврат Новый Структура
	//Возврат Новый Структура("ТипАналитики1,ТипАналитики2,ТипАналитики3",Статья.ТипАналитики1,Статья.ТипАналитики2,Статья.ТипАналитики3);
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПоМодели(Команда)
	Если Объект.Показатели.Количество() Тогда
		Опов = Новый ОписаниеОповещения("ОтветЗаполнитьПоМодели",ЭтаФорма);
		ПоказатьВопрос(Опов,"Таблица не пуста. Удалить имеющиеся данные?",РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьПоМоделиНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтветЗаполнитьПоМодели(Рез, Парам) Экспорт
	Если рез = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоМоделиНаСервере();
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьПоМоделиНаСервере()
	Объект.Показатели.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст=
	"Выбрать СтатьяБюджета
	|
	|из Справочник.МоделиБюджетов.Показатели 
	|ГДЕ Ссылка = &МодельБюджета";
	Запрос.УстановитьПараметр("МодельБюджета",Объект.МодельБюджета);
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	Объект.Показатели.Загрузить(ТЗ);
	
КонецПроцедуры	
	
&НаСервере
Процедура УправлениеВидимостью()
	
	Периоды = Документы.Бюджет.ПолучитьПериоды(Объект.ДатаНачала,Объект.ДатаОкончания,объект.Сценарий);
	//КолПериодов=Периоды.Количество();
	//Для Н=1 По 12 Цикл
	//	Использование=?(Н<=КолПериодов, Истина, Ложь);
	//	Элементы.Показатели.ПодчиненныеЭлементы["ПоказателиЗначение"+Н].Видимость=Использование;
	//	
	//	Если Использование Тогда
	//		ТекПериод=Периоды[Н-1];
	//		Элементы.Показатели.ПодчиненныеЭлементы["ПоказателиЗначение"+Н].Заголовок=Формат(ТекПериод,"ДФ=dd.MM.yy");
	//	КонецЕсли;	
	//КонецЦикла;	
	
	Элементы.ПоказателиЗагрузитьДанные.Доступность = ЗначениеЗаполнено(Объект.ДатаНачала) И ЗначениеЗаполнено(Объект.ДатаОкончания) И ЗначениеЗаполнено(Объект.Сценарий);
	
КонецПроцедуры


&НаКлиенте
Процедура ВидБюджетаПриИзменении(Элемент)
	УправлениеВидимостью();
КонецПроцедуры


&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	СкорректироватьНевалидныеДаты(Объект.ДатаНачала,Объект.ДатаОкончания,Объект.Сценарий);
	УправлениеВидимостью();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СкорректироватьНевалидныеДаты(ДатаНачала,ДатаОкончания,Сценарий)
	Если ЗначениеЗаполнено(ДатаНачала) и ЗначениеЗаполнено(Сценарий) тогда
		ПериодичностьСтр=Строка(Сценарий.Периодичность);
		Запрос=Новый Запрос("Выбрать НачалоПериода(&ДатаНач,"+ПериодичностьСтр+") ДатаНачала ");
		Запрос.УстановитьПараметр("ДатаНач",ДатаНачала);
		Рез = Запрос.Выполнить().Выгрузить()[0];
		ДатаНачала=Рез.ДатаНачала;
	КонецЕсли;
	Если ЗначениеЗаполнено(ДатаОкончания) и ЗначениеЗаполнено(Сценарий) тогда
		ПериодичностьСтр=Строка(Сценарий.Периодичность);
		Запрос=Новый Запрос("Выбрать КонецПериода(&ДатаКон,"+ПериодичностьСтр+") ДатаОкончания ");
		Запрос.УстановитьПараметр("ДатаКон",ДатаОкончания);
		Рез = Запрос.Выполнить().Выгрузить()[0];
		ДатаОкончания=Рез.ДатаОкончания;
	КонецЕсли;
КонецПроцедуры	

&НаКлиенте
Процедура ПересчетИтогов()
	ТекДан = Элементы.Показатели.ТекущиеДанные;
	Итог=0;
	Для Н=1 По 12 Цикл
		Итог=Итог+ТекДан["Значение"+Н];
	КонецЦикла;
	ТекДан.Сумма=Итог;
КонецПроцедуры	

&НаКлиенте
Процедура ПоказателиЗначение1ПриИзменении(Элемент)
	ПересчетИтогов();
КонецПроцедуры

#Область ЗагрузкаИзЭксель
&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	ОткрытьФорму("Документ.Бюджет.Форма.ФормаЗагрузки",, ЭтаФорма,, ВариантОткрытияОкна.ОтдельноеОкно,, Новый ОписаниеОповещения("ОкончаниеВыбораПутиКФайлу", ЭтаФорма));
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВыбораПутиКФайлу(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда Возврат; КонецЕсли;
	
	ПутьКФайлу = Результат.ПутьКФайлу;
	
	// Получим эксель
	стрОшибки = "";	         
	Эксель = ОткрытьФайлЭкселя(ПутьКФайлу, стрОшибки);
	
	Если Эксель = Неопределено Тогда
		Сообщить(стрОшибки);
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗагрузку(Эксель,Результат.ЗаменятьНайденные, Результат.КолонкаНачало, Результат.СтрокаНачало);
	
	Эксель = 0;
	Сообщить("Данные загружены.");

КонецПроцедуры
&НаКлиенте
Функция ОткрытьФайлЭкселя(ПолноеИмяФайла, стрОшибки = "") Экспорт
	
	Если ПустаяСтрока(ПолноеИмяФайла) Тогда
		стрОшибки = "Не выбрано имя файла";
		Возврат Неопределено;
	КонецЕсли;
	
	//Файл = Новый Файл(ПолноеИмяФайла);
	//Если Не Файл.Существует() Тогда
	//	стрОшибки = "Файл не найден """ + ПолноеИмяФайла + """";
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	Попытка
		//Эксель = ПолучитьCOMОбъект(ПолноеИмяФайла, "Excel.Application");
		Эксель = ПолучитьCOMОбъект(ПолноеИмяФайла);
	Исключение
		стрОшибки = ОписаниеОшибки();
		стрОшибки = "Ошибка при открытии файла экселем
						|" + стрОшибки;
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат Эксель;
	
КонецФункции

&НаКлиенте                                                          
Процедура ВыполнитьЗагрузку(Эксель, ЗаменятьНайденные, КолонкаНачало, СтрокаНачало)
	
	стрОшибки = "";
	
	СоответствиеСтатей = Новый Соответствие;
	СоответствиеАналитик1 = Новый Соответствие;
	СоответствиеАналитик2 = Новый Соответствие;
	СоответствиеАналитик3 = Новый Соответствие;
	
	КолПериодов = ПолучитьКоличествоПериодов();
	
	Лист = Эксель.Worksheets(1);
	КолВоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	//НомерСтр = Таблица.Количество() + 1;
	Для Сч = СтрокаНачало По КолВоСтрок Цикл // первая строка - заголовок
		
		Состояние("Обрабатывается строка", Сч / КолВоСтрок * 100, Сч);
		
		КолонкаСтатья = КолонкаНачало;
		
		// Статья бюджета 
		
		НаименованиеСтатьи = СокрЛП(Лист.Cells(Сч, КолонкаСтатья).Value);
				
		Если ПустаяСтрока(НаименованиеСтатьи) Тогда
			Сообщить("Строка #" + Строка(Сч) + ": Не указана статья бюджета. Выгрузка данных по этой строке не произведена.");
	        Продолжить;
		КонецЕсли;
		
		СтатьяСсылка = СоответствиеСтатей.Получить(НаименованиеСтатьи);
		Если СтатьяСсылка = Неопределено Тогда
			
			СтатьяСсылка =  НайтиСтатью(НаименованиеСтатьи);
			СоответствиеСтатей.Вставить(НаименованиеСтатьи,СтатьяСсылка);
			
		КонецЕсли;
		
		Если СтатьяСсылка.Пустая() Тогда
			Сообщить("Строка #" + Строка(Сч) + ": Статья с наименованием """ + НаименованиеСтатьи + """ не найдена ");;
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("СтатьяБюджета", СтатьяСсылка);
		
		// Аналитика 1
		
		СтрокаАналитика1 = СокрЛП(Лист.Cells(Сч, КолонкаСтатья + 1).Value);
		ОбработатьСтрокуАналитики(СтрокаАналитика1, СтатьяСсылка, СоответствиеАналитик1, СтруктураПоиска, Сч, "1");
				
		// Аналитика 2
		
		СтрокаАналитика2 = СокрЛП(Лист.Cells(Сч, КолонкаСтатья + 2).Value);
		ОбработатьСтрокуАналитики(СтрокаАналитика2, СтатьяСсылка, СоответствиеАналитик2, СтруктураПоиска, Сч, "2");
		
		// Аналитика 3
	
		СтрокаАналитика3 = СокрЛП(Лист.Cells(Сч, КолонкаСтатья + 3).Value);
		ОбработатьСтрокуАналитики(СтрокаАналитика3, СтатьяСсылка, СоответствиеАналитик3, СтруктураПоиска, Сч, "3");
				
		Строки = Объект.Показатели.НайтиСтроки(СтруктураПоиска);
		Если Строки.Количество() И НЕ ЗаменятьНайденные Тогда
			Сообщить("Строка #" + Строка(Сч) + ": Строка с данной статьей бюджета и набором аналитик уже добавлена в документ. Данные по этой строке обработаны не будут.");
			Продолжить;
		КонецЕсли;
		
		новСтрока = ?(Строки.Количество(), Строки[0], Объект.Показатели.Добавить());
		
		ЗаполнитьЗначенияСвойств(новСтрока, СтруктураПоиска);
		СтатьяБюджетаПриИзменении(новСтрока);						
		
		Для Ном = 1 По КолПериодов Цикл
			ИмяРеквизита = "Значение" + Строка(Ном);
			
			СтрокаЗначение = СокрЛП(Формат(Лист.Cells(Сч, КолонкаСтатья+3+Ном).Value,"ЧГ=0"));
			Если ПустаяСтрока(СтрокаЗначение) Тогда Продолжить; КонецЕсли;
			Попытка 
				СтрокаЗначение = Число(СтрокаЗначение);
			Исключение
				Сообщить("Строка #" + Строка(Сч) + ": Ошибка преобразования значения ячейки к числовому типу данных.");
				Продолжить;
			КонецПопытки;
			
			новСтрока[ИмяРеквизита] = СтрокаЗначение;
		КонецЦикла;	
	
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоПериодов()
	
	Периоды = Документы.Бюджет.ПолучитьПериоды(Объект.ДатаНачала, Объект.ДатаОкончания, Объект.Сценарий);
	Возврат Периоды.Количество();

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеАналитики(СтрокаАналитика, Статья, ИмяРекизитаТип)
	
	ТипАналитики = Статья[ИмяРекизитаТип].ТипЗначения.Типы()[0];
	ЛюбаяСсылка = Новый(ТипАналитики);
    Имя = ЛюбаяСсылка.Метаданные().ПолноеИмя();	
	
	поз = СтрНайти(Имя, ".");
	Нач = Лев(Имя, СтрНайти(Имя, ".") - 1);
	Имя	= Сред(Имя, Поз + 1);
	
	Если Нач = "Справочник" Тогда 				
		Возврат Справочники[Имя].НайтиПоНаименованию(СтрокаАналитика, Истина);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	
КонецФункции

&НаКлиенте
Процедура ОбработатьСтрокуАналитики(СтрокаАналитика, СтатьяСсылка, СоответствиеАналитик, СтруктураПоиска, Сч, НомерАналитики)
	
	Если НЕ ПустаяСтрока(СтрокаАналитика) Тогда
			
		АналитикаСсылка = СоответствиеАналитик.Получить(СтрокаАналитика);
		Если АналитикаСсылка = Неопределено Тогда
				
			АналитикаСсылка = ПолучитьЗначениеАналитики(СтрокаАналитика, СтатьяСсылка, "ТипАналитики" + НомерАналитики); 
			СоответствиеАналитик.Вставить(СтрокаАналитика, АналитикаСсылка);
				
		КонецЕсли;
		Если АналитикаСсылка = Неопределено ИЛИ АналитикаСсылка.Пустая() Тогда
			Сообщить("Строка #" + Строка(Сч) + ": Значение Аналитики"+ НомерАналитики +" с наименованием """ + СтрокаАналитика + """ не найдена ");
			//Продолжить;
		КонецЕсли;  
		
		СтруктураПоиска.Вставить("Аналитика"+НомерАналитики, АналитикаСсылка);
		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиСтатью(НаименованиеСтатьи)
	
	Возврат Справочники.СтатьиБюджета.НайтиПоНаименованию(НаименованиеСтатьи, Истина);
		
КонецФункции

#КонецОбласти

//&НаСервере
//Функция ЕстьПравоРаботыСДокументом()
//	
//	//Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
//	//	Если Объект.Автор = ПараметрыСеанса.ТекущийПользователь Тогда
//	//		Возврат Истина;
//	//	иначе
//	//		Возврат Ложь;
//	//	КонецЕсли
//	//Иначе
//	//	Возврат Истина;
//	//КонецЕсли;
//КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда  
		Объект.ДатаНачала =  НачалоГода(ТекущаяДата());
		Объект.ДатаОкончания = КонецГода(ТекущаяДата());
		//Иначе
	КонецЕсли;
	
	//УстановитьВидимостьНастройкиДоступаБюджетирование();
	
	УправлениеВидимостью();
КонецПроцедуры


&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	СкорректироватьНевалидныеДаты(Объект.ДатаНачала,Объект.ДатаОкончания,Объект.Сценарий);
	УправлениеВидимостью(); 
	
	Объект.отдел=Неопределено;
	
	СценарийПриИзмененииСервер();
КонецПроцедуры

&НаСервере
Процедура  СценарийПриИзмененииСервер();
	
	РезультатЗапроса= НастройкиДоступаБюджетирование();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиДоступаБюджетирование.ОбъектДоступа
	|ИЗ
	|	РегистрСведений.НастройкиДоступаБюджетирование КАК НастройкиДоступаБюджетирование
	|ГДЕ
	|	НастройкиДоступаБюджетирование.Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	И НастройкиДоступаБюджетирование.Сценарий = &Сценарий";
	
	Запрос.УстановитьПараметр("Сценарий", Объект.Сценарий);
	
	РезультатЗапросаДата = Запрос.Выполнить();
	
	ЕСли  РезультатЗапросаДата.Пустой() Тогда
		Сообщить("Не установлена дата запрета редактирования для Сценария бюджета. Редактирование документа запрещено ");
		ТолькоПросмотр = Истина;
	Иначе
		
		ВыборкаДетальныеЗаписи = РезультатЗапросаДата.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ДатаЗапретаРедактирования=ВыборкаДетальныеЗаписи.ОбъектДоступа;
			
		КонецЦикла;

		РезультатОтдел=ДоступныеОтделыПользователя();
		//	
		ЕСли РезультатОтдел.Количество()=0  Тогда
			Элементы.Показатели.Доступность = Ложь;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("У вас нет в доступе отделов, которые разрешено редактировать по данному сценарию");
		Иначе
			Элементы.Показатели.Доступность = Истина;	
		КонецЕсли;
		
		Для Н=1 По 12 Цикл
			Доступность=?(Н<=Месяц(ДатаЗапретаРедактирования), Ложь, Истина);
			Элементы.Показатели.ПодчиненныеЭлементы["ПоказателиЗначение"+Н].Доступность=Доступность;
		КонецЦикла;
		
		КолВо = Объект.Показатели.Количество()-1; 
		ИндексСтроки = КолВо;
		
		Для счетчик = 0 по КолВо Цикл 
			Запись = Объект.Показатели.Получить(ИндексСтроки); 
			Если  РезультатЗапроса. Найти(Запись.СтатьяБюджета)= Неопределено Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Статья бюджета   " +Запись.СтатьяБюджета+"   недоступна к редактированию для выбранного сценария");
				Объект.Показатели.Удалить(Запись); 
			КонецЕсли;
			ИндексСтроки = ИндексСтроки - 1; 
		КонецЦикла; 
			
		Для Н=1 По Месяц(ДатаЗапретаРедактирования) Цикл 
			Для Каждого стр из Объект.Показатели Цикл
				Стр["Значение"+Н]=0;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;		

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Не ЗначениеЗаполнено(Объект.ДатаОкончания)  Тогда
		Отказ=Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заполните Дату окончания");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьНастройкиДоступаБюджетирование()
	
	//РезультатЗапроса= НастройкиДоступаБюджетирование();
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	НастройкиДоступаБюджетирование.ОбъектДоступа
	//|ИЗ
	//|	РегистрСведений.НастройкиДоступаБюджетирование КАК НастройкиДоступаБюджетирование
	//|ГДЕ
	//|	НастройкиДоступаБюджетирование.Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	//|	И НастройкиДоступаБюджетирование.Сценарий = &Сценарий";
	//
	//Запрос.УстановитьПараметр("Сценарий", Объект.Сценарий);

	//
	//РезультатЗапросаДата = Запрос.Выполнить();
	//
	//ЕСли  РезультатЗапросаДата.Пустой() Тогда
	//	Сообщить("Не установлена дата запрета редактирования для Сценария бюджета. Редактирование документа запрещено ");
	//	//ТолькоПросмотр = Истина;
	//	Элементы.Показатели.Доступность=Ложь;
	//Иначе
	//	
	//	ВыборкаДетальныеЗаписи = РезультатЗапросаДата.Выбрать();
	//	
	//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//		
	//		ДатаЗапретаРедактирования=ВыборкаДетальныеЗаписи.ОбъектДоступа;
	//		
	//	КонецЦикла;
	//	
	//	Если  НачалоДня(Объект.ДатаОкончания)<=ДатаЗапретаРедактирования Тогда
	//		Элементы.Показатели.Доступность=Ложь;
	//		//ТолькоПросмотр = Истина;	
	//	Иначе
	//		Для Н=1 По 12 Цикл
	//			Доступность=?(Н<=Месяц(ДатаЗапретаРедактирования), Ложь, Истина);
	//			Элементы.Показатели.ПодчиненныеЭлементы["ПоказателиЗначение"+Н].Доступность=Доступность;	
	//		КонецЦикла;
	//		Если Объект.Ссылка.Пустая() Тогда
	//			Для каждого стр из Объект.Показатели Цикл
	//				Если РезультатЗапроса.Найти(стр.СтатьяБюджета)=Неопределено Тогда
	//					Для Н=1 По 12 Цикл	
	//						стр["Значение"+Н]=0;
	//					Конеццикла;
	//				Иначе
	//					Для Н=1 По Месяц(ДатаЗапретаРедактирования) Цикл	
	//						стр["Значение"+Н]=0;
	//					Конеццикла;
	//					
	//				КонецЕсли;
	//			конецЦикла;
	//		КонецЕсли;
	//	КонецЕсли;
	//	
	//	РезультатОтдел=ДоступныеОтделыПользователя();
	//	
	//	ЕСли РезультатОтдел.Количество()=0  или РезультатОтдел.Найти(Объект.Отдел)=Неопределено Тогда
	//		//ТолькоПросмотр=Истина;
	//		Элементы.Показатели.Доступность=Ложь;
	//		Если Объект.Отдел<>Неопределено Тогда
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Вы не принадлежите списку Пользователей, которым разрешено редактирование документа по данному отделу");
	//		КонецЕсли;
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДоступныеОтделыПользователя()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НастройкиДоступаБюджетирование.ОбъектДоступа КАК ОбъектДоступа
	                      |ПОМЕСТИТЬ ОтделыНастроек
	                      |ИЗ
	                      |	РегистрСведений.НастройкиДоступаБюджетирование КАК НастройкиДоступаБюджетирование
	                      |ГДЕ
	                      |	ТИПЗНАЧЕНИЯ(НастройкиДоступаБюджетирование.ОбъектДоступа) = ТИП(Справочник.Отделы)
	                      |	И НастройкиДоступаБюджетирование.Сценарий = &Сценарий
	                      |	И НастройкиДоступаБюджетирование.Пользователь = &Пользователь
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Отделы.Ссылка
	                      |ИЗ
	                      |	Справочник.Отделы КАК Отделы
	                      |ГДЕ
	                      |	Отделы.Ссылка В ИЕРАРХИИ
	                      |			(ВЫБРАТЬ
	                      |				ОтделыНастроек.ОбъектДоступа
	                      |			ИЗ
	                      |				ОтделыНастроек КАК ОтделыНастроек)");
	
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Сценарий", Объект.Сценарий);
		
	РезультатОтдел=Запрос.Выполнить().Выгрузить();
	
	Возврат	 РезультатОтдел;
	
КонецФункции	

&НаСервере
Функция НастройкиДоступаБюджетирование()    // доступные статьи бюджета
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиДоступаБюджетирование.ОбъектДоступа
		|ИЗ
		|	РегистрСведений.НастройкиДоступаБюджетирование КАК НастройкиДоступаБюджетирование
		|ГДЕ
		|	НастройкиДоступаБюджетирование.Сценарий = &Сценарий
		|	И НастройкиДоступаБюджетирование.Пользователь = &Пользователь
		|	И ТИПЗНАЧЕНИЯ(НастройкиДоступаБюджетирование.ОбъектДоступа) = ТИП(Справочник.СтатьиБюджета)";
	
	Запрос.УстановитьПараметр("Сценарий", Объект.Сценарий);
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();

	Возврат РезультатЗапроса;
КонецФункции
