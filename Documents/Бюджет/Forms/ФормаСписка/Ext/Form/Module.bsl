
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	ВводНаОсновании.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюСоздатьНаОсновании);
	
	МенюОтчеты.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюОтчеты);
	
КонецПроцедуры
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОбновитьФильтрПериода();
	ОбновитьФильтрСтатусов(ФильтрСтатусы.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Для Каждого Строка Из Строки Цикл
		
		текДанные = Строка.Значение.Данные;
		Строка.Значение.Оформление["Период"].Элементы[8].Значение = ПредставлениеПериода(текДанные.ДатаНачала, КонецДня(текДанные.ДатаОкончания));
		
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьСписокСтатусов()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 	Ссылка Значение, ВЫБОР КОГДА Ссылка В(&Отмеченные) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ Пометка
	|ИЗ 		Перечисление.СтатусыБюджета
	|");
	
	Запрос.УстановитьПараметр("Отмеченные", ФильтрСтатусы.ВыгрузитьЗначения());
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат КонвертацияТипов.ПолучитьСписокЗначенийИзВыборки(Выборка,,,"Пометка");
	
КонецФункции

Процедура ОбновитьФильтрСтатусов(ВыбСтатусы)
	
	Если ФильтрСтатусы.Количество() Тогда
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Статус", ВыбСтатусы, Истина, ВидСравненияКомпоновкиДанных.ВСписке);
	Иначе
		ОтборыСписковКлиентСервер.УдалитьЭлементОтбораСписка(Список, "Статус");
	КонецЕсли;
	
КонецПроцедуры
Процедура ОбновитьФильтрПериода()
	
	Если ФильтрПериод.ДатаНачала = '00010101' Тогда
		
		Список.Параметры.УстановитьЗначениеПараметра("ФильтрПериод", Ложь);
		Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала", 		'00010101');
		Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", 	'00010101');
		ФильтрПериодСтр = "за все время";
		
	Иначе
		
		Список.Параметры.УстановитьЗначениеПараметра("ФильтрПериод", 	Истина);
		Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала", 		ФильтрПериод.ДатаНачала);
		Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", 	ФильтрПериод.ДатаОкончания);
		
		ФильтрПериодСтр = ПредставлениеПериода(ФильтрПериод.ДатаНачала, КонецДня(ФильтрПериод.ДатаОкончания));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтмеченныСтатусы(ВыбСписок, ДопПараметры) Экспорт
	
	Если ВыбСписок <> Неопределено Тогда
		
		ВыбСтатусы = КонвертацияТипов.ПолучитьОтмеченныеЗначенияСписка(ВыбСписок);
		ФильтрСтатусы.ЗагрузитьЗначения(ВыбСтатусы);
		
		ОбновитьФильтрСтатусов(ВыбСтатусы);
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ФильтрСтатусыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПолучитьСписокСтатусов().ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения("ОтмеченныСтатусы", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрСтатусыОчистка(Элемент, СтандартнаяОбработка)
	
	ОтмеченныСтатусы(Новый СписокЗначений, Новый Структура);
	
КонецПроцедуры


&НаКлиенте
Процедура ВыбранПериод(текпериод, ДопСвойства) Экспорт
	
	Если текПериод <> Неопределено Тогда
		ФильтрПериод = текпериод;
		ОбновитьФильтрПериода();
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ФильтрПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода;
	Диалог.Период = ФильтрПериод;
	Диалог.Показать(Новый ОписаниеОповещения("ВыбранПериод", ЭтаФорма));
	
КонецПроцедуры
&НаКлиенте
Процедура ФильтрПериодПриИзменении(Элемент)
	
	ОбновитьФильтрПериода();
	
КонецПроцедуры
&НаКлиенте
Процедура ФильтрПериодОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФильтрПериод.ДатаНачала = '00010101';
	ОбновитьФильтрПериода();
	
КонецПроцедуры
