#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Запись книги покупок".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЗаписьКнигиПокупок) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ЗаписьКнигиПокупок.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ЗаписьКнигиПокупок);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ФормироватьОтчетностьПоНДС";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                 КАК Ссылка,
	|	ДанныеДокумента.Дата                   КАК Период,
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.Контрагент             КАК Контрагент,
	|	ДанныеДокумента.Валюта                 КАК Валюта,
	|	ДанныеДокумента.ДокументРасчетов       КАК ДокументРасчетов,
	|	ДанныеДокумента.ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЗаписьДополнительногоЛиста
	|			ТОГДА ДанныеДокумента.КорректируемыйПериод
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ                                      КАК КорректируемыйПериод,
	|	ДанныеДокумента.КодВидаОперации            КАК КодВидаОперации,
	|	ДанныеДокумента.ПредъявленСчетФактура      КАК ПредъявленСчетФактура,
	|	ДанныеДокумента.ДатаСчетаФактуры           КАК ДатаСчетаФактуры,
	|	ДанныеДокумента.НомерСчетаФактуры          КАК НомерСчетаФактуры,
	|	ДанныеДокумента.ДатаПолучения              КАК ДатаПолучения,
	|	ДанныеДокумента.ПолученВЭлектронномВиде    КАК ПолученВЭлектронномВиде,
	|	ДанныеДокумента.СпособКорректировкиНДС     КАК СпособКорректировкиНДС,
	|	ДанныеДокумента.КППКонтрагента             КАК КППКонтрагента,
	|	ДанныеДокумента.ИННКонтрагента             КАК ИННКонтрагента
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Реквизиты.Валюта, Реквизиты.Валюта, Реквизиты.Период);
	
	Запрос.УстановитьПараметр("Период",                          Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",                     Реквизиты.Организация);
	Запрос.УстановитьПараметр("Поставщик",                       Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Валюта",                          Реквизиты.Валюта);
	Запрос.УстановитьПараметр("СчетФактура",                     ?(ЗначениеЗаполнено(Реквизиты.ДокументРасчетов), Реквизиты.ДокументРасчетов, ДокументСсылка));
	Запрос.УстановитьПараметр("ЗаписьДополнительногоЛиста",      Реквизиты.ЗаписьДополнительногоЛиста);
	Запрос.УстановитьПараметр("КорректируемыйПериод",            Реквизиты.КорректируемыйПериод);
	Запрос.УстановитьПараметр("КодВидаОперации",                 Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("ПредъявленСчетФактура",           Реквизиты.ПредъявленСчетФактура);
	Запрос.УстановитьПараметр("ДатаСчетаФактуры",                Реквизиты.ДатаСчетаФактуры);
	Запрос.УстановитьПараметр("НомерСчетаФактуры",               Реквизиты.НомерСчетаФактуры);
	Запрос.УстановитьПараметр("ДатаПолучения",                   Реквизиты.ДатаПолучения);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде",         ?(Реквизиты.ПолученВЭлектронномВиде,2,1));
	Запрос.УстановитьПараметр("СпособКорректировкиНДС",          Реквизиты.СпособКорректировкиНДС);
	Запрос.УстановитьПараметр("ЭтоТаможеннаяДекларация",         ЗначениеЗаполнено(Реквизиты.ДокументРасчетов) 
	                                                             И ТипЗнч(Реквизиты.ДокументРасчетов) = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт"));
	Запрос.УстановитьПараметр("ВалютаРеглУчета",                 Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",  Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КППКонтрагента",                  Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("ИННКонтрагента",                  Реквизиты.ИННКонтрагента);
	
	ВидыЦенностиНалоговыйАгент = Новый Массив;
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентКомитент);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	Запрос.УстановитьПараметр("ВидыЦенностиНалоговыйАгент", ВидыЦенностиНалоговыйАгент);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПокупок";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	ВЫБОР 
	|		КОГДА &ЗаписьДополнительногоЛиста
	|			ТОГДА &Период
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Поставщик,
	|	&ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	&КорректируемыйПериод КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.ВидЦенности
	|		КОГДА ТаблицаЦенности.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.Событие
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ТаблицаЦенности.СтавкаНДС КАК СтавкаНДС,
	|	ВЫРАЗИТЬ((ВЫБОР
	|				КОГДА &ЭтоТаможеннаяДекларация
	|					ТОГДА 0
	|				КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|					ТОГДА ТаблицаЦенности.Сумма
	|				ИНАЧЕ - ТаблицаЦенности.Сумма
	|			КОНЕЦ) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ((ВЫБОР
	|				КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|					ТОГДА ТаблицаЦенности.СуммаНДС
	|				ИНАЧЕ -ТаблицаЦенности.СуммаНДС
	|			КОНЕЦ) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК НДС,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Период
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Ссылка
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДокументОплаты,
	|	NULL КАК НомерДокументаОплаты,
	|	NULL КАК ДатаДокументаОплаты,
	|	&КодВидаОперации КАК КодВидаОперации
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И (ВЫБОР
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения <> ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	ВЫБОР 
	|		КОГДА &ЗаписьДополнительногоЛиста
	|			ТОГДА &Период
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Поставщик,
	|	&ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	&КорректируемыйПериод КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.ВидЦенности
	|		КОГДА ТаблицаЦенности.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.Событие
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ТаблицаЦенности.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК НДС,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Период
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Ссылка
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДокументОплаты,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокументаОплаты,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокументаОплаты,
	|	&КодВидаОперации КАК КодВидаОперации
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЗаписьКнигиПокупок.ДокументыОплаты КАК ТаблицаДокументыОплаты
	|	ПО
	|		ТаблицаЦенности.Ссылка = ТаблицаДокументыОплаты.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = &Организация
	|		И ТаблицаДокументыОплаты.ДокументОплаты = ДанныеПервичныхДокументов.Документ
	|	
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И (ВЫБОР
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения <> ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&ДатаПолучения КАК Период,
	|	&Организация                                                                                КАК Организация,
	|	&Поставщик                                                                                  КАК Контрагент,
	|	ТаблицаЦенности.Ссылка                                                                      КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)                 КАК ЧастьЖурнала,
	|	&ДатаПолучения                                                                              КАК ДатаВыставленияПолучения,
	|	&ПолученВЭлектронномВиде                                                                    КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                                                                            КАК КодВидаОперации,
	|	&НомерСчетаФактуры                                                                          КАК НомерСчетаФактуры,
	|	&ДатаСчетаФактуры                                                                           КАК ДатаСчетаФактуры,
	|	&Валюта                                                                                     КАК Валюта,
	|	&КППКонтрагента                                                                             КАК КППКонтрагента,
	|	&ИННКонтрагента                                                                             КАК ИННКонтрагента,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|				И СУММА(ТаблицаЦенности.Сумма + ТаблицаЦенности.СуммаНДС) < 0
	|			ТОГДА -СУММА(ТаблицаЦенности.Сумма + ТаблицаЦенности.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл
	|		ИНАЧЕ СУММА(ТаблицаЦенности.Сумма + ТаблицаЦенности.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ                                                                                       КАК СуммаПоСчетуФактуре,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|				И СУММА(ТаблицаЦенности.СуммаНДС) < 0
	|			ТОГДА -СУММА(ТаблицаЦенности.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл
	|		ИНАЧЕ СУММА(ТаблицаЦенности.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ                                                                                       КАК СуммаНДС
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И &ПредъявленСчетФактура 
	|	И &ДатаПолучения <> ДАТАВРЕМЯ(1,1,1)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦенности.Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.Сумма КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	ТаблицаДокумента.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК СуммаНДСРегл,
	|	ТаблицаДокумента.Сумма * &КоэффициентПересчетаВВалютуУпр КАК СуммаБезНДСУпр,
	|	ТаблицаДокумента.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК СуммаНДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции


#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
