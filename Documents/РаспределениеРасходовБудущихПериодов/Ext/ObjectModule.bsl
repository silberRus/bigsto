#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	РаспределениеРасходов.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Проверим соответствие сумм документа и табличной части.
	Если СуммаДокумента <> РаспределениеРасходов.Итог("Сумма")
	 ИЛИ СуммаДокументаРегл <> РаспределениеРасходов.Итог("СуммаРегл")
	 ИЛИ СуммаДокументаПР <> РаспределениеРасходов.Итог("ПостояннаяРазница")
	 ИЛИ СуммаДокументаВР <> РаспределениеРасходов.Итог("ВременнаяРазница") Тогда
		Текст = НСтр("ru = 'Сумма по строкам в табличной части должна равняться соответствующим суммам документа'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ЭтотОбъект,
			"РаспределениеРасходов[0].Дата",
			,
			Отказ);
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	РеквизитыПроверкиАналитик = Новый Массив;
	РеквизитыПроверкиАналитик.Добавить("СтатьяРасходов, АналитикаРасходов");
	РеквизитыПроверкиАналитик.Добавить(Новый Структура("РаспределениеРасходов"));
	ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
		ЭтотОбъект, РеквизитыПроверкиАналитик, МассивНепроверяемыхРеквизитов, Отказ);
		
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ОчиститьСуммыУпр = Ложь;
		ОчиститьСуммырегл = Ложь;
		Если ВариантУказанияСуммыУпр = Перечисления.ВариантыУказанияСуммыРБП.ОпределяетсяАвтоматически Тогда
			Если СуммаДокумента <> 0 ИЛИ СуммаДокументаУпр <> 0 Тогда
				СуммаДокумента = 0;
				СуммаДокументаУпр = 0;
			КонецЕсли;
			Если РаспределениеРасходов.Итог("Сумма") <> 0 ИЛИ РаспределениеРасходов.Итог("СуммаУпр") <> 0 Тогда
				ОчиститьСуммыУпр = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ВариантУказанияСуммыРегл = Перечисления.ВариантыУказанияСуммыРБП.ОпределяетсяАвтоматически Тогда
			Если СуммаДокументаРегл <> 0 ИЛИ СуммаДокументаПР <> 0 ИЛИ СуммаДокументаВР <> 0 Тогда
				СуммаДокументаРегл = 0;
				СуммаДокументаПР = 0;
				СуммаДокументаВР = 0;
			КонецЕсли;
			Если РаспределениеРасходов.Итог("СуммаРегл") <> 0
			 ИЛИ РаспределениеРасходов.Итог("ПостояннаяРазница") <> 0
			 ИЛИ РаспределениеРасходов.Итог("ВременнаяРазница") <> 0 Тогда
				ОчиститьСуммыРегл = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ОчиститьСуммыУпр ИЛИ ОчиститьСуммыРегл Тогда
			Для Каждого Строка Из РаспределениеРасходов Цикл
				Если ОчиститьСуммыУпр Тогда
					Строка.Сумма = 0;
					Строка.СуммаУпр = 0;
				КонецЕсли;
				Если ОчиститьСуммыРегл Тогда
					Строка.СуммаРегл = 0;
					Строка.ПостояннаяРазница = 0;
					Строка.ВременнаяРазница = 0;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.РаспределениеРасходовБудущихПериодов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Регистрация задания к расчету себестоимости.
	ИменаРеквизитов = "ВариантРаспределенияРасходовУпр, ВариантРаспределенияРасходовРегл";
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтатьяРасходов, ИменаРеквизитов);
	
	Если (ВариантУказанияСуммыУпр = Перечисления.ВариантыУказанияСуммыРБП.ОпределяетсяАвтоматически
	 	И Реквизиты.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
	 ИЛИ (ВариантУказанияСуммыРегл = Перечисления.ВариантыУказанияСуммыРБП.ОпределяетсяАвтоматически
	 	И Реквизиты.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов) Тогда
		РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьЗаписьРегистра(Дата, Ссылка, Организация);
	КонецЕсли;
	
	// Движения по прочим расходам.
	ДоходыИРасходыСервер.ОтразитьПрочиеРасходы(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПартииПрочихРасходов(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПрочиеАктивыПассивы(ДополнительныеСвойства, Движения, Отказ);
	
	// Движения по оборотным регистрам управленческого учета
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияДоходыРасходыПрочиеАктивыПассивы(ДополнительныеСвойства, Движения, Отказ);
	// Запись наборов записей
	СформироватьСписокРегистровДляКонтроля();
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный = Пользователи.ТекущийПользователь();
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ТекущаяОрганизация", "");
		Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	КонецЕсли;
	Если ДанныеЗаполнения <> Неопределено Тогда
		СуммаДокумента = СуммаДокумента + ?(ДанныеЗаполнения.Свойство("СуммаДокумента"), ДанныеЗаполнения.СуммаДокумента, 0);
		СуммаДокументаУпр = СуммаДокументаУпр + ?(ДанныеЗаполнения.Свойство("СуммаДокументаУпр"), ДанныеЗаполнения.СуммаДокументаУпр, 0);
		СуммаДокументаРегл = СуммаДокументаРегл + ?(ДанныеЗаполнения.Свойство("СуммаДокументаРегл"), ДанныеЗаполнения.СуммаДокументаРегл, 0);
		СуммаДокументаПР = СуммаДокументаПР + ?(ДанныеЗаполнения.Свойство("СуммаДокументаПР"), ДанныеЗаполнения.СуммаДокументаПР, 0);
		СуммаДокументаВР = СуммаДокументаВР + ?(ДанныеЗаполнения.Свойство("СуммаДокументаВР"), ДанныеЗаполнения.СуммаДокументаВР, 0);
		Если СуммаДокумента <> 0 ИЛИ СуммаДокументаУпр <> 0 Тогда
			ВариантУказанияСуммыУпр = Перечисления.ВариантыУказанияСуммыРБП.УказываетсяВручную;
		КонецЕсли;
		Если СуммаДокументаРегл <> 0 ИЛИ СуммаДокументаПР <> 0 ИЛИ СуммаДокументаВР <> 0 Тогда
			ВариантУказанияСуммыРегл = Перечисления.ВариантыУказанияСуммыРБП.УказываетсяВручную;
		КонецЕсли;
	Иначе
		Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ТекущаяОрганизация", "");
		Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;
	// Контроль при перепроведении и отмене проведения
	Если Не ДополнительныеСвойства.ЭтоНовый Тогда
		Массив.Добавить(Движения.ПрочиеРасходы);
	КонецЕсли;

	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Массив.Добавить(Движения.ПрочиеРасходы);
	КонецЕсли;
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли
