#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.СчетНаОплатуКлиенту.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Справочники.ПретензииКлиентов.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Отчет комиссионера о списании".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ОтчетКомиссионераОСписании) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ОтчетКомиссионераОСписании.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ОтчетКомиссионераОСписании);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКомиссиюПриПродажах";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСостояниеРасчетовСКомиссионерами(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуТоварыПереданныеНаКомиссию(КомандыОтчетов);
	
КонецПроцедуры

// Функция определяет реквизиты документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ОтчетКомиссионераОСписании - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаВзаиморасчетов,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.НачалоПериода КАК НачалоПериода,
	|	ДанныеДокумента.КонецПериода КАК КонецПериода,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ПорядокРасчетов КАК ПорядокРасчетов
	|
	|ИЗ
	|	Документ.ОтчетКомиссионераОСписании КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
		Партнер = Выборка.Партнер;
		Контрагент = Выборка.Контрагент;
		Договор = Выборка.Договор;
		НаправлениеДеятельности = Выборка.НаправлениеДеятельности;
		ПорядокРасчетов = Выборка.ПорядокРасчетов;
		ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
		СуммаДокумента = Выборка.СуммаДокумента;
		СуммаВзаиморасчетов = ?(Выборка.Проведен, Выборка.СуммаВзаиморасчетов, 0);
		НачалоПериода = Выборка.НачалоПериода;
		КонецПериода = Выборка.КонецПериода;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		НаправлениеДеятельности = Справочники.НаправленияДеятельности.ПустаяСсылка();
		ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПустаяСсылка();
		ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
		СуммаДокумента = 0;
		СуммаВзаиморасчетов = 0;
		НачалоПериода = Неопределено;
		КонецПериода = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация, Партнер, Контрагент, Договор, ПорядокРасчетов, ВалютаВзаиморасчетов, ХозяйственнаяОперация, СуммаДокумента, СуммаВзаиморасчетов, НачалоПериода, КонецПериода, НаправлениеДеятельности",
		Дата,
		Организация,
		Партнер,
		Контрагент,
		Договор,
		ПорядокРасчетов,
		ВалютаВзаиморасчетов,
		Перечисления.ХозяйственныеОперации.ОтчетКомиссионераОСписании,
		СуммаДокумента,
		СуммаВзаиморасчетов,
		НачалоПериода,
		КонецПериода,
		НаправлениеДеятельности);
	
	Возврат СтруктураРеквизитов;

КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Организация                КАК Организация,
	|	ДанныеДокумента.Партнер                    КАК Партнер,
	|	ДанныеДокумента.Контрагент                 КАК Контрагент,
	|	ДанныеДокумента.Дата                       КАК Период,
	|	ДанныеДокумента.ДатаПлатежа                КАК ДатаПлатежа,
	|	ДанныеДокумента.Валюта                     КАК Валюта,
	|	ДанныеДокумента.Менеджер              	   КАК Менеджер,
	|	ДанныеДокумента.Подразделение              КАК Подразделение,
	|	ДанныеДокумента.Подразделение.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
	|	ДанныеДокумента.НалогообложениеНДС         КАК НалогообложениеНДС,
	|	ДанныеДокумента.Соглашение                 КАК Соглашение,
	|	ДанныеДокумента.СтатьяДоходов              КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов           КАК АналитикаДоходов,
	|	ДанныеДокумента.СтатьяРасходов             КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов          КАК АналитикаРасходов,
	|	ДанныеДокумента.Договор                    КАК Договор,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ                                  КАК РасчетыПоДоговорам,
	|		
	|	ВЫБОР КОГДА ДанныеДокумента.КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|		ИЛИ ДанныеДокумента.КонецПериода > ДанныеДокумента.Дата ТОГДА
	|				ДанныеДокумента.Дата
	|			ИНАЧЕ
	|				ДанныеДокумента.КонецПериода
	|		КОНЕЦ                                  КАК КонецПериода,
	|		
	|	ДанныеДокумента.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности     КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ОтчетКомиссионераОСписании КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
		
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                 			Реквизиты.Период);
	Запрос.УстановитьПараметр("КонецПериода",           			КонецДня(Реквизиты.КонецПериода));
	Запрос.УстановитьПараметр("Валюта",                 			Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Организация",            			Реквизиты.Организация);
	Запрос.УстановитьПараметр("Партнер",                			Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Соглашение",             			Реквизиты.Соглашение);
	Запрос.УстановитьПараметр("Менеджер",          					Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("Подразделение",          			Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ВариантОбособленногоУчетаТоваров",   Реквизиты.ВариантОбособленногоУчетаТоваров);
	Запрос.УстановитьПараметр("НалогообложениеНДС",   				Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("СтатьяДоходов",          			Реквизиты.СтатьяДоходов);
	Запрос.УстановитьПараметр("АналитикаДоходов",       			Реквизиты.АналитикаДоходов);
	Запрос.УстановитьПараметр("СтатьяРасходов",         			Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов",      			Реквизиты.АналитикаРасходов);
	Запрос.УстановитьПараметр("Договор",                			Реквизиты.Договор);
	Запрос.УстановитьПараметр("РасчетыПоДоговорам",     			Реквизиты.РасчетыПоДоговорам);
	Запрос.УстановитьПараметр("Контрагент",             			Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета", 			Реквизиты.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("ДатаПлатежа", 						Реквизиты.ДатаПлатежа);
	
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", 	Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",			Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",          	Перечисления.ХозяйственныеОперации.ОтчетКомиссионераОСписании);
	
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов",
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	
	Запрос.УстановитьПараметр("НаправлениеДеятельности", Реквизиты.НаправлениеДеятельности);	
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ТекстЗапросаВтРасчетыПоНакладной(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасчетыПоНакладной";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СУММА(РасчетыПоНакладной.Сумма)     КАК СуммаВзаиморасчетов,
	|	СУММА(РасчетыПоНакладной.СуммаРегл) КАК СуммаРегл,
	|	СУММА(РасчетыПоНакладной.СуммаУпр)  КАК СуммаУпр
	|ПОМЕСТИТЬ ВтРасчетыПоНакладной
	|ИЗ (ВЫБРАТЬ
	|		СУММА(ДанныеДокумента.СуммаДокумента) КАК Сумма,
	|		ВЫРАЗИТЬ(СУММА(ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) СуммаРегл,
	|		ВЫРАЗИТЬ(СУММА(ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) СуммаУпр
	|	ИЗ
	|		Документ.ОтчетКомиссионераОСписании КАК ДанныеДокумента
	|	ГДЕ
	|		НЕ &РасчетыПоДоговорам
	|		И ДанныеДокумента.Ссылка = &Ссылка
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		СУММА(-РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК Сумма,
	|		ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|		ВЫРАЗИТЬ(СУММА(-РасшифровкаПлатежа.Сумма) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СуммаУпр
	|	ИЗ
	|		Документ.ОтчетКомиссионераОСписании.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|	ГДЕ
	|		РасшифровкаПлатежа.Ссылка = &Ссылка
	|		И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО) КАК РасчетыПоНакладной
	|ИМЕЮЩИЕ СУММА(РасчетыПоНакладной.Сумма) <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПереданныеНаКомиссию";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнойТаблицыВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
		|	&КонецПериода                                 КАК Период,
		|	&Организация                                  КАК Организация,
		|	&Партнер                                      КАК Партнер,
		|	&Соглашение                                   КАК Соглашение,
		|	ТаблицаВидыЗапасов.Номенклатура               КАК Номенклатура,
		|	ТаблицаВидыЗапасов.Характеристика             КАК Характеристика,
		|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
		|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
		|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
		|	0                                             КАК СуммаВыручки,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	&НалогообложениеНДС                           КАК НалогообложениеНДС
		|ИЗ
		|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнойТаблицыВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	Строки.Валюта КАК Валюта,
	|	Строки.ВидЗапасов КАК ВидЗапасов,
	|	Строки.АналитикаНоменклатурыКомитента КАК АналитикаУчетаНоменклатуры,
	|	Строки.Номенклатура КАК Номенклатура,
	|	Строки.Характеристика КАК Характеристика,
	|	Строки.НомерГТД КАК НомерГТД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Строки.Количество КАК КоличествоСписано
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыПоНакладной", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыПоНакладной(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
		|	&Период КАК ДатаРегистратора,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|
		|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|
		|	&Договор КАК ЗаказКлиента,
		|
		|	&Валюта КАК Валюта,
		|	
		|	Истина КАК ИсключатьПриКонтроле,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	
		|	ДанныеДокумента.СуммаДокумента КАК Сумма,
		|	0 КАК КОплате,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаУпр
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании КАК ДанныеДокумента
		|	
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И ДанныеДокумента.СуммаДокумента <> 0
		|	И &РасчетыПоДоговорам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период                                КАК Период,
		|	&ДатаПлатежа                           КАК ДатаПлатежа,
		|	&Период                                КАК ДатаРегистратора,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&АналитикаУчетаПоПартнерам             КАК АналитикаУчетаПоПартнерам,
		|
		|	&Ссылка                                КАК ЗаказКлиента,
		|
		|	&Валюта                                КАК Валюта,
		|	Истина                                 КАК ИсключатьПриКонтроле,
		|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
		|	
		|	РасчетыПоНакладной.СуммаВзаиморасчетов КАК Сумма,
		|	0                                      КАК КОплате,
		|	РасчетыПоНакладной.СуммаРегл           КАК СуммаРегл,
		|	РасчетыПоНакладной.СуммаУпр            КАК СуммаУпр
		|ИЗ
		|	ВтРасчетыПоНакладной КАК РасчетыПоНакладной
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, День) КАК Период,
		|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
		|	&Период КАК ДатаРегистратора,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|
		|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|
		|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
		|		&Договор
		|	ИНАЧЕ
		|		&Ссылка
		|	КОНЕЦ КАК ЗаказКлиента,
		|
		|	&Валюта КАК Валюта,
		|	
		|	Истина КАК ИсключатьПриКонтроле,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	
		|	0 КАК Сумма,
		|	ДанныеДокумента.СуммаДокумента КАК КОплате,
		|	0 КАК СуммаРегл,
		|	0 КАК СуммаУпр
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании КАК ДанныеДокумента
		|	
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И ДанныеДокумента.СуммаДокумента <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период                                       КАК Период,
		|	&Период                                       КАК ДатаПлатежа,
		|	&Период                                       КАК ДатаРегистратора,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
		|	&АналитикаУчетаПоПартнерам                    КАК АналитикаУчетаПоПартнерам,
		|
		|	&Ссылка                                       КАК ЗаказКлиента,
		|
		|	&Валюта                                       КАК Валюта,
		|	Истина                                        КАК ИсключатьПриКонтроле,
		|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
		|	
		|	0                                             КАК Сумма,
		|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК КОплате,
		|	0                                             КАК СуммаРегл,
		|	0                                             КАК СуммаУпр
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании.РасшифровкаПлатежа КАК РасшифровкаПлатежа
		|ГДЕ
		|	РасшифровкаПлатежа.Ссылка = &Ссылка
		|	И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
		|ИМЕЮЩИЕ
		|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период                                КАК Период,
		|	&Период                                КАК ДатаПлатежа,
		|	&Период                                КАК ДатаРегистратора,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&АналитикаУчетаПоПартнерам             КАК АналитикаУчетаПоПартнерам,
		|
		|	РасшифровкаПлатежа.Заказ               КАК ЗаказКлиента,
		|
		|	&Валюта                                КАК Валюта,
		|	Истина                                 КАК ИсключатьПриКонтроле,
		|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
		|	
		|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
		|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК КОплате,
		|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
		|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаУпр
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании.РасшифровкаПлатежа КАК РасшифровкаПлатежа
		|ГДЕ
		|	РасшифровкаПлатежа.Ссылка = &Ссылка
		|	И НЕ РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
		|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов,
		|	ДанныеДокумента.АналитикаДоходов КАК АналитикаДоходов,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК Сумма,
		|	(ВЫБОР
		|		КОГДА &УправленческийУчетОрганизаций
		|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
		|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
		|	(ВЫБОР
		|		КОГДА &ИспользоватьУчетПрочихДоходовРасходовРегл
		|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
		|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании КАК ДанныеДокумента
		|	
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И ДанныеДокумента.СуммаДокумента <> 0
		|	И &ИспользоватьУчетПрочихДоходовРасходов";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураДоходыРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнойТаблицыВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	&Организация КАК Организация,
		|	&Подразделение КАК Подразделение,
		|
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
		|	&Партнер КАК Склад,
		|	ТаблицаТовары.ТипЗапасов КАК ТипЗапасов,
		|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
		|		ТаблицаТовары.ВидЗапасов
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|	КОНЕЦ КАК ВидЗапасов,
		|
		|	&НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
		|	&СтатьяРасходов КАК СтатьяДоходовРасходов,
		|	&АналитикаРасходов КАК АналитикаРасходов,
		|
		|	ТаблицаТовары.Количество КАК Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|
		|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
		|		ТаблицаТовары.ВидЗапасов
		|	ИНАЧЕ 
		|		ТаблицаТовары.Номенклатура
		|	КОНЕЦ КАК ИсточникГФУНоменклатуры
		|
		|ИЗ
		|	ВтВидыЗапасов КАК ТаблицаТовары";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ДоходыПоОтчетуКомиссионераОСписании) КАК ХозяйственнаяОперация,
		|	&Организация КАК Организация,
		|	&Подразделение КАК Подразделение,
		|	
		|	&Партнер КАК Партнер,
		|	&Контрагент КАК Контрагент,
		|	&Договор КАК Договор,
		|	ВЫБОР
		|		КОГДА &РасчетыПоДоговорам
		|			ТОГДА &Договор
		|		ИНАЧЕ &Ссылка
		|	КОНЕЦ КАК ОбъектРасчетов,
		|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
		|	
		|	&НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
		|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходовРасходов,
		|	ДанныеДокумента.АналитикаДоходов КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК Сумма,
		|	0 КАК СуммаБезНДС,
		|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаРегл,
		|	0 КАК СуммаРеглБезНДС,
		|	
		|	&Валюта КАК Валюта,
		|	ДанныеДокумента.СуммаДокумента КАК СуммаВВалюте,
		|	0 КАК СуммаБезНДСВВалюте,
		|	
		|	&Валюта КАК ВалютаВзаиморасчетов,
		|	ДанныеДокумента.СуммаДокумента КАК СуммаВВалютеВзаиморасчетов,
		|	0 КАК СуммаБезНДСВВалютеВзаиморасчетов,
		|	
		|	ВЫБОР КОГДА &РасчетыПоДоговорам
		|		ТОГДА &Договор
		|		ИНАЧЕ &Ссылка
		|	КОНЕЦ КАК ИсточникГФУРасчетов
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании КАК ДанныеДокумента
		|	
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И ДанныеДокумента.СуммаДокумента <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнойТаблицыВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Строки.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)КАК ВидДвижения,
	|	&КонецПериода КАК Период,
	|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ВЫБОР КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		Строки.ВидЗапасов
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|			ТОГДА &Менеджер
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаФинансовогоУчета,
	|	&НалогообложениеНДС 											КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) 			КАК ТипЗаписи,
    |
	|	Строки.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&СтатьяРасходов КАК СтатьяРасходовСписания,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&Подразделение КАК Подразделение,
	|	ЕСТЬNULL(ПрочиеРасходы.ОрганизацияПолучатель, НЕОПРЕДЕЛЕНО) КАК КорОрганизация
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтПрочиеРасходы КАК ПрочиеРасходы
	|		ПО ПрочиеРасходы.СтатьяРасходов = &СтатьяРасходов
	|		И ПрочиеРасходы.АналитикаРасходов = &АналитикаРасходов
	|ГДЕ
	|	Строки.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Строки.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)КАК ВидДвижения,
	|	&КонецПериода КАК Период,
	|	Строки.АналитикаНоменклатурыКомитента КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|			ТОГДА &Менеджер
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаФинансовогоУчета,
	|	&НалогообложениеНДС 											КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) 			КАК ТипЗаписи,
    |
	|	Строки.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&СтатьяРасходов КАК СтатьяРасходовСписания,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&Подразделение КАК Подразделение,
	|	ЕСТЬNULL(ПрочиеРасходы.ОрганизацияПолучатель, НЕОПРЕДЕЛЕНО) КАК КорОрганизация
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтПрочиеРасходы КАК ПрочиеРасходы
	|		ПО ПрочиеРасходы.СтатьяРасходов = &СтатьяРасходов
	|		И ПрочиеРасходы.АналитикаРасходов = &АналитикаРасходов
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнойТаблицыВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ПересчитатьТаблицуТоваров(Запрос);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Валюта КАК Валюта,
		|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДС,
		|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
		|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
		|		ТОГДА ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС
		|		ИНАЧЕ ПересчитаннаяТаблицаДокумента.СуммаБезНДСРегл
		|	КОНЕЦ КАК СуммаБезНДСРегл,
		|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
		|		ТОГДА ТаблицаВидыЗапасов.СуммаНДС
		|		ИНАЧЕ ПересчитаннаяТаблицаДокумента.СуммаНДСРегл
		|	КОНЕЦ КАК СуммаНДСРегл,
		|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
		|		ТОГДА ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС
		|		ИНАЧЕ ПересчитаннаяТаблицаДокумента.СуммаБезНДСУпр
		|	КОНЕЦ КАК СуммаБезНДСУпр,
		|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
		|		ТОГДА ТаблицаВидыЗапасов.СуммаНДС
		|		ИНАЧЕ ПересчитаннаяТаблицаДокумента.СуммаНДСУпр
		|	КОНЕЦ КАК СуммаНДСУпр,
		|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
		|
		|ИЗ
		|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаТоваровПредварительная КАК ПересчитаннаяТаблицаДокумента
		|	ПО
		|		ТаблицаВидыЗапасов.ИдентификаторСтроки = ПересчитаннаяТаблицаДокумента.ИдентификаторСтроки
		|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнойТаблицыВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	АналитикаКомитента.КлючАналитики КАК АналитикаНоменклатурыКомитента,
		|	Аналитика.Номенклатура КАК Номенклатура,
		|	Аналитика.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
		|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта КАК Валюта,
		|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
		|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
		|	ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара КАК ВладелецТовара,
		|	ТаблицаВидыЗапасов.Количество КАК Количество,
		|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
		|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
		|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки
		|
		|ПОМЕСТИТЬ ВтВидыЗапасов
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании.ВидыЗапасов КАК ТаблицаВидыЗапасов
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
		|	ПО
		|		ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара = АналитикаКомитента.Склад
		|		И Аналитика.Номенклатура = АналитикаКомитента.Номенклатура
		|		И Аналитика.Характеристика = АналитикаКомитента.Характеристика
		|		И Аналитика.Назначение = АналитикаКомитента.Назначение
		|		И Аналитика.Серия = АналитикаКомитента.Серия
		|ГДЕ
		|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос("
		|ВЫБРАТЬ
		|	ВидыЗапасов.ВладелецТовара КАК Склад,
		|	Аналитика.Номенклатура КАК Номенклатура,
		|	Аналитика.Характеристика КАК Характеристика,
		|	Аналитика.Назначение КАК Назначение,
		|	Аналитика.Серия КАК Серия
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании.ВидыЗапасов КАК ТаблицаВидыЗапасов
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.ВидыЗапасов КАК ВидыЗапасов
		|	ПО
		|		ТаблицаВидыЗапасов.ВидЗапасов = ВидыЗапасов.Ссылка
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
		|	ПО
		|		Аналитика.Номенклатура = Ключи.Номенклатура
		|		И Аналитика.Характеристика = Ключи.Характеристика
		|		И Аналитика.Назначение = Ключи.Назначение
		|		И Аналитика.Серия = Ключи.Серия
		|		И ВидыЗапасов.ВладелецТовара = Ключи.Склад
		|ГДЕ
		|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
		|	И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|	И Ключи.Номенклатура ЕСТЬ NULL");
	
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.Валюта, Запрос.Параметры.Валюта, Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",  Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерам") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Запрос.Параметры));
	
КонецПроцедуры

Процедура ПересчитатьТаблицуТоваров(Запрос)
	
	Если Запрос.Параметры.Свойство("ТаблицаТоваровПредварительнаяРасчитана") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПредварительный = Новый Запрос;
	ЗапросПредварительный.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросПредварительный.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ОтчетКомиссионераОСписании.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	ЗапросПредварительный.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросПредварительный.УстановитьПараметр("Период", Запрос.Параметры.Период);
	ЗапросПредварительный.УстановитьПараметр("Валюта", Запрос.Параметры.Валюта);
	
	ЗапросПредварительный.Выполнить();
	
	ВалютыДляПересчета = Новый Структура;
	ВалютыДляПересчета.Вставить("Регл", Константы.ВалютаРегламентированногоУчета.Получить());
	ВалютыДляПересчета.Вставить("Упр", Константы.ВалютаУправленческогоУчета.Получить());
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалюты(Запрос.МенеджерВременныхТаблиц, ВалютыДляПересчета);
	
	Запрос.УстановитьПараметр("ТаблицаТоваровПредварительнаяРасчитана", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы();
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ" + "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Отчет комиссионера о списании
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "ОтчетКомиссионераСписание";
	КомандаПечати.Представление = НСтр("ru = 'Отчет комиссионера о списании'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссииОСписании(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Контрагент КАК Комиссионер,
	|	ДанныеДокумента.Организация КАК Комитент,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	"""" КАК ПредставительКомитента,
	|	ДанныеДокумента.Менеджер.ФизическоеЛицо КАК ПредставительКомиссионера
	|ИЗ
	|	Документ.ОтчетКомиссионераОСписании КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка КАК Ссылка,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|			ИНАЧЕ ТаблицаТовары.Упаковка
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Упаковка КАК Упаковка,
	|		ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|		ТаблицаТовары.Цена КАК Цена,
	|		ТаблицаТовары.СуммаСНДС КАК Сумма,
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ОтчетКомиссионераОСписании.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В(&МассивДокументов)
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	Ссылка");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВложенныйЗапрос.Упаковка",
			"ВложенныйЗапрос.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Заголовок 					= НСтр("ru = 'Отчет комиссионера о списании'");
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
	СтруктураДанныхДляПечати 	= Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, Заголовок",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		Заголовок);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl" и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов 
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

#КонецОбласти 

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
