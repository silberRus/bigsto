#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Перем ИмяПоля;
	Перем ДокументОснование;
	Перем ДатаПоступления;
	ТекстСообщенияОНекорректномСоздании = НСтр("ru = 'Приходный ордер на товары нужно вводить из формы ""Приемка"".'");
		
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ДанныеЗаполнения.Свойство("Склад",                      Склад);
		ДанныеЗаполнения.Свойство("Помещение",                  Помещение);
		ДанныеЗаполнения.Свойство("Распоряжение",               Распоряжение);
		ДанныеЗаполнения.Свойство("ДатаПоступления",            ДатаПоступления);
		ДанныеЗаполнения.Свойство("ЗонаПриемки",                ЗонаПриемки);
		ДанныеЗаполнения.Свойство("СкладскаяОперация",          СкладскаяОперация);
		ДанныеЗаполнения.Свойство("Отправитель",                Отправитель);
		ДанныеЗаполнения.Свойство("ЗакрыватьГрафикПоступления", ЗакрыватьГрафикПоступления);
		ДанныеЗаполнения.Свойство("ДатаВходящегоДокумента",     ДатаВходящегоДокумента);
		ДанныеЗаполнения.Свойство("НомерВходящегоДокумента",    НомерВходящегоДокумента);
		ДанныеЗаполнения.Свойство("ХозяйственнаяОперация",      ХозяйственнаяОперация);
		
		Если СкладскаяОперация <> Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров
			И ЗначениеЗаполнено(Распоряжение) Тогда
			СкладскаяОперация = СкладыКлиентСервер.СкладскаяОперацияПриемкиПоХозяйственнойОперации(ХозяйственнаяОперация);
			УстановитьПривилегированныйРежим(Истина);
			Если СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоПеремещению
				Или СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПродукцииИзПроизводства Тогда
				ЗаполнитьТоварыПоТоварамКПоступлению("НоменклатураКоличество", ДатаПоступления);
			Иначе
				ЗаполнитьТоварыПоТоварамКПоступлению("Номенклатура", ДатаПоступления);
			КонецЕсли;
			
			Документы.ПриходныйОрдерНаТовары.ЗаполнитьСерииПоРаспоряжению(ЭтотОбъект, Ложь);
			УстановитьПривилегированныйРежим(Ложь);
		ИначеЕсли СкладскаяОперация <> Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров Тогда
			ВызватьИсключение ТекстСообщенияОНекорректномСоздании;
		КонецЕсли;
		
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	СформироватьСписокЗависимыхЗаказовПоставщикам();
	
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, 
		НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПриходныйОрдерНаТовары));
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПроверитьОрдерныйСклад(Отказ);
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.ПриходныйОрдерНаТовары.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьДвижениеТоваров(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьТоварыВЯчейках(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОформлениюИзлишковНедостач(ДополнительныеСвойства, Движения, Отказ);
	
	ЗапасыСервер.ОтразитьОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ЗаписатьПодчиненныеНаборамЗаписейДанные(ЭтотОбъект, Отказ);
	
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	РегистрыСведений.СостоянияЗаказовПоставщикам.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);

	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ЗаписатьПодчиненныеНаборамЗаписейДанные(ЭтотОбъект, Отказ);

	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	РегистрыСведений.СостоянияЗаказовПоставщикам.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);

	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	СостояниеЗаполненияМногооборотнойТары = Перечисления.СостоянияЗаполненияМногооборотнойТары.ПустаяСсылка();
	ИнициализироватьДокумент();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Если Не СкладыСервер.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач(Склад, Дата)
		И СкладскаяОперация = Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров Тогда		
		ТекстСообщения = НСтр("ru = 'Складская операция ""%ВозвратНепринятых%"" на складе, неордерном при отражении излишков, недостач и порчи, является архивной. Для оприходования товаров рекомендуется использовать документ ""%Оприходование%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВозвратНепринятых%", Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Оприходование%", Метаданные.Документы.ОприходованиеИзлишковТоваров.Синоним);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);		
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не СкладыСервер.ИспользоватьСкладскиеПомещения(Склад,Дата) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Помещение");
	КонецЕсли;
	
	АдресноеХранение = СкладыСервер.ИспользоватьАдресноеХранение(Склад, Помещение, Дата);
	ИспользоватьУпаковочныеЛисты = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковочныеЛисты");
	
	Если Не АдресноеХранение Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаПриемки");
	ИначеЕсли Не ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Упаковка");
		ТекстСообщения = НСтр("ru='В настройках программы не включено использование упаковок номенклатуры, 
		|поэтому нельзя оформить документ по складу с адресным хранением остатков. Обратитесь к администратору'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	
	
	Если (Не АдресноеХранение
		Или Статус = Перечисления.СтатусыПриходныхОрдеров.КПоступлению
		Или Статус = Перечисления.СтатусыПриходныхОрдеров.ТребуетсяОбработка)Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Упаковка");
	Иначе
		ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияУпаковок();
		ПараметрыПроверки.ВыводитьНомераСтрок = Не ИспользоватьУпаковочныеЛисты;
		ПараметрыПроверки.ОтборПроверяемыхСтрок.Вставить("ЭтоУпаковочныйЛист", Ложь);
		НоменклатураСервер.ПроверитьЗаполнениеУпаковок(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
		
		ПараметрыПроверкиУказанияМногооборотнойТары = МногооборотнаяТараСервер.ПараметрыПроверкиУказанияМногооборотнойТары();
		ПараметрыПроверкиУказанияМногооборотнойТары.ЕстьЯчейки = Ложь;
		МногооборотнаяТараСервер.ПроверитьУказаниеМногооборотнойТары(ЭтотОбъект, ПараметрыПроверкиУказанияМногооборотнойТары, Отказ);
	КонецЕсли;
	
	Если Статус = Перечисления.СтатусыПриходныхОрдеров.КПоступлению 
		Или Статус = Перечисления.СтатусыПриходныхОрдеров.ВРаботе
		Или Статус = Перечисления.СтатусыПриходныхОрдеров.ТребуетсяОбработка Тогда
	
		МассивНепроверяемыхРеквизитов.Добавить("Товары");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Номенклатура");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоУпаковок");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Количество");
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|ГДЕ
		|	Товары.Штрихкод = """"
		|	И Товары.УпаковочныйЛистРодитель = ЗНАЧЕНИЕ(Документ.УпаковочныйЛист.ПустаяСсылка)
		|	И Товары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И Товары.УпаковочныйЛист = ЗНАЧЕНИЕ(Документ.УпаковочныйЛист.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НомерСтроки
		|ИЗ
		|	Товары";
		
		Запрос.УстановитьПараметр("Товары",
			ЭтотОбъект.Товары.Выгрузить(,"НомерСтроки, Штрихкод, Номенклатура, УпаковочныйЛист, УпаковочныйЛистРодитель"));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстОшибки = НСтр("ru='Не заполнена колонка ""Номенклатура"" в списке ""Товары"".'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , Поле, "Объект", Отказ);
		КонецЦикла;
		
	КонецЕсли;
	
	Если СкладскаяОперация = Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров
		Или СкладскаяОперация = Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваровУстарел Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Распоряжение");
		МассивНепроверяемыхРеквизитов.Добавить("ХозяйственнаяОперация");
	ИначеЕсли СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоПрочемуОприходованию Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Отправитель");
	КонецЕсли;
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ВыводитьНомераСтрок = Не ИспользоватьУпаковочныеЛисты;
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
												НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПриходныйОрдерНаТовары),
												Отказ,
												МассивНепроверяемыхРеквизитов);
	Если Не Статус = Перечисления.СтатусыПриходныхОрдеров.КПоступлению
		И Не Статус = Перечисления.СтатусыПриходныхОрдеров.ТребуетсяОбработка Тогда
		УпаковочныеЛистыСервер.ПроверитьЗаполнениеТЧСУпаковочнымиЛистами(ЭтотОбъект, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиЗаполненияКоличества();
	ПараметрыПроверки.ПроверитьВозможностьОкругления = Ложь;
	ПараметрыПроверки.ПроверитьКомплектностьТоварныхМест = Истина;
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверки);
		
	СкладыСервер.ПроверитьОрдерностьСклада(Склад, Дата, "ПриПоступлении", Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ЗаполнитьТоварыПоТоварамКПоступлению(ВидЗаполнения,ДатаПоступления) Экспорт

	ИспользоватьАдресноеХранение = СкладыСервер.ИспользоватьАдресноеХранение(Склад, Помещение, Дата);
	
	Если СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоПеремещению Тогда
	
		Запрос = Новый Запрос;	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
		|	ТоварыКПоступлению.Характеристика КАК Характеристика,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыКПоступлению.Назначение) КАК Назначение
		|ПОМЕСТИТЬ НазначенияТоваров
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
		|ГДЕ
		|	ТоварыКПоступлению.ДокументПоступления = &Распоряжение
		|	И ТоварыКПоступлению.КОформлениюОрдеров > 0
		|	И ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКПоступлению.Характеристика,
		|	ТоварыКПоступлению.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НазначенияТоваров.Номенклатура,
		|	НазначенияТоваров.Характеристика,
		|	НазначенияТоваров.Назначение
		|ИЗ
		|	НазначенияТоваров КАК НазначенияТоваров
		|ГДЕ                                           
		|	НазначенияТоваров.Назначение > 1";
		
		Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
		ОдноНазначениеПоТовару = Запрос.Выполнить().Пустой();
		
		СкладОтправитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Распоряжение, "СкладОтправитель");		

		Если СкладыСервер.ИспользоватьОрдернуюСхемуПриОтгрузке(СкладОтправитель, ДатаПоступления) И ОдноНазначениеПоТовару
			И Не Константы.ВариантПриемкиТоваров.Получить() = Перечисления.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным Тогда
			
			УстановитьПривилегированныйРежим(Истина);
			
			Запрос = Новый Запрос;
			
			Если ВидЗаполнения = "НоменклатураКоличество"
				Или ВидЗаполнения = "Номенклатура" Тогда
				
				ТекстЗапроса =
				"ВЫБРАТЬ
				|	0 КАК НомерСтроки,
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Упаковка,
				|   СУММА(ВложенныйЗапрос.Количество) КАК КоличествоОстаток,";
				Если ВидЗаполнения = "НоменклатураКоличество" Тогда
					
					ТекстЗапроса = ТекстЗапроса + "
					|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
					|	СУММА(ВложенныйЗапрос.Количество) КАК Количество ";
				Иначе
					
					ТекстЗапроса = ТекстЗапроса + "
					|	0 КАК КоличествоУпаковок, 
					|	0 КАК Количество ";
				КонецЕсли;
				ТекстЗапроса = ТекстЗапроса + "
				|ПОМЕСТИТЬ ТаблицаТовары
				|ИЗ
				|	(ВЫБРАТЬ
				|		РасходныйОрдерНаТоварыТовары.Номенклатура КАК Номенклатура,
				|		РасходныйОрдерНаТоварыТовары.Характеристика КАК Характеристика,
				|		РасходныйОрдерНаТоварыТовары.Упаковка КАК Упаковка,
				|		РасходныйОрдерНаТоварыТовары.КоличествоУпаковок КАК КоличествоУпаковок,
				|		РасходныйОрдерНаТоварыТовары.Количество КАК Количество
				|	ИЗ
				|		Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК РасходныйОрдерНаТоварыТовары
				|	ГДЕ
				|		РасходныйОрдерНаТоварыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ
				|												ТоварыПоРаспоряжениям.Ссылка КАК Ссылка 
				|												ИЗ
				|													Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК ТоварыПоРаспоряжениям
				|												ГДЕ
				|													ТоварыПоРаспоряжениям.Распоряжение = &Распоряжение
				|													И ТоварыПоРаспоряжениям.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
				|													И ТоварыПоРаспоряжениям.Ссылка.Проведен)
				|		И РасходныйОрдерНаТоварыТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
				|		И НЕ РасходныйОрдерНаТоварыТовары.ЭтоУпаковочныйЛист
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ПриходныйОрдерНаТовары.Номенклатура,
				|		ПриходныйОрдерНаТовары.Характеристика,
				|		ПриходныйОрдерНаТовары.Упаковка,
				|		-ПриходныйОрдерНаТовары.КоличествоУпаковок,
				|		-ПриходныйОрдерНаТовары.Количество
				|	ИЗ
				|		Документ.ПриходныйОрдерНаТовары.Товары КАК ПриходныйОрдерНаТовары
				|	ГДЕ
				|		ПриходныйОрдерНаТовары.Ссылка.Распоряжение = &Распоряжение
				|		И ПриходныйОрдерНаТовары.Ссылка <> &ТекущийПриходныйОрдер
				|		И ПриходныйОрдерНаТовары.Ссылка.Проведен
				|		И НЕ ПриходныйОрдерНаТовары.ЭтоУпаковочныйЛист) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Упаковка
				|
				|ИМЕЮЩИЕ
				|	СУММА(ВложенныйЗапрос.Количество) > 0";
				
			ИначеЕсли ВидЗаполнения = "Количество" Тогда
			ТекстЗапроса =
				"ВЫБРАТЬ
				|	ТаблицаТоваров.Номенклатура,
				|	ТаблицаТоваров.Характеристика,
				|	ТаблицаТоваров.НомерСтроки
				|ПОМЕСТИТЬ ТаблицаНомеклатурыДляЗапроса
				|ИЗ
				|	&ТаблицаТоваров КАК ТаблицаТоваров
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Упаковка,
				|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
				|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
				|ПОМЕСТИТЬ ТаблицаНепринятыхТоваров
				|ИЗ
				|	(ВЫБРАТЬ
				|		РасходныйОрдерНаТоварыТовары.Номенклатура КАК Номенклатура,
				|		РасходныйОрдерНаТоварыТовары.Характеристика КАК Характеристика,
				|		РасходныйОрдерНаТоварыТовары.Упаковка КАК Упаковка,
				|		РасходныйОрдерНаТоварыТовары.КоличествоУпаковок КАК КоличествоУпаковок,
				|		РасходныйОрдерНаТоварыТовары.Количество КАК Количество
				|	ИЗ
				|		Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК РасходныйОрдерНаТоварыТовары
				|	ГДЕ
				|		РасходныйОрдерНаТоварыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ
				|												ТоварыПоРаспоряжениям.Ссылка КАК Ссылка 
				|												ИЗ
				|													Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК ТоварыПоРаспоряжениям
				|												ГДЕ
				|													ТоварыПоРаспоряжениям.Распоряжение = &Распоряжение
				|													И ТоварыПоРаспоряжениям.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
				|													И ТоварыПоРаспоряжениям.Ссылка.Проведен)
				|		И РасходныйОрдерНаТоварыТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
				|		И НЕ РасходныйОрдерНаТоварыТовары.ЭтоУпаковочныйЛист
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ПриходныйОрдерНаТовары.Номенклатура,
				|		ПриходныйОрдерНаТовары.Характеристика,
				|		ПриходныйОрдерНаТовары.Упаковка,
				|		-ПриходныйОрдерНаТовары.КоличествоУпаковок,
				|		-ПриходныйОрдерНаТовары.Количество
				|	ИЗ
				|		Документ.ПриходныйОрдерНаТовары.Товары КАК ПриходныйОрдерНаТовары
				|	ГДЕ
				|		ПриходныйОрдерНаТовары.Ссылка.Распоряжение = &Распоряжение
				|		И ПриходныйОрдерНаТовары.Ссылка <> &ТекущийПриходныйОрдер
				|		И ПриходныйОрдерНаТовары.Ссылка.Проведен
				|		И НЕ ПриходныйОрдерНаТовары.ЭтоУпаковочныйЛист)  КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Упаковка
				|
				|ИМЕЮЩИЕ
				|	СУММА(ВложенныйЗапрос.Количество) > 0
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаНомеклатурыДляЗапроса.Номенклатура,
				|	ТаблицаНомеклатурыДляЗапроса.Характеристика,
				|	МИНИМУМ(ТаблицаНомеклатурыДляЗапроса.НомерСтроки) КАК НомерСтроки
				|ПОМЕСТИТЬ ТаблицаТоваров
				|ИЗ
				|	ТаблицаНомеклатурыДляЗапроса КАК ТаблицаНомеклатурыДляЗапроса
				|
				|СГРУППИРОВАТЬ ПО
				|	ТаблицаНомеклатурыДляЗапроса.Номенклатура,
				|	ТаблицаНомеклатурыДляЗапроса.Характеристика
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаТоваров.Номенклатура,
				|	ТаблицаТоваров.Характеристика,
				|	ТаблицаНепринятыхТоваров.Упаковка,
				|	ТаблицаНепринятыхТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
				|	ТаблицаНепринятыхТоваров.Количество КАК Количество,
				|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки
				|ПОМЕСТИТЬ ТаблицаТовары
				|ИЗ
				|	ТаблицаТоваров КАК ТаблицаТоваров
				|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНепринятыхТоваров КАК ТаблицаНепринятыхТоваров
				|		ПО ТаблицаТоваров.Номенклатура = ТаблицаНепринятыхТоваров.Номенклатура
				|			И ТаблицаТоваров.Характеристика = ТаблицаНепринятыхТоваров.Характеристика";
				
				Запрос.УстановитьПараметр("ТаблицаТоваров",Товары.Выгрузить(,"Номенклатура,Характеристика,Назначение,НомерСтроки"));
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса +
			"
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
			|	ТоварыКПоступлению.Характеристика КАК Характеристика,
			|	ТоварыКПоступлению.Назначение КАК Назначение
			|ПОМЕСТИТЬ НазначенияТоваров
			|ИЗ
			|	РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
			|ГДЕ
			|	ТоварыКПоступлению.ДокументПоступления = &Распоряжение
			|	И ТоварыКПоступлению.КОформлениюОрдеров > 0
			|	И ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	НазначенияТоваров.Назначение,
			|	ТаблицаТовары.Упаковка,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ НазначенияТоваров КАК НазначенияТоваров
			|		ПО ТаблицаТовары.Номенклатура = НазначенияТоваров.Номенклатура
			|			И ТаблицаТовары.Характеристика = НазначенияТоваров.Характеристика
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТаблицаТовары.НомерСтроки";

			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Распоряжение",Распоряжение);
			Запрос.УстановитьПараметр("ТекущийПриходныйОрдер",Ссылка);
			
			Результат = Запрос.Выполнить();
			
			Если Не Результат.Пустой() Тогда
				Товары.Загрузить(Результат.Выгрузить());
			Иначе
				СкладОтправитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Распоряжение, "СкладОтправитель");
				Если СкладыСервер.ИспользоватьОрдернуюСхемуПриОтгрузке(СкладОтправитель) Тогда
					ТекстСообщения = НСтр("ru = 'Нет товаров для заполнения по распоряжению ""%Распоряжение%"".
												|Возможно еще не создан расходный ордер со склада ""%СкладОтправитель%"".'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Распоряжение%", Распоряжение);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СкладОтправитель%", СкладОтправитель);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Распоряжение");
				КонецЕсли;
			КонецЕсли;
			
			Если ВидЗаполнения = "Количество"
				Или ВидЗаполнения = "НоменклатураКоличество" Тогда
				
				Если ИспользоватьАдресноеХранение Тогда
					РазбитьПоУпаковкамСправочно();
				КонецЕсли;
				
			КонецЕсли;
			
			ВсегоМест = УпаковочныеЛистыСервер.КоличествоМестВТЧ(Товары);
			
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	Если ЗначениеЗаполнено(ДатаПоступления) Тогда
		Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(ДатаПоступления));
	Иначе
		Запрос.УстановитьПараметр("ДатаОстатков", ДатаПоступления);
	КонецЕсли;
		
	Если ВидЗаполнения = "Номенклатура" Или ВидЗаполнения = "НоменклатураКоличество" Тогда

		Товары.Очистить();

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыКПоступлению.Номенклатура      КАК Номенклатура,
		|	ТоварыКПоступлению.Характеристика    КАК Характеристика,
		|	ВЫБОР КОГДА ЕСТЬNULL(ТоварыКПоступлению.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)  
		|			ТОГДА ТоварыКПоступлению.Назначение
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ								   КАК Назначение,";

		Если ВидЗаполнения = "НоменклатураКоличество" Тогда

			ТекстЗапроса = ТекстЗапроса + "
				|	СУММА(ТоварыКПоступлению.Количество) КАК Количество,
				|	СУММА(ТоварыКПоступлению.Количество) КАК КоличествоУпаковок ";
		Иначе

			ТекстЗапроса = ТекстЗапроса + "
				|	СУММА(ТоварыКПоступлению.Количество) КАК КоличествоРегистр, 
				|	0 КАК КоличествоУпаковок, 
				|	0 КАК Количество ";
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса + "
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыКПоступлению.Номенклатура      КАК Номенклатура,
		|		ТоварыКПоступлению.Характеристика    КАК Характеристика,
		|		ТоварыКПоступлению.Назначение    	 КАК Назначение,
		|		ТоварыКПоступлению.КОформлениюОрдеровОстаток
		|		 - ТоварыКПоступлению.ПринимаетсяОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ТоварыКПоступлению.Остатки(&ДатаОстатков,
		|				ДокументПоступления = &Распоряжение
		|				И Склад = &Склад) КАК ТоварыКПоступлению
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыКПоступлению.Номенклатура,
		|		ТоварыКПоступлению.Характеристика,
		|		ТоварыКПоступлению.Назначение,
		|		ВЫБОР КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|				-ТоварыКПоступлению.КОформлениюОрдеров
		|			ИНАЧЕ ТоварыКПоступлению.КОформлениюОрдеров
		|			КОНЕЦ
		|			- ВЫБОР КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|				- ТоварыКПоступлению.Принимается
		|			ИНАЧЕ ТоварыКПоступлению.Принимается
		|		КОНЕЦ 
		|	ИЗ
		|		РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
		|	ГДЕ
		|		ТоварыКПоступлению.Регистратор = &Ссылка
		|		И ТоварыКПоступлению.Активность
		|		И ТоварыКПоступлению.Склад = &Склад
		|		И ТоварыКПоступлению.ДокументПоступления = &Распоряжение
		|
		|) КАК ТоварыКПоступлению
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКПоступлению.Номенклатура,
		|	ТоварыКПоступлению.Характеристика,
		|	ТоварыКПоступлению.Назначение
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыКПоступлению.Количество) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура.Наименование,
		|	Характеристика.Наименование
		|";
		Запрос.Текст = ТекстЗапроса;
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда

			Товары.Загрузить(Результат.Выгрузить());
			НоменклатураСервер.РазбитьТоварыПоТоварнымМестам(Товары);

		Иначе

			ТекстСообщения = НСтр("ru = 'Нет товаров для заполнения по распоряжению ""%Распоряжение%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Распоряжение%", Распоряжение);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Распоряжение");

		КонецЕсли;

	Иначе
		ТекстЗапроса =
		
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Назначение КАК Назначение,
		|	Таблица.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
		|ИЗ
		|	&Таблица КАК Таблица
		|ГДЕ
		|	Таблица.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Назначение КАК Назначение,
		|	МИНИМУМ(Таблица.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	ТаблицаНоменклатурыДляЗапроса КАК Таблица
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
		|	ТоварыКПоступлению.Характеристика КАК Характеристика,
		|	ТоварыКПоступлению.Назначение КАК Назначение,
		|	ТоварыКПоступлению.КОформлениюОрдеровОстаток - ТоварыКПоступлению.ПринимаетсяОстаток КАК Количество
		|ПОМЕСТИТЬ ТоварыКПоступлению
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(&ДатаОстатков
		|			,
		|			ДокументПоступления = &Распоряжение
		|				И Склад = &Склад) КАК ТоварыКПоступлению
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыКПоступлению.Номенклатура,
		|	ТоварыКПоступлению.Характеристика,
		|	ТоварыКПоступлению.Назначение,
		|	ВЫБОР
		|		КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА -ТоварыКПоступлению.КОформлениюОрдеров
		|		ИНАЧЕ ТоварыКПоступлению.КОформлениюОрдеров
		|	КОНЕЦ - ВЫБОР
		|		КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА -ТоварыКПоступлению.Принимается
		|		ИНАЧЕ ТоварыКПоступлению.Принимается
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
		|ГДЕ
		|	ТоварыКПоступлению.Регистратор = &Ссылка
		|	И ТоварыКПоступлению.Активность = ИСТИНА
		|	И ТоварыКПоступлению.Склад = &Склад
		|	И ТоварыКПоступлению.ДокументПоступления = &Распоряжение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
		|	ТаблицаНоменклатуры.Назначение КАК Назначение,
		|	МИНИМУМ(ТаблицаНоменклатуры.НомерСтроки) КАК НомерСтрокиСтарый,
		|	СУММА(ЕСТЬNULL(ТоварыКПоступлению.Количество, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(ТоварыКПоступлению.Количество, 0)) КАК КоличествоУпаковок
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКПоступлению КАК ТоварыКПоступлению
		|		ПО ТаблицаНоменклатуры.Номенклатура = ТоварыКПоступлению.Номенклатура
		|			И ТаблицаНоменклатуры.Характеристика = ТоварыКПоступлению.Характеристика
		|			И ТаблицаНоменклатуры.Назначение = ТоварыКПоступлению.Назначение
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатуры.Номенклатура,
		|	ТаблицаНоменклатуры.Характеристика,
		|	ТаблицаНоменклатуры.Назначение
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиСтарый
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатурыДляЗапроса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТоварыКПоступлению";	
				
		Запрос.УстановитьПараметр("Таблица", Товары.Выгрузить());
		Запрос.Текст = ТекстЗапроса;
		
		Товары.Загрузить(Запрос.Выполнить().Выгрузить());
		НоменклатураСервер.РазбитьТоварыПоТоварнымМестам(Товары);
		
	КонецЕсли;

	Если ВидЗаполнения = "Количество"
		Или ВидЗаполнения = "НоменклатураКоличество" Тогда
		
		Если ИспользоватьАдресноеХранение Тогда
			РазбитьПоУпаковкамСправочно();
		КонецЕсли;
		
	КонецЕсли;
	
	ВсегоМест = УпаковочныеЛистыСервер.КоличествоМестВТЧ(Товары);
	
КонецПроцедуры

Процедура РазбитьПоУпаковкамСправочно()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Количество КАК Количество,
	|	Таблица.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫРАЗИТЬ(Таблица.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения) КАК Упаковка,
	|	Таблица.Назначение КАК Назначение
	|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(Таблица.НомерСтроки) КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Назначение КАК Назначение,
	|	СУММА(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	ТаблицаНоменклатурыДляЗапроса КАК Таблица
	|ГДЕ
	|	ЕСТЬNULL(Таблица.Упаковка.ТипУпаковки, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Номенклатура,
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	Таблица.Характеристика,
	|	Таблица.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВнутреннийЗапрос.Номенклатура,
	|	ВнутреннийЗапрос.Количество,
	|	ВнутреннийЗапрос.ЭтоТоварноеМесто,
	|	ВнутреннийЗапрос.НомерСтроки,
	|	ВнутреннийЗапрос.Характеристика,
	|	ВнутреннийЗапрос.Назначение,
	|	ВнутреннийЗапрос.КоличествоВУпаковке,
	|	ВнутреннийЗапрос.Упаковка,
	|	ВнутреннийЗапрос.ЕдиницаИзмеренияУпаковкиПредставление
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|		ТаблицаНоменклатуры.Количество КАК Количество,
	|		ЛОЖЬ КАК ЭтоТоварноеМесто,
	|		ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
	|		ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	|		ТаблицаНоменклатуры.Назначение КАК Назначение,
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|		ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|		ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, """") КАК ЕдиницаИзмеренияУпаковкиПредставление
	|	ИЗ
	|		ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|			ПО (ТаблицаНоменклатуры.Номенклатура = УпаковкиНоменклатуры.Владелец
	|					ИЛИ ТаблицаНоменклатуры.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|				И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|				И (ТаблицаНоменклатуры.Количество >= &ТекстЗапросаКоэффициентУпаковки)
	|				И (&ТекстЗапросаКоэффициентУпаковки <> 0)
	|				И (ЕСТЬNULL(УпаковкиНоменклатуры.ТипУпаковки, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаНоменклатуры.Номенклатура,
	|		ТаблицаНоменклатуры.Количество,
	|		ИСТИНА,
	|		ТаблицаНоменклатуры.НомерСтроки,
	|		ТаблицаНоменклатуры.Характеристика,
	|		ТаблицаНоменклатуры.Назначение,
	|		ТаблицаНоменклатуры.Упаковка.КоличествоУпаковок,
	|		ТаблицаНоменклатуры.Упаковка,
	|		""""
	|	ИЗ
	|		ТаблицаНоменклатурыДляЗапроса КАК ТаблицаНоменклатуры
	|	ГДЕ
	|		ЕСТЬNULL(ТаблицаНоменклатуры.Упаковка.ТипУпаковки, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)) КАК ВнутреннийЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВнутреннийЗапрос.НомерСтроки,
	|	ВнутреннийЗапрос.КоличествоВУпаковке,
	|	ВнутреннийЗапрос.ЕдиницаИзмеренияУпаковкиПредставление";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаНоменклатуры.Номенклатура"));
	
	ТаблицаНоменклатуры = Товары.Выгрузить();
	Запрос.УстановитьПараметр("Таблица",ТаблицаНоменклатуры);
	
	Товары.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТекНомерСтроки = Неопределено;
	ТекНоменклатура = Неопределено;
	ТекХарактеристика = Неопределено;
	ТекНазначение = Неопределено;
	Количество = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НомерСтроки <> ТекНомерСтроки Тогда
			
			Если Количество <> Неопределено Тогда
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество = Количество;
				НоваяСтрока.КоличествоУпаковок = Количество;
				
				НоваяСтрока.Номенклатура = ТекНоменклатура;
				НоваяСтрока.Характеристика = ТекХарактеристика;
				НоваяСтрока.Назначение = ТекНазначение;
			КонецЕсли;
			
			ТекНомерСтроки              = Выборка.НомерСтроки;
			ТекНоменклатура             = Выборка.Номенклатура; 
			ТекХарактеристика           = Выборка.Характеристика;
			ТекНазначение               = Выборка.Назначение;
			
			Если Выборка.ЭтоТоварноеМесто Тогда
				
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество = Выборка.Количество;
				НоваяСтрока.КоличествоУпаковок =  Выборка.Количество * Выборка.КоличествоВУпаковке;
				НоваяСтрока.Упаковка = Выборка.Упаковка;
				
				НоваяСтрока.Номенклатура = ТекНоменклатура;
				НоваяСтрока.Характеристика = ТекХарактеристика;
				НоваяСтрока.Назначение = ТекНазначение;
				
				Продолжить;
				
			КонецЕсли;
			
			Количество = Выборка.Количество;//(Не Выборка.ЭтоТоварноеМесто, Выборка.Количество, Выборка.КоличествоУпаковок);
			
		КонецЕсли;
		
		Если Количество <> Неопределено Тогда
			Если ЗначениеЗаполнено(Выборка.Упаковка) Тогда
				КоличествоВДокумент = Цел(Количество / Выборка.КоличествоВУпаковке);
			Иначе
				КоличествоВДокумент = Количество;
			КонецЕсли;
			
			Если КоличествоВДокумент > 0 Тогда
				
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество = КоличествоВДокумент * Выборка.КоличествоВУпаковке;
				НоваяСтрока.КоличествоУпаковок = КоличествоВДокумент;
				НоваяСтрока.Упаковка = Выборка.Упаковка;
				
				НоваяСтрока.Номенклатура = ТекНоменклатура;
				НоваяСтрока.Характеристика = ТекХарактеристика;
				НоваяСтрока.Назначение = ТекНазначение;
				
				Если Количество = КоличествоВДокумент * Выборка.КоличествоВУпаковке Тогда
					Количество = Неопределено;
				Иначе
					Количество = Количество - КоличествоВДокумент * Выборка.КоличествоВУпаковке;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Количество <> Неопределено Тогда
		НоваяСтрока = Товары.Добавить();
		НоваяСтрока.Количество = Количество;
		НоваяСтрока.КоличествоУпаковок = Количество;
		НоваяСтрока.Номенклатура = ТекНоменклатура;
		НоваяСтрока.Характеристика = ТекХарактеристика;
		НоваяСтрока.Назначение = ТекНазначение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Ответственный = Пользователи.ТекущийПользователь();
	Статус        = Метаданные().Реквизиты.Статус.ЗначениеЗаполнения;
	
	Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	Если ЗначениеЗаполнено(Склад) Тогда
		Если СкладыСервер.ИспользоватьАдресноеХранение(Склад,Помещение,Дата) Тогда
			ЗонаПриемки = Справочники.СкладскиеЯчейки.ЗонаПриемкиПоУмолчанию(Склад,Помещение,ЗонаПриемки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()
	
	Массив = Новый Массив;
	
	Если Не СкладскаяОперация = Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров Тогда
		Массив.Добавить(Движения.ОбеспечениеЗаказов);
	КонецЕсли;
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

Процедура ПроверитьОрдерныйСклад(Отказ)
	
	Если Не СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Склад, Дата) Тогда
		
		Отказ = Истина;
		
		ТекстСообщения = НСтр("ru='На складе ""%Склад%"" на %Дата% не используется ордерная схема при поступлении.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%",Склад);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Дата%",Формат(Дата, "ДЛФ=D"));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьСписокЗависимыхЗаказовПоставщикам()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.ЗаказПоставщику КАК ЗаказПоставщику
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказПоставщику.Ссылка КАК ЗаказПоставщику
	|	ИЗ
	|		Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|	ГДЕ
	|		ЗаказПоставщику.Ссылка В(&МассивЗаказов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказПоставщику.Ссылка
	|	ИЗ
	|		Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|	ГДЕ
	|		ЗаказПоставщику.Ссылка В
	|				(ВЫБРАТЬ
	|					Ордер.Распоряжение
	|				ИЗ
	|					Документ.ПриходныйОрдерНаТовары КАК Ордер
	|				ГДЕ
	|					Ордер.Ссылка = &Ссылка)) КАК ВложенныйЗапрос";
	
	Запрос.УстановитьПараметр("МассивЗаказов", ЭтотОбъект.Распоряжение);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Запрос.Выполнить();
	
	МассивЗависимыхЗаказов = Результат.Выгрузить().ВыгрузитьКолонку("ЗаказПоставщику");
	ЭтотОбъект.ДополнительныеСвойства.Вставить("МассивЗависимыхЗаказовПоставщикам", Новый ФиксированныйМассив(МассивЗависимыхЗаказов));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
