#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ОперацияПоПлатежнойКарте.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	НоваяКоманда = Документы.РасходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.Обработчик = "СозданиеНаОснованииУТКлиент.СоздатьРасходныйКассовыйОрдер";
		НоваяКоманда.ВидимостьВФормах = "ФормаДокумента, ФормаСпискаДокументов, ФормаСписка, ФормаСпискаЗаявокКСогласованию";
		НоваяКоманда.МножественныйВыбор = Истина;
	КонецЕсли;
	
	НоваяКоманда = Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.Обработчик = "СозданиеНаОснованииУТКлиент.СоздатьСписаниеБезналичныхДС";
		НоваяКоманда.ВидимостьВФормах = "ФормаДокумента, ФормаСпискаДокументов, ФормаСписка, ФормаСпискаЗаявокКСогласованию";
		НоваяКоманда.МножественныйВыбор = Истина;
	КонецЕсли;
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
	
КонецПроцедуры

// Добавляет команду создания документа "Заявка на расходование ДС".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьЗаявкиНаРасходованиеДенежныхСредств";
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуЛимитыРасходаДенежныхСредств(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОплатаЗаявок(КомандыОтчетов);
	
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуКонтрольВыданныхПодотчетномуЛицуАвансовПоЗаявке(КомандыОтчетов);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.СписаниеБезналичныхДенежныхСредств) Тогда
		// Банковские реквизиты
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Документ.СписаниеБезналичныхДенежныхСредств";
		КомандаПечати.Идентификатор = "РеквизитыПлатежа";
		КомандаПечати.Представление = НСтр("ru = 'Реквизиты платежа'");
		
		// Платежное поручение
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Документ.СписаниеБезналичныхДенежныхСредств";
		КомандаПечати.Идентификатор = "ПлатежноеПоручение";
		КомандаПечати.Представление = НСтр("ru = 'Образец платежного поручения'");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет таблицу реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа
//	ПеречислениеВБюджет - Булево - Признак перечисления в бюджет
//	МассивВсехРеквизитов - Массив - Массив всех реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемыз в выбранной хозяйственной операции
//
Процедура ПолучитьМассивыРеквизитов(ХозяйственнаяОперация, ПеречислениеВБюджет, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("БанковскийСчетКонтрагента");
	МассивВсехРеквизитов.Добавить("БанковскийСчетПолучатель");
	МассивВсехРеквизитов.Добавить("ВалютаКонвертации");
	МассивВсехРеквизитов.Добавить("ДатаАвансовогоОтчета");
	МассивВсехРеквизитов.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("ИдентификаторПлатежа");
	МассивВсехРеквизитов.Добавить("ИННПлательщика");
	МассивВсехРеквизитов.Добавить("КассаПолучатель");
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("КПППлательщика");
	МассивВсехРеквизитов.Добавить("КурсКонвертации");
	МассивВсехРеквизитов.Добавить("ЛицевыеСчетаСотрудников");
	МассивВсехРеквизитов.Добавить("НомерВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("ОрганизацияПолучатель");
	МассивВсехРеквизитов.Добавить("ПланированиеСуммы");
	МассивВсехРеквизитов.Добавить("ПеречислениеВБюджет");
	МассивВсехРеквизитов.Добавить("ПлатежиПо275ФЗ");
	МассивВсехРеквизитов.Добавить("ПодотчетноеЛицо");
	МассивВсехРеквизитов.Добавить("ПоказательДаты");
	МассивВсехРеквизитов.Добавить("ПоказательНомера");
	МассивВсехРеквизитов.Добавить("ПоказательОснования");
	МассивВсехРеквизитов.Добавить("ПоказательПериода");
	МассивВсехРеквизитов.Добавить("ПоказательТипа");
	МассивВсехРеквизитов.Добавить("СтатусСоставителя");
	МассивВсехРеквизитов.Добавить("СтатьяАктивовПассивов");
	МассивВсехРеквизитов.Добавить("АналитикаАктивовПассивов");
	МассивВсехРеквизитов.Добавить("СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("СуммаПослеКонвертации");
	МассивВсехРеквизитов.Добавить("ХозяйственнаяОперацияПоЗарплате");
	МассивВсехРеквизитов.Добавить("ТекстПлательщика");
	МассивВсехРеквизитов.Добавить("ТипНалога");
	
	МассивВсехРеквизитов.Добавить("ГруппаФинансовогоУчета");
	МассивВсехРеквизитов.Добавить("НаправлениеДеятельности");
	МассивВсехРеквизитов.Добавить("Договор");
	
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.АналитикаАктивовПассивов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорЛизинга");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Заказ");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Комментарий");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Партнер");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтавкаНДС");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаНДС");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипПлатежаПоЛизингу");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Подразделение");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Ведомость");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Организация");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
	
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ДатаАвансовогоОтчета");
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Подразделение");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.АналитикаАктивовПассивов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		МассивРеквизитовОперации.Добавить("ИННПлательщика");
		МассивРеквизитовОперации.Добавить("КПППлательщика");
		МассивРеквизитовОперации.Добавить("ТекстПлательщика");
		
		МассивРеквизитовОперации.Добавить("ТипНалога");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ВалютаКонвертации");
		МассивРеквизитовОперации.Добавить("КурсКонвертации");
		МассивРеквизитовОперации.Добавить("СуммаПослеКонвертации");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты Тогда
		МассивРеквизитовОперации.Добавить("НомерВедомостиНаВыплатуЗарплаты");
		МассивРеквизитовОперации.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ХозяйственнаяОперацияПоЗарплате");
		МассивРеквизитовОперации.Добавить("ЛицевыеСчетаСотрудников");
		Если Не Константы.ИспользоватьНачислениеЗарплаты.Получить() Тогда
			МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		КонецЕсли;
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		Если Константы.ИспользоватьНачислениеЗарплаты.Получить() Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику Тогда
		
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		Иначе
			МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю Тогда
		
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорЛизинга");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ТипПлатежаПоЛизингу");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
	КонецЕсли;
	
	ДопускаетсяПеречислениеВБюджет = (МассивОперацийПеречисленияВБюджет().Найти(ХозяйственнаяОперация) <> Неопределено);
	
	Если ДопускаетсяПеречислениеВБюджет Тогда
		МассивРеквизитовОперации.Добавить("ПеречислениеВБюджет");
	КонецЕсли;
	
	Если ДопускаетсяПеречислениеВБюджет И (ПеречислениеВБюджет = Неопределено Или ПеречислениеВБюджет) Тогда
		МассивРеквизитовОперации.Добавить("ВидПеречисленияВБюджет");
		МассивРеквизитовОперации.Добавить("КодБК");
		МассивРеквизитовОперации.Добавить("КодОКАТО");
		МассивРеквизитовОперации.Добавить("ПоказательДаты");
		МассивРеквизитовОперации.Добавить("ПоказательНомера");
		МассивРеквизитовОперации.Добавить("ПоказательОснования");
		МассивРеквизитовОперации.Добавить("ПоказательПериода");
		МассивРеквизитовОперации.Добавить("ПоказательТипа");
		МассивРеквизитовОперации.Добавить("СтатусСоставителя");
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует массив хоаЗзяйственных операций, для которых доступно перечисление в бюджет.
//
// Возвращаемое значение:
//	Массив - массив хозяйствненых операций
//
Функция МассивОперацийПеречисленияВБюджет() Экспорт
	
	МассивОпераций = Новый Массив;
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	
	Возврат МассивОпераций;
	
КонецФункции

// Функция получает реквизиты выбранной заявки на расходование денежных средств.
//
// Параметры:
//  Заявка - ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств - Ссылка на заявку
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранной заявки
//
Функция ПолучитьРеквизитыЗаявки(Заявка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|				И ДанныеДокумента.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Касса.ВалютаДенежныхСредств
	|		КОГДА ДанныеДокумента.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|				И ДанныеДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств
	|		ИНАЧЕ ДанныеДокумента.Валюта
	|	КОНЕЦ КАК Валюта,
	|	ДанныеДокумента.Статус КАК Статус
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Заявка
	|");
	
	Запрос.УстановитьПараметр("Заявка", Заявка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Организация = Выборка.Организация;
		Валюта = Выборка.Валюта;
		Статус = Выборка.Статус;
	Иначе
		Организация = Неопределено;
		Валюта = Неопределено;
		Статус = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Организация, Валюта, Статус",
		Организация,
		Валюта,
		Статус);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Дополняет переданную структуру значениями реквизитов доступных формы оплаты в зависимости от хозяйственной операции
//
// Параметры:
//    ДанныеЗаполнения - Структура - Структура, содержащая хоз. операцию
//
Процедура ЗаполнитьФормуОплатыПоХозОперации(ДанныеЗаполнения) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ХозяйственнаяОперация = "";
	ХозяйственнаяОперацияПоЗарплате = "";
	ДанныеЗаполнения.Свойство("ХозяйственнаяОперация", ХозяйственнаяОперация);
	ДанныеЗаполнения.Свойство("ХозяйственнаяОперацияПоЗарплате", ХозяйственнаяОперацияПоЗарплате);
	
	Если ДанныеЗаполнения.Свойство("ПлатежиПо275ФЗ") И ДанныеЗаполнения.ПлатежиПо275ФЗ Тогда
		ФормаОплаты = Перечисления.ФормыОплаты.Безналичная;
	Иначе
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты Тогда
			ФормаОплаты = ОграничениеФормыОплаты(ХозяйственнаяОперацияПоЗарплате);
		Иначе
			ФормаОплаты = ОграничениеФормыОплаты(ХозяйственнаяОперация);
		КонецЕсли;
	КонецЕсли;
	
	Если ФормаОплаты <> Неопределено Тогда
		ДанныеЗаполнения.Вставить("ФормаОплатыНаличная",         (ФормаОплаты = Перечисления.ФормыОплаты.Наличная));
		ДанныеЗаполнения.Вставить("ФормаОплатыБезналичная",      (ФормаОплаты = Перечисления.ФормыОплаты.Безналичная));
		ДанныеЗаполнения.Вставить("ФормаОплатыПлатежнаяКарта",   (ФормаОплаты = Перечисления.ФормыОплаты.ПлатежнаяКарта));
		ДанныеЗаполнения.Вставить("ФормаОплатыЗаявки",           ФормаОплаты);
	Иначе // Значения по умолчанию
		РеквизитыЗаявки = Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств.Реквизиты;
		Если Не ДанныеЗаполнения.Свойство("ФормаОплатыНаличная") Тогда
			ДанныеЗаполнения.Вставить("ФормаОплатыНаличная",         РеквизитыЗаявки["ФормаОплатыНаличная"].ЗначениеЗаполнения);
		КонецЕсли;
		Если Не ДанныеЗаполнения.Свойство("ФормаОплатыБезналичная") Тогда
			ДанныеЗаполнения.Вставить("ФормаОплатыБезналичная",      РеквизитыЗаявки["ФормаОплатыБезналичная"].ЗначениеЗаполнения);
		КонецЕсли;
		Если Не ДанныеЗаполнения.Свойство("ФормаОплатыПлатежнаяКарта") Тогда
			ДанныеЗаполнения.Вставить("ФормаОплатыПлатежнаяКарта",   РеквизитыЗаявки["ФормаОплатыПлатежнаяКарта"].ЗначениеЗаполнения);
		КонецЕсли;
		Если Не ДанныеЗаполнения.Свойство("ФормаОплатыЗаявки") Тогда
			ДанныеЗаполнения.Вставить("ФормаОплатыЗаявки",           РеквизитыЗаявки["ФормаОплатыЗаявки"].ЗначениеЗаполнения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет доступную для хозяйственной операции форму оплаты
//
// Параметры:
//    Операция - Перечисление.ХозяйственнаяОперация - Хоз. операция, для которой производится проверка
//
// Возвращаемое значение:
//    Перечисление.ФормаОплаты, Неопределено - Ограничение по форме оплаты, либо Неопределено, если нет ограничений
//
Функция ОграничениеФормыОплаты(Операция) Экспорт
	
	Ограничения = Новый Соответствие;
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет,                    Перечисления.ФормыОплаты.Безналичная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ПеречислениеТаможне,                    Перечисления.ФормыОплаты.Безналичная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты,                 Перечисления.ФормыОплаты.Безналичная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту,    Перечисления.ФормыОплаты.Безналичная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета,          Перечисления.ФормыОплаты.Безналичная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу,              Перечисления.ФормыОплаты.Наличная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком,             Перечисления.ФормыОплаты.Наличная);
	
	Возврат Ограничения.Получить(Операция);
	
КонецФункции

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос();
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ЗаявкаНаРасходованиеДенежныхСредств";
	
	Если ИмяРегистра = "ДенежныеСредстваКВыплате" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров.Вставить("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств",
		ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств"));
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
		ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента);
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	// Текст запроса, формирующего таблицы движений
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаОплатаНДСВБюджет(ТекстыЗапроса, Регистры);
	
	// Выполение запроса и выгрузка полученных таблиц для формирования движений
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                     КАК Период,
	|	ДанныеДокумента.ДатаПлатежа                              КАК ДатаПлатежа,
	|	ДанныеДокумента.ЖелательнаяДатаПлатежа                   КАК ЖелательнаяДатаПлатежа,
	|	ДанныеДокумента.Организация                              КАК Организация,
	|	ДанныеДокумента.Подразделение                            КАК Подразделение,
	|	ДанныеДокумента.ОрганизацияПолучатель                    КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Контрагент                               КАК Контрагент,
	|	ДанныеДокумента.ПодотчетноеЛицо                          КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.Валюта                                   КАК Валюта,
	|	ДанныеДокумента.Статус                                   КАК Статус,
	|	ДанныеДокумента.ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств            КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ХозяйственнаяОперацияПоЗарплате          КАК ХозяйственнаяОперацияПоЗарплате,
	|	ДанныеДокумента.ФормаОплатыЗаявки                        КАК ФормаОплаты,
	|	ДанныеДокумента.СверхЛимита                              КАК СверхЛимита
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("СтатьяДвиженияДенежныхСредств", СтатьяДвиженияДенежныхСредствДокумента(Реквизиты));
	Запрос.УстановитьПараметр("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств",
		ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств"));
	Запрос.УстановитьПараметр("ИспользоватьНачислениеЗарплаты", Константы.ИспользоватьНачислениеЗарплаты.Получить());
	
	Запрос.УстановитьПараметр("СверхЛимита", Реквизиты.СверхЛимита); 
	Запрос.УстановитьПараметр("ИспользоватьЛимитыРасходаДенежныхСредств",   ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредств"));
	Запрос.УстановитьПараметр("ИспользоватьЛимитыРасходаПоОрганизациям",    ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоОрганизациям"));
	Запрос.УстановитьПараметр("ИспользоватьЛимитыРасходаПоПодразделениям",  ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоПодразделениям"));
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихАктивовПассивов",      ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Реквизиты, ДокументСсылка, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасшифровкаПлатежа.Заказ   КАК Заказ,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		ТОГДА &Организация
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.Организация
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.Партнер
	|	КОНЕЦ КАК Партнер,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов
	|		ИЛИ ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|	ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Заказ
	|	ИНАЧЕ
	|		ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
	|		ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|		КОНЕЦ
	|	КОНЕЦ КАК Договор,
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетов
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	&Контрагент                         КАК Контрагент,
	|	ТаблицаОбъектовРасчетов.Партнер     КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор     КАК Договор,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаОбъектовРасчетов.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	Аналитика.КлючАналитики ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОбъектовРасчетов.Организация           КАК Организация,
	|	&ОрганизацияПолучатель                        КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор   КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|ИЗ
	|	ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &ОрганизацияПолучатель = Аналитика.Контрагент
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Реквизиты.ХозяйственнаяОперация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;

КонецПроцедуры

Функция ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ТаблицаРасшифровкаПлатежа";
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита КАК ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику КАК ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	НЕОПРЕДЕЛЕНО КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|			НЕОПРЕДЕЛЕНО
	|	КАК Подразделение,
	|
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов
	|
	|ПОМЕСТИТЬ ТаблицаРасшифровкаПлатежа
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|		И ТаблицаРасшифровкаПлатежа.Партнер = ТаблицаОбъектовРасчетов.Партнер
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаОбъектовРасчетов.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКредитаДепозита,
	|	НЕОПРЕДЕЛЕНО КАК ТипСуммыКредитаДепозита,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорЗаймаСотруднику,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорЛизинга,
	|	НЕОПРЕДЕЛЕНО КАК ТипПлатежаПоЛизингу,
	|	ТаблицаРасшифровкаПлатежа.Ведомость КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита КАК ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику КАК ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет) и ТаблицаРасшифровкаПлатежа.Ссылка.ТипНалога = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛ) 
	|		ТОГДА ТаблицаРасшифровкаПлатежа.Ведомость 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|		ТОГДА ТаблицаРасшифровкаПлатежа.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Подразделение,
	|
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|		ТОГДА ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СтатьяРасходов
	|		КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет))
	|		ТОГДА
	|			ВЫБОР КОГДА &ИспользоватьУчетПрочихАктивовПассивов ТОГДА
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ИНАЧЕ
	|				НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет) 
	|		ТОГДА ТаблицаРасшифровкаПлатежа.Ссылка.ТипНалога 
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов
	|	КОНЕЦ КАК АналитикаАктивовПассивов
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И Аналитика.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита КАК ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику КАК ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	НЕОПРЕДЕЛЕНО КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов
	|	
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = ТаблицаОбъектовРасчетов.Партнер
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &ОрганизацияПолучатель = Аналитика.Контрагент
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО),
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	НЕОПРЕДЕЛЕНО КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО (&Организация = Аналитика.Организация)
	|			И (&Контрагент = Аналитика.Контрагент)
	|			И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|			И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор
	|			И ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	НЕОПРЕДЕЛЕНО,
	|
	|	Заявка.СуммаДокумента,
	|	Заявка.СуммаДокумента,
	|	Заявка.Валюта,
	|
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	
	|	&АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО КАК Ведомость,
	|	Заявка.СтатьяДвиженияДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО,
	|	
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка
	|ГДЕ
	|	Заявка.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваКВыплате";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРаспределениеПоСчетам.ДатаПлатежа КАК Период,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ТаблицаРаспределениеПоСчетам.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|	) ТОГДА
	|		&ПодотчетноеЛицо
	|	КОГДА &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	) ТОГДА
	|		&ОрганизацияПолучатель
	|	ИНАЧЕ
	|		&Контрагент
	|	КОНЕЦ КАК Получатель,
	|	
	|	&Организация КАК Организация,
	|	
	|	ТаблицаРаспределениеПоСчетам.Сумма КАК Сумма,
	|	
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств.РаспределениеПоСчетам КАК ТаблицаРаспределениеПоСчетам
	|	ПО
	|		ТаблицаРаспределениеПоСчетам.Ссылка = &Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	И &Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена)
	|	И НЕ ТаблицаРаспределениеПоСчетам.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.ЖелательнаяДатаПлатежа КАК Период,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКасса,
	|	
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|	) ТОГДА
	|		&ПодотчетноеЛицо
	|	КОГДА &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	) ТОГДА
	|		&ОрганизацияПолучатель
	|	ИНАЧЕ
	|		&Контрагент
	|	КОНЕЦ КАК Получатель,
	|	
	|	&Организация КАК Организация,
	|	
	|	ДанныеДокумента.СуммаДокумента - СУММА(ЕСТЬNULL(ТаблицаРаспределениеПоСчетам.Сумма, 0)) КАК Сумма,
	|	
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств.РаспределениеПоСчетам КАК ТаблицаРаспределениеПоСчетам
	|	ПО
	|		ТаблицаРаспределениеПоСчетам.Ссылка = &Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	И &Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка
	|
	|ИМЕЮЩИЕ
	|	ДанныеДокумента.СуммаДокумента - СУММА(ЕСТЬNULL(ТаблицаРаспределениеПоСчетам.Сумма, 0)) > 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЛимитыРасходаДенежныхСредств";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|	ИНАЧЕ
	|		НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ КАК Период,
	|	
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ВЫБОР
	|		КОГДА НЕ &СверхЛимита
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходВПределахЛимита,
	|	
	|	ВЫБОР
	|		КОГДА &СверхЛимита
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходСверхЛимита
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		Истина
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|	ИНАЧЕ
	|		НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ КАК Период,
	|	
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ВЫБОР
	|		КОГДА НЕ &СверхЛимита
	|			ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходВПределахЛимита,
	|	
	|	ВЫБОР
	|		КОГДА &СверхЛимита
	|			ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходСверхЛимита
	|	
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаРасшифровкаПлатежа.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0 КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|	ИНАЧЕ
	|		НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ КАК Период,
	|	
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,&СтатьяДвиженияДенежныхСредств) КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ВЫБОР
	|		КОГДА НЕ &СверхЛимита 
	|			ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма,ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходВПределахЛимита,
	|	
	|	ВЫБОР
	|		КОГДА &СверхЛимита 
	|			ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма,ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходСверхЛимита
	|	
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		&ИспользоватьНачислениеЗарплаты
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК ЗаказПоставщику,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ФормаОплаты КАК ФормаОплаты,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	0 КАК Сумма,
	|	0 КАК КОплате,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК Оплачивается,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр,
	|
	|	&Организация КАК Организация
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
	|	)
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК ЗаказКлиента,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ФормаОплаты КАК ФормаОплаты,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	0 КАК Сумма,
	|	0 КАК КОплате,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК Оплачивается,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр,
	|
	|	&Организация КАК Организация
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	)
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныхСредств";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ДатаПлатежа
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ЖелательнаяДатаПлатежа
	|	ИНАЧЕ
	|		НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ВЫБОР ДанныеДокумента.ФормаОплатыЗаявки
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная) ТОГДА
	|			ДанныеДокумента.Касса
	|		ИНАЧЕ
	|			ДанныеДокумента.БанковскийСчет
	|	КОНЕЦ КАК ДенежныеСредства,
	|	ВЫБОР ДанныеДокумента.ФормаОплатыЗаявки
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТипДенежныхСредств,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|		ИНАЧЕ &СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|				ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|			ТОГДА ДанныеДокумента.БанковскийСчетПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|			ТОГДА ДанныеДокумента.КассаПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА ДанныеДокумента.ПодотчетноеЛицо
	|	КОНЕЦ КАК КорДенежныеСредства,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути)
	|	КОНЕЦ КАК КорТипДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА ВЫБОР
	|					КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|						ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|					ИНАЧЕ ДанныеДокумента.СуммаДокумента
	|				КОНЕЦ
	|	КОНЕЦ КАК СуммаКВыплатеВРамкахЛимита,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА ВЫБОР
	|					КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|						ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|					ИНАЧЕ ДанныеДокумента.СуммаДокумента
	|				КОНЕЦ
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|				ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|			ТОГДА ДанныеДокумента.БанковскийСчетПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|			ТОГДА ДанныеДокумента.КассаПолучатель
	|	КОНЕЦ КАК ИсточникКорГФУДенежныхСредств,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции КАК СтатьяКалькуляции
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ДатаПлатежа
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ЖелательнаяДатаПлатежа
	|	ИНАЧЕ
	|		НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	КОНЕЦ,
	|	&ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.БанковскийСчет,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные),
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Депозиты),
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ,
	|	ДанныеДокумента.БанковскийСчет,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции КАК СтатьяКалькуляции
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &ДатаПлатежа
	|		КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &ЖелательнаяДатаПлатежа
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК ПодразделениеДоходовРасходов,
	|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК СуммаКВыплатеВРамкахЛимита,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК ИсточникГФУДоходовРасходов,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции КАК СтатьяКалькуляции
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &ДатаПлатежа
	|		КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &ЖелательнаяДатаПлатежа
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	КОНЕЦ,
	|	&ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДоходовРасходов,
	|	ДанныеДокумента.БанковскийСчет,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные),
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ДанныеДокумента.ТипНалога,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ,
	|	ДанныеДокумента.БанковскийСчет,
	|	НЕОПРЕДЕЛЕНО,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &ДатаПлатежа
	|		КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &ЖелательнаяДатаПлатежа
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	КОНЕЦ,
	|	&ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДоходовРасходов,
	|	ДанныеДокумента.БанковскийСчет,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные),
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ДанныеДокумента.АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ,
	|	ДанныеДокумента.БанковскийСчет,
	|	НЕОПРЕДЕЛЕНО,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты)
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваКонтрагент";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована)
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеДокумента.ФормаОплатыНаличная
	|						ТОГДА ДанныеДокумента.Касса
	|					ИНАЧЕ ДанныеДокумента.ДенежныеСредства
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДанныеДокумента.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|					ТОГДА ДанныеДокумента.Касса
	|				ИНАЧЕ ДанныеДокумента.ДенежныеСредства
	|			КОНЕЦ
	|	КОНЕЦ КАК ДенежныеСредства,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована)
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеДокумента.ФормаОплатыНаличная
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДанныеДокумента.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|			КОНЕЦ
	|	КОНЕЦ КАК ТипДенежныхСредств,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА СУММА(ДанныеДокумента.СуммаКВыплате)
	|	КОНЕЦ КАК СуммаКВыплатеВРамкахЛимита,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА СУММА(ДанныеДокумента.СуммаКВыплате)
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции КАК СтатьяКалькуляции
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА &ДатаПлатежа
	|			КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА &ЖелательнаяДатаПлатежа
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|		КОНЕЦ КАК Период,
	|		ДанныеДокумента.ФормаОплатыНаличная КАК ФормаОплатыНаличная,
	|		ДанныеДокумента.ФормаОплатыЗаявки КАК ФормаОплатыЗаявки,
	|		ДанныеДокумента.Статус КАК Статус,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		ДанныеДокумента.Касса КАК Касса,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ВЫБОР
	|			КОГДА ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ИЛИ ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|				ТОГДА ТаблицаРасшифровкаПлатежа.Заказ
	|			ИНАЧЕ ТаблицаРасшифровкаПлатежа.Заказ.Договор
	|		КОНЕЦ КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ОбъектРасчетов,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаКВыплате,
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ИсточникГФУРасчетов,
	|		ДанныеДокумента.СверхЛимита КАК СверхЛимита,
	|		ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|		ДанныеДокумента.СтатьяКалькуляции КАК СтатьяКалькуляции
	|
	|	ИЗ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО (ИСТИНА)
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|		И &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА &ДатаПлатежа
	|			КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА &ЖелательнаяДатаПлатежа
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|		КОНЕЦ,
	|		ДанныеДокумента.ФормаОплатыНаличная,
	|		ДанныеДокумента.ФормаОплатыЗаявки,
	|		ДанныеДокумента.Статус,
	|		&ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация,
	|		ДанныеДокумента.Подразделение,
	|		ДанныеДокумента.БанковскийСчет,
	|		ДанныеДокумента.Касса,
	|		&СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта,
	|		НЕОПРЕДЕЛЕНО,
	|		ДанныеДокумента.БанковскийСчетПолучатель.Владелец,
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО,
	|		ДанныеДокумента.СуммаДокумента,
	|		ДанныеДокумента.БанковскийСчет,
	|		НЕОПРЕДЕЛЕНО,
	|		ДанныеДокумента.СверхЛимита,
	|		ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|		ДанныеДокумента.СтатьяКалькуляции
	|	
	|	ИЗ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|		И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА &ДатаПлатежа
	|			КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА &ЖелательнаяДатаПлатежа
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|		КОНЕЦ,
	|		ДанныеДокумента.ФормаОплатыНаличная,
	|		ДанныеДокумента.ФормаОплатыЗаявки,
	|		ДанныеДокумента.Статус,
	|		ВЫБОР
	|			КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|					И (ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСОсновногоДолга = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|						ИЛИ ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСПоступленияВыдачи = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|			КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|					И (ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСПроцентов = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|						ИЛИ ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСКомиссии = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПроцентовПоКредитам)
	|			ИНАЧЕ &ХозяйственнаяОперация
	|		КОНЕЦ,
	|		ДанныеДокумента.Организация,
	|		ДанныеДокумента.Подразделение,
	|		ДанныеДокумента.БанковскийСчет,
	|		ДанныеДокумента.Касса,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|		НЕОПРЕДЕЛЕНО,
	|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента),
	|		ДанныеДокумента.БанковскийСчет,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|		ДанныеДокумента.СверхЛимита,
	|		ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|		ДанныеДокумента.СтатьяКалькуляции
	|
	|	ИЗ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО (ИСТИНА)
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))) КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.Статус,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ДенежныеСредства,
	|	ДанныеДокумента.Касса,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ОбъектРасчетов,
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов,
	|	ДанныеДокумента.ТипПлатежаФЗ275,
	|	ДанныеДокумента.СверхЛимита,
	|	ДанныеДокумента.ФормаОплатыНаличная,
	|	ДанныеДокумента.ФормаОплатыЗаявки,
	|	ДанныеДокумента.СтатьяКалькуляции
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУПР") Тогда
		Возврат;
	КонецЕсли;
	
	КоэффициентПересчетаВВалютуУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
		Запрос.Параметры.Валюта, 
		Константы.ВалютаУправленческогоУчета.Получить(), 
		Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", КоэффициентПересчетаВВалютуУпр);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерам") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос.Параметры, Запрос.Параметры.Ссылка, Запрос.МенеджерВременныхТаблиц);
	
	Если Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		Или Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
	Тогда
		СтруктураАналитики = Новый Структура;
		СтруктураАналитики.Вставить("Организация", Запрос.Параметры.Организация);
		СтруктураАналитики.Вставить("Контрагент", Запрос.Параметры.ОрганизацияПолучатель);
		СтруктураАналитики.Вставить("Партнер", Справочники.Партнеры.НашеПредприятие);
		СтруктураАналитики.Вставить("Договор", Справочники.ДоговорыМеждуОрганизациями.ПустаяСсылка());
		СтруктураАналитики.Вставить("НаправлениеДеятельности", Справочники.НаправленияДеятельности.ПустаяСсылка());
		
	ИначеЕсли Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты Тогда
		
		СтруктураАналитики = Новый Структура;
		СтруктураАналитики.Вставить("Организация", Запрос.Параметры.Организация);
		СтруктураАналитики.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
		СтруктураАналитики.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
		СтруктураАналитики.Вставить("Договор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		СтруктураАналитики.Вставить("НаправлениеДеятельности", Справочники.НаправленияДеятельности.ПустаяСсылка());
		
	Иначе
		
		СтруктураАналитики = Новый Структура;
		СтруктураАналитики.Вставить("Организация", Запрос.Параметры.Организация);
		СтруктураАналитики.Вставить("Контрагент", Запрос.Параметры.Контрагент);
		СтруктураАналитики.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
		СтруктураАналитики.Вставить("Договор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		СтруктураАналитики.Вставить("НаправлениеДеятельности", Справочники.НаправленияДеятельности.ПустаяСсылка());
	КонецЕсли;
	
	АналитикаУчетаПоПартнерам = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитики);
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", АналитикаУчетаПоПартнерам);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаОплатаНДСВБюджет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПодтверждениеОплатыНДСВБюджет";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Субконто3 = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Ссылка.ДокументОснование
	|		ИНАЧЕ ДанныеДокумента.Субконто3
	|	КОНЕЦ КАК СчетФактура
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И (ДанныеДокумента.Ссылка.ТипНалога В
	|										(ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДС_ВвозимыеТовары), 
	|										 ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДС_НалоговыйАгент))
	|		ИЛИ ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка.ДокументОснование) В
	|										(ТИП(Документ.ЗаявлениеОВвозеТоваров),
	|										 ТИП(Документ.ТаможеннаяДекларацияИмпорт),
	|										 ТИП(Документ.СчетФактураНалоговыйАгент)))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	ИСТИНА КАК ЗаписьПроведением
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Для документа "ЗаявкаНаРасходованиеДенежныхСредств" дополнительные проверки отсутствуют
	
КонецФункции

Функция СтатьяДвиженияДенежныхСредствДокумента(ДанныеДокумента)

	Если ЗначениеЗаполнено(ДанныеДокумента.СтатьяДвиженияДенежныхСредств) Тогда
		СтатьяДвиженияДенежныхСредств = ДанныеДокумента.СтатьяДвиженияДенежныхСредств;
	Иначе
		СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПредопределеннаяСтатьяДДС(
			ДанныеДокумента.ХозяйственнаяОперация,
			ДанныеДокумента.Валюта);
	КонецЕсли;
	
	Возврат СтатьяДвиженияДенежныхСредств;

КонецФункции

#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	ИмяФормы = "Документ.ЗаявкаНаРасходованиеДенежныхСредств.Форма.ФормаСпискаЗаявокКСогласованию";
	
	ОбщиеПараметрыЗапросов = ТекущиеДелаСлужебный.ОбщиеПараметрыЗапросов();
	
	// Определим доступны ли текущему пользователю показатели группы
	Доступность =
		(ОбщиеПараметрыЗапросов.ЭтоПолноправныйПользователь
			Или ПравоДоступа("Просмотр", Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств))
		И (ПравоДоступа("Изменение", Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств)
			ИЛИ ПраваПользователяПовтИсп.СогласованиеЗаявокНаРасходованиеДенежныхСредств())
		И ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств");
	
	Если НЕ Доступность Тогда
		Возврат;
	КонецЕсли;
	
	// Расчет показателей
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА ЗаявкаНаРасходованиеДенежныхСредств.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована)
	|				ТОГДА ЗаявкаНаРасходованиеДенежныхСредств.Ссылка
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ЗаявкиНаОплатуКСогласованию,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА ЗаявкаНаРасходованиеДенежныхСредств.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована)
	|					И ЗаявкаНаРасходованиеДенежныхСредств.ДатаПлатежа < НАЧАЛОПЕРИОДА(&ДатаАктуальности, ДЕНЬ)
	|				ТОГДА ЗаявкаНаРасходованиеДенежныхСредств.Ссылка
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ЗаявкиНаОплатуКСогласованиюПросрочено
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ГДЕ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Проведен";
	
	Результат = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	// Заполнение дел.
	// ЗаявкиНаОплату
	ДелоРодитель = ТекущиеДела.Добавить();
	ДелоРодитель.Идентификатор  = "ЗаявкиНаОплату";
	ДелоРодитель.Представление  = НСтр("ru = 'Заявки на оплату'");
	ДелоРодитель.Владелец       = Метаданные.Подсистемы.Закупки;
	
	// ЗаявкиНаОплатуКСогласованию
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована);
	ПараметрыОтбора.Вставить("ДатаОплаты", ОбщиеПараметрыЗапросов.ПустаяДата);
	ПараметрыОтбора.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ПараметрыОтбора.Вставить("Приоритет", Справочники.Приоритеты.ПустаяСсылка());
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ЗаявкиНаОплатуКСогласованию";
	Дело.ЕстьДела       = Результат.ЗаявкиНаОплатуКСогласованию > 0;
	Дело.Представление  = НСтр("ru = 'Заявки к согласованию'");
	Дело.Количество     = Результат.ЗаявкиНаОплатуКСогласованию;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = Новый Структура("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	Дело.Владелец       = "ЗаявкиНаОплату";
	
	// ЗаявкиНаОплатуКСогласованиюПросрочено
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована);
	ПараметрыОтбора.Вставить("ДатаОплаты", НачалоДня(ОбщиеПараметрыЗапросов.ТекущаяДата - 86400));
	ПараметрыОтбора.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ПараметрыОтбора.Вставить("Приоритет", Справочники.Приоритеты.ПустаяСсылка());
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ЗаявкиНаОплатуКСогласованиюПросрочено";
	Дело.ЕстьДела       = Результат.ЗаявкиНаОплатуКСогласованиюПросрочено > 0;
	Дело.Представление  = НСтр("ru = 'Согласование просрочено'");
	Дело.Количество     = Результат.ЗаявкиНаОплатуКСогласованиюПросрочено;
	Дело.Важное         = Истина;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = Новый Структура("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	Дело.Владелец       = "ЗаявкиНаОплату";
	
	Если Результат.ЗаявкиНаОплатуКСогласованию > 0
		Или Результат.ЗаявкиНаОплатуКСогласованиюПросрочено > 0 Тогда
		ДелоРодитель.ЕстьДела = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция ВалютаПланированияДенежныхСредств(ДанныеДокумента, ВалютаБанковскогоСчета) Экспорт
	
	Если ДанныеДокумента.ФормаОплатыЗаявки <> Перечисления.ФормыОплаты.Безналичная Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ДанныеДокумента.ПланированиеСуммы = Перечисления.СпособыПланированияОплатыЗаявок.ВВалютеВзаиморасчетов Тогда
		Возврат ВалютаБанковскогоСчета;
	Иначе
		Возврат ДанныеДокумента.Валюта;
	КонецЕсли;
	
КонецФункции

// Добавляет команду создания документа "Заявка на расходование ДС".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОснованииОтчетаПоКомиссии_Вознаграждение(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СписаниеБезналичныхДенежныхСредств) Тогда		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.ЗаявкаНаРасходованиеДсНаОснованииОтчетаПоКомиссии_Вознаграждение";
		КомандаСоздатьНаОсновании.Идентификатор = "ЗаявкаНаРасходованиеДсНаОснованииОтчетаПоКомиссии_Вознаграждение";
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств) 
			+ " " + НСтр("ru = 'комитента (вознаграждение комиссионеру)'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьЗаявкиНаРасходованиеДенежныхСредств";

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;


	Возврат Неопределено;
КонецФункции

#КонецОбласти

#Область Печать

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы.
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
