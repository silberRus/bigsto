
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Валюта = Параметры.Валюта;
	Организация = Параметры.Организация;
	СтатьяКалькуляции  = Параметры.СтатьяКалькуляции;
	СуммаДокумента = Параметры.СуммаДокумента;
	
	ФильтрПоСтатьеКалькуляции = ЗначениеЗаполнено(СтатьяКалькуляции);
	
	
	МодификацияКонфигурацииПереопределяемый.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтборСтрокТаблицыРаспределения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьСтроки(Команда)
	
	Если ФильтрПоСтатьеКалькуляции Тогда
		Для Каждого СтрокаТаблицы Из РаспределениеПоСчетам Цикл
			Если СтрокаТаблицы.СтатьяКалькуляции = СтатьяКалькуляции Тогда
				СтрокаТаблицы.СтрокаВыбрана = Истина;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого СтрокаТаблицы Из РаспределениеПоСчетам Цикл
			СтрокаТаблицы.СтрокаВыбрана = Истина;
		КонецЦикла;
	КонецЕсли;
	РассчитатьСуммуПлатежей();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьСтроки(Команда)
	
	Для Каждого СтрокаТаблицы Из РаспределениеПоСчетам Цикл
		СтрокаТаблицы.СтрокаВыбрана = Ложь;
	КонецЦикла;
	РассчитатьСуммуПлатежей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	АдресТаблицы = ПеренестиВДокументНаСервере();
	
	Если АдресТаблицы <> Неопределено Тогда
		Закрыть(АдресТаблицы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПеренестиВДокументНаСервере()
	
	ТаблицаПроверки = РаспределениеПоСчетам.Выгрузить(Новый Структура("СтрокаВыбрана", Истина));
	ТаблицаПроверки.Свернуть("СтатьяКалькуляции");
	Если ТаблицаПроверки.Количество() > 1 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Платеж может быть отнесен только на одну статью калькуляции.'"));
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ПоместитьРаспределениеВХранилище();
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФильтрПоСтатьеКалькуляцииПриИзменении(Элемент)
	
	ОтборСтрокТаблицыРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяКалькуляцииПриИзменении(Элемент)
	
	ФильтрПоСтатьеКалькуляции = ЗначениеЗаполнено(СтатьяКалькуляции);
	ОтборСтрокТаблицыРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеПоСчетамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.РаспределениеПоСчетам.ТекущиеДанные <> Неопределено Тогда
		Если Поле.Имя = "РаспределениеПоСчетамКонтрактСЗаказчиком" Тогда
			ПоказатьЗначение(Неопределено, Элементы.РаспределениеПоСчетам.ТекущиеДанные.КонтрактСЗаказчиком);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеПоСчетамСуммаПриИзменении(Элемент)
	
	РассчитатьСуммуПлатежей();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Статья "Прибыль"
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РаспределениеПоСчетамСтатьяКалькуляции.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РаспределениеПоСчетам.СтатьяКалькуляции");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Прибыль'"));
	
	// Сумма платежа
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РаспределениеПоСчетамСумма.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РаспределениеПоСчетам.СтрокаВыбрана");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РаспределениеПоСчетам.Сумма");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура ОтборСтрокТаблицыРаспределения()
	
	Если ФильтрПоСтатьеКалькуляции Тогда
		Элементы.РаспределениеПоСчетам.ОтборСтрок = Новый ФиксированнаяСтруктура("СтатьяКалькуляции", СтатьяКалькуляции);
	Иначе
		Элементы.РаспределениеПоСчетам.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьРаспределениеВХранилище()
	
	ТаблицаВыбранныхСчетов = РаспределениеПоСчетам.Выгрузить(Новый Структура("СтрокаВыбрана", Истина));
	АдресРаспределенияВХранилище = ПоместитьВоВременноеХранилище(ТаблицаВыбранныхСчетов);
	
	Возврат АдресРаспределенияВХранилище;
	
КонецФункции

&НаКлиенте
Процедура РассчитатьСуммуПлатежей()
	
	СуммаПлатежей = 0;
	Для Каждого СтрокаТаблицы Из РаспределениеПоСчетам Цикл
		Если СтрокаТаблицы.СтрокаВыбрана Тогда
			СуммаПлатежей = СуммаПлатежей + СтрокаТаблицы.Сумма;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
