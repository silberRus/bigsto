#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Распределение НДС".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.РаспределениеНДС) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РаспределениеНДС.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.РаспределениеНДС);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьНДС0,РаспределятьНДС,УправлениеПредприятием,КомплекснаяАвтоматизация";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры


// Возвращает признак необходимости распределения НДС по товарам
//
// Параметры:
// 	Организация -  СправочникСсылка.Организации - Организация, в которой выполняется распределение НДС.
// 	Период -  Дата - Период выполнения распределения НДС.
//
// Возвращаемое значение:
// 	Результат - Булево - Признак необходимости распределения НДС по товарам
//
Функция НеобходимоРаспределениеНДСПоТоварам(Организация, Знач Период) Экспорт
	
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|ГДЕ
	|	ПартииПрочихРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПартииПрочихРасходов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ПартииПрочихРасходов.Организация = &Организация
	|	И ПартииПрочихРасходов.СтатьяРасходов = НЕОПРЕДЕЛЕНО
	|	И ПартииПрочихРасходов.НДСРегл <> 0
	|";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоКвартала(Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));
	
	Результат = НЕ Запрос.Выполнить().Пустой();
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак необходимости распределения НДС за период
//
// Параметры:
// 	Организация -  СправочникСсылка.Организации - Организация, в которой выполняется распределение НДС.
// 	Период -  Дата - Период выполнения распределения НДС.
//
// Возвращаемое значение:
// 	Результат - Булево - Признак необходимости распределения НДС
//
Функция НеобходимоРаспределениеНДС(Организация, Знач Период) Экспорт
	
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СтатьиДопРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1 
	|	1
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатьиДопРасходов КАК СтатьиДопРасходов
	|		ПО ПартииПрочихРасходов.СтатьяРасходов = СтатьиДопРасходов.Ссылка
	|ГДЕ
	|	ПартииПрочихРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПартииПрочихРасходов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ПартииПрочихРасходов.Организация = &Организация
	|	И СтатьиДопРасходов.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПартииПрочихРасходовОстатки.Организация
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов.Остатки(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И НЕ СтатьяРасходов В
	|						(ВЫБРАТЬ Т.Ссылка ИЗ СтатьиДопРасходов КАК Т)) КАК ПартииПрочихРасходовОстатки
	|";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоКвартала(Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецКвартала(Период));
	
	Результат = НЕ Запрос.Выполнить().Пустой();
	
	Возврат Результат;
	
КонецФункции

// Возвращают данные для оценки возможности применения "правила 5%"
//
// Параметры:
// 	 МассивОрганизаций - Массив, СправочникСсылка.Организация - организации, для которых надо выполнить оценку
// 	 Период - Дата - квартал для оценки
//
// Возвращаемое значение:
// 	 Оценка - Таблица значений с колонками
//		* Организация - СправочникСсылка.Организации
// 	 	* РасходыПоДеятельностиНеОблагаемойНДС - Число - Расходы по реализации не облагаемой НДС.
// 		* РасходыВсего - Число - Обшая сумма расходов.
// 		* Доля - Число - Процент расходов, относящихся к реализации не облагаемой НДС.
//
Функция ОценкаПримененияПравила5Процентов(МассивОрганизаций, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АналитикаУчета.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА СебестоимостьПродаж.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС), ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеОблагаетсяНДС,
	|	СУММА(СебестоимостьПродаж.СтоимостьРегл) КАК Себестоимость
	|ПОМЕСТИТЬ СебестоимостьПродаж
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК СебестоимостьПродаж
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаУчета
	|	ПО 
	|		СебестоимостьПродаж.АналитикаУчетаПоПартнерам = АналитикаУчета.Ссылка
	|ГДЕ
	|	СебестоимостьПродаж.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ) И КОНЕЦПЕРИОДА(&Период, КВАРТАЛ)
	|	И АналитикаУчета.Организация В(&МассивОрганизаций)
	|	И СебестоимостьПродаж.СтоимостьРегл <> 0
	|	И СебестоимостьПродаж.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга))
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикаУчета.Организация,
	|	ВЫБОР
	|		КОГДА СебестоимостьПродаж.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС), ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьПродаж.Организация КАК Организация,
	|	СебестоимостьПродаж.РасходыПоДеятельностиНеОблагаемойНДС КАК РасходыПоДеятельностиНеОблагаемойНДС,
	|	СебестоимостьПродаж.РасходыВсего КАК РасходыВсего,
	|	ВЫБОР
	|		КОГДА СебестоимостьПродаж.РасходыВсего = 0
	|			ТОГДА 0
	|		ИНАЧЕ 100 * СебестоимостьПродаж.РасходыПоДеятельностиНеОблагаемойНДС / СебестоимостьПродаж.РасходыВсего
	|	КОНЕЦ КАК Доля
	|ИЗ
	|	(ВЫБРАТЬ
	|		Организации.Ссылка КАК Организация,
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|					КОГДА СебестоимостьПродаж.НеОблагаетсяНДС
	|						ТОГДА СебестоимостьПродаж.Себестоимость
	|					ИНАЧЕ 0
	|				КОНЕЦ), 0) КАК РасходыПоДеятельностиНеОблагаемойНДС,
	|		ЕСТЬNULL(СУММА(СебестоимостьПродаж.Себестоимость), 0) КАК РасходыВсего
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|			ЛЕВОЕ СОЕДИНЕНИЕ СебестоимостьПродаж КАК СебестоимостьПродаж
	|			ПО Организации.Ссылка = СебестоимостьПродаж.Организация
	|	ГДЕ
	|		Организации.Ссылка В(&МассивОрганизаций)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Организации.Ссылка) КАК СебестоимостьПродаж";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("МассивОрганизаций", ОбщегоНазначенияУТКлиентСервер.Массив(МассивОрганизаций));
	
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Индексы.Добавить("Организация");
	
	Возврат Результат;
	
КонецФункции

// Выполняет распределение НДС за указанный период в указанных организациях. Предназначена для вызова в рамках
//
// Параметры:
//	Период - Дата - месяц, за который необходимо создать документы РаспределениеНДС.
//	Организация - Массив, СправочникСсылка.Организации, Неопределено - отбор организаций, по которым создаются документы.
//		Если передан пустой параметр, то документы будут созданы по всем организациям.
//	ИмяСобытияЖР - Строка - имя события об ошибке для записи журнала регистрации
//	МенеджерВТКэшейРегистров - МенеджерВременныхТаблиц - содержит кэш оборотов/остатков регистров.
//		Используется только при вызове этого метода в ходе выполнения расчета механизмом партионного учета версии 2.2.
//	ИдетРасчетСебестоимости - Булево - признак вызова распределения НДС из механизма расчета партий и себестоимости
//
// Возвращаемое значение:
//		Структура - результат распределения НДС; ключи структуры
//		  - МассивДокументов - Массив - ссылки на все обработанные документы распределения НДС (независимо от наличия в них ошибок)
//		  - РассчитанныеОрганизации - Массив - ссылки на организации, по которым распределение НДС было выполнено без ошибок
//		  - ТекстОшибки - Строка - текст всех ошибок, зафиксированных при распределении НДС
//
Функция РаспределитьНДС(Период, Организация, ИмяСобытияЖР = "", МенеджерВТКэшейРегистров = Неопределено, ИдетРасчетСебестоимости = Ложь) Экспорт
	
	РезультатРаспределенияНДС = Новый Структура;
	РезультатРаспределенияНДС.Вставить("МассивДокументов", 		  Новый Массив);
	РезультатРаспределенияНДС.Вставить("РассчитанныеОрганизации", Новый Массив);
	РезультатРаспределенияНДС.Вставить("ТекстОшибки", 	   		  "");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеСправочника.Ссылка КАК Организация
	|ПОМЕСТИТЬ ВТОрганизации
	|ИЗ
	|	Справочник.Организации КАК ДанныеСправочника
	|ГДЕ
	|	(ДанныеСправочника.Ссылка В (&МассивОрганизаций)
	|		ИЛИ &ПоВсемОрганизациям)
	|	И (ДанныеСправочника.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|		ИЛИ &УчитыватьУпрОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОрганизации.Организация	 	 КАК Организация,
	|	МАКСИМУМ(ЕСТЬNULL(РаспределениеНДСПроведен.Ссылка, РаспределениеНДССоздан.Ссылка)) КАК Документ
	|ИЗ
	|	ВТОрганизации КАК ВТОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеНДС КАК РаспределениеНДСПроведен
	|		ПО ВТОрганизации.Организация = РаспределениеНДСПроведен.Организация
	|			И РаспределениеНДСПроведен.Проведен
	|			И РаспределениеНДСПроведен.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеНДС КАК РаспределениеНДССоздан
	|		ПО ВТОрганизации.Организация = РаспределениеНДССоздан.Организация
	|			И НЕ РаспределениеНДССоздан.ПометкаУдаления
	|			И РаспределениеНДССоздан.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВТОрганизации.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация";
	
	Запрос.УстановитьПараметр("ДатаНачала",    			 НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", 			 КонецМесяца(Период));
	Запрос.УстановитьПараметр("УчитыватьУпрОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
	Запрос.УстановитьПараметр("МассивОрганизаций",  	 ОбщегоНазначенияУТКлиентСервер.Массив(Организация));
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", 	 НЕ ЗначениеЗаполнено(Организация));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОшибкиДатЗапретаИзменения = "";
	ОшибкиПроверкиЗаполнения  = "";
	ОшибкиПроведения		  = "";
	
	Пока Выборка.Следующий() Цикл 
		
		Состояние = ЗакрытиеМесяцаСервер.ОпределитьСостояниеЭтаповРасчета(
			Перечисления.ОперацииЗакрытияМесяца.РаспределениеНДС,
			Период,
			Выборка.Организация,
			НЕ ИдетРасчетСебестоимости);
		
		Если Состояние <> Перечисления.СостоянияОперацийЗакрытияМесяца.НеВыполнено
		 И Состояние <> Перечисления.СостоянияОперацийЗакрытияМесяца.ВыполненоСОшибками Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемыРасчета(
			?(ИдетРасчетСебестоимости,
				Перечисления.ОперацииЗакрытияМесяца.РасчетПартийИСебестоимости,
				Перечисления.ОперацииЗакрытияМесяца.РаспределениеНДС),
			Выборка.Организация,
			НачалоМесяца(Период));
			
		ТекстРегистрацииОшибки = СтрЗаменить(
			НСтр("ru='При %операция% по организации ""%1"" за период %2 были диагностированы ошибки'"),
			"%операция%",
			?(ИдетРасчетСебестоимости, НСтр("ru='распределении НДС'"), НСтр("ru='выполнении расчета'")));
			
		НачатьТранзакцию();
		
		Попытка
		
			Если НЕ ЗначениеЗаполнено(Выборка.Документ) Тогда
				
				ДокументОбъект = Документы.РаспределениеНДС.СоздатьДокумент();
				ДокументОбъект.Дата 		 = КонецМесяца(Период);
				ДокументОбъект.Организация 	 = Выборка.Организация;
				ДокументОбъект.НачалоПериода = ПолучитьНачалоРасширенногоНалоговогоПериода(Период, Выборка.Организация);
				ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
				
				ПравилаСписанияНДС = Документы.РаспределениеНДС.ЗаполнитьПравилаСписанияНДС(Выборка.Организация);
				ЗаполнитьЗначенияСвойств(ДокументОбъект, ПравилаСписанияНДС);
				
			Иначе
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить("Документ.РаспределениеНДС");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Документ);
				Блокировка.Заблокировать();
				
				ДокументОбъект = Выборка.Документ.ПолучитьОбъект();
				
			КонецЕсли;
		
			// Проверим, что документ находится в доступном для изменения периоде.
			ОписаниеОшибкиДаты = "";
			
			Если ДатыЗапретаИзменения.ИзменениеЗапрещено(ДокументОбъект, , ОписаниеОшибкиДаты) Тогда
				
				ОшибкиДатЗапретаИзменения = ОшибкиДатЗапретаИзменения + ?(ОшибкиДатЗапретаИзменения = "", "", "
					|") + ПротоколРасчетаПартийИСебестоимости.ПредставлениеМногострочногоТекста(ОписаниеОшибкиДаты);
				
				ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемуВыполненияРасчета(
					ПараметрыРегистрации,
					ТекстРегистрацииОшибки,
					Перечисления.ВариантыВажностиПроблемыСостоянияСистемы.Ошибка,
					ОписаниеОшибкиДаты);
				
				ОтменитьТранзакцию();
				
				Продолжить;
				
			КонецЕсли;
			
			// Заполним дополнительные свойства документа.
			ДокументОбъект.ДополнительныеСвойства.Вставить("РегламентныеОперации");
			
			УниверсальныеМеханизмыПартийИСебестоимости.УстановитьПризнакВыполненияРасчетаПартийИСебестоимости(ДокументОбъект);
			
			Если МенеджерВТКэшейРегистров <> Неопределено Тогда
				// Вызвано из партионного учета версии 2.2.
				ДокументОбъект.ДополнительныеСвойства.Вставить("МенеджерВТКэшейРегистров", МенеджерВТКэшейРегистров);
				ДокументОбъект.ДополнительныеСвойства.Вставить("ПериодРасчетаПартий", 	   Период);
			КонецЕсли;
			
			Если НЕ ДокументОбъект.БазаРаспределенияУстанавливаетсяВручную Тогда
				
				Результат = Документы.РаспределениеНДС.ПолучитьБазуРаспределения(ДокументОбъект.Дата, ДокументОбъект.НачалоПериода, ДокументОбъект.Организация);
				
				ЗаполнитьЗначенияСвойств(
					ДокументОбъект, 
					Результат, 
					"ВыручкаНДС, ВыручкаНеНДС, ВыручкаЕНВД, ВыручкаНДС0, ВыручкаНДС0НесырьевыеТовары, ВыручкаНДС0СырьевыеТоварыУслуги");
					
				ДокументОбъект.ДокументыЭкспорт.Загрузить(Результат.ДокументыЭкспорт);
				
			КонецЕсли;
			
			Если ДокументОбъект.ЭтоНовый() Тогда
				// Регламентный документ должен остаться в ИБ независимо от того, удастся его провести или нет.
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			
			// Проверим корректность заполнения документа.
			СообщенияПроверки = УниверсальныеМеханизмыПартийИСебестоимости.ПроверитьЗаполнениеОбъектаСПерехватомСообщений(ДокументОбъект);
			
			Если ЗначениеЗаполнено(СообщенияПроверки) Тогда
				
				// Проверка заполнения документа обнаружила ошибки.
				ОшибкиПроверкиЗаполнения = ОшибкиПроверкиЗаполнения	+ ?(ОшибкиПроверкиЗаполнения = "", "", "
					|") + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'При проверке документа ""%1"" были обнаружены ошибки:
								|%2'"),
							СокрЛП(ДокументОбъект),
							ПротоколРасчетаПартийИСебестоимости.ПредставлениеМногострочногоТекста(СообщенияПроверки, " - "));
				
				ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемуВыполненияРасчета(
					ПараметрыРегистрации,
					ТекстРегистрацииОшибки,
					Перечисления.ВариантыВажностиПроблемыСостоянияСистемы.Ошибка,
					ОшибкиПроверкиЗаполнения,
					ДокументОбъект.Ссылка);
				
			Иначе
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				РезультатРаспределенияНДС.РассчитанныеОрганизации.Добавить(Выборка.Организация); // распределение выполнено успешно
			КонецЕсли;
			
			РезультатРаспределенияНДС.МассивДокументов.Добавить(ДокументОбъект.Ссылка);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ОшибкиПроведения = ОшибкиПроведения + ?(ОшибкиПроведения = "", "", "
				|") + ТекстОшибки;
			
			ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыРегистрации,
				ТекстРегистрацииОшибки,
				Перечисления.ВариантыВажностиПроблемыСостоянияСистемы.Ошибка,
				ТекстОшибки);
			
		КонецПопытки;
		
	КонецЦикла;
	
	// Обработаем информацию об ошибках.
	Если ЗначениеЗаполнено(ОшибкиДатЗапретаИзменения)
	 ИЛИ ЗначениеЗаполнено(ОшибкиПроверкиЗаполнения)
	 ИЛИ ЗначениеЗаполнено(ОшибкиПроведения) Тогда
		
		РезультатРаспределенияНДС.ТекстОшибки = ОшибкиДатЗапретаИзменения;
		
		РезультатРаспределенияНДС.ТекстОшибки =
			?(РезультатРаспределенияНДС.ТекстОшибки = "", "", РезультатРаспределенияНДС.ТекстОшибки + "
				|") + ОшибкиПроверкиЗаполнения;
		
		РезультатРаспределенияНДС.ТекстОшибки =
			?(РезультатРаспределенияНДС.ТекстОшибки = "", "", РезультатРаспределенияНДС.ТекстОшибки + "
				|") + ОшибкиПроведения;
		
		Если ЗначениеЗаполнено(ИмяСобытияЖР) Тогда
			
			ТекстДляЖурнала = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось выполнить распределение НДС по причине:
					|%1'"),
				РезультатРаспределенияНДС.ТекстОшибки);
			
			ЗаписьЖурналаРегистрации(
				ИмяСобытияЖР,
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.РаспределениеНДС,
				,
				ТекстДляЖурнала);
			
		КонецЕсли;
		
 	КонецЕсли;
	
	Возврат РезультатРаспределенияНДС;
	
КонецФункции

Процедура СформироватьЗадание(ПараметрыЗадания) Экспорт
	
	Запись = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, ПараметрыЗадания);
	Запись.Операция = Перечисления.ОперацииЗакрытияМесяца.РаспределениеНДС;
	Запись.НомерЗадания = Константы.НомерЗаданияКЗакрытиюМесяца.Получить();
	Запись.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Если Регистры <> Неопределено Тогда
		ПроведениеСерверУТ.ЗапретВыборочногоПроведенияПоРегистрам(ДокументСсылка);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка							КАК Ссылка,
	|	ДанныеДокумента.Дата							КАК Период,
	|	ДанныеДокумента.НачалоПериода					КАК НачалоПериода,
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ)		КАК ПериодБазы,
	|	ДанныеДокумента.Организация						КАК Организация,
	|	ДанныеДокумента.ВыручкаНДС						КАК ВыручкаНДС,
	|	ДанныеДокумента.ВыручкаНеНДС					КАК ВыручкаНеНДС,
	|	ДанныеДокумента.ВыручкаЕНВД						КАК ВыручкаЕНВД,
	|	ДанныеДокумента.ВыручкаНДС0						КАК ВыручкаНДС0,
	|	ДанныеДокумента.ВыручкаНДС0СырьевыеТоварыУслуги	КАК ВыручкаНДС0СырьевыеТоварыУслуги,
	|	ДанныеДокумента.ВыручкаНДС0НесырьевыеТовары		КАК ВыручкаНДС0НесырьевыеТовары,
	|	ДанныеДокумента.СтатьяРасходовНеНДС				КАК СтатьяРасходовНеНДС,
	|	ДанныеДокумента.АналитикаРасходовНеНДС			КАК АналитикаРасходовНеНДС,
	|	ДанныеДокумента.СтатьяРасходовЕНВД				КАК СтатьяРасходовЕНВД,
	|	ДанныеДокумента.АналитикаРасходовЕНВД			КАК АналитикаРасходовЕНВД,
	|	ДанныеДокумента.СписатьНДСПоРасходамАктивамНаСтатьиОтражения КАК СписатьНДСПоРасходамАктивамНаСтатьиОтражения,
	|	ДанныеДокумента.ПрименитьПравило5Процентов		КАК ПрименитьПравило5Процентов
	|ИЗ
	|	Документ.РаспределениеНДС КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Ссылка", Выборка.Ссылка);
	Реквизиты.Вставить("Период", Выборка.Период);
	Реквизиты.Вставить("ПериодБазы", Выборка.ПериодБазы);
	Реквизиты.Вставить("Организация", Выборка.Организация);
	Реквизиты.Вставить("ВыручкаНДС", Выборка.ВыручкаНДС);
	Реквизиты.Вставить("ВыручкаНеНДС", Выборка.ВыручкаНеНДС);
	Реквизиты.Вставить("ВыручкаЕНВД", Выборка.ВыручкаЕНВД);
	Реквизиты.Вставить("ВыручкаНДС0", Выборка.ВыручкаНДС0);
	Реквизиты.Вставить("ВыручкаНДС0СырьевыеТоварыУслуги", Выборка.ВыручкаНДС0СырьевыеТоварыУслуги);
	Реквизиты.Вставить("ВыручкаНДС0НесырьевыеТовары", Выборка.ВыручкаНДС0НесырьевыеТовары);
	Реквизиты.Вставить("СтатьяРасходовНеНДС", Выборка.СтатьяРасходовНеНДС);
	Реквизиты.Вставить("АналитикаРасходовНеНДС", Выборка.АналитикаРасходовНеНДС);
	Реквизиты.Вставить("СтатьяРасходовЕНВД", Выборка.СтатьяРасходовЕНВД);
	Реквизиты.Вставить("АналитикаРасходовЕНВД", Выборка.АналитикаРасходовЕНВД);
	Реквизиты.Вставить("СписатьНДСПоРасходамАктивамНаСтатьиОтражения", Выборка.СписатьНДСПоРасходамАктивамНаСтатьиОтражения);
	Реквизиты.Вставить("ПрименитьПравило5Процентов", Выборка.ПрименитьПравило5Процентов);
	
	ПериодОкончание = КонецКвартала(Выборка.Период);
	Реквизиты.Вставить("ВыборкаПоКварталу", (Месяц(Выборка.Период)%3=0));
	Реквизиты.Вставить("ПериодНачало",    Выборка.НачалоПериода);
	Реквизиты.Вставить("ПериодОкончание", ПериодОкончание);
	
	СформироватьДвижения(Реквизиты, ДополнительныеСвойства);
	
КонецПроцедуры

Функция ДанныеДляРаспределения(Реквизиты, ДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ВыборкаПоКварталу",  Реквизиты.ВыборкаПоКварталу);
	Запрос.УстановитьПараметр("Период",             Реквизиты.Период);
	Запрос.УстановитьПараметр("ПериодБазы",         Реквизиты.ПериодБазы);
	Запрос.УстановитьПараметр("ПериодНачало",       Реквизиты.ПериодНачало);
	Запрос.УстановитьПараметр("ПериодОкончание",    Реквизиты.ПериодОкончание);
	Запрос.УстановитьПараметр("Организация",        Реквизиты.Организация);
	Запрос.УстановитьПараметр("Граница",            Новый Граница(Реквизиты.ПериодОкончание, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДокументСсылка",     Реквизиты.Ссылка);
	
	Если ДополнительныеСвойства.Свойство("МенеджерВТКэшейРегистров") Тогда
		
		// Вызвано из партионного учета версии 2.2.
		// Необходимо скорректировать остатки на конец периода:
		// вычесть из них "расчетные" движения, хранящиеся в ИБ (результаты прошлого расчета партий)
		// и добавить "расчетные" движения, хранящиеся во временной таблице (результаты выполняющего сейчас расчета партий).
		
		Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВТКэшейРегистров; // содержит ВТКэшПартииПрочихРасходов
		
		// Период расчета партий (месяц) может отличаться от периода выборки данных для распределения (месяц или квартал).
		Запрос.УстановитьПараметр("НачалоПериодаРасчетаПартий", НачалоМесяца(ДополнительныеСвойства.ПериодРасчетаПартий));
		Запрос.УстановитьПараметр("КонецПериодаРасчетаПартий",  КонецМесяца(ДополнительныеСвойства.ПериодРасчетаПартий));
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ТОГДА -1
		|		ИНАЧЕ 1
		|	КОНЕЦ 						  КАК Знак,
		|	Т.Организация                 КАК Организация,
		|	Т.Подразделение               КАК Подразделение,
		|	Т.СтатьяРасходов              КАК СтатьяРасходов,
		|	Т.АналитикаРасходов           КАК АналитикаРасходов,
		|	Т.АналитикаАктивовПассивов    КАК АналитикаАктивовПассивов,
		|	Т.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
		|	Т.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
		|	Т.НаправлениеДеятельности     КАК НаправлениеДеятельности,
		|	Т.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
		|	Т.ВидДеятельностиНДС          КАК ВидДеятельностиНДС,
		|	Т.СтоимостьРегл			  	  КАК СтоимостьРегл,
		|	Т.НДСРегл			  	  	  КАК НДСРегл,
		|	Т.НДСУпр			  	  	  КАК НДСУпр
		|ПОМЕСТИТЬ ВТКорректировкаОстатковПартииПрочихРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК Т
		|ГДЕ
		|	Т.Период МЕЖДУ &НачалоПериодаРасчетаПартий И &КонецПериодаРасчетаПартий
		|	И Т.Организация = &Организация
		|	И Т.Активность
		|	И Т.РасчетПартий
		|	И Т.Регистратор <> &ДокументСсылка
		|	И (Т.СтоимостьРегл <> 0 
		|		ИЛИ Т.НДСРегл <> 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
		|		ТОГДА 1
		|		ИНАЧЕ -1
		|	КОНЕЦ 						  КАК Знак,
		|	Т.Организация                 КАК Организация,
		|	Т.Подразделение               КАК Подразделение,
		|	Т.СтатьяРасходов              КАК СтатьяРасходов,
		|	Т.АналитикаРасходов           КАК АналитикаРасходов,
		|	Т.АналитикаАктивовПассивов    КАК АналитикаАктивовПассивов,
		|	Т.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
		|	Т.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
		|	Т.НаправлениеДеятельности     КАК НаправлениеДеятельности,
		|	Т.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
		|	Т.ВидДеятельностиНДС          КАК ВидДеятельностиНДС,
		|	Т.СтоимостьРегл			  	  КАК СтоимостьРегл,
		|	Т.НДСРегл			  	  	  КАК НДСРегл,
		|	Т.НДСУпр			  	  	  КАК НДСУпр
		|ИЗ
		|	ВТКэшПартииПрочихРасходов КАК Т
		|ГДЕ
		|	Т.Период МЕЖДУ &НачалоПериодаРасчетаПартий И &КонецПериодаРасчетаПартий
		|	И Т.Организация = &Организация
		|	И Т.РасчетПартий
		|	И Т.Регистратор <> &ДокументСсылка
		|	И (Т.СтоимостьРегл <> 0 
		|		ИЛИ Т.НДСРегл <> 0)";
		
	Иначе
		
		// Вызвано не из партионного учета версии 2.2.
		// Корректировать остатки на конец периода не надо - "расчетные" движения хранятся только в ИБ.
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	0							  КАК Знак,
		|	Т.Организация                 КАК Организация,
		|	Т.Подразделение               КАК Подразделение,
		|	Т.СтатьяРасходов              КАК СтатьяРасходов,
		|	Т.АналитикаРасходов           КАК АналитикаРасходов,
		|	Т.АналитикаАктивовПассивов    КАК АналитикаАктивовПассивов,
		|	Т.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
		|	Т.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
		|	Т.НаправлениеДеятельности     КАК НаправлениеДеятельности,
		|	Т.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
		|	Т.ВидДеятельностиНДС          КАК ВидДеятельностиНДС,
		|	Т.СтоимостьРегл			  	  КАК СтоимостьРегл,
		|	Т.НДСРегл			  	  	  КАК НДСРегл,
		|	Т.НДСУпр			  	  	  КАК НДСУпр
		|ПОМЕСТИТЬ ВТКорректировкаОстатковПартииПрочихРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК Т";
		
	КонецЕсли;
	
	Запрос.Выполнить(); // формируется ВТКорректировкаОстатковПартииПрочихРасходов
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(ЕСТЬNULL(ДанныеОснованияКорректировки.ДатаРегистратора, &ПериодБазы), КВАРТАЛ)  КАК ПериодБазы,
	|	КорректировкаПриобретения.ДокументОснование  КАК ОснованиеКорректировки,
	|	ПартииПрочихРасходов.Организация  КАК Организация,
	|	ПартииПрочихРасходов.Подразделение  КАК Подразделение,
	|	ПартииПрочихРасходов.СтатьяРасходов  КАК СтатьяРасходов,
	|	ПартииПрочихРасходов.АналитикаРасходов  КАК АналитикаРасходов,
	|	ПартииПрочихРасходов.АналитикаАктивовПассивов  КАК АналитикаАктивовПассивов,
	|	ПартииПрочихРасходов.ДокументПоступленияРасходов  КАК ДокументПоступленияРасходов,
	|	ПартииПрочихРасходов.АналитикаУчетаПартий  КАК АналитикаУчетаПартий,
	|	ПартииПрочихРасходов.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ПартииПрочихРасходов.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
	|	ПартииПрочихРасходов.ВидДеятельностиНДС  КАК ВидДеятельностиНДС
	|ПОМЕСТИТЬ ПартииПрочихРасходовКорректировка
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|	ПО
	|		ПартииПрочихРасходов.Регистратор = КорректировкаПриобретения.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеОснованияКорректировки
	|	ПО
	|		КорректировкаПриобретения.Организация = ДанныеОснованияКорректировки.Организация
	|		И КорректировкаПриобретения.ДокументОснование = ДанныеОснованияКорректировки.Документ
	|ГДЕ
	|	ПартииПрочихРасходов.Период МЕЖДУ &ПериодНачало И &ПериодОкончание 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступленияРасходов
	|;
	|
	|//////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация                   КАК Организация,
	|	Т.Подразделение                 КАК Подразделение,
	|	Т.СтатьяРасходов                КАК СтатьяРасходов,
	|	Т.АналитикаРасходов             КАК АналитикаРасходов,
	|	Т.АналитикаАктивовПассивов      КАК АналитикаАктивовПассивов,
	|	Т.ДокументПоступленияРасходов   КАК ДокументПоступленияРасходов,
	|	Т.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	Т.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	Т.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	СУММА(Т.Знак * Т.СтоимостьРегл) КАК СтоимостьРегл,
	|	СУММА(Т.Знак * Т.НДСРегл)       КАК НДСРегл,
	|	СУММА(Т.Знак * Т.НДСУпр)        КАК НДСУпр
	|ПОМЕСТИТЬ ПартииПрочихРасходовОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		1 							  КАК Знак,
	|		Т.Организация                 КАК Организация,
	|		Т.Подразделение               КАК Подразделение,
	|		Т.СтатьяРасходов              КАК СтатьяРасходов,
	|		Т.АналитикаРасходов           КАК АналитикаРасходов,
	|		Т.АналитикаАктивовПассивов    КАК АналитикаАктивовПассивов,
	|		Т.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|		Т.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
	|		Т.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|		Т.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидДеятельностиНДС          КАК ВидДеятельностиНДС,
	|		Т.СтоимостьРеглОстаток        КАК СтоимостьРегл,
	|		Т.НДСРеглОстаток              КАК НДСРегл,
	|		Т.НДСУпрОстаток               КАК НДСУпр
	|	ИЗ
	|		РегистрНакопления.ПартииПрочихРасходов.Остатки(&Граница, Организация = &Организация) КАК Т
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		-1 							  КАК Знак,
	|		Т.Организация                 КАК Организация,
	|		Т.Подразделение               КАК Подразделение,
	|		Т.СтатьяРасходов              КАК СтатьяРасходов,
	|		Т.АналитикаРасходов           КАК АналитикаРасходов,
	|		Т.АналитикаАктивовПассивов    КАК АналитикаАктивовПассивов,
	|		Т.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|		Т.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
	|		Т.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|		Т.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидДеятельностиНДС          КАК ВидДеятельностиНДС,
	|		Т.СтоимостьРеглОборот		  КАК СтоимостьРегл,
	|		Т.НДСРеглОборот			  	  КАК НДСРегл,
	|		Т.НДСУпрОборот                КАК НДСУпр
	|	ИЗ
	|		РегистрНакопления.ПартииПрочихРасходов.Обороты(&ПериодНачало, &ПериодОкончание,
	|			Регистратор, Организация = &Организация) КАК Т
	|	ГДЕ
	|		Т.Регистратор = &ДокументСсылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Знак						  КАК Знак,
	|		Т.Организация                 КАК Организация,
	|		Т.Подразделение               КАК Подразделение,
	|		Т.СтатьяРасходов              КАК СтатьяРасходов,
	|		Т.АналитикаРасходов           КАК АналитикаРасходов,
	|		Т.АналитикаАктивовПассивов    КАК АналитикаАктивовПассивов,
	|		Т.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|		Т.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
	|		Т.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|		Т.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидДеятельностиНДС          КАК ВидДеятельностиНДС,
	|		Т.СтоимостьРегл		  		  КАК СтоимостьРегл,
	|		Т.НДСРегл			  	  	  КАК НДСРегл,
	|		Т.НДСУпр			  	  	  КАК НДСУпр
	|	ИЗ
	|		ВТКорректировкаОстатковПартииПрочихРасходов КАК Т
	|	
	|	) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	Т.АналитикаАктивовПассивов,
	|	Т.ДокументПоступленияРасходов,
	|	Т.АналитикаУчетаПартий,
	|	Т.НаправлениеДеятельности,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(Т.Знак * Т.СтоимостьРегл) <> 0 
	|	ИЛИ СУММА(Т.Знак * Т.НДСРегл) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументПоступленияРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация                                   КАК Организация,
	|	ТаблицаОстатков.Подразделение                                 КАК Подразделение,
	|	ТаблицаОстатков.НаправлениеДеятельности                       КАК НаправлениеДеятельности,
	|	ТаблицаОстатков.СтатьяРасходов                                КАК СтатьяРасходов,
	|	ТаблицаОстатков.АналитикаРасходов                             КАК АналитикаРасходов,
	|	ТаблицаОстатков.АналитикаАктивовПассивов                      КАК АналитикаАктивовПассивов,
	|	ТаблицаОстатков.ДокументПоступленияРасходов                   КАК ДокументПоступленияРасходов,
	|	ТаблицаОстатков.АналитикаУчетаПартий                          КАК АналитикаУчетаПартий,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры                    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаОстатков.ВидДеятельностиНДС                            КАК ВидДеятельностиНДС,
	|	АналитикаПартий.Контрагент                                    КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТаблицаОстатков.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаОстатков.ВидДеятельностиНДС // Версия ПартионногоУчета 2.2
	|		ИНАЧЕ АналитикаПартий.НалогообложениеНДС     // Версия ПартионногоУчета 2.1             
	|	КОНЕЦ                                                         КАК НалогообложениеНДСПартии,
	|	АналитикаПартий.СтавкаНДС                                     КАК СтавкаНДС,
	|	
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, &Период) КАК ДатаПоступленияРасходов,
	|	
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл               КАК ВариантРаспределенияРасходовСтатьи,
	|	СтатьиРасходов.ВидЦенностиНДС                                 КАК ВидЦенностиНДССтатьиРасходов,
	|	СтатьиРасходов.ПринятиеКналоговомуУчету                       КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	
	|	ВЫБОР
	|		КОГДА АналитикаПартий.ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|			ТОГДА АналитикаПартий.ВидЦенности        // Версия ПартионногоУчета 2.2
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаОстатков.ДокументПоступленияРасходов) = ТИП(Документ.ТаможеннаяДекларацияИмпорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|		КОГДА АналитикаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЕСТЬNULL(ГруппыФинансовогоУчетаНоменклатуры.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		КОГДА НЕ СтатьиРасходов.ВидЦенностиНДС ЕСТЬ NULL
	|			ТОГДА СтатьиРасходов.ВидЦенностиНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|	КОНЕЦ                                                      КАК ВидЦенностиНДС,
	|	
	|	ТаблицаОстатков.СтоимостьРегл                              КАК СтоимостьРегл,
	|	ТаблицаОстатков.НДСРегл                                    КАК НДСРегл,
	|	ТаблицаОстатков.НДСУпр                                     КАК НДСУпр
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ПартииПрочихРасходовОстатки КАК ТаблицаОстатков
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ТаблицаОстатков.Организация =  ДанныеПервичныхДокументов.Организация
	|		И ТаблицаОстатков.ДокументПоступленияРасходов = ДанныеПервичныхДокументов.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.КлючиАналитикиУчетаПартий КАК АналитикаПартий
	|	ПО 
	|		ТаблицаОстатков.АналитикаУчетаПартий = АналитикаПартий.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|	ПО 
	|		ТаблицаОстатков.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФинансовогоУчетаНоменклатуры
	|	ПО
	|		АналитикаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета = ГруппыФинансовогоУчетаНоменклатуры.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТаблицаОстатков.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступленияРасходов
	|;
	|
	|///////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПартииПрочихРасходовОстатки
	|;
	|";
	
	Запрос.Выполнить(); // формируются таблицы ПартииПрочихРасходовКорректировка, ТаблицаОстатков
	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОстатков.Организация                      КАК Организация,
	|	ТаблицаОстатков.Подразделение                    КАК Подразделение,
	|	ТаблицаОстатков.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|	ТаблицаОстатков.СтатьяРасходов                   КАК СтатьяРасходов,
	|	ТаблицаОстатков.АналитикаРасходов                КАК АналитикаРасходов,
	|	ТаблицаОстатков.АналитикаАктивовПассивов         КАК АналитикаАктивовПассивов,
	|	ТаблицаОстатков.ДокументПоступленияРасходов      КАК ДокументПоступленияРасходов,
	|	ТаблицаОстатков.АналитикаУчетаПартий             КАК АналитикаУчетаПартий,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры       КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаОстатков.ВидДеятельностиНДС               КАК ВидДеятельностиНДС,                                            
	|
	|	&ОрганизацияПолучатель                           КАК ОрганизацияПолучатель,
	|	
	|	ТаблицаОстатков.Контрагент                       КАК Контрагент,
	|	ТаблицаОстатков.НалогообложениеНДСПартии         КАК НалогообложениеНДСПартии,
	|	ТаблицаОстатков.СтавкаНДС                        КАК СтавкаНДС,
	|	
	|	ТаблицаОстатков.ДатаПоступленияРасходов          КАК ДатаПоступленияРасходов,
	|	
	|	ИСТИНА                                           КАК РаспределятьНДС,
	|
	|	ЕСТЬNULL(ПартииПрочихРасходовКорректировка.ПериодБазы, &ПериодБазы) КАК ПериодБазы,
	|	ЕСТЬNULL(ПартииПрочихРасходовКорректировка.ОснованиеКорректировки, НЕОПРЕДЕЛЕНО) КАК ОснованиеКорректировки,
	|
	|	НЕОПРЕДЕЛЕНО                                     КАК НовоеНалогообложениеНДС,
	|	
	|	ВЫБОР КОГДА ТаблицаОстатков.ВидЦенностиНДССтатьиРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства)
	|		ТОГДА ""ОбъектСтроительства""
	|	ИНАЧЕ """"
	|	КОНЕЦ                                 			 КАК ВнеоборотныйАктив,
	|	ЛОЖЬ                                             КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО                                     КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовНУ,
	|	ТаблицаОстатков.ЭтоПринимаемаяСтатьяРасходовНУ   КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходовНУ,
	|	
	|	ТаблицаОстатков.ВидЦенностиНДС                   КАК ВидЦенностиНДС,
	|	
	|	ТаблицаОстатков.СтоимостьРегл                    КАК СтоимостьРегл,
	|	ТаблицаОстатков.НДСРегл                          КАК НДСРегл,
	|	ТаблицаОстатков.НДСУпр                           КАК НДСУпр
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПартииПрочихРасходовКорректировка КАК ПартииПрочихРасходовКорректировка
	|	ПО
	|		ТаблицаОстатков.ДокументПоступленияРасходов = ПартииПрочихРасходовКорректировка.ДокументПоступленияРасходов
	|		И ТаблицаОстатков.Организация = ПартииПрочихРасходовКорректировка.Организация  
	|		И ТаблицаОстатков.Организация = ПартииПрочихРасходовКорректировка.Организация  
	|		И ТаблицаОстатков.Подразделение = ПартииПрочихРасходовКорректировка.Подразделение
	|		И ТаблицаОстатков.СтатьяРасходов = ПартииПрочихРасходовКорректировка.СтатьяРасходов
	|		И ТаблицаОстатков.АналитикаРасходов = ПартииПрочихРасходовКорректировка.АналитикаРасходов
	|		И ТаблицаОстатков.АналитикаАктивовПассивов = ПартииПрочихРасходовКорректировка.АналитикаАктивовПассивов
	|		И ТаблицаОстатков.АналитикаУчетаПартий = ПартииПрочихРасходовКорректировка.АналитикаУчетаПартий
	|		И ТаблицаОстатков.НаправлениеДеятельности = ПартииПрочихРасходовКорректировка.НаправлениеДеятельности
	|		И ТаблицаОстатков.АналитикаУчетаНоменклатуры = ПартииПрочихРасходовКорректировка.АналитикаУчетаНоменклатуры
	|		И ТаблицаОстатков.ВидДеятельностиНДС = ПартииПрочихРасходовКорректировка.ВидДеятельностиНДС
	|	
	|ГДЕ
	|	(ТаблицаОстатков.ВариантРаспределенияРасходовСтатьи В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы))
	|		ИЛИ (ТаблицаОстатков.НалогообложениеНДСПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|			))
	|";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ОрганизацияПолучатель",
		РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаЗначениеПоляОрганизацияПолучатель("ТаблицаОстатков"));
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	КоличествоЭлементов = РезультатыЗапроса.Количество();
	
	Результат = Новый Структура;
	
	Результат.Вставить("ПартииПрочихРасходов", РезультатыЗапроса[0].Выгрузить());

	// Уничтожим все сформированные временные таблицы.
	// Если этого не сделать, то при вызове этого метода из партионного учета версии 2.2
	// возможно возникновение ошибки вида "Временная таблица уже существует".
	
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ВТКорректировкаОстатковПартииПрочихРасходов
	|;
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|УНИЧТОЖИТЬ ПартииПрочихРасходовКорректировка
	|";
	
	Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьДвижения(Реквизиты, ДополнительныеСвойства)
	
	ТаблицыДляДвижений     = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	ДанныеДляРаспределения = ДанныеДляРаспределения(Реквизиты, ДополнительныеСвойства);
	
	РезультатРаспределения = РаспределитьПартииПрочихРасходовПоБазе(ДанныеДляРаспределения.ПартииПрочихРасходов, Реквизиты);
	
	ТаблицыДляДвижений.Вставить("ТаблицаПартииПрочихРасходов",  ТаблицаПартииПрочихРасходов(РезультатРаспределения, Реквизиты));
	ТаблицаПрочиеРасходы = ТаблицаПрочиеРасходы(РезультатРаспределения, Реквизиты);
	ТаблицыДляДвижений.Вставить("ТаблицаПрочиеРасходы", ТаблицаПрочиеРасходы);

КонецФункции

Функция РаспределитьПартииПрочихРасходовПоБазе(ПартииПрочихРасходов, Реквизиты)
	
	ТипыНалогообложения = Перечисления.ТипыНалогообложенияНДС;
	
	ПартииПрочихРасходовОблагаетсяНДС               = ТаблицаРезультатРаспределения();
	ПартииПрочихРасходовНеОблагаетсяНДС             = ТаблицаРезультатРаспределения();
	ПартииПрочихРасходовОблагаетсяЕНВД              = ТаблицаРезультатРаспределения();
	ПартииПрочихРасходовЭкспорт                     = ТаблицаРезультатРаспределения();
	ПартииПрочихРасходовЭкспортНесырьевыхТоваров    = ТаблицаРезультатРаспределения();
	ПартииПрочихРасходовЭкспортСырьевыхТоваровУслуг = ТаблицаРезультатРаспределения();
	
	
	ТаблицыРаспределения = Новый Соответствие;
	ТаблицыРаспределения.Вставить(ТипыНалогообложения.ПродажаОблагаетсяНДС,        ПартииПрочихРасходовОблагаетсяНДС);
	ТаблицыРаспределения.Вставить(ТипыНалогообложения.ПродажаНеОблагаетсяНДС,      ПартииПрочихРасходовНеОблагаетсяНДС);
	ТаблицыРаспределения.Вставить(ТипыНалогообложения.ПродажаОблагаетсяЕНВД,       ПартииПрочихРасходовОблагаетсяЕНВД);
	ТаблицыРаспределения.Вставить(ТипыНалогообложения.ПродажаНаЭкспорт,            ПартииПрочихРасходовЭкспорт);
	ТаблицыРаспределения.Вставить(ТипыНалогообложения.ЭкспортНесырьевыхТоваров,    ПартииПрочихРасходовЭкспортНесырьевыхТоваров);
	ТаблицыРаспределения.Вставить(ТипыНалогообложения.ЭкспортСырьевыхТоваровУслуг, ПартииПрочихРасходовЭкспортСырьевыхТоваровУслуг);
	
	БазаРаспределения = БазаРаспределения(ПартииПрочихРасходов, Реквизиты);
	
	Для каждого СтрокаПрочихРасходов Из ПартииПрочихРасходов Цикл
		
		УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту = УчетНДСУТ.УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту(СтрокаПрочихРасходов.ДатаПоступленияРасходов);
		
		Если СтрокаПрочихРасходов.РаспределятьНДС Тогда
			
			БазаПериода = БазаРаспределения.Найти(СтрокаПрочихРасходов.ПериодБазы, "ПериодБазы");
			
			БараРаспределенияПериода = Новый Соответствие;
			БараРаспределенияПериода.Вставить(ТипыНалогообложения.ПродажаОблагаетсяНДС,   БазаПериода.НДС);
			БараРаспределенияПериода.Вставить(ТипыНалогообложения.ПродажаНеОблагаетсяНДС, БазаПериода.НеНДС);
			БараРаспределенияПериода.Вставить(ТипыНалогообложения.ПродажаОблагаетсяЕНВД,  БазаПериода.ЕНВД);
			Если УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту Тогда
				// Партия поступила после 01.07.2016 - действует упрощенный порядок вычета НДС по несырьевому экспорт
				БараРаспределенияПериода.Вставить(ТипыНалогообложения.ПродажаНаЭкспорт, 0);
				БараРаспределенияПериода.Вставить(ТипыНалогообложения.ЭкспортНесырьевыхТоваров,    БазаПериода.НДС0НесырьевыеТовары);
				БараРаспределенияПериода.Вставить(ТипыНалогообложения.ЭкспортСырьевыхТоваровУслуг, БазаПериода.НДС0СырьевыеТоварыУслуги);
			Иначе
				// Партия поступила после 01.07.2016 - действует старый порядок вычета НДС по экспорту
				БараРаспределенияПериода.Вставить(ТипыНалогообложения.ПродажаНаЭкспорт, БазаПериода.НДС0);
				БараРаспределенияПериода.Вставить(ТипыНалогообложения.ЭкспортНесырьевыхТоваров,    0);
				БараРаспределенияПериода.Вставить(ТипыНалогообложения.ЭкспортСырьевыхТоваровУслуг, 0);
			КонецЕсли;
			
			Коэффициенты = Новый Массив;
			Для каждого КлючИЗначение Из БараРаспределенияПериода Цикл
				Коэффициенты.Добавить(КлючИЗначение.Значение);
			КонецЦикла;
			
			РаспределениеСтоимостьРегл = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаПрочихРасходов.СтоимостьРегл, Коэффициенты); 
			РаспределениеНДСРегл = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаПрочихРасходов.НДСРегл, Коэффициенты);
			РаспределениеНДСУпр = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаПрочихРасходов.НДСУпр, Коэффициенты);
			
			Индекс = 0;
			Для каждого КлючИЗначение Из ТаблицыРаспределения Цикл
				
				Налогообложение = КлючИЗначение.Ключ;
				Таблица = КлючИЗначение.Значение;
				
				СтоимостьРегл = ?(РаспределениеСтоимостьРегл <> Неопределено, РаспределениеСтоимостьРегл[Индекс], 0);
				НДСРегл       = ?(РаспределениеНДСРегл       <> Неопределено, РаспределениеНДСРегл[Индекс], 0);
				НДСУпр        = ?(РаспределениеНДСУпр       <> Неопределено, РаспределениеНДСУпр[Индекс], 0);
				
				Индекс = Индекс + 1;
				Если СтоимостьРегл = 0 И НДСРегл = 0 И НДСУпр = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = Таблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПрочихРасходов, , "СтоимостьРегл, НДСРегл");
				НоваяСтрока.СтоимостьРегл = СтоимостьРегл;
				НоваяСтрока.НДСРегл       = НДСРегл;
				НоваяСтрока.НДСУпр        = НДСУпр;
				
				Если ЗначениеЗаполнено(СтрокаПрочихРасходов.ВнеоборотныйАктив) Тогда
					Продолжить;
				КонецЕсли;
				
				Если Налогообложение = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
					Если НЕ БазаПериода.СписатьНДСПоРасходамАктивамНаСтатьиОтражения 
							ИЛИ НоваяСтрока.СтатьяРасходов = Неопределено Тогда
						НоваяСтрока.СтатьяОтраженияРасходов = БазаПериода.СтатьяРасходовНеНДС;
						НоваяСтрока.АналитикаОтраженияРасходов = БазаПериода.АналитикаРасходовНеНДС;
						НоваяСтрока.СтатьяРасходовНУ = БазаПериода.СтатьяРасходовНеНДС;
						НоваяСтрока.ЭтоПринимаемаяСтатьяРасходовНУ = БазаПериода.СтатьяРасходовНеНДС_ПринимаетсяКНУ;
					КонецЕсли;
				ИначеЕсли Налогообложение = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
					Если НЕ БазаПериода.СписатьНДСПоРасходамАктивамНаСтатьиОтражения 
							ИЛИ НоваяСтрока.СтатьяРасходов = Неопределено Тогда
						НоваяСтрока.СтатьяОтраженияРасходов = БазаПериода.СтатьяРасходовЕНВД;
						НоваяСтрока.АналитикаОтраженияРасходов = БазаПериода.АналитикаРасходовЕНВД;
						НоваяСтрока.СтатьяРасходовНУ = БазаПериода.СтатьяРасходовЕНВД;
						НоваяСтрока.ЭтоПринимаемаяСтатьяРасходовНУ = БазаПериода.СтатьяРасходовЕНВД_ПринимаетсяКНУ;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		Иначе
			
			Таблица = ТаблицыРаспределения[СтрокаПрочихРасходов.НовоеНалогообложениеНДС];
			Если Таблица = Неопределено Тогда
				ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Не определено налогообложение по внеоборотнуму активу %1.'"), 
					СтрокаПрочихРасходов.АналитикаРасходов);
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(Таблица.Добавить(), СтрокаПрочихРасходов);
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Если 
	// - распределение выполняется после 01.07.2016
	// - партия поступила ранее 01.07.2016, 
	// то распределение также необходимо выполнить на документы несыерьвого экспорта.
	РаспределятьНаВесьЭкспорт = УчетНДСУТ.УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту(Реквизиты.ПериодБазы);
	РаспределитьПартииПрочихРасходовЭкспортПоДокументам(ПартииПрочихРасходовЭкспорт, Реквизиты, РаспределятьНаВесьЭкспорт);
	
	РаспределитьПартииПрочихРасходовЭкспортПоДокументам(ПартииПрочихРасходовЭкспортСырьевыхТоваровУслуг, Реквизиты, Ложь);
	
	Для Каждого КлючИЗначение Из ТаблицыРаспределения Цикл
		Налогообложение = КлючИЗначение.Ключ;
		Таблица = КлючИЗначение.Значение;
		Таблица.ЗаполнитьЗначения(Налогообложение, "НалогообложениеНДС");
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("ПартииПрочихРасходовОблагаетсяНДС",               ПартииПрочихРасходовОблагаетсяНДС);
	Результат.Вставить("ПартииПрочихРасходовНеОблагаетсяНДС",             ПартииПрочихРасходовНеОблагаетсяНДС);
	Результат.Вставить("ПартииПрочихРасходовОблагаетсяЕНВД",              ПартииПрочихРасходовОблагаетсяЕНВД);
	Результат.Вставить("ПартииПрочихРасходовЭкспорт",                     ПартииПрочихРасходовЭкспорт);
	Результат.Вставить("ПартииПрочихРасходовЭкспортНесырьевыхТоваров",    ПартииПрочихРасходовЭкспортНесырьевыхТоваров);
	Результат.Вставить("ПартииПрочихРасходовЭкспортСырьевыхТоваровУслуг", ПартииПрочихРасходовЭкспортСырьевыхТоваровУслуг);
	
	Возврат Результат;
	
КонецФункции

Процедура РаспределитьПартииПрочихРасходовЭкспортПоДокументам(ПартииПрочихРасходовЭкспорт, Реквизиты, РаспределятьНаВесьЭкспорт)
	
	Если ПартииПрочихРасходовЭкспорт.Итог("НДСРегл") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ИменаКолонок = УниверсальныеМеханизмыПартийИСебестоимости.ПолучитьИменаКолонокСтрокой(ПартииПрочихРасходовЭкспорт);
	УниверсальныеМеханизмыПартийИСебестоимости.ПоместитьТаблицуЗначенийВоВременнуюТаблицу(
		МенеджерВременныхТаблиц, "ПартииПрочихРасходовЭкспорт", ПартииПрочихРасходовЭкспорт, ИменаКолонок);
		
	ПартииПрочихРасходовЭкспорт.Очистить();
	
	РаспределитьПартииПрочихРасходовЭкспортПоДокументамТекущегоПериода(
		ПартииПрочихРасходовЭкспорт, 
		Реквизиты, 
		МенеджерВременныхТаблиц, 
		РаспределятьНаВесьЭкспорт);
		
	РаспределитьПартииПрочихРасходовЭкспортПоДокументамПрошлыхПериодов(
		ПартииПрочихРасходовЭкспорт, 
		Реквизиты, 
		МенеджерВременныхТаблиц);
	
КонецПроцедуры

Процедура РаспределитьПартииПрочихРасходовЭкспортПоДокументамТекущегоПериода(ПартииПрочихРасходовЭкспорт, Реквизиты, МенеджерВременныхТаблиц, РаспределятьНаВесьЭкспорт)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументыЭкспорт.Документ             КАК Документ,
	|	ДокументыЭкспорт.СуммаВыручки         КАК СуммаНесырьевыеТовары,
	|	ДокументыЭкспорт.КорректировкаВыручки КАК КорректировкаНесырьевыеТовары
	|ПОМЕСТИТЬ ДокументыЭкспортНесырьевыхТоваров
	|ИЗ
	|	&ДокументыЭкспорт КАК ДокументыЭкспорт
	|ГДЕ
	|	ДокументыЭкспорт.СуммаВыручки > 0
	|;
	|
	|/////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	База.Дата КАК Дата,
	|	База.Документ КАК Документ,
	|	СУММА(База.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументыЭкспорт.Документ.Дата             КАК Дата,
	|		ДокументыЭкспорт.Документ                  КАК Документ,
	|		(ДокументыЭкспорт.СуммаВыручки 
	|			+ ДокументыЭкспорт.КорректировкаВыручки)  КАК Сумма
	|	ИЗ
	|		Документ.РаспределениеНДС.ДокументыЭкспорт КАК ДокументыЭкспорт
	|	ГДЕ
	|		ДокументыЭкспорт.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДокументыЭкспорт.Документ.Дата КАК Дата,
	|		ДокументыЭкспорт.Документ      КАК Документ,
	|		(ДокументыЭкспорт.СуммаНесырьевыеТовары 
	|			+ ДокументыЭкспорт.КорректировкаНесырьевыеТовары) КАК Сумма
	|	ИЗ
	|		ДокументыЭкспортНесырьевыхТоваров КАК ДокументыЭкспорт) База
	|
	|СГРУППИРОВАТЬ ПО
	|	База.Дата,
	|	База.Документ
	|
	|ИМЕЮЩИЕ
	|	СУММА(База.Сумма) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|;
	|
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ПартииПрочихРасходовЭкспорт КАК ПартииПрочихРасходовЭкспорт
	|ГДЕ
	|	ПартииПрочихРасходовЭкспорт.ПериодБазы = &ПериодБазы
	|	И ПартииПрочихРасходовЭкспорт.НДСРегл >= 0
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ПартииПрочихРасходовЭкспорт.ДатаПоступленияРасходов
	|;
	|
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ПартииПрочихРасходовЭкспорт КАК ПартииПрочихРасходовЭкспорт
	|ГДЕ
	|	ПартииПрочихРасходовЭкспорт.ПериодБазы = &ПериодБазы
	|	И ПартииПрочихРасходовЭкспорт.НДСРегл < 0
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ПартииПрочихРасходовЭкспорт.ДатаПоступленияРасходов
	|";
	
	Запрос.УстановитьПараметр("ПериодБазы", Реквизиты.ПериодБазы);
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Если РаспределятьНаВесьЭкспорт Тогда
		База = ПолучитьБазуРаспределения(Реквизиты.ПериодБазы, Реквизиты.ПериодНачало, Реквизиты.Организация, Истина);
		Запрос.УстановитьПараметр("ДокументыЭкспорт", База.ДокументыЭкспорт);
	Иначе
		ДокументыЭкспорт = Новый ТаблицаЗначений;
		ДокументыЭкспорт.Колонки.Добавить("Документ", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
		ДокументыЭкспорт.Колонки.Добавить("СуммаВыручки", Новый ОписаниеТипов("Число"));
		ДокументыЭкспорт.Колонки.Добавить("КорректировкаВыручки", Новый ОписаниеТипов("Число"));
		Запрос.УстановитьПараметр("ДокументыЭкспорт", ДокументыЭкспорт);
	КонецЕсли;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ДокументыРеализации                         = Результат[Результат.Количество() - 3].Выгрузить();
	ДокументыРеализации.Колонки.Добавить("НДС");
	
	// Положительные и отрицательные остатки распределим отдельно.
	ТаблицыДляРаспределения = Новый Массив;
	ТаблицыДляРаспределения.Добавить(Результат[Результат.Количество() - 2].Выгрузить()); // Положительные суммы по СФ и ИСФ, КСФ
	ТаблицыДляРаспределения.Добавить(Результат[Результат.Количество() - 1].Выгрузить()); // Отрицательные суммы по КСФ
	
	Для каждого ПартииПрочихРасходовЭкспортДляРаспределения Из ТаблицыДляРаспределения Цикл
	
		Если ПартииПрочихРасходовЭкспортДляРаспределения.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если ДокументыРеализации.Количество() = 0 Тогда
			// Нет документов для распределения, вернет таблицу как есть
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПартииПрочихРасходовЭкспортДляРаспределения, ПартииПрочихРасходовЭкспорт);
			Возврат;
		КонецЕсли;
		
		НДСВсего         = ПартииПрочихРасходовЭкспортДляРаспределения.Итог("НДСРегл");
		Коэффициенты     = ДокументыРеализации.ВыгрузитьКолонку("Сумма");
		НДСПоРеализациям = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(НДСВсего, Коэффициенты); 
		
		ДокументыРеализации.ЗагрузитьКолонку(НДСПоРеализациям, "НДС");
		
		Для каждого СтрокаДокумент Из ДокументыРеализации Цикл
			
			НДСОсталосьРаспределить = СтрокаДокумент.НДС;
			
			РаспределенныеПартии = Новый Массив();
			
			Для каждого ПартияПрочихРасходов Из ПартииПрочихРасходовЭкспортДляРаспределения Цикл
				
				Если НДСОсталосьРаспределить = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если ПартияПрочихРасходов.НДСРегл = 0 Тогда
					
					Если ПартияПрочихРасходов.СтоимостьРегл > 0 Тогда
						// Распределять по реализациям не требуется, но остаток по регитстру необходимо закрыть
						НоваяСтрока = ПартииПрочихРасходовЭкспорт.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ПартияПрочихРасходов);
					КонецЕсли;
					
					РаспределенныеПартии.Добавить(ПартияПрочихРасходов);
					
					Продолжить;
					
				КонецЕсли;
				
				Если НДСОсталосьРаспределить < 0 Тогда
					НДСРегл = Макс(НДСОсталосьРаспределить, ПартияПрочихРасходов.НДСРегл);
				Иначе
					НДСРегл = Мин(НДСОсталосьРаспределить, ПартияПрочихРасходов.НДСРегл);
				КонецЕсли;
				 
				СтоимостьРегл = Окр(ПартияПрочихРасходов.СтоимостьРегл * НДСРегл / ПартияПрочихРасходов.НДСРегл, 2);
				НДСУпр =  Окр(ПартияПрочихРасходов.НДСУпр * НДСРегл / ПартияПрочихРасходов.НДСРегл, 2);
				
				НоваяСтрока = ПартииПрочихРасходовЭкспорт.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ПартияПрочихРасходов, , "НДСРегл, СтоимостьРегл");
				
				НоваяСтрока.ДокументРеализации = СтрокаДокумент.Документ;
				
				НоваяСтрока.НДСРегл = НДСРегл;
				НоваяСтрока.СтоимостьРегл = СтоимостьРегл;
				НоваяСтрока.НДСУпр = НДСУпр;
				
				ПартияПрочихРасходов.НДСРегл = ПартияПрочихРасходов.НДСРегл - НДСРегл;
				ПартияПрочихРасходов.СтоимостьРегл = ПартияПрочихРасходов.СтоимостьРегл - СтоимостьРегл;
				ПартияПрочихРасходов.НДСУпр = ПартияПрочихРасходов.НДСУпр - НДСУпр;
				
				НДСОсталосьРаспределить = НДСОсталосьРаспределить - НДСРегл;
				
			КонецЦикла;
			
			Для каждого РаспределеннаяПартия Из РаспределенныеПартии Цикл
				ПартииПрочихРасходовЭкспортДляРаспределения.Удалить(РаспределеннаяПартия);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РаспределитьПартииПрочихРасходовЭкспортПоДокументамПрошлыхПериодов(ПартииПрочихРасходовЭкспорт, Реквизиты, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПартииПрочихРасходовЭкспорт.ПериодБазы                  КАК ПериодБазы,
	|	ПартииПрочихРасходовЭкспорт.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	ПартииПрочихРасходовЭкспорт.ОснованиеКорректировки      КАК ОснованиеКорректировки
	|ПОМЕСТИТЬ ПартииПоДокументамПрошлыхПериодов
	|ИЗ
	|	ПартииПрочихРасходовЭкспорт КАК ПартииПрочихРасходовЭкспорт
	|ГДЕ
	|	ПартииПрочихРасходовЭкспорт.ПериодБазы < &ПериодБазы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодБазы,
	|	ОснованиеКорректировки
	|;
	|
	|ВЫБРАТЬ
	|	ПартииПоДокументамПрошлыхПериодов.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	ПартииПрочихРасходов.ДокументРеализации КАК ДокументРеализации,
	|	ПартииПрочихРасходов.НДСРегл КАК Сумма
	|ИЗ
	|	ПартииПоДокументамПрошлыхПериодов КАК ПартииПоДокументамПрошлыхПериодов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|	ПО
	|		КОНЕЦПЕРИОДА(ПартииПрочихРасходов.Период, МЕСЯЦ) = ПартииПоДокументамПрошлыхПериодов.ПериодБазы
	|		И ПартииПрочихРасходов.Регистратор ССЫЛКА Документ.РаспределениеНДС 
	|		И ПартииПрочихРасходов.ДокументПоступленияРасходов = ПартииПоДокументамПрошлыхПериодов.ОснованиеКорректировки
	|		И ПартииПрочихРасходов.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|;
	|
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ПартииПрочихРасходовЭкспорт КАК ПартииПрочихРасходовЭкспорт
	|ГДЕ
	|	ПартииПрочихРасходовЭкспорт.ПериодБазы < &ПериодБазы
	|";
	
	Запрос.УстановитьПараметр("ПериодБазы", Реквизиты.ПериодБазы);
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ДокументыРеализации                         = Результат[Результат.Количество() - 2].Выгрузить();
	ПартииПрочихРасходовЭкспортДляРаспределения = Результат[Результат.Количество() - 1].Выгрузить();
	
	Если ПартииПрочихРасходовЭкспортДляРаспределения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДокументыРеализации.Индексы.Добавить("ДокументПоступленияРасходов");
	ОтборДокументов = Новый Структура("ДокументПоступленияРасходов");
	
	Для каждого Партия Из ПартииПрочихРасходовЭкспортДляРаспределения Цикл
		
		ЗаполнитьЗначенияСвойств(ОтборДокументов, Партия);
		ДокументыПоПартии = ДокументыРеализации.НайтиСтроки(ОтборДокументов);
		
		Если ДокументыПоПартии.Количество() = 0 Тогда
			// Не удалось найти документы реализации, добавим строку без распределения по документам
			НоваяСтрока = ПартииПрочихРасходовЭкспорт.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Партия); 
			Продолжить;
		КонецЕсли;
		
		МассивКоэффициентов = Новый Массив();
		Для каждого Документ Из ДокументыПоПартии Цикл
			МассивКоэффициентов.Добавить(Документ.Сумма);
		КонецЦикла;
		
		РаспределениеСтоимостьРегл = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(Партия.СтоимостьРегл, МассивКоэффициентов);
		РаспределениеНДСРегл = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(Партия.НДСРегл, МассивКоэффициентов);
		РаспределениеНДСУпр = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(Партия.НДСУпр, МассивКоэффициентов);
			
		Индекс = 0;
		Для каждого Документ Из ДокументыПоПартии Цикл
			
			СтоимостьРегл = ?(РаспределениеСтоимостьРегл <> Неопределено, РаспределениеСтоимостьРегл[Индекс], 0);
			НДСРегл       = ?(РаспределениеНДСРегл       <> Неопределено, РаспределениеНДСРегл[Индекс], 0);
			НДСУпр        = ?(РаспределениеНДСУпр       <> Неопределено, РаспределениеНДСУпр[Индекс], 0);

			НоваяСтрока = ПартииПрочихРасходовЭкспорт.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Партия);
			НоваяСтрока.СтоимостьРегл = СтоимостьРегл;
			НоваяСтрока.НДСРегл = НДСРегл;
			НоваяСтрока.НДСУпр = НДСУпр;
			НоваяСтрока.ДокументРеализации = Документ.ДокументРеализации;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция БазаРаспределения(ПартииПрочихРасходов, Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПериодыБазы.ПериодБазы
	|ПОМЕСТИТЬ ПериодыБазы
	|ИЗ
	|	&ПериодыБазы КАК ПериодыБазы
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыБазы.ПериодБазы,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(РаспределениеНДС.ПрименитьПравило5Процентов, &ПрименитьПравило5Процентов) ТОГДА
	|			ЕСТЬNULL(РаспределениеНДС.ВыручкаНДС,   &ВыручкаНДС)
	|				+ ЕСТЬNULL(РаспределениеНДС.ВыручкаНеНДС, &ВыручкаНеНДС)
	|				+ ЕСТЬNULL(РаспределениеНДС.ВыручкаЕНВД,  &ВыручкаЕНВД)
	|			ИНАЧЕ ЕСТЬNULL(РаспределениеНДС.ВыручкаНДС, &ВыручкаНДС)
	|	КОНЕЦ КАК НДС,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(РаспределениеНДС.ПрименитьПравило5Процентов, &ПрименитьПравило5Процентов)
	|			ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(РаспределениеНДС.ВыручкаНеНДС, &ВыручкаНеНДС)
	|	КОНЕЦ КАК НеНДС,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(РаспределениеНДС.ПрименитьПравило5Процентов, &ПрименитьПравило5Процентов)
	|			ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(РаспределениеНДС.ВыручкаЕНВД, &ВыручкаЕНВД)
	|	КОНЕЦ КАК ЕНВД,
	|	ЕСТЬNULL(РаспределениеНДС.ВыручкаНДС0, &ВыручкаНДС0) КАК НДС0,
	|	ЕСТЬNULL(РаспределениеНДС.ВыручкаНДС0СырьевыеТоварыУслуги, &ВыручкаНДС0СырьевыеТоварыУслуги) КАК НДС0СырьевыеТоварыУслуги,
	|	ЕСТЬNULL(РаспределениеНДС.ВыручкаНДС0НесырьевыеТовары, &ВыручкаНДС0НесырьевыеТовары) КАК НДС0НесырьевыеТовары,
	|	
	|	ЕСТЬNULL(РаспределениеНДС.СписатьНДСПоРасходамАктивамНаСтатьиОтражения, 
	|				&СписатьНДСПоРасходамАктивамНаСтатьиОтражения) КАК СписатьНДСПоРасходамАктивамНаСтатьиОтражения,
	|	ЕСТЬNULL(РаспределениеНДС.СтатьяРасходовНеНДС, 
	|				&СтатьяРасходовНеНДС) КАК СтатьяРасходовНеНДС,
	|	ЕСТЬNULL(РаспределениеНДС.АналитикаРасходовНеНДС, 
	|				&АналитикаРасходовНеНДС) КАК АналитикаРасходовНеНДС,
	|	ЕСТЬNULL(РаспределениеНДС.СтатьяРасходовЕНВД, 
	|				&СтатьяРасходовЕНВД) КАК СтатьяРасходовЕНВД,
	|	ЕСТЬNULL(РаспределениеНДС.АналитикаРасходовЕНВД, 
	|				&АналитикаРасходовЕНВД) КАК АналитикаРасходовЕНВД,
	|	
	|	ВЫРАЗИТЬ(ЕСТЬNULL(РаспределениеНДС.СтатьяРасходовНеНДС, 
	|				&СтатьяРасходовНеНДС) КАК ПланВидовХарактеристик.СтатьиРасходов).ПринятиеКналоговомуУчету КАК СтатьяРасходовНеНДС_ПринимаетсяКНУ,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(РаспределениеНДС.СтатьяРасходовЕНВД, 
	|				&СтатьяРасходовЕНВД) КАК ПланВидовХарактеристик.СтатьиРасходов).ПринятиеКналоговомуУчету КАК СтатьяРасходовЕНВД_ПринимаетсяКНУ
	|ИЗ
	|	ПериодыБазы КАК ПериодыБазы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		ПериодыБазы.ПериодБазы = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И РаспределениеНДС.Организация = &Организация 
	|		И РаспределениеНДС.Проведен
	|";
	
	ПериодыБазы = ПартииПрочихРасходов.Скопировать();
	ПериодыБазы.Свернуть("ПериодБазы");
	
	Запрос.УстановитьПараметр("ПериодыБазы",                     ПериодыБазы);
	Запрос.УстановитьПараметр("Организация",                     Реквизиты.Организация);
	Запрос.УстановитьПараметр("ПрименитьПравило5Процентов",      Реквизиты.ПрименитьПравило5Процентов);
	Запрос.УстановитьПараметр("ВыручкаНДС",                      Реквизиты.ВыручкаНДС);
	Запрос.УстановитьПараметр("ВыручкаНеНДС",                    Реквизиты.ВыручкаНеНДС);
	Запрос.УстановитьПараметр("ВыручкаЕНВД",                     Реквизиты.ВыручкаЕНВД);
	Запрос.УстановитьПараметр("ВыручкаНДС0",                     Реквизиты.ВыручкаНДС0);
	Запрос.УстановитьПараметр("ВыручкаНДС0СырьевыеТоварыУслуги", Реквизиты.ВыручкаНДС0СырьевыеТоварыУслуги);
	Запрос.УстановитьПараметр("ВыручкаНДС0НесырьевыеТовары",     Реквизиты.ВыручкаНДС0НесырьевыеТовары);
	
	Запрос.УстановитьПараметр("СписатьНДСПоРасходамАктивамНаСтатьиОтражения", Реквизиты.СписатьНДСПоРасходамАктивамНаСтатьиОтражения);
	Запрос.УстановитьПараметр("СтатьяРасходовНеНДС",                          Реквизиты.СтатьяРасходовНеНДС);
	Запрос.УстановитьПараметр("АналитикаРасходовНеНДС",                       Реквизиты.АналитикаРасходовНеНДС);
	Запрос.УстановитьПараметр("СтатьяРасходовЕНВД",                           Реквизиты.СтатьяРасходовЕНВД);
	Запрос.УстановитьПараметр("АналитикаРасходовЕНВД",                        Реквизиты.АналитикаРасходовЕНВД);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция ТаблицаРезультатРаспределения()
	
	НаборЗаписей = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей();
	Результат = НаборЗаписей.ВыгрузитьКолонки();
	
	Результат.Колонки.Удалить("Активность");
	Результат.Колонки.Удалить("МоментВремени");
	
	Результат.Колонки.Добавить("ОснованиеКорректировки",  Метаданные.Документы.КорректировкаПриобретения.Реквизиты.ДокументОснование.Тип);
	Результат.Колонки.Добавить("ДатаПоступленияРасходов", Новый ОписаниеТипов("Дата"));
	
	Результат.Колонки.Добавить("НалогообложениеНДСПартии",         Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНалогообложенияНДС"));
	Результат.Колонки.Добавить("Контрагент",                       Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Результат.Колонки.Добавить("СтавкаНДС",                        Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	Результат.Колонки.Добавить("ВидЦенностиНДС",                   Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЦенностей"));
	Результат.Колонки.Добавить("ОрганизацияПолучатель",            Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	Результат.Колонки.Добавить("ВнеоборотныйАктив",                     Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("ВключаетсяВРасходыНУПриПринятииКУчету", Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("ПодразделениеРасходовНУ",               Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	Результат.Колонки.Добавить("СтатьяРасходовНУ",                      Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	Результат.Колонки.Добавить("ЭтоПринимаемаяСтатьяРасходовНУ",        Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("АналитикаРасходовНУ",                   Новый ОписаниеТипов(Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип, "NULL"));
	
	Возврат Результат;
	
КонецФункции

Функция ТаблицаПартииПрочихРасходов(РезультатРаспределения, Реквизиты)
	
	ПартииПрочихРасходов = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ПартииПрочихРасходов.Колонки.Удалить("Активность");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения.Значение, ПартииПрочихРасходов);
	КонецЦикла;
	
	ПартииПрочихРасходов.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	ПартииПрочихРасходов.ЗаполнитьЗначения(Реквизиты.Период,             "Период");
	
	Возврат ПартииПрочихРасходов;
	
КонецФункции

Функция ТаблицаПрочиеРасходы(РезультатРаспределения, Реквизиты)
	
	ПрочиеРасходы = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ПрочиеРасходы.Колонки.Удалить("Активность");
	
	ПрочиеРасходыДобавитьСтрокиВключениеВСтоимость(ПрочиеРасходы, РезультатРаспределения.ПартииПрочихРасходовНеОблагаетсяНДС, Реквизиты, Ложь);
	ПрочиеРасходыДобавитьСтрокиВключениеВСтоимость(ПрочиеРасходы, РезультатРаспределения.ПартииПрочихРасходовОблагаетсяЕНВД,  Реквизиты, Истина);
	
	ПрочиеРасходыДобавитьСтрокиИсключениеИзСтоимости(ПрочиеРасходы, РезультатРаспределения.ПартииПрочихРасходовОблагаетсяНДС, Реквизиты);
	ПрочиеРасходыДобавитьСтрокиИсключениеИзСтоимости(ПрочиеРасходы, РезультатРаспределения.ПартииПрочихРасходовЭкспорт,       Реквизиты);
	ПрочиеРасходыДобавитьСтрокиИсключениеИзСтоимости(ПрочиеРасходы, РезультатРаспределения.ПартииПрочихРасходовЭкспортНесырьевыхТоваров, Реквизиты);
	ПрочиеРасходыДобавитьСтрокиИсключениеИзСтоимости(ПрочиеРасходы, РезультатРаспределения.ПартииПрочихРасходовЭкспортСырьевыхТоваровУслуг, Реквизиты);
	
	Возврат ПрочиеРасходы;
	
КонецФункции

Процедура ПрочиеРасходыДобавитьСтрокиВключениеВСтоимость(ПрочиеРасходы, ТаблицаИсточник, Реквизиты, ЭтоРасходыЕНВД = Ложь)
	
	ИспользоватьВНА2_2 = ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2");
	ИспользоватьВНА2_4 = Ложь;
	
	Для каждого Строка Из ТаблицаИсточник Цикл
		
		Если НЕ ПустаяСтрока(Строка.ВнеоборотныйАктив) 
			 И НЕ Строка.ВключаетсяВРасходыНУПриПринятииКУчету
			 И ИспользоватьВНА2_2 И НЕ ИспользоватьВНА2_4 Тогда 
			// В учете внеоборотные активов версии 2.2 данные хранятся в проводках
			Продолжить;
		КонецЕсли;
		
		Если Строка.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
				ИЛИ Строка.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
			// Уже в расходах
			Продолжить;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(Строка.ВнеоборотныйАктив) И Строка.ВключаетсяВРасходыНУПриПринятииКУчету Тогда
			Подразделение       = Строка.ПодразделениеРасходовНУ;
			СтатьяРасходов		= Строка.СтатьяРасходовНУ;
			АналитикаРасходов	= Строка.АналитикаРасходовНУ;
		ИначеЕсли ЗначениеЗаполнено(Строка.СтатьяОтраженияРасходов) Тогда
			Подразделение		= Строка.Подразделение;
			СтатьяРасходов		= Строка.СтатьяОтраженияРасходов;
			АналитикаРасходов	= Строка.АналитикаОтраженияРасходов;
		Иначе
			Подразделение		= Строка.Подразделение;
			СтатьяРасходов		= Строка.СтатьяРасходов;
			АналитикаРасходов	= Строка.АналитикаРасходов;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтатьяРасходов) 
				ИЛИ ТипЗнч(СтатьяРасходов) <> Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
			// Это не расходы
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ПрочиеРасходы.Добавить();
		НоваяСтрока.Период					= Реквизиты.Период;
		НоваяСтрока.Организация				= Реквизиты.Организация;
		НоваяСтрока.ХозяйственнаяОперация	= Перечисления.ХозяйственныеОперации.РаспределениеНДС;
		НоваяСтрока.НаправлениеДеятельности = Строка.НаправлениеДеятельности;
		НоваяСтрока.Подразделение			= Подразделение;
		НоваяСтрока.СтатьяРасходов			= СтатьяРасходов;
		НоваяСтрока.АналитикаРасходов		= АналитикаРасходов;
		
		Если НЕ ПустаяСтрока(Строка.ВнеоборотныйАктив) И Строка.ВключаетсяВРасходыНУПриПринятииКУчету Тогда
			НоваяСтрока.ВременнаяРазница = -Строка.НДСРегл;
		Иначе
			НоваяСтрока.СуммаРегл = Строка.НДСРегл;
		КонецЕсли;
		Если НЕ Строка.ЭтоПринимаемаяСтатьяРасходовНУ Тогда
			НоваяСтрока.ПостояннаяРазница = Строка.НДСРегл;
		КонецЕсли;
		НоваяСтрока.СуммаУпр = Строка.НДСУпр;
		
		Если ЗначениеЗаполнено(Строка.ОрганизацияПолучатель)
		 И Строка.ОрганизацияПолучатель <> Строка.Организация Тогда
		 
			НоваяСтрокаУпр = ПрочиеРасходы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаУпр, НоваяСтрока);
			НоваяСтрокаУпр.СуммаРегл = 0;
			НоваяСтрокаУпр.ПостояннаяРазница = 0;
			НоваяСтрокаУпр.ВременнаяРазница = 0;
			НоваяСтрокаУпр.СуммаУпр = -Строка.НДСУпр;
			НоваяСтрокаУпр.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторнированиеРасходовУУ;
			
			НоваяСтрокаУпр = ПрочиеРасходы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаУпр, НоваяСтрока);
			НоваяСтрокаУпр.Организация = Строка.ОрганизацияПолучатель;
			НоваяСтрокаУпр.СуммаРегл = 0;
			НоваяСтрокаУпр.ПостояннаяРазница = 0;
			НоваяСтрокаУпр.ВременнаяРазница = 0;
			НоваяСтрокаУпр.СуммаУпр = Строка.НДСУпр;
			НоваяСтрокаУпр.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РегистрацияРасходовУУ;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПрочиеРасходыДобавитьСтрокиИсключениеИзСтоимости(ПрочиеРасходы, ТаблицаИсточник, Реквизиты)
	
	Для каждого Строка Из ТаблицаИсточник Цикл
		
		Если Не ПустаяСтрока(Строка.ВнеоборотныйАктив) Тогда 
			// Внеоборотные активы хранят данные в проводках
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.СтатьяРасходов) Тогда
			// Это не расходы
			Продолжить;
		КонецЕсли;
		
		Если Строка.НалогообложениеНДСПартии <> Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
			И Строка.НалогообложениеНДСПартии <> Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ПрочиеРасходы.Добавить();
		НоваяСтрока.Период					= Реквизиты.Период;
		НоваяСтрока.Организация				= Реквизиты.Организация;
		НоваяСтрока.Подразделение			= Строка.Подразделение;
		НоваяСтрока.НаправлениеДеятельности = Строка.НаправлениеДеятельности;
		НоваяСтрока.ХозяйственнаяОперация	= Перечисления.ХозяйственныеОперации.РаспределениеНДС;
		НоваяСтрока.СтатьяРасходов			= Строка.СтатьяРасходов;
		НоваяСтрока.АналитикаРасходов		= Строка.АналитикаРасходов;
		
		НоваяСтрока.СуммаРегл = -Строка.НДСРегл;
		Если НЕ Строка.ЭтоПринимаемаяСтатьяРасходовНУ Тогда
			НоваяСтрока.ПостояннаяРазница = -Строка.НДСРегл;
		КонецЕсли;
		НоваяСтрока.СуммаУпр = -Строка.НДСУпр;
		
		Если ЗначениеЗаполнено(Строка.ОрганизацияПолучатель)
		 И Строка.ОрганизацияПолучатель <> Строка.Организация Тогда
		 
			НоваяСтрокаУпр = ПрочиеРасходы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаУпр, НоваяСтрока);
			НоваяСтрокаУпр.СуммаРегл = 0;
			НоваяСтрокаУпр.ПостояннаяРазница = 0;
			НоваяСтрокаУпр.ВременнаяРазница = 0;
			НоваяСтрокаУпр.СуммаУпр = Строка.НДСУпр;
			НоваяСтрокаУпр.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторнированиеРасходовУУ;
			
			НоваяСтрокаУпр = ПрочиеРасходы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаУпр, НоваяСтрока);
			НоваяСтрокаУпр.Организация = Строка.ОрганизацияПолучатель;
			НоваяСтрокаУпр.СуммаРегл = 0;
			НоваяСтрокаУпр.ПостояннаяРазница = 0;
			НоваяСтрокаУпр.ВременнаяРазница = 0;
			НоваяСтрокаУпр.СуммаУпр = -Строка.НДСУпр;
			НоваяСтрокаУпр.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РегистрацияРасходовУУ;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#Область ИнициализацияИЗаполнение

Функция ЗаполнитьПравилаСписанияНДС(Организация = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ДанныеДокумента.СписатьНДСПоРасходамАктивамНаСтатьиОтражения КАК СписатьНДСПоРасходамАктивамНаСтатьиОтражения,
	|	ДанныеДокумента.СтатьяРасходовНеНДС КАК СтатьяРасходовНеНДС,
	|	ДанныеДокумента.АналитикаРасходовНеНДС КАК АналитикаРасходовНеНДС,
	|	ДанныеДокумента.СтатьяРасходовЕНВД КАК СтатьяРасходовЕНВД,
	|	ДанныеДокумента.АналитикаРасходовЕНВД КАК АналитикаРасходовЕНВД
	|ИЗ
	|	Документ.РаспределениеНДС КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И (ВЫБОР
	|		КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ДанныеДокумента.Организация = &Организация
	|	КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Дата УБЫВ
	|";
	
	Запрос.УстановитьПараметр("Организация",?(Организация = Неопределено,Справочники.Организации.ПустаяСсылка(),Организация));
	
	Выборка = Запрос.Выполнить().Выбрать();
	ПравилаСписания = Новый Структура("СписатьНДСПоРасходамАктивамНаСтатьиОтражения,СтатьяРасходовНеНДС,АналитикаРасходовНеНДС,СтатьяРасходовЕНВД,АналитикаРасходовЕНВД");
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПравилаСписания,Выборка);
	Иначе
		ПравилаСписания.СписатьНДСПоРасходамАктивамНаСтатьиОтражения	= 1;
	КонецЕсли;
	
	Возврат ПравилаСписания
	
КонецФункции

Функция ПолучитьБазуРаспределения(Дата, НачалоПериода, Организация, ВключатьВсеДокументыЭкспорта = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДанных.Организация                      КАК Организация,
	|	ТаблицаДанных.Ссылка                           КАК Документ,
	|	СУММА(ТаблицаДанных.СуммаНесырьевыеТовары)             КАК СуммаНесырьевыеТовары,
	|	СУММА(ТаблицаДанных.СуммаСырьевыеТоварыУслуги)         КАК СуммаСырьевыеТоварыУслуги,
	|	СУММА(ТаблицаДанных.КорректировкаНесырьевыеТовары)     КАК КорректировкаНесырьевыеТовары,
	|	СУММА(ТаблицаДанных.КорректировкаСырьевыеТоварыУслуги) КАК КорректировкаСырьевыеТоварыУслуги
	|ПОМЕСТИТЬ ДокументыЭкспорт
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДССостояниеРеализации0.Организация КАК Организация,
	|		ДанныеДокумента.Ссылка              КАК Ссылка,
	|		0                                   КАК СуммаНесырьевыеТовары,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(СуммыВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|				ТОГДА ДанныеДокумента.СуммаСНДС
	|			ИНАЧЕ СуммыВВалютеРегл.БазаНДСРегл
	|		КОНЕЦ                               КАК СуммаСырьевыеТоварыУслуги,
	|		0                                   КАК КорректировкаНесырьевыеТовары,
	|		0                                   КАК КорректировкаСырьевыеТоварыУслуги
	|	ИЗ
	|		Документ.АктВыполненныхРабот.Услуги КАК ДанныеДокумента
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО 
	|			ДанныеДокумента.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыВВалютеРегл
	|		ПО 
	|			ДанныеДокумента.Ссылка = СуммыВВалютеРегл.Регистратор
	|			И ДанныеДокумента.ИдентификаторСтроки = СуммыВВалютеРегл.ИдентификаторСтроки
	|	ГДЕ
	|		НДССостояниеРеализации0.Организация В (&Организация)
	|		И НДССостояниеРеализации0.ДатаРеализации МЕЖДУ &ПериодНачало И &ПериодОкончание
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НДССостояниеРеализации0.Организация  КАК Организация,
	|		ДанныеДокумента.Ссылка               КАК Ссылка,
	|		ВЫБОР 
	|			КОГДА НЕ ЕСТЬNULL(ДанныеДокумента.КодТНВЭД.СырьевойТовар, ЛОЖЬ)
	|				ТОГДА
	|					ВЫБОР КОГДА ЕСТЬNULL(СуммыВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ДанныеДокумента.СуммаСНДС
	|						ИНАЧЕ СуммыВВалютеРегл.БазаНДСРегл
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ                                КАК СуммаНесырьевыеТовары,
	|		ВЫБОР 
	|			КОГДА ЕСТЬNULL(ДанныеДокумента.КодТНВЭД.СырьевойТовар, ЛОЖЬ)
	|				ТОГДА
	|					ВЫБОР КОГДА ЕСТЬNULL(СуммыВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ДанныеДокумента.СуммаСНДС
	|						ИНАЧЕ СуммыВВалютеРегл.СуммаБезНДСРегл
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ                                КАК СуммаСырьевыеТоварыУслуги,
	|		0                                    КАК КорректировкаНесырьевыеТовары,
	|		0                                    КАК КорректировкаСырьевыеТоварыУслуги
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ДанныеДокумента
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО 
	|			ДанныеДокумента.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыВВалютеРегл
	|		ПО 
	|			ДанныеДокумента.Ссылка = СуммыВВалютеРегл.Регистратор
	|			И ДанныеДокумента.ИдентификаторСтроки = СуммыВВалютеРегл.ИдентификаторСтроки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО 
	|			ДанныеДокумента.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			Справочник.Номенклатура КАК СпрНоменклатура 
	|		ПО
	|			СпрНоменклатура.Ссылка = Аналитика.Номенклатура
	|	ГДЕ
	|		НДССостояниеРеализации0.Организация В (&Организация)
	|		И НДССостояниеРеализации0.ДатаРеализации МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И ДанныеДокумента.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НДССостояниеРеализации0.Организация КАК Организация,
	|		ДанныеДокумента.Ссылка              КАК Ссылка,
	|		0                                   КАК СуммаНесырьевыеТовары,
	|		ВЫБОР
	|			КОГДА СуммыВВалютеРегл.СуммаБезНДСРегл ЕСТЬ NULL 
	|					ИЛИ СуммыВВалютеРегл.СуммаБезНДСРегл = 0
	|				ТОГДА ДанныеДокумента.СуммаСНДС
	|			ИНАЧЕ СуммыВВалютеРегл.БазаНДСРегл
	|		КОНЕЦ                               КАК СуммаСырьевыеТоварыУслуги,
	|		0                                   КАК КорректировкаНесырьевыеТовары,
	|		0                                   КАК КорректировкаСырьевыеТоварыУслуги
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|			ПО ДанныеДокумента.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыВВалютеРегл
	|			ПО ДанныеДокумента.Ссылка = СуммыВВалютеРегл.Регистратор
	|				И ДанныеДокумента.ИдентификаторСтроки = СуммыВВалютеРегл.ИдентификаторСтроки
	|	ГДЕ
	|		НДССостояниеРеализации0.Организация В (&Организация)
	|		И НДССостояниеРеализации0.ДатаРеализации МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И ДанныеДокумента.Номенклатура.ТипНоменклатуры НЕ В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КорректировкаРеализации.Организация КАК Организация,
	|		КорректировкаРеализации.ДокументОснование      КАК Ссылка,
	|		0                                   КАК СуммаНесырьевыеТовары,
	|		0                                   КАК СуммаСырьевыеТоварыУслуги,
	|		0                                   КАК КорректировкаНесырьевыеТовары,
	|		ВЫБОР
	|			КОГДА СуммыВВалютеРегл.СуммаБезНДСРегл ЕСТЬ NULL 
	|					ИЛИ СуммыВВалютеРегл.СуммаБезНДСРегл = 0
	|				ТОГДА ДанныеДокумента.СуммаСНДС
	|			ИНАЧЕ СуммыВВалютеРегл.БазаНДСРегл
	|		КОНЕЦ                               КАК КорректировкаСырьевыеТоварыУслуги
	|	ИЗ
	|		Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.КорректировкаРеализации.Расхождения КАК ДанныеДокумента
	|		ПО 
	|			КорректировкаРеализации.Ссылка = ДанныеДокумента.Ссылка
	|			
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО 
	|			КорректировкаРеализации.ДокументОснование = НДССостояниеРеализации0.ДокументРеализации
	|			И НДССостояниеРеализации0.Организация В (&Организация)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыВВалютеРегл
	|		ПО 
	|			ДанныеДокумента.Ссылка = СуммыВВалютеРегл.Регистратор
	|			И ДанныеДокумента.ИдентификаторСтроки = СуммыВВалютеРегл.ИдентификаторСтроки
	|	ГДЕ
	|		КорректировкаРеализации.Дата МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И КорректировкаРеализации.Проведен
	|		И КорректировкаРеализации.Организация В (&Организация) 
	|		И ДанныеДокумента.Номенклатура.ТипНоменклатуры НЕ В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КорректировкаРеализации.Организация КАК Организация,
	|		КорректировкаРеализации.ДокументОснование      КАК Ссылка,
	|		0                                   КАК СуммаНесырьевыеТовары,
	|		0                                   КАК СуммаСырьевыеТоварыУслуги,
	|		ВЫБОР 
	|			КОГДА НЕ ЕСТЬNULL(ДанныеДокумента.КодТНВЭД.СырьевойТовар, ЛОЖЬ)
	|				ТОГДА
	|					ВЫБОР КОГДА ЕСТЬNULL(СуммыВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ДанныеДокумента.СуммаСНДС
	|						ИНАЧЕ СуммыВВалютеРегл.БазаНДСРегл
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ                                КАК КорректировкаНесырьевыеТовары,
	|		ВЫБОР 
	|			КОГДА ЕСТЬNULL(ДанныеДокумента.КодТНВЭД.СырьевойТовар, ЛОЖЬ)
	|				ТОГДА
	|					ВЫБОР КОГДА ЕСТЬNULL(СуммыВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ДанныеДокумента.СуммаСНДС
	|						ИНАЧЕ СуммыВВалютеРегл.СуммаБезНДСРегл
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ                                КАК КорректировкаСырьевыеТоварыУслуги
	|	ИЗ
	|		Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.КорректировкаРеализации.ВидыЗапасовКорректировкаВыручки КАК ДанныеДокумента
	|		ПО 
	|			КорректировкаРеализации.Ссылка = ДанныеДокумента.Ссылка
	|			
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО 
	|			КорректировкаРеализации.ДокументОснование = НДССостояниеРеализации0.ДокументРеализации
	|			И НДССостояниеРеализации0.Организация В (&Организация)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыВВалютеРегл
	|		ПО 
	|			ДанныеДокумента.Ссылка = СуммыВВалютеРегл.Регистратор
	|			И ДанныеДокумента.ИдентификаторСтроки = СуммыВВалютеРегл.ИдентификаторСтроки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО 
	|			ДанныеДокумента.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			Справочник.Номенклатура КАК СпрНоменклатура 
	|		ПО
	|			СпрНоменклатура.Ссылка = Аналитика.Номенклатура
	|	
	|	ГДЕ
	|		КорректировкаРеализации.Дата МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И КорректировкаРеализации.Проведен
	|		И КорректировкаРеализации.Организация В (&Организация) 
	|		И ДанныеДокумента.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КорректировкаРеализации.Организация КАК Организация,
	|		КорректировкаРеализации.ДокументОснование      КАК Ссылка,
	|		0                                   КАК СуммаНесырьевыеТовары,
	|		0                                   КАК СуммаСырьевыеТоварыУслуги,
	|		ВЫБОР 
	|			КОГДА НЕ ЕСТЬNULL(ДанныеДокумента.КодТНВЭД.СырьевойТовар, ЛОЖЬ)
	|				ТОГДА
	|					ВЫБОР КОГДА ЕСТЬNULL(СуммыВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ДанныеДокумента.СуммаСНДС
	|						ИНАЧЕ СуммыВВалютеРегл.БазаНДСРегл
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ                                КАК КорректировкаНесырьевыеТовары,
	|		ВЫБОР 
	|			КОГДА ЕСТЬNULL(ДанныеДокумента.КодТНВЭД.СырьевойТовар, ЛОЖЬ)
	|				ТОГДА
	|					ВЫБОР КОГДА ЕСТЬNULL(СуммыВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ДанныеДокумента.СуммаСНДС
	|						ИНАЧЕ СуммыВВалютеРегл.СуммаБезНДСРегл
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ                                КАК КорректировкаСырьевыеТоварыУслуги
	|	ИЗ
	|		Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.КорректировкаРеализации.ВидыЗапасовСписание КАК ДанныеДокумента
	|		ПО 
	|			КорректировкаРеализации.Ссылка = ДанныеДокумента.Ссылка
	|			
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО 
	|			КорректировкаРеализации.ДокументОснование = НДССостояниеРеализации0.ДокументРеализации
	|			И НДССостояниеРеализации0.Организация В (&Организация)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыВВалютеРегл
	|		ПО 
	|			ДанныеДокумента.Ссылка = СуммыВВалютеРегл.Регистратор
	|			И ДанныеДокумента.ИдентификаторСтроки = СуммыВВалютеРегл.ИдентификаторСтроки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО 
	|			ДанныеДокумента.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			Справочник.Номенклатура КАК СпрНоменклатура 
	|		ПО
	|			СпрНоменклатура.Ссылка = Аналитика.Номенклатура
	|	
	|	ГДЕ
	|		КорректировкаРеализации.Дата МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И КорректировкаРеализации.Проведен
	|		И КорректировкаРеализации.Организация В (&Организация) 
	|		И ДанныеДокумента.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КорректировкаРеализации.Организация       КАК Организация,
	|		КорректировкаРеализации.ДокументОснование КАК Ссылка,
	|		0                                         КАК СуммаНесырьевыеТовары,
	|		0                                         КАК СуммаСырьевыеТоварыУслуги,
	|		ВЫБОР 
	|			КОГДА НЕ ЕСТЬNULL(ДанныеДокумента.КодТНВЭД.СырьевойТовар, ЛОЖЬ)
	|				ТОГДА
	|					ВЫБОР КОГДА ЕСТЬNULL(СуммыВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА -ДанныеДокумента.СуммаСНДС
	|						ИНАЧЕ -СуммыВВалютеРегл.БазаНДСРегл
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ                                КАК КорректировкаНесырьевыеТовары,
	|		ВЫБОР 
	|			КОГДА ЕСТЬNULL(ДанныеДокумента.КодТНВЭД.СырьевойТовар, ЛОЖЬ)
	|				ТОГДА
	|					ВЫБОР КОГДА ЕСТЬNULL(СуммыВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА -ДанныеДокумента.СуммаСНДС
	|						ИНАЧЕ -СуммыВВалютеРегл.СуммаБезНДСРегл
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ                                КАК КорректировкаСырьевыеТоварыУслуги
	|	ИЗ
	|		Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Документ.КорректировкаРеализации.ВидыЗапасовОприходование КАК ДанныеДокумента
	|		ПО 
	|			КорректировкаРеализации.Ссылка = ДанныеДокумента.Ссылка
	|			
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО 
	|			КорректировкаРеализации.ДокументОснование = НДССостояниеРеализации0.ДокументРеализации
	|			И НДССостояниеРеализации0.Организация В (&Организация)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыВВалютеРегл
	|		ПО 
	|			ДанныеДокумента.Ссылка = СуммыВВалютеРегл.Регистратор
	|			И ДанныеДокумента.ИдентификаторСтроки = СуммыВВалютеРегл.ИдентификаторСтроки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО 
	|			ДанныеДокумента.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			Справочник.Номенклатура КАК СпрНоменклатура 
	|		ПО
	|			СпрНоменклатура.Ссылка = Аналитика.Номенклатура
	|	
	|	ГДЕ
	|		КорректировкаРеализации.Дата МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И КорректировкаРеализации.Проведен
	|		И КорректировкаРеализации.Организация В (&Организация) 
	|		И ДанныеДокумента.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	
	|	) КАК ТаблицаДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.Организация,
	|	ТаблицаДанных.Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанных.Организация КАК Организация,
	|	СУММА(ТаблицаДанных.ВыручкаНДС) КАК ВыручкаНДС,
	|	СУММА(ТаблицаДанных.ВыручкаНеНДС) КАК ВыручкаНеНДС,
	|	СУММА(ТаблицаДанных.ВыручкаЕНВД) КАК ВыручкаЕНВД,
	|	СУММА(ТаблицаДанных.ВыручкаНДС0) КАК ВыручкаНДС0,
	|	СУММА(ТаблицаДанных.ВыручкаНДС0СырьевыеТоварыУслуги) КАК ВыручкаНДС0СырьевыеТоварыУслуги,
	|	СУММА(ТаблицаДанных.ВыручкаНДС0НесырьевыеТовары) КАК ВыручкаНДС0НесырьевыеТовары
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДСЗаписиКнигиПродажОбороты.Организация КАК Организация,
	|		ЕстьNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,0) КАК ВыручкаНДС,
	|		0 КАК ВыручкаНеНДС,
	|		0 КАК ВыручкаЕНВД,
	|		0 КАК ВыручкаНДС0,
	|		0 КАК ВыручкаНДС0СырьевыеТоварыУслуги,
	|		0 КАК ВыручкаНДС0НесырьевыеТовары
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|				&ПериодНачало,
	|				&ПериодОкончание,
	|				Квартал,
	|				Организация В (&Организация)
	|					И (Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация) 
	|						ИЛИ Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель))
	|					И НЕ ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|					И НЕ СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС))) КАК НДСЗаписиКнигиПродажОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДСЗаписиКнигиПродажОбороты.Организация,
	|		0,
	|		ЕстьNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,0),
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|				&ПериодНачало,
	|				&ПериодОкончание,
	|				Квартал,
	|				Организация В (&Организация)
	|					И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|					И СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)) КАК НДСЗаписиКнигиПродажОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НачисленияПоЗаймамВыданным.Организация,
	|		0,
	|		НачисленияПоЗаймамВыданным.СуммаРеглОборот,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.ДвиженияКонтрагентДоходыРасходы.Обороты(
	|			&ПериодНачало, 
	|			&ПериодОкончание,
	|			Квартал,
	|			ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоЗаймамВыданным)
	|				И Организация В (&Организация)) КАК НачисленияПоЗаймамВыданным
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НачисленияПоЗаймамВыданным.Организация,
	|		0,
	|		НачисленияПоЗаймамВыданным.СуммаРеглОборот,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Обороты(
	|			&ПериодНачало, 
	|			&ПериодОкончание,
	|			Квартал,
	|			ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоЗаймамВыданным)
	|				И Организация В (&Организация)) КАК НачисленияПоЗаймамВыданным
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АналитикаПоПартнерам.Организация,
	|		0,
	|		0,
	|		ЕстьNULL(ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл,0),
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО 
	|			ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.Ссылка
	|	ГДЕ
	|		АналитикаПоПартнерам.Организация В (&Организация)
	|		И ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|		И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И ВыручкаИСебестоимостьПродаж.Активность
	|		И ВыручкаИСебестоимостьПродаж.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументыЭкспорт.Организация КАК Организация,
	|		0 КАК ВыручкаНДС,
	|		0 КАК ВыручкаНеНДС,
	|		0 КАК ВыручкаЕНВД,
	|		(ДокументыЭкспорт.СуммаНесырьевыеТовары             
	|			+ ДокументыЭкспорт.СуммаСырьевыеТоварыУслуги         
	|			+ ДокументыЭкспорт.КорректировкаНесырьевыеТовары     
	|			+ ДокументыЭкспорт.КорректировкаСырьевыеТоварыУслуги) КАК ВыручкаНДС0,
	|		(ДокументыЭкспорт.СуммаСырьевыеТоварыУслуги 
	|			+ ДокументыЭкспорт.КорректировкаСырьевыеТоварыУслуги) КАК ВыручкаНДС0СырьевыеТоварыУслуги,
	|		(ДокументыЭкспорт.СуммаНесырьевыеТовары
	|			+ ДокументыЭкспорт.КорректировкаНесырьевыеТовары)     КАК ВыручкаНДС0НесырьевыеТовары
	|	ИЗ
	|		ДокументыЭкспорт КАК ДокументыЭкспорт
	|	) КАК ТаблицаДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.Организация
	|;
	|
	|ВЫБРАТЬ
	|	ДокументыЭкспорт.Организация   КАК Организация,
	|	ДокументыЭкспорт.Документ      КАК Документ,
	|	ВЫБОР 
	|		КОГДА &УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту И НЕ &ВключатьВсеДокументыЭкспорта
	|			ТОГДА СУММА(ДокументыЭкспорт.СуммаСырьевыеТоварыУслуги)
	|			ИНАЧЕ СУММА(ДокументыЭкспорт.СуммаНесырьевыеТовары + ДокументыЭкспорт.СуммаСырьевыеТоварыУслуги) 
	|	КОНЕЦ КАК СуммаВыручки,
	|	ВЫБОР 
	|		КОГДА &УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту И НЕ &ВключатьВсеДокументыЭкспорта
	|			ТОГДА СУММА(ДокументыЭкспорт.КорректировкаСырьевыеТоварыУслуги)
	|			ИНАЧЕ СУММА(ДокументыЭкспорт.КорректировкаНесырьевыеТовары + ДокументыЭкспорт.КорректировкаСырьевыеТоварыУслуги) 
	|	КОНЕЦ КАК КорректировкаВыручки
	|ИЗ
	|	ДокументыЭкспорт КАК ДокументыЭкспорт
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыЭкспорт.Организация,
	|	ДокументыЭкспорт.Документ
	|
	|ИМЕЮЩИЕ
	|	ВЫБОР 
	|		КОГДА &УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту И НЕ &ВключатьВсеДокументыЭкспорта
	|			ТОГДА СУММА(ДокументыЭкспорт.СуммаСырьевыеТоварыУслуги)
	|			ИНАЧЕ СУММА(ДокументыЭкспорт.СуммаНесырьевыеТовары + ДокументыЭкспорт.СуммаСырьевыеТоварыУслуги) 
	|	КОНЕЦ <> 0
	|	ИЛИ ВЫБОР 
	|		КОГДА &УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту И НЕ &ВключатьВсеДокументыЭкспорта
	|			ТОГДА СУММА(ДокументыЭкспорт.КорректировкаСырьевыеТоварыУслуги)
	|			ИНАЧЕ СУММА(ДокументыЭкспорт.КорректировкаНесырьевыеТовары + ДокументыЭкспорт.КорректировкаСырьевыеТоварыУслуги) 
	|	КОНЕЦ <> 0
	|";
	
	ПериодНачало = НачалоПериода;
	ПериодОкончание = КонецКвартала(Дата);
	
	Запрос.УстановитьПараметр("ПериодНачало", ПериодНачало);
	Запрос.УстановитьПараметр("ПериодОкончание", ПериодОкончание);
	
	Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		МассивОрганизаций = Новый Массив();
		МассивОрганизаций.Добавить(Организация);
		Запрос.УстановитьПараметр("Организация", МассивОрганизаций);
	Иначе
		Запрос.УстановитьПараметр("Организация", Организация)
	КонецЕсли;
	
	УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту = УчетНДСУТ.УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту(Дата);
	Запрос.УстановитьПараметр("УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту", УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту);
	Запрос.УстановитьПараметр("ВключатьВсеДокументыЭкспорта", ВключатьВсеДокументыЭкспорта);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаВыручка          = Результат[1].Выгрузить(); 
	ТаблицаДокументыЭкспорт = Результат[2].Выгрузить();
	
	Результат = Новый Структура;
	Результат.Вставить("ВыручкаНДС",                      ТаблицаВыручка.Итог("ВыручкаНДС"));
	Результат.Вставить("ВыручкаНеНДС",                    ТаблицаВыручка.Итог("ВыручкаНеНДС"));
	Результат.Вставить("ВыручкаЕНВД",                     ТаблицаВыручка.Итог("ВыручкаЕНВД"));
	Результат.Вставить("ВыручкаНДС0",                     ТаблицаВыручка.Итог("ВыручкаНДС0"));
	Результат.Вставить("ВыручкаНДС0НесырьевыеТовары",     ТаблицаВыручка.Итог("ВыручкаНДС0НесырьевыеТовары"));
	Результат.Вставить("ВыручкаНДС0СырьевыеТоварыУслуги", ТаблицаВыручка.Итог("ВыручкаНДС0СырьевыеТоварыУслуги"));
	
	Результат.Вставить("ДокументыЭкспорт", ТаблицаДокументыЭкспорт);
	
	Возврат Результат
	
КонецФункции

Функция ПолучитьНачалоРасширенногоНалоговогоПериода(Дата, Организация) Экспорт
	
	БлижайшийНалоговыйПериод = УчетНДСПереопределяемый.БлижайшийНалоговыйПериод(
		Организация,
		Дата);
	
	Если БлижайшийНалоговыйПериод.Начало <> БлижайшийНалоговыйПериод.Период Тогда
		НачалоНалоговогоПериода = БлижайшийНалоговыйПериод.Начало;
	Иначе
		НачалоНалоговогоПериода = НачалоКвартала(Дата);
	КонецЕсли;
	
	Если НачалоКвартала(Дата) < НачалоНалоговогоПериода Тогда
		НачалоПериода = НачалоКвартала(Дата);
	Иначе
		Если НачалоМесяца(Дата) = НачалоКвартала(Дата) Тогда
			// В первом месяце квартала производится распределение НДС по ОС и НМА
			// принятым к учету в этом месяце.
			// В случае расширенного налогового периода по НДС (п.2 ст.55 НК) необходимо
			// учесть ОС и НМА, приобретенные с момента регистрации до конца предыдущего квартала.
			НачалоПериода = НачалоНалоговогоПериода;
		ИначеЕсли КонецМесяца(Дата) <> КонецКвартала(Дата) Тогда
			// Во втором месяце квартала производится распределение НДС по ОС и НМА
			// принятым к учету в этом месяце. 
			// Для распределения необходимо учитывать выручку за месяц ввода в эксплуатацию.
			НачалоПериода = НачалоМесяца(Дата);
		Иначе
			НачалоПериода = НачалоНалоговогоПериода;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НачалоПериода;

КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УТ 11.4.2
// заполняется реквизит "Начало периода"
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	РаспределениеНДС.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РаспределениеНДС КАК РаспределениеНДС
	|ГДЕ
	|	РаспределениеНДС.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1)");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.РаспределениеНДС";
	МетаданныеДокумента = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаспределениеНДС.Ссылка КАК Ссылка,
	|	РаспределениеНДС.ВерсияДанных КАК ВерсияДанных,
	|	РаспределениеНДС.Дата КАК Дата
	|ИЗ
	|	&ВТДокументыДляОбработки КАК КОбработке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеНДС КАК РаспределениеНДС
	|		ПО РаспределениеНДС.Ссылка = КОбработке.Ссылка
	|";
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ВТДокументыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
				
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			Если Месяц(Выборка.Дата)%3 = 0 Тогда // это последний месяц квартала
				ДокументОбъект.НачалоПериода = НачалоКвартала(Выборка.Дата);
			Иначе
				ДокументОбъект.НачалоПериода = НачалоМесяца(Выборка.Дата);
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеДокумента,
				Выборка.Ссылка,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
