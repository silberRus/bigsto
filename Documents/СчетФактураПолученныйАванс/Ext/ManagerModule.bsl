#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.СчетФактураПолученныйАванс.ДобавитьКомандуСоздатьНаОснованииИсправительныйСчетФактура(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура полученный (аванс)".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураПолученныйАванс) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураПолученныйАванс.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураПолученныйАванс);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Добавляет команду создания документа "Счет-фактура полученный (аванс)".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОснованииИсправительныйСчетФактура(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураПолученныйАванс) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.ИсправительныйСчетФактураПолученныйАванс";
		КомандаСоздатьНаОсновании.Идентификатор = "ИсправительныйСчетФактура";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Исправительный счет-фактура'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
КонецПроцедуры

// Переформировывает движения счетов-фактур по регистрам НДС при зачете аванса без перепроведения документа.
// Сбрасывает статус отражения в регл. учете.
//
// Параметры:
//	МассивДокументов - Массив - Документы, движения которых необходимо актуализировать.
//	ПризнакОтменаПроведения - Булево - Признак, что переформировать движения необходимо по причине отмены проведения документа.
//
Процедура СформироватьДвиженияПоКнигеПродаж(МассивРегистраторов, ПризнакОтменаПроведения = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивДокументов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка КАК Ссылка,
	|	СчетФактура.Организация КАК Организация,
	|	Расчеты.Период КАК ДатаОтражения
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйАванс КАК СчетФактура
	|	ПО
	|		Расчеты.РасчетныйДокумент = СчетФактура.ДокументОснование
	|
	|ГДЕ
	|	Расчеты.Регистратор В (&МассивРегистраторов)
	|	И СчетФактура.Проведен
	|	И НЕ СчетФактура.Исправление
	|	
	|
	|ИТОГИ ПО
	|	Ссылка
	|";
	Запрос.УстановитьПараметр("МассивРегистраторов", МассивРегистраторов);
	
	МассивСчетовФактур = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.НДСЗаписиКнигиПокупок.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.НДСЗаписиКнигиПродаж.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
			
			Блокировка.Заблокировать();
			
			ДополнительныеСвойства = Новый Структура;
			ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
			
			Движения = Новый Структура;
			
			НДСЗаписиКнигиПродаж = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей();
			НДСЗаписиКнигиПродаж.Отбор.Регистратор.Установить(Выборка.Ссылка);
			Движения.Вставить("НДСЗаписиКнигиПродаж", НДСЗаписиКнигиПродаж);
			
			НДСЗаписиКнигиПокупок = РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей();
			НДСЗаписиКнигиПокупок.Отбор.Регистратор.Установить(Выборка.Ссылка);
			Движения.Вставить("НДСЗаписиКнигиПокупок", НДСЗаписиКнигиПокупок);
			
			
			Регистры = Новый Структура;
			Регистры.Вставить("НДСЗаписиКнигиПродаж");
			Регистры.Вставить("НДСЗаписиКнигиПокупок");
			
			ИнициализироватьДанныеДокумента(Выборка.Ссылка, ДополнительныеСвойства, Регистры); 
			
			ДоходыИРасходыСервер.ОтразитьНДСЗаписиКнигиПродаж(ДополнительныеСвойства, Движения, Ложь);
			ДоходыИРасходыСервер.ОтразитьНДСЗаписиКнигиПокупок(ДополнительныеСвойства, Движения, Ложь);
			
			
			Для каждого Движение Из Движения Цикл
				Движение.Значение.Записать();
			КонецЦикла;
			МассивСчетовФактур.Добавить(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Не удалось выполнить отражение в учете НДС документа ""%1"" по причине: %2'"),
					Выборка.Ссылка,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ВызватьИсключение ТекстСообщения;
		КонецПопытки
		
	КонецЦикла;
	
КонецПроцедуры

// Получает реквизиты счета-фактуры.
//
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураВыданныйАванс - Счет-фактура, данные которого необходимо получить.
//
// Возвращаемое значение:
//	Результат - Структура - Реквизиты счета-фактуры
//
Функция ДанныеСчетаФактуры(СчетФактура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СчетФактураПолученныйАванс.ДокументОснование                КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученныйАванс.Исправление
	|			ТОГДА СчетФактураПолученныйАванс.СчетФактураОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                       КАК СчетФактураОснование,
	|	СчетФактураПолученныйАванс.Организация                      КАК Организация,
	|	СчетФактураПолученныйАванс.Контрагент                       КАК Контрагент,
	|	СчетФактураПолученныйАванс.КодВидаОперации                  КАК КодВидаОперации,
	|	СчетФактураПолученныйАванс.НалогообложениеНДС               КАК НалогообложениеНДС,
	|	СчетФактураПолученныйАванс.Подразделение                    КАК Подразделение,
	|	СчетФактураПолученныйАванс.Авансы.(
	|		Сумма,
	|		СтавкаНДС,
	|		СуммаНДС
	|	) КАК Авансы
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|ГДЕ
	|	СчетФактураПолученныйАванс.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		Результат.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		Результат.Вставить("Авансы", Выборка.Авансы.Выгрузить());
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Получает таблицу по выданным авансам и сформированным счетам-фактурам.
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - организация, для которой выполняется получение авансов
// 	НачалоПериода - Дата - начало периода, за который получаются авансы.
// 	КонецПериода - Дата - окончание периода, за который получаются авансы.
// 	РасчетныйДокумент - ДокументСсылка - Расчетый документ, по которому получаются авансы.
// 											Если Неопределено, то по всем расченым документам.
// 
// Возвращаемое значение:
// 	ВыданныеАвансы - ТаблицаЗначений - сведения по выданным авансам, содержит колонки:
// 							* ДокументОснование - ДокументСсылка - документ аванса.
// 							* Номер - Строка - номер документа аванса.
// 							* Дата - Дата - дата документа аванса.
// 							* Поставщик - СправочникСсылка.Контрагенты - контрагент, которому выдан аванс.
// 							* ВалютаДокумента - СправочникСсылка.Валюта - валюта аванса.
// 							* ВалютнаяСумма - Число - сумма в валюте аванса.
// 							* СуммаАвансаРегл - Число - сумма аванса в валюте регл. учета.
// 							* СуммаАвансаРеглНДС18 - Число - расчетная сумма НДС с аванса по ставке 18%.
// 							* СуммаАвансаРеглНДС10 - Число - расчетная сумма НДС с аванса по ставке 10%.
// 							* НомерСчетаФактуры - Строка - номер счета-фактуры, зарегистрированного по документу аванса.
// 							* ДатаСчетаФактуры - Дата - дата счета-фактуры, зарегистрированного по документу аванса.
// 							* СуммаСчетаФактуры - Число - сумма счета-фактуры, зарегистрированного по документу аванса.
// 							* СчетФактура - ДокументСсылка.СчетФактураПолученныйАванс - Ссылка на счет-фактуру, зарегистрированный по документу аванса.
//
Функция ПолучитьВыданныеАвансы(Организация, НачалоПериода, КонецПериода, РасчетныйДокумент = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Расчеты.РасчетныйДокумент КАК ДокументОснование,
	|	Расчеты.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ КАК ВалютаДокумента,
	|	СУММА(ВЫБОР
	|			КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта = &ВалютаРегламентированногоУчета
	|					И Расчеты.ПредоплатаРеглПриход > 0
	|				ТОГДА Расчеты.ПредоплатаРеглПриход
	|			КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта = &ВалютаРегламентированногоУчета
	|					И Расчеты.ПредоплатаРеглРасход < 0
	|				ТОГДА -Расчеты.ПредоплатаРеглРасход
	|			КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|					И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта = &ВалютаРегламентированногоУчета
	|					И Расчеты.ПредоплатаРеглПриход > 0
	|				ТОГДА Расчеты.ПредоплатаРеглПриход
	|			КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|					И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта = &ВалютаРегламентированногоУчета
	|					И Расчеты.ПредоплатаРеглРасход < 0
	|				ТОГДА -Расчеты.ПредоплатаРеглРасход
	|			КОГДА (Расчеты.ПредоплатаПриход + Расчеты.КВозвратуПриход) > 0
	|				ТОГДА Расчеты.ПредоплатаПриход + Расчеты.КВозвратуПриход
	|			КОГДА (Расчеты.ПредоплатаРасход + Расчеты.КВозвратуРасход) < 0
	|				ТОГДА -(Расчеты.ПредоплатаРасход + Расчеты.КВозвратуРасход)
	|		КОНЕЦ) КАК ВалютнаяСумма,
	|	СУММА(ВЫБОР
	|			КОГДА Расчеты.ПредоплатаРеглПриход > 0
	|				ТОГДА Расчеты.ПредоплатаРеглПриход
	|			КОГДА Расчеты.ПредоплатаРеглРасход < 0
	|				ТОГДА -Расчеты.ПредоплатаРеглРасход
	|		КОНЕЦ) КАК СуммаАвансаРегл,
	|	АналитикаУчета.Контрагент КАК Поставщик
	|ПОМЕСТИТЬ Авансы
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам.Обороты(
	|			&НачалоПериода, 
	|			&ОкончаниеПериода, 
	|			Запись, 
	|			(РасчетныйДокумент = &РасчетныйДокумент 
	|				ИЛИ &РасчетныйДокумент = НЕОПРЕДЕЛЕНО)) КАК Расчеты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|	ПО 
	|		Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|ГДЕ
	|	АналитикаУчета.Организация В (&МассивОрганизаций)
	|	И ((Расчеты.ПредоплатаПриход + Расчеты.КВозвратуПриход) > 0
	|		ИЛИ (Расчеты.ПредоплатаРасход + Расчеты.КВозвратуРасход <0))
	|	И (ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).ПроведеноБанком
	|			ИЛИ НЕ Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств)
	|	И (ЛОЖЬ
	|		//УсловиеТипРасчетногоДокумента//
	|		)
	|	И (ЛОЖЬ
	|		//УсловиеТипРегистратора//
	|		)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.ЗаказПоставщику,
	|	АналитикаУчета.Контрагент,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ
	|;
	|
	|
	|ВЫБРАТЬ
	|	Авансы.ДокументОснование КАК ДокументОснование,
	|	Авансы.ЗаказПоставщику КАК ЗаказПоставщику,
	|	Авансы.ВалютаДокумента КАК ВалютаДокумента,
	|	Авансы.ВалютнаяСумма КАК ВалютнаяСумма,
	|	Авансы.СуммаАвансаРегл КАК СуммаАвансаРегл,
	|	Авансы.Поставщик КАК Поставщик,
	|	
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ СБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И СБДС_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС18)
	|			ТОГДА СБДС_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ РКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС18)
	|			ТОГДА РКО_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ АО_ОплатаПоставщикам.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС18)
	|			ТОГДА АО_ОплатаПоставщикам.Сумма
	|		ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма18,
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ СБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И СБДС_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС10)
	|			ТОГДА СБДС_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ РКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС10)
	|			ТОГДА РКО_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ АО_ОплатаПоставщикам.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС10)
	|			ТОГДА АО_ОплатаПоставщикам.Сумма
	|		ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма10,
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ СБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И СБДС_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА СБДС_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ РКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА РКО_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ АО_ОплатаПоставщикам.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА АО_ОплатаПоставщикам.Сумма
	|		ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС
	|ПОМЕСТИТЬ АвансыПоСтавкам
	|ИЗ
	|	Авансы КАК Авансы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СБДС_РасшифровкаПлатежа
	|	ПО
	|		Авансы.ДокументОснование = СБДС_РасшифровкаПлатежа.Ссылка
	|		И Авансы.ЗаказПоставщику = СБДС_РасшифровкаПлатежа.Заказ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РКО_РасшифровкаПлатежа
	|	ПО
	|		Авансы.ДокументОснование = РКО_РасшифровкаПлатежа.Ссылка
	|		И Авансы.ЗаказПоставщику = РКО_РасшифровкаПлатежа.Заказ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АО_ОплатаПоставщикам
	|	ПО
	|		Авансы.ДокументОснование = АО_ОплатаПоставщикам.Ссылка
	|		И Авансы.ЗаказПоставщику = АО_ОплатаПоставщикам.Заказ
	|
	|СГРУППИРОВАТЬ ПО
	|	Авансы.ДокументОснование,
	|	Авансы.ЗаказПоставщику,
	|	Авансы.ВалютаДокумента,
	|	Авансы.Поставщик,
	|	Авансы.ВалютнаяСумма,
	|	Авансы.СуммаАвансаРегл
	|;
	|
	|//////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансыПоСтавкам.ДокументОснование      КАК ДокументОснование,
	|	АвансыПоСтавкам.ВалютаДокумента        КАК ВалютаДокумента,
	|	СУММА(АвансыПоСтавкам.ВалютнаяСумма)   КАК ВалютнаяСуммаВсего,
	|	СУММА(АвансыПоСтавкам.СуммаАвансаРегл) КАК СуммаАвансаРеглВсего,
	|	АвансыПоСтавкам.Поставщик              КАК Поставщик,
	|	СУММА(АвансыПоСтавкам.Сумма18)         КАК Сумма18,
	|	СУММА(АвансыПоСтавкам.Сумма10)         КАК Сумма10,
	|	СУММА(АвансыПоСтавкам.СуммаБезНДС)     КАК СуммаБезНДС,
	|	
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Дата,
	|	
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Номер, """") КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.ДатаСоставления, ДАТАВРЕМЯ(1,1,1)) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Сумма, 0) КАК СуммаСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Ссылка, ЗНАЧЕНИЕ(Документ.СчетФактураПолученныйАванс.ПустаяСсылка)) КАК СчетФактура
	|
	|ИЗ
	|	АвансыПоСтавкам КАК АвансыПоСтавкам
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|	ПО 
	|		АвансыПоСтавкам.ДокументОснование = СчетФактураПолученныйАванс.ДокументОснование
	|		И АвансыПоСтавкам.Поставщик = СчетФактураПолученныйАванс.Контрагент
	|		И СчетФактураПолученныйАванс.Проведен
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО 
	|		ДанныеПервичныхДокументов.Организация В (&МассивОрганизаций)
	|		И АвансыПоСтавкам.ДокументОснование = ДанныеПервичныхДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансыПоСтавкам.ДокументОснование,
	|	АвансыПоСтавкам.ВалютаДокумента,
	|	АвансыПоСтавкам.Поставщик,
	|	
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1,1,1)),
	|	
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Номер, """"),
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.ДатаСоставления, ДАТАВРЕМЯ(1,1,1)),
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Сумма, 0),
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Ссылка, ЗНАЧЕНИЕ(Документ.СчетФактураПолученныйАванс.ПустаяСсылка))
	|
	|
	|ИМЕЮЩИЕ
	|	СУММА(АвансыПоСтавкам.Сумма18) <> 0 
	|	ИЛИ СУММА(АвансыПоСтавкам.Сумма10) <> 0
	|	ИЛИ (СУММА(АвансыПоСтавкам.Сумма18) = 0 
	|		И СУММА(АвансыПоСтавкам.Сумма10) = 0 
	|		И СУММА(АвансыПоСтавкам.СуммаБезНДС) = 0)
	|";
	
	// Могут быть авансы по документам для которых не вводится счет-фактура
	УсловиеТипРасчетногоДокумента = "";
	УсловиеТипРегистратора = "";
	ТипыДокументовОснований = Метаданные.Документы.СчетФактураПолученныйАванс.Реквизиты.ДокументОснование.Тип.Типы();
	Для Каждого ТипДокОснования Из ТипыДокументовОснований Цикл
		МетаДок = Метаданные.НайтиПоТипу(ТипДокОснования);
		УсловиеТипРасчетногоДокумента = УсловиеТипРасчетногоДокумента + "
				|		ИЛИ ТИПЗНАЧЕНИЯ(Расчеты.РасчетныйДокумент) = Тип(Документ." + МетаДок.Имя + ")";
				
		УсловиеТипРегистратора = УсловиеТипРегистратора + "
				|		ИЛИ ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = Тип(Документ." + МетаДок.Имя + ")";
	КонецЦикла;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеТипРасчетногоДокумента//", УсловиеТипРасчетногоДокумента);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеТипРегистратора//",        УсловиеТипРегистратора);
	
	Запрос.Текст = ТекстЗапроса;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Запрос.УстановитьПараметр("МассивОрганизаций", Справочники.Организации.ДоступныеОрганизации());
	Иначе
		Запрос.УстановитьПараметр("МассивОрганизаций", ОбщегоНазначенияУТКлиентСервер.Массив(Организация));
	КонецЕсли;
	Запрос.УстановитьПараметр("НачалоПериода", 	  				НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", 				КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("РасчетныйДокумент", 				РасчетныйДокумент);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	СтавкиНДС18 = Новый Массив;
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	Запрос.УстановитьПараметр("СтавкиНДС18", СтавкиНДС18);
	
	СтавкиНДС18 = Новый Массив;
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	Запрос.УстановитьПараметр("СтавкиНДС18", СтавкиНДС18);
	
	СтавкиНДС10 = Новый Массив;
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	Запрос.УстановитьПараметр("СтавкиНДС10", СтавкиНДС10);
	
	СтавкиБезНДС = Новый Массив;
	СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.НДС0);
	СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("СтавкиБезНДС", СтавкиБезНДС);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	ВыданныеАвансы = Новый ТаблицаЗначений();
	ВыданныеАвансы.Колонки.Добавить("ДокументОснование");
	ВыданныеАвансы.Колонки.Добавить("Номер");
	ВыданныеАвансы.Колонки.Добавить("Дата");
	ВыданныеАвансы.Колонки.Добавить("Поставщик");
	ВыданныеАвансы.Колонки.Добавить("ВалютаДокумента");
	
	ВыданныеАвансы.Колонки.Добавить("ВалютнаяСумма");
	
	ВыданныеАвансы.Колонки.Добавить("СуммаАвансаРегл");
	ВыданныеАвансы.Колонки.Добавить("СуммаАвансаРеглНДС18");
	ВыданныеАвансы.Колонки.Добавить("СуммаАвансаРеглНДС10");
	
	ВыданныеАвансы.Колонки.Добавить("НомерСчетаФактуры");
	ВыданныеАвансы.Колонки.Добавить("ДатаСчетаФактуры");
	ВыданныеАвансы.Колонки.Добавить("СуммаСчетаФактуры");
	ВыданныеАвансы.Колонки.Добавить("СчетФактура");
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ВыданныеАвансы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Коэффициенты = Новый Массив; 
		Если Выборка.Сумма18 = 0 И Выборка.Сумма10 = 0 И Выборка.СуммаБезНДС = 0 Тогда
			// Всю сумму отнесем к ставке 18%
			Коэффициенты.Добавить(1);
		Иначе
			Коэффициенты.Добавить(Выборка.Сумма18);
		КонецЕсли;
		Коэффициенты.Добавить(Выборка.Сумма10);
		Коэффициенты.Добавить(Выборка.СуммаБезНДС);
		
		ВалютнаяСуммаПоСтавкам = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			Выборка.ВалютнаяСуммаВсего,
			Коэффициенты);
		
		СуммаАвансаРеглПоСтавкам = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			Выборка.СуммаАвансаРеглВсего,
			Коэффициенты);
			
		НоваяСтрока.ВалютнаяСумма   = ВалютнаяСуммаПоСтавкам[0] + ВалютнаяСуммаПоСтавкам[1];
		
		НоваяСтрока.СуммаАвансаРегл = СуммаАвансаРеглПоСтавкам[0] + СуммаАвансаРеглПоСтавкам[1];
		
		НоваяСтрока.СуммаАвансаРеглНДС18 = СуммаАвансаРеглПоСтавкам[0];
		НоваяСтрока.СуммаАвансаРеглНДС10 = СуммаАвансаРеглПоСтавкам[1];
		
	КонецЦикла;
	
	Возврат ВыданныеАвансы;
	
КонецФункции

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
	
	ПолученныеАвансы = ПолучитьВыданныеАвансы(Параметры.МассивОрганизаций, Параметры.НачалоПериода, Параметры.КонецПериода);
	
	Возврат ПолученныеАвансы.НайтиСтроки(Новый Структура("СчетФактура", ПустаяСсылка())).Количество();
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                КАК Ссылка,
	|	ДанныеДокумента.Организация                           КАК Организация,
	|	ДанныеДокумента.НалогообложениеНДС                    КАК НалогообложениеНДС,
	|	ДанныеДокумента.Контрагент                            КАК Контрагент,
	|	ДанныеДокумента.ИННКонтрагента                        КАК ИННКонтрагента,
	|	ДанныеДокумента.КППКонтрагента                        КАК КППКонтрагента,
	|	ДанныеДокумента.ДокументОснование                     КАК ДокументОснование,
	|	ДанныеДокумента.Дата                                  КАК ДатаПолучения,
	|	ДанныеДокумента.КодВидаОперации                       КАК КодВидаОперации,
	|	ДанныеДокумента.ДатаСоставления                       КАК Период,
	|	ДанныеДокумента.Номер                                 КАК Номер,
	|	ДанныеДокумента.ПолученВЭлектронномВиде               КАК ПолученВЭлектронномВиде,
	|	ДанныеДокумента.Исправление                           КАК Исправление,
	|	ДанныеДокумента.НомерИсправления                      КАК НомерИсправления,
	|	ДанныеДокумента.ДатаИсправления                       КАК ДатаИсправления,
	|	ДанныеДокумента.СчетФактураОснование                  КАК СчетФактураОснование,
	|	ДанныеДокумента.СчетФактураОснование.Дата             КАК ДатаСчетаФактурыОснования,
	|	ДанныеДокумента.СоставленКомиссионеромОтИмениПродавца КАК СоставленКомиссионеромОтИмениПродавца,
	|	ДанныеДокумента.СводныйКомиссионный                   КАК СводныйКомиссионный,
	|	ДанныеДокумента.Проведен                              КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                       КАК ПометкаУдаления,
	|	ДанныеДокумента.Комментарий                           КАК Комментарий,
	|	ДанныеДокумента.Подразделение                         КАК Подразделение,
	|	ДанныеДокумента.Ответственный                         КАК Ответственный,
	|	ДанныеДокумента.Сумма                                 КАК Сумма
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                    Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",               Реквизиты.Организация);
	Запрос.УстановитьПараметр("НалогообложениеНДС",        Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("Поставщик",                 Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ИННКонтрагента",            Реквизиты.ИННКонтрагента);
	Запрос.УстановитьПараметр("КППКонтрагента",            Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("ДокументОплаты",            Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("КодВидаОперации",           Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("Номер",                     Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерНаПечать",             Реквизиты.Номер);
	Запрос.УстановитьПараметр("Дата",                      Реквизиты.Период);
	Запрос.УстановитьПараметр("Подразделение",             Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Ответственный",             Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("СводныйКомиссионный",       Реквизиты.СводныйКомиссионный);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде",   Реквизиты.ПолученВЭлектронномВиде);
	Запрос.УстановитьПараметр("Исправление",               Реквизиты.Исправление);
	Запрос.УстановитьПараметр("НомерИсправления",          Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("ДатаИсправления",           Реквизиты.ДатаИсправления);
	Запрос.УстановитьПараметр("СчетФактураОснование",      Реквизиты.СчетФактураОснование);
	Запрос.УстановитьПараметр("ДатаСчетаФактурыОснования", Реквизиты.ДатаСчетаФактурыОснования);
	Запрос.УстановитьПараметр("Проведен",                  Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",           Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",   ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураПолученныйАванс"));
	Запрос.УстановитьПараметр("Комментарий",               Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Сумма",                     Реквизиты.Сумма);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",           Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУпрУчета",            Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("Контрагент",                Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("СоставленКомиссионеромОтИмениПродавца", Реквизиты.СоставленКомиссионеромОтИмениПродавца);
	
	УчетНДСУТ.УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыПолученного(Реквизиты, Запрос);
	
	ИнформацияПоИсправлению = "";
	Если Реквизиты.Исправление
		И ЗначениеЗаполнено(Реквизиты.ДатаИсправления)
		И ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления% от %ДатаИсправления%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%НомерИсправления%", Реквизиты.НомерИсправления);
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%ДатаИсправления%", Реквизиты.ДатаИсправления);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос)
	
	Если Запрос.Параметры.Свойство("СчетФактураПредыдущееИсправление") Тогда
		Возврат;
	КонецЕсли;
	
	Если Запрос.Параметры.Исправление Тогда
		СчетФактураПредыдущееИсправление = 
			ПредыдущийСчетФактураИсправление(
				Запрос.Параметры.СчетФактураОснование, 
				Запрос.Параметры.НомерИсправления);
	Иначе
		СчетФактураПредыдущееИсправление = Неопределено;
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("СчетФактураПредыдущееИсправление", СчетФактураПредыдущееИсправление);
	
КонецПроцедуры

Процедура УстановитьПараметрыРеквизитовПервичныхДокументов(Запрос)
	
	Если Запрос.Параметры.Свойство("НомерДокументаОплаты") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросДанныхПервичныхДокументов = Новый Запрос;
	ЗапросДанныхПервичныхДокументов.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеПервичныхДокументов.Номер            КАК НомерДокументаОплаты,
	|	ДанныеПервичныхДокументов.Дата             КАК ДатаДокументаОплаты,
	|	ДанныеПервичныхДокументов.ДатаРегистратора КАК ДатаОснования
	|ИЗ
	|	РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|ГДЕ
	|	ДанныеПервичныхДокументов.Организация = &Организация
	|	И ДанныеПервичныхДокументов.Документ = &ДокументОснование";
	
	ЗапросДанныхПервичныхДокументов.УстановитьПараметр("Организация",       Запрос.Параметры.Организация);
	ЗапросДанныхПервичныхДокументов.УстановитьПараметр("ДокументОснование", Запрос.Параметры.ДокументОплаты);
	
	Результат = ЗапросДанныхПервичныхДокументов.Выполнить();
	
	Если Результат.Пустой() Тогда
		Запрос.УстановитьПараметр("НомерДокументаОплаты", "");
		Запрос.УстановитьПараметр("ДатаДокументаОплаты",  Дата("1,1,1"));
		Запрос.УстановитьПараметр("ДатаОснования",        Дата("1,1,1"));
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Запрос.УстановитьПараметр("НомерДокументаОплаты", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
			Выборка.НомерДокументаОплаты, Ложь, Истина));
		Запрос.УстановитьПараметр("ДатаДокументаОплаты",  Выборка.ДатаДокументаОплаты);
		Запрос.УстановитьПараметр("ДатаОснования",        Выборка.ДатаОснования);
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьВтАвансы(Запрос) 
	
	Если Запрос.Параметры.Свойство("ВтАвансыИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросВтАвансы = Новый Запрос;
	ЗапросВтАвансы.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтАвансы.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросВтАвансы.УстановитьПараметр("ДатаОснования", Запрос.Параметры.ДатаОснования);
	ЗапросВтАвансы.УстановитьПараметр("ВалютаУпрУчета", Запрос.Параметры.ВалютаУпрУчета);
	ЗапросВтАвансы.УстановитьПараметр("ВалютаРеглУчета", Запрос.Параметры.ВалютаРеглУчета);
	
	ЗапросВтАвансы.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАвансы.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаАвансы.Сумма <> 0
	|			ТОГДА ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ТаблицаАвансы.СуммаНДС) КАК НДС,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаАвансы.Сумма <> 0
	|			ТОГДА ВЫБОР КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0
	|				ТОГДА ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|				ИНАЧЕ (ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС) * КурсВалютыУпрУчета.Кратность / КурсВалютыУпрУчета.Курс КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаБезНДСУпр,
	|	СУММА(ВЫБОР КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0
	|		ТОГДА ТаблицаАвансы.СуммаНДС
	|		ИНАЧЕ ТаблицаАвансы.СуммаНДС * КурсВалютыУпрУчета.Кратность / КурсВалютыУпрУчета.Курс
	|	КОНЕЦ) КАК НДСУпр
	|ПОМЕСТИТЬ втАвансы
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Авансы КАК ТаблицаАвансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОснования, Валюта = &ВалютаУпрУчета) КАК КурсВалютыУпрУчета
	|			ПО &ВалютаРеглУчета <> &ВалютаУпрУчета
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАвансы.СтавкаНДС
	|";
	ЗапросВтАвансы.Выполнить();
	
	Запрос.УстановитьПараметр("ВтАвансыИнициализирована", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьВтНДСЗаписиКнигиПродаж(Запрос)
	
	Если Запрос.Параметры.Свойство("НДСЗаписиКнигиПродажИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПараметрыРеквизитовПервичныхДокументов(Запрос);
	
	ИнициализироватьВтАвансы(Запрос);
	
	ЗапросДанныхДляРаспределения = Новый Запрос;
	ЗапросДанныхДляРаспределения.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросДанныхДляРаспределения.УстановитьПараметр("Организация",        Запрос.Параметры.Организация);
	ЗапросДанныхДляРаспределения.УстановитьПараметр("НалогообложениеНДС", Запрос.Параметры.НалогообложениеНДС);
	ЗапросДанныхДляРаспределения.УстановитьПараметр("ДокументОплаты",     Запрос.Параметры.ДокументОплаты);
	ЗапросДанныхДляРаспределения.УстановитьПараметр("Поставщик",          Запрос.Параметры.Поставщик);
	ЗапросДанныхДляРаспределения.УстановитьПараметр("ДатаОснования",      Запрос.Параметры.ДатаОснования);
	ЗапросДанныхДляРаспределения.УстановитьПараметр("Исправление",        Запрос.Параметры.Исправление);
	ЗапросДанныхДляРаспределения.УстановитьПараметр("ВалютаРеглУчета",    Запрос.Параметры.ВалютаРеглУчета);
	ЗапросДанныхДляРаспределения.УстановитьПараметр("ВалютаУпрУчета",     Запрос.Параметры.ВалютаУпрУчета);
	
	СтавкиБазНДС = Новый Массив;
	СтавкиБазНДС.Добавить(Перечисления.СтавкиНДС.БезНДС);
	СтавкиБазНДС.Добавить(Перечисления.СтавкиНДС.НДС0);
	ЗапросДанныхДляРаспределения.УстановитьПараметр("СтавкиБезНДС", СтавкиБазНДС);
	
	ЗапросДанныхДляРаспределения.Текст =
	"ВЫБРАТЬ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВтАналитикаУчетаПоПартнерам
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ГДЕ
	|	АналитикаУчетаПоПартнерам.Организация = &Организация
	|	И АналитикаУчетаПоПартнерам.Контрагент = &Поставщик
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСПоставщиками.Регистратор КАК Регистратор,
	|	РасчетыСПоставщиками.Период КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Покупатель,
	|	&ДокументОплаты КАК СчетФактура,
	|	ВЫБОР КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|	КОНЕЦ КАК ВидЦенности,
	|	&ДокументОплаты КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС) КАК Событие,
	|	РасчетыСПоставщиками.Период КАК ДатаСобытия,
	|	СУММА(ВЫБОР 
	|		КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСПоставщиками.ПредоплатаРегл >= 0
	|			ТОГДА РасчетыСПоставщиками.ПредоплатаРегл
	|		КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщиками.ПредоплатаРегл <= 0
	|			ТОГДА -РасчетыСПоставщиками.ПредоплатаРегл
	|	КОНЕЦ) КАК СуммаЗачета,
	|	СУММА(ВЫБОР 
	|		КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСПоставщиками.ПредоплатаУпр >= 0
	|			ТОГДА РасчетыСПоставщиками.ПредоплатаУпр
	|		КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщиками.ПредоплатаУпр <= 0
	|			ТОГДА -РасчетыСПоставщиками.ПредоплатаУпр
	|	КОНЕЦ) КАК СуммаЗачетаУпр,
	|	Значение(Перечисление.ХозяйственныеОперации.ВосстановлениеНДССВыданногоАванса) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ТОГДА ""21""
	|		ИНАЧЕ ""43""
	|	КОНЕЦ КАК КодВидаОперации
	|ПОМЕСТИТЬ ВтЗачетАвансов
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтАналитикаУчетаПоПартнерам КАК КлючиАналитикаУчетаПоПартнерам
	|	ПО
	|		РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = КлючиАналитикаУчетаПоПартнерам.КлючАналитики
	|
	|ГДЕ
	|	РасчетныйДокумент = &ДокументОплаты
	|	И НЕ &Исправление
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ((РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И РасчетыСПоставщиками.ПредоплатаРегл > 0)
	|		ИЛИ (РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И РасчетыСПоставщиками.ПредоплатаРегл < 0))
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.Регистратор,
	|	РасчетыСПоставщиками.Период
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 
	|				ТОГДА РасчетыСПоставщиками.ПредоплатаРегл
	|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|				ТОГДА -РасчетыСПоставщиками.ПредоплатаРегл
	|		КОНЕЦ) КАК Аванс,
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 
	|				ТОГДА РасчетыСПоставщиками.ПредоплатаУпр
	|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|				ТОГДА -РасчетыСПоставщиками.ПредоплатаУпр
	|		КОНЕЦ) КАК АвансУпр
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтАналитикаУчетаПоПартнерам КАК КлючиАналитикаУчетаПоПартнерам
	|	ПО
	|		РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = КлючиАналитикаУчетаПоПартнерам.КлючАналитики
	|
	|ГДЕ
	|	НЕ &Исправление
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И РасчетыСПоставщиками.РасчетныйДокумент = &ДокументОплаты
	|	И ((РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И РасчетыСПоставщиками.ПредоплатаРегл > 0)
	|		ИЛИ (РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И РасчетыСПоставщиками.ПредоплатаРегл < 0))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация          КАК Организация,
	|	&Поставщик            КАК Поставщик,
	|	&ДокументОплаты       КАК СчетФактура,
	|	&ДатаОснования        КАК ДатаОплаты,
	|	Авансы.СтавкаНДС      КАК СтавкаНДС,
	|	Авансы.СуммаБезНДС    КАК СуммаБезНДС,
	|	Авансы.НДС            КАК НДС,
	|	Авансы.СуммаБезНДСУпр КАК СуммаБезНДСУпр,
	|	Авансы.НДСУпр         КАК НДСУпр
	|ИЗ
	|	втАвансы КАК Авансы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗачетАвансов.Регистратор КАК Регистратор,
	|	ЗачетАвансов.Период КАК Период,
	|	ЗачетАвансов.Организация КАК Организация,
	|	ЗачетАвансов.Покупатель КАК Покупатель,
	|	ЗачетАвансов.СчетФактура КАК СчетФактура,
	|	ЗачетАвансов.ВидЦенности КАК ВидЦенности,
	|	ЗачетАвансов.ДокументОплаты КАК ДокументОплаты,
	|	ЗачетАвансов.Событие КАК Событие,
	|	ЗачетАвансов.ДатаСобытия КАК ДатаСобытия,
	|	ЗачетАвансов.СуммаЗачета КАК СуммаЗачета,
	|	ЗачетАвансов.СуммаЗачетаУпр КАК СуммаЗачетаУпр,
	|	ЗачетАвансов.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗачетАвансов.КодВидаОперации КАК КодВидаОперации,
	|	МАКСИМУМ(ВЫБОР 
	|		КОГДА ПриобретениеТоваровУслуг.Ссылка ЕСТЬ NULL 
	|				И ПриобретениеУслугПрочихАктивов.Ссылка ЕСТЬ NULL 
	|				И ПередачаТоваровМеждуОрганизациями.Ссылка ЕСТЬ NULL 
	|				И ВыкупВозвратнойТарыУПоставщика.Ссылка ЕСТЬ NULL 
	|				И ОтчетКомиссионера.Ссылка ЕСТЬ NULL
	|				И ОтчетПоКомиссииМеждуОрганизациями.Ссылка ЕСТЬ NULL 
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ) КАК ЕстьДокументЗачетаАванса,
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ ПриобретениеТоваровУслуг.Ссылка ЕСТЬ NULL 
	|				И ПриобретениеТоваровУслуг.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА ПриобретениеТоваровУслуг.СуммаСНДС
	|		КОГДА НЕ  ПриобретениеУслугПрочихАктивов.Ссылка ЕСТЬ NULL 
	|				И ПриобретениеУслугПрочихАктивов.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА ПриобретениеУслугПрочихАктивов.СуммаСНДС
	|		КОГДА НЕ КорректировкаПриобретения.Ссылка ЕСТЬ NULL 
	|				И КорректировкаПриобретения.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА КорректировкаПриобретения.СуммаСНДС
	|		КОГДА НЕ ПередачаТоваровМеждуОрганизациями.Ссылка ЕСТЬ NULL 
	|				И ПередачаТоваровМеждуОрганизациями.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.СуммаСНДС
	|		КОГДА НЕ ВыкупВозвратнойТарыУПоставщика.Ссылка ЕСТЬ NULL 
	|				И ВыкупВозвратнойТарыУПоставщика.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА ВыкупВозвратнойТарыУПоставщика.СуммаСНДС
	|		КОГДА НЕ ОтчетКомиссионера.Ссылка ЕСТЬ NULL 
	|				И ОтчетКомиссионера.СтавкаНДСВознаграждения В (&СтавкиБезНДС)
	|			ТОГДА ОтчетКомиссионера.СуммаВознаграждения
	|		КОГДА НЕ ОтчетПоКомиссииМеждуОрганизациями.Ссылка ЕСТЬ NULL 
	|				И ОтчетПоКомиссииМеждуОрганизациями.СтавкаНДСВознаграждения В (&СтавкиБезНДС)
	|			ТОГДА ОтчетПоКомиссииМеждуОрганизациями.СуммаВознаграждения
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаДокументаБезНДС,
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ ПриобретениеТоваровУслуг.Ссылка ЕСТЬ NULL 
	|				И НЕ ПриобретениеТоваровУслуг.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА ПриобретениеТоваровУслуг.СуммаСНДС
	|		КОГДА НЕ ПриобретениеУслугПрочихАктивов.Ссылка ЕСТЬ NULL 
	|				И НЕ ПриобретениеУслугПрочихАктивов.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА ПриобретениеУслугПрочихАктивов.СуммаСНДС
	|		КОГДА НЕ КорректировкаПриобретения.Ссылка ЕСТЬ NULL 
	|				И НЕ КорректировкаПриобретения.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА КорректировкаПриобретения.СуммаСНДС
	|		КОГДА НЕ ПередачаТоваровМеждуОрганизациями.Ссылка ЕСТЬ NULL 
	|				И НЕ ПередачаТоваровМеждуОрганизациями.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.СуммаСНДС
	|		КОГДА НЕ ВыкупВозвратнойТарыУПоставщика.Ссылка ЕСТЬ NULL 
	|				И НЕ ВыкупВозвратнойТарыУПоставщика.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА ВыкупВозвратнойТарыУПоставщика.СуммаСНДС
	|		КОГДА НЕ ОтчетКомиссионера.Ссылка ЕСТЬ NULL 
	|				И НЕ ОтчетКомиссионера.СтавкаНДСВознаграждения В (&СтавкиБезНДС)
	|			ТОГДА ОтчетКомиссионера.СуммаВознаграждения
	|		КОГДА НЕ ОтчетПоКомиссииМеждуОрганизациями.Ссылка ЕСТЬ NULL 
	|				И НЕ ОтчетПоКомиссииМеждуОрганизациями.СтавкаНДСВознаграждения В (&СтавкиБезНДС)
	|			ТОГДА ОтчетПоКомиссииМеждуОрганизациями.СуммаВознаграждения
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаДокументаСНДС
	|ИЗ
	|	втЗачетАвансов КАК ЗачетАвансов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслуг
	|	ПО
	|		ЗачетАвансов.Регистратор = ПриобретениеТоваровУслуг.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК ПриобретениеУслугПрочихАктивов
	|	ПО
	|		ЗачетАвансов.Регистратор = ПриобретениеУслугПрочихАктивов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПриобретения.Расхождения КАК КорректировкаПриобретения
	|	ПО
	|		ЗачетАвансов.Регистратор = КорректировкаПриобретения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ПередачаТоваровМеждуОрганизациями
	|	ПО
	|		ЗачетАвансов.Регистратор = ПередачаТоваровМеждуОрганизациями.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ВыкупВозвратнойТарыУПоставщика.Товары КАК ВыкупВозвратнойТарыУПоставщика
	|	ПО
	|		ЗачетАвансов.Регистратор = ВыкупВозвратнойТарыУПоставщика.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетКомитенту КАК ОтчетКомиссионера
	|	ПО
	|		ЗачетАвансов.Регистратор = ОтчетКомиссионера.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ОтчетПоКомиссииМеждуОрганизациями
	|	ПО
	|		ЗачетАвансов.Регистратор = ОтчетПоКомиссииМеждуОрганизациями.Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЗачетАвансов.Регистратор,
	|	ЗачетАвансов.Период,
	|	ЗачетАвансов.Организация,
	|	ЗачетАвансов.Покупатель,
	|	ЗачетАвансов.СчетФактура,
	|	ЗачетАвансов.ВидЦенности,
	|	ЗачетАвансов.ДокументОплаты,
	|	ЗачетАвансов.Событие,
	|	ЗачетАвансов.ДатаСобытия,
	|	ЗачетАвансов.СуммаЗачета,
	|	ЗачетАвансов.СуммаЗачетаУпр,
	|	ЗачетАвансов.ХозяйственнаяОперация,
	|	ЗачетАвансов.КодВидаОперации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор
	|";
	
	Результат = ЗапросДанныхДляРаспределения.ВыполнитьПакет();
	
	ТаблицаАванс = Результат[2].Выгрузить();
	ТаблицаАвансНачислениеНДС = Результат[3].Выгрузить();
	ТаблицаЗачетАванса = Результат[4].Выгрузить();
	ДатаПолучения = Запрос.Параметры.Период;
	НДСЗаписиКнигиПродаж = ВыполнитьЗачетАванса(ТаблицаАванс, ТаблицаАвансНачислениеНДС, ТаблицаЗачетАванса, ДатаПолучения);
	
	ЗапросВтНДСЗаписиКнигиПродаж = Новый Запрос;
	ЗапросВтНДСЗаписиКнигиПродаж.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтНДСЗаписиКнигиПродаж.УстановитьПараметр("НДСЗаписиКнигиПродаж", НДСЗаписиКнигиПродаж);
	ЗапросВтНДСЗаписиКнигиПродаж.Текст =
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС,
	|	НДСЗаписиКнигиПродаж.НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации
	|ПОМЕСТИТЬ ВтНДСЗаписиКнигиПродаж
	|ИЗ
	|	&НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж";
	
	ЗапросВтНДСЗаписиКнигиПродаж.Выполнить();
	
	Запрос.УстановитьПараметр("НДСЗаписиКнигиПродажИнициализирована", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьВтСуммыДляЖурналаУчетаСчетовФактур(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтСуммыДляЖурналаУчетаСчетовФактурИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур = Новый Запрос;
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАвансы.Ссылка          КАК Ссылка,
	|	СУММА(ТаблицаАвансы.Сумма)    КАК Сумма,
	|	СУММА(ТаблицаАвансы.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВтСуммыДляЖурналаУчетаСчетовФактур
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Авансы КАК ТаблицаАвансы
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(ТаблицаАвансы.Ссылка.ДокументОснование) <> ТИП(Документ.ПервичныйДокумент)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАвансы.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	СчетФактураПолученныйАванс.Ссылка КАК Ссылка,
	|	ПервичныйДокумент.СуммаРегл       КАК Сумма,
	|	0                                 КАК СуммаНДС
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПервичныйДокумент КАК ПервичныйДокумент
	|	ПО
	|		СчетФактураПолученныйАванс.ДокументОснование = ПервичныйДокумент.Ссылка
	|ГДЕ
	|	СчетФактураПолученныйАванс.Ссылка = &Ссылка
	|";
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.Выполнить();
	
	Запрос.УстановитьПараметр("ВтСуммыДляЖурналаУчетаСчетовФактурИнициализирована", Истина);

КонецПроцедуры

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтСуммыДляЖурналаУчетаСчетовФактур(Запрос);
	УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	-ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ИСТИНА КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|		&Период,
	|		НЕ Сторно
	|		И Регистратор <> &Ссылка
	|		И СчетФактура = &СчетФактураПредыдущееИсправление) КАК ЖурналУчетаСчетовФактур
	|
	|ГДЕ
	|	&Исправление
	|	И (ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия > 0)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                     КАК Период,
	|	&Организация                                                                КАК Организация,
	|	&Поставщик                                                                  КАК Контрагент,
	|	&Ссылка                                                                     КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаПолучения                                                              КАК ДатаВыставленияПолучения,
	|	ВЫБОР
	|		КОГДА &ПолученВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ                                                                       КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                                                            КАК КодВидаОперации,
	|	&Номер                                                                      КАК НомерСчетаФактуры,
	|	&Дата                                                                       КАК ДатаСчетаФактуры,
	|	NULL                                                                        КАК НомерКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаКорректировочногоСчетаФактуры,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &НомерИсправления 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                       КАК НомерИсправления,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &ДатаИсправления 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                       КАК ДатаИсправления,
	|	NULL                                                                        КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	
	|	ТаблицаПродавцы.Продавец                                                    КАК Продавец,
	|	ТаблицаПродавцы.ИННПродавца                                                 КАК ИННПродавца,
	|	ТаблицаПродавцы.КПППродавца                                                 КАК КПППродавца,
	|	0                                                                           КАК ИндексСтроки,
	|	&ВалютаРеглУчета                                                            КАК Валюта,
	|	
	|	СуммыДляЖурналаУчетаСчетовФактур.Сумма                                      КАК СуммаПоСчетуФактуре,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДС                                   КАК СуммаНДС,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                                                           КАК СуммаНДСРазницаУменьшение,
	|	0                                                                           КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                                                        КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                                                        КАК СчетФактураНеВыставляется,
	|	&ИННКонтрагента                                                             КАК ИННКонтрагента,
	|	&КППКонтрагента                                                             КАК КППКонтрагента,
	|	NULL                                                                        КАК Посредник,
	|	NULL                                                                        КАК СчетФактураВыданныйПокупателю,
	|	0                                                                           КАК СуммаПоСчетуФактуреКомиссия,
	|	0                                                                           КАК СуммаНДСКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	""""                                                                        КАК КодВидаОперацииКомиссия,
	|	""""                                                                        КАК КодВидаСделки,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки
	|
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСуммыДляЖурналаУчетаСчетовФактур КАК СуммыДляЖурналаУчетаСчетовФактур
	|	ПО
	|		СчетФактураПолученныйАванс.Ссылка = СуммыДляЖурналаУчетаСчетовФактур.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйАванс.Продавцы КАК ТаблицаПродавцы
	|	ПО
	|		СчетФактураПолученныйАванс.Ссылка = ТаблицаПродавцы.Ссылка
	|		И &СоставленКомиссионеромОтИмениПродавца
	|		И НЕ &СводныйКомиссионный
	|ГДЕ
	|	СчетФактураПолученныйАванс.Ссылка = &Ссылка
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                     КАК Период,
	|	&Организация                                                                КАК Организация,
	|	&Поставщик                                                                  КАК Контрагент,
	|	&Ссылка                                                                     КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаПолучения                                                              КАК ДатаВыставленияПолучения,
	|	ВЫБОР
	|		КОГДА &ПолученВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ                                                                       КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                                                            КАК КодВидаОперации,
	|	&Номер                                                                      КАК НомерСчетаФактуры,
	|	&Дата                                                                       КАК ДатаСчетаФактуры,
	|	NULL                                                                        КАК НомерКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаКорректировочногоСчетаФактуры,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &НомерИсправления 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                       КАК НомерИсправления,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &ДатаИсправления 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                       КАК ДатаИсправления,
	|	NULL                                                                        КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	
	|	Продавцы.Продавец                                                           КАК Продавец,
	|	Продавцы.ИННПродавца                                                        КАК ИННПродавца,
	|	Продавцы.КПППродавца                                                        КАК КПППродавца,
	|	Продавцы.НомерСтроки                                                        КАК ИндексСтроки,
	|	&ВалютаРеглУчета                                                            КАК Валюта,
	|	
	|	0                                                                           КАК СуммаПоСчетуФактуре,
	|	0                                                                           КАК СуммаНДС,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                                                           КАК СуммаНДСРазницаУменьшение,
	|	0                                                                           КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                                                        КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                                                        КАК СчетФактураНеВыставляется,
	|	&ИННКонтрагента                                                             КАК ИННКонтрагента,
	|	&КППКонтрагента                                                             КАК КППКонтрагента,
	|	NULL                                                                        КАК Посредник,
	|	NULL                                                                        КАК СчетФактураВыданныйПокупателю,
	|	0                                                                           КАК СуммаПоСчетуФактуреКомиссия,
	|	0                                                                           КАК СуммаНДСКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	""""                                                                        КАК КодВидаОперацииКомиссия,
	|	""""                                                                        КАК КодВидаСделки,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки
	|
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Продавцы КАК Продавцы
	|ГДЕ
	|	Продавцы.Ссылка = &Ссылка
	|	И &СоставленКомиссионеромОтИмениПродавца
	|	И &СводныйКомиссионный
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПокупок";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыРеквизитовПервичныхДокументов(Запрос);
	УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос);
	ИнициализироватьВтАвансы(Запрос);
	ИнициализироватьВтНДСЗаписиКнигиПродаж(Запрос);
	
#Область ТекстЗапросаИсправлениеСторно
	ТекстЗапросаИсправлениеСторно =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.ВидЦенности КАК ВидЦенности,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < НАЧАЛОПЕРИОДА(&Период, Квартал)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < НАЧАЛОПЕРИОДА(&Период, Квартал)
	|			ТОГДА НДСЗаписиКнигиПокупок.Период
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	&СчетФактураПредыдущееИсправление КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС КАК СтавкаНДС,
	|	-НДСЗаписиКнигиПокупок.СуммаБезНДС КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПокупок.НДС КАК НДС,
	|	-НДСЗаписиКнигиПокупок.НДСУпр КАК НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации КАК КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты КАК ДатаДокументаОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок 
	|ГДЕ
	|	&Исправление
	|	И НДСЗаписиКнигиПокупок.Регистратор <> &Ссылка
	|	И НДСЗаписиКнигиПокупок.Организация = &Организация
	|	И НДСЗаписиКнигиПокупок.Поставщик = &Поставщик
	|	И НДСЗаписиКнигиПокупок.СчетФактура = &ДокументОплаты
	|	И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление
	|	И НДСЗаписиКнигиПокупок.СуммаБезНДС > 0
	|";
#КонецОбласти
	
#Область ТекстЗапросаАвансы
	ТекстЗапросаАвансы = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Поставщик,
	|	&ДокументОплаты КАК СчетФактура,
	|	&ДатаОснования КАК ДатаОплаты,
	|	&ДокументОплаты КАК ДокументОплаты,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|	КОНЕЦ КАК ВидЦенности,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	NULL КАК КорректируемыйПериод,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИсправленныйСчетФактура,
	|	ТаблицаАвансы.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаАвансы.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаАвансы.НДС КАК НДС,
	|	ВЫБОР 
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаАвансы.НДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                      КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВычетНДССВыданногоАванса) КАК ХозяйственнаяОперация,
	|	"""" КАК КодВидаОперации,
	|	&НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	&ДатаДокументаОплаты КАК ДатаДокументаОплаты
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		втАвансы КАК ТаблицаАвансы
	|	ПО 
	|		ИСТИНА
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|";
#КонецОбласти
	
#Область ВычетСАванса
	ТекстЗапросаВычетСАванса =
	"ВЫБРАТЬ
	|	ТаблицаНДСЗаписиКнигиПокупок.Период,
	|	ТаблицаНДСЗаписиКнигиПокупок.Организация,
	|	ТаблицаНДСЗаписиКнигиПокупок.Покупатель КАК Поставщик,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученныеНалоговыйАгент) КАК ВидЦенности,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаСобытия,
	|	ТаблицаНДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	ТаблицаНДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	ТаблицаНДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.СтавкаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВычетНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	""43"" КАК КодВидаОперации,
	|	ТаблицаНДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаДокументаОплаты
	|ИЗ
	|	ВтНДСЗаписиКнигиПродаж КАК ТаблицаНДСЗаписиКнигиПокупок
	|ГДЕ
	|	&НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|";
#КонецОбласти
	
	
	ТекстЗапроса = ТекстЗапросаИсправлениеСторно 
		+ Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" 
		+ Символы.ПС + ТекстЗапросаАвансы
		+ Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" 
		+ Символы.ПС + ТекстЗапросаВычетСАванса;
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыРеквизитовПервичныхДокументов(Запрос);
	УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос);
	ИнициализироватьВтАвансы(Запрос);
	ИнициализироватьВтНДСЗаписиКнигиПродаж(Запрос);
	
#Область СторноИсправление
	ТекстЗапросаСторноИсправление = "
	|
	|ВЫБРАТЬ
	|	&Период                                           КАК Период,
	|	&Организация                                      КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель                   КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура                  КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности                  КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС                    КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты                   КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты               КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                      КАК Событие,
	|	&Период                                           КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ                                             КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|	КОНЕЦ                                             КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ                                             КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	&Исправление                                      КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	-НДСЗаписиКнигиПродаж.СуммаБезНДС                 КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПродаж.НДС                         КАК НДС,
	|	-НДСЗаписиКнигиПродаж.НДСУпр                      КАК НДСУпр,
	|	Значение(Перечисление.ХозяйственныеОперации.НачислениеНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|	""""                                              КАК КодВидаОперации
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	&Исправление
	|	И &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|	И НДСЗаписиКнигиПродаж.Регистратор <> &Ссылка
	|	И Организация = &Организация
	|	И СчетФактура = &ДокументОплаты
	|	И ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление
	|	И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПолученАванс)
	|	И (НДСЗаписиКнигиПродаж.СуммаБезНДС > 0 ИЛИ НДСЗаписиКнигиПродаж.НДС > 0)
	|";
#КонецОбласти

#Область ТекстЗапросаАвансы
	ТекстЗапросаАвансы =
	"ВЫБРАТЬ
	|	ВЫБОР 
	|		КОГДА &Исправление 
	|			ТОГДА &Период
	|		ИНАЧЕ &ДатаОснования
	|	КОНЕЦ                                                      КАК Период,
	|	&Организация                                               КАК Организация,
	|	&Поставщик                                                 КАК Покупатель,
	|	&ДокументОплаты                                            КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученныеНалоговыйАгент)
	|	                                                           КАК ВидЦенности,
	|	ТаблицаАвансы.СтавкаНДС                                    КАК СтавкаНДС,
	|	&ДатаОснования                                             КАК ДатаОплаты,
	|	&ДокументОплаты                                            КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПолученАванс)    КАК Событие,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|		ИНАЧЕ &ДатаОснования
	|	КОНЕЦ                                                      КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА &Исправление И НАЧАЛОПЕРИОДА(&ДатаСчетаФактурыОснования, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                      КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА &Исправление И НАЧАЛОПЕРИОДА(&ДатаСчетаФактурыОснования, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА &ДатаСчетаФактурыОснования
	|	КОНЕЦ                                                      КАК КорректируемыйПериод,
	|	ЛОЖЬ                                                       КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО                                               КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка 
	|	КОНЕЦ                                                      КАК ИсправленныйСчетФактура,
	|	&Исправление                                               КАК Исправление,
	|	НЕОПРЕДЕЛЕНО                                               КАК ДатаСчетаФактурыКомиссионера,
	|	ТаблицаАвансы.СуммаБезНДС                                  КАК СуммаБезНДС,
	|	ТаблицаАвансы.НДС                                          КАК НДС,
	|	ВЫБОР 
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаАвансы.НДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                      КАК НДСУпр,
	|	Значение(Перечисление.ХозяйственныеОперации.НачислениеНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	&НомерДокументаОплаты                                      КАК НомерДокументаОплаты,
	|	&ДатаДокументаОплаты                                       КАК ДатаДокументаОплаты,
	|	""""                                                       КАК КодВидаОперации
	|	
	|ИЗ
	|	втАвансы КАК ТаблицаАвансы
	|	
	|ГДЕ
	|	&НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)";
	
#КонецОбласти
	
#Область ТекстЗапросаВосстановление
	ТекстЗапросаВосстановление =
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС,
	|	НДСЗаписиКнигиПродаж.НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации
	|ИЗ
	|	ВтНДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|";
#КонецОбласти
	
	
	ТекстЗапроса = ТекстЗапросаСторноИсправление
		+ Символы.ПС + " ОБЪЕДИНИТЬ ВСЕ " + Символы.ПС + ТекстЗапросаАвансы
		+ Символы.ПС + " ОБЪЕДИНИТЬ ВСЕ " + Символы.ПС + ТекстЗапросаВосстановление;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	ВЫБОР ТИПЗНАЧЕНИЯ(&ДокументОплаты)
	|		КОГДА ТИП(Документ.ВводОстатков)
	|			ТОГДА ВЫБОР ВЫРАЗИТЬ(ДанныеДокумента.ДокументОснование КАК Документ.ВводОстатков).ТипОперации
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
	|				КОНЕЦ
	|		КОГДА ТИП(Документ.ПервичныйДокумент)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
	|		КОГДА ТИП(Документ.АвансовыйОтчет)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АвансовыйОтчет)
	|		КОГДА ТИП(Документ.ВзаимозачетЗадолженности)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|		КОГДА ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|		КОГДА ТИП(Документ.ВозвратТоваровПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|		КОГДА ТИП(Документ.РасходныйКассовыйОрдер)
	|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.ДокументОснование КАК Документ.РасходныйКассовыйОрдер).ХозяйственнаяОперация
	|		КОГДА ТИП(Документ.СписаниеБезналичныхДенежныхСредств)
	|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.ДокументОснование КАК Документ.СписаниеБезналичныхДенежныхСредств).ХозяйственнаяОперация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
	|	КОНЕЦ                                   КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ДокументОснование.Партнер
	|	                                        КАК Партнер,
	|	&Контрагент                             КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(&ДокументОплаты) = ТИП(Документ.ВозвратТоваровПоставщику)
	|				ИЛИ ТИПЗНАЧЕНИЯ(&ДокументОплаты) = ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Договор, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                   КАК Договор,
	|	ДанныеДокумента.ДокументОснование.НаправлениеДеятельности
	|	                                        КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ДокументОснование.Склад КАК МестоХранения,
	|	&Подразделение                          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&ВалютаРеглУчета                        КАК Валюта,
	|	&Сумма                                  КАК Сумма,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&ИнформацияПоИсправлению                КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.СчетФактураПолученныйАванс";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоИсправлению", """""");
	ПереопределениеРасчетаПараметров.Вставить("ДокументОплаты", "ДанныеДокумента.ДокументОснование");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	ЗначенияПараметров.Вставить("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", 	ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", 		ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ВыполнитьЗачетАванса(ТаблицаАванс, ТаблицаАвансНачислениеНДС, ТаблицаЗачетАванса, ДатаПолучения)
	
	ТаблицаЗаписиКнигиПродаж = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаЗаписиКнигиПродаж.Колонки.Удалить("Активность");
	
	АвансМассивСуммаБезНДС = Новый Массив();
	АвансМассивСуммаНДС = Новый Массив();
	АвансМассивСуммаНДСУпр = Новый Массив();
	
	АвансСуммаБезНДС    = 0;
	АвансСуммаНДС       = 0;
	АвансСуммаСНДС      = 0;
	АвансСуммаБезНДСУпр = 0;
	АвансСуммаНДСУпр    = 0;
	АвансСуммаСНДСУпр   = 0;
	
	Для Каждого СтрокаАванса Из ТаблицаАвансНачислениеНДС Цикл
		АвансМассивСуммаБезНДС.Добавить(СтрокаАванса.СуммаБезНДС);
		АвансМассивСуммаНДС.Добавить(СтрокаАванса.НДС);
		АвансМассивСуммаНДСУпр.Добавить(СтрокаАванса.НДСУпр);
		
		АвансСуммаБезНДС = АвансСуммаБезНДС + СтрокаАванса.СуммаБезНДС;
		АвансСуммаНДС = АвансСуммаНДС + СтрокаАванса.НДС;
		АвансСуммаСНДС = АвансСуммаСНДС + СтрокаАванса.СуммаБезНДС + СтрокаАванса.НДС;
		АвансСуммаБезНДСУпр = АвансСуммаБезНДСУпр + СтрокаАванса.СуммаБезНДСУпр;
		АвансСуммаНДСУпр    = АвансСуммаНДСУпр + СтрокаАванса.НДСУпр;
		АвансСуммаСНДСУпр   = АвансСуммаСНДСУпр + СтрокаАванса.СуммаБезНДСУпр + СтрокаАванса.НДСУпр;
	КонецЦикла; 
	
	НезачтеннаяСуммаАванса = ТаблицаАванс.Итог("Аванс");
	НезачтеннаяСуммаАвансаУпр = ТаблицаАванс.Итог("АвансУпр");
	
	Для Каждого ПогашенныйАвансПоСФ Из ТаблицаЗачетАванса Цикл
		
		Если АвансСуммаСНДС = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НезачтеннаяСуммаАванса = НезачтеннаяСуммаАванса - ПогашенныйАвансПоСФ.СуммаЗачета;
		НезачтеннаяСуммаАвансаУпр = НезачтеннаяСуммаАвансаУпр - ПогашенныйАвансПоСФ.СуммаЗачетаУпр;
		
		Если ПогашенныйАвансПоСФ.ЕстьДокументЗачетаАванса Тогда
			// Определим по пропорции сумму зачета, которая относится к поступлению с НДС.
			Коэффициенты = Новый Массив;
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.СуммаДокументаСНДС);
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.СуммаДокументаБезНДС);
			РаспределениеСуммыЗачета = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
											ПогашенныйАвансПоСФ.СуммаЗачета,
											Коэффициенты);
			РаспределениеСуммыЗачетаУпр = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
											ПогашенныйАвансПоСФ.СуммаЗачетаУпр,
											Коэффициенты);
			СуммаЗачета = РаспределениеСуммыЗачета[0];
			СуммаЗачетаУпр = ?(ПогашенныйАвансПоСФ.СуммаЗачетаУпр > 0, РаспределениеСуммыЗачетаУпр[0], 0);
		Иначе
			СуммаЗачета = ПогашенныйАвансПоСФ.СуммаЗачета;
			СуммаЗачетаУпр = ПогашенныйАвансПоСФ.СуммаЗачетаУпр;
		КонецЕсли;
		
		Если ПогашенныйАвансПоСФ.Период >= ДатаПолучения Тогда
			СуммаСНДС = Мин(СуммаЗачета, АвансСуммаСНДС);
			СуммаСНДСУпр = Мин(СуммаЗачетаУпр, АвансСуммаСНДСУпр);
			ДатаЗачетаАванса = ПогашенныйАвансПоСФ.Период;
		Иначе
			СуммаСНДС = 0;
			СуммаСНДСУпр = 0;
			ДатаЗачетаАванса = ДатаПолучения;
		КонецЕсли;
		
		ОстатокСуммыАвансаСНДС = (АвансСуммаСНДС - СуммаСНДС);
		Если ОстатокСуммыАвансаСНДС > НезачтеннаяСуммаАванса Тогда
			// Откорректируем сумму, с которой выполняется восстановление с учетом остатка незачтенного аванса.
			СуммаСНДС = СуммаСНДС + (ОстатокСуммыАвансаСНДС - НезачтеннаяСуммаАванса);
		КонецЕсли;
		ОстатокСуммыАвансаСНДСУпр = (АвансСуммаСНДСУпр - СуммаСНДСУпр);
		Если ОстатокСуммыАвансаСНДСУпр > НезачтеннаяСуммаАвансаУпр Тогда
			// Откорректируем сумму, с которой выполняется восстановление с учетом остатка незачтенного аванса.
			СуммаСНДСУпр = СуммаСНДСУпр + (ОстатокСуммыАвансаСНДСУпр - НезачтеннаяСуммаАвансаУпр);
		КонецЕсли;
		
		Если СуммаСНДС = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаБезНДС = Окр(АвансСуммаБезНДС * СуммаСНДС / АвансСуммаСНДС, 2);
		СуммаНДС = СуммаСНДС - СуммаБезНДС;
		СуммаБезНДСУпр = Окр(АвансСуммаБезНДСУпр * СуммаСНДСУпр / АвансСуммаСНДСУпр, 2);
		СуммаНДСУпр = СуммаСНДСУпр - СуммаБезНДСУпр;
		
		АвансСуммаБезНДС = АвансСуммаБезНДС - СуммаБезНДС;
		АвансСуммаСНДС   = АвансСуммаСНДС - СуммаСНДС;
		АвансСуммаБезНДСУпр = АвансСуммаБезНДСУпр - СуммаБезНДСУпр;
		АвансСуммаСНДСУпр   = АвансСуммаСНДСУпр - СуммаСНДСУпр;

		Если СуммаБезНДС > 0 Тогда
			МассивСуммаБезНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаБезНДС, АвансМассивСуммаБезНДС);
		КонецЕсли;
		
		Если СуммаНДС > 0 Тогда
			МассивСуммаНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаНДС, АвансМассивСуммаНДС);
		КонецЕсли;
		
		Если СуммаНДСУпр > 0 Тогда
			МассивСуммаНДСУпр = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаНДСУпр, АвансМассивСуммаНДСУпр);
		КонецЕсли;
		
		Счетчик = 0;
		
		//Зачет аванса - записи книги продаж
		Для Каждого СтрокаАванса Из ТаблицаАвансНачислениеНДС Цикл
			
			Если ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик], 0) = 0 
				И ?(СуммаНДСУпр > 0, МассивСуммаНДСУпр[Счетчик], 0) = 0
				И ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0) = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			СтрокаРезультата = ТаблицаЗаписиКнигиПродаж.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, ПогашенныйАвансПоСФ);
			СтрокаРезультата.Период         = ДатаЗачетаАванса;
			СтрокаРезультата.СчетФактура	= СтрокаАванса.СчетФактура;
			СтрокаРезультата.Покупатель		= СтрокаАванса.Поставщик;
			СтрокаРезультата.СтавкаНДС		= СтрокаАванса.СтавкаНДС;
			СтрокаРезультата.ДатаОплаты		= СтрокаАванса.ДатаОплаты;

			СтрокаРезультата.СуммаБезНДС	= ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик],0);
			СтрокаРезультата.НДС			=  ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик],0);
			Если УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.УправленческийУчетОрганизаций(СтрокаРезультата.Период) Тогда
				СтрокаРезультата.НДСУпр			=  ?(СуммаНДСУпр > 0, МассивСуммаНДСУпр[Счетчик],0);
			Иначе
				СтрокаРезультата.НДСУпр = 0;
			КонецЕсли;
			
			Счетчик = Счетчик + 1;
			
		КонецЦикла; 
	КонецЦикла;
	
	Возврат ТаблицаЗаписиКнигиПродаж;
	
КонецФункции

Функция ПредыдущийСчетФактураИсправление(СчетФактураОснование, НомерИсправления)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка           КАК ИсправленныйСчетФактура,
	|	СчетФактура.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактура
	|ГДЕ
	|	СчетФактура.СчетФактураОснование = &СчетФактураОснование
	|	И СчетФактура.Проведен
	|	И СчетФактура.Исправление
	|	И СчетФактура.НомерИсправления <> &НомерИсправления
	|";
	Запрос.УстановитьПараметр("СчетФактураОснование", СчетФактураОснование);
	Запрос.УстановитьПараметр("НомерИсправления",     НомерИсправления);
	
	ПредыдущийНомер = 0;
	ИсправленныйСчетФактура = Неопределено;
	Если Не ЗначениеЗаполнено(НомерИсправления) Тогда
		НомерИсправленияЧислом = 0;
	Иначе
		НомерИсправленияЧислом = Число(НомерИсправления);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерИзВыборки = Число(Выборка.НомерИсправления);
		Если НомерИзВыборки < НомерИсправленияЧислом
			И НомерИзВыборки > ПредыдущийНомер Тогда
			ПредыдущийНомер = НомерИзВыборки;
			ИсправленныйСчетФактура = Выборка.ИсправленныйСчетФактура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИсправленныйСчетФактура;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураПолученныйАванс) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ полученные (аванс)'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры полученные (аванс)'");
	КонецЕсли;	
	
	КоличествоДокументов = ЕстьСчетаФактурыКОформлению(Параметры);
	
	Если КоличествоДокументов = 0 Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураПолученныйАванс());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураПолученныйАванс());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураПолученныйАванс() Экспорт
	
	Возврат "Документ.СчетФактураПолученныйАванс.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УТ 11.3.4
// Процедура заполняет новый реквизит НалогообложениеНДС значением по умолчанию
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗаполнитьПустойРеквизитЗначениемПоУмолчаниюЗарегистрироватьДанныеКОбработке(
		Параметры,
		"Документ.СчетФактураПолученныйАванс",
		"НалогообложениеНДС");
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗаполнитьПустойРеквизитЗначениемПоУмолчанию(
		Параметры, 
		"Документ.СчетФактураПолученныйАванс",
		"НалогообложениеНДС",
		Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
