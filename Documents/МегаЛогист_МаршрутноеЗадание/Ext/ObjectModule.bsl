#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	ИспользоватьАдресаПартнеров=Константы.МегаЛогист_ИспользоватьАдресаПартнеров.Получить();
	СообщениеДатыДоставки="Укажите необходимую дату доставки вручную";
	
	///////////////////////////////////////////
	//Мироненко Д.С 27.11.2017 10:10:29 НАЧАЛО
	//Комментарий: 
	// silber { ошибка если это не заказ
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ЗаказКлиента") Тогда
	// } silber
		ЗаполнитьТребования(ДанныеЗаполнения);
	КонецЕсли;
	//Мироненко Д.С 27.11.2017 10:10:34 КОНЕЦ
	///////////////////////////////////////////
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
				
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ЗаказКлиента") тогда
		
		ДокументОснование = ДанныеЗаполнения;
		Контрагент=?(ИспользоватьАдресаПартнеров,ДанныеЗаполнения.Партнер,ДанныеЗаполнения.Контрагент);
		
		Если ДанныеЗаполнения.СпособДоставки=Перечисления.СпособыДоставки.ДоКлиента тогда
			ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.ДоставкаДоКлиента;
		ИначеЕсли ДанныеЗаполнения.СпособДоставки=Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу тогда
			ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.ДоставкаВТК;
			Контрагент=ДанныеЗаполнения.ПеревозчикПартнер;
		иначе
			ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.Прочее;	
		КонецЕсли;
		Если ДанныеЗаполнения.НеОтгружатьЧастями тогда
			ДатаДоставки=ДанныеЗаполнения.ДатаОтгрузки;
		КонецЕсли;
		СообщениеДатыДоставки="В исходном документе присутствуют несколько дат отгрузки, укажите необходимую дату доставки вручную";
		ВремяДоставкиС=ДанныеЗаполнения.ВремяДоставкиС;
		ВремяДоставкиПо=ДанныеЗаполнения.ВремяДоставкиПо;
		
		Если ДанныеЗаполнения.СпособДоставки=Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу тогда
			АдресДоставки=ДанныеЗаполнения.АдресДоставкиПеревозчика;
		иначе
			АдресДоставки=ДанныеЗаполнения.АдресДоставки;
		КонецЕсли;		
		КомментарийКДоставке=ДанныеЗаполнения.ДополнительнаяИнформацияПоДоставке;
		
		Если НЕ ЗначениеЗаполнено(ДатаДоставки) тогда		
			Сообщить(СообщениеДатыДоставки);	
		КонецЕсли;
		
		Статус=Перечисления.МегаЛогист_СтатусыМаршрутногоЗадания.КРаспределению;
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ЗаказПоставщику") тогда
		
		ДокументОснование = ДанныеЗаполнения;
		Контрагент=?(ИспользоватьАдресаПартнеров,ДанныеЗаполнения.Партнер,ДанныеЗаполнения.Контрагент);
		
		ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.ЗаборУПоставщика;
		Если ДанныеЗаполнения.ПоступлениеОднойДатой тогда
			ДатаДоставки=ДанныеЗаполнения.ДатаПоступления;
		КонецЕсли;
		СообщениеДатыДоставки="В исходном документе присутствуют несколько дат отгрузки, укажите необходимую дату доставки вручную";
		АдресДоставки=МегаЛогист_Общий.ПолучитьАдресИзКонтактнойИнформации(Контрагент,"Доставки");
		КомментарийКДоставке=ДанныеЗаполнения.Комментарий;
		
		Если НЕ ЗначениеЗаполнено(ДатаДоставки) тогда		
			Сообщить(СообщениеДатыДоставки);	
		КонецЕсли;
		
		Статус=Перечисления.МегаЛогист_СтатусыМаршрутногоЗадания.КРаспределению;
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") тогда
		
		ДокументОснование = ДанныеЗаполнения;
		Контрагент=?(ИспользоватьАдресаПартнеров,ДанныеЗаполнения.Партнер,ДанныеЗаполнения.Контрагент);
		
		ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.Прочее;
		КомментарийКДоставке=ДанныеЗаполнения.Комментарий;
		
		Если НЕ ЗначениеЗаполнено(ДатаДоставки) тогда		
			Сообщить(СообщениеДатыДоставки);	
		КонецЕсли;
	
		Статус=Перечисления.МегаЛогист_СтатусыМаршрутногоЗадания.КРаспределению;
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ВозвратТоваровПоставщику") тогда
		
		ДокументОснование = ДанныеЗаполнения;
		Контрагент=?(ИспользоватьАдресаПартнеров,ДанныеЗаполнения.Партнер,ДанныеЗаполнения.Контрагент);
		
		ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.Прочее;
		КомментарийКДоставке=ДанныеЗаполнения.Комментарий;

		Если НЕ ЗначениеЗаполнено(ДатаДоставки) тогда		
			Сообщить(СообщениеДатыДоставки);	
		КонецЕсли;
	
		Статус=Перечисления.МегаЛогист_СтатусыМаршрутногоЗадания.КРаспределению;
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПеремещениеТоваров") тогда
		
		ДокументОснование = ДанныеЗаполнения;
		ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.ПеремещениеТовара;
		//Контроль дат доставки
		ТЗДат=ДанныеЗаполнения.ЗаказНаПеремещение.Товары.Выгрузить(,"НачалоОтгрузки");
		ТЗДат.Свернуть("НачалоОтгрузки");
		Если ТЗДат.Количество()=1 тогда
			ДатаДоставки=ТЗДат[0].НачалоОтгрузки;
		КонецЕсли;
		СообщениеДатыДоставки="В исходном документе присутствуют несколько дат отгрузки, укажите необходимую дату доставки вручную";
		ВремяДоставкиС=ДанныеЗаполнения.ВремяДоставкиС;
		ВремяДоставкиПо=ДанныеЗаполнения.ВремяДоставкиПо;
		
		Если ДанныеЗаполнения.СпособДоставки=Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу тогда
			АдресДоставки=ДанныеЗаполнения.АдресДоставкиПеревозчика;
		иначе
			АдресДоставки=ДанныеЗаполнения.АдресДоставки;
		КонецЕсли;		
		КомментарийКДоставке=ДанныеЗаполнения.ДополнительнаяИнформацияПоДоставке;
		
		Если НЕ ЗначениеЗаполнено(ДатаДоставки) тогда		
			Сообщить(СообщениеДатыДоставки);	
		КонецЕсли;
		
		Статус=Перечисления.МегаЛогист_СтатусыМаршрутногоЗадания.КРаспределению;
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Контрагент) тогда
		Если Контрагент.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ФизЛицо
			или Контрагент.ЮрФизЛицо=Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо тогда
			КонтактноеЛицо=Контрагент.Наименование + " тел.:"
			+ ФормированиеПечатныхФорм.ПолучитьТелефонИзКонтактнойИнформации(Контрагент);
		иначе
			КонтактноеЛицо=ДанныеЗаполнения.КонтактноеЛицо.Наименование + " тел.:"
			+ МегаЛогист_Общий.ПолучитьТелефонИзКонтактнойИнформации(ДанныеЗаполнения.КонтактноеЛицо);
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.ДоставкаВТК тогда
		мКонтактноеЛицо=МегаЛогист_Общий.ПолучитьКонтактноеЛицо(ДанныеЗаполнения.ПеревозчикПартнер);
		КонтактноеЛицо=мКонтактноеЛицо.Наименование + " тел.:"
			+ МегаЛогист_Общий.ПолучитьТелефонИзКонтактнойИнформации(мКонтактноеЛицо);
	КонецЕсли;
		
	ИнициализироватьДокумент(ДанныеЗаполнения);
    	
КонецПроцедуры

#КонецОбласти


#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный             = Пользователи.ТекущийПользователь();	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	///////////////////////////////////////////
	//Мироненко Д.С 27.11.2017 10:26:29 НАЧАЛО
	//Комментарий: 
	
	ДвижениеПоРегиструТребований();
	
	//Мироненко Д.С 27.11.2017 10:26:31 КОНЕЦ
	///////////////////////////////////////////
	
	// silber {
	
	ПровестиПоРегистрам(Отказ);
	
	// } silber
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	///////////////////////////////////////////
	//Мироненко Д.С 27.11.2017 10:23:31 НАЧАЛО
	//Комментарий: 
	
	УдалениеТребований(Ссылка);
	
	//Мироненко Д.С 27.11.2017 10:23:32 КОНЕЦ
	///////////////////////////////////////////
КонецПроцедуры
///////////////////////////////////////////
//Мироненко Д.С 27.11.2017 10:01:01 НАЧАЛО
//Комментарий: Процедура заполнения требований

Процедура ЗаполнитьТребования(ДанныеЗаполнения)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Мегалогист_ТребованияКЗаказам.Требование
	|ИЗ
	|	РегистрСведений.Мегалогист_ТребованияКЗаказам КАК Мегалогист_ТребованияКЗаказам
	|ГДЕ
	|	Мегалогист_ТребованияКЗаказам.Заказ = &Заказ";
	
	Запрос.УстановитьПараметр("Заказ", ДанныеЗаполнения);
	
	Результат = Запрос.Выполнить();
	ТребованияКТС.Загрузить(Результат.Выгрузить());
	

КонецПроцедуры

Процедура УдалениеТребований(СсылкаНаДокумент)

	НаборЗаписей = РегистрыСведений.Мегалогист_ТребованияКЗаказам.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Заказ.Значение 		= СсылкаНаДокумент;
	НаборЗаписей.Отбор.Заказ.Использование 	= Истина;
	
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура ДвижениеПоРегиструТребований()

	НаборЗаписей = РегистрыСведений.Мегалогист_ТребованияКЗаказам.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Заказ.Значение 		= Ссылка;
	НаборЗаписей.Отбор.Заказ.Использование 	= Истина;
	
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	ТребованияКТС.Свернуть("Требование");
	Для каждого СтрокаТЧ Из ТребованияКТС Цикл
		НоваяСтрока = НаборЗаписей.Добавить();
		НоваяСтрока.Заказ = Ссылка;
		НоваяСтрока.Требование = СтрокаТЧ.Требование;
	КонецЦикла;
	НаборЗаписей.Записать();


КонецПроцедуры


//Мироненко Д.С 27.11.2017 10:01:39 КОНЕЦ
///////////////////////////////////////////

#КонецОбласти

// silber {

Процедура ПровестиПоРегистрам(Отказ)
	
	// Раскидывает задания по партнерам
	// партнера вытаскивает из документа основания
	// если не вытащит тогда возмет из шапки
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ						Статус,
	|	&Дата								Период,
	|	ДокументОснование.ЗаказКлиента.ПеревозчикПартнер ТК,
	|	ЕСТЬNULL(СвязьКП.КП.Партнер, ЕСТЬNULL(ДокументОснование.Партнер, Контрагент.Партнер)) Партнер,
	|	Ссылка								МаршрутноеЗадание,
	|	ДокументОснование					Документ,
	|	ДокументОснование.СуммаДокумента	СуммаДокумента
	|ИЗ
	|	Документ.МегаЛогист_МаршрутноеЗадание Зад
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АТ_СвязьОбъектовКП СвязьКП
	|ПО	Зад.ДокументОснование ССЫЛКА Документ.ПеремещениеТоваров И 
	|	Зад.ДокументОснование = СвязьКП.ДокументРезультат
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|");
	
	Запрос.УстановитьПараметр("Дата", 	Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Движения.АТ_МаршрутныеЗадания.Загрузить(Запрос.Выполнить().Выгрузить());
	Движения.АТ_МаршрутныеЗадания.Записывать = Истина;
	
КонецПроцедуры

// } silber