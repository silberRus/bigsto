
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//АТ Терентьев
	//ВводНаОсновании.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюСоздатьНаОсновании);
	
	//АТ Терентьев
	//МенюОтчеты.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюОтчеты);
	
	ДоставкаТоваровКлиентСервер.ЗаполнитьСписокВыбораПоляВремени(Элементы.ВремяДоставкиС);
	ДоставкаТоваровКлиентСервер.ЗаполнитьСписокВыбораПоляВремени(Элементы.ВремяДоставкиПо);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;
	
	// silber { Нам нужно знать кто ответственный за это
	
	Осн = Объект.ДокументОснование;
	Если 	ЗначениеЗаполнено(Осн) И 
			Осн.Метаданные().Реквизиты.Найти("Менеджер") <> Неопределено И 
			ЗначениеЗаполнено(Осн.Менеджер) Тогда
			
		Менеджер = Осн.Менеджер;
		Элементы.Менеджер.Видимость = Истина;
		
	КонецЕсли;
	
	// склад и зона доставки только если нет документа основания
	
	видХозНужд = Не ЗначениеЗаполнено(Объект.ДокументОснование);
	Элементы.АТ_ЗонаДоставки.Видимость 	= видХозНужд;
	Элементы.АТ_Склад.Видимость 		= видХозНужд;
	
	// } silber
	
	//Заполнение исходного статуса
	ИсходныйСтатус 	= Объект.Статус;
	ИсходноеВремя 	= "" + Объект.ВремяДоставкиС + Объект.ВремяДоставкиПо;
	ИсходныйКоммент = Объект.КомментарийКДоставке;
	ИсходныйАдрес 	= Объект.АдресДоставки;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяРеквизитаАдресаДоставки = "АдресДоставки";
	
	ДоставкаТоваровКлиент.ОткрытьФормуВыбораАдресаИОбработатьРезультат(
	Элемент,
	Объект,
	ИмяРеквизитаАдресаДоставки,
	СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()	
	
	Элементы.ВкладкаИнформацияДляПечати.Картинка = ОбщегоНазначения.ПолучитьКартинкуКомментария(Объект.КомментарийКДоставке);
	ЗаполнитьДанныеФормы();
	
КонецПроцедуры

Процедура ОбновитьВесОбъем()
	
	Вес=0;
	Объем=0;
	Для Каждого СтрокаТовара из Товары цикл
		КоличествоКгВЕдиницеИзмеренияВеса = ?(СтрокаТовара.Номенклатура.ВесЕдиницаИзмерения.Знаменатель=0,СтрокаТовара.Номенклатура.ВесЕдиницаИзмерения.Числитель,СтрокаТовара.Номенклатура.ВесЕдиницаИзмерения.Числитель / СтрокаТовара.Номенклатура.ВесЕдиницаИзмерения.Знаменатель);		
		СтрокаТовара.Вес=?(СтрокаТовара.Номенклатура.ВесЗнаменатель=0,СтрокаТовара.Номенклатура.ВесЧислитель,СтрокаТовара.Номенклатура.ВесЧислитель/СтрокаТовара.Номенклатура.ВесЗнаменатель)*СтрокаТовара.Количество*КоличествоКгВЕдиницеИзмеренияВеса;
			
		ОбъемВЕдиницеИзмеренияВеса = ?(СтрокаТовара.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель=0,СтрокаТовара.Номенклатура.ОбъемЕдиницаИзмерения.Числитель,СтрокаТовара.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / СтрокаТовара.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель);		
		СтрокаТовара.Объем=?(СтрокаТовара.Номенклатура.ОбъемЗнаменатель=0,СтрокаТовара.Номенклатура.ОбъемЧислитель,СтрокаТовара.Номенклатура.ОбъемЧислитель/СтрокаТовара.Номенклатура.ОбъемЗнаменатель)*СтрокаТовара.Количество*ОбъемВЕдиницеИзмеренияВеса;
				
		Вес=Вес+СтрокаТовара.Вес;
		Объем=Объем+СтрокаТовара.Объем;
	КонецЦикла;
	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьДанныеФормы()
	
	Товары.Очистить();
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Объект.ДокументОснование.Проведен тогда
		Возврат;
	КонецЕсли;	
	
	НомерСтроки=1;
	СтруктураПоиска=Новый Структура("Номенклатура,Характеристика,Упаковка,Цена");
		
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ЗаказКлиента") Тогда		
		
		Для Каждого СтрокаТЧ из Объект.ДокументОснование.Товары цикл
			
			Если СтрокаТЧ.Отменено тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаТЧ.ДатаОтгрузки<>Объект.ДатаДоставки тогда
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТЧ);
			НайденныеСтроки = Товары.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество()>0 тогда
				НайденнаяСтрока=НайденныеСтроки[0];
				НайденнаяСтрока.Количество=НайденнаяСтрока.Количество+СтрокаТЧ.Количество;
				НайденнаяСтрока.Сумма=НайденнаяСтрока.Сумма+СтрокаТЧ.Сумма;
			иначе						
				НоваяСтрока=Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
				НоваяСтрока.НомерСтроки=НомерСтроки;
				НомерСтроки=НомерСтроки+1;
			КонецЕсли;	
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		Для Каждого СтрокаТЧ из Объект.ДокументОснование.Товары цикл
			
			Если СтрокаТЧ.Отменено тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаТЧ.ДатаПоступления<>Объект.ДатаДоставки тогда
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТЧ);
			НайденныеСтроки = Товары.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество()>0 тогда
				НайденнаяСтрока=НайденныеСтроки[0];
				НайденнаяСтрока.Количество=НайденнаяСтрока.Количество+СтрокаТЧ.Количество;
				НайденнаяСтрока.Сумма=НайденнаяСтрока.Сумма+СтрокаТЧ.Сумма;
			иначе						
				НоваяСтрока=Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
				НоваяСтрока.НомерСтроки=НомерСтроки;
				НомерСтроки=НомерСтроки+1;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
						
		Для Каждого СтрокаТЧ из Объект.ДокументОснование.ЗаказНаПеремещение.Товары цикл		
			
			Если СтрокаТЧ.Отменено тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаТЧ.НачалоОтгрузки<>Объект.ДатаДоставки тогда
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТЧ);
			НайденныеСтроки = Товары.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество()>0 тогда
				НайденнаяСтрока=НайденныеСтроки[0];
				НайденнаяСтрока.Количество=НайденнаяСтрока.Количество+СтрокаТЧ.Количество;
				НайденнаяСтрока.Сумма=НайденнаяСтрока.Сумма+СтрокаТЧ.Сумма;
			иначе						
				НоваяСтрока=Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
				НоваяСтрока.НомерСтроки=НомерСтроки;
				НомерСтроки=НомерСтроки+1;
			КонецЕсли;			
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")
		или ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
		или ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Для Каждого СтрокаТЧ из Объект.ДокументОснование.Товары цикл
			
			Если Объект.ДокументОснование.Дата<>Объект.ДатаДоставки тогда
				Продолжить;
			КонецЕсли;

			ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТЧ);
			НайденныеСтроки = Товары.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество()>0 тогда
				НайденнаяСтрока=НайденныеСтроки[0];
				НайденнаяСтрока.Количество=НайденнаяСтрока.Количество+СтрокаТЧ.Количество;
				НайденнаяСтрока.Сумма=НайденнаяСтрока.Сумма+СтрокаТЧ.Сумма;
			иначе						
				НоваяСтрока=Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
				НоваяСтрока.НомерСтроки=НомерСтроки;
				НомерСтроки=НомерСтроки+1;
			КонецЕсли;
			
		КонецЦикла;
	
		
	КонецЕсли;
	
	ОбновитьВесОбъем();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Элементы.ВкладкаИнформацияДляПечати.Картинка = ОбщегоНазначения.ПолучитьКартинкуКомментария(Объект.КомментарийКДоставке);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_МаршрутноеЗадание", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОснованию(ВыбДокумент)
	
	ИспользоватьАдресаПартнеров=Константы.МегаЛогист_ИспользоватьАдресаПартнеров.Получить();
	
	Объект.ДокументОснование=ВыбДокумент;
	Объект.Контрагент=?(ИспользоватьАдресаПартнеров,ВыбДокумент.Партнер,ВыбДокумент.Контрагент);
	
	СообщениеДатыДоставки="Укажите необходимую дату доставки вручную";
	
	Если ТипЗнч(ВыбДокумент) = Тип("ДокументСсылка.ЗаказКлиента")тогда
		
		Если ВыбДокумент.СпособДоставки=Перечисления.СпособыДоставки.ДоКлиента тогда
			Объект.ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.ДоставкаДоКлиента;
		ИначеЕсли ВыбДокумент.СпособДоставки=Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу тогда
			Объект.ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.ДоставкаВТК;
			Объект.Контрагент=ВыбДокумент.ПеревозчикПартнер;
		иначе
			Объект.ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.Прочее;	
		КонецЕсли;
		Если ВыбДокумент.НеОтгружатьЧастями тогда
			Объект.ДатаДоставки=ВыбДокумент.ДатаОтгрузки;
		КонецЕсли;
		СообщениеДатыДоставки="В исходном документе присутствуют несколько дат отгрузки, укажите необходимую дату доставки вручную";
		Объект.ВремяДоставкиС=ВыбДокумент.ВремяДоставкиС;
		Объект.ВремяДоставкиПо=ВыбДокумент.ВремяДоставкиПо;
		
		Если ВыбДокумент.СпособДоставки=Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу тогда
			Объект.АдресДоставки=ВыбДокумент.АдресДоставкиПеревозчика;
		иначе
			Объект.АдресДоставки=ВыбДокумент.АдресДоставки;
		КонецЕсли;		
		Объект.КомментарийКДоставке=ВыбДокумент.ДополнительнаяИнформацияПоДоставке;
		
	ИначеЕсли ТипЗнч(ВыбДокумент) = Тип("ДокументСсылка.ЗаказПоставщику")тогда
		
		Объект.ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.ЗаборУПоставщика;
		Если ВыбДокумент.ПоступлениеОднойДатой тогда
			Объект.ДатаДоставки=ВыбДокумент.ДатаПоступления;
		КонецЕсли;
		СообщениеДатыДоставки="В исходном документе присутствуют несколько дат отгрузки, укажите необходимую дату доставки вручную";
		Объект.АдресДоставки=МегаЛогист_Общий.ПолучитьАдресИзКонтактнойИнформации(Объект.Контрагент,"Доставки");
		Объект.КомментарийКДоставке=ВыбДокумент.Комментарий;
		
	ИначеЕсли ТипЗнч(ВыбДокумент) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")тогда
		
		Объект.ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.Прочее;
		Объект.КомментарийКДоставке=ВыбДокумент.Комментарий;
		
	ИначеЕсли ТипЗнч(ВыбДокумент) = Тип("ДокументСсылка.ВозвратТоваровПоставщику")тогда 
		
		Объект.ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.Прочее;
		Объект.КомментарийКДоставке=ВыбДокумент.Комментарий;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаДоставки) тогда		
		Сообщить(СообщениеДатыДоставки);	
	КонецЕсли;
			
	Если Объект.Контрагент.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ФизЛицо
		или Объект.Контрагент.ЮрФизЛицо=Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо тогда
		КонтактноеЛицо=Объект.Контрагент.Наименование + " тел.:"
		+ ФормированиеПечатныхФорм.ПолучитьТелефонИзКонтактнойИнформации(Объект.Контрагент);
	иначе
		КонтактноеЛицо=ВыбДокумент.КонтактноеЛицо.Наименование + " тел.:"
		+ МегаЛогист_Общий.ПолучитьТелефонИзКонтактнойИнформации(ВыбДокумент.КонтактноеЛицо);
	КонецЕсли;	
	Если Объект.ТипЗадания=Справочники.МегаЛогист_ТипыМаршрутныхЗаданий.ДоставкаВТК тогда
		КонтактноеЛицо=МегаЛогист_Общий.ПолучитьКонтактноеЛицо(ВыбДокумент.ПеревозчикПартнер);
		КонтактноеЛицо=КонтактноеЛицо.Наименование + " тел.:"
			+ МегаЛогист_Общий.ПолучитьТелефонИзКонтактнойИнформации(КонтактноеЛицо);
	КонецЕсли;
	
	Объект.КонтактноеЛицо=КонтактноеЛицо;
	Объект.Статус=Перечисления.МегаЛогист_СтатусыМаршрутногоЗадания.КРаспределению;
	
	ЗаполнитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
		
	ТипДокумента=СтрЗаменить(Команда.Имя,"Заполнить","");
	ВыбДокумент=ОткрытьФормуМодально("Документ."+ТипДокумента+".ФормаВыбора");
	
	Если ВыбДокумент=Неопределено тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоОснованию(ВыбДокумент);
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	//АТ Терентьев
	//МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МегаЛогист_МаршрутныйЛистМаршрутныеЗадания.Ссылка
	|ИЗ
	|	Документ.МегаЛогист_МаршрутныйЛист.МаршрутныеЗадания КАК МегаЛогист_МаршрутныйЛистМаршрутныеЗадания
	|ГДЕ
	|	МегаЛогист_МаршрутныйЛистМаршрутныеЗадания.МаршрутноеЗадание = &МаршрутноеЗадание";
	
	Запрос.УстановитьПараметр("МаршрутноеЗадание", ТекущийОбъект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	Если НачалоДня(ТекущийОбъект.ДатаДоставки) = НачалоДня(ТекущаяДата()) Тогда
		Если ИсходныйСтатус <> ТекущийОбъект.Статус 
		И ТекущийОбъект.Статус = Перечисления.МегаЛогист_СтатусыМаршрутногоЗадания.Отменено Тогда
			МегаЛогист_Служебный.ОтправитьПушУведомления(
						ТекущийОбъект.Курьер, 
						"Задание отменено", 
						"Маршрутное задание №" + ТекущийОбъект.Номер + " отменено", 1);
		ИначеЕсли ИсходноеВремя <> "" + Объект.ВремяДоставкиС + Объект.ВремяДоставкиПо Тогда
			МегаЛогист_Служебный.ОтправитьПушУведомления(
						ТекущийОбъект.Курьер, 
						"Изменено временное окно доставки", 
						"Маршрутное задание №" + ТекущийОбъект.Номер + " изменено временное окно доставки", 1);	
		ИначеЕсли ИсходныйКоммент <> Объект.КомментарийКДоставке Тогда
			МегаЛогист_Служебный.ОтправитьПушУведомления(
						ТекущийОбъект.Курьер, 
						"Изменен комментарий для курьера", 
						"Маршрутное задание №" + ТекущийОбъект.Номер + " изменен комментарий для курьера", 1);
		ИначеЕсли ИсходныйАдрес <> Объект.АдресДоставки Тогда
			МегаЛогист_Служебный.ОтправитьПушУведомления(
						ТекущийОбъект.Курьер, 
						"Изменен адрес", 
						"Маршрутное задание №" + ТекущийОбъект.Номер + " изменен адрес", 1);
		КонецЕсли;
	КонецЕсли;

	//Заполнение исходного статуса
	ИсходныйСтатус 	= Объект.Статус;
	ИсходноеВремя 	= "" + Объект.ВремяДоставкиС + Объект.ВремяДоставкиПо;
	ИсходныйКоммент = Объект.КомментарийКДоставке;
	ИсходныйАдрес 	= Объект.АдресДоставки;

	
КонецПроцедуры

// silber {

&НаКлиенте
Процедура МенеджерНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ВведеноСообщениеМенеджеру", ЭтаФорма),,"Послать сообщение менеджеру",,Истина);
	
КонецПроцедуры
&НаСервере
Процедура ОтправитьСообщениеМенеджеру(Сообщение)
	
	Получатели = Новый Массив;
	Получатели.Добавить(Менеджер);
		
	СистемаВзаимодействияПривилегированный.ОтправитьСообщение(Сообщение, Получатели);
	
КонецПроцедуры

&НаКлиенте
Процедура ВведеноСообщениеМенеджеру(Строка, ДопПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Строка) Тогда
		ОтправитьСообщениеМенеджеру(Строка);
		ПоказатьОповещениеПользователя("Сообщение отправлено",,Строка);
	КонецЕсли;
	
КонецПроцедуры

// } silber