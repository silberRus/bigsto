
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если 	НЕ ОбменДанными.Загрузка И
			НЕ (ДополнительныеСвойства.Свойство("ГрупповоеПерепроведение") И
				ДополнительныеСвойства.ГрупповоеПерепроведение) Тогда
	
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
		
		ТипРеализация	= Тип("ДокументСсылка.РеализацияТоваровУслуг");
		Номера 			= Новый Массив;
		
		Для Каждого Строка Из ЭтотОбъект.Документы Цикл
			Номера.Добавить(СтрШаблон("%1№%2", ?(ТипЗнч(Строка.Документ) = ТипРеализация, "Реал", "Пер"), Строка.Документ.Номер));
		КонецЦикла;
		ДокументыСтр = СтрСоединить(Номера, "; ");
		
	КонецЕсли;
		
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Партнер = &ПустойПартнер ТОГДА Ссылка.Партнер ИНАЧЕ Партнер КОНЕЦ Партнер,
	|	&Дата 			Период,
	|	Ссылка.ТК 		ТК,
	|	Ссылка			ЭкспедиторскаяРасписка,
	|					МаршрутноеЗадание,
	|					Документ,
	|					Сумма
	|ИЗ
	|	Документ.АТ_ЭкспедиторскаяРасписка.Документы
	|ГДЕ
	|	Ссылка = &Ссылка
	|");
	
	Запрос.УстановитьПараметр("ПустойПартнер",	Справочники.Партнеры.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата",			?(ДатаРасписки = '00010101', Дата, ДатаРасписки));
	Запрос.УстановитьПараметр("Ссылка", 		Ссылка);
	
	Движения.АТ_ЭкспедиторскиеРасписки.Загрузить(Запрос.Выполнить().Выгрузить());
	Движения.АТ_ЭкспедиторскиеРасписки.Записывать = Истина;
	
КонецПроцедуры

