
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьФильтрКонтрагента();
	
КонецПроцедуры

#Область Пересчет

&НаКлиенте
Процедура РаскидатьСумму()
	
	Кол = Объект.Документы.Количество();
	
	Если Кол Тогда
	
		Для Каждого Строка Из Объект.Документы Цикл
			Строка.Сумма = Объект.Сумма / Кол;
		КонецЦикла;
		
		ПослСтрока = Объект.Документы[Кол - 1];
		ПослСтрока.Сумма = ПослСтрока.Сумма + Объект.Сумма - Объект.Документы.Итог("Сумма");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыСуммаПриИзменении(Элемент)
	
	Объект.Сумма = Объект.Документы.Итог("Сумма");
	
КонецПроцедуры
&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	
	РаскидатьСумму();
	
КонецПроцедуры

#КонецОбласти

#Область Фильтры_партнеров

&НаСервере
Функция СписокПартнеров(Кого, ПоКому)
	
	Запрос = Новый Запрос(СтрШаблон("
	|ВЫБРАТЬ 	РАЗЛИЧНЫЕ %1 Партнер 
	|ИЗ 		РегистрНакопления.АТ_МаршрутныеЗадания.Обороты(,,,%2 = &Ссылка)
	|", 
		Кого,
		ПоКому));
	
	Запрос.УстановитьПараметр("Ссылка", Объект[ПоКому]);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Партнер");
	
КонецФункции
&НаКлиенте
Процедура НачалоВыбораЭлемента(Кого, ПоКому, Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	ПарВыбора 				= Новый Структура;
	
	Если Не Объект[ПоКому].Пустая() Тогда
		
		Партнеры = СписокПартнеров(Кого, ПоКому);
		ПарВыбора.Вставить("Отбор", Новый Структура("Ссылка", Партнеры));
		
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Партнеры.ФормаВыбора", ПарВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораЭлемента("Партнер", "ТК", Элемент, СтандартнаяОбработка);
	
КонецПроцедуры
&НаКлиенте
Процедура ТКНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораЭлемента("ТК", "Партнер", Элемент, СтандартнаяОбработка);
	
КонецПроцедуры
&НаКлиенте
Процедура ПриИзменении(Кого, ПоКому)
	
	Если Объект[ПоКому].Пустая() Тогда
		
		Партнеры = СписокПартнеров(ПоКому, Кого);
		Если Партнеры.Количество() = 1 Тогда
			Объект[ПоКому] = Партнеры[0];
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	ПриИзменении("Партнер", "ТК");
	
	Контры = КонтрагентыПартнера();
	Если Контры.Количество() = 1 Тогда
		Объект.Контрагент = Контры[0];
	ИначеЕсли Контры.Найти(Объект.Контрагент) = Неопределено Тогда
		Объект.Контрагент = Неопределено;
	КонецЕсли;
	
	УстановитьФильтрКонтрагента();
	
КонецПроцедуры
&НаКлиенте
Процедура ТКПриИзменении(Элемент)
	
	ПриИзменении("ТК", "Партнер");
	
КонецПроцедуры


#КонецОбласти

#Область Контрагент

&НаСервере
Функция КонтрагентыПартнера()
	
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.Контрагенты ГДЕ Партнер = &Партнер");
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервере
Процедура УстановитьФильтрКонтрагента()
	
	Массив = Новый Массив;
	
	Если Не Объект.Партнер.Пустая() Тогда
		
		Связь = Новый СвязьПараметраВыбора("Отбор.Партнер", "Объект.Партнер");
		Массив.Добавить(Связь);
		
	КонецЕсли;
	
	Элементы.Контрагент.СвязиПараметровВыбора = Новый ФиксированныйМассив(Массив);
	
КонецПроцедуры
&НаСервере
Процедура ОбновитьПартнера()
	
	Если Не Объект.Контрагент.Пустая() Тогда
		Объект.Партнер = Объект.Контрагент.Партнер;
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ОбновитьПартнера();
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ПолучитьЗаполненныеДокументы()
	
	ДатаСКоторойВсеНачалось = '20180827'; // дата с которой начали вести расписки, до этого загружать нет смысла так как экспедиторские расписки не велись
	
	Запрос = Новый Запрос(СтрШаблон("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ Зад.Партнер, Зад.Документ, Зад.МаршрутноеЗадание
	|ИЗ РегистрНакопления.АТ_МаршрутныеЗадания Зад
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.АТ_ЭкспедиторскиеРасписки Расп
	|ПО
	|	Зад.ТК = Расп.ТК И
	|	Зад.Партнер = Расп.Партнер И
	|	Зад.Документ = Расп.Документ И
	|	Зад.МаршрутноеЗадание = Расп.МаршрутноеЗадание
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ 	РегистрСведений.АТ_СвязьОбъектовКП СвязьКП
	|ПО					Зад.Документ ССЫЛКА Документ.ПеремещениеТоваров И 
	|					Зад.Документ = СвязьКП.ДокументРезультат
	|
	|ГДЕ
	|	Расп.МаршрутноеЗадание ЕСТЬ NULL И
	|	Зад.ТК 		= &ТК И
	|	Зад.Партнер = &Партнер И
	|	Зад.МаршрутноеЗадание.Дата >= &Дата И
	|	НЕ Зад.МаршрутноеЗадание В(&Задания)
	|	%1
	|
	|УПОРЯДОЧИТЬ ПО Зад.Документ.Дата
	|", ?(Объект.Контрагент.Пустая(), "", "И ЕСТЬNULL(СвязьКП.КП.Контрагент, Зад.Документ.Контрагент) = &Контрагент")));
	
	Запрос.УстановитьПараметр("Дата", 		ДатаСКоторойВсеНачалось);
	Запрос.УстановитьПараметр("ТК", 		Объект.ТК);
	Запрос.УстановитьПараметр("Партнер", 	Объект.Партнер);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Задания", 	Объект.Документы.Выгрузить(,"МаршрутноеЗадание").ВыгрузитьКолонку("МаршрутноеЗадание"));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Объект.Документы.Очистить();
	Объект.Документы.Загрузить(ПолучитьЗаполненныеДокументы());
	
КонецПроцедуры
&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьНаСервере();
	РаскидатьСумму();
	
КонецПроцедуры
&НаСервере
Процедура ДобавитьНаСервере()
	
	КонвертацияТипов.ДобавитьТаблицуКДругойТаблице(Объект.Документы, ПолучитьЗаполненныеДокументы());
	
КонецПроцедуры
&НаКлиенте
Процедура Добавить(Команда)
	
	ДобавитьНаСервере();
	РаскидатьСумму();
	
КонецПроцедуры


&НаСервере
Функция ПолучитьСписокМаршрЗаданий(ДокСсылка)
	
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Документ.МегаЛогист_МаршрутноеЗадание ГДЕ ДокументОснование = &Док");
	Запрос.УстановитьПараметр("Док", ДокСсылка);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции
&НаСервере
Функция ПолучитьДокОснованиеЗадания(ЗадСсылка)
	
	Возврат ЗадСсылка.ДокументОснование;
	
КонецФункции
&НаКлиенте
Процедура ДокументыДокументПриИзменении(Элемент)
	
	текДанные = Элементы.Документы.ТекущиеДанные;
	Задания = ПолучитьСписокМаршрЗаданий(текДанные.Документ);
	
	Если Задания.Количество() = 1 Тогда
		текДанные.МаршрутноеЗадание = Задания[0];
	КонецЕсли;
	
	ОбновитьПартнераВТаблице(Объект.Документы.Индекс(текДанные));
	
КонецПроцедуры
&НаКлиенте
Процедура ДокументыМаршрутноеЗаданиеПриИзменении(Элемент)
	
	текДанные = Элементы.Документы.ТекущиеДанные;
	текДанные.Документ = ПолучитьДокОснованиеЗадания(текДанные.МаршрутноеЗадание);
	ОбновитьПартнераВТаблице(Объект.Документы.Индекс(текДанные));
	
КонецПроцедуры
&НаКлиенте
Процедура ДокументыМаршрутноеЗаданиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	текДанные = Элементы.Документы.ТекущиеДанные;
	Если ЗначениеЗаполнено(текДанные.Документ) Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("Документ.МегаЛогист_МаршрутноеЗадание.ФормаВыбора", Новый Структура("Отбор", Новый Структура("Ссылка", ПолучитьСписокМаршрЗаданий(текДанные.Документ))), Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПартнера(ДокСсылка)
	
	Если ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		Возврат Документы.КП.ПолучитьПартнераИЗДокументРезультат(ДокСсылка);
		
	Иначе
		
		Возврат ДокСсылка.Партнер;
		
	КонецЕсли;
	
КонецФункции
&НаСервере
Процедура ОбновитьПартнераВТаблице(Инд)
	
	текДанные = Объект.Документы[Инд];
	Если текДанные <> Неопределено И текДанные.Партнер.Пустая() И ЗначениеЗаполнено(текДанные.Документ) Тогда
		
		ПартнерДок = ПолучитьПартнера(текДанные.Документ);
		Если текДанные.Партнер <> ПартнерДок Тогда
			текДанные.Партнер = ПартнерДок;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры