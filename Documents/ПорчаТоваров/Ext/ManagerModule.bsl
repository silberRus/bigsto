#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.УстановкаЦенНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Порча товаров".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПорчаТоваров) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПорчаТоваров.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПорчаТоваров);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКачествоТоваров";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОстаткиТоваровОрганизаций(КомандыОтчетов);
	
КонецПроцедуры

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//  Объект	 - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
// 
// Возвращаемое значение:
//  Структура - состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПорчаТоваров";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПустаяСсылка());
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("НоменклатураОприходование");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("ХарактеристикаОприходование");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	
	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти


// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
// 
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	ШаблонНазначения.ДвиженияПоСкладскимРегистрам = "ИСТИНА";
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.ДавальческоеПродукция22));
	
	// Остатки товаров на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Товары.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("ВНаличии").Пометка = Истина;
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.Склад";
	
	Возврат МакетФормы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка            КАК Ссылка,
	|	ДанныеДокумента.Дата              КАК Период,
	|	ДанныеДокумента.Номер             КАК Номер,
	|	ДанныеДокумента.Склад             КАК Склад,
	|	ДанныеДокумента.Валюта            КАК Валюта,
	|	ДанныеДокумента.Организация       КАК Организация,
	|	ДанныеДокумента.Подразделение     КАК Подразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Подразделение.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка))КАК ВариантОбособленногоУчетаТоваров,
	|	ДанныеДокумента.СтатьяРасходов    КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|				И ДанныеДокумента.Дата >= ДанныеДокумента.Склад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                             КАК ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач,
	|	ДанныеДокумента.ПриходоватьТоварыПоСебестоимостиСписания КАК ПриходПоСебестоимости,
	|	ДанныеДокумента.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ДанныеДокумента.Ответственный     КАК Ответственный,
	|	ДанныеДокумента.Комментарий       КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления   КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен          КАК Проведен
	|ИЗ
	|	Документ.ПорчаТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                			  Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",                 			  Реквизиты.Номер);
	Запрос.УстановитьПараметр("Склад",                 			  Реквизиты.Склад);
	Запрос.УстановитьПараметр("Организация",           			  Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение",         			  Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ВариантОбособленногоУчетаТоваров", Реквизиты.ВариантОбособленногоУчетаТоваров);
	Запрос.УстановитьПараметр("СтатьяРасходов",        			  Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов",     			  Реквизиты.АналитикаРасходов);
	Запрос.УстановитьПараметр("ПриходПоСебестоимости", 			  Реквизиты.ПриходПоСебестоимости);
	Запрос.УстановитьПараметр("Ответственный",         			  Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("Комментарий",           			  Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("ПометкаУдаления",       			  Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",              			  Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач", 
		Реквизиты.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач);
	Запрос.УстановитьПараметр("НалогообложениеНДС",         	  Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	Запрос.УстановитьПараметр("Валюта",                			  Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",	  Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВидДеятельностиНДС",    Реквизиты.ВидДеятельностиНДС);
	
	Если Реквизиты.ПриходПоСебестоимости Тогда
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПорчаТоваров);
	Иначе
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", 
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	Запрос.УстановитьПараметр("НомерНаПечать",              ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
	                                                        Реквизиты.Номер));
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",    ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
	                                                        "Документ.ПорчаТоваров"));
	Запрос.УстановитьПараметр("ИспользуетсяНазначение", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюИзлишковНедостач";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Серия КАК Серия,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Количество КАК КОформлениюАктов
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПодНазначение
	|				И ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	&Склад,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПодНазначение
	|				И ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Количество <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВРезервеПодЗаказ,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|   И ТаблицаТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	ТаблицаТовары.Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) 
	|				И ТаблицаТовары.ПодНазначение
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                        КАК Назначение,
	|	ТаблицаТовары.Серия          КАК Серия,
	|	ТаблицаТовары.Количество     КАК Количество,
	|	&Склад                       КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеНедостач) КАК СкладскаяОперация,
	|	&Ссылка                      КАК Документ,
	|	&Период                      КАК Период,
	|	НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Склад",  Запрос.Параметры.Склад);
	ЗапросАналитик.УстановитьПараметр("ИспользуетсяНазначение",  Запрос.Параметры.ИспользуетсяНазначение);
	ЗапросАналитик.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Склад          КАК Склад,
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение     КАК Назначение,
	|	Товары.Серия          КАК Серия
	|ИЗ
	|	(
	|		ВЫБРАТЬ
	|			&Склад                                       КАК Склад,
	|			Ключи.Номенклатура      КАК Номенклатура,
	|			Ключи.Характеристика    КАК Характеристика,
	|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|			Ключи.Серия                          КАК Серия
	|		ИЗ
	|			Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаТовары
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|			ПО
	|				ТаблицаТовары.АналитикаУчетаНоменклатурыОприходование = Ключи.КлючАналитики
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО
	|				Ключи.Номенклатура = Аналитика.Номенклатура
	|				И Ключи.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|				И Ключи.Серия = Аналитика.Серия
	|				И Ключи.Склад = Аналитика.Склад
	|		ГДЕ
	|			ТаблицаТовары.Ссылка = &Ссылка
	|			И Аналитика.Номенклатура ЕСТЬ NULL
	|			И НЕ &ИспользуетсяНазначение
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ
	|			Ключи.Склад                              КАК Склад,
	|			Ключи.Номенклатура                       КАК Номенклатура,
	|			Ключи.Характеристика                     КАК Характеристика,
	|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|			Ключи.Серия                              КАК Серия
	|		ИЗ
	|			Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаТовары
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|			ПО
	|				ТаблицаТовары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО
	|				Ключи.Номенклатура = Аналитика.Номенклатура
	|				И Ключи.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|				И Ключи.Серия = Аналитика.Серия
	|				И Ключи.Склад = Аналитика.Склад
	|		ГДЕ
	|			ТаблицаТовары.Ссылка = &Ссылка
	|			И Аналитика.Номенклатура ЕСТЬ NULL
	|			И Не &ИспользуетсяНазначение
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ 
	|			ТаблицаТовары.ВидЗапасов.ВладелецТовара             КАК Склад,
	|			Ключи.Номенклатура             КАК Номенклатура,
	|			Ключи.Характеристика           КАК Характеристика,
	|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)        КАК Назначение,
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|		ИЗ
	|			Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|			ПО
	|				ТаблицаТовары.АналитикаУчетаНоменклатурыОприходование = Ключи.КлючАналитики
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО
	|				Ключи.Номенклатура = Аналитика.Номенклатура
	|				И Ключи.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитика.Серия
	|				И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|				И ТаблицаТовары.ВидЗапасов.ВладелецТовара = Аналитика.Склад
	|		ГДЕ
	|			ТаблицаТовары.Ссылка = &Ссылка 
	|			И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) 
	|			И Аналитика.Номенклатура ЕСТЬ NULL
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ 
	|			ТаблицаТовары.ВидЗапасов.ВладелецТовара             КАК Склад,
	|			Ключи.Номенклатура                                  КАК Номенклатура,
	|			Ключи.Характеристика                                КАК Характеристика,
	|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)        КАК Назначение,
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|		ИЗ
	|			Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаТовары
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|			ПО
	|				ТаблицаТовары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО
	|				Ключи.Номенклатура = Аналитика.Номенклатура
	|				И Ключи.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|				И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитика.Серия
	|				И ТаблицаТовары.ВидЗапасов.ВладелецТовара = Аналитика.Склад
	|		ГДЕ
	|			ТаблицаТовары.Ссылка = &Ссылка 
	|			И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) 
	|			И Аналитика.Номенклатура ЕСТЬ NULL
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ 
	|			ВидыЗапасовВладельца.ВладелецТовара                 КАК Склад,
	|			Ключи.Номенклатура                                  КАК Номенклатура,
	|			Ключи.Характеристика                                КАК Характеристика,
	|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)        КАК Назначение,
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|		ИЗ
	|			Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаТовары
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|			ПО ТаблицаТовары.ВидЗапасов.ВидЗапасовВладельца = ВидыЗапасовВладельца.Ссылка
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|			ПО
	|				ТаблицаТовары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО
	|				Ключи.Номенклатура = Аналитика.Номенклатура
	|				И Ключи.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|				И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитика.Серия
	|				И ВидыЗапасовВладельца.ВладелецТовара = Аналитика.Склад
	|		ГДЕ
	|			ТаблицаТовары.Ссылка = &Ссылка 
	|			И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			И ВидыЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			И Аналитика.Номенклатура ЕСТЬ NULL
	|	) КАК Товары";
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КлючиСписания.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	КлючиСписания.Склад.ЦеховаяКладовая КАК ЦеховаяКладовая,
	|	АналитикаБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	Ключи.Номенклатура КАК НоменклатураОприходование,
	|	Ключи.Характеристика КАК ХарактеристикаОприходование,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование КАК АналитикаОприходование,
	|	Ключи.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиОприходование,
	|	КлючиБезНазначения.КлючАналитики КАК АналитикаОприходованиеБезНазначения,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаСписание,
	|	АналитикаБезНазначения.КлючАналитики КАК АналитикаСписаниеБезНазначения,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	СправочникВидЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	СправочникВидЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	СправочникВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	СправочникВидЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование КАК ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))  КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаРегл,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	КлючиСписания.Номенклатура КАК Номенклатура,
	|	КлючиСписания.Характеристика КАК Характеристика,
	|	ВЫБОР КОГДА СправочникВидЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом
	|	
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СправочникВидЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = СправочникВидЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиСписания
	|	ПО 
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = КлючиСписания.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО 
	|		КлючиСписания.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И КлючиСписания.Характеристика = АналитикаБезНазначения.Характеристика
	|		И КлючиСписания.Серия = АналитикаБезНазначения.Серия
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|		И КлючиСписания.Склад = АналитикаБезНазначения.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|	ПО 
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование = Ключи.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиБезНазначения
	|	ПО 
	|		Ключи.Номенклатура = КлючиБезНазначения.Номенклатура
	|		И Ключи.Характеристика = КлючиБезНазначения.Характеристика
	|		И Ключи.Серия = КлючиБезНазначения.Серия
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = КлючиБезНазначения.Назначение
	|		И Ключи.Склад = КлючиБезНазначения.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = &Организация
	|		И АналитикаРасчетов.Партнер = СправочникВидЗапасов.ВладелецТовара
	|		И АналитикаРасчетов.Контрагент = СправочникВидЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СправочникВидЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СправочникВидЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СправочникВидЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаВидыЗапасов.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ВидыЗапасов""
	|	
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Ключи.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Ключи.Склад.ЦеховаяКладовая КАК ЦеховаяКладовая,
	|	АналитикаБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	КлючиОприходование.Номенклатура КАК НоменклатураОприходование,
	|	КлючиОприходование.Характеристика КАК ХарактеристикаОприходование,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование КАК АналитикаОприходование,
	|	КлючиОприходование.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиОприходование,
	|	КлючиОприходованиеБезНазначения.КлючАналитики КАК АналитикаОприходованиеБезНазначения,
	|	Аналитика.КлючАналитики КАК АналитикаСписание,
	|	Аналитика.КлючАналитики КАК АналитикаСписаниеБезНазначения,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	СправочникВидЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	СправочникВидЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	СправочникВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	СправочникВидЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование КАК ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))  КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаРегл,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Ключи.Номенклатура КАК Номенклатура,
	|	Ключи.Характеристика КАК Характеристика,
	|	ВЫБОР КОГДА СправочникВидЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом
	|
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СправочникВидЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = СправочникВидЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|	ПО 
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО 
	|		Ключи.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Ключи.Характеристика = АналитикаБезНазначения.Характеристика
	|		И Ключи.Серия = АналитикаБезНазначения.Серия
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|		И Ключи.Склад = АналитикаБезНазначения.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиОприходование
	|	ПО 
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОприходование = КлючиОприходование.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиОприходованиеБезНазначения
	|	ПО 
	|		КлючиОприходование.Номенклатура = КлючиОприходованиеБезНазначения.Номенклатура
	|		И КлючиОприходование.Характеристика = КлючиОприходованиеБезНазначения.Характеристика
	|		И КлючиОприходование.Серия = КлючиОприходованиеБезНазначения.Серия
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = КлючиОприходованиеБезНазначения.Назначение
	|		И КлючиОприходование.Склад = КлючиОприходованиеБезНазначения.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО 
	|		Ключи.Номенклатура = Аналитика.Номенклатура
	|		И Ключи.Характеристика = Аналитика.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитика.Серия
	|		И ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара = Аналитика.Склад
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = &Организация
	|		И АналитикаРасчетов.Партнер = СправочникВидЗапасов.ВладелецТовара
	|		И АналитикаРасчетов.Контрагент = СправочникВидЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СправочникВидЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СправочникВидЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СправочникВидЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаВидыЗапасов.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ВидыЗапасов""
	|	
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""ВидыЗапасов"" 													 КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 										 КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО														 КАК Поставщик,
	|	НЕОПРЕДЕЛЕНО														 КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО 														 КАК СтавкаНДС,
	|	ДанныеДокумента.ВидДеятельностиНДС									 КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) 						 КАК ВидЦенности,
	|	0																	 КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПорчаТоваров КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&Период                                         КАК Период,
	|	&Склад                                          КАК Склад,
	|	&Организация                                    КАК ОрганизацияОтгрузки,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ КАК Организация,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Номенклатура                 КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика               КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                     КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                   КАК Количество,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС           КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование      КАК КорВидЗапасов,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.АналитикаСписание
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.АналитикаОприходование
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация                          КАК ХозяйственнаяОперация,
	|	&СтатьяРасходов                                 КАК СтатьяРасходов,
	|	&АналитикаРасходов                              КАК АналитикаРасходов,
	|	ЛОЖЬ                                            КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&Организация,
	|	&Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.АналитикаОприходование,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.Количество,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.АналитикаСписание
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕ &ПриходПоСебестоимости КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ТаблицаВидыЗапасов.Валюта                     КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура               КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика             КАК Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаСписание          КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование    КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаОприходование     КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
	|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
	|	0                                             КАК Количество,
	|	ТаблицаВидыЗапасов.Количество                 КАК КоличествоСписано,
	|	0                                             КАК СуммаВыручки,
	|	0                                             КАК КоличествоКОформлению,
	|	ТаблицаВидыЗапасов.Количество                 КАК КоличествоСписаноКОформлению,
	|	0                                             КАК СуммаВыручкиКОформлению
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Запрос.Параметры.Валюта,
		Неопределено,
		Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	// Таблица товаров (списание)
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаСписание
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаСписаниеБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&Организация  КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО 										 КАК Партия,
	|	НЕОПРЕДЕЛЕНО 										 КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 										 КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                         КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												 КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО									     КАК КорПартия,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС                КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьУпр,
	|	0 КАК КорСтоимость,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаОприходование
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаОприходованиеБезНазначения
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК КорРазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаРасчетовСКомитентом КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение КАК Подразделение,
	|	Неопределено КАК АналитикаРасходов,
	|	Неопределено КАК СтатьяРасходовСписания,
	|	Неопределено КАК КорОрганизация,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	&ПриходПоСебестоимости
	|	И ТаблицаВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Таблица товаров (списание по фиксированной стоимости)
	|ВЫБРАТЬ
	|	2                                                                       КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки                                          КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаСписание
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаСписаниеБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР
	|			КОГДА
	|				ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА
	|				НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ
	|				ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                                                   КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО 										 					КАК Партия,
	|	НЕОПРЕДЕЛЕНО 										 					КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 										 					КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                                            КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												 					КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											     					КАК КорПартия,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС                                   КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) 					КАК ТипЗаписи,
	|
	|	ТаблицаВидыЗапасов.Количество                                           КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	ТаблицаВидыЗапасов.СуммаРегл                                            КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаВидыЗапасов.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                                   КАК СтоимостьУпр,
	|	ТаблицаВидыЗапасов.СуммаУпр                                             КАК КорСтоимость,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаОприходование
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаОприходованиеБезНазначения
	|	КОНЕЦ                                                                   КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                                                   КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаРасчетовСКомитентом                         КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                                                          КАК Подразделение,
	|	&АналитикаРасходов                                                      КАК АналитикаРасходов,
	|	&СтатьяРасходов                                                         КАК СтатьяРасходовСписания,
	|	ЕСТЬNULL(ПрочиеРасходы.ОрганизацияПолучатель, НЕОПРЕДЕЛЕНО)             КАК КорОрганизация,
	|	&ХозяйственнаяОперация                                                  КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтПрочиеРасходы КАК ПрочиеРасходы
	|		ПО ПрочиеРасходы.СтатьяРасходов = &СтатьяРасходов
	|		И ПрочиеРасходы.АналитикаРасходов = &АналитикаРасходов
	|
	|ГДЕ
	|	НЕ &ПриходПоСебестоимости
	|	И ТаблицаВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Списание комиссионных товаров и товаров давальца
	|ВЫБРАТЬ
	|	2                                                                       КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки                                          КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	КОНЕЦ КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                                                   КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	НЕОПРЕДЕЛЕНО 										 					КАК Партия,
	|	НЕОПРЕДЕЛЕНО 										 					КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 												 			КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                                            КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												 					КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка И НЕ &ПриходПоСебестоимости
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											     					КАК КорПартия,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС                                   КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) 					КАК ТипЗаписи,
	|
	|	ТаблицаВидыЗапасов.Количество                                           КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	0                                                                       КАК СтоимостьУпр,
	|	ТаблицаВидыЗапасов.СуммаУпр                                             КАК КорСтоимость,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаОприходование
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаОприходованиеБезНазначения
	|	КОНЕЦ                                                                   КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаРасчетовСКомитентом                         КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                                                          КАК Подразделение,
	|	&АналитикаРасходов                                                      КАК АналитикаРасходов,
	|	&СтатьяРасходов                                                         КАК СтатьяРасходовСписания,
	|	ЕСТЬNULL(ПрочиеРасходы.ОрганизацияПолучатель, НЕОПРЕДЕЛЕНО)             КАК КорОрганизация,
	|	&ХозяйственнаяОперация                                                  КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтПрочиеРасходы КАК ПрочиеРасходы
	|		ПО ПрочиеРасходы.СтатьяРасходов = &СтатьяРасходов
	|		И ПрочиеРасходы.АналитикаРасходов = &АналитикаРасходов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Таблица товаров (оприходование)
	|ВЫБРАТЬ
	|	4                                                                       КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки                                          КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаОприходование
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаОприходованиеБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                                                   КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка И НЕ &ПриходПоСебестоимости
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 												 					КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка И НЕ &ПриходПоСебестоимости
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 												 					КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												 					КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ПриходПоСебестоимости
	|		ТОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 												 					КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО 										 					КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 										 					КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО                                                            КАК КорВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПриходПоСебестоимости
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|	КОНЕЦ 																	КАК ТипЗаписи,
	|
	|	ТаблицаВидыЗапасов.Количество                                           КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаУпр                                             КАК Стоимость,
	|	ТаблицаВидыЗапасов.СуммаУпр                                             КАК СтоимостьБезНДС,
	|	ТаблицаВидыЗапасов.СуммаРегл                                            КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаВидыЗапасов.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                                   КАК СтоимостьУпр,
	|	0                                                                       КАК КорСтоимость,
	|	Неопределено                                                            КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаРасчетовСКомитентом                         КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                                                          КАК Подразделение,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК КорОрганизация,
	|	&ХозяйственнаяОперация                                                  КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА НЕОПРЕДЕЛЕНО ИНАЧЕ &Ссылка КОНЕЦ) КАК ДокументПоступления,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	&Организация                                  КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаОприходование     КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование    КАК ВидЗапасов,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаПартий КОНЕЦ) КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА 0. ИНАЧЕ ТаблицаВидыЗапасов.СуммаУпр  КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА 0. ИНАЧЕ ТаблицаВидыЗапасов.СуммаУпр  КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА 0. ИНАЧЕ ТаблицаВидыЗапасов.СуммаРегл КОНЕЦ) КАК СтоимостьРегл,
	|	0. КАК НДСРегл,
	|	ТаблицаВидыЗапасов.Номенклатура               КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика             КАК Характеристика,
	|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
	|	(НЕ &ПриходПоСебестоимости) КАК Первичное,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА &Ссылка ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументИсточник
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	&ПартионныйУчетВерсии21";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Таблица.НомерСтроки          КАК НомерСтроки,
	|	&Период                      КАК Период,
	|	&Валюта                      КАК Валюта,
	|	Таблица.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	Таблица.Сумма                КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                 КАК СтавкаНДС,
	|	0                            КАК СуммаНДС,
	|	Таблица.СуммаРегл            КАК СуммаБезНДСРегл,
	|	0                            КАК СуммаНДСРегл,
	|	Таблица.СуммаУпр             КАК СуммаБезНДСУпр,
	|	0                            КАК СуммаНДСУпр,
	|	НЕОПРЕДЕЛЕНО                 КАК ТипРасчетов
	|
	|ИЗ
	|	ВтВидыЗапасов КАК Таблица
	|
	|ГДЕ
	|	НЕ &ПриходПоСебестоимости
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&Склад КАК Склад,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаОприходование
	|		ИНАЧЕ ВидыЗапасов.АналитикаОприходованиеБезНазначения
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.НаправлениеДеятельностиОприходование КАК КорНаправлениеДеятельности,
	|	&Склад КАК КорСклад,
	|	ВидыЗапасов.ВидЗапасовОприходование.ТипЗапасов КАК КорТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК КорВидЗапасов,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|	ВидыЗапасов.Количество КАК КорКоличество,
	|
	|	ВЫБОР КОГДА &ПриходПоСебестоимости
	|		ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.СуммаУпр
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &ПриходПоСебестоимости
	|		ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.СуммаУпр
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &ПриходПоСебестоимости
	|		ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.СуммаРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ 
	|		ВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ 
	|		ВидыЗапасов.НоменклатураОприходование
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ВидДеятельностиНДС КАК НалогообложениеНДС
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                      КАК Период,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&Склад          			 КАК Склад,
	|	ТаблицаТовары.Назначение     КАК Назначение,
	|	-ТаблицаТовары.Количество 	 КАК КЗаказу,
	|	ТаблицаТовары.Количество	 КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)	
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 		КАК ВидДвижения,
	|	&Период                      				КАК Период,
	|	ТаблицаТовары.НоменклатураОприходование   	КАК НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование 	КАК ХарактеристикаОприходование,
	|	&Склад          			 				КАК Склад,
	|	ТаблицаТовары.Назначение     				КАК Назначение,
	|	-ТаблицаТовары.Количество 	 				КАК КЗаказу,
	|	ТаблицаТовары.Количество	 				КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)	
	| 	И ТаблицаТовары.ПодНазначение	
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
		
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
	|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КоличествоНаправленийДеятельности = 1
	|			ТОГДА ДанныеДокумента.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                   КАК НаправлениеДеятельности,
	|	&Склад                                  КАК МестоХранения,
	|	&Подразделение                          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	ВЫРАЗИТЬ(&Комментарий КАК СТРОКА(100))  КАК Комментарий,
	|	&Валюта                                 КАК Валюта,
	|	0                                       КАК Сумма,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента
	|ИЗ
	|	ВтОснований КАК ДанныеДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтОснований";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                                             КАК Ссылка,
	|	МАКСИМУМ(
	|		ЕСТЬNULL(ТаблицаТовары.Назначение.НаправлениеДеятельности,
	|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))) КАК НаправлениеДеятельности,
	|	КОЛИЧЕСТВО(
	|		РАЗЛИЧНЫЕ ЕСТЬNULL(ТаблицаТовары.Назначение.НаправлениеДеятельности,
	|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))) КАК КоличествоНаправленийДеятельности
	|ПОМЕСТИТЬ ВтОснований
	|ИЗ
	|	Документ.ПорчаТоваров КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|		ПО ДанныеДокумента.Ссылка = ТаблицаТовары.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	&Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента           = "Документ.ПорчаТоваров";
	СинонимТаблицыДокумента      = "";
	ВЗапросеЕстьИсточник         = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	ПереопределениеРасчетаПараметров.Вставить("ХозяйственнаяОперация",
		"	ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваров)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровСПереоценкой)
		|	КОНЕЦ");
	ПереопределениеРасчетаПараметров.Вставить("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач",
		"ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
		|				И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "ОбеспечениеЗаказов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтОснований", ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса));
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если СинонимТаблицыДокумента <> "ТаблицаТовары" Тогда
		Для Каждого ПараметрРасчета Из ПереопределениеРасчетаПараметров Цикл
			ПереопределениеРасчетаПараметров[ПараметрРасчета.Ключ] = СтрЗаменить(
				ПараметрРасчета.Значение, "ТаблицаТовары", СинонимТаблицыДокумента);
		КонецЦикла;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы();
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ" + "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции


#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПравоДоступа("Изменение", Метаданные.Документы.ПорчаТоваров) Тогда
		// Акт о порче, бое, ломе ТМЦ (ТОРГ-15)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ТОРГ15";
		КомандаПечати.Представление = НСтр("ru = 'Акт о порче, бое, ломе ТМЦ (ТОРГ-15)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ФункциональныеОпции = "ИспользоватьКачествоТоваров";
	КонецЕсли;

	// Акт о порче товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктПорчиТоваров";
	КомандаПечати.Представление = НСтр("ru = 'Акт о порче товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ИспользоватьКачествоТоваров";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-1 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ1";
		КомандаПечати.Представление = НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ФункциональныеОпции = "ИспользоватьКачествоТоваров";
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-3 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ3";
		КомандаПечати.Представление = НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ФункциональныеОпции = "ИспользоватьКачествоТоваров";
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ15") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ТОРГ15",
			НСтр("ru = 'Акт о порче, бое, ломе товарно-материальных ценностей (ТОРГ - 15)'"),
			СформироватьПечатнуюФормуТОРГ15(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктПорчиТоваров") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"АктПорчиТоваров",
			НСтр("ru = 'Акт о порче товаров'"),
			ПечатьАктаПорчиТоваров(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
КонецПроцедуры

Функция СформироватьПечатнуюФормуТОРГ15(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация.КодПоОКПО) КАК ОрганизацияПоОКПО,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация.Префикс) КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Подразделение) КАК ПодразделениеПредставление,
	|	Документ.ПриходоватьТоварыПоСебестоимостиСписания КАК ПриходоватьТоварыПоСебестоимостиСписания,
	|	Документ.ПричинаПорчи КАК НаименованиеПричины,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Валюта КАК ВалютаДокумента,
	|	Документ.Склад.ТекущийОтветственный КАК Кладовщик,
	|	Документ.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.ВидЦены КАК ВидЦен,
	|	Документ.ВидЦены.ВалютаЦены КАК ВалютаВидаЦены,
	|	Документ.Склад КАК Склад,
	|	Документ.Ответственный.ФизическоеЛицо КАК Расчетчик,
	|	Документ.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати
	|ИЗ
	|	Документ.ПорчаТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Документ.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ВыборкаПоДокументам		= ЗапросПоДокументам.Выполнить().Выбрать();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПорчаТоваров.ПФ_MXL_ТОРГ15");
	
	ТабДокумент = Новый ТабличныйДокумент;
	// Зададим параметры макета по-умолчанию
	ТабДокумент.ПолеСверху = 10;
	ТабДокумент.ПолеСлева = 10;
	ТабДокумент.ПолеСнизу = 10;
	ТабДокумент.ПолеСправа = 10;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПорчаТоваров_ТОРГ15";
	
	ОбластьШапки 						= Макет.ПолучитьОбласть("Шапка");     
	ОбластьЗаголовокТаблицы				= Макет.ПолучитьОбласть("ЗаголовокТаблицыТоварыУценка");
	ОбластьСтрока 						= Макет.ПолучитьОбласть("СтрокаТоварыУценка");
	ОбластьИтого 						= Макет.ПолучитьОбласть("ИтогоТоварыУценка");
	ОбластьПодвал 						= Макет.ПолучитьОбласть("ПодвалТоварыУценка");
	ОбластьЗаголовокТаблицыУтиль		= Макет.ПолучитьОбласть("ЗаголовокТаблицыУтиль");
	ОбластьСтрокаУтиль					= Макет.ПолучитьОбласть("СтрокаУтиль");
	ОбластьИтогоУтиль 					= Макет.ПолучитьОбласть("ИтогоУтиль");
	ОбластьПодписи						= Макет.ПолучитьОбласть("ПодвалПодписи");
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	НомерДокумента = 0;
	КоличествоДокументов = ВыборкаПоДокументам.Количество();
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;

	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		ЗапросПоТоварам = Новый Запрос;
		
		Если ВыборкаПоДокументам.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен Тогда
		
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ПорчаТоваровТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
			|	ПорчаТоваровТовары.НомерСтроки КАК НомерСтроки,
			|	ПорчаТоваровТовары.Количество КАК Количество,
			|	ВЫБОР
			|		КОГДА ПорчаТоваровТовары.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|			ТОГДА 0
			|		ИНАЧЕ ПорчаТоваровТовары.Количество
			|	КОНЕЦ КАК УценкаКоличество,
			|	ВЫРАЗИТЬ(ВЫБОР
			|		КОГДА ПорчаТоваровТовары.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|			ТОГДА 0
			|		КОГДА ПорчаТоваровТовары.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки1 ЕСТЬ NULL 
			|							И &ТекстЗапросаКоэффициентУпаковки1 <> 0
			|						ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки1
			|					ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
			|				КОНЕЦ * &КоэффициентПересчетаВалютыВидаЦенВВалютуРегл
			|		ИНАЧЕ ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл
			|	КОНЕЦ КАК ЧИСЛО (15,2)) КАК УценкаЦена,
			|	ВЫРАЗИТЬ(ВЫБОР
			|		КОГДА ПорчаТоваровТовары.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|			ТОГДА 0
			|		КОГДА ПорчаТоваровТовары.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки1 ЕСТЬ NULL 
			|							И &ТекстЗапросаКоэффициентУпаковки1 <> 0
			|						ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки1
			|					ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
			|				КОНЕЦ * &КоэффициентПересчетаВалютыВидаЦенВВалютуРегл
			|		ИНАЧЕ ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл
			|	КОНЕЦ КАК ЧИСЛО (15,2)) * ПорчаТоваровТовары.Количество КАК УценкаСтоимость,
			|	ПорчаТоваровТовары.Номенклатура.Код КАК ТоварКод,
			|	ПорчаТоваровТовары.Номенклатура.Артикул КАК ТоварАртикул,
			|	ВЫРАЗИТЬ(ВЫБОР
			|		КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки1 ЕСТЬ NULL 
			|				И &ТекстЗапросаКоэффициентУпаковки1 <> 0
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки1
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
			|	КОНЕЦ * &КоэффициентПересчетаВалютыВидаЦенВВалютуРегл КАК ЧИСЛО (15,2)) КАК Цена,
			|	ПорчаТоваровТовары.НоменклатураОприходование.Качество КАК ГрадацияКачества,
			|	ПорчаТоваровТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
			|	ПорчаТоваровТовары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
			|ИЗ
			|	Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
			|				(ВидЦены, Номенклатура, Характеристика) В
			|					(ВЫБРАТЬ
			|						&ВидЦен,
			|						ПорчаТоваровТовары.Номенклатура,
			|						ПорчаТоваровТовары.Характеристика
			|					ИЗ
			|						Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
			|					ГДЕ
			|						ПорчаТоваровТовары.Ссылка = &ТекущийДокумент)) КАК ЦеныНоменклатуры
			|		ПО ПорчаТоваровТовары.Номенклатура = ЦеныНоменклатуры.Номенклатура
			|			И ПорчаТоваровТовары.Характеристика = ЦеныНоменклатуры.Характеристика
			|ГДЕ
			|	ПорчаТоваровТовары.Ссылка = &ТекущийДокумент
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПорчаТоваровТовары.Ссылка,
			|	ПорчаТоваровТовары.НомерСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПорчаТоваровТовары.НоменклатураОприходование.НаименованиеПолное КАК УтильНоменклатура,
			|	ПорчаТоваровТовары.ХарактеристикаОприходование.НаименованиеПолное КАК УтильХарактеристика,
			|	&ТекстЗапросаКолонкаКодов КАК УтильКод,
			|	СУММА(ПорчаТоваровТовары.Количество) КАК Количество,
			|	ПорчаТоваровТовары.НоменклатураОприходование.Качество КАК ГрадацияКачества,
			|	ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
			|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
			|	ВЫРАЗИТЬ(ВЫБОР
			|		КОГДА ПорчаТоваровТовары.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки2 ЕСТЬ NULL 
			|							И &ТекстЗапросаКоэффициентУпаковки2 <> 0
			|						ТОГДА ЕСТЬNULL(ЦеныУтиль.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки2
			|					ИНАЧЕ ЕСТЬNULL(ЦеныУтиль.Цена, 0)
			|				КОНЕЦ * &КоэффициентПересчетаВалютыВидаЦенВВалютуРегл
			|		ИНАЧЕ ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл
			|	КОНЕЦ КАК ЧИСЛО (15,2)) КАК Цена
			|ИЗ
			|	Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
			|				(ВидЦены, Номенклатура, Характеристика) В
			|					(ВЫБРАТЬ
			|						&ВидЦен,
			|						ПорчаТоваровТовары.Номенклатура,
			|						ПорчаТоваровТовары.Характеристика
			|					ИЗ
			|						Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
			|					ГДЕ
			|						ПорчаТоваровТовары.Ссылка = &ТекущийДокумент)) КАК ЦеныУтиль
			|		ПО ПорчаТоваровТовары.Номенклатура = ЦеныУтиль.Номенклатура
			|			И ПорчаТоваровТовары.Характеристика = ЦеныУтиль.Характеристика
			|ГДЕ
			|	ПорчаТоваровТовары.Ссылка = &ТекущийДокумент
			|	И ПорчаТоваровТовары.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|
			|СГРУППИРОВАТЬ ПО
			|	ПорчаТоваровТовары.НоменклатураОприходование.НаименованиеПолное,
			|	ПорчаТоваровТовары.ХарактеристикаОприходование.НаименованиеПолное,
			|	&ТекстЗапросаКолонкаКодов,
			|	ВЫРАЗИТЬ(ВЫБОР
			|		КОГДА ПорчаТоваровТовары.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки2 ЕСТЬ NULL 
			|							И &ТекстЗапросаКоэффициентУпаковки2 <> 0
			|						ТОГДА ЕСТЬNULL(ЦеныУтиль.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки2
			|					ИНАЧЕ ЕСТЬNULL(ЦеныУтиль.Цена, 0)
			|				КОНЕЦ * &КоэффициентПересчетаВалютыВидаЦенВВалютуРегл
			|		ИНАЧЕ ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл
			|	КОНЕЦ КАК ЧИСЛО (15,2)),
			|	ПорчаТоваровТовары.НоменклатураОприходование.Качество,
			|	ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения.Код,
			|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения)";
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"&ТекстЗапросаКоэффициентУпаковки1",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"ЦеныНоменклатуры.Упаковка",
				"ЦеныНоменклатуры.Номенклатура"));
				
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"&ТекстЗапросаКоэффициентУпаковки2",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"ЦеныУтиль.Упаковка",
				"ЦеныУтиль.Номенклатура"));
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"&ТекстЗапросаКолонкаКодов",
				"ПорчаТоваровТовары.НоменклатураОприходование." + КолонкаКодов);
				
			ЗапросПоТоварам.Текст = ТекстЗапроса;
			ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ВыборкаПоДокументам.Ссылка);
			ЗапросПоТоварам.УстановитьПараметр("ДатаЦен", ВыборкаПоДокументам.ДатаДокумента);
			ЗапросПоТоварам.УстановитьПараметр("ВидЦен", ВыборкаПоДокументам.ВидЦен);
			
			КоэффицентыВалютыДокумента = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
					ВыборкаПоДокументам.ВалютаДокумента, Неопределено, ВыборкаПоДокументам.ДатаДокумента);
			КоэффицентыВалютыВидаЦен = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
					ВыборкаПоДокументам.ВалютаВидаЦены, Неопределено, ВыборкаПоДокументам.ДатаДокумента);
			
			ЗапросПоТоварам.УстановитьПараметр("КоэффициентПересчетаВалютыДокументаВВалютуРегл",
				КоэффицентыВалютыДокумента.КоэффициентПересчетаВВалютуРегл);
			ЗапросПоТоварам.УстановитьПараметр("КоэффициентПересчетаВалютыВидаЦенВВалютуРегл",
				КоэффицентыВалютыВидаЦен.КоэффициентПересчетаВВалютуРегл);
			
			РезультатыПоТоварам = ЗапросПоТоварам.ВыполнитьПакет();
			ВыборкаСтрокТовары	= РезультатыПоТоварам[0].Выбрать();
			ВыборкаСтрокУтиль	= РезультатыПоТоварам[1].Выбрать();
						
		ИначеЕсли ВыборкаПоДокументам.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости Тогда
			
			Если ВыборкаПоДокументам.ПредварительныйРасчет = Null Тогда
				ТекстСообщения = НСтр("ru = 'Не удалось получить цены по себестоимости для документа %Документ%: на %Период% не произведен расчет себестоимости.'");
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ВыборкаПоДокументам.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", Формат(НачалоМесяца(ВыборкаПоДокументам.ДатаДокумента),"ДЛФ=DD"));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				Продолжить;
			КонецЕсли;
				
			Если ВыборкаПоДокументам.ПредварительныйРасчет Тогда
				
				ТекстСообщения = НСтр("ru = 'При печати документа %Документ% использовались данные предварительного расчета себестоимости.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ВыборкаПоДокументам.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				ЗапросПоТоварам.Текст =
				"ВЫБРАТЬ
				|	Аналитика.Номенклатура                        КАК Номенклатура,
				|	Аналитика.Характеристика                      КАК Характеристика,
				|	ПорчаТоваровОбщая.ВидЗапасов                  КАК ВидЗапасов,
				|	ПорчаТоваровОбщая.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
				|	ПорчаТоваровОбщая.Количество                  КАК Количество,
				|	ПорчаТоваровОбщая.НомерСтроки                 КАК НомерСтроки,
				|	ПорчаТоваровОбщая.НоменклатураОприходование   КАК НоменклатураОприходование,
				|	ПорчаТоваровОбщая.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
				|	ПорчаТоваровОбщая.Цена                        КАК Цена,
				|	ПорчаТоваровОбщая.Ссылка                      КАК Ссылка
				|ПОМЕСТИТЬ ПорчаТоваровСКлючамиАналитики
				|ИЗ
				|	(ВЫБРАТЬ
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
				|		ПорчаТоваровВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
				|		ПорчаТоваровВидыЗапасов.Количество КАК Количество,
				|		ПорчаТоваровВидыЗапасов.НомерСтроки КАК НомерСтроки,
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Номенклатура КАК НоменклатураОприходование,
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Характеристика КАК ХарактеристикаОприходование,
				|		ВЫРАЗИТЬ(ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл КАК ЧИСЛО (15,2)) КАК Цена,
				|		ПорчаТоваровВидыЗапасов.Ссылка КАК Ссылка
				|	ИЗ
				|		Документ.ПорчаТоваров.ВидыЗапасов КАК ПорчаТоваровВидыЗапасов
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
				|			ПО ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатуры = ПорчаТоваровТовары.АналитикаУчетаНоменклатуры
				|				И ПорчаТоваровВидыЗапасов.Ссылка = ПорчаТоваровТовары.Ссылка
				|	) КАК ПорчаТоваровОбщая
				|	
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
				|	ПО ПорчаТоваровОбщая.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
				|ГДЕ
				|	ПорчаТоваровОбщая.Ссылка = &ТекущийДокумент
				|	И ПорчаТоваровОбщая.Ссылка.Организация = &Организация
				|	И ПорчаТоваровОбщая.Ссылка.Проведен
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное КАК УтильНоменклатура,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное КАК УтильХарактеристика,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование." + КолонкаКодов + " КАК УтильКод,
				|	СУММА(ПорчаТоваровСКлючамиАналитики.Количество) КАК Количество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныУтиль.СтоимостьРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ДопРасходыРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ТрудозатратыРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ПостатейныеПостоянныеРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ПостатейныеПеременныеРегл, 0)
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК Цена
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров.СрезПоследних(
				|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
				|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
				|					(ВЫБРАТЬ
				|						Таблица.АналитикаУчетаНоменклатуры,
				|						&Организация,
				|						Таблица.ВидЗапасов
				|					ИЗ
				|						ПорчаТоваровСКлючамиАналитики КАК Таблица)) КАК ЦеныУтиль
				|		ПО ПорчаТоваровСКлючамиАналитики.АналитикаУчетаНоменклатуры = ЦеныУтиль.АналитикаУчетаНоменклатуры
				|			И (НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов
				|				ИЛИ ПорчаТоваровСКлючамиАналитики.ВидЗапасов = ЦеныУтиль.ВидЗапасов)
				|			И (ЦеныУтиль.Организация = &Организация)
				|ГДЕ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование." + КолонкаКодов + ",
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныУтиль.СтоимостьРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ДопРасходыРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ТрудозатратыРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ПостатейныеПостоянныеРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ПостатейныеПеременныеРегл, 0)
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
				|	ПорчаТоваровСКлючамиАналитики.НомерСтроки КАК НомерСтроки,
				|	ПорчаТоваровСКлючамиАналитики.Количество КАК Количество,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Количество
				|	КОНЕЦ КАК УценкаКоличество,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0)
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК УценкаЦена,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0) * ПорчаТоваровСКлючамиАналитики.Количество
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена * ПорчаТоваровСКлючамиАналитики.Количество
				|	КОНЕЦ КАК УценкаСтоимость,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Код КАК ТоварКод,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Артикул КАК ТоварАртикул,
				|	(ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0)
				|		+ ЕСТЬNULL(ЦеныНоменклатуры.ДопРасходыРегл, 0)
				|		+ ЕСТЬNULL(ЦеныНоменклатуры.ТрудозатратыРегл, 0)
				|		+ ЕСТЬNULL(ЦеныНоменклатуры.ПостатейныеПостоянныеРегл, 0)
				|		+ ЕСТЬNULL(ЦеныНоменклатуры.ПостатейныеПеременныеРегл, 0))	КАК Цена,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров.СрезПоследних(
				|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
				|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
				|					(ВЫБРАТЬ
				|						Таблица.АналитикаУчетаНоменклатуры,
				|						&Организация,
				|						Таблица.ВидЗапасов
				|					ИЗ
				|						ПорчаТоваровСКлючамиАналитики КАК Таблица)) КАК ЦеныНоменклатуры
				|		ПО ПорчаТоваровСКлючамиАналитики.АналитикаУчетаНоменклатуры = ЦеныНоменклатуры.АналитикаУчетаНоменклатуры
				|			И (ПорчаТоваровСКлючамиАналитики.ВидЗапасов = ЦеныНоменклатуры.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
				|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
				|			И (ЦеныНоменклатуры.Организация = &Организация)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ПорчаТоваровСКлючамиАналитики.Ссылка,
				|	ПорчаТоваровСКлючамиАналитики.НомерСтроки";
								
			Иначе
				//Фактический расчет
				ЗапросПоТоварам.Текст =
				"ВЫБРАТЬ
				|	Аналитика.Номенклатура                        КАК Номенклатура,
				|	Аналитика.Характеристика                      КАК Характеристика,
				|	ПорчаТоваровОбщая.ВидЗапасов                  КАК ВидЗапасов,
				|	ПорчаТоваровОбщая.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
				|	ПорчаТоваровОбщая.Количество                  КАК Количество,
				|	ПорчаТоваровОбщая.НомерСтроки                 КАК НомерСтроки,
				|	ПорчаТоваровОбщая.НоменклатураОприходование   КАК НоменклатураОприходование,
				|	ПорчаТоваровОбщая.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
				|	ПорчаТоваровОбщая.Цена                        КАК Цена,
				|	ПорчаТоваровОбщая.Ссылка                      КАК Ссылка
				|ПОМЕСТИТЬ ПорчаТоваровСКлючамиАналитики
				|ИЗ
				|	(ВЫБРАТЬ
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
				|		ПорчаТоваровВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
				|		ПорчаТоваровВидыЗапасов.Количество КАК Количество,
				|		ПорчаТоваровВидыЗапасов.НомерСтроки КАК НомерСтроки,
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Номенклатура КАК НоменклатураОприходование,
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Характеристика КАК ХарактеристикаОприходование,
				|		ВЫРАЗИТЬ(ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл КАК ЧИСЛО (15,2)) КАК Цена,
				|		ПорчаТоваровВидыЗапасов.Ссылка КАК Ссылка
				|	ИЗ
				|		Документ.ПорчаТоваров.ВидыЗапасов КАК ПорчаТоваровВидыЗапасов
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
				|			ПО ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатуры = ПорчаТоваровТовары.АналитикаУчетаНоменклатуры
				|				И ПорчаТоваровВидыЗапасов.Ссылка = ПорчаТоваровТовары.Ссылка
				|		) КАК ПорчаТоваровОбщая
				|	
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
				|	ПО ПорчаТоваровОбщая.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
				|ГДЕ
				|	ПорчаТоваровОбщая.Ссылка = &ТекущийДокумент
				|	И ПорчаТоваровОбщая.Ссылка.Организация = &Организация
				|	И ПорчаТоваровОбщая.Ссылка.Проведен
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное КАК УтильНоменклатура,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное КАК УтильХарактеристика,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование." + КолонкаКодов + " КАК УтильКод,
				|	СУММА(ПорчаТоваровСКлючамиАналитики.Количество) КАК Количество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|					КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
				|						ТОГДА 0
				|					ИНАЧЕ (ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0)
				|							+ ЕСТЬNULL(СебестоимостьТоваров.ДопРасходыРеглОстаток, 0)
				|							+ ЕСТЬNULL(СебестоимостьТоваров.ТрудозатратыРеглОстаток, 0)
				|							+ ЕСТЬNULL(СебестоимостьТоваров.ПостатейныеПостоянныеРеглОстаток, 0)
				|							+ ЕСТЬNULL(СебестоимостьТоваров.ПостатейныеПеременныеРеглОстаток, 0))
				|						/ СебестоимостьТоваров.КоличествоОстаток
				|				КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК Цена
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(КОНЕЦПЕРИОДА(&ДатаЦен, МЕСЯЦ), Организация = &Организация) КАК СебестоимостьТоваров
				|		ПО ПорчаТоваровСКлючамиАналитики.АналитикаУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры
				|			И ПорчаТоваровСКлючамиАналитики.ВидЗапасов = СебестоимостьТоваров.ВидЗапасов
				|			И (СебестоимостьТоваров.Организация = &Организация)
				|ГДЕ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование." + КолонкаКодов + ",
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|					КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
				|						ТОГДА 0
				|					ИНАЧЕ (ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0)
				|							+ ЕСТЬNULL(СебестоимостьТоваров.ДопРасходыРеглОстаток, 0)
				|							+ ЕСТЬNULL(СебестоимостьТоваров.ТрудозатратыРеглОстаток, 0)
				|							+ ЕСТЬNULL(СебестоимостьТоваров.ПостатейныеПостоянныеРеглОстаток, 0)
				|							+ ЕСТЬNULL(СебестоимостьТоваров.ПостатейныеПеременныеРеглОстаток, 0))
				|						/ СебестоимостьТоваров.КоличествоОстаток
				|				КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
				|	ПорчаТоваровСКлючамиАналитики.НомерСтроки КАК НомерСтроки,
				|	ПорчаТоваровСКлючамиАналитики.Количество КАК Количество,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Количество
				|	КОНЕЦ КАК УценкаКоличество,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|					КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
				|						ТОГДА 0
				|					ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток
				|				КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК УценкаЦена,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|					КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
				|						ТОГДА 0
				|					ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0) / СебестоимостьТоваров.КоличествоОстаток * ПорчаТоваровСКлючамиАналитики.Количество
				|				КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Количество * ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК УценкаСтоимость,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Код КАК ТоварКод,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Артикул КАК ТоварАртикул,
				|	ВЫБОР
				|		КОГДА ЕСТЬNULL(СебестоимостьТоваров.КоличествоОстаток, 0) = 0
				|			ТОГДА 0
				|		ИНАЧЕ (ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРеглОстаток, 0)
				|			+ ЕСТЬNULL(СебестоимостьТоваров.ДопРасходыРеглОстаток, 0)
				|			+ ЕСТЬNULL(СебестоимостьТоваров.ТрудозатратыРеглОстаток, 0)
				|			+ ЕСТЬNULL(СебестоимостьТоваров.ПостатейныеПостоянныеРеглОстаток, 0)
				|			+ ЕСТЬNULL(СебестоимостьТоваров.ПостатейныеПеременныеРеглОстаток, 0))
				|			/ СебестоимостьТоваров.КоличествоОстаток
				|	КОНЕЦ КАК Цена,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(КОНЕЦПЕРИОДА(&ДатаЦен, МЕСЯЦ), Организация = &Организация) КАК СебестоимостьТоваров
				|		ПО ПорчаТоваровСКлючамиАналитики.АналитикаУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры
				|			И (ПорчаТоваровСКлючамиАналитики.ВидЗапасов = СебестоимостьТоваров.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
				|				ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
				|			И (СебестоимостьТоваров.Организация = &Организация)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ПорчаТоваровСКлючамиАналитики.Ссылка,
				|	ПорчаТоваровСКлючамиАналитики.НомерСтроки";
				
			КонецЕсли;
			
			ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ВыборкаПоДокументам.Ссылка);
			ЗапросПоТоварам.УстановитьПараметр("ДатаЦен", ВыборкаПоДокументам.ДатаДокумента);
			ЗапросПоТоварам.УстановитьПараметр("Организация", ВыборкаПоДокументам.Организация);
			ЗапросПоТоварам.УстановитьПараметр("Склад", ВыборкаПоДокументам.Склад);
			
			УчитыватьСебестоимостьТоваровПоВидамЗапасов = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов");
			ЗапросПоТоварам.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", УчитыватьСебестоимостьТоваровПоВидамЗапасов);
			
			КоэффицентыВалютыДокумента = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
					ВыборкаПоДокументам.ВалютаДокумента, Неопределено, ВыборкаПоДокументам.ДатаДокумента);
			
			ЗапросПоТоварам.УстановитьПараметр("КоэффициентПересчетаВалютыДокументаВВалютуРегл",
				КоэффицентыВалютыДокумента.КоэффициентПересчетаВВалютуРегл);
			
			РезультатыПоТоварам = ЗапросПоТоварам.ВыполнитьПакет();
			ВыборкаСтрокТовары	= РезультатыПоТоварам[2].Выбрать();
			ВыборкаСтрокУтиль	= РезультатыПоТоварам[1].Выбрать();
			
		КонецЕсли;
		
		НомерСтраницы			= 1;
		ОбластьШапки.Параметры.Заполнить(ВыборкаПоДокументам);
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
		ОбластьШапки.Параметры.ОрганизацияПредставление 	= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ЮридическийАдрес");
		ОбластьШапки.Параметры.НомерДокумента 				= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоДокументам.Номер);
		ОбластьШапки.Параметры.ФИОРуководителя 				= ВыборкаПоДокументам.Руководитель;
		ОбластьШапки.Параметры.ПодразделениеПредставление 	= СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоДокументам.СкладПредставление);
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьШапки, ВыборкаПоДокументам.Ссылка);
		ТабДокумент.Вывести(ОбластьШапки);
		
		НомерСтраницы    = НомерСтраницы + 1;
		ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		
		ИтогоСтоимость 		  = 0;
		ИтогоКоличество 	  = 0;
		ИтогоУценкаКоличество = 0;
		ИтогоУценкаСтоимость  = 0;
		ИтогоУценкаСумма      = 0;
		// Выводим многострочную часть документа
		
		КоличествоСтрок 	= ВыборкаСтрокТовары.Количество();
		ПерваяСтрока		= Истина;
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			ОбластьСтрока.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(ВыборкаСтрокТовары.НоменклатураПредставление,
			ВыборкаСтрокТовары.ХарактеристикаПредставление);
			
			ЦенаНеЗадана = НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Цена);
			ОбластьСтрока.Параметры.Цена	= ?(ЦенаНеЗадана, 0, ВыборкаСтрокТовары.Цена);
			ОбластьСтрока.Параметры.Сумма	= ?(ЦенаНеЗадана, 0, ВыборкаСтрокТовары.Цена * ВыборкаСтрокТовары.Количество);
			
			ЦенаУценкиНеЗадана = Не ЗначениеЗаполнено(ВыборкаСтрокТовары.УценкаЦена);
			
			ОбластьСтрока.Параметры.УценкаЦена		= ?(ЦенаУценкиНеЗадана, 0, ВыборкаСтрокТовары.УценкаЦена);
			ОбластьСтрока.Параметры.УценкаСтоимость	= ?(ЦенаУценкиНеЗадана, 0, ВыборкаСтрокТовары.УценкаЦена * ВыборкаСтрокТовары.Количество);
			
			Если Не (ЦенаНеЗадана)
				И ВыборкаСтрокТовары.ГрадацияКачества <> Перечисления.ГрадацииКачества.НеГоден
				И Не ВыборкаПоДокументам.ПриходоватьТоварыПоСебестоимостиСписания Тогда
				ОбластьСтрока.Параметры.УценкаСумма = ОбластьСтрока.Параметры.Сумма - ОбластьСтрока.Параметры.УценкаСтоимость;
				ОбластьСтрока.Параметры.ПроцентСкидки = ОбластьСтрока.Параметры.УценкаСумма/ОбластьСтрока.Параметры.Сумма*100;
			Иначе
				ОбластьСтрока.Параметры.УценкаСумма = 0;
				ОбластьСтрока.Параметры.ПроцентСкидки = 0;
			КонецЕсли;
			
			Если ПерваяСтрока Тогда
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
				ПерваяСтрока = Ложь;
			Иначе
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
				МассивВыводимыхОбластей.Добавить(ОбластьИтого);
				Если ВыборкаСтрокТовары.НомерСтроки = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
				КонецЕсли;
				
				Если Не ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьСтрока);
			
			// Обновим итоги по документу
			ИтогоСтоимость = ИтогоСтоимость + ОбластьСтрока.Параметры.Сумма;
			ИтогоКоличество = ИтогоКоличество + ВыборкаСтрокТовары.Количество;
			ИтогоУценкаКоличество = ИтогоУценкаКоличество + ВыборкаСтрокТовары.УценкаКоличество;
			Если Не ВыборкаПоДокументам.ПриходоватьТоварыПоСебестоимостиСписания Тогда
				ИтогоУценкаСтоимость = ИтогоУценкаСтоимость + ОбластьСтрока.Параметры.УценкаСтоимость;
				ИтогоУценкаСумма = ИтогоУценкаСумма + ОбластьСтрока.Параметры.УценкаСумма;
			КонецЕсли;
		КонецЦикла;
		
		// Выводим итоги по документу в общем
		ОбластьИтого.Параметры.ИтогоСумма = ИтогоСтоимость;
		ОбластьИтого.Параметры.ИтогоКоличество = ИтогоКоличество;
		ОбластьИтого.Параметры.ИтогоУценкаКоличество = ИтогоУценкаКоличество;
		ОбластьИтого.Параметры.ИтогоУценкаСумма = ИтогоУценкаСумма;
		ОбластьИтого.Параметры.ИтогоУценкаСтоимость = ИтогоУценкаСтоимость;
		СуммаРасходовПорчи = ?(ИтогоУценкаСумма = 0, ИтогоСтоимость, ИтогоУценкаСтоимость);
		ТабДокумент.Вывести(ОбластьИтого);
		
		ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ВыборкаПоДокументам);
		ТабДокумент.Вывести(ОбластьПодвал);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ПерваяСтрока = Истина;
		НомерСтраницы    = НомерСтраницы + 1;
		ОбластьЗаголовокТаблицыУтиль.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		
		ИтогоУтильКоличество 	= 0;
		ИтогоУтильСумма 		= 0;
		
		Пока ВыборкаСтрокУтиль.Следующий() Цикл
		
			ОбластьСтрокаУтиль.Параметры.Заполнить(ВыборкаСтрокУтиль);
			ОбластьСтрокаУтиль.Параметры.УтильНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(ВыборкаСтрокУтиль.УтильНоменклатура,
																																ВыборкаСтрокУтиль.УтильХарактеристика);
			
			ЦенаНеЗадана = НЕ ЗначениеЗаполнено(ВыборкаСтрокУтиль.Цена);
			ОбластьСтрокаУтиль.Параметры.Цена	= ?(ЦенаНеЗадана, 0, ВыборкаСтрокУтиль.Цена);
			ОбластьСтрокаУтиль.Параметры.Сумма	= ?(ЦенаНеЗадана, 0, ОбластьСтрокаУтиль.Параметры.Цена * ОбластьСтрокаУтиль.Параметры.Количество);
			
			Если ПерваяСтрока Тогда
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицыУтиль);
				ПерваяСтрока = Ложь;
			Иначе
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрокаУтиль);
				МассивВыводимыхОбластей.Добавить(ОбластьИтогоУтиль);
				МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
				Если Не ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицыУтиль.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабДокумент.Вывести(ОбластьЗаголовокТаблицыУтиль);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьСтрокаУтиль);
			// Обновим итоги по документу
			ИтогоУтильКоличество = ИтогоУтильКоличество + ОбластьСтрокаУтиль.Параметры.Количество;
			ИтогоУтильСумма = ИтогоУтильСумма + ОбластьСтрокаУтиль.Параметры.Сумма;
			
		КонецЦикла;
		
		Если ВыборкаСтрокУтиль.Количество() > 0 Тогда
			ОбластьИтогоУтиль.Параметры.ИтогоСумма = ИтогоУтильСумма;
			ОбластьИтогоУтиль.Параметры.ИтогоКоличество = ИтогоУтильКоличество;
			ТабДокумент.Вывести(ОбластьИтогоУтиль);
		КонецЕсли;
		
		// Выводим подписи документа
		ОбластьПодписи.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписи.Параметры.СуммаСписанияПрописью 	  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Цел(ИтогоУценкаСумма), Справочники.Валюты.ПустаяСсылка(), Истина);
		СписанияКопеек = (ИтогоУценкаСумма - Цел(ИтогоУценкаСумма)) * 100;
		ОбластьПодписи.Параметры.СписанияКопеек = Формат(СписанияКопеек, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
		
		ОбластьПодписи.Параметры.СуммаСписанияУтиляЛомаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Цел(ИтогоУтильСумма), Справочники.Валюты.ПустаяСсылка(), Истина);
		УтильКопеек = (ИтогоУтильСумма - Цел(ИтогоУтильСумма)) * 100;
		ОбластьПодписи.Параметры.УтильКопеек = Формат(УтильКопеек, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
		
		ОбластьПодписи.Параметры.ДолжностьПредседателя	  = ВыборкаПоДокументам.ДолжностьРуководителя;
		ОбластьПодписи.Параметры.ФИОпредседателя     	  = ВыборкаПоДокументам.Руководитель;
		ОбластьПодписи.Параметры.ДолжностьЧленаКомиссии2  = НСтр("ru='Главный бухгалтер'");
		ОбластьПодписи.Параметры.ФИОЧленаКомиссии2        = ВыборкаПоДокументам.ГлавныйБухгалтер;
		ОбластьПодписи.Параметры.ДолжностьЧленаКомиссии3  = ВыборкаПоДокументам.ДолжностьКладовщика;
		ОбластьПодписи.Параметры.ФИОЧленаКомиссии3        = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Кладовщик, ВыборкаПоДокументам.ДатаДокумента);
		ОбластьПодписи.Параметры.ФИОЧленаРасчетчика       = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Расчетчик, ВыборкаПоДокументам.ДатаДокумента);
		
		ТабДокумент.Вывести(ОбластьПодписи);
		
		НомерДокумента = НомерДокумента + 1;
		Если НомерДокумента < КоличествоДокументов Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьАктаПорчиТоваров(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьДопКолонку = ЗначениеЗаполнено(ДопКолонка);

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Склад КАК Склад,
	|	Документ.Подразделение КАК Подразделение,
	|	Документ.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Подразделение) КАК ПодразделениеПредставление,
	|	Документ.Организация.НаименованиеСокращенное КАК ОрганизацияПредставление,
	|	Документ.Организация.Префикс КАК Префикс,
	|	Документ.Склад.ТекущийОтветственный КАК Кладовщик,
	|	Документ.Склад.ТекущаяДолжностьОтветственного КАК КладовщикДолжность,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.ПричинаПорчи КАК ПричинаПорчи 
	|ИЗ
	|	Документ.ПорчаТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК НоменклатураИсходная,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураИсходнаяПредставление,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаИсходнаяПредставление,
	|	" + ?(ВыводитьДопКолонку, "ТаблицаТовары.Номенклатура." + ДопКолонка +" КАК ДопКолонкаСписание,", "") + "
	|	ТаблицаТовары.НоменклатураОприходование КАК НоменклатураИспорченная,
	|	" + ?(ВыводитьДопКолонку, "НоменклатураОприходование." + ДопКолонка +" КАК ДопКолонкаОприходование,", "") + "
	|	ТаблицаТовары.НоменклатураОприходование.НаименованиеПолное КАК НоменклатураИспорченнаяПредставление,
	|	ТаблицаТовары.ХарактеристикаОприходование.НаименованиеПолное КАК ХарактеристикаИспорченнаяПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Серия) КАК СерияПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияИсходнаяПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияИспорченнаяПредставление,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";	
	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс, Представление");
	СинонимДокумента = НСтр("ru='Акт о порче товаров'");
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПорчаТоваров_АктОПорчеТоваров";         
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПорчаТоваров.ПФ_MXL_АктОПорчеТоваров");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Иначе
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокБезПодразделения");
	КонецЕсли;
	ОбластьОснование  = Макет.ПолучитьОбласть("Основание");

	ОбластьНомераШапка              = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодовИсходнаяШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодовИсходная");
	ОбластьКодовИспорченнаяШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодовИспорченная");
	ОбластьТоварИсходныйШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварИсходный");              
	ОбластьТоварИспорченныйШапка    = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварИспорченный");
	ОбластьЕдИзмИсходнаяШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|ЕдиницаИзмеренияИсходная");
	ОбластьЕдИзмИспорченнаяШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|ЕдиницаИзмеренияИспорченная");
	ОбластьДанныеШапка              = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");

	Если Не ВыводитьДопКолонку Тогда

		Макет.Область("ТоварИсходный").ШиринаКолонки = Макет.Область("ТоварИсходный").ШиринаКолонки
				+ Макет.Область("КолонкаКодовИсходная").ШиринаКолонки;
		Макет.Область("ТоварИспорченный").ШиринаКолонки = Макет.Область("ТоварИспорченный").ШиринаКолонки
				+ Макет.Область("КолонкаКодовИспорченная").ШиринаКолонки;

	КонецЕсли;

	ОбластьНомераСтрока              = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодовИсходнаяСтрока       = Макет.ПолучитьОбласть("Строка|КолонкаКодовИсходная");
	ОбластьКодовИспорченнаяСтрока  = Макет.ПолучитьОбласть("Строка|КолонкаКодовИспорченная");
	ОбластьТоварИсходныйСтрока       = Макет.ПолучитьОбласть("Строка|ТоварИсходный");
	ОбластьТоварИспорченныйСтрока    = Макет.ПолучитьОбласть("Строка|ТоварИспорченный");
	ОбластьЕдИзмИсходнаяСтрока       = Макет.ПолучитьОбласть("Строка|ЕдиницаИзмеренияИсходная");
	ОбластьЕдИзмИспорченнаяСтрока  = Макет.ПолучитьОбласть("Строка|ЕдиницаИзмеренияИспорченная");
	ОбластьДанныхСтрока              = Макет.ПолучитьОбласть("Строка|Данные");

	ОбластьПодвалТаблицы  = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПодписи        = Макет.ПолучитьОбласть("Подписи");
	ОбластьСуммаПрописью  = Макет.ПолучитьОбласть("СуммаПрописью");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокументы = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоТабличнымЧастям = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		// Выводим шапку накладной.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ОбластьЗаголовок.Параметры.СкладПредставление = СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаДокументы.СкладПредставление);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьЗаголовок, ВыборкаДокументы.Ссылка);
		ТабДокумент.Вывести(ОбластьЗаголовок);

		// Вывод шапки.
		ТабДокумент.Вывести(ОбластьНомераШапка);

		Если ВыводитьДопКолонку Тогда

			ТабДокумент.Присоединить(ОбластьКодовИсходнаяШапка);

		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварИсходныйШапка);
		ТабДокумент.Присоединить(ОбластьЕдИзмИсходнаяШапка);
		
		Если ВыводитьДопКолонку Тогда

			ТабДокумент.Присоединить(ОбластьКодовИспорченнаяШапка);

		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварИспорченныйШапка);
  		ТабДокумент.Присоединить(ОбластьЕдИзмИспорченнаяШапка);

		ТабДокумент.Присоединить(ОбластьДанныеШапка);

		СуммаВсего = 0;
		ВсегоНаименований = 0;

		// Вывод строк.
		ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаДокументы.Ссылка));
		
		ВыборкаПоСтрокам = ВыборкаПоТабличнымЧастям.Выбрать();
		
		Пока ВыборкаПоСтрокам.Следующий() Цикл

			ОбластьНомераСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Вывести(ОбластьНомераСтрока);

			Если ВыводитьДопКолонку Тогда

				ОбластьКодовИсходнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьКодовИсходнаяСтрока);

			КонецЕсли;

			// Номенклатура.
			ОбластьТоварИсходныйСтрока.Параметры.НоменклатураИсходная = ВыборкаПоСтрокам.НоменклатураИсходная;
			ОбластьТоварИсходныйСтрока.Параметры.НоменклатураИсходнаяПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоСтрокам.НоменклатураИсходнаяПредставление,
					ВыборкаПоСтрокам.ХарактеристикаИсходнаяПредставление,
					,
					ВыборкаПоСтрокам.СерияПредставление);
					
			ТабДокумент.Присоединить(ОбластьТоварИсходныйСтрока);
			
			ОбластьЕдИзмИсходнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Присоединить(ОбластьЕдИзмИсходнаяСтрока);
			
			Если ВыводитьДопКолонку Тогда

				ОбластьКодовИспорченнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьКодовИспорченнаяСтрока);

			КонецЕсли;

			// Номенклатура.
			ОбластьТоварИспорченныйСтрока.Параметры.НоменклатураИспорченная = ВыборкаПоСтрокам.НоменклатураИспорченная;
			ОбластьТоварИспорченныйСтрока.Параметры.НоменклатураИспорченнаяПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоСтрокам.НоменклатураИспорченнаяПредставление,
					ВыборкаПоСтрокам.ХарактеристикаИспорченнаяПредставление,
					ВыборкаПоСтрокам.СерияПредставление);
					
			ТабДокумент.Присоединить(ОбластьТоварИспорченныйСтрока);
			
			ОбластьЕдИзмИспорченнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Присоединить(ОбластьЕдИзмИспорченнаяСтрока);

			// Данные количестве.
			ОбластьДанныхСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			ТабДокумент.Присоединить(ОбластьДанныхСтрока);

			ВсегоНаименований = ВсегоНаименований + 1;

		КонецЦикла;

		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьПодвалТаблицы);
		// Вывод Суммы прописью.
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;

		ТабДокумент.Вывести(ОбластьСуммаПрописью);

		// Вывод подписей.
		ОбластьПодписи.Параметры.Ответственный = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.Ответственный, ВыборкаДокументы.Дата);
		ОбластьПодписи.Параметры.Кладовщик = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.Кладовщик, ВыборкаДокументы.Дата);		
		ОбластьПодписи.Параметры.КладовщикДолжность = СкладыСервер.ДолжностьОтветственногоЛицаСклада(ВыборкаДокументы.КладовщикДолжность);
		ТабДокумент.Вывести(ОбластьПодписи);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);

	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 1
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Склад КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ПорчаТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.Склад = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.НоменклатураОприходование.ЕдиницаИзмерения КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НоменклатураОприходование КАК Номенклатура,
	|	Товары.ХарактеристикаОприходование КАК Характеристика,
	|	Товары.НоменклатураОприходование.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Товары.НоменклатураОприходование.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Товары.НоменклатураОприходование.ЕдиницаИзмерения.Представление КАК ВидУпаковки,
	|	Товары.Количество КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.НоменклатураОприходование.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Аналитика.Склад КАК Склад,
	|	АналитикаОприходование.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	АналитикаОприходование.Номенклатура КАК Номенклатура,
	|	АналитикаОприходование.Характеристика КАК Характеристика,
	|	АналитикаОприходование.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	АналитикаОприходование.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	АналитикаОприходование.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОприходование
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатурыОприходование = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	АналитикаОприходование.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 3
//
Функция ПолучитьДанныеДляПечатнойФормыМХ3(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Склад КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ПорчаТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.Склад = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Представление КАК ВидУпаковки,
	|	Товары.Количество КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Аналитика.Склад КАК Склад,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Регистрирует данные для обработчика обновления УТ 11.4.1.
// Обработчик обновления производит:
//	- заполнение в ТЧ Товары АналитикаУчетаНоменклатурыОприходование;
//	- заполнение в ТЧ ВидыЗапасов АналитикаУчетаНоменклатурыОприходование;
//	- заполнение ВидЗапасов в ТЧ Товары;
//	- заполнение ВидЗапасовОприходование в ТЧ "ВидыЗапасов";
//	- заполнение нового реквизита "Валюта".
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПорчаТоваров.Товары КАК Товары
	|	ГДЕ
	|		(Товары.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|				ИЛИ Товары.АналитикаУчетаНоменклатурыОприходование = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|					И Товары.Ссылка.Проведен)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументыСНезаполненнойВалютой.Ссылка
	|	ИЗ
	|		Документ.ПорчаТоваров КАК ДокументыСНезаполненнойВалютой
	|	ГДЕ
	|		ДокументыСНезаполненнойВалютой.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК ВложенныйЗапрос");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления производит:
//	- заполнение в ТЧ Товары АналитикаУчетаНоменклатурыОприходование;
//	- заполнение в ТЧ ВидыЗапасов АналитикаУчетаНоменклатурыОприходование;
//	- заполнение ВидЗапасов в ТЧ Товары;
//	- заполнение ВидЗапасовОприходование в ТЧ "ВидыЗапасов";
//	- заполнение нового реквизита "Валюта".
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяДокумента = "Документ.ПорчаТоваров";
	МетаданныеДокумента = Метаданные.Документы.ПорчаТоваров;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяДокумента, МенеджерВременныхТаблиц);
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КОбработке.Ссылка КАК Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	КОбработке.Ссылка.Склад КАК Склад,
	|	КОбработке.Ссылка.Подразделение КАК Подразделение,
	|	МАКСИМУМ(Товары.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)) КАК ОбработатьВидЗапасов,
	|	МАКСИМУМ(Товары.АналитикаУчетаНоменклатурыОприходование = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)) КАК ОбрабатыватьАналитикуОприходование,
	|
	|	// Обработчик заполнения нового реквизита ""Валюта"" в документе.
	|	КОбработке.Ссылка.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) ОбрабатыватьВалюту
	|ИЗ
	|	&ВТДокументыДляОбработки КАК КОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПорчаТоваров.Товары КАК Товары
	|		ПО КОбработке.Ссылка = Товары.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	КОбработке.Ссылка.ВерсияДанных,
	|	КОбработке.Ссылка.Склад,
	|	КОбработке.Ссылка,
	|	КОбработке.Ссылка.Подразделение,
	|	КОбработке.Ссылка.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка),
	|	КОбработке.Ссылка.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДокументыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстЗапросаВидЗапасовОприходование = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидЗапасов.УстарелоНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА РСАналитикаУчетаНоменклатуры.КлючАналитики
	|		ИНАЧЕ ТоварыОрганизаций.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.ВидЗапасов
	|ПОМЕСТИТЬ АналитикаУчетаНоменклатурыВидЗапасов
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РСАналитикаУчетаНоменклатуры
	|		ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура = РСАналитикаУчетаНоменклатуры.Номенклатура
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика = РСАналитикаУчетаНоменклатуры.Характеристика
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия = РСАналитикаУчетаНоменклатуры.Серия
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Склад = РСАналитикаУчетаНоменклатуры.Склад
	|			И ТоварыОрганизаций.ВидЗапасов.УстарелоНазначение = РСАналитикаУчетаНоменклатуры.Назначение
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = РСАналитикаУчетаНоменклатуры.СтатьяКалькуляции
	|ГДЕ
	|	ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ТоварыОрганизаций.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаНоменклатурыВидЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КОЛИЧЕСТВО(АналитикаУчетаНоменклатурыВидЗапасов.ВидЗапасов) КАК КоличествоВидовЗапасов
	|ПОМЕСТИТЬ КоличествоВидовЗапасовПоАналитике
	|ИЗ
	|	АналитикаУчетаНоменклатурыВидЗапасов КАК АналитикаУчетаНоменклатурыВидЗапасов
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатурыВидЗапасов.АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоличествоВидовЗапасовПоАналитике.КоличествоВидовЗапасов,
	|	АналитикаУчетаНоменклатурыВидЗапасов.АналитикаУчетаНоменклатуры,
	|	АналитикаУчетаНоменклатурыВидЗапасов.ВидЗапасов
	|ИЗ
	|	АналитикаУчетаНоменклатурыВидЗапасов КАК АналитикаУчетаНоменклатурыВидЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоВидовЗапасовПоАналитике КАК КоличествоВидовЗапасовПоАналитике
	|		ПО АналитикаУчетаНоменклатурыВидЗапасов.АналитикаУчетаНоменклатуры = КоличествоВидовЗапасовПоАналитике.АналитикаУчетаНоменклатуры";
	
	// Обработчик заполнения нового реквизита ""Валюта"" в документе.
	ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
	
	ВыборкаПоДокументам = Запрос.Выполнить().Выбрать();
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоДокументам.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Если ВыборкаПоДокументам.ОбработатьВидЗапасов Тогда
				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыОрганизаций.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаПоДокументам.Ссылка);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			КонецЕсли;
			
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ВыборкаПоДокументам.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеДокумента,
				ВыборкаПоДокументам.Ссылка,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
		
		ДокОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(ВыборкаПоДокументам.Ссылка, ВыборкаПоДокументам.ВерсияДанных, Параметры.Очередь);
		Если ДокОбъект = Неопределено Тогда
			ЗафиксироватьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		ДокументИзменен = Ложь;
		Если ВыборкаПоДокументам.ОбрабатыватьАналитикуОприходование Тогда
			ДокументИзменен = Истина;
			
			МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(Перечисления.ХозяйственныеОперации.ПорчаТоваров, 
				ВыборкаПоДокументам.Склад,
				ВыборкаПоДокументам.Подразделение,
				Неопределено);
			
			ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
			ИменаПолей.Номенклатура = "НоменклатураОприходование";
			ИменаПолей.Характеристика = "ХарактеристикаОприходование";
			ИменаПолей.Серия = "Серия";
			ИменаПолей.АналитикаУчетаНоменклатуры = "АналитикаУчетаНоменклатурыОприходование";
			
			ТекстПоляНазначение = 
			"ВЫБОР
			|	КОГДА Коллекция.ПодНазначение
			|	ТОГДА Коллекция.Назначение
			|	ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
			|КОНЕЦ";
			
			ИменаПолей.Назначение = Новый Структура("ТекстПоля", ТекстПоляНазначение);
			ПараметрыЗаполненияКлючей = РегистрыСведений.АналитикаУчетаНоменклатуры.ПараметрыЗаполненияКлючейАналитики();
			
			РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ДокОбъект.Товары, МестаУчета, ИменаПолей, Ложь, ПараметрыЗаполненияКлючей);
		КонецЕсли;
		
		Если ВыборкаПоДокументам.ОбработатьВидЗапасов Тогда
			ДокументИзменен = Истина;
		
			Запрос = Новый Запрос(ТекстЗапросаВидЗапасовОприходование);
			Запрос.УстановитьПараметр("Регистратор", ВыборкаПоДокументам.Ссылка);
			
			ЕстьПроблема = Ложь;
			
			ВыборкаПоАналитикам = Запрос.Выполнить().Выбрать();
			Пока ВыборкаПоАналитикам.Следующий() Цикл
				Если ВыборкаПоАналитикам.КоличествоВидовЗапасов <> 1 Тогда
					ТекстИсключения = НСтр("ru = 'Ошибка обработки документа %Документ% - несколько приходуемых видов номенклатуры по одной номенклатуре.'");
					ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Документ%", ВыборкаПоДокументам.Ссылка);
					
					ЕстьПроблема = Истина;
					Прервать;
				КонецЕсли;
				
				НайденныеСтроки = ДокОбъект.Товары.НайтиСтроки(Новый Структура("АналитикаУчетаНоменклатурыОприходование", ВыборкаПоАналитикам.АналитикаУчетаНоменклатуры));
				Для Каждого СтрМас Из НайденныеСтроки Цикл
					СтрМас.ВидЗапасов = ВыборкаПоАналитикам.ВидЗапасов;
				КонецЦикла;
			КонецЦикла;
			
			Если ЕстьПроблема Тогда
				ОтменитьТранзакцию();
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Документы.ПорчаТоваров,
					ВыборкаПоДокументам.Ссылка,
					ТекстИсключения);
				Прервать;
			КонецЕсли;

			ДокОбъект.ЗаполнитьНоменклатуруОприходованиеВидовЗапасов();
		КонецЕсли;
		
		// Обработчик заполнения нового реквизита ""Валюта"" в документе.
		Если ВыборкаПоДокументам.ОбрабатыватьВалюту И Не ЗначениеЗаполнено(ДокОбъект.Валюта)
			И ДокОбъект.Валюта <> ВалютаУправленческогоУчета Тогда
			
			ДокОбъект.Валюта = ВалютаУправленческогоУчета;
			ДокументИзменен = Истина;
			
		КонецЕсли;
		
		Попытка
			Если ДокументИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаПоДокументам.Ссылка);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", ВыборкаПоДокументам.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ПорчаТоваров,
				,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяДокумента);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
