#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
КонецПроцедуры

// Добавляет команду создания документа "Транспортная накладная".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ТранспортнаяНакладная) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ТранспортнаяНакладная.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ТранспортнаяНакладная);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьТТН";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	Возврат; //В дальнейшем будет добавлен код команд
	
КонецПроцедуры

// Формирует структуру данных о транспортных накладных для документа-основания.
//
// Параметры:
//  ДокументСсылка	 - 	 - ДокументСсылка.РеализацияТоваровУслуг, ДокументСсылка.ПеремещениеТоваров, ДокументСсылка.ВозвратТоваровПоставщику
//  	- документ, информацию о транспортных накладных для которого нужно узнать.
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура -
//  	* КоличествоТН - Число - количество транспортных накладных, в которых документ ДокументСсылка числится как документ-основание;
//  	* ТранспортнаяНакладная - ДокументСсылка.ТранспортнаяНакладная - заполнен, если КоличествоТН = 1,
//  		иначе - Документ.ТранспортнаяНакладная.ПустаяСсылка().
//
Функция ПолучитьИнформациюТранспортныхНакладных(ДокументСсылка) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|	Документ.ТранспортнаяНакладная КАК ТранспортнаяНакладная
	|ГДЕ
	|	ТранспортнаяНакладная.ДокументыОснования.ДокументОснование = &ДокументОснование
	|	И НЕ ТранспортнаяНакладная.ПометкаУдаления
	|	И ТранспортнаяНакладная.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТранспортнаяНакладная.Ссылка КАК Ссылка,
	|	ТранспортнаяНакладная.Номер КАК Номер,
	|	ТранспортнаяНакладная.Дата КАК Дата
	|ИЗ
	|	Документ.ТранспортнаяНакладная КАК ТранспортнаяНакладная
	|ГДЕ
	|	ТранспортнаяНакладная.ДокументыОснования.ДокументОснование = &ДокументОснование
	|	И ТранспортнаяНакладная.Проведен
	|	И НЕ ТранспортнаяНакладная.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылка);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	ВыборкаКоличество = РезультатЗапроса[0].Выбрать();
	
	КоличествоТранспортныхНакладных = 0;
	ТранспортнаяНакладная = Документы.ТранспортнаяНакладная.ПустаяСсылка();
	СокращенноеНаименованиеТранспортнойНакладной = "";
	
	Пока ВыборкаКоличество.Следующий() Цикл
		КоличествоТранспортныхНакладных = ВыборкаКоличество.Количество;
	КонецЦикла;
	
	Если КоличествоТранспортныхНакладных = 1 Тогда
		ВыборкаСсылка = РезультатЗапроса[1].Выбрать();
		Пока ВыборкаСсылка.Следующий() Цикл
			ТранспортнаяНакладная = ВыборкаСсылка.Ссылка;
			СтруктураШапки = Новый Структура("Дата, Номер");
			ЗаполнитьЗначенияСвойств(СтруктураШапки, ВыборкаСсылка);
			СокращенноеНаименованиеТранспортнойНакладной = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(СтруктураШапки);
		КонецЦикла;
	КонецЕсли;
	
	ДанныеТранспортныхНакладных = Новый ФиксированнаяСтруктура(
			"КоличествоТранспортныхНакладных, ТранспортнаяНакладная, СокращенноеНаименованиеТранспортнойНакладной", 
			КоличествоТранспортныхНакладных, 
			ТранспортнаяНакладная, 
			СокращенноеНаименованиеТранспортнойНакладной);
	
	Возврат ДанныеТранспортныхНакладных;
	
КонецФункции

// Проверяет наличие транспортных накладных для распоряжений из задания на перевозку.
//
// Параметры:
//  МассивЗаданийНаПеревозку - Массив	 - массив ссылок на задания на перевозку.
// 
// Возвращаемое значение:
//  Число - 1, если есть распоряжения с неоформленными транспортными накладными по заданиям на перевозку,
//  		0, если нет распоряжений с неоформленными транспортными накладными по заданиям на перевозку.
//
Функция ПроверитьНаличиеТранспортныхНакладныхДляРаспоряженийИзЗаданийНаПеревозку(МассивЗаданийНаПеревозку) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = Документы.ЗаданиеНаПеревозку.ТекстЗапросаПолученияСпискаНакладныхИзЗаданийНаПеревозку() +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Накладная
	|ИЗ
	|	НакладныеПоЗаданиямНаПеревозку КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснования
	|		ПО Таблица.Накладная = ТранспортнаяНакладнаяДокументыОснования.ДокументОснование
	|			И Таблица.ЗаданиеНаПеревозку = ТранспортнаяНакладнаяДокументыОснования.Ссылка.ЗаданиеНаПеревозку
	|			И ТранспортнаяНакладнаяДокументыОснования.Ссылка.Проведен
	|ГДЕ
	|	ТранспортнаяНакладнаяДокументыОснования.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаданиеНаПеревозку.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
	|ГДЕ
	|	ЗаданиеНаПеревозку.Ссылка В (&ЗаданияНаПеревозку)
	|	И ЗаданиеНаПеревозку.Операция = ЗНАЧЕНИЕ(Перечисление.ВидыДоставки.НаСклад)";
	
	Запрос.УстановитьПараметр("ЗаданияНаПеревозку",	       МассивЗаданийНаПеревозку);
	Запрос.УстановитьПараметр("НетВыделенныхСтрокАдресов", Истина);
	Запрос.УстановитьПараметр("ВыделенныеСтрокиАдресов",   Новый Массив);
	Запрос.УстановитьПараметр("ВсеРаспоряжения",           Истина);
	Запрос.УстановитьПараметр("Распоряжения",              Новый Массив);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТаблицаНакладныхБезТТН = РезультатЗапроса[2].Выгрузить();
	МассивНакладныхБезТТН = ТаблицаНакладныхБезТТН.ВыгрузитьКолонку("Накладная");
	
	МассивЗаданийБезТТН   = РезультатЗапроса[3].Выгрузить().ВыгрузитьКолонку("Ссылка");
	ШаблонТекстаСообщения = НСтр("ru = 'Невозможно напечатать транспортную накладную для документа ""%Документ%"" с операцией ""%СпособДоставки%"".'");
	
	Для Каждого ЗаданиеНаПеревозку Из МассивЗаданийБезТТН Цикл
		ТекстСообщения = СтрЗаменить(ШаблонТекстаСообщения, "%Документ%", ЗаданиеНаПеревозку);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СпособДоставки%", Перечисления.ВидыДоставки.НаСклад);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(МассивЗаданийНаПеревозку, ЗаданиеНаПеревозку);
	КонецЦикла;
	
	Если МассивНакладныхБезТТН.Количество() > 0 Тогда
		МассивРаспоряженийСТоварами = ПолучитьТолькоДокументыОснованияСТоварами(МассивНакладныхБезТТН);	
		
		// Если остались накладные без ТТН и в них есть номенклатура типа "Товар", то нужно досоздать ТТН для них
		Если МассивРаспоряженийСТоварами.Количество() > 0 Тогда
			Возврат 1;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

// Проверяет наличие транспортных накладных для распоряжений без задания на перевозку.
//
// Параметры:
//  МассивОбъектов	 - Массив	 - массив ссылок на распоряжения.
// 
// Возвращаемое значение:
//  Число - 1, если есть распоряжения с неоформленными транспортными накладными;
//  		0,  если нет распоряжений с неоформленными транспортными накладными.
//
Функция ПроверитьНаличиеТранспортныхНакладныхДляРаспоряжений(МассивОбъектов) Экспорт
	
	Если Не ЗначениеЗаполнено(МассивОбъектов) Тогда
		Возврат 0;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТранспортнаяНакладнаяДокументыОснования.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснования
	|ГДЕ
	|	ТранспортнаяНакладнаяДокументыОснования.ДокументОснование В(&МассивОбъектов)
	|	И ТранспортнаяНакладнаяДокументыОснования.Ссылка.Проведен
	|	И НЕ ТранспортнаяНакладнаяДокументыОснования.Ссылка.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	РеализацияТоваровУслуг.СпособДоставки КАК СпособДоставки,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	|	""НеверныйСпособДоставки"" КАК ОписаниеПроблемы
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.РеализацияПоЗаказам
	|	И РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И РеализацияТоваровУслуг.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслугТовары.Ссылка,
	|	РеализацияТоваровУслугТовары.ЗаказКлиента,
	|	РеализацияТоваровУслугТовары.ЗаказКлиента.СпособДоставки,
	|	НЕОПРЕДЕЛЕНО,
	|	""НеверныйСпособДоставки""
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка.РеализацияПоЗаказам
	|	И РеализацияТоваровУслугТовары.Ссылка В(&МассивОбъектов)
	|	И РеализацияТоваровУслугТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ПеремещениеТоваров.СпособДоставки,
	|	НЕОПРЕДЕЛЕНО,
	|	""НеверныйСпособДоставки""
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	НЕ ПеремещениеТоваров.ПеремещениеПоЗаказам
	|	И ПеремещениеТоваров.Ссылка В(&МассивОбъектов)
	|	И ПеремещениеТоваров.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеТоваровТовары.Ссылка,
	|	ПеремещениеТоваровТовары.ЗаказНаПеремещение,
	|	ПеремещениеТоваровТовары.ЗаказНаПеремещение.СпособДоставки,
	|	НЕОПРЕДЕЛЕНО,
	|	""НеверныйСпособДоставки""
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка.ПеремещениеПоЗаказам
	|	И ПеремещениеТоваровТовары.Ссылка В(&МассивОбъектов)
	|	И ПеремещениеТоваровТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ВозвратТоваровПоставщику.СпособДоставки,
	|	НЕОПРЕДЕЛЕНО,
	|	""НеверныйСпособДоставки""
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка В(&МассивОбъектов)
	|	И ВозвратТоваровПоставщику.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	КорректировкаРеализации.ДокументОснование,
	|	""НеверныйТипДокументаОснованияКорректировки""
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&МассивОбъектов)
	|	И (КорректировкаРеализации.ДокументОснование ССЫЛКА Документ.РеализацияУслугПрочихАктивов
	|			ИЛИ КорректировкаРеализации.ДокументОснование ССЫЛКА Документ.АктВыполненныхРабот)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.УстановитьПараметр("СпособыДоставкиСНашимУчастием", 
		ДоставкаТоваровКлиентСервер.СпособыДоставкиДоКлиентаСНашимУчастием(
			ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками")));
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	ДокументыОснования = РезультатЗапроса[0].Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	Выборка = РезультатЗапроса[1].Выбрать();
	
	МассивДокументовБезНакладных = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(МассивОбъектов);
	
	ТекстСообщенияСпособДоставки = НСтр("ru = 'В документе ""%Документ%"" указан способ доставки ""%СпособДоставки%"". Печать транспортной накладной возможна из задания на перевозку.'");
	ТекстСообщенияКорректировкаРеализации = НСтр("ru = 'Невозможно напечатать транспортную накладную для документа ""%Документ%"", т.к. у него в качестве документа-основания выступает ""%ДокументОснование%"".'");
	ТекстСообщенияСпособДоставкиПоЗаказам = НСтр("ru = 'В заказе ""%Заказ%"" из накладной ""%Документ%"" указан способ доставки ""%СпособДоставки%"". Печать транспортной накладной в этом случае возможна из задания на перевозку.'");

	ТекстСообщения = "";
	
	Пока Выборка.Следующий() Цикл
		
		Если ДокументыОснования.Найти(Выборка.Ссылка) <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(МассивДокументовБезНакладных, Выборка.Ссылка);
			
			Продолжить;
		КонецЕсли;
		
		Если Выборка.ОписаниеПроблемы = "НеверныйСпособДоставки" Тогда  
			
			Если ЗначениеЗаполнено(Выборка.Заказ) Тогда 
				ТекстСообщения = СтрЗаменить(ТекстСообщенияСпособДоставкиПоЗаказам, "%СпособДоставки%", Выборка.СпособДоставки);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Заказ%", Выборка.Заказ);
			Иначе	
				ТекстСообщения = СтрЗаменить(ТекстСообщенияСпособДоставки, "%СпособДоставки%", Выборка.СпособДоставки);
			КонецЕсли;
			
		ИначеЕсли Выборка.ОписаниеПроблемы = "НеверныйТипДокументаОснованияКорректировки" Тогда 
			
			ТекстСообщения = СтрЗаменить(ТекстСообщенияКорректировкаРеализации, "%ДокументОснование%", Выборка.ДокументОснование);
			
		Иначе
			
			ВызватьИсключение НСтр("ru = 'Получено неизвестное описание проблемы. Обратитесь к администратору.'");
			
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", 	Выборка.Ссылка);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,);
		
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(МассивДокументовБезНакладных, Выборка.Ссылка);
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(МассивОбъектов, Выборка.Ссылка);
		
	КонецЦикла;
	
	Для Каждого ДокументОснование Из ДокументыОснования Цикл
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(МассивДокументовБезНакладных, ДокументОснование);
	КонецЦикла;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("МассивОбъектов",МассивОбъектов);
	СтруктураВозврата.Вставить("КоличествоРаспоряженийБезТранспортныхНакладных",МассивДокументовБезНакладных.Количество());
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Создает транспортные накладные по заданиям на перевозку, 
// либо по определенным адресам из одного задания на перевозку.
//
// Параметры:
//	МассивОбъектов - Массив - массив ссылок на задания на перевозку, 
//		по распоряжениям из которых будут созданы транспортные накладные;
//	ВыделенныеСтроки - Массив - массив номеров строк из табличной части Маршрут из задания на перевозку, 
//		по распоряжениям из которых нужно создать транспортные накладные.
//
// Вовращаемое значение:
//	Массив - массив созданных транспортных накладных.
//
Функция СоздатьТранспортныеНакладныеДляЗаданийНаПеревозку(МассивОбъектов, ВыделенныеСтроки = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = Документы.ЗаданиеНаПеревозку.ТекстЗапросаПолученияСпискаНакладныхИзЗаданийНаПеревозку() + 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НакладныеПоЗаданиямНаПеревозку.ЗаданиеНаПеревозку КАК Ссылка,
	|	НакладныеПоЗаданиямНаПеревозку.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ТранспортнаяНакладная.Ссылка, ЗНАЧЕНИЕ(Документ.ТранспортнаяНакладная.ПустаяСсылка)) КАК ТранспортнаяНакладная,
	|	ЕСТЬNULL(ТранспортнаяНакладная.Организация, ЕСТЬNULL(НакладныеПоЗаданиямНаПеревозку.Накладная.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))) КАК Организация,
	|	ВЫБОР
	|		КОГДА (НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ИЛИ НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				) И НакладныеПоЗаданиямНаПеревозку.Накладная.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Грузополучатель
	|		КОГДА (НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ИЛИ НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				) И НакладныеПоЗаданиямНаПеревозку.Накладная.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Контрагент
	|		КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|				И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель
	|		КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|				И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Контрагент

	|		КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|				И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.ОрганизацияПолучатель
	|		КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|				И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ИЛИ НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Плательщик,
	|	ЕСТЬNULL(ТранспортнаяНакладная.АдресДоставки, НакладныеПоЗаданиямНаПеревозку.АдресДоставки) КАК АдресДоставки
	|ИЗ
	|	НакладныеПоЗаданиямНаПеревозку КАК НакладныеПоЗаданиямНаПеревозку
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранспортнаяНакладная КАК ТранспортнаяНакладная
	|		ПО НакладныеПоЗаданиямНаПеревозку.АдресДоставки = ТранспортнаяНакладная.АдресДоставки
	|			И НакладныеПоЗаданиямНаПеревозку.ЗаданиеНаПеревозку = ТранспортнаяНакладная.ЗаданиеНаПеревозку
	|			И НакладныеПоЗаданиямНаПеревозку.Накладная.Организация = ТранспортнаяНакладная.Организация
	|			И (ВЫБОР
	|				КОГДА (НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.РеализацияТоваровУслуг
	|						) И НакладныеПоЗаданиямНаПеревозку.Накладная.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|					ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Грузополучатель
	|				КОГДА (НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.РеализацияТоваровУслуг
	|						) И НакладныеПоЗаданиямНаПеревозку.Накладная.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|					ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Контрагент
	|				КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|						И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель
	|				КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|						И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).Организация
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			КОНЕЦ = ТранспортнаяНакладная.Грузоотправитель)
	|			И ВЫБОР
	|				КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.РеализацияТоваровУслуг
	|					ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Контрагент

	|				КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|						И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель
	|				КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|						И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ИЛИ НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ВозвратТоваровПоставщику
	|					ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Организация
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			КОНЕЦ = ТранспортнаяНакладная.Плательщик
	|			И (ТранспортнаяНакладная.Проведен)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	Организация,
	|	Грузополучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НакладныеПоЗаданиямНаПеревозку.Накладная,
	|	НакладныеПоЗаданиямНаПеревозку.ЗаданиеНаПеревозку КАК Ссылка,
	|	ЕСТЬNULL(НакладныеПоЗаданиямНаПеревозку.Накладная.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	ВЫБОР
	|		КОГДА (НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ИЛИ НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				) И НакладныеПоЗаданиямНаПеревозку.Накладная.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Грузополучатель
	|		КОГДА (НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ИЛИ НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				) И НакладныеПоЗаданиямНаПеревозку.Накладная.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Контрагент
	|		КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|				И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель
	|		КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|				И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Контрагент

	|		КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|				И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель
	|		КОГДА НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ПеремещениеТоваров
	|				И ВЫРАЗИТЬ(НакладныеПоЗаданиямНаПеревозку.Накладная КАК Документ.ПеремещениеТоваров).ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ИЛИ НакладныеПоЗаданиямНаПеревозку.Накладная ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА НакладныеПоЗаданиямНаПеревозку.Накладная.Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Плательщик,
	|	НакладныеПоЗаданиямНаПеревозку.АдресДоставки КАК АдресДоставки,
	|	НакладныеПоЗаданиямНаПеревозку.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	НакладныеПоЗаданиямНаПеревозку КАК НакладныеПоЗаданиямНаПеревозку
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснованияОснования
	|		ПО НакладныеПоЗаданиямНаПеревозку.Накладная = ТранспортнаяНакладнаяДокументыОснованияОснования.ДокументОснование
	|			И (ТранспортнаяНакладнаяДокументыОснованияОснования.Ссылка.ЗаданиеНаПеревозку = НакладныеПоЗаданиямНаПеревозку.ЗаданиеНаПеревозку)
	|			И (ТранспортнаяНакладнаяДокументыОснованияОснования.Ссылка.Проведен)
	|ГДЕ
	|	ТранспортнаяНакладнаяДокументыОснованияОснования.ДокументОснование ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	Организация,
	|	Грузополучатель";
	
	Запрос.УстановитьПараметр("ЗаданияНаПеревозку",  	   МассивОбъектов);
	Запрос.УстановитьПараметр("ВыделенныеСтрокиАдресов",   ВыделенныеСтроки);
	Запрос.УстановитьПараметр("НетВыделенныхСтрокАдресов", НЕ ЗначениеЗаполнено(ВыделенныеСтроки));
	Запрос.УстановитьПараметр("ВсеРаспоряжения",           Истина);
	Запрос.УстановитьПараметр("Распоряжения",              Новый Массив);
	
	УстановитьПривилегированныйРежим(Истина);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	ТранспортныеНакладныеПоНомерамСтрок = МассивРезультатов[2].Выбрать();
	РаспоряженияБезТранспортныхНакладных = МассивРезультатов[3].Выбрать();
	
	СозданныеТранспортныеНакладные 	= Новый Массив;
	
	Пока ТранспортныеНакладныеПоНомерамСтрок.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Ссылка", 			ТранспортныеНакладныеПоНомерамСтрок.Ссылка);
		СтруктураПоиска.Вставить("НомерСтроки", 	ТранспортныеНакладныеПоНомерамСтрок.НомерСтроки);
		СтруктураПоиска.Вставить("Организация", 	ТранспортныеНакладныеПоНомерамСтрок.Организация);
		СтруктураПоиска.Вставить("Плательщик", 		ТранспортныеНакладныеПоНомерамСтрок.Плательщик);
		СтруктураПоиска.Вставить("Грузополучатель", ТранспортныеНакладныеПоНомерамСтрок.Грузополучатель);
		
		МассивРаспоряженийБезТранспортныхНакладных = Новый Массив;
		
		Пока РаспоряженияБезТранспортныхНакладных.НайтиСледующий(СтруктураПоиска) Цикл
			МассивРаспоряженийБезТранспортныхНакладных.Добавить(РаспоряженияБезТранспортныхНакладных.Накладная);		
		КонецЦикла;
		
		МассивРаспоряженийСТоварами = ПолучитьТолькоДокументыОснованияСТоварами(МассивРаспоряженийБезТранспортныхНакладных);
		
		Если НЕ ЗначениеЗаполнено(МассивРаспоряженийСТоварами) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("АдресДоставки", 	ТранспортныеНакладныеПоНомерамСтрок.АдресДоставки);
		ЗначенияЗаполнения.Вставить("Организация", 		ТранспортныеНакладныеПоНомерамСтрок.Организация);
		ЗначенияЗаполнения.Вставить("Плательщик", 		ТранспортныеНакладныеПоНомерамСтрок.Плательщик);
		ЗначенияЗаполнения.Вставить("Грузополучатель", 	ТранспортныеНакладныеПоНомерамСтрок.Грузополучатель);
		ЗначенияЗаполнения.Вставить("Перевозчик", 		Неопределено);
		
		Если ЗначениеЗаполнено(ТранспортныеНакладныеПоНомерамСтрок.ТранспортнаяНакладная) Тогда
			ТранспортнаяНакладная = ПерезаписатьТранспортнуюНакладную(
					ТранспортныеНакладныеПоНомерамСтрок.ТранспортнаяНакладная, 
					МассивРаспоряженийСТоварами,
					ЗначенияЗаполнения,
					ТранспортныеНакладныеПоНомерамСтрок.Ссылка);
		Иначе
			ТранспортнаяНакладная = СоздатьИлиЗаполнитьТранспортнуюНакладную(
					МассивРаспоряженийСТоварами, 
					ЗначенияЗаполнения, 
					ТранспортныеНакладныеПоНомерамСтрок.Ссылка);
		КонецЕсли;
		
		СозданныеТранспортныеНакладные.Добавить(ТранспортнаяНакладная);
		
	КонецЦикла;
		
	Возврат СозданныеТранспортныеНакладные;
		
КонецФункции

// Создает транспортные накладные по распоряжениям.
//
// Параметры:
//	МассивОбъектов	 - Массив	 - массив документов-распоряжений, для которых нужно создать транспотные накладные;
//	ЭтоПечать		 - Булево	 - флаг, Истина если нужно досоздать ТТН по адресам/организациям/грузополучателям/перевозчикам, 
//		 по которым ТТН еще не созданы.
//
// Возвращаемое значение:
//	Массив - массив созданных транспортных накладных.
//
Функция СоздатьТранспортныеНакладные(МассивОбъектов, ЭтоПечать = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВнутренныйЗапрос.Ссылка,
	|	ВнутренныйЗапрос.АдресДоставки,
	|	ВнутренныйЗапрос.Грузополучатель,
	|	ВнутренныйЗапрос.Организация,
	|	ВнутренныйЗапрос.Плательщик,
	|	ВнутренныйЗапрос.Перевозчик
	|ПОМЕСТИТЬ ПараметрыТТН
	|ИЗ
	|	(ВЫБРАТЬ
	|		Документ.Ссылка КАК Ссылка,
	|		Документ.АдресДоставки КАК АдресДоставки,
	|		ВЫБОР
	|			КОГДА Документ.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА Документ.Контрагент
	|			ИНАЧЕ Документ.Грузополучатель
	|		КОНЕЦ КАК Грузополучатель,
	|		Документ.Организация КАК Организация,
	|		Документ.Контрагент КАК Плательщик,
	|		ВЫБОР
	|			КОГДА Документ.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|				ТОГДА Документ.ПеревозчикПартнер
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК Перевозчик
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг КАК Документ
	|	ГДЕ
	|		Документ.Ссылка В(&МассивОбъектов)
	|		И НЕ Документ.РеализацияПоЗаказам
	|		И НЕ Документ.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументТовары.Ссылка,
	|		ДокументТовары.ЗаказКлиента.АдресДоставки,
	|		ВЫБОР
	|			КОГДА ДокументТовары.Ссылка.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ДокументТовары.Ссылка.Контрагент
	|			ИНАЧЕ ДокументТовары.Ссылка.Грузополучатель
	|		КОНЕЦ,
	|		ДокументТовары.Ссылка.Организация,
	|		ДокументТовары.Ссылка.Контрагент,
	|		ВЫБОР
	|			КОГДА ДокументТовары.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|				ТОГДА ДокументТовары.ЗаказКлиента.ПеревозчикПартнер
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК ДокументТовары
	|	ГДЕ
	|		ДокументТовары.Ссылка В(&МассивОбъектов)
	|		И ДокументТовары.Ссылка.РеализацияПоЗаказам
	|		И НЕ ДокументТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Документ.Ссылка,
	|		Документ.АдресДоставки,
	|		ВЫБОР
	|			КОГДА Документ.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА Документ.Организация
	|			ИНАЧЕ Документ.ОрганизацияПолучатель
	|		КОНЕЦ,
	|		Документ.Организация,
	|		ВЫБОР
	|			КОГДА Документ.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА Документ.Организация
	|			ИНАЧЕ Документ.ОрганизацияПолучатель
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Документ.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|				ТОГДА Документ.ПеревозчикПартнер
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ПеремещениеТоваров КАК Документ
	|	ГДЕ
	|		Документ.Ссылка В(&МассивОбъектов)
	|		И НЕ Документ.ПеремещениеПоЗаказам
	|		И НЕ Документ.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументТовары.Ссылка,
	|		ДокументТовары.ЗаказНаПеремещение.АдресДоставки,
	|		ВЫБОР
	|			КОГДА ДокументТовары.Ссылка.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ДокументТовары.Ссылка.Организация
	|			ИНАЧЕ ДокументТовары.Ссылка.ОрганизацияПолучатель
	|		КОНЕЦ,
	|		ДокументТовары.Ссылка.Организация,
	|		ВЫБОР
	|			КОГДА ДокументТовары.Ссылка.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ДокументТовары.Ссылка.Организация
	|			ИНАЧЕ ДокументТовары.Ссылка.ОрганизацияПолучатель
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДокументТовары.ЗаказНаПеремещение.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|				ТОГДА ДокументТовары.ЗаказНаПеремещение.ПеревозчикПартнер
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ДокументТовары
	|	ГДЕ
	|		ДокументТовары.Ссылка В(&МассивОбъектов)
	|		И ДокументТовары.Ссылка.ПеремещениеПоЗаказам
	|		И НЕ ДокументТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровПоставщику.Ссылка,
	|		"""",
	|		ВЫБОР
	|			КОГДА ВозвратТоваровПоставщику.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ВозвратТоваровПоставщику.Контрагент
	|			ИНАЧЕ ВозвратТоваровПоставщику.Грузополучатель
	|		КОНЕЦ,
	|		ВозвратТоваровПоставщику.Организация,
	|		ВозвратТоваровПоставщику.Организация,
	|		ВЫБОР
	|			КОГДА ВозвратТоваровПоставщику.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|				ТОГДА ВозвратТоваровПоставщику.ПеревозчикПартнер
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|	ГДЕ
	|		ВозвратТоваровПоставщику.Ссылка В(&МассивОбъектов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КорректировкаРеализации.Ссылка,
	|		"""",
	|		ВЫБОР
	|			КОГДА КорректировкаРеализации.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА КорректировкаРеализации.Контрагент
	|			ИНАЧЕ КорректировкаРеализации.Грузополучатель
	|		КОНЕЦ,
	|		КорректировкаРеализации.Организация,
	|		КорректировкаРеализации.Контрагент,
	|		НЕОПРЕДЕЛЕНО
	|	ИЗ
	|		Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|	ГДЕ
	|		КорректировкаРеализации.Ссылка В(&МассивОбъектов)) КАК ВнутренныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыТТН.АдресДоставки КАК АдресДоставки,
	|	ПараметрыТТН.Грузополучатель КАК Грузополучатель,
	|	ПараметрыТТН.Организация КАК Организация,
	|	ПараметрыТТН.Плательщик КАК Плательщик,
	|	ПараметрыТТН.Перевозчик КАК Перевозчик,
	|	ПараметрыТТН.Ссылка
	|ИЗ
	|	ПараметрыТТН КАК ПараметрыТТН
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснования
	|		ПО ПараметрыТТН.Ссылка = ТранспортнаяНакладнаяДокументыОснования.ДокументОснование
	|ГДЕ
	|	(ТранспортнаяНакладнаяДокументыОснования.Ссылка ЕСТЬ NULL 
	|			ИЛИ НЕ &ЭтоПечать)
	|
	|УПОРЯДОЧИТЬ ПО
	|	АдресДоставки,
	|	Организация,
	|	Грузополучатель,
	|	Перевозчик";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ЭтоПечать",      ЭтоПечать);
	Запрос.УстановитьПараметр("СпособыДоставкиСНашимУчастием", 
		ДоставкаТоваровКлиентСервер.СпособыДоставкиДоКлиентаСНашимУчастием(
			ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками")));
	УстановитьПривилегированныйРежим(Истина);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивРаспоряжений				= Новый Массив;
	СозданныеТранспортныеНакладные 	= Новый Массив;
	
	ТекАдресДоставки	= Неопределено;
	ТекОрганизация 	 	= Неопределено;
	ТекПлательщик 	 	= Неопределено;
	ТекГрузополучатель 	= Неопределено;
	ТекПеревозчик    	= Неопределено;
	
	ПервоеРаспоряжение = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ПервоеРаспоряжение 
			И (ТекАдресДоставки     <> Выборка.АдресДоставки
			 ИЛИ ТекОрганизация     <> Выборка.Организация
			 ИЛИ ТекПлательщик     	<> Выборка.Плательщик
			 ИЛИ ТекГрузополучатель <> Выборка.Грузополучатель
			 ИЛИ ТекПеревозчик      <> Выборка.Перевозчик) Тогда
			
			Если ЗначениеЗаполнено(МассивРаспоряжений) Тогда
				МассивРаспоряженийСТоварами = ПолучитьТолькоДокументыОснованияСТоварами(МассивРаспоряжений);
				Если ЗначениеЗаполнено(МассивРаспоряженийСТоварами) Тогда 
					ЗначенияЗаполнения = Новый Структура;
					ЗначенияЗаполнения.Вставить("АдресДоставки",   ТекАдресДоставки);
					ЗначенияЗаполнения.Вставить("Организация",     ТекОрганизация);
					ЗначенияЗаполнения.Вставить("Плательщик", 	   ТекПлательщик);
					ЗначенияЗаполнения.Вставить("Грузополучатель", ТекГрузополучатель);
					ЗначенияЗаполнения.Вставить("Перевозчик",      ТекПеревозчик);
					ТранспортнаяНакладная = СоздатьИлиЗаполнитьТранспортнуюНакладную(МассивРаспоряженийСТоварами, ЗначенияЗаполнения);
					СозданныеТранспортныеНакладные.Добавить(ТранспортнаяНакладная);
				КонецЕсли;
				МассивРаспоряжений.Очистить();
			КонецЕсли;
						
		КонецЕсли;
		
		ТекАдресДоставки 	= Выборка.АдресДоставки;
		ТекОрганизация	 	= Выборка.Организация;
		ТекПлательщик	 	= Выборка.Плательщик;
		ТекГрузополучатель	= Выборка.Грузополучатель;
		ТекПеревозчик	    = Выборка.Перевозчик;
		
		МассивРаспоряжений.Добавить(Выборка.Ссылка);
		ПервоеРаспоряжение = Ложь;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(МассивРаспоряжений) Тогда	
		МассивРаспоряженийСТоварами = ПолучитьТолькоДокументыОснованияСТоварами(МассивРаспоряжений);
		Если ЗначениеЗаполнено(МассивРаспоряженийСТоварами) Тогда
			ЗначенияЗаполнения = Новый Структура;
			ЗначенияЗаполнения.Вставить("АдресДоставки",   ТекАдресДоставки);
			ЗначенияЗаполнения.Вставить("Организация",     ТекОрганизация);
			ЗначенияЗаполнения.Вставить("Плательщик",      ТекПлательщик);
			ЗначенияЗаполнения.Вставить("Грузополучатель", ТекГрузополучатель);
			ЗначенияЗаполнения.Вставить("Перевозчик",      ТекПеревозчик);
			ТранспортнаяНакладная = СоздатьИлиЗаполнитьТранспортнуюНакладную(МассивРаспоряженийСТоварами, ЗначенияЗаполнения);
			СозданныеТранспортныеНакладные.Добавить(ТранспортнаяНакладная);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь); 
	
	Возврат СозданныеТранспортныеНакладные;
		
КонецФункции

// Формирует структуру реквизитов документа "Транспортная накладная".
//
// Параметры:
//	МассивРаспоряжений	 - Массив							 - массив распоряжений, которые будут записаны в создаваемую структуру
//		по ключу "ДокументыОснования";
//	ЗаданиеНаПеревозку	 - ДокументСсылка.ЗаданиеНаПеревозку - заполнится сразу в структуре возврата;
//	ЗначенияЗаполнения	 - Структура						 - структура с известными значениями реквизитов.
//
// Возвращаемое значение:
//	Стурктура - Ключи созданной структуры - наименования реквизитов документа "Транспортная накладная".
//
Функция РеквизитыТранспортнойНакладной(МассивРаспоряжений = Неопределено, ЗаданиеНаПеревозку = Неопределено, ЗначенияЗаполнения = Неопределено) Экспорт
	
	ДанныеЗаполнения = Новый Структура;
		
	ДанныеЗаполнения.Вставить("АвтомобильГосударственныйНомер");
	ДанныеЗаполнения.Вставить("АвтомобильМарка");
	ДанныеЗаполнения.Вставить("АвтомобильВместимостьВКубическихМетрах");
	ДанныеЗаполнения.Вставить("АвтомобильГрузоподъемностьВТоннах");
	ДанныеЗаполнения.Вставить("АвтомобильТип");
	ДанныеЗаполнения.Вставить("АдресДоставки");
	ДанныеЗаполнения.Вставить("АдресДоставкиЗначенияПолей");
	ДанныеЗаполнения.Вставить("АдресПогрузки");
	ДанныеЗаполнения.Вставить("АдресПогрузкиЗначенияПолей");
	ДанныеЗаполнения.Вставить("БанковскийСчетЗаказчикаПеревозки");
	ДанныеЗаполнения.Вставить("БанковскийСчетПлательщика");
	ДанныеЗаполнения.Вставить("БанковскийСчетПеревозчика");
	ДанныеЗаполнения.Вставить("ВидПеревозки");
	ДанныеЗаполнения.Вставить("Водитель");
	ДанныеЗаполнения.Вставить("ВыводДанныхОТоварномСоставе",
		Метаданные.Документы.ТранспортнаяНакладная.Реквизиты.ВыводДанныхОТоварномСоставе.ЗначениеЗаполнения);
	ДанныеЗаполнения.Вставить("ГлавныйБухгалтер");
	ДанныеЗаполнения.Вставить("ГосударственныйНомерПрицепа");
	ДанныеЗаполнения.Вставить("Грузоотправитель");
	ДанныеЗаполнения.Вставить("Грузополучатель");
	ДанныеЗаполнения.Вставить("ДоверенностьВыдана");
	ДанныеЗаполнения.Вставить("ДоверенностьДата");
	ДанныеЗаполнения.Вставить("ДоверенностьЛицо");
	ДанныеЗаполнения.Вставить("ДоверенностьНомер");
	ДанныеЗаполнения.Вставить("ЗаданиеНаПеревозку", ЗаданиеНаПеревозку);
	ДанныеЗаполнения.Вставить("ЗаказчикПеревозки");
	ДанныеЗаполнения.Вставить("ЛицензионнаяКарточкаВид");
	ДанныеЗаполнения.Вставить("ЛицензионнаяКарточкаНомер");
	ДанныеЗаполнения.Вставить("ЛицензионнаяКарточкаРегистрационныйНомер");
	ДанныеЗаполнения.Вставить("ЛицензионнаяКарточкаСерия");
	ДанныеЗаполнения.Вставить("МассаБрутто");
	ДанныеЗаполнения.Вставить("МассаНетто");
	ДанныеЗаполнения.Вставить("Организация");
	ДанныеЗаполнения.Вставить("Отпустил");
	ДанныеЗаполнения.Вставить("ОтпустилДолжность");
	ДанныеЗаполнения.Вставить("Перевозчик");
	ДанныеЗаполнения.Вставить("Плательщик");
	ДанныеЗаполнения.Вставить("Прицеп");
	ДанныеЗаполнения.Вставить("Руководитель");
	ДанныеЗаполнения.Вставить("СрокДоставки");
	ДанныеЗаполнения.Вставить("УдостоверениеНомер");
	ДанныеЗаполнения.Вставить("УдостоверениеСерия");
	
	ДанныеЗаполнения.Вставить("Дата");
	
	Если ЗаданиеНаПеревозку <> Неопределено Тогда
		РеквизитыЗаполнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗаданиеНаПеревозку,
			"Контрагент, БанковскийСчетПеревозчика");
		
		ДанныеЗаполнения.Перевозчик = РеквизитыЗаполнения.Контрагент;
		ДанныеЗаполнения.БанковскийСчетПеревозчика = РеквизитыЗаполнения.БанковскийСчетПеревозчика;
	КонецЕсли;
	
	Если ЗначенияЗаполнения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, ЗначенияЗаполнения, , "Перевозчик");
		
		Если ЗаданиеНаПеревозку = Неопределено Тогда
			ДанныеЗаполнения.Перевозчик = ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию(
				ЗначенияЗаполнения.Перевозчик);
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Перевозчик) Тогда
				ДанныеЗаполнения.БанковскийСчетПеревозчика = Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(
					ДанныеЗаполнения.Перевозчик);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если МассивРаспоряжений <> Неопределено Тогда 	
		ДанныеЗаполнения.Вставить("ДокументыОснования", МассивРаспоряжений);
	КонецЕсли;
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

// Создает или заполняет транспортную накладную.
//
// Параметры:
//	МассивРаспоряжений - Массив - массив распоряжений, по которым надо создать ТН;
//	ЗначенияЗаполнения - Структура - значения, которые нужно заполнить по умолчанию:
//		*АдресДоставки 	 - Строка - адрес доставки;
//		*Грузополучатель - СправочникСсылка.Контрагенты - грузополучатель;
//		*Организация 	 - СправочникСсылка.Организации - организация-отправитель;
//		*Перевозчик 	 - СправочникСсылка.Партнеры, Неопределено - партнер-перевозчик.
//	ЗаданиеНаПеревозку = ДокументСсылка.ЗаданиеНаПеревозку - задание на перевозку, по которому создается ТН;
//	ТранспортнаяНакладнаяОбъект - ДокументОбъект.ТранспортнаяНакладная - ТН, которую необходимо заполнить по данным из массива распоряжений.
//
// Вовращаемое значение:
//	ДокументСсылка.ТранспортнаяНакладная - Ссылка созданную или заполненную транспортную накладную
//
Функция СоздатьИлиЗаполнитьТранспортнуюНакладную(МассивРаспоряжений, ЗначенияЗаполнения, ЗаданиеНаПеревозку = Неопределено, ТранспортнаяНакладнаяОбъект = Неопределено) Экспорт
	
	Если ТранспортнаяНакладнаяОбъект = Неопределено Тогда 
		ДокументОбъект = Документы.ТранспортнаяНакладная.СоздатьДокумент();
		НужноПроводитьДокумент = Истина; 
	Иначе 
		ДокументОбъект = ТранспортнаяНакладнаяОбъект;
		НужноПроводитьДокумент = Ложь;
	КонецЕсли;
		
	РеквизитыТранспортнойНакладной = РеквизитыТранспортнойНакладной(МассивРаспоряжений, ЗаданиеНаПеревозку, ЗначенияЗаполнения);
	ЗаполнитьРеквизитыТранспортнойНакладной(МассивРаспоряжений, РеквизитыТранспортнойНакладной, ЗначенияЗаполнения, ЗаданиеНаПеревозку);
	ДокументОбъект.Заполнить(РеквизитыТранспортнойНакладной);
			
	Если НужноПроводитьДокумент Тогда 
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЕсли;
	
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции

// Создает или заполняет транспортную накладную
// Параметры:
// 		МассивРаспоряжений - Массив - массив распоряжений, по которым надо собрать информацию для заполнения документа "Транспортная накладная"
// 
// Вовращаемое значение:
//		Структура реквизитов транспортной накладной со значениями
Функция РеквизитыТранспортнойНакладнойЗаполненные(МассивРаспоряжений = Неопределено) Экспорт
	
	РеквизитыТранспортнойНакладной = РеквизитыТранспортнойНакладной(МассивРаспоряжений);
	ЗаполнитьРеквизитыТранспортнойНакладной(МассивРаспоряжений, РеквизитыТранспортнойНакладной);
	
	Возврат РеквизитыТранспортнойНакладной;
	
КонецФункции

// Функция отсеивает накладные, в которых нет номенлатуры типа "Товар" или "Тара".
//
// Параметры:
//	МассивВсехРаспоряжений - Массив - массив распоряжений, которые нужно проверить;
//	Отказ - Булево - установится в Ложь, если есть распоряжения без номенклатуры типа "Товар" или "Тара".
//
// Вовращаемое значение:
//	Массив - массив распоряжений, которые имеют номенклатуру типа "Товар" или "Тара".
//
Функция ПолучитьТолькоДокументыОснованияСТоварами(МассивВсехРаспоряжений, Отказ = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Валюта КАК Валюта,
	|	ДанныеДокументов.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Валюта,
	|	ДанныеДокументов.ХозяйственнаяОперация
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Валюта КАК Валюта,
	|	ДанныеДокументов.ВидКорректировки
	|
	|ИЗ
	|	Документ.КорректировкаРеализации КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка),
	|	ДанныеДокументов.ХозяйственнаяОперация
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Ссылка КАК ДокументОснование,
	|	ЛОЖЬ КАК Корректировочный
	|
	|ПОМЕСТИТЬ СчетаФактурыОснования
	|ИЗ
	|	ТаблицаДанныхДокументов КАК ДанныеДокументов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивВсехРаспоряжений);
	
	Запрос.Выполнить();
	
	Документы.РеализацияТоваровУслуг.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	Документы.ВозвратТоваровПоставщику.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	Документы.ПеремещениеТоваров.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	Документы.КорректировкаРеализации.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументТовары.Ссылка КАК Ссылка
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК ДокументТовары
	|		
	|ГДЕ
	|	ДокументТовары.ЭтоТовар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеТоваров.Ссылка
	|ИЗ
	|	ПеремещениеТоваровТаблицаТоваров КАК ПеремещениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Ссылка
	|ИЗ
	|	ТаблицаТоваровКорректировкаРеализации КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.ЭтоТовар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументТовары.Ссылка
	|ИЗ
	|	ВозвратТоваровПоставщикуТаблицаТоваров КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.ЭтоТовар";
		
	СтрокиТоваров = Запрос.Выполнить().Выбрать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	МассивРаспоряженийСТоварами = Новый Массив;
	
	Пока СтрокиТоваров.Следующий() Цикл
		Если МассивРаспоряженийСТоварами.Найти(СтрокиТоваров.Ссылка) = Неопределено Тогда
			МассивРаспоряженийСТоварами.Добавить(СтрокиТоваров.Ссылка);	
		КонецЕсли;			
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(МассивВсехРаспоряжений, Неопределено);
	
	МассивРаспоряженийБезТоваров = ОбщегоНазначенияКлиентСервер.РазностьМассивов(МассивВсехРаспоряжений, МассивРаспоряженийСТоварами);
	              	
	Для Каждого РаспоряжениеБезТоваров Из МассивРаспоряженийБезТоваров Цикл
		ТекстСообщения = НСтр("ru = 'Документ ""%Документ%"" не может являться основанием для транспортной накладной, т.к. в нем отсутствует номенклатура типа ""%ТипТовар%"" или ""%ТипТара%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", РаспоряжениеБезТоваров);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипТовар%", Перечисления.ТипыНоменклатуры.Товар);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипТара%", Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, РаспоряжениеБезТоваров,,,Отказ);
	КонецЦикла;
	
	Возврат МассивРаспоряженийСТоварами;
	
КонецФункции

// Возвращает таблицу значений с параметрами отбора ТТН
//
// Параметры:
//  ДокументСсылка	 - 	 - накладная на отгрузку, по которой формируется ТТН
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица с колонками "АдресДоставки", "Грузополучатель", "Организация", "Плательщик", "Перевозчик"
//
Функция ПолучитьПараметрыОтбораТТН(ДокументСсылка) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВнутренныйЗапрос.АдресДоставки,
	|	ВнутренныйЗапрос.Грузополучатель,
	|	ВнутренныйЗапрос.Организация,
	|	ВнутренныйЗапрос.Плательщик,
	|	ВнутренныйЗапрос.ПеревозчикПартнер
	|ИЗ
	|	(ВЫБРАТЬ
	|		Документ.АдресДоставки КАК АдресДоставки,
	|		ВЫБОР
	|			КОГДА Документ.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА Документ.Контрагент
	|			ИНАЧЕ Документ.Грузополучатель
	|		КОНЕЦ КАК Грузополучатель,
	|		Документ.Организация КАК Организация,
	|		Документ.Контрагент КАК Плательщик,
	|		ВЫБОР
	|			КОГДА Документ.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|				ТОГДА Документ.ПеревозчикПартнер
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ПеревозчикПартнер
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг КАК Документ
	|	ГДЕ
	|		Документ.Ссылка = &ДокументСсылка
	|		И НЕ Документ.РеализацияПоЗаказам
	|		И Документ.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументТовары.ЗаказКлиента.АдресДоставки,
	|		ВЫБОР
	|			КОГДА ДокументТовары.ЗаказКлиента.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ДокументТовары.ЗаказКлиента.Контрагент
	|			ИНАЧЕ ДокументТовары.ЗаказКлиента.Грузополучатель
	|		КОНЕЦ,
	|		ДокументТовары.ЗаказКлиента.Организация,
	|		ДокументТовары.ЗаказКлиента.Контрагент,
	|		ВЫБОР
	|			КОГДА ДокументТовары.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|				ТОГДА ДокументТовары.ЗаказКлиента.ПеревозчикПартнер
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК ДокументТовары
	|	ГДЕ
	|		ДокументТовары.Ссылка = &ДокументСсылка
	|		И ДокументТовары.Ссылка.РеализацияПоЗаказам
	|		И ДокументТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Документ.АдресДоставки,
	|		ВЫБОР
	|			КОГДА Документ.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА Документ.Организация
	|			ИНАЧЕ Документ.ОрганизацияПолучатель
	|		КОНЕЦ,
	|		Документ.Организация,
	|		ВЫБОР
	|			КОГДА Документ.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА Документ.Организация
	|			ИНАЧЕ Документ.ОрганизацияПолучатель
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Документ.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|				ТОГДА Документ.ПеревозчикПартнер
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ПеремещениеТоваров КАК Документ
	|	ГДЕ
	|		Документ.Ссылка = &ДокументСсылка
	|		И НЕ Документ.ПеремещениеПоЗаказам
	|		И Документ.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументТовары.ЗаказНаПеремещение.АдресДоставки,
	|		ВЫБОР
	|			КОГДА ДокументТовары.ЗаказНаПеремещение.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ДокументТовары.ЗаказНаПеремещение.Организация
	|			ИНАЧЕ ДокументТовары.ЗаказНаПеремещение.ОрганизацияПолучатель
	|		КОНЕЦ,
	|		ДокументТовары.ЗаказНаПеремещение.Организация,
	|		ВЫБОР
	|			КОГДА ДокументТовары.ЗаказНаПеремещение.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ДокументТовары.ЗаказНаПеремещение.Организация
	|			ИНАЧЕ ДокументТовары.ЗаказНаПеремещение.ОрганизацияПолучатель
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДокументТовары.ЗаказНаПеремещение.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|				ТОГДА ДокументТовары.ЗаказНаПеремещение.ПеревозчикПартнер
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ДокументТовары
	|	ГДЕ
	|		ДокументТовары.Ссылка = &ДокументСсылка
	|		И ДокументТовары.Ссылка.ПеремещениеПоЗаказам
	|		И ДокументТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		"""",
	|		ВЫБОР
	|			КОГДА ВозвратТоваровПоставщику.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ВозвратТоваровПоставщику.Контрагент
	|			ИНАЧЕ ВозвратТоваровПоставщику.Грузополучатель
	|		КОНЕЦ,
	|		ВозвратТоваровПоставщику.Организация,
	|		ВозвратТоваровПоставщику.Организация,
	|		НЕОПРЕДЕЛЕНО
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|	ГДЕ
	|		ВозвратТоваровПоставщику.Ссылка = &ДокументСсылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		"""",
	|		ВЫБОР
	|			КОГДА КорректировкаРеализации.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА КорректировкаРеализации.Контрагент
	|			ИНАЧЕ КорректировкаРеализации.Грузополучатель
	|		КОНЕЦ,
	|		КорректировкаРеализации.Организация,
	|		КорректировкаРеализации.Контрагент,
	|		НЕОПРЕДЕЛЕНО
	|	ИЗ
	|		Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|	ГДЕ
	|		КорректировкаРеализации.Ссылка = &ДокументСсылка) КАК ВнутренныйЗапрос";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("СпособыДоставкиСНашимУчастием", 
		ДоставкаТоваровКлиентСервер.СпособыДоставкиДоКлиентаСНашимУчастием(
			ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками")));
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаПараметров = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТаблицаПараметров
	
КонецФункции

#Область ПриИзмененииРеквизитовРаспоряжения

// Сохраняет значения реквизитов ТН перед записью документа
// Помещает их в реквизит формы произвольного типа РеквизитыТОРГ12ПередЗаписью в виде структуры
// 
// Параметры:
// 	Форма - УпарвляемаяФорма - форма распоряжения, в которой произошли изменения 
//
Процедура СохранитьРеквизитыТОРГ12ПередЗаписью(Форма) Экспорт
	
	НакладнаяСсылка = Форма.Объект.Ссылка;
	
	// Структура для хранения значений реквизитов, важных для транспортной накладной, перед записью распоряжения
	РеквизитыТОРГ12ДляТранспортнойНакладной = РеквизитыТОРГ12ДляТранспортнойНакладной();
	
	МассивРаспоряжений = Новый Массив;
	МассивРаспоряжений.Добавить(НакладнаяСсылка);
	РеквизитыТранспортнойНакладной = РеквизитыТранспортнойНакладнойЗаполненные(МассивРаспоряжений);	
	ЗаполнитьЗначенияСвойств(РеквизитыТОРГ12ДляТранспортнойНакладной, РеквизитыТранспортнойНакладной);
	Форма.РеквизитыТОРГ12ПередЗаписью = РеквизитыТОРГ12ДляТранспортнойНакладной;
	
КонецПроцедуры

// Сравнивает значения реквизитов ТН перед записью и после записи.
//  В результате будут заполнены реквизиты формы "ИзмененныеРеквизитыТОРГ12СтрокаСинонимов" 
//	и "ИзмененныеРеквизитыТОРГ12Строка" и записан реквизит РеквизитыТОРГ12ПослеЗаписи произвольного типа,
// который хранит структуру значений реквизитов ТН после записи и массив транспортных накладных.
//
// Параметры:
// 	Форма - УпарвляемаяФорма - форма распоряжения, в которой произошли изменения 
//
Процедура СравнитьРеквизитыТОРГ12ПослеЗаписи(Форма) Экспорт
	
	НакладнаяСсылка 			= Форма.Объект.Ссылка;
	РеквизитыТОРГ12ПередЗаписью = Форма.РеквизитыТОРГ12ПередЗаписью;
	
	// Структура для хранения значений реквизитов, важных для транспортной накладной, после записи распоряжения
	РеквизитыТОРГ12ПослеЗаписи  = РеквизитыТОРГ12ДляТранспортнойНакладной();
	
	МассивРаспоряжений = Новый Массив;
	МассивРаспоряжений.Добавить(НакладнаяСсылка);
	РеквизитыТранспортнойНакладной = РеквизитыТранспортнойНакладнойЗаполненные(МассивРаспоряжений);	
	ЗаполнитьЗначенияСвойств(РеквизитыТОРГ12ПослеЗаписи, РеквизитыТранспортнойНакладной);
	
	ИзмененныеРеквизитыСинонимы 		= Новый Массив;
	ИзмененныеРеквизиты 				= Новый Массив;
	ИзмененныеПустыеРеквизиты 			= Новый Массив;
	ИзмененныеПустыеРеквизитыСинонимы 	= Новый Массив;
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТранспортнаяНакладнаяДокументыОснования.Ссылка КАК ТранспортнаяНакладная,
	|	КОЛИЧЕСТВО(ТранспортнаяНакладнаяДокументыОснования.ДокументОснование) КАК КоличествоДокументовОснований
	|ИЗ
	|	Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснования
	|ГДЕ
	|	ТранспортнаяНакладнаяДокументыОснования.ДокументОснование = &ДокументОснование
	|	И НЕ ТранспортнаяНакладнаяДокументыОснования.Ссылка.ПометкаУдаления
	|	И ТранспортнаяНакладнаяДокументыОснования.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ТранспортнаяНакладнаяДокументыОснования.Ссылка";
	
	Запрос.УстановитьПараметр("ДокументОснование", НакладнаяСсылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТранспортныеНакладныеНаПерезапись = Новый Массив;
	
	Пока Результат.Следующий() Цикл
		
		Если Результат.КоличествоДокументовОснований <> 1 Тогда 
			Продолжить;		
		КонецЕсли;
		
		ТранспортнаяНакладная = Результат.ТранспортнаяНакладная;
		
		ТранспортныеНакладныеНаПерезапись.Добавить(ТранспортнаяНакладная);
		
		// Стурктура для хранения текущих значений транспортной накладной
		СтруктураРеквизитовТН = РеквизитыТОРГ12ДляТранспортнойНакладной();
		СтруктураРеквизитовТН = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТранспортнаяНакладная, СтруктураРеквизитовТН);	
				                                                  		
		Для Каждого РеквизитДокумента Из РеквизитыТОРГ12ПослеЗаписи Цикл 
			Если РеквизитыТОРГ12ПередЗаписью[РеквизитДокумента.Ключ] <> РеквизитДокумента.Значение
				И ЗначениеЗаполнено(СтруктураРеквизитовТН[РеквизитДокумента.Ключ]) Тогда 
				
				Если ИзмененныеРеквизиты.Найти(РеквизитДокумента.Ключ) = Неопределено Тогда
						ИзмененныеРеквизиты.Добавить(РеквизитДокумента.Ключ);
						ИзмененныеРеквизитыСинонимы.Добавить("""" + Метаданные.Документы.ТранспортнаяНакладная.Реквизиты[РеквизитДокумента.Ключ].Синоним + """");
				КонецЕсли;
				
			КонецЕсли;
									
			Если РеквизитыТОРГ12ПередЗаписью[РеквизитДокумента.Ключ] <> РеквизитДокумента.Значение
				И НЕ ЗначениеЗаполнено(СтруктураРеквизитовТН[РеквизитДокумента.Ключ]) Тогда
				
				Если ИзмененныеПустыеРеквизиты.Найти(РеквизитДокумента.Ключ) = Неопределено Тогда 
					ИзмененныеПустыеРеквизиты.Добавить(РеквизитДокумента.Ключ);
					ИзмененныеПустыеРеквизитыСинонимы.Добавить("""" + Метаданные.Документы.ТранспортнаяНакладная.Реквизиты[РеквизитДокумента.Ключ].Синоним + """");
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
					
	КонецЦикла;
	
	// Если изменились только пустые реквизиты в ТН, то запишем без вопросов
	Если ЗначениеЗаполнено(ИзмененныеПустыеРеквизиты) И Не ЗначениеЗаполнено(ИзмененныеРеквизиты) Тогда
		
		Для Каждого ТранспортнаяНакладная Из ТранспортныеНакладныеНаПерезапись Цикл 
			ИзмененныеПустыеРеквизитыСтрока = СтрСоединить(ИзмененныеПустыеРеквизиты, ", ");
			ДокументОбъект = ТранспортнаяНакладная.ПолучитьОбъект();
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыТОРГ12ПослеЗаписи, ИзмененныеПустыеРеквизитыСтрока);
			Попытка
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЦикла;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИзмененныеРеквизиты, ИзмененныеПустыеРеквизиты, Истина);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИзмененныеРеквизитыСинонимы, ИзмененныеПустыеРеквизитыСинонимы, Истина);
		
		ИзмененныеРеквизитыСтрокаСинонимов = СтрСоединить(ИзмененныеРеквизитыСинонимы, ", ");
		ИзмененныеРеквизитыСтрока 		   = СтрСоединить(ИзмененныеРеквизиты, ", ");
		
		РеквизитыТОРГ12ПослеЗаписи.Вставить("ТранспортныеНакладные", ТранспортныеНакладныеНаПерезапись);
		
		СтруктураРеквизитовФормы = Новый Структура;
		СтруктураРеквизитовФормы.Вставить("ИзмененныеРеквизитыТОРГ12СтрокаСинонимов", ИзмененныеРеквизитыСтрокаСинонимов);
		СтруктураРеквизитовФормы.Вставить("ИзмененныеРеквизитыТОРГ12Строка", 		  ИзмененныеРеквизитыСтрока);
		СтруктураРеквизитовФормы.Вставить("РеквизитыТОРГ12ПослеЗаписи", 		  	  РеквизитыТОРГ12ПослеЗаписи);
		
		ЗаполнитьЗначенияСвойств(Форма, СтруктураРеквизитовФормы);
		Форма.ЗапретНаЗакрытиеФормы = ЗначениеЗаполнено(ИзмененныеРеквизитыСтрокаСинонимов);
		
	КонецЕсли;
	
	РеквизитыТОРГ12ПередЗаписью = Неопределено;
	
КонецПроцедуры

// Обновляет реквизиты, важные для ТН и измененные в распоряжении 
// 
// Параметры:
// 	Форма - УпарвляемаяФорма - форма распоряжения, в которой произошли изменения
//
Процедура ОбновитьРеквизитыТранспортныхНакладных(Форма) Экспорт
	
	НакладнаяСсылка					= Форма.Объект.Ссылка;
	РеквизитыТОРГ12ПослеЗаписи 		= Форма.РеквизитыТОРГ12ПослеЗаписи;
	ИзмененныеРеквизитыТОРГ12Строка = Форма.ИзмененныеРеквизитыТОРГ12Строка; 	
	ТранспортныеНакладные 			= Форма.РеквизитыТОРГ12ПослеЗаписи.ТранспортныеНакладные; 		
	
	Для Каждого ТранспортнаяНакладная Из ТранспортныеНакладные Цикл
		ДокументОбъект = ТранспортнаяНакладная.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыТОРГ12ПослеЗаписи, ИзмененныеРеквизитыТОРГ12Строка);
		
		Если СтрНайти(ИзмененныеРеквизитыТОРГ12Строка, "Плательщик") <> 0 
			И СтрНайти(ИзмененныеРеквизитыТОРГ12Строка, "БанковскийСчетПлательщика") = 0 Тогда 
				Если  ТипЗнч(ДокументОбъект.Плательщик) = Тип("СправочникСсылка.Контрагенты") Тогда
					ДокументОбъект.БанковскийСчетПлательщика = Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(ДокументОбъект.Плательщик);
				Иначе
					СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
					СтруктураПараметров.Организация = ДокументОбъект.Плательщик;
					ДокументОбъект.БанковскийСчетПлательщика = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);
				КонецЕсли;
		КонецЕсли;
	
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;	
	КонецЦикла;

КонецПроцедуры

#Область ПроверкаДокументоДляОформленияТранспортныхНакладных

// Проверяет задания на перевозку для оформления транспортных накладных
//
// Параметры:
//  МассивЗаданийНаПеревозку - Массив	 - массив заданий на перевозку, которые нужно проверить
//  ВыделенныеСтрокиАдресов	 - Массив	 - номера выделенных строк адресов, заполнен если проверка вызывается из конкретного докумнета по определенным адресам доставки
// 
// Возвращаемое значение:
//  Массив - задания на перевозку, по которым можно создать ТТН
//
Функция ПроверитьЗаданияНаПеревозкуДляОформленияТранспортныхНакладных(МассивЗаданийНаПеревозку, ВыделенныеСтрокиАдресов = Неопределено) Экспорт
	
	Если МассивЗаданийНаПеревозку.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Невозможно оформить транспортные накладные. Не выделено ни одного задания на перевозку.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат МассивЗаданийНаПеревозку;
	КонецЕсли;
	
	Запрос = Новый Запрос;	
	Запрос.Текст = ТекстЗапросаПроверкиЗаданийНаПеревозкуНаНаличиеТранспортныхНакладных();
	Запрос.УстановитьПараметр("ЗаданияНаПеревозку",        МассивЗаданийНаПеревозку);
	Запрос.УстановитьПараметр("НетВыделенныхСтрокАдресов", НЕ ЗначениеЗаполнено(ВыделенныеСтрокиАдресов));
	Запрос.УстановитьПараметр("ВыделенныеСтрокиАдресов",   ВыделенныеСтрокиАдресов);
	Запрос.УстановитьПараметр("ВсеРаспоряжения",           Истина);
	Запрос.УстановитьПараметр("Распоряжения",              Новый Массив);

	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	ШаблонОшибкиНеПроведен         = НСтр("ru='Документ ""%Документ%"" не проведен. Невозможно оформить транспортные накладные.'");
	ШаблонОшибкиПомеченНаУдаление  = НСтр("ru='Документ ""%Документ%"" помечен на удаление. Невозможно оформить транспортные накладные.'");
	ШаблонОшибкиТНСозданы		   = НСтр("ru='Для документа ""%Документ%"" не требуется оформлять транспортные накладные, т.к. они уже оформлены или в задании на перевозку нет ни одного маршрута.'");
	ШаблонОшибкиТНСозданыПоАдресам = НСтр("ru='По выделенным адресам не требуется оформлять транспортные накладные, т.к. они уже оформлены.'");
	
	Если ЗначениеЗаполнено(ВыделенныеСтрокиАдресов) Тогда 
		ШаблонОшибкиНетНакладных = НСтр("ru = 'По распоряжениям, относящимся к выделенным адресам, из документа ""%Документ%"" не оформленно ни одной накладной. Оформление транспортных накладных в таком случае невозможно.'");	
	Иначе		
		ШаблонОшибкиНетНакладных = НСтр("ru = 'По распоряжениям из документа ""%Документ%"" не оформленно ни одной накладной. Оформление транспортных накладных в таком случае невозможно.'");	
	КонецЕсли;
	
	ЗаданияНаПеревозкуДляСозданияТН = Новый Массив;
	
	Пока Результат.Следующий() Цикл
		
		Если Результат.ПометкаУдаления Тогда
			ТекстСообщения = СтрЗаменить(ШаблонОшибкиПомеченНаУдаление, "%Документ%", Результат.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Результат.Ссылка);
			Продолжить;
		КонецЕсли;
		
		Если НЕ Результат.Проведен Тогда
			ТекстСообщения = СтрЗаменить(ШаблонОшибкиНеПроведен, "%Документ%", Результат.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Результат.Ссылка);
			Продолжить;
		КонецЕсли;
		
		Если Не Результат.ЕстьНакладные Тогда
			ТекстСообщения = СтрЗаменить(ШаблонОшибкиНетНакладных, "%Документ%", Результат.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Результат.Ссылка);
			Продолжить;
		КонецЕсли;
		
		Если Результат.КоличествоНеоформленныхТранспортныхНакладных = 0 
			И НЕ ЗначениеЗаполнено(ВыделенныеСтрокиАдресов) Тогда
			 ТекстСообщения = СтрЗаменить(ШаблонОшибкиТНСозданы, "%Документ%", Результат.Ссылка);
			 ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Результат.Ссылка);
			 Продолжить;
		КонецЕсли;
		
		Если Результат.КоличествоНеоформленныхТранспортныхНакладных = 0 
			И ЗначениеЗаполнено(ВыделенныеСтрокиАдресов) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ШаблонОшибкиТНСозданыПоАдресам, Результат.Ссылка);
			Продолжить;
		КонецЕсли;
		
		ЗаданияНаПеревозкуДляСозданияТН.Добавить(Результат.Ссылка);
		
	КонецЦикла;
	
	Возврат ЗаданияНаПеревозкуДляСозданияТН;
	
КонецФункции

#КонецОбласти

#КонецОбласти

// Актуализирует транспортные накладные при изменении распоряжения.
// Если распоряжение было распроведено или помечено на удаление, то оно удалится из ТЧ "ДокументыОснования" в транспортной накладной
// Если после удаления распоряжения в ТЧ "ДокументыОснования" она оказалась пуста, то вся транспортная накладная помечается на удаление.
//
// Параметры:
//	Основание        - ДокументСсылка - ссылка документа распоряжения, который распровели или пометили на удаление;
//	Проведен         - Булево         - признак проведения основания. Если проведен, то ничего не происходит;
//	ПометкаУдаления  - Булево, Истина - документ основание помечен на удаление.
//
Процедура АктуализироватьТранспортныеНакладные(Основание, Проведен, ПометкаУдаления) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьТТН") Или Проведен Тогда 
		Возврат;	
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТранспортнаяНакладнаяДокументыОснования.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснования
	|ГДЕ
	|	ТранспортнаяНакладнаяДокументыОснования.ДокументОснование = &ДокументОснование
	|	И НЕ ТранспортнаяНакладнаяДокументыОснования.Ссылка.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ДокументОснование", Основание);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Попытка
		
			Если Не ПометкаУдаления И Не Проведен Тогда
				ДокументОбъект.Проведен = Ложь;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			ИначеЕсли ДокументОбъект.ДокументыОснования.Количество() > 1 И ПометкаУдаления Тогда 
				СтрокаОснование = ДокументОбъект.ДокументыОснования.Найти(Основание);
				Если СтрокаОснование <> Неопределено Тогда
					ДокументОбъект.ДокументыОснования.Удалить(СтрокаОснование);
				КонецЕсли;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			ИначеЕсли ДокументОбъект.ДокументыОснования.Количество() = 1 И ПометкаУдаления Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
			
		Исключение
			
			ТекстОшибки = НСтр("ru='Не удалось записать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       ДокументОбъект);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
				
		КонецПопытки
			
	КонецЦикла
	
КонецПроцедуры


// Актуализирует транспортные накладные по заданию на перевозку при удалении распоряжений из ТЧ "Распоряжения".
// Удаляет распоряжения из транспортных накладных, созданных по текущему адресу. 
// Если после удаления распоряжений в ТЧ "ДокументыОснования" транспортной накладной она [ТЧ] оказалась пуста, 
// то вся транспортная накладная помечается на удаление.
//
// Параметры:
//	Распоряжения - Массив- ссылки на распоряжения, которые удалили из ТЧ "Распоряжения" задания на перевозку;
//	ЗаданиеНаПеревозку - ДокументСсылка.ЗаданиеНаПеревозку - документ, в котором произошло действие;
//	НомерСтрокиМаршрута - Число - номер строки табличной части 'Маршрут', для которой нужно 
//		осуществить актуализацию данных;
//
Процедура АктуализироватьТранспортныеНакладныеИзЗаданияНаПеревозку(Распоряжения, ЗаданиеНаПеревозку, НомерСтрокиМаршрута) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьТТН") Тогда 
		Возврат;	
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = Документы.ЗаданиеНаПеревозку.ТекстЗапросаПолученияСпискаНакладныхИзЗаданийНаПеревозку() +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТранспортнаяНакладнаяДокументыОснования.Ссылка КАК Ссылка,
	|	НакладныеПоЗаданиямНаПеревозку.Накладная КАК Накладная
	|ИЗ
	|	НакладныеПоЗаданиямНаПеревозку КАК НакладныеПоЗаданиямНаПеревозку
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснования
	|		ПО НакладныеПоЗаданиямНаПеревозку.Накладная = ТранспортнаяНакладнаяДокументыОснования.ДокументОснование
	|			И НакладныеПоЗаданиямНаПеревозку.АдресДоставки = ТранспортнаяНакладнаяДокументыОснования.Ссылка.АдресДоставки
	|			И НакладныеПоЗаданиямНаПеревозку.ЗаданиеНаПеревозку = ТранспортнаяНакладнаяДокументыОснования.Ссылка.ЗаданиеНаПеревозку
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("ЗаданияНаПеревозку", ЗаданиеНаПеревозку);
	Запрос.УстановитьПараметр("НетВыделенныхСтрокАдресов", Ложь);
	Запрос.УстановитьПараметр("ВыделенныеСтрокиАдресов", НомерСтрокиМаршрута);
	Запрос.УстановитьПараметр("ВсеРаспоряжения", Ложь);
	Запрос.УстановитьПараметр("Распоряжения", Распоряжения);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Пока Выборка.Следующий() Цикл 
			СтрокаРаспоряжение = ДокументОбъект.ДокументыОснования.Найти(Выборка.Накладная);
			Если СтрокаРаспоряжение <> Неопределено Тогда
				ДокументОбъект.ДокументыОснования.Удалить(СтрокаРаспоряжение);
			КонецЕсли;	
		КонецЦикла;
		Попытка			
			Если ДокументОбъект.ДокументыОснования.Количество() = 0 Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
			Иначе
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
		Исключение
			ТекстОшибки = НСтр("ru='Не удалось записать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       ДокументОбъект);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		КонецПопытки
		
	КонецЦикла
	
КонецПроцедуры

// Выполняет удаление распоряжения из транспортных накладных.
//
// Параметры:
//	Распоряжение - ДокументСсылка - ссылка документа распоряжения на отгрузку.
//
Процедура УдалитьРаспоряжениеИзТранспортныхНакладных(Распоряжение) Экспорт
	
	Если Не ЗначениеЗаполнено(Распоряжение) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТранспортнаяНакладнаяДокументыОснования.Ссылка КАК ТранспортнаяНакладная
	|ИЗ
	|	Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснования
	|ГДЕ
	|	ТранспортнаяНакладнаяДокументыОснования.ДокументОснование = &ДокументОснование
	|	И НЕ ТранспортнаяНакладнаяДокументыОснования.Ссылка.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ДокументОснование", Распоряжение);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		ДокументОбъект = Результат.ТранспортнаяНакладная.ПолучитьОбъект();
		Если ДокументОбъект.ДокументыОснования.Количество() = 1 Тогда
			// Полное удаление документа, пользователь сам с этим согласился
			УстановитьПривилегированныйРежим(Истина);
			ДокументОбъект.Удалить();
			УстановитьПривилегированныйРежим(Ложь);
		Иначе
			СтрокаРаспоряжения = ДокументОбъект.ДокументыОснования.Найти(Распоряжение);
			ДокументОбъект.ДокументыОснования.Удалить(СтрокаРаспоряжения);
			ДокументОбъект.Записать();
		КонецЕсли;			
	КонецЦикла;
	                               	
КонецПроцедуры

// Формирует текст запроса для выполнения проверки наличия транспортных накладных 
// по заданию на перевозку или по выделенным адресам одного из заданирй на перевозку.
//
// Вовращаемое значение:
//	Строка - текст запроса для выполнения проверки наличия транспортных накладных.
//
Функция ТекстЗапросаПроверкиЗаданийНаПеревозкуНаНаличиеТранспортныхНакладных() Экспорт
	
	ТекстЗапроса = Документы.ЗаданиеНаПеревозку.ТекстЗапросаПолученияСпискаНакладныхИзЗаданийНаПеревозку() + 
	"ВЫБРАТЬ
	|	ЗаданияНаПеревозку.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Накладные.Накладная ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьНакладные,
	|	СУММА(ВЫБОР
	|			КОГДА ТранспортнаяНакладнаяДокументыОснованияОснования.ДокументОснование ЕСТЬ NULL 
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоНеоформленныхТранспортныхНакладных,
	|	ЗаданияНаПеревозку.Проведен КАК Проведен,
	|	ЗаданияНаПеревозку.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку КАК ЗаданияНаПеревозку
	|		ЛЕВОЕ СОЕДИНЕНИЕ НакладныеПоЗаданиямНаПеревозку КАК Накладные
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснованияОснования
	|			ПО Накладные.ЗаданиеНаПеревозку = ТранспортнаяНакладнаяДокументыОснованияОснования.Ссылка.ЗаданиеНаПеревозку
	|				И Накладные.АдресДоставки = ТранспортнаяНакладнаяДокументыОснованияОснования.Ссылка.АдресДоставки
	|				И (ТранспортнаяНакладнаяДокументыОснованияОснования.ДокументОснование = Накладные.Накладная)
	|				И (ТранспортнаяНакладнаяДокументыОснованияОснования.Ссылка.Проведен)
	|		ПО ЗаданияНаПеревозку.Ссылка = Накладные.ЗаданиеНаПеревозку
	|ГДЕ
	|	ЗаданияНаПеревозку.Ссылка В(&ЗаданияНаПеревозку)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаданияНаПеревозку.Ссылка,
	|	ЗаданияНаПеревозку.Проведен,
	|	ЗаданияНаПеревозку.ПометкаУдаления,
	|	ВЫБОР
	|		КОГДА Накладные.Накладная ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ";
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Устанавливает список выбора ФИО водителей для элемента формы по грузоотправителю или заданию на перевозку.
//
// Параметры:
//	Элемент            - ЭлементыФормы                     - элемент формы, список выбора которого будет заполнен,
//	Грузоотправители   - Массив                            - список грузоотправителей,
//	ЗаданиеНаПеревозку - ДокументСсылка.ЗаданиеНаПеревозку - ссылка на документ "Задание на перевозку".
//
Процедура УстановитьСписокВыбораФИОВодителей(Элемент, Грузоотправители = Неопределено, ЗаданиеНаПеревозку = Неопределено) Экспорт 
	
	Запрос =  Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 50
	|	Водители.Водитель КАК Водитель,
	|	Водители.УдостоверениеСерия КАК УдостоверениеСерия,
	|	Водители.УдостоверениеНомер КАК УдостоверениеНомер,
	|	Водители.Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТранспортнаяНакладная.Водитель КАК Водитель,
	|		ТранспортнаяНакладная.УдостоверениеСерия КАК УдостоверениеСерия,
	|		ТранспортнаяНакладная.УдостоверениеНомер КАК УдостоверениеНомер,
	|		МАКСИМУМ(ТранспортнаяНакладная.Дата) КАК Дата
	|	ИЗ
	|		Документ.ТранспортнаяНакладная КАК ТранспортнаяНакладная
	|	ГДЕ
	|		ТранспортнаяНакладная.Водитель <> """"
	|		И ТранспортнаяНакладная.Грузоотправитель В(&Грузоотправители)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТранспортнаяНакладная.Водитель,
	|		ТранспортнаяНакладная.УдостоверениеСерия,
	|		ТранспортнаяНакладная.УдостоверениеНомер
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ВодительФИО,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.УдостоверениеНомер,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.УдостоверениеСерия,
	|		МАКСИМУМ(ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Дата)
	|	ИЗ
	|		Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|	ГДЕ
	|		ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Грузоотправитель В
	|				(ВЫБРАТЬ
	|					ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Грузоотправитель КАК Грузоотправитель
	|				ИЗ
	|					Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|				ГДЕ
	|					ЗаданиеНаПеревозкуРаспоряжения.Ссылка В (&ЗаданиеНаПеревозку)
	|					И НЕ ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Грузоотправитель В (&ПустыеГрузоотправители))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ВодительФИО,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.УдостоверениеСерия,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.УдостоверениеНомер) КАК Водители
	|
	|УПОРЯДОЧИТЬ ПО
	|	Водители.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Грузоотправители", 			Грузоотправители);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку", 		ЗаданиеНаПеревозку);
	Запрос.УстановитьПараметр("ПустыеГрузоотправители", 	ПустыеГрузоотправители());
	
	Элемент.СписокВыбора.Очистить();
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
		
	Пока РезультатЗапроса.Следующий() Цикл
		ИнформацияВодителя = Новый Структура("Водитель, УдостоверениеСерия, УдостоверениеНомер");
		ЗаполнитьЗначенияСвойств(ИнформацияВодителя, РезультатЗапроса);
		Элемент.СписокВыбора.Добавить(ИнформацияВодителя, РезультатЗапроса.Водитель);
	КонецЦикла;	
	
КонецПроцедуры

// Устанавливает список выбора транспортных средств для элемента формы по грузоотправителю или заданию на перевозку.
//
// Параметры:
//	Элемент            - ЭлементыФормы                     - элемент формы, список выбора которого будет заполнен,
//	Грузоотправители   - Массив                            - список грузоотправителей,
//	ЗаданиеНаПеревозку - ДокументСсылка.ЗаданиеНаПеревозку - ссылка на документ "Задание на перевозку".
//
Процедура УстановитьСписокВыбораТранспортныхСредств(Элемент, Грузоотправители = Неопределено, ЗаданиеНаПеревозку = Неопределено) Экспорт 
	
	Запрос =  Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 50
	|	ТранспортныеСредства.АвтомобильМарка КАК АвтомобильМарка,
	|	ТранспортныеСредства.АвтомобильГосударственныйНомер КАК АвтомобильГосударственныйНомер,
	|	ТранспортныеСредства.ЛицензионнаяКарточкаВид КАК ЛицензионнаяКарточкаВид,
	|	ТранспортныеСредства.ЛицензионнаяКарточкаНомер КАК ЛицензионнаяКарточкаНомер,
	|	ТранспортныеСредства.ЛицензионнаяКарточкаРегистрационныйНомер КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	ТранспортныеСредства.ЛицензионнаяКарточкаСерия КАК ЛицензионнаяКарточкаСерия,
	|	ТранспортныеСредства.Прицеп КАК Прицеп,
	|	ТранспортныеСредства.ГосударственныйНомерПрицепа КАК ГосударственныйНомерПрицепа,
	|	ТранспортныеСредства.ВидПеревозки КАК ВидПеревозки,
	|	ТранспортныеСредства.АвтомобильГрузоподъемностьВТоннах,
	|	ТранспортныеСредства.АвтомобильВместимостьВКубическихМетрах,
	|	ТранспортныеСредства.АвтомобильТип,
	|	ТранспортныеСредства.Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильМарка КАК АвтомобильМарка,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильГосударственныйНомер КАК АвтомобильГосударственныйНомер,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ЛицензионнаяКарточкаВид КАК ЛицензионнаяКарточкаВид,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ЛицензионнаяКарточкаНомер КАК ЛицензионнаяКарточкаНомер,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ЛицензионнаяКарточкаРегистрационныйНомер КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ЛицензионнаяКарточкаСерия КАК ЛицензионнаяКарточкаСерия,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Прицеп КАК Прицеп,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ГосударственныйНомерПрицепа КАК ГосударственныйНомерПрицепа,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ВидПеревозки КАК ВидПеревозки,
	|		МАКСИМУМ(ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Дата) КАК Дата,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильГрузоподъемностьВТоннах КАК АвтомобильГрузоподъемностьВТоннах,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильВместимостьВКубическихМетрах КАК АвтомобильВместимостьВКубическихМетрах,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильТип КАК АвтомобильТип
	|	ИЗ
	|		Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|	ГДЕ
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильГосударственныйНомер <> """"
	|		И ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Грузоотправитель В
	|				(ВЫБРАТЬ
	|					ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Грузоотправитель КАК Грузоотправитель
	|				ИЗ
	|					Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|				ГДЕ
	|					ЗаданиеНаПеревозкуРаспоряжения.Ссылка В (&ЗаданиеНаПеревозку)
	|					И НЕ ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Грузоотправитель В (&ПустыеГрузоотправители))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильМарка,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильГосударственныйНомер,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ЛицензионнаяКарточкаВид,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ЛицензионнаяКарточкаНомер,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ЛицензионнаяКарточкаРегистрационныйНомер,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ЛицензионнаяКарточкаСерия,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Прицеп,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ГосударственныйНомерПрицепа,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ВидПеревозки,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильГрузоподъемностьВТоннах,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильВместимостьВКубическихМетрах,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильТип
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТранспортнаяНакладная.АвтомобильМарка,
	|		ТранспортнаяНакладная.АвтомобильГосударственныйНомер,
	|		ТранспортнаяНакладная.ЛицензионнаяКарточкаВид,
	|		ТранспортнаяНакладная.ЛицензионнаяКарточкаНомер,
	|		ТранспортнаяНакладная.ЛицензионнаяКарточкаРегистрационныйНомер,
	|		ТранспортнаяНакладная.ЛицензионнаяКарточкаСерия,
	|		ТранспортнаяНакладная.Прицеп,
	|		ТранспортнаяНакладная.ГосударственныйНомерПрицепа,
	|		ТранспортнаяНакладная.ВидПеревозки,
	|		МАКСИМУМ(ТранспортнаяНакладная.Дата),
	|		ТранспортнаяНакладная.АвтомобильГрузоподъемностьВТоннах,
	|		ТранспортнаяНакладная.АвтомобильВместимостьВКубическихМетрах,
	|		ТранспортнаяНакладная.АвтомобильТип
	|	ИЗ
	|		Документ.ТранспортнаяНакладная КАК ТранспортнаяНакладная
	|	ГДЕ
	|		ТранспортнаяНакладная.АвтомобильГосударственныйНомер <> """"
	|		И ТранспортнаяНакладная.Грузоотправитель В(&Грузоотправители)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТранспортнаяНакладная.АвтомобильМарка,
	|		ТранспортнаяНакладная.АвтомобильГосударственныйНомер,
	|		ТранспортнаяНакладная.ЛицензионнаяКарточкаВид,
	|		ТранспортнаяНакладная.ЛицензионнаяКарточкаНомер,
	|		ТранспортнаяНакладная.ЛицензионнаяКарточкаРегистрационныйНомер,
	|		ТранспортнаяНакладная.ЛицензионнаяКарточкаСерия,
	|		ТранспортнаяНакладная.Прицеп,
	|		ТранспортнаяНакладная.ГосударственныйНомерПрицепа,
	|		ТранспортнаяНакладная.ВидПеревозки,
	|		ТранспортнаяНакладная.АвтомобильГрузоподъемностьВТоннах,
	|		ТранспортнаяНакладная.АвтомобильВместимостьВКубическихМетрах,
	|		ТранспортнаяНакладная.АвтомобильТип) КАК ТранспортныеСредства
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТранспортныеСредства.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Грузоотправители", 			Грузоотправители);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку", 		ЗаданиеНаПеревозку);
	Запрос.УстановитьПараметр("ПустыеГрузоотправители", 	ПустыеГрузоотправители());
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Элемент.СписокВыбора.Очистить();
	
	Пока РезультатЗапроса.Следующий() Цикл
		ИнформацияТранспортногоСредства = Новый Структура("АвтомобильГосударственныйНомер, АвтомобильМарка, АвтомобильТип, АвтомобильГрузоподъемностьВТоннах, АвтомобильВместимостьВКубическихМетрах, ЛицензионнаяКарточкаВид, ЛицензионнаяКарточкаНомер, ЛицензионнаяКарточкаРегистрационныйНомер, ЛицензионнаяКарточкаСерия, Прицеп, ГосударственныйНомерПрицепа, ВидПеревозки");
		ЗаполнитьЗначенияСвойств(ИнформацияТранспортногоСредства, РезультатЗапроса);
		Элемент.СписокВыбора.Добавить(ИнформацияТранспортногоСредства, РезультатЗапроса.АвтомобильГосударственныйНомер);
	КонецЦикла;
	
КонецПроцедуры


// Устанавливает список выбора типов транспортных средств для элемента формы по грузоотправителю 
// или заданию на перевозку
//
// Параметры:
//	Элемент				 - ЭлементыФормы	 - элемент формы, список выбора которого будет заполнен;
//	Грузоотправители	 - Массив	 - список грузоотправителей;
//	ЗаданиеНаПеревозку	 - ДокументСсылка.ЗаданиеНаПеревозку - ссылка на документ задания на перевозку.
//
Процедура УстановитьСписокВыбораТиповТранспортныхСредств(Элемент, Грузоотправители = Неопределено, ЗаданиеНаПеревозку = Неопределено) Экспорт 
	
	Запрос =  Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 50
	|	ТранспортныеСредства.АвтомобильГрузоподъемностьВТоннах,
	|	ТранспортныеСредства.АвтомобильВместимостьВКубическихМетрах,
	|	ТранспортныеСредства.АвтомобильТип,
	|	ТранспортныеСредства.Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ТранспортнаяНакладная.Дата) КАК Дата,
	|		ТранспортнаяНакладная.АвтомобильГрузоподъемностьВТоннах КАК АвтомобильГрузоподъемностьВТоннах,
	|		ТранспортнаяНакладная.АвтомобильВместимостьВКубическихМетрах КАК АвтомобильВместимостьВКубическихМетрах,
	|		ТранспортнаяНакладная.АвтомобильТип КАК АвтомобильТип
	|	ИЗ
	|		Документ.ТранспортнаяНакладная КАК ТранспортнаяНакладная
	|	ГДЕ
	|		ТранспортнаяНакладная.АвтомобильГосударственныйНомер = """"
	|		И ТранспортнаяНакладная.АвтомобильТип <> """"
	|		И ТранспортнаяНакладная.Грузоотправитель В(&Грузоотправители)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТранспортнаяНакладная.АвтомобильГрузоподъемностьВТоннах,
	|		ТранспортнаяНакладная.АвтомобильВместимостьВКубическихМетрах,
	|		ТранспортнаяНакладная.АвтомобильТип
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МАКСИМУМ(ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Дата),
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильГрузоподъемностьВТоннах,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильВместимостьВКубическихМетрах,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильТип
	|	ИЗ
	|		Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|	ГДЕ
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильГосударственныйНомер = """"
	|		И ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильТип <> """"
	|		И ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Грузоотправитель В
	|				(ВЫБРАТЬ
	|					ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Грузоотправитель КАК Грузоотправитель
	|				ИЗ
	|					Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|				ГДЕ
	|					ЗаданиеНаПеревозкуРаспоряжения.Ссылка В (&ЗаданиеНаПеревозку)
	|					И НЕ ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Грузоотправитель В (&ПустыеГрузоотправители))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильГрузоподъемностьВТоннах,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильВместимостьВКубическихМетрах,
	|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка.АвтомобильТип) КАК ТранспортныеСредства
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТранспортныеСредства.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Грузоотправители", 			Грузоотправители);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку", 		ЗаданиеНаПеревозку);
	Запрос.УстановитьПараметр("ПустыеГрузоотправители", 	ПустыеГрузоотправители());
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Элемент.СписокВыбора.Очистить();
	
	Пока РезультатЗапроса.Следующий() Цикл
		ИнформацияТранспортногоСредства = Новый Структура("АвтомобильТип, АвтомобильГрузоподъемностьВТоннах, АвтомобильВместимостьВКубическихМетрах");
		ЗаполнитьЗначенияСвойств(ИнформацияТранспортногоСредства, РезультатЗапроса);
		Элемент.СписокВыбора.Добавить(ИнформацияТранспортногоСредства, РезультатЗапроса.АвтомобильТип);
	КонецЦикла;     
	
КонецПроцедуры

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати, Порядок = Неопределено) Экспорт
	
	ПараметрыТТН = ПродажиВызовСервера.ПроверитьИспользованиеИДоступТТН();
	
	Если ПараметрыТТН.ИспользоватьТТН
		И ПараметрыТТН.Просмотр Тогда
		
		// 1-Т (Товарно-транспортная накладная) 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьТТН";
		КомандаПечати.Идентификатор = "ТТН";
		КомандаПечати.Представление = НСтр("ru = 'Товарно-транспортная накладная (1-Т)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры = ПараметрыТТН;
		
		Если Порядок <> Неопределено Тогда
			КомандаПечати.Порядок = Порядок;
		КонецЕсли;

		// Транспортная накладная
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьТТН";
		КомандаПечати.Идентификатор = "ТранспортнаяНакладная";
		КомандаПечати.Представление = НСтр("ru = 'Транспортная накладная'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры = ПараметрыТТН;	
		
		Если Порядок <> Неопределено Тогда
			КомандаПечати.Порядок = Порядок + 1;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Функция осуществляет печать формы "1-Т"
//  на основании документа "ПеремещениеТоваров".
//  
// Параметры:
//  ТаблицаНакладных - ТаблицаЗначений	 - таблица с данными для печати
// 
//  Возвращаемое значение:
//  Структура - структура с данными документа, необходимыми для формирования печатной формы "1-Т".
//
Функция ПолучитьДанныеДляПечатнойФормыТТН(ТаблицаНакладных) Экспорт
	
	МассивОбъектов = ТаблицаНакладных.ВыгрузитьКолонку("ТранспортнаяНакладная");
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТаблицаНакладных.ТранспортнаяНакладная КАК ТранспортнаяНакладная,
	|	ТаблицаНакладных.ПорядковыйНомер КАК ПорядковыйНомер
	|ПОМЕСТИТЬ ТаблицаТранспортныхНакладныхБезОснований
	|ИЗ
	|	&ТаблицаНакладных КАК ТаблицаНакладных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНакладных.ТранспортнаяНакладная КАК ТранспортнаяНакладная,
	|	ТаблицаНакладных.ПорядковыйНомер КАК ПорядковыйНомер,
	|	ТранспортнаяНакладнаяДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	ТранспортнаяНакладнаяДокументыОснования.ДокументОснование.Проведен КАК ДокументОснованиеПроведен,
	|	ТранспортнаяНакладнаяДокументыОснования.НомерСтроки КАК НомерСтрокиВТранспортнойНакладной
	|ПОМЕСТИТЬ ТаблицаТранспортныхНакладных
	|ИЗ
	|	ТаблицаТранспортныхНакладныхБезОснований КАК ТаблицаНакладных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснования
	|		ПО ТаблицаНакладных.ТранспортнаяНакладная = ТранспортнаяНакладнаяДокументыОснования.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Валюта КАК Валюта,
	|	ДанныеДокументов.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных 
	|		ПО (ТаблицаТранспортныхНакладных.ДокументОснование = ДанныеДокументов.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Валюта,
	|	ДанныеДокументов.ХозяйственнаяОперация
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных 
	|		ПО (ТаблицаТранспортныхНакладных.ДокументОснование = ДанныеДокументов.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Валюта КАК Валюта,
	|	ДанныеДокументов.ВидКорректировки КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.КорректировкаРеализации КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных 
	|		ПО (ТаблицаТранспортныхНакладных.ДокументОснование = ДанныеДокументов.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка),
	|	ДанныеДокументов.ХозяйственнаяОперация
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных
	|		ПО (ТаблицаТранспортныхНакладных.ДокументОснование = ДанныеДокументов.Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Ссылка КАК ДокументОснование,
	|	ЛОЖЬ КАК Корректировочный
	|
	|ПОМЕСТИТЬ СчетаФактурыОснования
	|ИЗ
	|	ТаблицаДанныхДокументов КАК ДанныеДокументов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("ТаблицаНакладных", ТаблицаНакладных);
	
	Запрос.Выполнить();
	
	Документы.РеализацияТоваровУслуг.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	Документы.ВозвратТоваровПоставщику.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	Документы.КорректировкаРеализации.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	Документы.ПеремещениеТоваров.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);	
	ПродажиСервер.ПоместитьВременнуюТаблицуКоэффициентыУпаковок(МенеджерВременныхТаблиц);
	МассивОбъектовОтветственныеЛица = Неопределено;
	Если Не ЗначениеЗаполнено(МассивОбъектов) Тогда 
		МассивОбъектовОтветственныеЛица = Новый Массив;
		МассивОбъектовОтветственныеЛица.Добавить(Документы.ТранспортнаяНакладная.ПустаяСсылка());
	Иначе
		МассивОбъектовОтветственныеЛица = МассивОбъектов;
	КонецЕсли;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектовОтветственныеЛица, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеремещениеТоваровТаблицаТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваровТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваровТаблицаТоваров.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ТаблицаПериодовЦен
	|ИЗ
	|	ПеремещениеТоваровТаблицаТоваров КАК ПеремещениеТоваровТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПеремещениеТоваровТаблицаТоваров.Ссылка.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И ПеремещениеТоваровТаблицаТоваров.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ПеремещениеТоваровТаблицаТоваров.Характеристика = ЦеныНоменклатуры.Характеристика
	|			И ПеремещениеТоваровТаблицаТоваров.Ссылка.Дата >= ЦеныНоменклатуры.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТаблицаТоваров.Ссылка,
	|	ПеремещениеТоваровТаблицаТоваров.Номенклатура,
	|	ПеремещениеТоваровТаблицаТоваров.Характеристика,
	|	ЦеныНоменклатуры.ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ТаблицаТоваров.Номенклатура) КАК Количество,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная КАК ТранспортнаяНакладная
	|ПОМЕСТИТЬ КоличествоТоваров
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных
	|		ПО (ТаблицаТранспортныхНакладных.ДокументОснование = ТаблицаТоваров.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная КАК Ссылка,
	|	ТаблицаТранспортныхНакладных.ПорядковыйНомер КАК ПорядковыйНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Номер КАК Номер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Дата КАК Дата,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Организация КАК Организация,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Грузополучатель КАК Грузополучатель,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Грузоотправитель КАК Грузоотправитель,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Плательщик КАК Плательщик,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЗаказчикПеревозки КАК ЗаказчикПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Организация.Префикс КАК Префикс,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Отпустил КАК Кладовщик,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОтветственныеЛица.РуководительНаименование, """") КАК СТРОКА(500)) КАК Руководитель,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОтветственныеЛица.РуководительДолжность, """") КАК СТРОКА(500)) КАК ДолжностьРуководителя,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование, """") КАК СТРОКА(500)) КАК ГлавныйБухгалтер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.БанковскийСчетПлательщика КАК БанковскийСчетПлательщика,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.БанковскийСчетЗаказчикаПеревозки КАК БанковскийСчетЗаказчикаПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.БанковскийСчетПеревозчика КАК БанковскийСчетПеревозчика,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Перевозчик КАК Перевозчик,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Водитель КАК Водитель,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ВидПеревозки КАК ВидПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЛицензионнаяКарточкаРегистрационныйНомер КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЛицензионнаяКарточкаСерия КАК ЛицензионнаяКарточкаСерия,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЛицензионнаяКарточкаНомер КАК ЛицензионнаяКарточкаНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЛицензионнаяКарточкаВид КАК ЛицензионнаяКарточкаВид,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильМарка КАК МаркаАвтомобиля,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильГосударственныйНомер КАК ГосНомерАвтомобиля,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Прицеп КАК Прицеп,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ГосударственныйНомерПрицепа КАК ГосНомерПрицепа,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ДоверенностьДата КАК ДоверенностьДата,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	ВЫБОР
	|		КОГДА ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ВыводДанныхОТоварномСоставе = ЗНАЧЕНИЕ(Перечисление.ВариантыВыводаДанныхОТоварномСоставе.ТоварныйСостав)
	|			ТОГДА ЕСТЬNULL(ТаблицаТранспортныхНакладных.ДокументОснование.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|	КОНЕЦ КАК Валюта,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АдресПогрузки КАК ПунктПогрузки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АдресДоставки КАК ПунктРазгрузки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.СрокДоставки КАК СрокДоставки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.МассаБрутто КАК МассаБрутто,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.МассаНетто КАК МассаНетто,
	|	ВЫБОР
	|		КОГДА ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ВыводДанныхОТоварномСоставе = ЗНАЧЕНИЕ(Перечисление.ВариантыВыводаДанныхОТоварномСоставе.ТоварныйСостав)
	|			ТОГДА ЕСТЬNULL(КоличествоТоваров.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоНаименований,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ВыводДанныхОТоварномСоставе КАК ВыводДанныхОТоварномСоставе,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.УдостоверениеНомер КАК УдостоверениеНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.УдостоверениеСерия КАК УдостоверениеСерия,
	|	НЕ МИНИМУМ(ТаблицаТранспортныхНакладных.ДокументОснованиеПроведен) КАК ЕстьНепроведенныеДокументыОснования
	|ИЗ
	|	ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоТоваров КАК КоличествоТоваров
	|		ПО ТаблицаТранспортныхНакладных.ТранспортнаяНакладная = КоличествоТоваров.ТранспортнаяНакладная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ТаблицаТранспортныхНакладных.ТранспортнаяНакладная = ТаблицаОтветственныеЛица.Ссылка
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная,
	|	ТаблицаТранспортныхНакладных.ПорядковыйНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Номер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Дата,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Организация,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Грузополучатель,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Грузоотправитель,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Плательщик,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЗаказчикПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Организация.Префикс,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Отпустил,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ОтпустилДолжность,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОтветственныеЛица.РуководительНаименование, """") КАК СТРОКА(500)),
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОтветственныеЛица.РуководительДолжность, """") КАК СТРОКА(500)),
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование, """") КАК СТРОКА(500)),
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.БанковскийСчетПлательщика,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.БанковскийСчетЗаказчикаПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.БанковскийСчетПеревозчика,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Перевозчик,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Водитель,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ВидПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЛицензионнаяКарточкаРегистрационныйНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЛицензионнаяКарточкаСерия,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЛицензионнаяКарточкаНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЛицензионнаяКарточкаВид,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильМарка,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильГосударственныйНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Прицеп,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ГосударственныйНомерПрицепа,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ДоверенностьНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ДоверенностьДата,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ДоверенностьВыдана,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ДоверенностьЛицо,
	|	ВЫБОР
	|		КОГДА ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ВыводДанныхОТоварномСоставе = ЗНАЧЕНИЕ(Перечисление.ВариантыВыводаДанныхОТоварномСоставе.ТоварныйСостав)
	|			ТОГДА ЕСТЬNULL(ТаблицаТранспортныхНакладных.ДокументОснование.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АдресПогрузки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АдресДоставки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.СрокДоставки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.МассаБрутто,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.МассаНетто,
	|	ВЫБОР
	|		КОГДА ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ВыводДанныхОТоварномСоставе = ЗНАЧЕНИЕ(Перечисление.ВариантыВыводаДанныхОТоварномСоставе.ТоварныйСостав)
	|			ТОГДА ЕСТЬNULL(КоличествоТоваров.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЗаданиеНаПеревозку,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ВыводДанныхОТоварномСоставе,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.УдостоверениеНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.УдостоверениеСерия		
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядковыйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная КАК ТранспортнаяНакладная,
	|	ТаблицаТранспортныхНакладных.ПорядковыйНомер КАК ПорядковыйНомер,
	|	ТаблицаТранспортныхНакладных.НомерСтрокиВТранспортнойНакладной КАК НомерСтрокиВТранспортнойНакладной,
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Номенклатура.Код КАК ТоварКод,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТоваров.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА &ТекстЗапросаНаименованиеЕдиницыИзмерения1
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения2
	|	КОНЕЦ КАК ВидУпаковки,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения1
	|	КОНЕЦ КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА ТаблицаТоваров.Количество
	|		ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ * &ТекстЗапросаВесУпаковки КАК МассаБрутто,
	|	ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры1 КАК МассаНетто,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ КоэффициентыУпаковок.Количество / КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|	КОНЕЦ КАК КоличествоМест,
	|	ТаблицаТоваров.СуммаБезНДС КАК Сумма,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	&ТекстЗапросаВесНоменклатуры2 / 1000 КАК КоэффициентПересчетаВТонны,
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|				ИЛИ ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Весовой,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Ссылка.ВернутьМногооборотнуюТару
	|				И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных
	|		ПО (ТаблицаТранспортныхНакладных.ДокументОснование = ТаблицаТоваров.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
	|		ПО ТаблицаТоваров.Ссылка = КоэффициентыУпаковок.Ссылка
	|			И ТаблицаТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки
	|			И (НЕ &ВыводитьБазовыеЕдиницыИзмерения)
	|ГДЕ
	|	ТаблицаТоваров.ЭтоТовар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная,
	|	ТаблицаТранспортныхНакладных.ПорядковыйНомер,
	|	ТаблицаТранспортныхНакладных.НомерСтрокиВТранспортнойНакладной,
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Номенклатура.Код,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Упаковка.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТоваров.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА &ТекстЗапросаНаименованиеЕдиницыИзмерения1
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки2 ЕСТЬ NULL 
	|				И &ТекстЗапросаКоэффициентУпаковки2 <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки2
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1),
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА ТаблицаТоваров.Количество
	|		ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ * &ТекстЗапросаВесУпаковки,
	|	ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры1,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ЕСТЬNULL(КоэффициентыУпаковок.Количество / КоэффициентыУпаковок.КоэффициентВложеннойУпаковки, ТаблицаТоваров.КоличествоУпаковок)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки2 ЕСТЬ NULL 
	|				И &ТекстЗапросаКоэффициентУпаковки2 <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки2
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ТаблицаТоваров.КоличествоУпаковок,
	|	0,
	|	&ТекстЗапросаВесНоменклатуры2 / 1000,
	|	ТаблицаТоваров.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|				ИЛИ ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЛОЖЬ
	|ИЗ
	|	ПеремещениеТоваровТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных
	|		ПО (ТаблицаТранспортныхНакладных.ДокументОснование = ТаблицаТоваров.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПериодовЦен КАК ТаблицаПериодовЦен
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО ТаблицаПериодовЦен.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|				И ТаблицаПериодовЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И ТаблицаПериодовЦен.Характеристика = ЦеныНоменклатуры.Характеристика
	|				И ТаблицаПериодовЦен.Период = ЦеныНоменклатуры.Период
	|		ПО ТаблицаТоваров.Ссылка = ТаблицаПериодовЦен.Ссылка
	|			И ТаблицаТоваров.Номенклатура = ТаблицаПериодовЦен.Номенклатура
	|			И ТаблицаТоваров.Характеристика = ТаблицаПериодовЦен.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
	|		ПО ТаблицаТоваров.Ссылка = КоэффициентыУпаковок.Ссылка
	|			И ТаблицаТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки
	|			И (НЕ &ВыводитьБазовыеЕдиницыИзмерения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная,
	|	ТаблицаТранспортныхНакладных.ПорядковыйНомер,
	|	ТаблицаТранспортныхНакладных.НомерСтрокиВТранспортнойНакладной,
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Номенклатура.Код,
	|	ЕСТЬNULL(ТаблицаТоваров.Номенклатура.НаименованиеПолное, ТаблицаТоваров.Содержание),
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Упаковка.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТоваров.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА &ТекстЗапросаНаименованиеЕдиницыИзмерения1
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА ТаблицаТоваров.Количество
	|		ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ * &ТекстЗапросаВесУпаковки,
	|	ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры1,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ КоэффициентыУпаковок.Количество / КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|	КОНЕЦ,
	|	ТаблицаТоваров.СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС,
	|	&ТекстЗапросаВесНоменклатуры2 / 1000,
	|	ТаблицаТоваров.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|				ИЛИ ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЛОЖЬ
	|ИЗ
	|	ТаблицаТоваровКорректировкаРеализации КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных
	|		ПО (ТаблицаТранспортныхНакладных.ДокументОснование = ТаблицаТоваров.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
	|		ПО ТаблицаТоваров.Ссылка = КоэффициентыУпаковок.Ссылка
	|			И ТаблицаТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки
	|ГДЕ
	|	ТаблицаТоваров.ЭтоТовар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная,
	|	ТаблицаТранспортныхНакладных.ПорядковыйНомер,
	|	ТаблицаТранспортныхНакладных.НомерСтрокиВТранспортнойНакладной,
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Номенклатура.Код,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Упаковка.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТоваров.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА &ТекстЗапросаНаименованиеЕдиницыИзмерения1
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения1
	|	КОНЕЦ,
	|	ТаблицаТоваров.СуммаБезНДС / ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТоваров.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА ТаблицаТоваров.Количество
	|		ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|	КОНЕЦ * &ТекстЗапросаВесУпаковки,
	|	ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры1,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ КоэффициентыУпаковок.Количество / КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|	КОНЕЦ,
	|	ТаблицаТоваров.СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС,
	|	&ТекстЗапросаВесНоменклатуры2 / 1000,
	|	ТаблицаТоваров.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|				ИЛИ ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					И ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Ссылка.ВозвратПринятойМногооборотнойТары
	|				И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	ВозвратТоваровПоставщикуТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных
	|		ПО (ТаблицаТранспортныхНакладных.ДокументОснование = ТаблицаТоваров.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
	|		ПО ТаблицаТоваров.Ссылка = КоэффициентыУпаковок.Ссылка
	|			И ТаблицаТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки
	|			И (НЕ &ВыводитьБазовыеЕдиницыИзмерения)
	|ГДЕ
	|	ТаблицаТоваров.ЭтоТовар
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядковыйНомер,
	|	ТранспортнаяНакладная,
	|	НомерСтрокиВТранспортнойНакладной,
	|	НомерСтроки
	|ИТОГИ ПО
	|	ПорядковыйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная КАК ТранспортнаяНакладная,
	|	ТаблицаТранспортныхНакладных.ДокументОснование КАК Ссылка,
	|	ТаблицаТранспортныхНакладных.ДокументОснование.Номер КАК Номер,
	|	ТаблицаТранспортныхНакладных.ДокументОснование.Дата КАК Дата
	|ИЗ
	|	ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных
	|ГДЕ
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ВыводДанныхОТоварномСоставе = ЗНАЧЕНИЕ(Перечисление.ВариантыВыводаДанныхОТоварномСоставе.НомераНакладных)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТранспортныхНакладных.ПорядковыйНомер,
	|	ТранспортнаяНакладная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КоличествоТоваров";
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если ЗначениеЗаполнено(КолонкаКодов) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Номенклатура.Код", "Номенклатура." + КолонкаКодов);
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЦеныНоменклатуры.Упаковка",
			"ЦеныНоменклатуры.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаВесУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаВесНоменклатуры1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаВесНоменклатуры2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения",
			"ТаблицаТоваров.Номенклатура", Ложь));
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"КоэффициентыУпаковок.ВидУпаковки",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	МассивРезультатов         	   = Запрос.ВыполнитьПакет();
	РезультатПоШапке          	   = МассивРезультатов[2];
	РезультатПоТабличнойЧасти	   = МассивРезультатов[3];
	РезультатПоНомерамНакладных    = МассивРезультатов[4];
	
	УстановитьПривилегированныйРежим(Ложь);
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоНомерамНакладных",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		РезультатПоНомерамНакладных);
			
	Возврат СтруктураДанныхДляПечати;

КонецФункции

// Функция получает данные для формирования печатной формы Транспортная накладная.
//
// Параметры:
//  ТаблицаНакладных - ТаблицаЗначений	 - таблица с данными для печати
// 
// Возвращаемое значение:
//  Структура - структура с данными документа, необходимыми для формирования печатной формы "Транспортная накладная".
//
Функция ПолучитьДанныеДляПечатнойФормыТранспортнаяНакладная(ТаблицаНакладных) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНакладных.ТранспортнаяНакладная КАК ТранспортнаяНакладная,
	|	ТаблицаНакладных.ПорядковыйНомер КАК ПорядковыйНомер
	|ПОМЕСТИТЬ ТаблицаТранспортныхНакладныхБезОснований
	|ИЗ
	|	&ТаблицаНакладных КАК ТаблицаНакладных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаНакладных.ТранспортнаяНакладная КАК Документ.ТранспортнаяНакладная) КАК ТранспортнаяНакладная,
	|	ТаблицаНакладных.ПорядковыйНомер КАК ПорядковыйНомер,
	|	ТранспортнаяНакладнаяДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	ТранспортнаяНакладнаяДокументыОснования.ДокументОснование.Проведен КАК ДокументОснованиеПроведен,
	|	ТранспортнаяНакладнаяДокументыОснования.НомерСтроки КАК НомерСтрокиВТранспортнойНакладной
	|ПОМЕСТИТЬ ТаблицаТранспортныхНакладных
	|ИЗ
	|	ТаблицаТранспортныхНакладныхБезОснований КАК ТаблицаНакладных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснования
	|		ПО ТаблицаНакладных.ТранспортнаяНакладная = ТранспортнаяНакладнаяДокументыОснования.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная КАК Ссылка,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Номер КАК Номер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Дата КАК Дата,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Организация КАК Организация,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Грузополучатель КАК Грузополучатель,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Грузоотправитель КАК Грузоотправитель,	
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЗаказчикПеревозки КАК ЗаказчикПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.БанковскийСчетЗаказчикаПеревозки КАК БанковскийСчетЗаказчикаПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Отпустил КАК Кладовщик,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Перевозчик КАК Перевозчик,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Водитель КАК Водитель,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ВидПеревозки КАК ВидПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильМарка КАК МаркаАвтомобиля,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильГосударственныйНомер КАК ГосНомерАвтомобиля,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АдресПогрузки КАК ПунктПогрузки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АдресДоставки КАК ПунктРазгрузки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.СрокДоставки КАК СрокДоставки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильГрузоподъемностьВТоннах КАК ГрузоподъемностьВТоннахАвтомобиля,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильВместимостьВКубическихМетрах КАК ВместимостьВКубическихМетрахАвтомобиля,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильТип КАК ТипАвтомобиля,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.МассаБрутто КАК МассаБрутто,
	|	ТаблицаТранспортныхНакладных.ПорядковыйНомер,
	|	НЕ МИНИМУМ(ТаблицаТранспортныхНакладных.ДокументОснованиеПроведен) КАК ЕстьНепроведенныеДокументыОснования
	|ИЗ
	|	ТаблицаТранспортныхНакладных КАК ТаблицаТранспортныхНакладных
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Номер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Дата,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Организация,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Грузополучатель,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Грузоотправитель,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ЗаказчикПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.БанковскийСчетЗаказчикаПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Отпустил,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ОтпустилДолжность,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Перевозчик,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.Водитель,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.ВидПеревозки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильМарка,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильГосударственныйНомер,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АдресПогрузки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АдресДоставки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.СрокДоставки,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильГрузоподъемностьВТоннах,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильВместимостьВКубическихМетрах,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.АвтомобильТип,
	|	ТаблицаТранспортныхНакладных.ТранспортнаяНакладная.МассаБрутто,
	|	ТаблицаТранспортныхНакладных.ПорядковыйНомер
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТранспортныхНакладных.ПорядковыйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВнутреннийЗапрос.Ссылка,
	|	ВнутреннийЗапрос.ПорядковыйНомер,
	|	ВнутреннийЗапрос.НаименованиеВидаНоменклатуры
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументыОснования.ТранспортнаяНакладная КАК Ссылка,
	|		ДокументыОснования.ПорядковыйНомер КАК ПорядковыйНомер,
	|		ВЫБОР
	|			КОГДА ВидыНоменклатуры.ИспользоватьИндивидуальноеНаименованиеПриПечати
	|				ТОГДА ЕСТЬNULL(ВидыНоменклатуры.НаименованиеДляПечати, """")
	|			ИНАЧЕ &НаименованиеДляПечатиВидовНоменклатуры
	|		КОНЕЦ КАК НаименованиеВидаНоменклатуры
	|	ИЗ
	|		ТаблицаТранспортныхНакладных КАК ДокументыОснования
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ДокументТовары
	|			ПО ДокументыОснования.ДокументОснование = ДокументТовары.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|			ПО (ВидыНоменклатуры.Ссылка = ДокументТовары.Номенклатура.ВидНоменклатуры)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументыОснования.ТранспортнаяНакладная,
	|		ДокументыОснования.ПорядковыйНомер,
	|		ВЫБОР
	|			КОГДА ВидыНоменклатуры.ИспользоватьИндивидуальноеНаименованиеПриПечати
	|				ТОГДА ЕСТЬNULL(ВидыНоменклатуры.НаименованиеДляПечати, """")
	|			ИНАЧЕ &НаименованиеДляПечатиВидовНоменклатуры
	|		КОНЕЦ
	|	ИЗ
	|		ТаблицаТранспортныхНакладных КАК ДокументыОснования
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ДокументТовары
	|			ПО ДокументыОснования.ДокументОснование = ДокументТовары.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|			ПО (ВидыНоменклатуры.Ссылка = ДокументТовары.Номенклатура.ВидНоменклатуры)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументыОснования.ТранспортнаяНакладная,
	|		ДокументыОснования.ПорядковыйНомер,
	|		ВЫБОР
	|			КОГДА ВидыНоменклатуры.ИспользоватьИндивидуальноеНаименованиеПриПечати
	|				ТОГДА ЕСТЬNULL(ВидыНоменклатуры.НаименованиеДляПечати, """")
	|			ИНАЧЕ &НаименованиеДляПечатиВидовНоменклатуры
	|		КОНЕЦ
	|	ИЗ
	|		ТаблицаТранспортныхНакладных КАК ДокументыОснования
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК ДокументТовары
	|			ПО ДокументыОснования.ДокументОснование = ДокументТовары.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|			ПО (ВидыНоменклатуры.Ссылка = ДокументТовары.Номенклатура.ВидНоменклатуры)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДокументыОснования.ТранспортнаяНакладная,
	|		ДокументыОснования.ПорядковыйНомер,
	|		ВЫБОР
	|			КОГДА ВидыНоменклатуры.ИспользоватьИндивидуальноеНаименованиеПриПечати
	|				ТОГДА ЕСТЬNULL(ВидыНоменклатуры.НаименованиеДляПечати, """")
	|			ИНАЧЕ &НаименованиеДляПечатиВидовНоменклатуры
	|		КОНЕЦ
	|	ИЗ
	|		ТаблицаТранспортныхНакладных КАК ДокументыОснования
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ДокументТовары
	|			ПО ДокументыОснования.ДокументОснование = ДокументТовары.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|			ПО (ВидыНоменклатуры.Ссылка = ДокументТовары.Номенклатура.ВидНоменклатуры)) КАК ВнутреннийЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВнутреннийЗапрос.ПорядковыйНомер,
	|	ВнутреннийЗапрос.НаименованиеВидаНоменклатуры";
	
	Запрос.УстановитьПараметр("ТаблицаНакладных", ТаблицаНакладных);
	Запрос.УстановитьПараметр("НаименованиеДляПечатиВидовНоменклатуры", Константы.НаименованиеДляПечатиВидовНоменклатуры.Получить());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("ТаблицаРезультата", РезультатЗапроса[2].Выгрузить());
	СтруктураРезультата.Вставить("РезультатИменаТоваров", РезультатЗапроса[3]);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат СтруктураРезультата
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПерезаписатьТранспортнуюНакладную(ТранспортнаяНакладная, МассивНовыхРаспоряжений, ЗначенияЗаполнения, ЗаданиеНаПеревозку = Неопределено)
	
	ДокументОбъект = ТранспортнаяНакладная.ПолучитьОбъект();
	
	МассивСтарыхРаспоряжений = ДокументОбъект.ДокументыОснования.ВыгрузитьКолонку("ДокументОснование");	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСтарыхРаспоряжений, МассивНовыхРаспоряжений, Истина);
	ДокументОбъект.ДокументыОснования.Очистить();
	
	РеквизитыТранспортнойНакладной = РеквизитыТранспортнойНакладной(МассивСтарыхРаспоряжений, ЗаданиеНаПеревозку);
	ЗаполнитьРеквизитыТранспортнойНакладной(МассивСтарыхРаспоряжений, РеквизитыТранспортнойНакладной, ЗначенияЗаполнения, ЗаданиеНаПеревозку);	
	ДокументОбъект.Заполнить(РеквизитыТранспортнойНакладной);
			
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
		
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции

Процедура ЗаполнитьРеквизитыТранспортнойНакладной(МассивРаспоряжений, РеквизитыТранспортнойНакладной, ЗначенияЗаполнения = Неопределено, ЗаданиеНаПеревозку = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.АвтомобильГосударственныйНомер КАК АвтомобильГосударственныйНомер,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.АвтомобильМарка КАК АвтомобильМарка,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.АвтомобильВместимостьВКубическихМетрах КАК АвтомобильВместимостьВКубическихМетрах,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.АвтомобильГрузоподъемностьВТоннах КАК АвтомобильГрузоподъемностьВТоннах,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.АвтомобильТип КАК АвтомобильТип,
	|	ЗаданиеНаПеревозкуМаршрут.Адрес КАК АдресДоставки,
	|	ЗаданиеНаПеревозкуМаршрут.АдресЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.ВидПеревозки КАК ВидПеревозки,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.Водитель КАК Водитель,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.ГосударственныйНомерПрицепа КАК ГосударственныйНомерПрицепа,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.ЛицензионнаяКарточкаВид КАК ЛицензионнаяКарточкаВид,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.ЛицензионнаяКарточкаНомер КАК ЛицензионнаяКарточкаНомер,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.ЛицензионнаяКарточкаРегистрационныйНомер КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.ЛицензионнаяКарточкаСерия КАК ЛицензионнаяКарточкаСерия,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.Прицеп КАК Прицеп
	|ПОМЕСТИТЬ ДанныеЗаданияНаПеревозку
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Маршрут КАК ЗаданиеНаПеревозкуМаршрут
	|		ПО ЗаданиеНаПеревозкуРаспоряжения.КлючСвязи = ЗаданиеНаПеревозкуМаршрут.КлючСвязи
	|ГДЕ
	|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка = &ЗаданиеНаПеревозку
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АвтомобильГосударственныйНомер, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильГосударственныйНомер, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК АвтомобильГосударственныйНомер,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АвтомобильМарка, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильМарка, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК АвтомобильМарка,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АвтомобильВместимостьВКубическихМетрах, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильВместимостьВКубическихМетрах, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК АвтомобильВместимостьВКубическихМетрах,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АвтомобильГрузоподъемностьВТоннах, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильГрузоподъемностьВТоннах, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК АвтомобильГрузоподъемностьВТоннах,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АвтомобильТип, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильТип, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК АвтомобильТип,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АдресДоставки, """")
	|					ИНАЧЕ ДокументРаспоряжениеТовары.ЗаказКлиента.АдресДоставки
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АдресДоставки, """")
	|				ИНАЧЕ ДокументРаспоряжение.АдресДоставки
	|			КОНЕЦ
	|	КОНЕЦ КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АдресДоставкиЗначенияПолей, """")
	|					ИНАЧЕ ДокументРаспоряжениеТовары.ЗаказКлиента.АдресДоставкиЗначенияПолей
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АдресДоставкиЗначенияПолей, """")
	|				ИНАЧЕ ДокументРаспоряжение.АдресДоставкиЗначенияПолей
	|			КОНЕЦ
	|	КОНЕЦ КАК АдресДоставкиЗначенияПолей,
	|	ЕСТЬNULL(СкладыКонтактнаяОтправитель.Представление, """") КАК АдресПогрузки,
	|	ЕСТЬNULL(СкладыКонтактнаяОтправитель.ЗначенияПолей, """") КАК АдресПогрузкиЗначенияПолей,
	|	ДокументРаспоряжение.БанковскийСчетКонтрагента КАК БанковскийСчетЗаказчикаПеревозки,
	|	ДокументРаспоряжение.БанковскийСчетКонтрагента КАК БанковскийСчетПлательщика,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ВидПеревозки, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ВидПеревозки, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидПеревозки,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.Водитель, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.Водитель, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК Водитель,
	|	ДокументРаспоряжение.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ГосударственныйНомерПрицепа, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ГосударственныйНомерПрицепа, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ГосударственныйНомерПрицепа,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДокументРаспоряжение.Организация
	|		ИНАЧЕ ДокументРаспоряжение.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДокументРаспоряжение.Контрагент
	|		ИНАЧЕ ДокументРаспоряжение.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ДокументРаспоряжение.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДокументРаспоряжение.ДоверенностьДата КАК ДоверенностьДата,
	|	ДокументРаспоряжение.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	ДокументРаспоряжение.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДокументРаспоряжение.Контрагент КАК ЗаказчикПеревозки,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ЛицензионнаяКарточкаВид, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаВид, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЛицензионнаяКарточкаВид,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ЛицензионнаяКарточкаНомер, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаНомер, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЛицензионнаяКарточкаНомер,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ЛицензионнаяКарточкаРегистрационныйНомер, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаРегистрационныйНомер, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ЛицензионнаяКарточкаСерия, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаСерия, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЛицензионнаяКарточкаСерия,
	|	ДокументРаспоряжение.Организация КАК Организация,
	|	ДокументРаспоряжение.Отпустил КАК Отпустил,
	|	ДокументРаспоряжение.ОтпустилДолжность КАК ОтпустилДолжность,
	|	ДокументРаспоряжение.Контрагент КАК Плательщик,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.Прицеп, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.Прицеп, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК Прицеп,
	|	ДокументРаспоряжение.Руководитель КАК Руководитель,
	|	ЕСТЬNULL(ДокументыФизическихЛиц.Номер, """") КАК УдостоверениеНомер,
	|	ЕСТЬNULL(ДокументыФизическихЛиц.Серия, """") КАК УдостоверениеСерия
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДокументРаспоряжение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ДокументРаспоряжениеТовары
	|		ПО ДокументРаспоряжение.Ссылка = ДокументРаспоряжениеТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеЗаданияНаПеревозку КАК ДанныеЗаданияНаПеревозкуЗаказы
	|		ПО (ДокументРаспоряжение.РеализацияПоЗаказам)
	|			И (ДокументРаспоряжениеТовары.ЗаказКлиента = ДанныеЗаданияНаПеревозкуЗаказы.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеЗаданияНаПеревозку КАК ДанныеЗаданияНаПеревозкуНакладные
	|		ПО (НЕ ДокументРаспоряжение.РеализацияПоЗаказам)
	|			И ДокументРаспоряжение.Ссылка = ДанныеЗаданияНаПеревозкуНакладные.Распоряжение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛиц
	|		ПО (ВЫБОР
	|				КОГДА ДокументРаспоряжение.РеализацияПоЗаказам
	|					ТОГДА ДанныеЗаданияНаПеревозкуЗаказы.Водитель = ДокументыФизическихЛиц.Физлицо
	|				ИНАЧЕ ДанныеЗаданияНаПеревозкуНакладные.Водитель = ДокументыФизическихЛиц.Физлицо
	|			КОНЕЦ)
	|			И (ДокументыФизическихЛиц.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяОтправитель
	|		ПО ДокументРаспоряжение.Склад = СкладыКонтактнаяОтправитель.Ссылка
	|			И (СкладыКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|ГДЕ
	|	ДокументРаспоряжение.Ссылка В(&МассивРаспоряжений)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АвтомобильГосударственныйНомер, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильГосударственныйНомер, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АвтомобильМарка, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильМарка, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АвтомобильВместимостьВКубическихМетрах, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильВместимостьВКубическихМетрах, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АвтомобильГрузоподъемностьВТоннах, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильГрузоподъемностьВТоннах, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АвтомобильТип, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильТип, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АдресДоставки, """")
	|					ИНАЧЕ ДокументРаспоряжениеТовары.ЗаказНаПеремещение.АдресДоставки
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АдресДоставки, """")
	|				ИНАЧЕ ДокументРаспоряжение.АдресДоставки
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.АдресДоставкиЗначенияПолей, """")
	|					ИНАЧЕ ДокументРаспоряжениеТовары.ЗаказНаПеремещение.АдресДоставкиЗначенияПолей
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АдресДоставкиЗначенияПолей, """")
	|				ИНАЧЕ ДокументРаспоряжение.АдресДоставкиЗначенияПолей
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ЕСТЬNULL(СкладыКонтактнаяОтправитель.Представление, """"),
	|	ЕСТЬNULL(СкладыКонтактнаяОтправитель.ЗначенияПолей, """"),
	|	ДокументРаспоряжение.БанковскийСчетОрганизации,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ДокументРаспоряжение.БанковскийСчетОрганизации
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ВидПеревозки, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ВидПеревозки, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.Водитель, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.Водитель, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ДокументРаспоряжение.ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ГосударственныйНомерПрицепа, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ГосударственныйНомерПрицепа, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ДокументРаспоряжение.Организация,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ДокументРаспоряжение.Организация
	|		ИНАЧЕ ДокументРаспоряжение.ОрганизацияПолучатель
	|	КОНЕЦ,
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ДокументРаспоряжение.Организация,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ЛицензионнаяКарточкаВид, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаВид, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ЛицензионнаяКарточкаНомер, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаНомер, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ЛицензионнаяКарточкаРегистрационныйНомер, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаРегистрационныйНомер, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.ЛицензионнаяКарточкаСерия, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаСерия, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ДокументРаспоряжение.Организация,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка),
	|	"""",
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ДокументРаспоряжение.Организация
	|		ИНАЧЕ ДокументРаспоряжение.ОрганизацияПолучатель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументРаспоряжениеТовары.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуЗаказы.Прицеп, """")
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|					ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.Прицеп, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ДокументРаспоряжение.Руководитель,
	|	ЕСТЬNULL(ДокументыФизическихЛиц.Номер, """"),
	|	ЕСТЬNULL(ДокументыФизическихЛиц.Серия, """")
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДокументРаспоряжение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ДокументРаспоряжениеТовары
	|		ПО ДокументРаспоряжение.Ссылка = ДокументРаспоряжениеТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеЗаданияНаПеревозку КАК ДанныеЗаданияНаПеревозкуЗаказы
	|		ПО (ДокументРаспоряжение.ПеремещениеПоЗаказам)
	|			И (ДокументРаспоряжениеТовары.ЗаказНаПеремещение = ДанныеЗаданияНаПеревозкуЗаказы.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеЗаданияНаПеревозку КАК ДанныеЗаданияНаПеревозкуНакладные
	|		ПО (НЕ ДокументРаспоряжение.ПеремещениеПоЗаказам)
	|			И ДокументРаспоряжение.Ссылка = ДанныеЗаданияНаПеревозкуНакладные.Распоряжение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛиц
	|		ПО (ВЫБОР
	|				КОГДА ДокументРаспоряжение.ПеремещениеПоЗаказам
	|					ТОГДА ДанныеЗаданияНаПеревозкуЗаказы.Водитель = ДокументыФизическихЛиц.Физлицо
	|				ИНАЧЕ ДанныеЗаданияНаПеревозкуНакладные.Водитель = ДокументыФизическихЛиц.Физлицо
	|			КОНЕЦ)
	|			И (ДокументыФизическихЛиц.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяОтправитель
	|		ПО ДокументРаспоряжение.СкладОтправитель = СкладыКонтактнаяОтправитель.Ссылка
	|			И (СкладыКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|ГДЕ
	|	ДокументРаспоряжение.Ссылка В(&МассивРаспоряжений)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильГосударственныйНомер, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильМарка, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильВместимостьВКубическихМетрах, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильГрузоподъемностьВТоннах, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АвтомобильТип, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АдресДоставки, """")
	|		ИНАЧЕ ДокументРаспоряжение.АдресДоставки
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.АдресДоставкиЗначенияПолей, """")
	|		ИНАЧЕ ДокументРаспоряжение.АдресДоставкиЗначенияПолей
	|	КОНЕЦ,
	|	ЕСТЬNULL(СкладыКонтактнаяОтправитель.Представление, """"),
	|	ЕСТЬNULL(СкладыКонтактнаяОтправитель.ЗначенияПолей, """"),
	|	ДокументРаспоряжение.БанковскийСчетОрганизации,
	|	ДокументРаспоряжение.БанковскийСчетОрганизации,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ВидПеревозки, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.Водитель, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ДокументРаспоряжение.ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ГосударственныйНомерПрицепа, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДокументРаспоряжение.Организация
	|		ИНАЧЕ ДокументРаспоряжение.Грузоотправитель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДокументРаспоряжение.Контрагент
	|		ИНАЧЕ ДокументРаспоряжение.Грузополучатель
	|	КОНЕЦ,
	|	ДокументРаспоряжение.ДоверенностьВыдана,
	|	ДокументРаспоряжение.ДоверенностьДата,
	|	ДокументРаспоряжение.ДоверенностьЛицо,
	|	ДокументРаспоряжение.ДоверенностьНомер,
	|	ДокументРаспоряжение.Организация,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаВид, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаНомер, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаРегистрационныйНомер, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.ЛицензионнаяКарточкаСерия, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ДокументРаспоряжение.Организация,
	|	ДокументРаспоряжение.Отпустил,
	|	ДокументРаспоряжение.ОтпустилДолжность,
	|	ДокументРаспоряжение.Организация,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|			ТОГДА ЕСТЬNULL(ДанныеЗаданияНаПеревозкуНакладные.Прицеп, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ДокументРаспоряжение.Руководитель,
	|	ЕСТЬNULL(ДокументыФизическихЛиц.Номер, """"),
	|	ЕСТЬNULL(ДокументыФизическихЛиц.Серия, """")
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДокументРаспоряжение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеЗаданияНаПеревозку КАК ДанныеЗаданияНаПеревозкуНакладные
	|		ПО ДокументРаспоряжение.Ссылка = ДанныеЗаданияНаПеревозкуНакладные.Распоряжение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛиц
	|		ПО (ДанныеЗаданияНаПеревозкуНакладные.Водитель = ДокументыФизическихЛиц.Физлицо)
	|			И (ДокументыФизическихЛиц.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяОтправитель
	|		ПО ДокументРаспоряжение.Склад = СкладыКонтактнаяОтправитель.Ссылка
	|			И (СкладыКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|ГДЕ
	|	ДокументРаспоряжение.Ссылка В(&МассивРаспоряжений)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ДокументРаспоряжение.АдресДоставки,
	|	"""",
	|	ЕСТЬNULL(СкладыКонтактнаяОтправитель.Представление, """"),
	|	ЕСТЬNULL(СкладыКонтактнаяОтправитель.ЗначенияПолей, """"),
	|	ДокументРаспоряжение.БанковскийСчетКонтрагента,
	|	ДокументРаспоряжение.БанковскийСчетКонтрагента,
	|	"""",
	|	"""",
	|	ДокументРаспоряжение.ГлавныйБухгалтер,
	|	"""",
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДокументРаспоряжение.Организация
	|		ИНАЧЕ ДокументРаспоряжение.Грузоотправитель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументРаспоряжение.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДокументРаспоряжение.Контрагент
	|		ИНАЧЕ ДокументРаспоряжение.Грузополучатель
	|	КОНЕЦ,
	|	ДокументРаспоряжение.ДоверенностьВыдана,
	|	ДокументРаспоряжение.ДоверенностьДата,
	|	ДокументРаспоряжение.ДоверенностьЛицо,
	|	ДокументРаспоряжение.ДоверенностьНомер,
	|	ДокументРаспоряжение.Контрагент,
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ДокументРаспоряжение.Организация,
	|	ДокументРаспоряжение.Отпустил,
	|	ДокументРаспоряжение.ОтпустилДолжность,
	|	ДокументРаспоряжение.Контрагент,
	|	"""",
	|	ДокументРаспоряжение.Руководитель,
	|	"""",
	|	""""
	|ИЗ
	|	Документ.КорректировкаРеализации КАК ДокументРаспоряжение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяОтправитель
	|		ПО ДокументРаспоряжение.Склад = СкладыКонтактнаяОтправитель.Ссылка
	|			И (СкладыКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада))
	|ГДЕ
	|	ДокументРаспоряжение.Ссылка В(&МассивРаспоряжений)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТаблицаМассДата.МассаБрутто) КАК МассаБрутто,
	|	СУММА(ТаблицаМассДата.МассаНетто) КАК МассаНетто,
	|	МАКСИМУМ(ТаблицаМассДата.Дата) КАК Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|					ТОГДА ВЫБОР
	|							КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|								ТОГДА ТаблицаТоваров.Количество
	|							ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|						КОНЕЦ * &ТекстЗапросаВесУпаковки
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК МассаБрутто,
	|		СУММА(ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры) КАК МассаНетто,
	|		МАКСИМУМ(ТаблицаТоваров.Ссылка.Дата) КАК Дата
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТоваров
	|	ГДЕ
	|		ТаблицаТоваров.Ссылка В(&МассивРаспоряжений)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|					ТОГДА ВЫБОР
	|							КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|								ТОГДА ТаблицаТоваров.Количество
	|							ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|						КОНЕЦ * &ТекстЗапросаВесУпаковки
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры),
	|		МАКСИМУМ(ТаблицаТоваров.Ссылка.Дата)
	|	ИЗ
	|		Документ.КорректировкаРеализации.Товары КАК ТаблицаТоваров
	|	ГДЕ
	|		ТаблицаТоваров.Ссылка В(&МассивРаспоряжений)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|					ТОГДА ВЫБОР
	|							КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|								ТОГДА ТаблицаТоваров.Количество
	|							ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|						КОНЕЦ * &ТекстЗапросаВесУпаковки
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры),
	|		МАКСИМУМ(ТаблицаТоваров.Ссылка.Дата)
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ТаблицаТоваров
	|	ГДЕ
	|		НЕ ТаблицаТоваров.Ссылка.ПеремещениеПоЗаказам
	|		И ТаблицаТоваров.Ссылка В(&МассивРаспоряжений)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|						И ТаблицаТоваров.ЗаказНаПеремещение.АдресДоставки = &АдресДоставки
	|						И ВЫБОР
	|							КОГДА ТаблицаТоваров.ЗаказНаПеремещение.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|								ТОГДА ТаблицаТоваров.ЗаказНаПеремещение.Организация
	|							ИНАЧЕ ТаблицаТоваров.ЗаказНаПеремещение.ОрганизацияПолучатель
	|						КОНЕЦ = &Грузополучатель
	|						И ТаблицаТоваров.ЗаказНаПеремещение.Организация = &Организация
	|						И ВЫБОР
	|							КОГДА ТаблицаТоваров.ЗаказНаПеремещение.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|								ТОГДА ТаблицаТоваров.ЗаказНаПеремещение.Организация
	|							ИНАЧЕ ТаблицаТоваров.ЗаказНаПеремещение.ОрганизацияПолучатель
	|						КОНЕЦ = &Плательщик
	|						И ВЫБОР
	|							КОГДА ТаблицаТоваров.ЗаказНаПеремещение.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|								ТОГДА ТаблицаТоваров.ЗаказНаПеремещение.ПеревозчикПартнер
	|							ИНАЧЕ НЕОПРЕДЕЛЕНО
	|						КОНЕЦ = &Перевозчик
	|						И ВЫБОР
	|							КОГДА &НетЗаданияНаПеревозку
	|								ТОГДА НЕ ТаблицаТоваров.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|							ИНАЧЕ НЕ ЗаданияНаПеревозкуРаспоряжения.Распоряжение ЕСТЬ NULL 
	|									И ТаблицаТоваров.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						КОНЕЦ
	|					ТОГДА ВЫБОР
	|							КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|								ТОГДА ТаблицаТоваров.Количество
	|							ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|						КОНЕЦ * &ТекстЗапросаВесУпаковки
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ВЫБОР
	|				КОГДА ТаблицаТоваров.ЗаказНаПеремещение.АдресДоставки = &АдресДоставки
	|						И ВЫБОР
	|							КОГДА ТаблицаТоваров.ЗаказНаПеремещение.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|								ТОГДА ТаблицаТоваров.ЗаказНаПеремещение.Организация
	|							ИНАЧЕ ТаблицаТоваров.ЗаказНаПеремещение.ОрганизацияПолучатель
	|						КОНЕЦ = &Грузополучатель
	|						И ТаблицаТоваров.ЗаказНаПеремещение.Организация = &Организация
	|						И ВЫБОР
	|							КОГДА ТаблицаТоваров.ЗаказНаПеремещение.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|								ТОГДА ТаблицаТоваров.ЗаказНаПеремещение.Организация
	|							ИНАЧЕ ТаблицаТоваров.ЗаказНаПеремещение.ОрганизацияПолучатель
	|						КОНЕЦ = &Плательщик
	|						И ВЫБОР
	|							КОГДА ТаблицаТоваров.ЗаказНаПеремещение.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|								ТОГДА ТаблицаТоваров.ЗаказНаПеремещение.ПеревозчикПартнер
	|							ИНАЧЕ НЕОПРЕДЕЛЕНО
	|						КОНЕЦ = &Перевозчик
	|						И ВЫБОР
	|							КОГДА &НетЗаданияНаПеревозку
	|								ТОГДА НЕ ТаблицаТоваров.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|							ИНАЧЕ НЕ ЗаданияНаПеревозкуРаспоряжения.Распоряжение ЕСТЬ NULL 
	|									И ТаблицаТоваров.ЗаказНаПеремещение.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						КОНЕЦ
	|					ТОГДА ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		МАКСИМУМ(ТаблицаТоваров.Ссылка.Дата)
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданияНаПеревозкуРаспоряжения
	|			ПО ТаблицаТоваров.ЗаказНаПеремещение = ЗаданияНаПеревозкуРаспоряжения.Распоряжение
	|	ГДЕ
	|		ТаблицаТоваров.Ссылка.ПеремещениеПоЗаказам
	|		И ТаблицаТоваров.Ссылка В(&МассивРаспоряжений)
	|		И (ЗаданияНаПеревозкуРаспоряжения.Ссылка = &ЗаданиеНаПеревозку
	|				ИЛИ &НетЗаданияНаПеревозку)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|					ТОГДА ВЫБОР
	|							КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|								ТОГДА ТаблицаТоваров.Количество
	|							ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|						КОНЕЦ * &ТекстЗапросаВесУпаковки
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры),
	|		МАКСИМУМ(ТаблицаТоваров.Ссылка.Дата)
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТоваров
	|	ГДЕ
	|		НЕ ТаблицаТоваров.Ссылка.РеализацияПоЗаказам
	|		И ТаблицаТоваров.Ссылка В(&МассивРаспоряжений)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|						И ТаблицаТоваров.ЗаказКлиента.АдресДоставки = &АдресДоставки
	|						И ВЫБОР
	|							КОГДА ТаблицаТоваров.ЗаказКлиента.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|								ТОГДА ТаблицаТоваров.ЗаказКлиента.Контрагент
	|							ИНАЧЕ ТаблицаТоваров.ЗаказКлиента.Грузополучатель
	|						КОНЕЦ = &Грузополучатель
	|						И ТаблицаТоваров.ЗаказКлиента.Организация = &Организация
	|						И ТаблицаТоваров.ЗаказКлиента.Контрагент = &Плательщик
	|						И ВЫБОР
	|							КОГДА ТаблицаТоваров.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|								ТОГДА ТаблицаТоваров.ЗаказКлиента.ПеревозчикПартнер
	|							ИНАЧЕ НЕОПРЕДЕЛЕНО
	|						КОНЕЦ = &Перевозчик
	|						И ВЫБОР
	|							КОГДА &НетЗаданияНаПеревозку
	|								ТОГДА НЕ ТаблицаТоваров.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|							ИНАЧЕ НЕ ЗаданияНаПеревозкуРаспоряжения.Распоряжение ЕСТЬ NULL 
	|									И ТаблицаТоваров.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						КОНЕЦ
	|					ТОГДА ВЫБОР
	|							КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|								ТОГДА ТаблицаТоваров.Количество
	|							ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
	|						КОНЕЦ * &ТекстЗапросаВесУпаковки
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ВЫБОР
	|				КОГДА ТаблицаТоваров.ЗаказКлиента.АдресДоставки = &АдресДоставки
	|						И ВЫБОР
	|							КОГДА ТаблицаТоваров.ЗаказКлиента.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|								ТОГДА ТаблицаТоваров.ЗаказКлиента.Контрагент
	|							ИНАЧЕ ТаблицаТоваров.ЗаказКлиента.Грузополучатель
	|						КОНЕЦ = &Грузополучатель
	|						И ТаблицаТоваров.ЗаказКлиента.Организация = &Организация
	|						И ТаблицаТоваров.ЗаказКлиента.Контрагент = &Плательщик
	|						И ВЫБОР
	|							КОГДА ТаблицаТоваров.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|								ТОГДА ТаблицаТоваров.ЗаказКлиента.ПеревозчикПартнер
	|							ИНАЧЕ НЕОПРЕДЕЛЕНО
	|						КОНЕЦ = &Перевозчик
	|						И ВЫБОР
	|							КОГДА &НетЗаданияНаПеревозку
	|								ТОГДА НЕ ТаблицаТоваров.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|							ИНАЧЕ НЕ ЗаданияНаПеревозкуРаспоряжения.Распоряжение ЕСТЬ NULL 
	|									И ТаблицаТоваров.ЗаказКлиента.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|						КОНЕЦ
	|					ТОГДА ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		МАКСИМУМ(ТаблицаТоваров.Ссылка.Дата)
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданияНаПеревозкуРаспоряжения
	|			ПО ТаблицаТоваров.ЗаказКлиента = ЗаданияНаПеревозкуРаспоряжения.Распоряжение
	|	ГДЕ
	|		ТаблицаТоваров.Ссылка.РеализацияПоЗаказам
	|		И ТаблицаТоваров.Ссылка В(&МассивРаспоряжений)
	|		И (ЗаданияНаПеревозкуРаспоряжения.Ссылка = &ЗаданиеНаПеревозку
	|				ИЛИ &НетЗаданияНаПеревозку)) КАК ТаблицаМассДата";
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("ТаблицаТоваров.Упаковка", "ТаблицаТоваров.Номенклатура"));
		
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесНоменклатуры", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения", "ТаблицаТоваров.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивРаспоряжений", 		  МассивРаспоряжений);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку", 		  ЗаданиеНаПеревозку);
	Запрос.УстановитьПараметр("НетЗаданияНаПеревозку", 		  НЕ ЗначениеЗаполнено(ЗаданиеНаПеревозку));
	Запрос.УстановитьПараметр("ЗаполненаЕдиницаИзмеренияВеса",ЗначениеЗаполнено(Константы.ЕдиницаИзмеренияВеса.Получить()));
	Запрос.УстановитьПараметр("СпособыДоставкиСНашимУчастием", 
		ДоставкаТоваровКлиентСервер.СпособыДоставкиДоКлиентаСНашимУчастием(
			ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками")));
		
	АдресДоставки   = Неопределено;
	Грузополучатель = Неопределено;
	Организация     = Неопределено;
	Плательщик      = Неопределено;
	Перевозчик      = Неопределено;
	
	Если ЗначенияЗаполнения <> Неопределено Тогда
		ЗначенияЗаполнения.Свойство("АдресДоставки", 	АдресДоставки);
		ЗначенияЗаполнения.Свойство("Грузополучатель", 	Грузополучатель);
		ЗначенияЗаполнения.Свойство("Организация", 		Организация);
		ЗначенияЗаполнения.Свойство("Плательщик",     	Плательщик);
		ЗначенияЗаполнения.Свойство("Перевозчик", 		Перевозчик);		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АдресДоставки", 		АдресДоставки);
	Запрос.УстановитьПараметр("Грузополучатель", 	Грузополучатель);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Плательщик", 		Плательщик);
	Запрос.УстановитьПараметр("Перевозчик", 		Перевозчик); 
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаРезультат = МассивРезультатов[1].Выгрузить();
	ВыборкаМассДата = МассивРезультатов[2].Выбрать();	
			
	Для Каждого ТекущаяСтрокаТаблицы Из ТаблицаРезультат Цикл
		
		СравнитьДанныеДляТранспортнойНакладной(РеквизитыТранспортнойНакладной, ТекущаяСтрокаТаблицы);		
		
	КонецЦикла;
	
	Пока ВыборкаМассДата.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(РеквизитыТранспортнойНакладной, ВыборкаМассДата);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура СравнитьДанныеДляТранспортнойНакладной(РеквизитыТранспортнойНакладной, ТекущаяСтрокаТаблицы)
		
	РеквизитыТранспортнойНакладнойДляЗаполнения = РеквизитыТранспортнойНакладнойДляЗаполнения();
	
	Для Каждого РеквизитТН Из РеквизитыТранспортнойНакладнойДляЗаполнения Цикл
		
		Если НЕ ЗначениеЗаполнено(РеквизитыТранспортнойНакладной[РеквизитТН.Ключ]) 
			И ЗначениеЗаполнено(ТекущаяСтрокаТаблицы[РеквизитТН.Ключ]) Тогда
			РеквизитыТранспортнойНакладной[РеквизитТН.Ключ] = ТекущаяСтрокаТаблицы[РеквизитТН.Ключ];
		КонецЕсли;
		
	КонецЦикла;
																	
КонецПроцедуры

Функция РеквизитыТранспортнойНакладнойДляЗаполнения()
	
	РеквизитыТранспортнойНакладной = Новый Структура;
		
	РеквизитыТранспортнойНакладной.Вставить("АвтомобильГосударственныйНомер");
	РеквизитыТранспортнойНакладной.Вставить("АвтомобильМарка");
	РеквизитыТранспортнойНакладной.Вставить("АвтомобильВместимостьВКубическихМетрах");
	РеквизитыТранспортнойНакладной.Вставить("АвтомобильГрузоподъемностьВТоннах");
	РеквизитыТранспортнойНакладной.Вставить("АвтомобильТип");
	РеквизитыТранспортнойНакладной.Вставить("АдресДоставки");
	РеквизитыТранспортнойНакладной.Вставить("АдресДоставкиЗначенияПолей");
	РеквизитыТранспортнойНакладной.Вставить("АдресПогрузки");
	РеквизитыТранспортнойНакладной.Вставить("АдресПогрузкиЗначенияПолей");
	РеквизитыТранспортнойНакладной.Вставить("БанковскийСчетПлательщика");
	РеквизитыТранспортнойНакладной.Вставить("БанковскийСчетЗаказчикаПеревозки");	
	РеквизитыТранспортнойНакладной.Вставить("ВидПеревозки");
	РеквизитыТранспортнойНакладной.Вставить("Водитель");
	РеквизитыТранспортнойНакладной.Вставить("ГлавныйБухгалтер");
	РеквизитыТранспортнойНакладной.Вставить("ГосударственныйНомерПрицепа");
	РеквизитыТранспортнойНакладной.Вставить("Грузоотправитель");
	РеквизитыТранспортнойНакладной.Вставить("Грузополучатель");
	РеквизитыТранспортнойНакладной.Вставить("ДоверенностьВыдана");
	РеквизитыТранспортнойНакладной.Вставить("ДоверенностьДата");
	РеквизитыТранспортнойНакладной.Вставить("ДоверенностьЛицо");
	РеквизитыТранспортнойНакладной.Вставить("ДоверенностьНомер");
	РеквизитыТранспортнойНакладной.Вставить("ЗаказчикПеревозки");
	РеквизитыТранспортнойНакладной.Вставить("ЛицензионнаяКарточкаВид");
	РеквизитыТранспортнойНакладной.Вставить("ЛицензионнаяКарточкаНомер");
	РеквизитыТранспортнойНакладной.Вставить("ЛицензионнаяКарточкаРегистрационныйНомер");
	РеквизитыТранспортнойНакладной.Вставить("ЛицензионнаяКарточкаСерия");
	РеквизитыТранспортнойНакладной.Вставить("Организация");
	РеквизитыТранспортнойНакладной.Вставить("Отпустил");
	РеквизитыТранспортнойНакладной.Вставить("ОтпустилДолжность");	
	РеквизитыТранспортнойНакладной.Вставить("Плательщик");	
	РеквизитыТранспортнойНакладной.Вставить("Прицеп");
	РеквизитыТранспортнойНакладной.Вставить("Руководитель");
	РеквизитыТранспортнойНакладной.Вставить("УдостоверениеНомер");
	РеквизитыТранспортнойНакладной.Вставить("УдостоверениеСерия");
	
	Возврат РеквизитыТранспортнойНакладной;
	
КонецФункции

Функция РеквизитыТОРГ12ДляТранспортнойНакладной()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Организация");
	СтруктураВозврата.Вставить("Грузополучатель");
	СтруктураВозврата.Вставить("Грузоотправитель");
	СтруктураВозврата.Вставить("ДоверенностьНомер");
	СтруктураВозврата.Вставить("ДоверенностьДата");
	СтруктураВозврата.Вставить("ДоверенностьВыдана");
	СтруктураВозврата.Вставить("ДоверенностьЛицо");
	СтруктураВозврата.Вставить("Руководитель");
	СтруктураВозврата.Вставить("ГлавныйБухгалтер");
	СтруктураВозврата.Вставить("Отпустил");
	СтруктураВозврата.Вставить("ОтпустилДолжность");
	СтруктураВозврата.Вставить("АдресДоставки");
	СтруктураВозврата.Вставить("ЗаказчикПеревозки");
	СтруктураВозврата.Вставить("БанковскийСчетЗаказчикаПеревозки");
	СтруктураВозврата.Вставить("Плательщик");
	СтруктураВозврата.Вставить("БанковскийСчетПлательщика");
	
	Возврат СтруктураВозврата;
	
КонецФункции

Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументТовары.Ссылка КАК Ссылка,
	|	ДокументТовары.НомерСтроки КАК НомерСтроки,
	|	ДокументТовары.Номенклатура КАК Номенклатура,
	|	ДокументТовары.Характеристика КАК Характеристика,
	|	ДокументТовары.Количество КАК Количество,
	|	ДокументТовары.Количество КАК КоличествоУпаковок,
	|	ДокументТовары.СуммаБезНДС КАК СуммаБезНДС,
	|	ДокументТовары.СтавкаНДС КАК СтавкаНДС,
	|	ДокументТовары.СуммаНДС КАК СуммаНДС,
	|	ДокументТовары.ЭтоТовар КАК ЭтоТовар,
	|	ДокументТовары.ЭтоНеВозвратнаяТара КАК ЭтоНеВозвратнаяТара,
	|	ДокументТовары.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.ЭтоТовар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументТовары.Ссылка,
	|	ДокументТовары.НомерСтроки,
	|	ДокументТовары.Номенклатура,
	|	ДокументТовары.Характеристика,
	|	ДокументТовары.Количество,
	|	ДокументТовары.Количество,
	|	ДокументТовары.СуммаБезНДС,
	|	ДокументТовары.СтавкаНДС,
	|	ДокументТовары.СуммаНДС,
	|	ДокументТовары.ЭтоТовар,
	|	ЛОЖЬ,
	|	ДокументТовары.Упаковка
	|ИЗ
	|	ВозвратТоваровПоставщикуТаблицаТоваров КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.ЭтоТовар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументТовары.Ссылка,
	|	ДокументТовары.НомерСтроки,
	|	ДокументТовары.Номенклатура,
	|	ДокументТовары.Характеристика,
	|	ДокументТовары.Количество,
	|	ДокументТовары.Количество,
	|	ДокументТовары.СуммаБезНДС,
	|	ДокументТовары.СтавкаНДС,
	|	ДокументТовары.СуммаНДС,
	|	ДокументТовары.ЭтоТовар,
	|	ДокументТовары.ЭтоНеВозвратнаяТара,
	|	ДокументТовары.Упаковка
	|ИЗ
	|	ТаблицаТоваровКорректировкаРеализации КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.ЭтоТовар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументТовары.Ссылка,
	|	ДокументТовары.НомерСтроки,
	|	ДокументТовары.Номенклатура,
	|	ДокументТовары.Характеристика,
	|	ДокументТовары.Количество,
	|	ДокументТовары.Количество,
	|	ДокументТовары.СуммаБезНДС,
	|	ДокументТовары.СтавкаНДС,
	|	ДокументТовары.СуммаНДС,
	|	ДокументТовары.ЭтоТовар,
	|	ДокументТовары.ЭтоНеВозвратнаяТара,
	|	ДокументТовары.Упаковка
	|ИЗ
	|	ПеремещениеТоваровТаблицаТоваров КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.ЭтоТовар";
	
	Запрос.Выполнить();	
КонецПроцедуры

Функция ПроверитьНаличиеОформленныхТранспортныхНакладных(Параметры) Экспорт
	
	Если Не (Параметры.Свойство("ДокументОснование") и Параметры.Свойство("Дата")) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТаблицаПараметровОтбора = ПолучитьПараметрыОтбораТТН(Параметры.ДокументОснование);
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТаблицаПараметровОтбора.Колонки.Добавить("Перевозчик", Новый ОписаниеТипов(МассивТипов));
	
 	Для Каждого ПараметрОтбора Из ТаблицаПараметровОтбора Цикл
		Если ЗначениеЗаполнено(ПараметрОтбора.ПеревозчикПартнер) Тогда
			ПараметрОтбора.Перевозчик = ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию(ПараметрОтбора.ПеревозчикПартнер);
		Иначе
			ПараметрОтбора.Перевозчик = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ПараметрыОтбора.АдресДоставки КАК СТРОКА(500)) КАК АдресДоставки,
	|	ПараметрыОтбора.Организация КАК Организация,
	|	ПараметрыОтбора.Грузополучатель КАК Грузополучатель,
	|	ПараметрыОтбора.Перевозчик КАК Перевозчик
	|ПОМЕСТИТЬ ПараметрыОтбора
	|ИЗ
	|	&ПараметрыОтбора КАК ПараметрыОтбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТранспортнаяНакладная.Ссылка
	|ИЗ
	|	Документ.ТранспортнаяНакладная КАК ТранспортнаяНакладная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыОтбора КАК ПараметрыОтбора
	|		ПО ТранспортнаяНакладная.АдресДоставки = ПараметрыОтбора.АдресДоставки
	|			И ТранспортнаяНакладная.Организация = ПараметрыОтбора.Организация
	|			И ТранспортнаяНакладная.Грузополучатель = ПараметрыОтбора.Грузополучатель
	|			И ТранспортнаяНакладная.Перевозчик = ПараметрыОтбора.Перевозчик
	|ГДЕ
	|	(НЕ ТранспортнаяНакладная.Ссылка В
	|					(ВЫБРАТЬ
	|						ДокументыОснования.Ссылка
	|					ИЗ
	|						Документ.ТранспортнаяНакладная.ДокументыОснования КАК ДокументыОснования
	|					ГДЕ
	|						ДокументыОснования.ДокументОснование = &ДокументОснование)
	|			ИЛИ НЕ &ДокументОснованиеЗаполнен)
	|	И НЕ ТранспортнаяНакладная.ПометкаУдаления
	|	И ТранспортнаяНакладная.Проведен
	|	И ТранспортнаяНакладная.Дата >= &Дата";
	
	Запрос.УстановитьПараметр("ДокументОснование", Параметры.ДокументОснование);
	Запрос.УстановитьПараметр("ПараметрыОтбора",   ТаблицаПараметровОтбора);
	Запрос.УстановитьПараметр("ДокументОснованиеЗаполнен", Не Параметры.ДокументОснование.Пустая());
	Запрос.УстановитьПараметр("Дата", Параметры.Дата - 14 * 24 * 60 * 60);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

Функция ПустыеГрузоотправители()
	
	ПустыеГрузоотправители = Новый Массив;
	ПустыеГрузоотправители.Добавить(Справочники.Контрагенты.ПустаяСсылка());
	ПустыеГрузоотправители.Добавить(Справочники.Организации.ПустаяСсылка());
	ПустыеГрузоотправители.Добавить(Неопределено);
	ПустыеГрузоотправители.Добавить(Null);
	
	Возврат ПустыеГрузоотправители;
	
КонецФункции

#Область ФормированиеГиперссылкиВЖурналахДокументов

Функция СформироватьГиперссылкуСмТакжеВРаботе(Параметры) Экспорт
	
	Если Не (ПравоДоступа("Изменение", Метаданные.Документы.ТранспортнаяНакладная)
			И ПолучитьФункциональнуюОпцию("ИспользоватьТТН")) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстГиперссылки = НСтр("ru = 'ТТН'");
	
	Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,ИмяФормыРабочееМесто());
	
КонецФункции

Функция ИмяФормыРабочееМесто() Экспорт
	
	Возврат "Документ.ТранспортнаяНакладная.Форма.ФормаСписка";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ТранспортнаяНакладная";
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументДляОбработки.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ТранспортнаяНакладная КАК ДокументДляОбработки
	|ГДЕ
	|	ДокументДляОбработки.АдресДоставки <> """"
	|	И ВЫРАЗИТЬ(ДокументДляОбработки.АдресДоставкиЗначенияПолей КАК СТРОКА (500)) <> """"
	|	И НЕ ДокументДляОбработки.АдресДоставкиЗначенияПолей ПОДОБНО ""%</КонтактнаяИнформация>""";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ТранспортнаяНакладная";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка                       КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных          КАК ВерсияДанных,
	|	ОбъектыДляОбработки.Ссылка.Проведен              КАК Проведен,
	|	ОбъектыДляОбработки.Ссылка.АдресДоставки         КАК АдресДоставки,
	|	ОбъектыДляОбработки.Ссылка.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей
	|ПОМЕСТИТЬ ТаблицаСсылок
	|ИЗ
	|	ВТДокументыДляОбработки КАК ОбъектыДляОбработки
	|;
	|ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка                КАК Ссылка,
	|	ОбъектыДляОбработки.ВерсияДанных          КАК ВерсияДанных,
	|	ОбъектыДляОбработки.Проведен              КАК Проведен,
	|	ОбъектыДляОбработки.АдресДоставки <> """"
	|	И ВЫРАЗИТЬ(ОбъектыДляОбработки.АдресДоставкиЗначенияПолей КАК СТРОКА (500)) <> """"
	|	И НЕ ОбъектыДляОбработки.АдресДоставкиЗначенияПолей ПОДОБНО ""%</КонтактнаяИнформация>""
	|	КАК                                       ТребуетсяПересчетЗначенийПолейАдреса
	|ИЗ
	|	ТаблицаСсылок КАК ОбъектыДляОбработки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДокументыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
		
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ОбъектИзменен = Ложь;
			
			Если Выборка.ТребуетсяПересчетЗначенийПолейАдреса Тогда
				НовыеЗначенияПолей = "";
				ОбщегоНазначенияУТ.ЗаполнитьЗначенияПолейКИПоПредставлению(ДокументОбъект.АдресДоставки, НовыеЗначенияПолей);
				ДокументОбъект.АдресДоставкиЗначенияПолей = НовыеЗначенияПолей;
				ОбъектИзменен = Истина;
			КонецЕсли;
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(),  Выборка.Ссылка);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
