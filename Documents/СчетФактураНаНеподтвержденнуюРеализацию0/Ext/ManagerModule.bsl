#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура на неподтвержденную реализацию по ставке 0%".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьНДС0";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
КонецПроцедуры

// Возвращает товары по документу основанию счета-фактуры
//
// Параметры:
// 	 ДокументОснование - ДокументСсылка.РеализацияТоваровУслуг,
// 							ДокументСсылка.АктВыполненныхРабот - Документ основание
//
// Возвращаемое значение:
// 	Товары - ТаблицаЗначений - Товары по документу-основанию.
//
Функция ТоварыПоДокументыОснованию(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	АналитикаНоменклатуры.Номенклатура КАК Номенклатура,
		|	АналитикаНоменклатуры.Характеристика КАК Характеристика,
		|	ВидыЗапасов.Упаковка КАК Упаковка,
		|	ВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ВидыЗапасов.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0) 
		|			ТОГДА АналитикаНоменклатуры.Номенклатура.СтавкаНДС
		|		ИНАЧЕ ВидыЗапасов.СтавкаНДС 
		|	КОНЕЦ КАК СтавкаНДС,
		|	ЕСТЬNULL(
		|		СуммыДокументовВВалютеРегл.БазаНДСРегл, 
		|		ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВвалютуРегл КАК ЧИСЛО(15,2))) КАК Сумма,
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаСНДС,
		|	СпрВидыЗапасов.ТипЗапасов,
		|	ВидыЗапасов.НомерГТД КАК НомерГТД
		|	
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ВидыЗапасов
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры 
		|	ПО
		|		ВидыЗапасов.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.КлючАналитики
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|	ПО
		|		ВидыЗапасов.ВидЗапасов = СпрВидыЗапасов.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
		|	ПО
		|		ВидыЗапасов.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
		|		И ВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
		|		И СуммыДокументовВВалютеРегл.Активность
		|	
		|ГДЕ
		|	ВидыЗапасов.Ссылка = &ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ 
		|	
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	Товары.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0) 
		|			ТОГДА Товары.Номенклатура.СтавкаНДС
		|		ИНАЧЕ Товары.СтавкаНДС 
		|	КОНЕЦ КАК СтавкаНДС,                      
		|	ЕСТЬNULL(
		|		СуммыДокументовВВалютеРегл.БазаНДСРегл, 
		|		ВЫРАЗИТЬ((Товары.СуммаСНДС - Товары.СуммаНДС) * &КоэффициентПересчетаВвалютуРегл КАК ЧИСЛО(15,2))) КАК Сумма,
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаСНДС,
		|	ВЫБОР 
		|		КОГДА Товары.Номенклатура.ВидНоменклатуры.ВариантОказанияУслуг = ЗНАЧЕНИЕ(Перечисление.ВариантыОказанияУслуг.Партнером)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
		|	КОНЕЦ КАК ТипЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК НомерГТД
		|	
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
		|	ПО
		|		Товары.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
		|		И Товары.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
		|		И СуммыДокументовВВалютеРегл.Активность
		|	
		|ГДЕ
		|	Товары.Ссылка = &ДокументОснование
		|	И Товары.Номенклатура.ТипНоменклатуры НЕ В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|";
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Услуги.Номенклатура КАК Номенклатура,
		|	Услуги.Характеристика КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Упаковка,
		|	Услуги.Количество КАК КоличествоУпаковок,
		|	Услуги.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА Услуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0) 
		|			ТОГДА Услуги.Номенклатура.СтавкаНДС
		|		ИНАЧЕ Услуги.СтавкаНДС 
		|	КОНЕЦ КАК СтавкаНДС,                      
		|	ЕСТЬNULL(
		|		СуммыДокументовВВалютеРегл.БазаНДСРегл, 
		|		ВЫРАЗИТЬ((Услуги.СуммаСНДС - Услуги.СуммаНДС) * &КоэффициентПересчетаВвалютуРегл КАК ЧИСЛО(15,2))) КАК Сумма,
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаСНДС,
		|	ВЫБОР 
		|		КОГДА Услуги.Номенклатура.ВидНоменклатуры.ВариантОказанияУслуг = ЗНАЧЕНИЕ(Перечисление.ВариантыОказанияУслуг.Партнером)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
		|	КОНЕЦ КАК ТипЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК НомерГТД
		|	
		|ИЗ
		|	Документ.АктВыполненныхРабот.Услуги КАК Услуги
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
		|	ПО
		|		Услуги.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
		|		И Услуги.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
		|		И СуммыДокументовВВалютеРегл.Активность
		|	
		|ГДЕ
		|	Услуги.Ссылка = &ДокументОснование
		|";
		
	КонецЕсли;
	
	Реквизиты = Новый Структура();
	Реквизиты.Вставить("Валюта");
	Реквизиты.Вставить("Дата");
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, Реквизиты);
	КоэффициентПересчетаВВалютуРегл = 
		РаботаСКурсамивалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
			ЗначенияРеквизитов.Валюта, 
			Константы.ВалютаРегламентированногоУчета.Получить(),
			ЗначенияРеквизитов.Дата);

	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", КоэффициентПересчетаВВалютуРегл);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Товары = Запрос.Выполнить().Выгрузить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	СтруктураПересчетаСуммы = Новый Структура;
	СтруктураПересчетаСуммы.Вставить("ЦенаВключаетНДС", Ложь);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС",  СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	
	Для каждого Строка Из Товары Цикл
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Строка, СтруктураДействий, Неопределено);
	КонецЦикла;
	
	Возврат Товары;
	
КонецФункции

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", Параметры.МассивОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода",     Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      Параметры.КонецПериода);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Подзапрос.КоличествоКОформлению) КАК КоличествоДокументовКОформлению
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(НДССостояниеРеализации0.ДокументРеализации) КАК КоличествоКОформлению
	|	ИЗ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ГДЕ
	|		НДССостояниеРеализации0.ДатаРеализации <= &КонецПериода
	|		И НДССостояниеРеализации0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)
	|		И &УсловиеОтбора
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОЛИЧЕСТВО(НДССостояниеРеализации0.ДокументРеализации) КАК КоличествоКОформлению
	|	ИЗ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ГДЕ
	|		НДССостояниеРеализации0.ДатаРеализации <= &КонецПериода
	|		И НДССостояниеРеализации0.ДатаПодтверждения > &КонецПериода
	|		И НДССостояниеРеализации0.Состояние В (
	|			ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0),
	|			ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0))
	|		И &УсловиеОтбора
	|	) КАК Подзапрос";
	
	Если ЗначениеЗаполнено(Параметры.МассивОрганизаций) Тогда
		УсловиеОтбора = "НДССостояниеРеализации0.Организация В (&МассивОрганизаций)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеОтбора", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И НЕ Выборка.КоличествоДокументовКОформлению = NULL Тогда
		Возврат Выборка.КоличествоДокументовКОформлению;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Номер                КАК Номер,
	|	ДанныеДокументов.Дата                 КАК Дата,
	|	ДанныеДокументов.Организация          КАК Организация,
	|	ДанныеДокументов.Контрагент           КАК Контрагент,
	|	ДанныеДокументов.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПлатежноРасчетныеДокументы,
	|	ДанныеДокументов.ДокументОснование    КАК ДокументОснование,
	|
	|	ВЫБОР КОГДА ДанныеОрганизаций.ОбособленноеПодразделение ТОГДА
	|		ДанныеОрганизаций.ГоловнаяОрганизация
	|	ИНАЧЕ
	|		ДанныеОрганизаций.Ссылка
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	
	|	ДанныеОрганизаций.Ссылка КАК Грузоотправитель, 
	|	
	|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане ЕСТЬ NULL ТОГДА
	|		ДанныеПодразделений.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения
	|	КОГДА ДанныеОрганизаций.ОбособленноеПодразделение ТОГДА
	|		ДанныеОрганизаций.ЦифровойИндексОбособленногоПодразделения
	|	ИНАЧЕ
	|		""""
	|	КОНЕЦ КАК ИндексПодразделения,
	|	
	|	ВЫБОР КОГДА ДанныеДокументов.КППКонтрагента ПОДОБНО """" ТОГДА """"
	|		  ИНАЧЕ ДанныеДокументов.КППКонтрагента
	|	КОНЕЦ КАК КПППокупателя,
	|
	|	ВЫБОР КОГДА ДанныеДокументов.ИННКонтрагента ПОДОБНО """" ТОГДА ЕстьNULL(ДанныеКонтрагента.ИНН, """")
	|		ИНАЧЕ ДанныеДокументов.ИННКонтрагента
	|	КОНЕЦ КАК ИННПокупателя,
	|	
	|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане ЕСТЬ NULL ТОГДА
	|		ДанныеПодразделений.РегистрацияВНалоговомОргане.КПП
	|	ИНАЧЕ
	|		ДанныеОрганизаций.КПП
	|	КОНЕЦ КАК КПППоставщика
	|
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК ДанныеДокументов
	| 	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Организации КАК ДанныеОрганизаций
	|	ПО
	|		ДанныеДокументов.Организация = ДанныеОрганизаций.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
	|	ПО ДанныеКонтрагента.Ссылка = ДанныеДокументов.Контрагент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
	|	ПО
	|		ДанныеПодразделений.Организация = ДанныеДокументов.Организация
	|		И ДанныеПодразделений.Подразделение = 
	|			ВЫБОР 
	|				КОГДА ДанныеДокументов.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
	|					ТОГДА ДанныеДокументов.ДокументОснование.Склад.Подразделение
	|				КОГДА ДанныеДокументов.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг 
	|					ТОГДА ДанныеДокументов.ДокументОснование.Подразделение
	|			КОНЕЦ
	|	
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьУслуги,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьТовары
	|ПОМЕСТИТЬ
	|	НоменклатураДокументов
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК ТаблицаТоваров
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	СчетаФактуры.Номер КАК Номер,
	|	СчетаФактуры.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	СчетаФактуры.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПоДокументу,
	|	&ВалютаРеглУчета КАК ВалютаСчетаФактуры,
	|	РеализацияТоваровУслуг.Партнер КАК Партнер,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Контрагент.ОбособленноеПодразделение
	|			ТОГДА РеализацияТоваровУслуг.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ РеализацияТоваровУслуг.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ЕСТЬNULL(СчетаФактуры.ГоловнаяОрганизация, РеализацияТоваровУслуг.Организация) КАК Организация,
	|	СчетаФактуры.Организация.Префикс КАК Префикс,
	|	СчетаФактуры.ИндексПодразделения КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслуг.Контрагент
	|		ИНАЧЕ РеализацияТоваровУслуг.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(СчетаФактуры.Грузоотправитель, РеализацияТоваровУслуг.Организация)
	|		ИНАЧЕ РеализацияТоваровУслуг.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	СчетаФактуры.КПППоставщика КАК КПППоставщика,
	|	СчетаФактуры.КПППокупателя КАК КПППокупателя,
	|	СчетаФактуры.ИННПокупателя КАК ИННПокупателя,
	|	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
	|	РеализацияТоваровУслуг.Валюта КАК Валюта,
	|	РеализацияТоваровУслуг.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	РеализацияТоваровУслуг.Валюта.Код КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоУслуги,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|	ПО 
	|		РеализацияТоваровУслуг.Ссылка = СчетаФактуры.ДокументОснование
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		НоменклатураДокументов КАК НоменклатураДокументов
	|	ПО 
	|		СчетаФактуры.Ссылка = НоменклатураДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО 
	|		СчетаФактуры.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	СчетаФактуры.Номер КАК Номер,
	|	СчетаФактуры.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	СчетаФактуры.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПоДокументу,
	|	&ВалютаРеглУчета КАК ВалютаСчетаФактуры,
	|	АктВыполненныхРабот.Партнер КАК Партнер,
	|	ВЫБОР
	|		КОГДА АктВыполненныхРабот.Контрагент.ОбособленноеПодразделение
	|			ТОГДА АктВыполненныхРабот.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ АктВыполненныхРабот.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	СчетаФактуры.ГоловнаяОрганизация КАК Организация,
	|	СчетаФактуры.Организация.Префикс КАК Префикс,
	|	СчетаФактуры.ИндексПодразделения КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	АктВыполненныхРабот.Контрагент КАК Грузополучатель,
	|	СчетаФактуры.Грузоотправитель КАК Грузоотправитель,
	|	СчетаФактуры.КПППоставщика КАК КПППоставщика,
	|	СчетаФактуры.КПППокупателя КАК КПППокупателя,
	|	СчетаФактуры.ИННПокупателя КАК ИННПокупателя,
	|	"""" КАК АдресДоставки,
	|	АктВыполненныхРабот.Валюта КАК Валюта,
	|	АктВыполненныхРабот.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	АктВыполненныхРабот.Валюта.Код КАК ВалютаКод,
	|	ИСТИНА КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.АктВыполненныхРабот КАК АктВыполненныхРабот
	|	ПО 
	|		АктВыполненныхРабот.Ссылка = СчетаФактуры.ДокументОснование
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО 
	|		СчетаФактуры.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ &ТекстЗапросаКодЕдиницыИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ ТаблицаТовары.КоличествоУпаковок
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА (ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) / ТаблицаТовары.Количество
	|		ИНАЧЕ (ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) / ТаблицаТовары.КоличествоУпаковок
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДС,
	|	ТаблицаТовары.СуммаНДС  КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.НомерГТД.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В (&МассивДокументов)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатПоШапке          = МассивРезультатов[1];
	РезультатПоТабличнойЧасти = МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

#КонецОбласти

#Область Проведение

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.СчетФактураНаНеподтвержденнуюРеализацию0";
	
	ВЗапросеЕстьИсточник = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтТаблицаДанныхОснований", ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса));
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                                            КАК Ссылка,
	|	ДанныеДокумента.Дата                                                              КАК Период,
	|	ДанныеДокумента.Организация                                                       КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ОбособленноеПодразделение, ЛОЖЬ)             КАК ОбособленноеПодразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ЦифровойИндексОбособленногоПодразделения, 0) КАК ЦифровойИндексОбособленногоПодразделения,
	|	ДанныеДокумента.Контрагент                                           КАК Контрагент,
	|	ДанныеДокумента.ДокументОснование                                    КАК ДокументОснование,
	|	ДанныеДокумента.Номер                                                КАК Номер,
	|	ДанныеДокумента.Дата                                                 КАК Дата,
	|	ДанныеДокумента.КодВидаОперации                                      КАК КодВидаОперации,
	|	ДанныеДокумента.КППКонтрагента                                       КАК КППКонтрагента,
	|	ДанныеДокумента.ИННКонтрагента                                       КАК ИННКонтрагента,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ВернутьМногооборотнуюТару, ЛОЖЬ)     КАК ВернутьМногооборотнуюТару,
	|	РеестрДокументов.ХозяйственнаяОперация                               КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Ответственный                                        КАК Ответственный,
	|	ДанныеДокумента.Комментарий                                          КАК Комментарий,
	|	ДанныеДокумента.Проведен                                             КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                                      КАК ПометкаУдаления,
	|	РеестрДокументов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)  КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|	ПО
	|		ДанныеДокумента.ДокументОснование = РеализацияТоваровУслуг.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|	ПО
	|		ДанныеДокумента.ДокументОснование = РеестрДокументов.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
		
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Номер = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
			Реквизиты.Номер, 
			Истина,
			Реквизиты.ОбособленноеПодразделение, 
			Реквизиты.ЦифровойИндексОбособленногоПодразделения);
			
	КодВидаОперацииКомиссия = УчетНДСПереопределяемый.КодВидаОперацииКомиссия(Реквизиты.КодВидаОперации, Реквизиты.Период);
	
	Запрос.УстановитьПараметр("Организация",				Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",					Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ДокументОснование",			Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("НомерНаПечать",				Номер);
	Запрос.УстановитьПараметр("Номер",           			Реквизиты.Номер);
	Запрос.УстановитьПараметр("Период",						Реквизиты.Период);
	Запрос.УстановитьПараметр("КодВидаОперации",			Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("КодВидаОперацииКомиссия",	КодВидаОперацииКомиссия);
	Запрос.УстановитьПараметр("КППКонтрагента",				Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("ИННКонтрагента",				Реквизиты.ИННКонтрагента);
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару",	Реквизиты.ВернутьМногооборотнуюТару);
	Запрос.УстановитьПараметр("ЭтоПередачаНаКомиссию",		Реквизиты.ЭтоПередачаНаКомиссию);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",		Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Ответственный",				Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("Комментарий",				Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Проведен",					Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",			Реквизиты.ПометкаУдаления);
	
	ТипыЗапасовСобственные = Новый СписокЗначений;
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Товар);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Услуга);
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", ТипыЗапасовСобственные);
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураНаНеподтвержденнуюРеализацию0"));
	ЗначенияПараметровПроведения.Вставить("Валюта", 				 Константы.ВалютаРегламентированногоУчета.Получить());

	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                                       КАК Период,
	|	&Организация                                                                  КАК Организация,
	|	&Контрагент                                                                   КАК Контрагент,
	|	Товары.Ссылка                                                                 КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&Период                                                                       КАК ДатаВыставленияПолучения,
	|	1                                                                             КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                                                              КАК КодВидаОперации,
	|	&НомерНаПечать                                                                        КАК НомерСчетаФактуры,
	|	&Период                                                                       КАК ДатаСчетаФактуры,
	|	&Валюта                                                                       КАК Валюта,
	|	СУММА(Товары.СуммаСНДС)                                                       КАК СуммаПоСчетуФактуре,
	|	СУММА(Товары.СуммаНДС)                                                        КАК СуммаНДС,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                                                             КАК СуммаНДСРазницаУменьшение,
	|	0                                                                             КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                                                          КАК ПоСтавкеБезНДС,
	|	ИСТИНА                                                                        КАК СчетФактураНеВыставляется,
	|	&КППКонтрагента                                                               КАК КППКонтрагента,
	|	&ИННКонтрагента                                                               КАК ИННКонтрагента,
	|	
	|	СУММА(ВЫБОР 
	|			КОГДА Товары.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				ТОГДА 0
	|			ИНАЧЕ Товары.СуммаСНДС
	|		КОНЕЦ)                                                                    КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ВЫБОР 
	|			КОГДА Товары.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				ТОГДА 0
	|			ИНАЧЕ Товары.СуммаНДС
	|		КОНЕЦ)СуммаНДСКомиссия,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                                                             КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Товары.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА """"
	|		ИНАЧЕ &КодВидаОперацииКомиссия 
	|	КОНЕЦ)                                                                        КАК КодВидаОперацииКомиссия
	|
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Покупатель,
	|	&Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	NULL КАК ДатаОплаты,
	|	NULL КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НеподтвержденаСтавка0) КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	NULL КАК СторнирующаяЗаписьДопЛиста,
	|	NULL КАК ДоговорКонтрагента,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК Исправление,
	|	NULL КАК ДатаСчетаФактурыКомиссионера,
	|	СУММА(Товары.СуммаСНДС - Товары.СуммаНДС) КАК СуммаБезНДС,
	|	СУММА(Товары.СуммаНДС) КАК НДС
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|			ПО Товары.Ссылка.ДокументОснование = НДССостояниеРеализации0.ДокументРеализации
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И НЕ &ЭтоПередачаНаКомиссию
	|	И Товары.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (ВЫБОР
	|		КОГДА &ВернутьМногооборотнуюТару
	|			ТОГДА Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИНАЧЕ
	|			ИСТИНА
	|		КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|		ИНАЧЕ NULL
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Ссылка,
	|	&Организация,
	|	&Контрагент,
	|	&Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	Товары.СтавкаНДС,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НеподтвержденаСтавка0),
	|	&Период,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СУММА(Товары.СуммаСНДС - Товары.СуммаНДС) КАК СуммаБезНДС,
	|	СУММА(Товары.СуммаНДС) КАК НДС
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|			ПО Товары.Ссылка.ДокументОснование = НДССостояниеРеализации0.ДокументРеализации
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), 
	|												  ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Товары.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|		ИНАЧЕ NULL
	|	КОНЕЦ
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаДанныхОснований";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеРеестра.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеРеестра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРеестра.Контрагент КАК Контрагент,
	|	ДанныеРеестра.Договор КАК Договор,
	|	ДанныеРеестра.Подразделение КАК Подразделение,
	|	ДанныеРеестра.Партнер КАК Партнер,
	|	СУММА(ДанныеДокумента.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВтТаблицаДанныхОснований
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК ДанныеРеестра
	|		ПО ДанныеДокумента.Ссылка.ДокументОснование = ДанныеРеестра.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеРеестра.НаправлениеДеятельности,
	|	ДанныеРеестра.ХозяйственнаяОперация,
	|	ДанныеРеестра.Контрагент,
	|	ДанныеРеестра.Договор,
	|	ДанныеРеестра.Подразделение,
	|	ДанныеРеестра.Партнер";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаДанныхОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                       			КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	ТаблицаОснований.ХозяйственнаяОперация 	КАК ХозяйственнаяОперация,
	|	ТаблицаОснований.Партнер                КАК Партнер,
	|	&Контрагент                             КАК Контрагент,
	|	ТаблицаОснований.Договор                КАК Договор,
	|	ТаблицаОснований.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК МестоХранения,
	|	ТаблицаОснований.Подразделение          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Валюта                                 КАК Валюта,
	|	ТаблицаОснований.СуммаНДС               КАК Сумма,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК РазделительЗаписи,
	|	НЕОПРЕДЕЛЕНО                   			КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаДанныхОснований КАК ТаблицаОснований
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОснований.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстГиперссылки = НСтр("ru = 'Подтверждение ставки 0%'");
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если ЕстьСчетаФактурыКОформлению(Параметры) Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураНаНеподтвержденнуюРеализацию0());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураНаНеподтвержденнуюРеализацию0());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураНаНеподтвержденнуюРеализацию0() Экспорт
	
	Возврат "РегистрСведений.НДССостояниеРеализации0.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
