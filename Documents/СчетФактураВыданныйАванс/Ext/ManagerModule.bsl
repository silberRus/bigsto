#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.СчетФактураВыданныйАванс.ДобавитьКомандуСоздатьНаОснованииИсправительныйСчетФактура(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура выданный (аванс)".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОснованииИсправительныйСчетФактура(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураВыданныйАванс) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.ИсправительныйСчетФактураВыданныйАванс";
		КомандаСоздатьНаОсновании.Идентификатор = "ИсправительныйСчетФактура";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Исправительный счет-фактура'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Добавляет команду создания документа "Счет-фактура выданный (аванс)".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураВыданныйАванс) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураВыданныйАванс.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураВыданныйАванс);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

// Возвращает входящий номер и дату расчетного документа.
//
// Параметры:
// 	ДокументСсылка	- ДокументСсылка - Документ входящий номер и дату которого требуется получить
// 	Контрагент		- СправочникСсылка.Контрагенты, Неопределено - Контрагент табличной части "РасчетыСПартнерами" документа "ВводОстатков"
//
// Возвращаемое значение:
// 	СтруктураРезультата - Структура  - содержит: 
// 						    * НомерПлатежноРасчетногоДокумента - Строка - номер документа
// 							* ДатаПлатежноРасчетногоДокумента - Дата - дата документа
//
Функция ВходящийНомерИДатаДокумента(ДокументСсылка, Контрагент = Неопределено) Экспорт
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("НомерПлатежноРасчетногоДокумента", "");
	СтруктураРезультата.Вставить("ДатаПлатежноРасчетногоДокумента" , '00010101');
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств") Тогда
		СтруктураРезультата.Вставить("НомерПлатежноРасчетногоДокумента", ДокументСсылка.НомерВходящегоДокумента);
		СтруктураРезультата.Вставить("ДатаПлатежноРасчетногоДокумента" , ДокументСсылка.ДатаВходящегоДокумента);
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВводОстатков") Тогда
		// Для ввода остатков данные хранятся в табличной части
		Если ЗначениеЗаполнено(Контрагент) И ТипЗнч(Контрагент)  = Тип("СправочникСсылка.Контрагенты") Тогда
			СтрокаАванса = ДокументСсылка.РасчетыСПартнерами.Найти(Контрагент, "Контрагент");
			Если СтрокаАванса <> Неопределено Тогда
				СтруктураРезультата.Вставить("НомерПлатежноРасчетногоДокумента", СтрокаАванса.НомерРасчетногоДокумента);
				СтруктураРезультата.Вставить("ДатаПлатежноРасчетногоДокумента" , СтрокаАванса.ДатаРасчетногоДокумента);
			КонецЕсли; 
		КонецЕсли; 
		
	Иначе
		СтруктураРезультата.Вставить("НомерПлатежноРасчетногоДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументСсылка.Номер, Ложь, Истина));
		СтруктураРезультата.Вставить("ДатаПлатежноРасчетногоДокумента" , ДокументСсылка.Дата);
		
	КонецЕсли;
	
	Возврат СтруктураРезультата;

КонецФункции 

// Переформировывает движения счетов-фактур по регистрам НДСЗаписиКнигиПокупок и НДСЗаписиКнигиПродаж без перепроведения документа.
// Сбрасывает статус отражения в регл. учете.
//
// Параметры:
//	МассивДокументов - Массив - Документы, движения которых необходимо актуализировать.
//	ПризнакОтменаПроведения - Булево - Признак, что переформировать движения необходимо по причине отмены проведения документа.
//
Процедура СформироватьДвиженияПоКнигамПокупокПродаж(МассивРегистраторов, ПризнакОтменаПроведения = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка      КАК Ссылка,
	|	СчетФактура.Организация КАК Организация,
	|	Расчеты.Период          КАК ДатаОтражения
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК Расчеты
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|	ПО
	|		Расчеты.РасчетныйДокумент = СчетФактура.ДокументОснование
	|		И НЕ СчетФактура.Исправление
	|ГДЕ
	|	Расчеты.Регистратор В (&МассивРегистраторов)
	|	И СчетФактура.Проведен
	|	И СчетФактура.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка                       КАК Ссылка,
	|	СчетФактура.Организация                  КАК Организация,
	|	АннулированиеПодарочныхСертификатов.Дата КАК ДатаОтражения
	|ИЗ
	|	Документ.АннулированиеПодарочныхСертификатов КАК АннулированиеПодарочныхСертификатов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.АннулированиеПодарочныхСертификатов.ПодарочныеСертификаты КАК ДанныеДокумента
	|	ПО
	|		АннулированиеПодарочныхСертификатов.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	ПО
	|		РеализацияСертификата.ПодарочныйСертификат = ДанныеДокумента.ПодарочныйСертификат
	|		И РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|	ПО
	|		РеализацияСертификата.Регистратор = СчетФактура.ДокументОснование
	|		И НЕ СчетФактура.ПометкаУдаления
	|
	|ГДЕ
	|	АннулированиеПодарочныхСертификатов.Ссылка В (&МассивРегистраторов)
	|	И СчетФактура.Проведен
	|	И СчетФактура.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка                 КАК Ссылка,
	|	СчетФактура.Организация            КАК Организация,
	|	ВозвратПодарочныхСертификатов.Дата КАК ДатаОтражения
	|ИЗ
	|	Документ.ВозвратПодарочныхСертификатов КАК ВозвратПодарочныхСертификатов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратПодарочныхСертификатов.ПодарочныеСертификаты КАК ДанныеДокумента
	|	ПО
	|		ВозвратПодарочныхСертификатов.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	ПО
	|		РеализацияСертификата.ПодарочныйСертификат = ДанныеДокумента.ПодарочныйСертификат
	|		И РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|	ПО
	|		РеализацияСертификата.Регистратор = СчетФактура.ДокументОснование
	|		И НЕ СчетФактура.Исправление
	|		И НЕ СчетФактура.ПометкаУдаления
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивРегистраторов)
	|	И СчетФактура.Проведен
	|	И СчетФактура.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка            КАК Ссылка,
	|	СчетФактура.Организация       КАК Организация,
	|	ОтчетОРозничныхПродажах.Дата  КАК ДатаОтражения
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетОРозничныхПродажах.ПодарочныеСертификаты КАК ДанныеДокумента
	|	ПО
	|		ОтчетОРозничныхПродажах.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	ПО
	|		РеализацияСертификата.ПодарочныйСертификат = ДанныеДокумента.ПодарочныйСертификат
	|		И РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|	ПО
	|		РеализацияСертификата.Регистратор = СчетФактура.ДокументОснование
	|		И НЕ СчетФактура.Исправление
	|		И НЕ СчетФактура.ПометкаУдаления
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивРегистраторов)
	|	И СчетФактура.Проведен
	|	И СчетФактура.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|
	|ИТОГИ ПО
	|	Ссылка
	|");
	Запрос.УстановитьПараметр("МассивРегистраторов", МассивРегистраторов);
	
	МассивСчетовФактур = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.НДСЗаписиКнигиПродаж.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.НДСЗаписиКнигиПокупок.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
			
			Блокировка.Заблокировать();
			
			ДополнительныеСвойства = Новый Структура;
			ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
			
			Движения = Новый Структура;
			
			НДСЗаписиКнигиПродаж = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей();
			НДСЗаписиКнигиПродаж.Отбор.Регистратор.Установить(Выборка.Ссылка);
			Движения.Вставить("НДСЗаписиКнигиПродаж", НДСЗаписиКнигиПродаж);
			
			НДСЗаписиКнигиПокупок = РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей();
			НДСЗаписиКнигиПокупок.Отбор.Регистратор.Установить(Выборка.Ссылка);
			Движения.Вставить("НДСЗаписиКнигиПокупок", НДСЗаписиКнигиПокупок);
			
			
			Регистры = Новый Структура;
			Регистры.Вставить("НДСЗаписиКнигиПродаж");
			Регистры.Вставить("НДСЗаписиКнигиПокупок");
			
			ИнициализироватьДанныеДокумента(Выборка.Ссылка, ДополнительныеСвойства, Регистры); 
			
			ДоходыИРасходыСервер.ОтразитьНДСЗаписиКнигиПродаж(ДополнительныеСвойства, Движения, Ложь);
			ДоходыИРасходыСервер.ОтразитьНДСЗаписиКнигиПокупок(ДополнительныеСвойства, Движения, Ложь);
			
			
			Для каждого Движение Из Движения Цикл
				Движение.Значение.Записать();
			КонецЦикла;
			
			МассивСчетовФактур.Добавить(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Не удалось выполнить отражение в учете НДС документа ""%1"" по причине: %2'"),
					Выборка.Ссылка,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ВызватьИсключение ТекстСообщения;
		КонецПопытки
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает структуру параметров для отбора данных по полученным авансам
// 
// Возвращаемое значение:
//	Структура - параметры отбора.
//
Функция ОтборПолученныхАвансов() Экспорт
	
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("НачалоПериода");
	СтруктураОтбора.Вставить("КонецПериода");
	СтруктураОтбора.Вставить("ПравилоОтбораАванса");
	СтруктураОтбора.Вставить("СтавкаНДСПоУмолчанию");
	СтруктураОтбора.Вставить("Организация");
	СтруктураОтбора.Вставить("РасчетныйДокумент");
	
	Возврат СтруктураОтбора;
	
КонецФункции

// Заполняет таблицу ПолученныеАвансы данными для формирования счетов-фактур на аванс
//
// Параметры:
//	ОтборАвансов - Структура - Параметры отбора полученных авансов
//	ПолученныеАвансы - Таблица для заполнения данными о полученных авансах
//	РасчетныеДокументыБезСчетаФактуры - Массив - Заполняется списком документов, по которым не сформировались счета-фактуры
//
Процедура ЗаполнитьПолученныеАвансыДляСФ(ОтборАвансов, ПолученныеАвансы, РасчетныеДокументыБезСчетаФактуры = Неопределено) Экспорт
	
	НачалоПериода		= НачалоДня(ОтборАвансов.НачалоПериода);
	КонецПериода		= КонецДня(ОтборАвансов.КонецПериода);
	РасчетныйДокумент	= ОтборАвансов.РасчетныйДокумент;
	Организация			= ОтборАвансов.Организация;
	
	СтавкаНДСПоУмолчанию			= ?(
		ЗначениеЗаполнено(ОтборАвансов.СтавкаНДСПоУмолчанию),
		ОтборАвансов.СтавкаНДСПоУмолчанию,
		Перечисления.СтавкиНДС.НДС18_118);
		
	Если НЕ ЗначениеЗаполнено(ОтборАвансов.ПравилоОтбораАванса) Тогда
		ОтборАвансов.Вставить("ПравилоОтбораАванса", ПравилоОтбораАвансаОрганизации(Организация));
	КонецЕсли;
	
	ПравилоОтбораАванса = ОтборАвансов.ПравилоОтбораАванса;
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ИсключаемыеСчетаФактуры = Новый ТаблицаЗначений;
	ИсключаемыеСчетаФактуры.Колонки.Добавить("ДокументОснование");
	ИсключаемыеСчетаФактуры.Колонки.Добавить("Контрагент");
	ИсключаемыеСчетаФактуры.Колонки.Добавить("Организация");
	ИсключаемыеСчетаФактуры.Индексы.Добавить("ДокументОснование, Контрагент");
	
	Если РасчетныеДокументыБезСчетаФактуры = Неопределено Тогда
		РасчетныеДокументыБезСчетаФактуры = Новый Массив
	КонецЕсли;
	
	ВозможныйТипДокументаОснования = Метаданные.Документы.СчетФактураВыданныйАванс.Реквизиты.ДокументОснование.Тип;
	
	// Подготовим таблицу аваносов по документу с учетом правила отбора авансов.
	Авансы = Новый ТаблицаЗначений;
	Авансы.Колонки.Добавить("Организация");
	Авансы.Колонки.Добавить("Контрагент");
	Авансы.Колонки.Добавить("ДокументОснование");
	Авансы.Колонки.Добавить("ВалютаДокумента");
	Авансы.Колонки.Добавить("СтавкаНДС");
	ПоляГруппировки = "Контрагент, ДокументОснование, Организация, ВалютаДокумента, СтавкаНДС";
	Авансы.Колонки.Добавить("Сумма");
	Авансы.Колонки.Добавить("СуммаНДС");
	Авансы.Колонки.Добавить("ВалютнаяСумма");
	ПоляСуммирования = "Сумма, СуммаНДС, ВалютнаяСумма";
				
	Результат = РезультатЗапросаПоАвансам(НачалоПериода, КонецПериода, Организация, РасчетныйДокумент, ПравилоОтбораАванса);
	
	//Выборка по дням
	ВыборкаАванс        = Результат[5].Выбрать();
	ТаблицаСчетовФактур = Результат[6].Выгрузить();
	ТаблицаСчетовФактур.Индексы.Добавить("СчетФактура, Контрагент");
	
	Пока ВыборкаАванс.Следующий() Цикл
		
		Если ВыборкаАванс.ДокументОснование = NULL Тогда
			Продолжить;
		КонецЕсли;
		
		Авансы.Очистить();
		
		ДатаЗачетаАванса = ВыборкаАванс.ДатаФормированияСФ;
		
		МассивКоэффициентов = Новый Массив; 
		Если ВыборкаАванс.Сумма18 = 0 
			И ВыборкаАванс.Сумма10 = 0 
			И ВыборкаАванс.СуммаБезНДС = 0
			И СтавкаНДСПоУмолчанию = Перечисления.СтавкиНДС.НДС18_118 Тогда
			// Всю сумму отнесем к ставке 18%
			МассивКоэффициентов.Добавить(1);
		Иначе
			МассивКоэффициентов.Добавить(ВыборкаАванс.Сумма18);
		КонецЕсли;
		
		Если ВыборкаАванс.Сумма18 = 0 
			И ВыборкаАванс.Сумма10 = 0 
			И ВыборкаАванс.СуммаБезНДС = 0
			И СтавкаНДСПоУмолчанию = Перечисления.СтавкиНДС.НДС10_110 Тогда
			// Всю сумму отнесем к ставке 10%
			МассивКоэффициентов.Добавить(1);
		Иначе
			МассивКоэффициентов.Добавить(ВыборкаАванс.Сумма10);
		КонецЕсли;
		МассивКоэффициентов.Добавить(ВыборкаАванс.СуммаБезНДС);
		
		ВалютнаяСуммаПоСтавкам = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
		ВыборкаАванс.ВалютнаяСумма,
		МассивКоэффициентов);
		
		СуммаПоСтавкам = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
		ВыборкаАванс.Сумма,
		МассивКоэффициентов);
		
		МассивСтавок = Новый Массив;
		МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС18_118);
		МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС10_110);
		
		Индекс = 0;
		Для каждого Ставка Из МассивСтавок Цикл
			
			Сумма = СуммаПоСтавкам[Индекс];
			ВалютнаяСумма = ВалютнаяСуммаПоСтавкам[Индекс];
			Индекс = Индекс + 1;
			Если Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Авансы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаАванс);
			
			НоваяСтрока.СтавкаНДС = Ставка;
			НоваяСтрока.Сумма = Сумма;
			НоваяСтрока.ВалютнаяСумма = ВалютнаяСумма;
			НоваяСтрока.СуммаНДС  = Окр(Ценообразование.РассчитатьСуммуНДС(НоваяСтрока.Сумма, НоваяСтрока.СтавкаНДС), 2);
			
		КонецЦикла;
		
		Если Авансы.Количество() > 0 Тогда
			Авансы.Свернуть(ПоляГруппировки, ПоляСуммирования);
		КонецЕсли;
		
		Для каждого СтрокаАвансы Из Авансы Цикл
			
			Если ВозможныйТипДокументаОснования.СодержитТип(ТипЗнч(СтрокаАвансы.ДокументОснование)) Тогда
				
				НоваяСтрока = ПолученныеАвансы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаАвансы);
				
				ОтборСчетовФактур = Новый Структура();
				ОтборСчетовФактур.Вставить("ДокументОснование", СтрокаАвансы.ДокументОснование);
				ОтборСчетовФактур.Вставить("Контрагент",        СтрокаАвансы.Контрагент);
				
				РезультатПоиска = ТаблицаСчетовФактур.НайтиСтроки(ОтборСчетовФактур);
				Если РезультатПоиска.Количество() = 0  Тогда
					// Поиск по пустому контрагенту
					ОтборСчетовФактур.Контрагент = Неопределено;
					РезультатПоиска = ТаблицаСчетовФактур.НайтиСтроки(ОтборСчетовФактур);
				КонецЕсли;
				
				Если РезультатПоиска.Количество() = 0 Тогда
					НоваяСтрока.СФсформирован = Ложь;
				Иначе
					РеквизитыСчетаФактуры = РезультатПоиска[0];
					НоваяСтрока.СФсформирован = Истина;
					ЗаполнитьЗначенияСвойств(НоваяСтрока, РеквизитыСчетаФактуры);
					Если НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Тогда
						НоваяСтрока.СуммаСчетаФактуры = РеквизитыСчетаФактуры.СуммаАванса18;
					Иначе
						НоваяСтрока.СуммаСчетаФактуры = РеквизитыСчетаФактуры.СуммаАванса10;
					КонецЕсли;
				КонецЕсли;
				
				Если НоваяСтрока.ДатаВыписки = '00010101' Тогда
					НоваяСтрока.ДатаВыписки = ДатаЗачетаАванса;
				КонецЕсли;
				
			ИначеЕсли РасчетныеДокументыБезСчетаФактуры.Найти(ВыборкаАванс.ДокументОснование) = Неопределено Тогда
				РасчетныеДокументыБезСчетаФактуры.Добавить(ВыборкаАванс.ДокументОснование);
			КонецЕсли;
			
			НоваяСтрока = ИсключаемыеСчетаФактуры.Добавить();
			НоваяСтрока.Документоснование = СтрокаАвансы.ДокументОснование;
			НоваяСтрока.Контрагент = СтрокаАвансы.Контрагент;
			
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

// Возвращает номенклатуру заказов клиентов, оплаченных основанием счета-фактуры
//
// Параметры:
// 	 ПлатежныйДокумент - ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств, ДокументСсылка.ПриходныйКассовыйОрдер - Документ получения аванса
//
// ВозвращаемоеЗначение:
// 	 Товары - ТаблицаЗначений - Номенклатура заказов
//
Функция ТоварыЗаказовКлиентов(ПлатежныйДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказКлиента.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ЗаказыКлиентов
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеДС
	|		ПО ЗаказКлиента.Ссылка = ПоступлениеДС.ОснованиеПлатежа
	|			И (ПоступлениеДС.Ссылка = &ПлатежныйДокумент)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеДС
	|		ПО ЗаказКлиента.Ссылка = ПоступлениеДС.Заказ
	|			И (ПоступлениеДС.Ссылка = &ПлатежныйДокумент)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК ПоступлениеДС
	|		ПО ЗаказКлиента.Ссылка = ПоступлениеДС.ОснованиеПлатежа
	|			И (ПоступлениеДС.Ссылка = &ПлатежныйДокумент)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК ПоступлениеДС
	|		ПО ЗаказКлиента.Ссылка = ПоступлениеДС.Заказ
	|			И (ПоступлениеДС.Ссылка = &ПлатежныйДокумент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК ЗаказКлиента,
	|	Товары.Ссылка.Валюта КАК Валюта,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.НоменклатураНабора КАК НоменклатураНабора,
	|	Товары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	Товары.Содержание КАК Содержание,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(Товары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Товары.СуммаСНДС) КАК СуммаСНДС
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаказыКлиентов КАК ЗаказыКлиентов
	|		ПО Товары.Ссылка = ЗаказыКлиентов.Ссылка
	|ГДЕ
	|	Товары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110))
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Содержание,
	|	Товары.СтавкаНДС,
	|	Товары.Ссылка.Валюта
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураНабора,
	|	ХарактеристикаНабора,
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("ПлатежныйДокумент", ПлатежныйДокумент);
	
	Товары = Запрос.Выполнить().Выгрузить();
	
	Возврат Товары;
	
КонецФункции

// Выполняет распределения авансов по номенклатуре пропорционально сумме, с учетом ставки НДС
//
// Параметры:
// 	Авансы - ТаблицаЗначений - Авансы для распределения
// 	Товары - ТаблицаЗначений - Номенклатура, на которую необходимо выполнить распределение
// 	ПлатежныйДокумент - ДокументСсылка - Документ оплаты
//
Процедура РаспределитьАвансыПоТоварам(Авансы, Товары, ПлатежныйДокумент) Экспорт
	
	АвансыКРаспределению = Авансы.Скопировать();
	АвансыКРаспределению.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Содержание,
	|	Товары.Валюта,
	|	Товары.СуммаСНДС,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|ВЫБРАТЬ
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Товары.Валюта
	|			ИЗ
	|				Товары)) КАК КурсыВалют
	|;
	|
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Содержание,
	|	ВЫБОР
	|		КОГДА РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) 
	|			   И РеквизитыНоменклатуры.ВидНоменклатуры.ВариантОказанияУслуг В 
	|					(ЗНАЧЕНИЕ(Перечисление.ВариантыОказанияУслуг.ОрганизациейПоАгентскойСхеме),
	|					 ЗНАЧЕНИЕ(Перечисление.ВариантыОказанияУслуг.Партнером))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга) 
	|		КОГДА РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			  ИЛИ РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Товары.Валюта,
	|	ВЫБОР
	|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		ИНАЧЕ Товары.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	СУММА(Товары.СуммаСНДС 
	|		* ЕСТЬNULL(КурсыВалют.Курс, 1) 
	|		/ ЕСТЬNULL(КурсыВалют.Кратность, 1)) КАК СуммаСНДС,
	|	СУММА(Товары.СуммаНДС 
	|		* ЕСТЬNULL(КурсыВалют.Курс, 1) 
	|		/ ЕСТЬNULL(КурсыВалют.Кратность, 1)) КАК СуммаНДС 
	|ИЗ
	|	Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		КурсыВалют КАК КурсыВалют
	|	ПО
	|		Товары.Валюта = КурсыВалют.Валюта
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК РеквизитыНоменклатуры 
	|	ПО
	|		Товары.Номенклатура = РеквизитыНоменклатуры.Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР
	|		КОГДА РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) 
	|			   И РеквизитыНоменклатуры.ВидНоменклатуры.ВариантОказанияУслуг В 
	|					(ЗНАЧЕНИЕ(Перечисление.ВариантыОказанияУслуг.ОрганизациейПоАгентскойСхеме),
	|					 ЗНАЧЕНИЕ(Перечисление.ВариантыОказанияУслуг.Партнером))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга) 
	|		КОГДА РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			  ИЛИ РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ,
	|	Товары.Содержание,
	|	Товары.Валюта,
	|	ВЫБОР
	|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		ИНАЧЕ Товары.СтавкаНДС
	|	КОНЕЦ
	|";
	Запрос.УстановитьПараметр("Товары", Товары);
	Запрос.УстановитьПараметр("Период", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПлатежныйДокумент, "Дата"));
	
	ТоварыБаза = Запрос.Выполнить().Выгрузить();
	
	Авансы.Очистить();
	Для каждого СтрокаАвансов Из АвансыКРаспределению Цикл
		
		Отбор = Новый Структура("СтавкаНДС");
		Отбор.Вставить("СтавкаНДС", СтрокаАвансов.СтавкаНДС);
		СтрокиТоваров = ТоварыБаза.НайтиСтроки(Отбор);
		
		МассивКоэффициентов = Новый Массив;
		Для каждого СтрокаТовар Из СтрокиТоваров Цикл
			МассивКоэффициентов.Добавить(СтрокаТовар.СуммаСНДС);
		КонецЦикла;
		
		Если МассивКоэффициентов.Количество() = 0 Тогда
			НоваяСтрока = Авансы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаАвансов);
			НоваяСтрока.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
		КонецЕсли;
		
		РаспределениеСуммы = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаАвансов.Сумма, МассивКоэффициентов);
		РаспределениеСуммыНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаАвансов.СуммаНДС, МассивКоэффициентов);
		
		Индекс = 0;
		Для каждого СтрокаТовар Из СтрокиТоваров Цикл
			
			Сумма    = ?(РаспределениеСуммы    = Неопределено, 0, РаспределениеСуммы[Индекс]);
			СуммаНДС = ?(РаспределениеСуммыНДС = Неопределено, 0, РаспределениеСуммыНДС[Индекс]);
			Если Сумма = 0 Тогда
				Индекс = Индекс + 1;
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Авансы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовар);
			НоваяСтрока.Сумма    = Сумма;
			НоваяСтрока.СуммаНДС = СуммаНДС;
			Индекс = Индекс + 1;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Получает реквизиты счета-фактуры.
//
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураВыданныйАванс - Счет-фактура, данные которого необходимо получить.
//
// Возвращаемое значение:
//	Результат - Структура - Реквизиты счета-фактуры
//
Функция ДанныеСчетаФактуры(СчетФактура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СчетФактураВыданныйАванс.ДокументОснование                КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданныйАванс.Исправление
	|			ТОГДА СчетФактураВыданныйАванс.СчетФактураОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                     КАК СчетФактураОснование,
	|	СчетФактураВыданныйАванс.Организация                      КАК Организация,
	|	СчетФактураВыданныйАванс.Подразделение                    КАК Подразделение,
	|	СчетФактураВыданныйАванс.Контрагент                       КАК Контрагент,
	|	СчетФактураВыданныйАванс.КодВидаОперации                  КАК КодВидаОперации,
	|	СчетФактураВыданныйАванс.ПравилоОтбораАванса              КАК ПравилоОтбораАванса,
	|	СчетФактураВыданныйАванс.ИдентификаторГосКонтракта        КАК ИдентификаторГосКонтракта,
	|	СчетФактураВыданныйАванс.НомерПлатежноРасчетногоДокумента КАК НомерПлатежноРасчетногоДокумента,
	|	СчетФактураВыданныйАванс.ДатаПлатежноРасчетногоДокумента  КАК ДатаПлатежноРасчетногоДокумента,
	|	СчетФактураВыданныйАванс.Авансы.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		ТипЗапасов,
	|		Содержание,
	|		Сумма,
	|		СтавкаНДС,
	|		СуммаНДС
	|	) КАК Авансы
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|ГДЕ
	|	СчетФактураВыданныйАванс.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		Результат.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		Результат.Вставить("Авансы", Выборка.Авансы.Выгрузить());
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
	
	ПолученныеАвансы = Новый ТаблицаЗначений;
	ПолученныеАвансы.Колонки.Добавить("СФСформирован");
	ПолученныеАвансы.Колонки.Добавить("Контрагент");
	ПолученныеАвансы.Колонки.Добавить("Сумма");
	ПолученныеАвансы.Колонки.Добавить("СтавкаНДС");
	ПолученныеАвансы.Колонки.Добавить("СуммаНДС");
	ПолученныеАвансы.Колонки.Добавить("ДокументОснование");
	ПолученныеАвансы.Колонки.Добавить("ДатаВыписки");
	ПолученныеАвансы.Колонки.Добавить("ВалютаДокумента");
	ПолученныеАвансы.Колонки.Добавить("ВалютнаяСумма");
	ПолученныеАвансы.Колонки.Добавить("СуммаСчетаФактуры");
	ПолученныеАвансы.Колонки.Добавить("СчетФактура");
	
	ОтборАвансов = Новый Структура;
	ОтборАвансов.Вставить("НачалоПериода", Параметры.НачалоПериода);
	ОтборАвансов.Вставить("КонецПериода", Параметры.КонецПериода);
	ОтборАвансов.Вставить("РасчетныйДокумент", Неопределено);
	ОтборАвансов.Вставить("Организация", Параметры.МассивОрганизаций);
	ОтборАвансов.Вставить("СтавкаНДСПоУмолчанию", Неопределено);
	ОтборАвансов.Вставить("ПравилоОтбораАванса", Неопределено);

	ЗаполнитьПолученныеАвансыДляСФ(ОтборАвансов, ПолученныеАвансы);
	
	Возврат ПолученныеАвансы.НайтиСтроки(Новый Структура("СФСформирован", Ложь)).Количество();
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                                            КАК Ссылка,
	|	ДанныеДокумента.Дата                                                              КАК Период,
	|	ДанныеДокумента.Организация                                                       КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ОбособленноеПодразделение, ЛОЖЬ)             КАК ОбособленноеПодразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ЦифровойИндексОбособленногоПодразделения, 0) КАК ЦифровойИндексОбособленногоПодразделения,
	|	ДанныеДокумента.Контрагент                                                        КАК Контрагент,
	|	ДанныеДокумента.ДокументОснование                                                 КАК ДокументОснование,
	|	ДанныеДокумента.ПравилоОтбораАванса                                               КАК ПравилоОтбораАванса,
	|	ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Дата, ДанныеДокумента.Дата)            КАК ДатаОснования,
	|	ДанныеДокумента.ДатаВыставления                                                   КАК ДатаВыставления,
	|	ДанныеДокумента.Номер                                                             КАК Номер,
	|	ДанныеДокумента.Дата                                                              КАК Дата,
	|	ДанныеДокумента.КодВидаОперации                                                   КАК КодВидаОперации,
	|	ДанныеДокумента.ВыставленВЭлектронномВиде                                         КАК ВыставленВЭлектронномВиде,
	|	ДанныеДокумента.Исправление                                                       КАК Исправление,
	|	ДанныеДокумента.НомерИсправления                                                  КАК НомерИсправления,
	|	ДанныеДокумента.СчетФактураОснование                                              КАК СчетФактураОснование,
	|	ДанныеДокумента.СчетФактураОснование.Дата                                         КАК ДатаСчетаФактурыОснования,
	|	ДанныеДокумента.СчетФактураОснование.Номер                                        КАК НомерСчетаФактурыОснования,
	|	ДанныеДокумента.Подразделение                                                     КАК Подразделение,
	|	ДанныеДокумента.Ответственный                                                     КАК Ответственный,
	|	ДанныеДокумента.Проведен                                                          КАК Проведен,
	|	ДанныеДокумента.Сумма                                                             КАК Сумма,
	|	ДанныеДокумента.Комментарий                                                       КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления                                                   КАК ПометкаУдаления,
	|	ДанныеДокумента.КППКонтрагента                                                    КАК КППКонтрагента,
	|	ДанныеДокумента.ИННКонтрагента                                                    КАК ИННКонтрагента
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
		
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	НомерНаПечать = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
				?(Реквизиты.Исправление, Реквизиты.НомерСчетаФактурыОснования, Реквизиты.Номер), 
				Ложь,
				Реквизиты.ОбособленноеПодразделение, 
				Реквизиты.ЦифровойИндексОбособленногоПодразделения);
	
	
	Запрос.УстановитьПараметр("Организация",                Реквизиты.Организация);
	Запрос.УстановитьПараметр("Покупатель",                 Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ДокументОплаты",             Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ПравилоОтбораАванса",        Реквизиты.ПравилоОтбораАванса);
	Запрос.УстановитьПараметр("ДатаОснования",              Реквизиты.ДатаОснования);
	Запрос.УстановитьПараметр("НомерНаПечать",              НомерНаПечать);
	Запрос.УстановитьПараметр("Номер",                      Реквизиты.Номер);
	Запрос.УстановитьПараметр("Период",                     Реквизиты.Период);
	Запрос.УстановитьПараметр("КодВидаОперации",            Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("ВыставленВЭлектронномВиде",  Реквизиты.ВыставленВЭлектронномВиде);
	Запрос.УстановитьПараметр("Валюта",                     Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("Исправление",				Реквизиты.Исправление);
	Запрос.УстановитьПараметр("НомерИсправления",			Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("СчетФактураОснование",		Реквизиты.СчетФактураОснование);
	Запрос.УстановитьПараметр("ДатаСчетаФактурыОснования",	Реквизиты.ДатаСчетаФактурыОснования);
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные",     ТипыЗапасовСобственные());
	Запрос.УстановитьПараметр("ИННКонтрагента",             Реквизиты.ИННКонтрагента);
	Запрос.УстановитьПараметр("КППКонтрагента",             Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("Проведен",                   Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",            Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",    ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ДокументСсылка)));
	Запрос.УстановитьПараметр("Комментарий",                Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Сумма",                      Реквизиты.Сумма);
	Запрос.УстановитьПараметр("Контрагент",                 Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Подразделение",              Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Ответственный",              Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",            Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУпрУчета",             Константы.ВалютаУправленческогоУчета.Получить());
	
	УчетНДСУТ.УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыВыставленного(Реквизиты, Запрос);
	
	ИнформацияПоИсправлению = "";
	Если Реквизиты.Исправление
		И ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления% от %ДатаИсправления%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%НомерИсправления%", Реквизиты.НомерИсправления);
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%ДатаИсправления%", Реквизиты.Период);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ИнициализироватьВтСуммыДляЖурналаУчетаСчетовФактур(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтСуммыДляЖурналаУчетаСчетовФактурИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур = Новый Запрос;
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.УстановитьПараметр("ТипыЗапасовСобственные", Запрос.Параметры.ТипыЗапасовСобственные);
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.УстановитьПараметр("КодВидаОперацииКомиссия", Запрос.Параметры.КодВидаОперацииКомиссия);
	
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАвансы.Ссылка КАК Ссылка,
	|	СУММА(ТаблицаАвансы.Сумма) КАК Сумма,
	|	СУММА(ТаблицаАвансы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВЫБОР КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА 0 
	|			ИНАЧЕ ТаблицаАвансы.Сумма
	|		КОНЕЦ)  КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ВЫБОР КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА 0 
	|			ИНАЧЕ ТаблицаАвансы.СуммаНДС
	|		КОНЕЦ) КАК СуммаНДСКомиссия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА """"
	|		ИНАЧЕ &КодВидаОперацииКомиссия
	|	КОНЕЦ)  КАК КодВидаОперацииКомиссия
	|ПОМЕСТИТЬ ВтСуммыДляЖурналаУчетаСчетовФактур
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаАвансы
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(ТаблицаАвансы.Ссылка.ДокументОснование) <> ТИП(Документ.ПервичныйДокумент)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАвансы.Ссылка
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	СчетФактураВыданныйАванс.Ссылка КАК Ссылка,
	|	ПервичныйДокумент.СуммаРегл КАК Сумма,
	|	0                           КАК СуммаНДС,
	|	0                           КАК СуммаПоСчетуФактуреКомиссия,
	|	0                           КАК СуммаНДСКомиссия,
	|	""""                        КАК КодВидаОперацииКомиссия
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПервичныйДокумент КАК ПервичныйДокумент
	|	ПО
	|		СчетФактураВыданныйАванс.ДокументОснование = ПервичныйДокумент.Ссылка 
	|ГДЕ
	|	СчетФактураВыданныйАванс.Ссылка = &Ссылка
	|";
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.Выполнить();
	
	Запрос.УстановитьПараметр("ВтСуммыДляЖурналаУчетаСчетовФактурИнициализирована", Истина);

КонецПроцедуры

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтСуммыДляЖурналаУчетаСчетовФактур(Запрос);
	УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос);
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	-ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ИСТИНА КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|		&Период,
	|		НЕ Сторно
	|		И Регистратор <> &Ссылка
	|		И СчетФактура = &СчетФактураПредыдущееИсправление) КАК ЖурналУчетаСчетовФактур
	|
	|ГДЕ
	|	&Исправление
	|	И (ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0)
	|";
#КонецОбласти
	
#Область ТекстВыставленныйСчетФактураНаАванс
	ТекстВыставленныйСчетФактураНаАванс =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&Организация                               КАК Организация,
	|	&Покупатель                                КАК Контрагент,
	|	СчетФактураВыданныйАванс.Ссылка            КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаВыставления                           КАК ДатаВыставленияПолучения,
	|	ВЫБОР
	|		КОГДА &ВыставленВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ                                      КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                           КАК КодВидаОперации,
	|	&НомерНаПечать                             КАК НомерСчетаФактуры,
	|	ВЫБОР КОГДА &Исправление ТОГДА
	|			&ДатаСчетаФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                      КАК ДатаСчетаФактуры,
	|	NULL КАК НомерКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаКорректировочногоСчетаФактуры,
	|	ВЫБОР 
	|		КОГДА &Исправление ТОГДА
	|			&НомерИсправления
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ                                      КАК НомерИсправления,
	|	ВЫБОР 
	|		КОГДА &Исправление ТОГДА
	|			&Период
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ                                      КАК ДатаИсправления,
	|	NULL КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ИндексСтроки,
	|	&Валюта                                    КАК Валюта,
	|	СуммыДляЖурналаУчетаСчетовФактур.Сумма     КАК СуммаПоСчетуФактуре,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДС  КАК СуммаНДС,
	|	0                                          КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                          КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                          КАК СуммаНДСРазницаУменьшение,
	|	0                                          КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                       КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                       КАК СчетФактураНеВыставляется,
	|
	|	&КППКонтрагента                            КАК КППКонтрагента,
	|	&ИННКонтрагента                            КАК ИННКонтрагента,
	|	
	|	NULL КАК Посредник,
	|	NULL КАК СчетФактураВыданныйПокупателю,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДСКомиссия  КАК СуммаНДСКомиссия,
	|	0                                          КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                          КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                          КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                          КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	СуммыДляЖурналаУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСуммыДляЖурналаУчетаСчетовФактур КАК СуммыДляЖурналаУчетаСчетовФактур
	|	ПО
	|		СчетФактураВыданныйАванс.Ссылка = СуммыДляЖурналаУчетаСчетовФактур.Ссылка
	|ГДЕ
	|	СчетФактураВыданныйАванс.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|";
#КонецОбласти
	
	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(ТекстЗапросаСторноИсправление);
	МассивТекстов.Добавить(ТекстВыставленныйСчетФактураНаАванс);
	ТекстЗапроса = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьВтТаблицаАвансы(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтТаблицаАвансыИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросВтТаблицаАвансы = Новый Запрос;
	ЗапросВтТаблицаАвансы.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросВтТаблицаАвансы.УстановитьПараметр("Ссылка",                 Запрос.Параметры.Ссылка);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("Организация",            Запрос.Параметры.Организация);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("КодВидаОперации",        Запрос.Параметры.КодВидаОперации);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("Покупатель",             Запрос.Параметры.Покупатель);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("ДокументОплаты",         Запрос.Параметры.ДокументОплаты);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("ДатаОснования",          Запрос.Параметры.ДатаОснования);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("ТипыЗапасовСобственные", Запрос.Параметры.ТипыЗапасовСобственные);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("ВалютаРеглУчета",        Запрос.Параметры.ВалютаРеглУчета);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("ВалютаУпрУчета",         Запрос.Параметры.ВалютаУпрУчета);
	
	ЗапросВтТаблицаАвансы.Текст =
	"ВЫБРАТЬ
	|	&ДатаОснования                                        КАК Период,
	|	&Организация                                          КАК Организация,
	|	&ДокументОплаты                                       КАК СчетФактура,
	|	&Покупатель                                           КАК Покупатель,
	|	&ДокументОплаты                                       КАК ДокументОплаты,
	|	&ДатаОснования                                        КАК ДатаОплаты,
	|	&ДатаОснования                                        КАК ДатаСобытия,
	|	ТаблицаАвансы.СтавкаНДС                               КАК СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные) 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                 КАК ВключатьВКнигуПродаж,
	|	
	|	СУММА(ТаблицаАвансы.СуммаНДС)                         КАК НДС,
	|	СУММА(ВЫБОР КОГДА ТаблицаАвансы.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|	КОНЕЦ)                                                КАК СуммаБезНДС,
	|	СУММА(ВЫБОР КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0
	|		ТОГДА ТаблицаАвансы.СуммаНДС
	|		ИНАЧЕ ТаблицаАвансы.СуммаНДС * КурсВалютыУпрУчета.Кратность / КурсВалютыУпрУчета.Курс
	|	КОНЕЦ) КАК НДСУпр,
	|	СУММА(ВЫБОР КОГДА ТаблицаАвансы.Сумма = 0 ТОГДА 0
	|		КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0 ТОГДА ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|		ИНАЧЕ (ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС) * КурсВалютыУпрУчета.Кратность / КурсВалютыУпрУчета.Курс
	|	КОНЕЦ)                                                КАК СуммаБезНДСУпр,
	|	
	|	ТаблицаАвансы.Ссылка.НомерПлатежноРасчетногоДокумента КАК НомерДокументаОплаты,
	|	ТаблицаАвансы.Ссылка.ДатаПлатежноРасчетногоДокумента  КАК ДатаДокументаОплаты,
	|	ТаблицаАвансы.Ссылка.НалогообложениеНДС               КАК НалогообложениеНДС,
	|	&КодВидаОперации                                      КАК КодВидаОперации
	|ПОМЕСТИТЬ ВтТаблицаАвансы
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаАвансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОснования, Валюта = &ВалютаУпрУчета) КАК КурсВалютыУпрУчета
	|			ПО &ВалютаРеглУчета <> &ВалютаУпрУчета
	|	
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР 
	|		КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные) 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ТаблицаАвансы.СтавкаНДС,
	|	ТаблицаАвансы.Ссылка";
	
	Результат = ЗапросВтТаблицаАвансы.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("ВтТаблицаАвансыИнициализирована", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьВтТаблицаНДСЗаписиКнигиПокупок(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтТаблицаНДСЗаписиКнигиПокупокИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьВтТаблицаАвансы(Запрос);
	
	ЗапросАвансов = Новый Запрос;
	ЗапросАвансов.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросАвансов.УстановитьПараметр("Ссылка",                     Запрос.Параметры.Ссылка);
	ЗапросАвансов.УстановитьПараметр("Организация",                Запрос.Параметры.Организация);
	ЗапросАвансов.УстановитьПараметр("Покупатель",                 Запрос.Параметры.Покупатель);
	ЗапросАвансов.УстановитьПараметр("ДокументОплаты",             Запрос.Параметры.ДокументОплаты);
	ЗапросАвансов.УстановитьПараметр("ПравилоОтбораАванса",        Запрос.Параметры.ПравилоОтбораАванса);
	ЗапросАвансов.УстановитьПараметр("ДатаОснования",              Запрос.Параметры.ДатаОснования);
	ЗапросАвансов.УстановитьПараметр("Период",                     Запрос.Параметры.Период);
	ЗапросАвансов.УстановитьПараметр("ТипыЗапасовСобственные",     Запрос.Параметры.ТипыЗапасовСобственные);
	ЗапросАвансов.УстановитьПараметр("Исправление",                Запрос.Параметры.Исправление);
	ЗапросАвансов.УстановитьПараметр("ВалютаРеглУчета",            Запрос.Параметры.ВалютаРеглУчета);
	ЗапросАвансов.УстановитьПараметр("ВалютаУпрУчета",             Запрос.Параметры.ВалютаУпрУчета);
	
	ЗапросАвансов.Текст =
	"ВЫБРАТЬ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВтАналитикаУчетаПоПартнерам
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ГДЕ
	|	АналитикаУчетаПоПартнерам.Организация = &Организация
	|	И АналитикаУчетаПоПартнерам.Контрагент = &Покупатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.Регистратор                                  КАК Регистратор,
	|	РасчетыСКлиентами.Период                                       КАК Период,
	|	&Организация                                                   КАК Организация,
	|	&Покупатель                                                    КАК Поставщик,
	|	&ДокументОплаты                                                КАК СчетФактура,
	|	ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСКлиентами.ПредоплатаРегл > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные) 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных) 
	|	КОНЕЦ КАК ВидЦенности,
	|	РасчетыСКлиентами.Период                                        КАК ДатаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	РасчетыСКлиентами.Период                                        КАК ДатаСобытия,
	|	СУММА(ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСКлиентами.ПредоплатаРегл >= 0
	|			ТОГДА РасчетыСКлиентами.ПредоплатаРегл
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл <= 0
	|			ТОГДА -РасчетыСКлиентами.ПредоплатаРегл
	|	КОНЕЦ) КАК СуммаЗачета,
	|	СУММА(ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСКлиентами.ПредоплатаУпр >= 0
	|			ТОГДА РасчетыСКлиентами.ПредоплатаУпр
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаУпр <= 0
	|			ТОГДА -РасчетыСКлиентами.ПредоплатаУпр
	|	КОНЕЦ) КАК СуммаЗачетаУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВычетНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ДанныеПервичныхДокументов.Номер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НомерДокументаОплаты,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ДанныеПервичныхДокументов.Дата
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДатаДокументаОплаты
	|
	|ПОМЕСТИТЬ ВтЗачетАвансов
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентами
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтАналитикаУчетаПоПартнерам КАК КлючиАналитикаУчетаПоПартнерам
	|	ПО
	|		РасчетыСКлиентами.АналитикаУчетаПоПартнерам = КлючиАналитикаУчетаПоПартнерам.КлючАналитики
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = &Организация
	|		И РасчетыСКлиентами.Регистратор = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	НЕ &Исправление
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И РасчетыСКлиентами.РасчетныйДокумент = &ДокументОплаты
	|	И РасчетыСКлиентами.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|	И ((РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И РасчетыСКлиентами.ПредоплатаРегл > 0)
	|		ИЛИ (РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И РасчетыСКлиентами.ПредоплатаРегл < 0))
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентами.Регистратор,
	|	РасчетыСКлиентами.Период,
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам.Контрагент,
	|	ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСКлиентами.ПредоплатаРегл > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные) 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных) 
	|	КОНЕЦ,
	|	РасчетыСКлиентами.Период,
	|	ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ДанныеПервичныхДокументов.Номер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ДанныеПервичныхДокументов.Дата
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Регистратор                                                КАК Регистратор,
	|	ДанныеРегистра.Период                                                     КАК Период,
	|	&Организация                                                              КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)                      КАК Поставщик,
	|	&ДокументОплаты                                                           КАК СчетФактура,
	|	
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|	КОНЕЦ                                                                     КАК ВидЦенности,
	|	
	|	ДанныеРегистра.Период                                                     КАК ДатаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)           КАК Событие,
	|	ДанныеРегистра.Период                                                     КАК ДатаСобытия,
	|	
	|	ВЫРАЗИТЬ(СУММА(ДанныеРегистра.Сумма
	|		* (РеализацияСертификата.СуммаРегл / РеализацияСертификата.Сумма))
	|		КАК ЧИСЛО(15,2))                                                      КАК СуммаЗачета,
	|	СУММА(ВЫБОР КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0 ИЛИ ЕСТЬNULL(КурсВалютыСертификата.Кратность, 0) = 0
	|		ТОГДА ДанныеРегистра.Сумма
	|		ИНАЧЕ ДанныеРегистра.Сумма * КурсВалютыУпрУчета.Кратность * КурсВалютыСертификата.Курс / (КурсВалютыУпрУчета.Курс * КурсВалютыСертификата.Кратность)
	|	КОНЕЦ)                                                                    КАК СуммаЗачетаУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВычетНДССПолученногоАванса)   КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		ДанныеПервичныхДокументов.Номер
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                     КАК НомерДокументаОплаты,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		ДанныеПервичныхДокументов.Дата
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                     КАК ДатаДокументаОплаты
	|ИЗ
	|	РегистрНакопления.ПодарочныеСертификаты КАК ДанныеРегистра
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	ПО
	|		РеализацияСертификата.ПодарочныйСертификат = ДанныеРегистра.ПодарочныйСертификат
	|		И РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = &Организация
	|		И ДанныеРегистра.Регистратор = ДанныеПервичныхДокументов.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОснования, Валюта = &ВалютаУпрУчета) КАК КурсВалютыУпрУчета
	|		ПО &ВалютаРеглУчета <> &ВалютаУпрУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОснования) КАК КурсВалютыСертификата
	|		ПО КурсВалютыСертификата.Валюта = ДанныеРегистра.ПодарочныйСертификат.Владелец.Валюта
	|	
	|ГДЕ
	|	НЕ &Исправление
	|	И РеализацияСертификата.Регистратор = &ДокументОплаты
	|	И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеРегистра.Сумма > 0
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И КОНЕЦПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> КОНЕЦПЕРИОДА(РеализацияСертификата.Период, ДЕНЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Регистратор,
	|	ДанныеРегистра.Период,
	|	ДанныеРегистра.Регистратор,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		ДанныеПервичныхДокументов.Номер
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		ДанныеПервичныхДокументов.Дата
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА РасчетыСКлиентами.ПредоплатаРегл
	|			КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -РасчетыСКлиентами.ПредоплатаРегл
	|		КОНЕЦ) КАК Аванс,
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА РасчетыСКлиентами.ПредоплатаУпр
	|			КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -РасчетыСКлиентами.ПредоплатаУпр
	|		КОНЕЦ) КАК АвансУпр
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентами
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтАналитикаУчетаПоПартнерам КАК КлючиАналитикаУчетаПоПартнерам
	|	ПО
	|		РасчетыСКлиентами.АналитикаУчетаПоПартнерам = КлючиАналитикаУчетаПоПартнерам.КлючАналитики
	|
	|ГДЕ
	|	НЕ &Исправление
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И РасчетыСКлиентами.РасчетныйДокумент = &ДокументОплаты
	|	И ((РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И РасчетыСКлиентами.ПредоплатаРегл > 0)
	|		ИЛИ (РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И РасчетыСКлиентами.ПредоплатаРегл < 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияСертификата.СуммаРегл КАК Аванс,
	|	ВЫБОР КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0 ИЛИ ЕСТЬNULL(КурсВалютыСертификата.Кратность, 0) = 0
	|		ТОГДА РеализацияСертификата.Сумма
	|		ИНАЧЕ РеализацияСертификата.Сумма * КурсВалютыУпрУчета.Кратность * КурсВалютыСертификата.Курс / (КурсВалютыУпрУчета.Курс * КурсВалютыСертификата.Кратность)
	|	КОНЕЦ КАК АвансУпр
	|ИЗ
	|	РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОснования, Валюта = &ВалютаУпрУчета) КАК КурсВалютыУпрУчета
	|		ПО &ВалютаРеглУчета <> &ВалютаУпрУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОснования) КАК КурсВалютыСертификата
	|		ПО КурсВалютыСертификата.Валюта = РеализацияСертификата.ПодарочныйСертификат.Владелец.Валюта
	|ГДЕ
	|	&Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РеализацияСертификата.Регистратор =  &ДокументОплаты
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАвансы.Период               КАК Период,
	|	ТаблицаАвансы.СчетФактура          КАК СчетФактура,
	|	ТаблицаАвансы.Покупатель           КАК Покупатель,
	|	ТаблицаАвансы.СтавкаНДС            КАК СтавкаНДС,
	|	ТаблицаАвансы.НДС                  КАК НДС,
	|	ТаблицаАвансы.СуммаБезНДС          КАК СуммаБезНДС,
	|	ТаблицаАвансы.НДСУпр               КАК НДСУпр,
	|	ТаблицаАвансы.СуммаБезНДСУпр       КАК СуммаБезНДСУпр,
	|	ТаблицаАвансы.КодВидаОперации      КАК КодВидаОперации,
	|	ТаблицаАвансы.ВключатьВКнигуПродаж КАК ВключатьВКнигуПродаж
	|ИЗ
	|	ВтТаблицаАвансы КАК ТаблицаАвансы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗачетАвансов.Период КАК Период,
	|	ЗачетАвансов.Регистратор КАК Регистратор,
	|	ЗачетАвансов.Организация КАК Организация,
	|	ЗачетАвансов.Поставщик КАК Поставщик,
	|	ЗачетАвансов.СчетФактура КАК СчетФактура,
	|	ЗачетАвансов.ВидЦенности КАК ВидЦенности,
	|	ЗачетАвансов.ДатаОплаты КАК ДатаОплаты,
	|	ЗачетАвансов.Событие  КАК Событие,
	|	ЗачетАвансов.ДатаСобытия КАК ДатаСобытия,
	|	ЗачетАвансов.СуммаЗачета КАК СуммаЗачета,
	|	ЗачетАвансов.СуммаЗачетаУпр КАК СуммаЗачетаУпр,
	|	ЗачетАвансов.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗачетАвансов.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ЗачетАвансов.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	МАКСИМУМ(ВЫБОР 
	|		КОГДА НДСЗаписиКнигиПродаж.Регистратор ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ) КАК ЕстьНДСПродажи,
	|	СУММА(ВЫБОР 
	|		КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСПродажиБезНДС,
	|	СУММА(ВЫБОР 
	|		КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСПродажиСНДС
	|ИЗ
	|	ВтЗачетАвансов КАК ЗачетАвансов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|	ПО
	|		ЗачетАвансов.Регистратор = НДСЗаписиКнигиПродаж.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗачетАвансов.Период,
	|	ЗачетАвансов.Регистратор,
	|	ЗачетАвансов.Организация,
	|	ЗачетАвансов.Поставщик,
	|	ЗачетАвансов.СчетФактура,
	|	ЗачетАвансов.ВидЦенности,
	|	ЗачетАвансов.ДатаОплаты,
	|	ЗачетАвансов.Событие,
	|	ЗачетАвансов.ДатаСобытия,
	|	ЗачетАвансов.СуммаЗачета,
	|	ЗачетАвансов.СуммаЗачетаУпр,
	|	ЗачетАвансов.ХозяйственнаяОперация,
	|	ЗачетАвансов.НомерДокументаОплаты,
	|	ЗачетАвансов.ДатаДокументаОплаты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор
	|";
	
	Результат = ЗапросАвансов.ВыполнитьПакет();
	
	ТаблицаАванс = Результат[2].Выгрузить();
	ТаблицаАвансНачислениеНДС = Результат[3].Выгрузить();
	ТаблицаЗачетАванса = Результат[4].Выгрузить();
	ТаблицаНДСЗаписиКнигиПокупок = ВыполнитьЗачетАванса(ТаблицаАванс, ТаблицаАвансНачислениеНДС, ТаблицаЗачетАванса, Запрос.Параметры);
	
	ЗапросАвансов.Параметры.Вставить("ТаблицаНДСЗаписиКнигиПокупок", ТаблицаНДСЗаписиКнигиПокупок);
	ЗапросАвансов.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДСЗаписиКнигиПокупок.Период,
	|	ТаблицаНДСЗаписиКнигиПокупок.Регистратор,
	|	ТаблицаНДСЗаписиКнигиПокупок.НомерСтроки,
	|	ТаблицаНДСЗаписиКнигиПокупок.Организация,
	|	ТаблицаНДСЗаписиКнигиПокупок.Поставщик,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.ВидЦенности,
	|	ТаблицаНДСЗаписиКнигиПокупок.СтавкаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетУчетаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДокументОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.Событие,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаСобытия,
	|	ТаблицаНДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	ТаблицаНДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	ТаблицаНДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДСУпр,
	|	ТаблицаНДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	ТаблицаНДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.КодВидаОперации
	|ПОМЕСТИТЬ ВтТаблицаНДСЗаписиКнигиПокупок
	|ИЗ
	|	&ТаблицаНДСЗаписиКнигиПокупок КАК ТаблицаНДСЗаписиКнигиПокупок";
	
	ЗапросАвансов.Выполнить();
	
	Запрос.УстановитьПараметр("ВтТаблицаНДСЗаписиКнигиПокупокИнициализирована", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос)
	
	Если Запрос.Параметры.Свойство("СчетФактураПредыдущееИсправление") Тогда
		Возврат;
	КонецЕсли;

	Если Запрос.Параметры.Исправление Тогда
	
		СчетФактураПредыдущееИсправление = СчетФактураПредыдущееИсправление(
			Запрос.Параметры.СчетФактураОснование, 
			Запрос.Параметры.НомерИсправления)
	
	Иначе
		СчетФактураПредыдущееИсправление = Неопределено;
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("СчетФактураПредыдущееИсправление", СчетФактураПредыдущееИсправление);

КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтТаблицаАвансы(Запрос);
	
	УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос);
	
#Область СторноИсправление
	ТекстЗапросаСторноИсправление = "
	|
	|ВЫБРАТЬ
	|	&Период                                           КАК Период,
	|	&Организация                                      КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель                   КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура                  КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности                  КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС                    КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты                   КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты               КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                      КАК Событие,
	|	&Период                                           КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ                                             КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|	КОНЕЦ                                             КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ                                             КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	&Исправление                                      КАК Исправление,
	|	-НДСЗаписиКнигиПродаж.СуммаБезНДС                 КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПродаж.НДС                         КАК НДС,
	|	-НДСЗаписиКнигиПродаж.НДСУпр                      КАК НДСУпр,
	|	Значение(Перечисление.ХозяйственныеОперации.НачислениеНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	&Исправление
	|	И НДСЗаписиКнигиПродаж.Регистратор <> &Ссылка
	|	И Организация = &Организация
	|	И СчетФактура = &ДокументОплаты
	|	И ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление
	|	И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПолученАванс)
	|	И (НДСЗаписиКнигиПродаж.СуммаБезНДС > 0 ИЛИ НДСЗаписиКнигиПродаж.НДС > 0)
	|";
#КонецОбласти

#Область ТекстЗапросаАвансы
	ТекстЗапросаАвансы =
	"ВЫБРАТЬ
	|	ВЫБОР 
	|		КОГДА &Исправление 
	|			ТОГДА &Период
	|		ИНАЧЕ ТаблицаАвансы.Период
	|	КОНЕЦ                                                      КАК Период,
	|	ТаблицаАвансы.Организация                                  КАК Организация,
	|	ТаблицаАвансы.Покупатель                                   КАК Покупатель,
	|	ТаблицаАвансы.СчетФактура                                  КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)      КАК ВидЦенности,
	|	ТаблицаАвансы.СтавкаНДС                                    КАК СтавкаНДС,
	|	ТаблицаАвансы.ДатаОплаты                                   КАК ДатаОплаты,
	|	ТаблицаАвансы.ДокументОплаты                               КАК ДокументОплаты,
	|	ВЫБОР КОГДА ТаблицаАвансы.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПолученАванс)
	|	КОНЕЦ                                                      КАК Событие,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|		ИНАЧЕ ТаблицаАвансы.ДатаСобытия
	|	КОНЕЦ                                                      КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА &Исправление И НАЧАЛОПЕРИОДА(&ДатаСчетаФактурыОснования, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                      КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА &Исправление И НАЧАЛОПЕРИОДА(&ДатаСчетаФактурыОснования, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА &ДатаСчетаФактурыОснования
	|	КОНЕЦ                                                      КАК КорректируемыйПериод,
	|	ЛОЖЬ                                                       КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО                                               КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка 
	|	КОНЕЦ                                                      КАК ИсправленныйСчетФактура,
	|	&Исправление                                               КАК Исправление,
	|	ТаблицаАвансы.СуммаБезНДС                                  КАК СуммаБезНДС,
	|	ТаблицаАвансы.НДС                                          КАК НДС,
	|	ВЫБОР 
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаАвансы.НДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                      КАК НДСУпр,
	|	Значение(Перечисление.ХозяйственныеОперации.НачислениеНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	ТаблицаАвансы.НомерДокументаОплаты                         КАК НомерДокументаОплаты,
	|	ТаблицаАвансы.ДатаДокументаОплаты                          КАК ДатаДокументаОплаты
	|	
	|ИЗ
	|	ВтТаблицаАвансы КАК ТаблицаАвансы
	|	
	|ГДЕ
	|	ТаблицаАвансы.ВключатьВКнигуПродаж";
	
#КонецОбласти
	
	ТекстЗапроса = ТекстЗапросаСторноИсправление
		+ Символы.ПС + " ОБЪЕДИНИТЬ ВСЕ " + Символы.ПС + ТекстЗапросаАвансы;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПокупок";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтТаблицаНДСЗаписиКнигиПокупок(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаНДСЗаписиКнигиПокупок.Период,
	|	ТаблицаНДСЗаписиКнигиПокупок.Регистратор,
	|	ТаблицаНДСЗаписиКнигиПокупок.НомерСтроки,
	|	ТаблицаНДСЗаписиКнигиПокупок.Организация,
	|	ТаблицаНДСЗаписиКнигиПокупок.Поставщик,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.ВидЦенности,
	|	ТаблицаНДСЗаписиКнигиПокупок.СтавкаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетУчетаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДокументОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.Событие,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаСобытия,
	|	ТаблицаНДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	ТаблицаНДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	ТаблицаНДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДСУпр,
	|	ТаблицаНДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	ТаблицаНДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.КодВидаОперации
	|ИЗ
	|	ВтТаблицаНДСЗаписиКнигиПокупок КАК ТаблицаНДСЗаписиКнигиПокупок";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	ВЫБОР ТИПЗНАЧЕНИЯ(&ДокументОплаты)
	|		КОГДА ТИП(Документ.ВводОстатков)
	|			ТОГДА ВЫБОР ЕСТЬNULL(ДанныеДокумента.ДокументОснование.ТипОперации, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка))
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|				КОНЕЦ
	|		КОГДА ТИП(Документ.ПервичныйДокумент)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|		КОГДА ТИП(Документ.РеализацияПодарочныхСертификатов)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПодарочныхСертификатов)
	|		КОГДА ТИП(Документ.ОперацияПоПлатежнойКарте)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|		КОГДА ТИП(Документ.ВзаимозачетЗадолженности)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|		КОГДА ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|		КОГДА ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|		КОГДА ТИП(Документ.КорректировкаРеализации)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|		КОГДА ТИП(Документ.ПриходныйКассовыйОрдер)
	|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.ДокументОснование КАК Документ.ПриходныйКассовыйОрдер).ХозяйственнаяОперация
	|		КОГДА ТИП(Документ.ПоступлениеБезналичныхДенежныхСредств)
	|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.ДокументОснование КАК Документ.ПоступлениеБезналичныхДенежныхСредств).ХозяйственнаяОперация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|	КОНЕЦ                                   КАК ХозяйственнаяОперация,
	|	ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|	                                        КАК Партнер,
	|	&Контрагент                             КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(&ДокументОплаты) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|				ИЛИ ТИПЗНАЧЕНИЯ(&ДокументОплаты) = ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|				ИЛИ ТИПЗНАЧЕНИЯ(&ДокументОплаты) = ТИП(Документ.КорректировкаРеализации)
	|			ТОГДА ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Договор, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                   КАК Договор,
	|	ЕСТЬNULL(ДанныеДокумента.ДокументОснование.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	                                        КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Склад,
	|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|	                                        КАК МестоХранения,
	|	&Подразделение                          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Валюта                                 КАК Валюта,
	|	&Сумма                                  КАК Сумма,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&ИнформацияПоИсправлению                КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.СчетФактураВыданныйАванс";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоИсправлению", """""");
	ПереопределениеРасчетаПараметров.Вставить("ДокументОплаты", "ДанныеДокумента.ДокументОснование");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	ЗначенияПараметров.Вставить("Валюта", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", 	ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", 		ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);

КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ВариантыКомплектацииНоменклатуры.Ссылка КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаДокумента.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаДокумента.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
	|	ТаблицаДокумента.Содержание                         	КАК Содержание,
	|	ТаблицаДокумента.Сумма                              	КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              	КАК СуммаНДС,
	|	
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Номенклатура.ТипНоменклатуры В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ 													КАК ЭтоТовар,
	|	ЛОЖЬ                                                    КАК ЭтоНеВозвратнаяТара,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)  КАК Упаковка
	|
	|ПОМЕСТИТЬ РеализацияТоваровУслугТаблицаТоваров
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|		ПО ВариантыКомплектацииНоменклатуры.Владелец = ТаблицаДокумента.НоменклатураНабора
	|		И ВариантыКомплектацииНоменклатуры.Характеристика = ТаблицаДокумента.ХарактеристикаНабора
	|		И ВариантыКомплектацииНоменклатуры.Основной
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(&МассивДокументов)
	|	И ТаблицаДокумента.Ссылка.Проведен
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьУслуги,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьТовары
	|ПОМЕСТИТЬ
	|	НоменклатураДокументов
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК Ссылка,
	|	СчетФактура.НалогообложениеНДС КАК НалогообложениеНДС,
	|	СчетФактура.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	СчетФактура.Номер КАК Номер,
	|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
	|		ЕСТЬNULL(СчетФактура.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))
	|	ИНАЧЕ 
	|		СчетФактура.Дата
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
	|		СчетФактура.НомерИсправления 
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
	|		СчетФактура.Дата
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДатаИсправления,
	|	СчетФактура.Исправление КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	СчетФактура.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПоДокументу,
	|	&ВалютаРеглУчета КАК ВалютаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетФактура.Контрагент.ОбособленноеПодразделение
	|			ТОГДА СчетФактура.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ СчетФактура.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА СчетФактура.Организация.ОбособленноеПодразделение
	|			ТОГДА СчетФактура.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ СчетФактура.Организация
	|	КОНЕЦ КАК Организация,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	СчетФактура.Организация.Префикс КАК Префикс,
	|	ВЫБОР
	|		КОГДА СчетФактура.Организация.ОбособленноеПодразделение
	|			ТОГДА СчетФактура.Организация.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИндексПодразделения,
	|	СчетФактура.Контрагент КАК Грузополучатель,
	|	СчетФактура.ДокументОснование.Номер КАК НомерПлатежноРасчетногоДокумента,
	|	СчетФактура.ДокументОснование.Дата КАК ДатаПлатежноРасчетногоДокумента,
	|	СчетФактура.Организация КАК Грузоотправитель,
	|	СчетФактура.Организация.КПП КАК КПППоставщика,
	|
	|	ВЫБОР КОГДА СчетФактура.КППКонтрагента ПОДОБНО """" ТОГДА
	|		ВЫБОР КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА """"
	|			  КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.КПП, """")
	|			  ИНАЧЕ """"
	|		КОНЕЦ
	|	ИНАЧЕ
	|		СчетФактура.КППКонтрагента
	|	КОНЕЦ КАК КПППокупателя,
	|
	|	ВЫБОР КОГДА СчетФактура.ИННКонтрагента ПОДОБНО """" ТОГДА
	|		ВЫБОР КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА ЕстьNULL(ДанныеКонтрагента.ИНН, """")
	|			  КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.ИНН, """")
	|			  ИНАЧЕ """"
	|		КОНЕЦ
	|	ИНАЧЕ
	|		СчетФактура.ИННКонтрагента
	|	КОНЕЦ КАК ИННПокупателя,
	|
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
	|	&ВалютаРеглУчета КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаНаименованиеПолное,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	|		ПО СчетФактура.Ссылка = НоменклатураДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО СчетФактура.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПокупатель
	|		ПО ДанныеОрганизацийПокупатель.Ссылка = СчетФактура.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
	|		ПО ДанныеКонтрагента.Ссылка = СчетФактура.Контрагент
	|ГДЕ
	|	СчетФактура.Ссылка В(&МассивДокументов)
	|	И СчетФактура.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                КАК Ссылка,
	|	ТаблицаТоваров.НоменклатураНабора    КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора  КАК ХарактеристикаНабора,
	|	МИНИМУМ(ТаблицаТоваров.НомерСтроки)  КАК НомерСтроки,
	|	СУММА(ТаблицаТоваров.Сумма)    		 КАК Сумма,
	|	СУММА(ТаблицаТоваров.СуммаНДС)       КАК СуммаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                                    КАК Ссылка,
	|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ОсновнаяКомплектующая,
	|	Товары.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК Товары
	|
	|ГДЕ
	|	Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Ссылка                                                                                КАК Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	|	ЛОЖЬ КАК ОсновнаяКомплектующая,
	|	NULL КАК СтавкаНДС
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Ссылка ИЗ РеализацияТоваровУслугТаблицаТоваров КАК Т) КАК Т
	|		ПО ИСТИНА
	|ГДЕ
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ РеализацияТоваровУслугТаблицаТоваров КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СтавкаНДС
	|			ИНАЧЕ null
	|		КОНЕЦ) КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	|СГРУППИРОВАТЬ ПО
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры,
	|	ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|
	|	Таблица.Ссылка                            КАК Ссылка,
	|	Таблица.НоменклатураНабора                КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора              КАК ХарактеристикаНабора,
	|	Таблица.НомерСтроки                       КАК НомерСтроки,
	|	Истина 										КАК ПолныйНабор,
	|	Таблица.Сумма                             КАК Сумма,
	|	Таблица.СуммаНДС                          КАК СуммаНДС,
	|	ВременнаяТаблицаНаборыДополнительно.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
	|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
	|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка) КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаДокумента.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаДокумента.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаДокумента.ЭтоКомплектующие КАК ЭтоКомплектующие,
	|	ТаблицаДокумента.ЭтоНабор КАК ЭтоНабор,
	|	ТаблицаДокумента.ПолныйНабор КАК ПолныйНабор,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаДокумента.Содержание КАК СТРОКА(1))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Содержание КАК СТРОКА(100))
	|		КОГДА ТаблицаДокумента.ЭтоНабор
	|			ТОГДА ТаблицаДокумента.Номенклатура.НаименованиеПолное
	|		КОГДА ТаблицаДокумента.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ &ПредставлениеПредварительнаяОплата
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	"""" КАК НомерГТД,
	|	"""" КАК СтранаПроисхождения,
	|	"""" КАК СтранаПроисхожденияКод,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения,
	|	0 КАК Количество,
	|	0 КАК Цена,
	|	0 КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.Сумма КАК СуммаСНДС,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|(
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Ссылка,
	|
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	|
	|		ТаблицаТоваров.НоменклатураНабора,
	|		ТаблицаТоваров.ХарактеристикаНабора,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ КАК ЭтоКомплектующие,
	|		Ложь КАК ЭтоНабор,
	|		ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.НомерСтроки
	|		ИНАЧЕ
	|			ТаблицаТоваров.НомерСтроки
	|		КОНЕЦ КАК НомерСтрокиНаборы,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ПолныйНабор
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ КАК ПолныйНабор,
	|		ТаблицаТоваров.Номенклатура,
	|		ТаблицаТоваров.Содержание,
	|		ТаблицаТоваров.СтавкаНДС,
	|		ТаблицаТоваров.Сумма,
	|		ТаблицаТоваров.СуммаНДС,
	|		ТаблицаТоваров.Характеристика,
	|		ТаблицаТоваров.Упаковка
	|	ИЗ
	|		РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|			ПО ВременнаяТаблицаНаборы.НоменклатураНабора = ТаблицаТоваров.НоменклатураНабора
	|			 И ВременнаяТаблицаНаборы.ХарактеристикаНабора = ТаблицаТоваров.ХарактеристикаНабора
	|			 И ВременнаяТаблицаНаборы.Ссылка = ТаблицаТоваров.Ссылка
	|
	|	ГДЕ
	|		ТаблицаТоваров.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ИЛИ (ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	        И ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
	|	                                                                			  ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВременнаяТаблицаНаборы.Ссылка,
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		Ложь КАК ЭтоКомплектующие,
	|		Истина КАК ЭтоНабор,
	|		0 КАК НомерСтроки,
	|		ВременнаяТаблицаНаборы.НомерСтроки КАК НомерСтрокиНаборы,
	|		ВременнаяТаблицаНаборы.ПолныйНабор КАК ПолныйНабор,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		"""",
	|		ВременнаяТаблицаНаборы.СтавкаНДС,
	|		ВременнаяТаблицаНаборы.Сумма,
	|		ВременнаяТаблицаНаборы.СуммаНДС,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка
	|	ИЗ
	|		ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|	ГДЕ
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор),
	|	                                                                        ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))
	|) КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтрокиНаборы,
	|	ЭтоНабор УБЫВ,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("ПредставлениеПредварительнаяОплата", НСтр("ru = 'Предварительная оплата'"));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатПоШапке          = МассивРезультатов[2];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, СчетФактураНаАванс",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти, Истина);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

#КонецОбласти

#Область Прочее

Функция ВыполнитьЗачетАванса(ТаблицаАванс, ТаблицаАвансНачислениеНДС, ТаблицаЗачетАванса, Реквизиты)
	
	ТаблицаЗаписиКнигиПокупок = РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаЗаписиКнигиПокупок.Колонки.Удалить("Активность");
	
	Если ТаблицаАвансНачислениеНДС.Количество() = 0 Тогда
		Возврат ТаблицаЗаписиКнигиПокупок
	КонецЕсли;
	
	ДатаПоступленияАванса = ТаблицаАвансНачислениеНДС[0].Период;
	
	АвансМассивСуммаБезНДС = Новый Массив();
	АвансМассивСуммаНДС = Новый Массив();
	АвансМассивСуммаНДСУпр = Новый Массив();
	
	АвансСуммаБезНДС    = 0;
	АвансСуммаНДС       = 0;
	АвансСуммаСНДС      = 0;
	АвансСуммаБезНДСУпр = 0;
	АвансСуммаНДСУпр    = 0;
	АвансСуммаСНДСУпр   = 0;
	
	Для Каждого СтрокаАванса Из ТаблицаАвансНачислениеНДС Цикл
		АвансМассивСуммаБезНДС.Добавить(СтрокаАванса.СуммаБезНДС);
		АвансМассивСуммаНДС.Добавить(СтрокаАванса.НДС);
		АвансМассивСуммаНДСУпр.Добавить(СтрокаАванса.НДСУпр);
		
		АвансСуммаБезНДС    = АвансСуммаБезНДС + СтрокаАванса.СуммаБезНДС;
		АвансСуммаНДС       = АвансСуммаНДС + СтрокаАванса.НДС;
		АвансСуммаСНДС      = АвансСуммаСНДС + СтрокаАванса.СуммаБезНДС + СтрокаАванса.НДС;
		АвансСуммаБезНДСУпр = АвансСуммаБезНДСУпр + СтрокаАванса.СуммаБезНДСУпр;
		АвансСуммаНДСУпр    = АвансСуммаНДСУпр + СтрокаАванса.НДСУпр;
		АвансСуммаСНДСУпр   = АвансСуммаСНДСУпр + СтрокаАванса.СуммаБезНДСУпр + СтрокаАванса.НДСУпр;
	КонецЦикла; 
	
	НезачтеннаяСуммаАванса = ТаблицаАванс.Итог("Аванс");	
	НезачтеннаяСуммаАвансаУпр = ТаблицаАванс.Итог("АвансУпр");
	
	Для Каждого ПогашенныйАвансПоСФ Из ТаблицаЗачетАванса Цикл
		
		Если АвансСуммаСНДС = 0 Тогда
			Прервать;
		КонецЕсли;
		
		НезачтеннаяСуммаАванса = НезачтеннаяСуммаАванса - ПогашенныйАвансПоСФ.СуммаЗачета;
		НезачтеннаяСуммаАвансаУпр = НезачтеннаяСуммаАвансаУпр - ПогашенныйАвансПоСФ.СуммаЗачетаУпр;
		
		//Отбор лишних зачетов аванса
		ДатаЗачетаАванса = ПогашенныйАвансПоСФ.Период;
		ДатаНачисления = Реквизиты.Период;
		Если Реквизиты.ПравилоОтбораАванса <> Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты 
			И ДатаЗачетаАванса <= ДатаНачисления Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПогашенныйАвансПоСФ.ЕстьНДСПродажи И ПогашенныйАвансПоСФ.СуммаНДСПродажиБезНДС <> 0 Тогда
			// Определим по пропорции сумму зачета, которая относится к реализации с НДС.
			Коэффициенты = Новый Массив;
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.СуммаНДСПродажиСНДС);
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.СуммаНДСПродажиБезНДС);
			
			РаспределениеСуммыЗачета = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
											ПогашенныйАвансПоСФ.СуммаЗачета,
											Коэффициенты);
			РаспределениеСуммыЗачетаУпр = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
											ПогашенныйАвансПоСФ.СуммаЗачетаУпр,
											Коэффициенты);
			СуммаЗачета = РаспределениеСуммыЗачета[0];
			СуммаЗачетаУпр = ?(ПогашенныйАвансПоСФ.СуммаЗачетаУпр > 0, РаспределениеСуммыЗачетаУпр[0], 0);
		Иначе
			СуммаЗачета = ПогашенныйАвансПоСФ.СуммаЗачета;
			СуммаЗачетаУпр = ПогашенныйАвансПоСФ.СуммаЗачетаУпр;
		КонецЕсли;
		
		СуммаСНДС = Мин(СуммаЗачета, АвансСуммаСНДС);
		ОстатокСуммыАвансаСНДС = (АвансСуммаСНДС - СуммаСНДС);
		Если ОстатокСуммыАвансаСНДС > НезачтеннаяСуммаАванса Тогда
			// Откорректируем сумму, с которой выполняется восстановление с учетом остатка незачтенного аванса.
			СуммаСНДС = СуммаСНДС + (ОстатокСуммыАвансаСНДС - НезачтеннаяСуммаАванса);
		КонецЕсли;
		
		СуммаСНДСУпр = Мин(СуммаЗачетаУпр, АвансСуммаСНДСУпр);
		ОстатокСуммыАвансаСНДСУпр = (АвансСуммаСНДСУпр - СуммаСНДСУпр);
		Если ОстатокСуммыАвансаСНДСУпр > НезачтеннаяСуммаАвансаУпр Тогда
			// Откорректируем сумму, с которой выполняется восстановление с учетом остатка незачтенного аванса.
			СуммаСНДСУпр = СуммаСНДСУпр + (ОстатокСуммыАвансаСНДСУпр - НезачтеннаяСуммаАвансаУпр);
		КонецЕсли;
		
		Если СуммаСНДС = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаБезНДС    = Окр(АвансСуммаБезНДС * СуммаСНДС / АвансСуммаСНДС, 2);
		СуммаБезНДСУпр = Окр(АвансСуммаБезНДСУпр * СуммаСНДСУпр / АвансСуммаСНДСУпр, 2);
		СуммаНДС       = СуммаСНДС - СуммаБезНДС; 
		СуммаНДСУпр    = СуммаСНДСУпр - СуммаБезНДСУпр;
		
		АвансСуммаБезНДС = АвансСуммаБезНДС - СуммаБезНДС;
		АвансСуммаСНДС   = АвансСуммаСНДС - СуммаСНДС;
		АвансСуммаБезНДСУпр = АвансСуммаБезНДСУпр - СуммаБезНДСУпр;
		АвансСуммаСНДСУпр   = АвансСуммаСНДСУпр - СуммаСНДСУпр;
		
		Если СуммаБезНДС > 0 Тогда
			МассивСуммаБезНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаБезНДС, АвансМассивСуммаБезНДС);
		КонецЕсли;
		
		Если СуммаНДС > 0 Тогда
			МассивСуммаНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаНДС, АвансМассивСуммаНДС);
		КонецЕсли; 
		
		Если СуммаНДСУпр > 0 Тогда
			МассивСуммаНДСУпр = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаНДСУпр, АвансМассивСуммаНДСУпр);
		КонецЕсли;
		
		Счетчик = 0;
		
		//Зачет аванса - записи книги покупок
		Для Каждого СтрокаАванса Из ТаблицаАвансНачислениеНДС Цикл
			
			Если НЕ СтрокаАванса.ВключатьВКнигуПродаж Тогда
				Продолжить;
			КонецЕсли;
			
			Если ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик], 0) = 0
				И ?(СуммаНДСУпр > 0, МассивСуммаНДСУпр[Счетчик], 0) = 0
				И ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0) = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			СтрокаРезультата = ТаблицаЗаписиКнигиПокупок.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, ПогашенныйАвансПоСФ);
			
			СтрокаРезультата.СчетФактура	 = СтрокаАванса.СчетФактура;
			СтрокаРезультата.Поставщик		 = СтрокаАванса.Покупатель;
			СтрокаРезультата.СтавкаНДС		 = СтрокаАванса.СтавкаНДС;

			СтрокаРезультата.СуммаБезНДС	 = ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик],0);
			СтрокаРезультата.НДС			 = ?(СуммаНДС > 0,    МассивСуммаНДС[Счетчик],0);
			
			Если УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.УправленческийУчетОрганизаций(СтрокаРезультата.Период) Тогда
				СтрокаРезультата.НДСУпр = ?(СуммаНДСУпр > 0, МассивСуммаНДСУпр[Счетчик], 0);
			Иначе
				СтрокаРезультата.НДСУпр = 0;
			КонецЕсли;
			
			ВерсияКодовВидовОпераций = УчетНДСКлиентСервер.ВерсияКодовВидовОпераций(Реквизиты.Период);
			Если ВерсияКодовВидовОпераций >= 3 И СтрокаАванса.КодВидаОперации = "26" Тогда
				СтрокаРезультата.КодВидаОперации = "26";
			Иначе
				СтрокаРезультата.КодВидаОперации = "22";
			КонецЕсли;
			
			Счетчик = Счетчик + 1;
			
		КонецЦикла; 
	КонецЦикла;
	
	Возврат ТаблицаЗаписиКнигиПокупок;
	
КонецФункции	

//Возвращает результат запроса по полученным от клиентов авансам для формирования счетов-фактур на аванс
//
// Параметры:
// НачалоПериода - Дата - Начало периода, за котрый необходимо найти авансы
// КонецПериода - Дата - Окончание периода, за котовый необходимо найти авансы
// Организация - СправочникСсылка.Организации - Организация для отбора
// РасчетныйДокумент - ДокументСсылка - Расчетный документ для отбора
//
// Возвращаемое значение:
// Результат запроса   - содержит данные о полученных авансах
//
Функция РезультатЗапросаПоАвансам(НачалоПериода, КонецПериода, Организация, РасчетныйДокумент, ПравилоОтбораАвансов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПериоды.ПериодДень КАК ПериодДень
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	&Периоды КАК ТаблицаПериоды
	|ГДЕ
	|	ВЫБОР &ПравилоОтбораАвансов
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|				ТОГДА ТаблицаПериоды.ПериодДень = &КонецПериода
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеМесяца)
	|				ТОГДА КОНЕЦПЕРИОДА(ТаблицаПериоды.ПериодДень, ДЕНЬ) = КОНЕЦПЕРИОДА(ТаблицаПериоды.ПериодДень, МЕСЯЦ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеНалоговогоПериода)
	|				ТОГДА КОНЕЦПЕРИОДА(ТаблицаПериоды.ПериодДень, ДЕНЬ) = КОНЕЦПЕРИОДА(ТаблицаПериоды.ПериодДень, МЕСЯЦ)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	АналитикаУчетаПоПартнерамДанные.Организация КАК Организация,
	|	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	|	Расчеты.РасчетныйДокумент КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПриходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПоступлениеБезналичныхДенежныхСредств).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|			ТОГДА СУММА(Расчеты.ПредоплатаРасход + Расчеты.КВозвратуРасход)
	|		ИНАЧЕ СУММА(-ВЫБОР
	|					КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|							И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПриходныйКассовыйОрдер).Валюта = &ВалютаРеглУчета
	|						ТОГДА Расчеты.ПредоплатаРеглКонечныйОстаток
	|					КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|							И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПоступлениеБезналичныхДенежныхСредств).Валюта = &ВалютаРеглУчета
	|						ТОГДА Расчеты.ПредоплатаРеглКонечныйОстаток
	|					ИНАЧЕ Расчеты.ПредоплатаКонечныйОстаток + Расчеты.КВозвратуКонечныйОстаток
	|				КОНЕЦ)
	|	КОНЕЦ КАК ВалютнаяСумма,
	|	ВЫБОР
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|			ТОГДА СУММА(Расчеты.ПредоплатаРеглРасход)
	|		ИНАЧЕ СУММА(-Расчеты.ПредоплатаРеглКонечныйОстаток)
	|	КОНЕЦ КАК Сумма,
	|	АналитикаУчетаПоПартнерамДанные.Контрагент КАК Контрагент,
	|	АналитикаУчетаПоПартнерамДанные.Договор.СтавкаНДС КАК СтавкаНДСПоУмолчанию
	|ПОМЕСТИТЬ Расчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			День,
	|			,
	|			ВЫБОР
	|				КОГДА &РасчетныйДокумент <> НЕОПРЕДЕЛЕНО
	|					ТОГДА РасчетныйДокумент = &РасчетныйДокумент
	|				ИНАЧЕ АналитикаУчетаПоПартнерам.Организация В (&Организации)
	|			КОНЕЦ) КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерамДанные
	|		ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПоПартнерамДанные.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств КАК ПоступлениеДС
	|		ПО Расчеты.РасчетныйДокумент = ПоступлениеДС.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(ПоступлениеДС.ДатаПроведенияБанком, &НачалоПериода) МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Период,
	|	Расчеты.ЗаказКлиента,
	|	Расчеты.РасчетныйДокумент,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПриходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПоступлениеБезналичныхДенежныхСредств).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ,
	|	АналитикаУчетаПоПартнерамДанные.Контрагент,
	|	АналитикаУчетаПоПартнерамДанные.Организация,
	|	АналитикаУчетаПоПартнерамДанные.Договор.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период,
	|	ЕСТЬNULL(РеализацияПодарочныхСертификатов.Организация, ВводОстатков.Организация),
	|	НЕОПРЕДЕЛЕНО,
	|	РеализацияСертификата.Регистратор,
	|	РеализацияСертификата.ПодарочныйСертификат.Владелец.Валюта,
	|	ВЫБОР
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|			ТОГДА СУММА(ДанныеРегистра.СуммаПриход)
	|		ИНАЧЕ СУММА(ДанныеРегистра.СуммаКонечныйОстаток)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДанныеРегистра.СуммаПриход * (РеализацияСертификата.СуммаРегл / РеализацияСертификата.Сумма)) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ДанныеРегистра.СуммаКонечныйОстаток * (РеализацияСертификата.СуммаРегл / РеализацияСертификата.Сумма)) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель),
	|	NULL
	|ИЗ
	|	РегистрНакопления.ПодарочныеСертификаты.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, День, , ) КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|		ПО (РеализацияСертификата.ПодарочныйСертификат = ДанныеРегистра.ПодарочныйСертификат)
	|			И (РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияПодарочныхСертификатов КАК РеализацияПодарочныхСертификатов
	|		ПО (РеализацияСертификата.Регистратор = РеализацияПодарочныхСертификатов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ВводОстатков
	|		ПО (РеализацияСертификата.Регистратор = ВводОстатков.Ссылка)
	|ГДЕ
	|	ЕСТЬNULL(РеализацияПодарочныхСертификатов.Организация, ВводОстатков.Организация) В (&Организации)
	|	И ДанныеРегистра.СуммаОборот <> 0
	|	И &РасчетныйДокумент = НЕОПРЕДЕЛЕНО
	|	И РеализацияСертификата.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Период,
	|	РеализацияСертификата.Регистратор,
	|	РеализацияСертификата.Период,
	|	РеализацияСертификата.ПодарочныйСертификат.Владелец.Валюта,
	|	ЕСТЬNULL(РеализацияПодарочныхСертификатов.Организация, ВводОстатков.Организация)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	Расчеты.Организация КАК Организация,
	|	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	|	Расчеты.ДокументОснование КАК ДокументОснование,
	|	Расчеты.ВалютаДокумента КАК ВалютаДокумента,
	|	Расчеты.Контрагент КАК Контрагент,
	|	Расчеты.ВалютнаяСумма КАК ВалютнаяСумма,
	|	Расчеты.Сумма КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ПКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА ПКО_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ПБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПБДС_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА ПБДС_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ОПК_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ОПК_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА ОПК_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ВозвратТоваровОтКлиента_Расшифровка.Ссылка ЕСТЬ NULL
	|					И ВозвратТоваровОтКлиента_Расшифровка.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА ВозвратТоваровОтКлиента_Расшифровка.Сумма
	|			КОГДА НЕ ОперацияПоЯндексКассе.Ссылка ЕСТЬ NULL
	|					И ОперацияПоЯндексКассе.СуммаНДС18 <> 0
	|				ТОГДА ОперацияПоЯндексКассе.СуммаДокументаСНДС18
	|			КОГДА Расчеты.СтавкаНДСПоУмолчанию В (&СтавкиНДС18)
	|				ТОГДА Расчеты.ВалютнаяСумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма18,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ПКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА ПКО_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ПБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПБДС_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА ПБДС_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ОПК_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ОПК_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА ОПК_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ВозвратТоваровОтКлиента_Расшифровка.Ссылка ЕСТЬ NULL
	|					И ВозвратТоваровОтКлиента_Расшифровка.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА ВозвратТоваровОтКлиента_Расшифровка.Сумма
	|			КОГДА НЕ ОперацияПоЯндексКассе.Ссылка ЕСТЬ NULL
	|					И ОперацияПоЯндексКассе.СуммаНДС10 <> 0
	|				ТОГДА ОперацияПоЯндексКассе.СуммаДокументаСНДС10
	|			КОГДА Расчеты.СтавкаНДСПоУмолчанию В (&СтавкиНДС10)
	|				ТОГДА Расчеты.ВалютнаяСумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма10,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ПКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|				ТОГДА ПКО_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ПБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПБДС_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|				ТОГДА ПБДС_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ОПК_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ОПК_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|				ТОГДА ОПК_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ВозвратТоваровОтКлиента_Расшифровка.Ссылка ЕСТЬ NULL
	|					И ВозвратТоваровОтКлиента_Расшифровка.СтавкаНДС В (&СтавкиБезНДС)
	|				ТОГДА ВозвратТоваровОтКлиента_Расшифровка.Сумма
	|			КОГДА НЕ ОперацияПоЯндексКассе.Ссылка ЕСТЬ NULL
	|					И ОперацияПоЯндексКассе.СуммаДокумента - (ОперацияПоЯндексКассе.СуммаДокументаСНДС18 + ОперацияПоЯндексКассе.СуммаДокументаСНДС10) > 0
	|				ТОГДА ОперацияПоЯндексКассе.СуммаДокумента - (ОперацияПоЯндексКассе.СуммаДокументаСНДС18 + ОперацияПоЯндексКассе.СуммаДокументаСНДС10)
	|			КОГДА Расчеты.СтавкаНДСПоУмолчанию В (&СтавкиБезНДС)
	|				ТОГДА Расчеты.ВалютнаяСумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	Расчеты КАК Расчеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК ПКО_РасшифровкаПлатежа
	|		ПО (ПКО_РасшифровкаПлатежа.Ссылка = Расчеты.ДокументОснование)
	|			И (ПКО_РасшифровкаПлатежа.Заказ = Расчеты.ЗаказКлиента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПБДС_РасшифровкаПлатежа
	|		ПО (ПБДС_РасшифровкаПлатежа.Ссылка = Расчеты.ДокументОснование)
	|			И (ПБДС_РасшифровкаПлатежа.Заказ = Расчеты.ЗаказКлиента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияПоПлатежнойКарте.РасшифровкаПлатежа КАК ОПК_РасшифровкаПлатежа
	|		ПО (ОПК_РасшифровкаПлатежа.Ссылка = Расчеты.ДокументОснование)
	|			И (ОПК_РасшифровкаПлатежа.Заказ = Расчеты.ЗаказКлиента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияПоЯндексКассе КАК ОперацияПоЯндексКассе
	|		ПО (ОперацияПоЯндексКассе.Ссылка = Расчеты.ДокументОснование)
	|			И (ОперацияПоЯндексКассе.ОбъектРасчетов = Расчеты.ЗаказКлиента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиента_Расшифровка
	|		ПО (ВозвратТоваровОтКлиента_Расшифровка.Ссылка = Расчеты.ДокументОснование)
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Период,
	|	Расчеты.Организация,
	|	Расчеты.ДокументОснование,
	|	Расчеты.ВалютаДокумента,
	|	Расчеты.Контрагент,
	|	Расчеты.ЗаказКлиента,
	|	Расчеты.Сумма,
	|	Расчеты.ВалютнаяСумма
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Контрагент,
	|	ЗаказКлиента,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Авансы.ДокументОснование КАК ДокументОснование,
	|	Авансы.Контрагент КАК Контрагент,
	|	Авансы.ЗаказКлиента КАК ЗаказКлиента,
	|	Авансы.ПериодДень КАК ПериодДень,
	|	Авансы.ДатаСрезаОстатков КАК ДатаСрезаОстатков,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|				ТОГДА Авансы.Период
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня)
	|					И (РАЗНОСТЬДАТ(Авансы.Период, Авансы.ПериодДень, ДЕНЬ) > 0
	|						ИЛИ РАЗНОСТЬДАТ(Авансы.Период, &КонецПериода, ДЕНЬ) = 0)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, ДЕНЬ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|					И РАЗНОСТЬДАТ(Авансы.Период, Авансы.ПериодДень, ДЕНЬ) >= 4
	|				ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Авансы.Период, ДЕНЬ, 4), ДЕНЬ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|					И КОНЕЦПЕРИОДА(Авансы.ДатаСрезаОстатков, ДЕНЬ) = КОНЕЦПЕРИОДА(&КонецПериода, КВАРТАЛ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеМесяца)
	|					И КОНЕЦПЕРИОДА(Авансы.ПериодДень, ДЕНЬ) >= КОНЕЦПЕРИОДА(Авансы.Период, МЕСЯЦ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, МЕСЯЦ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеНалоговогоПериода)
	|					И КОНЕЦПЕРИОДА(Авансы.ПериодДень, ДЕНЬ) >= КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|			ИНАЧЕ &ПустаяДата
	|		КОНЕЦ) КАК ДатаФормированияСФ
	|ПОМЕСТИТЬ АвансыДляФормированияСФ_Предварительная
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТПериоды.ПериодДень КАК ПериодДень,
	|		ВЫБОР
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|				ТОГДА МИНИМУМ(ВТДанные.Период)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня)
	|				ТОГДА МИНИМУМ(ВТДанные.Период)
	|			ИНАЧЕ МАКСИМУМ(ВТДанные.Период)
	|		КОНЕЦ КАК ДатаСрезаОстатков,
	|		МИНИМУМ(ВТДанные.Период) КАК Период,
	|		ВТДанные.ДокументОснование КАК ДокументОснование,
	|		ВТДанные.ЗаказКлиента КАК ЗаказКлиента,
	|		ВТДанные.Контрагент КАК Контрагент
	|	ИЗ
	|		ВТПериоды КАК ВТПериоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанные КАК ВТДанные
	|			ПО (ВЫБОР &ПравилоОтбораАвансов
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня)
	|						ТОГДА РАЗНОСТЬДАТ(ВТДанные.Период, ВТПериоды.ПериодДень, ДЕНЬ) МЕЖДУ 0 И 1
	|								И ВТДанные.ВалютнаяСумма > 0
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|						ТОГДА РАЗНОСТЬДАТ(ВТДанные.Период, ВТПериоды.ПериодДень, ДЕНЬ) МЕЖДУ 0 И 5
	|					ИНАЧЕ ВТПериоды.ПериодДень >= ВТДанные.Период
	|				КОНЕЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТДанные.ДокументОснование,
	|		ВТДанные.Контрагент,
	|		ВТДанные.ЗаказКлиента,
	|		ВТПериоды.ПериодДень) КАК Авансы
	|
	|СГРУППИРОВАТЬ ПО
	|	Авансы.ДокументОснование,
	|	Авансы.Контрагент,
	|	Авансы.ЗаказКлиента,
	|	Авансы.ПериодДень,
	|	Авансы.ДатаСрезаОстатков
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|				ТОГДА Авансы.Период
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня)
	|					И (РАЗНОСТЬДАТ(Авансы.Период, Авансы.ПериодДень, ДЕНЬ) > 0
	|						ИЛИ РАЗНОСТЬДАТ(Авансы.Период, &КонецПериода, ДЕНЬ) = 0)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, ДЕНЬ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|					И РАЗНОСТЬДАТ(Авансы.Период, Авансы.ПериодДень, ДЕНЬ) >= 4
	|				ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Авансы.Период, ДЕНЬ, 4), ДЕНЬ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|					И КОНЕЦПЕРИОДА(Авансы.ДатаСрезаОстатков, ДЕНЬ) = КОНЕЦПЕРИОДА(&КонецПериода, КВАРТАЛ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеМесяца)
	|					И КОНЕЦПЕРИОДА(Авансы.ПериодДень, ДЕНЬ) >= КОНЕЦПЕРИОДА(Авансы.Период, МЕСЯЦ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, МЕСЯЦ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеНалоговогоПериода)
	|					И КОНЕЦПЕРИОДА(Авансы.ПериодДень, ДЕНЬ) >= КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|			ИНАЧЕ &ПустаяДата
	|		КОНЕЦ) <> &ПустаяДата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Контрагент,
	|	ЗаказКлиента,
	|	ДатаФормированияСФ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(АвансыДляФормированияСФ.ДатаСрезаОстатков) КАК Период,
	|	ДатыФормированияСФ.ДатаФормированияСФ КАК ДатаФормированияСФ,
	|	ДатыФормированияСФ.Контрагент КАК Контрагент,
	|	ДатыФормированияСФ.ЗаказКлиента КАК ЗаказКлиента,
	|	ДатыФормированияСФ.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ АвансыДляФормированияСФ
	|ИЗ
	|	(ВЫБРАТЬ
	|		МИНИМУМ(АвансыДляФормированияСФ.ДатаФормированияСФ) КАК ДатаФормированияСФ,
	|		АвансыДляФормированияСФ.Контрагент КАК Контрагент,
	|		АвансыДляФормированияСФ.ЗаказКлиента КАК ЗаказКлиента,
	|		АвансыДляФормированияСФ.ДокументОснование КАК ДокументОснование
	|	ИЗ
	|		АвансыДляФормированияСФ_Предварительная КАК АвансыДляФормированияСФ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АвансыДляФормированияСФ.ДокументОснование,
	|		АвансыДляФормированияСФ.Контрагент,
	|		АвансыДляФормированияСФ.ЗаказКлиента) КАК ДатыФормированияСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ АвансыДляФормированияСФ_Предварительная КАК АвансыДляФормированияСФ
	|		ПО ДатыФормированияСФ.ДокументОснование = АвансыДляФормированияСФ.ДокументОснование
	|			И ДатыФормированияСФ.Контрагент = АвансыДляФормированияСФ.Контрагент
	|			И ДатыФормированияСФ.ЗаказКлиента = АвансыДляФормированияСФ.ЗаказКлиента
	|			И ДатыФормированияСФ.ДатаФормированияСФ = АвансыДляФормированияСФ.ДатаФормированияСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыФормированияСФ.ДатаФормированияСФ,
	|	ДатыФормированияСФ.ДокументОснование,
	|	ДатыФормированияСФ.Контрагент,
	|	ДатыФормированияСФ.ЗаказКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.Организация КАК Организация,
	|	АвансыДляФормированияСФ.ДатаФормированияСФ КАК ДатаФормированияСФ,
	|	АвансыДляФормированияСФ.Контрагент КАК Контрагент,
	|	АвансыДляФормированияСФ.ДокументОснование КАК ДокументОснование,
	|	ВТДанные.ВалютаДокумента КАК ВалютаДокумента,
	|	СУММА(ВТДанные.ВалютнаяСумма) КАК ВалютнаяСумма,
	|	СУММА(ВТДанные.Сумма) КАК Сумма,
	|	СУММА(ВТДанные.Сумма18) КАК Сумма18,
	|	СУММА(ВТДанные.Сумма10) КАК Сумма10,
	|	СУММА(ВТДанные.СуммаБезНДС) КАК СуммаБезНДС
	|ИЗ
	|	АвансыДляФормированияСФ КАК АвансыДляФормированияСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанные КАК ВТДанные
	|		ПО АвансыДляФормированияСФ.ДокументОснование = ВТДанные.ДокументОснование
	|			И АвансыДляФормированияСФ.Контрагент = ВТДанные.Контрагент
	|			И АвансыДляФормированияСФ.ЗаказКлиента = ВТДанные.ЗаказКлиента
	|			И АвансыДляФормированияСФ.Период = ВТДанные.Период
	|ГДЕ
	|	ВТДанные.ВалютнаяСумма > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДанные.Организация,
	|	АвансыДляФормированияСФ.ДатаФормированияСФ,
	|	АвансыДляФормированияСФ.Контрагент,
	|	АвансыДляФормированияСФ.ДокументОснование,
	|	ВТДанные.ВалютаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаФормированияСФ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураВыданныйАванс.Ссылка КАК СчетФактура,
	|	СчетФактураВыданныйАванс.Дата КАК ДатаВыписки,
	|	СчетФактураВыданныйАванс.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданныйАванс.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СчетФактураВыданныйАванс.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|				ТОГДА ТаблицаАвансы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаАванса18,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|				ТОГДА ТаблицаАвансы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаАванса10,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|				ТОГДА ТаблицаАвансы.СуммаНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНДС18,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|				ТОГДА ТаблицаАвансы.СуммаНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНДС10
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаАвансы
	|		ПО СчетФактураВыданныйАванс.Ссылка = ТаблицаАвансы.Ссылка
	|ГДЕ
	|	СчетФактураВыданныйАванс.ДокументОснование В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Расчеты.ДокументОснование
	|			ИЗ
	|				Расчеты КАК Расчеты)
	|	И НЕ СчетФактураВыданныйАванс.ПометкаУдаления
	|	И НЕ СчетФактураВыданныйАванс.Исправление
	|	И СчетФактураВыданныйАванс.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураВыданныйАванс.Ссылка,
	|	СчетФактураВыданныйАванс.Дата,
	|	СчетФактураВыданныйАванс.ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданныйАванс.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СчетФактураВыданныйАванс.Контрагент
	|	КОНЕЦ";
	
	ОписаниеТиповД = Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));
	ТаблицаПериодов = Новый ТаблицаЗначений;
	ТаблицаПериодов.Колонки.Добавить("ПериодДень",ОписаниеТиповД);
	
	КонецПериода = ?(КонецПериода = '00010101', НачалоПериода, КонецПериода);
		
	ТекущийДень 	= КонецДня(НачалоПериода);
	ПоследнийДень 	= КонецДня(КонецПериода);
	
	Пока ТекущийДень <= ПоследнийДень Цикл
		НоваяСтрока = ТаблицаПериодов.Добавить();
		НоваяСтрока.ПериодДень = ТекущийДень;
		ТекущийДень = ТекущийДень + 86400;
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("Периоды",				ТаблицаПериодов);
	Запрос.УстановитьПараметр("НачалоПериода",			НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",			КонецПериода);
	Запрос.УстановитьПараметр("ПравилоОтбораАвансов",	ПравилоОтбораАвансов);
	Запрос.УстановитьПараметр("ПустаяДата",				'00010101');
	Запрос.УстановитьПараметр("РасчетныйДокумент",		РасчетныйДокумент);
	Если ЗначениеЗаполнено(Организация) Тогда
		Запрос.УстановитьПараметр("Организации", Организация);
	Иначе
		ДоступныеОрганизации = Справочники.Организации.ДоступныеОрганизации();
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(
			ДоступныеОрганизации, 
			Справочники.Организации.УправленческаяОрганизация);
		Запрос.УстановитьПараметр("Организации", ДоступныеОрганизации);
	КонецЕсли;
	Запрос.УстановитьПараметр("ВалютаРеглУчета",		Константы.ВалютаРегламентированногоУчета.Получить());
	
	СтавкиНДС18 = Новый Массив;
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	Запрос.УстановитьПараметр("СтавкиНДС18", СтавкиНДС18);
	
	СтавкиНДС10 = Новый Массив;
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	Запрос.УстановитьПараметр("СтавкиНДС10", СтавкиНДС10);
	
	СтавкиБезНДС = Новый Массив;
	СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.НДС0);
	СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("СтавкиБезНДС", СтавкиБезНДС);

	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.ВыполнитьПакет();
	
	Возврат Результат;
	
КонецФункции

//Возвращает значение правила отбора авансов, используемое в организации 
//
// Параметры:
// Организация - СправочникСсылка.Организации - Организация для отбора
// 
// Возвращаемое значение:
// Перечисление.ПорядокРегистрацииСчетовФактурНаАванс - значение "по умолчанию"
//
Функция ПравилоОтбораАвансаОрганизации(Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Операция.ПравилоОтбораАванса КАК ПравилоОтбораАванса
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК Операция
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Организация В (&Организация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Операция.Дата УБЫВ
	|";
	
	Запрос.УстановитьПараметр("Организация", ОбщегоНазначенияУТКлиентСервер.Массив(Организация));
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПравилоОтбораАванса;
	Иначе
		Возврат Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня;
	КонецЕсли;
	
КонецФункции

Функция ТипыЗапасовСобственные()
	
	ТипыЗапасовСобственные = Новый СписокЗначений;
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Товар);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Услуга);
	
	Возврат ТипыЗапасовСобственные;
	
КонецФункции

Функция СчетФактураПредыдущееИсправление(СчетФактураОснование, НомерИсправления)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК ИсправленныйСчетФактура,
	|	СчетФактура.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|ГДЕ
	|	СчетФактура.СчетФактураОснование = &СчетФактураОснование
	|	И СчетФактура.Проведен
	|	И СчетФактура.Исправление
	|	И СчетФактура.НомерИсправления <> &НомерИсправления
	|";
	
	Запрос.УстановитьПараметр("СчетФактураОснование", СчетФактураОснование);
	Запрос.УстановитьПараметр("НомерИсправления", НомерИсправления);
	
	ПредыдущийНомер = 0;
	ИсправленныйСчетФактура = Неопределено;
	НомерИсправленияЧислом = ?(ЗначениеЗаполнено(НомерИсправления),Число(НомерИсправления),1);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерИзВыборки = Число(Выборка.НомерИсправления);
		Если НомерИзВыборки < НомерИсправленияЧислом
			И НомерИзВыборки > ПредыдущийНомер Тогда
			ПредыдущийНомер = НомерИзВыборки;
			ИсправленныйСчетФактура = Выборка.ИсправленныйСчетФактура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИсправленныйСчетФактура
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УТ 11.3.4
// Процедура заполняет новый реквизит НалогообложениеНДС значением по умолчанию
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗаполнитьПустойРеквизитЗначениемПоУмолчаниюЗарегистрироватьДанныеКОбработке(
		Параметры,
		"Документ.СчетФактураВыданныйАванс",
		"НалогообложениеНДС");	
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗаполнитьПустойРеквизитЗначениемПоУмолчанию(
		Параметры, 
		"Документ.СчетФактураВыданныйАванс",
		"НалогообложениеНДС",
		Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураВыданныйАванс) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ выданные (аванс)'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры выданные (аванс)'");
	КонецЕсли;	
	
	КоличествоДокументов = ЕстьСчетаФактурыКОформлению(Параметры);
	
	Если КоличествоДокументов = 0 Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураВыданныйАванс());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураВыданныйАванс());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураВыданныйАванс() Экспорт
	
	Возврат "Документ.СчетФактураВыданныйАванс.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#КонецЕсли
