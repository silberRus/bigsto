
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	// Обработчик подсистемы "Свойства"
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	// Подсистема запрета редактирования ключевых реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ЭтоУТ = ПолучитьФункциональнуюОпцию("УправлениеТорговлей");
	ЭтоУТБазовая = ПолучитьФункциональнуюОпцию("БазоваяВерсия");
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Элементы.ГруппаСтраницаРеглУчет.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ ЭтоУТ Тогда
		Элементы.КорреспондирующийСчет.Видимость = Ложь;
		Элементы.ГруппаРаздельныйУчетНДСУТ.Видимость = Ложь;
		Элементы.ВариантРаздельногоУчетаНДСУТ.Видимость = Ложь;
	КонецЕсли;
	
	Если ЭтоУТ Тогда
		ЭлементСписка = Элементы.ВидДеятельностиРасходов.СписокВыбора.НайтиПоЗначению(Перечисления.ВидыДеятельностиРасходов.ОсновнаяИПрочаяДеятельность); 
		Если ЭлементСписка <> Неопределено Тогда
			Элементы.ВидДеятельностиРасходов.СписокВыбора.Удалить(ЭлементСписка);
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоУТБазовая Тогда
		Элементы.ВариантРаспределенияРасходовРегл.Заголовок = НСтр("ru = 'Вариант распределения'");
		Элементы.ВариантРаспределенияРасходовУпр.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы
	 ИЛИ Объект.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы Тогда
		Элементы.КонтролироватьЗаполнениеАналитики.Видимость = Ложь;
	КонецЕсли;
	
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Подсистема "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект)
	
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	Если Не ЗначениеЗаполнено(ВариантРаспределенияРасходовУпр) Тогда
		ТекущийОбъект.ВариантРаспределенияРасходовУпр = ТекущийОбъект.ВариантРаспределенияРасходовРегл;
	Иначе
		ТекущийОбъект.ВариантРаспределенияРасходовУпр = ВариантРаспределенияРасходовУпр;
	КонецЕсли;
	
	Если ТекущийОбъект.ВариантРаспределенияРасходовРегл <> Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов
	 И ТекущийОбъект.ВариантРаспределенияРасходовУпр <> Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов Тогда
		ТекущийОбъект.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	КонецЕсли;
	Если Не ПустаяСтрока(ТипЗначения) Тогда
		Если ТипЗначения = "ДокументСсылка.ЗаказКлиента"
			ИЛИ ТипЗначения = "ДокументСсылка.РеализацияТоваровУслуг"
		Тогда
			ТекущийОбъект.АналитикаРасходовЗаказРеализация = Истина;
			ТекущийОбъект.ТипЗначения = Новый ОписаниеТипов("
				|ДокументСсылка.АктВыполненныхРабот,
				|ДокументСсылка.РеализацияТоваровУслуг,
				|ДокументСсылка.РеализацияУслугПрочихАктивов,
				|ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента,
				|ДокументСсылка.ЗаказКлиента
				|");
		ИначеЕсли ТипЗначения = "СправочникСсылка.ОбъектыСтроительства22" Тогда
			ТекущийОбъект.АналитикаРасходовЗаказРеализация = Ложь;
			ТекущийОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации");
		Иначе
			ТекущийОбъект.АналитикаРасходовЗаказРеализация = Ложь;
			ТекущийОбъект.ТипЗначения = Новый ОписаниеТипов(ТипЗначения);
		КонецЕсли;
	КонецЕсли;
	Если ТекущийОбъект.ВидЦенностиНДС.Пустая() Тогда
		Если ТекущийОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров Тогда
			ТекущийОбъект.ВидЦенностиНДС = Перечисления.ВидыЦенностей.Товары;
		Иначе
			ТекущийОбъект.ВидЦенностиНДС = Перечисления.ВидыЦенностей.ПрочиеРаботыИУслуги;
		КонецЕсли;
	КонецЕсли;
	
	ТекущийОбъект.ДоступныеХозяйственныеОперации.Очистить();
	Для Каждого ЭлементСписка Из ДоступныеХозяйственныеОперации Цикл
		Если ЭлементСписка.Пометка Тогда
			НоваяСтрока = ТекущийОбъект.ДоступныеХозяйственныеОперации.Добавить();
			НоваяСтрока.ХозяйственнаяОперация = ЭлементСписка.Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ПолеТипЗначения = Элементы.ТипЗначения;
	Если ПолеТипЗначения.СписокВыбора.НайтиПоЗначению(ТипЗначения) = Неопределено
		И Не Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПрочиеАктивы
		И Не ТипЗначения = "СправочникСсылка.ПрочиеАктивыПассивы" Тогда
		ТекстСообщения = НСтр("ru = 'В поле ""Аналитика расходов"" не выбрано ни одного вида аналитики'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			, // Ключ данных
			"ТипЗначения",
			, // Путь к данным
			Отказ);
	КонецЕсли;
	
	ПроверяемыеСтатьи = Новый Массив;
	ПроверяемыеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы);
	ПроверяемыеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.НачисленныйНДСПриВыкупеМногооборотнойТары);
	ПроверяемыеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости);
	ПроверяемыеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ПрибыльУбытокПрошлыхЛет);
	ПроверяемыеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров);
	ПроверяемыеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.СебестоимостьПродаж);
	ПроверяемыеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ФормированиеРезервовПоСомнительнымДолгам);
	Если ПроверяемыеСтатьи.Найти(Объект.Ссылка) <> Неопределено
	 И ВариантРаспределенияРасходовУпр <> Перечисления.ВариантыРаспределенияРасходов.ПустаяСсылка()
	 И ВариантРаспределенияРасходовУпр <> Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо выбрать вариант распределения в упр. учете ""На финансовый результат""'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			Объект.Ссылка,
			"ВариантРаспределенияРасходовУпр",
			,
			Отказ);
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если НЕ Объект.ОграничитьИспользование Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДоступныеХозяйственныеОперации");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_СтатьяРасходов", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантРаспределенияРасходовПриИзмененииРегл(Элемент)
	
	ДоступностьКонтроляЗаполненияАналитик = Истина;
	Если Объект.ВариантРаспределенияРасходовРегл = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров") Тогда
		Объект.ВидЦенностиНДС = ПредопределенноеЗначение("Перечисление.ВидыЦенностей.Товары");
		Объект.ВариантРаздельногоУчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента");
		
	ИначеЕсли Объект.ВариантРаспределенияРасходовРегл = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов") Тогда
		Объект.ВидЦенностиНДС = ПредопределенноеЗначение("Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги");
		
		
	ИначеЕсли Объект.ВариантРаспределенияРасходовРегл = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НеРаспределять") Тогда
		Объект.ВидЦенностиНДС = ПредопределенноеЗначение("Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги");
		Объект.ВариантРаздельногоУчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента");
	Иначе
		Объект.ВидЦенностиНДС = ПредопределенноеЗначение("Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги");
	КонецЕсли;
	
	Элементы.КонтролироватьЗаполнениеАналитики.Видимость = ДоступностьКонтроляЗаполненияАналитик;
	Если Объект.ДоступныеХозяйственныеОперации.Количество() > 0 Тогда
		ОчиститьНедоступныеХозяйственныеОперации();
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантРаспределенияРасходовПриИзмененииУпр(Элемент)
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничитьИспользованиеПриИзменении(Элемент)
	
	Элементы.ДоступныеХозяйственныеОперации.Доступность = Объект.ОграничитьИспользование;
	
	Если Не Объект.ОграничитьИспользование Тогда
		Для каждого ЭлементСписка Из ДоступныеХозяйственныеОперации Цикл
			Если ЭлементСписка.Пометка Тогда
				ЭлементСписка.Пометка = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрямыеКосвенныеНУПриИзменении(Элемент)
	
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРаспределенияНаПроизводственныеЗатратыПриИзменении(Элемент)
	
	
	Возврат; // в УТ обработчик пустой
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРаспределенияНаПроизводственныеЗатратыОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДеятельностиДляНалоговогоУчетаЗатратПриИзменении(Элемент)
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДеятельностиРасходовПриИзменении(Элемент)
	
	ВидДеятельностиРасходовПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаПриИзменении(Элемент)
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятиеКналоговомуУчетуПоПрочимРасходамПриИзменении(Элемент)
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидРасходовПриИзменении(Элемент)
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипРасходовПриИзменении(Элемент)
	
	ТипРасходовПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьСчетаРеглУчетаПоОрганизациямИПодразделениям(Команда)
	
	
	Возврат; // Чтобы в УТ был не пустой обработчик
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ПараметрыФормы = Новый Структура;
		Результат = Неопределено;

		ОткрытьФорму("ПланВидовХарактеристик.СтатьиРасходов.Форма.РазблокированиеРеквизитов", ПараметрыФормы,,,,, Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
        ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

#Область ПриИзмененииРеквизитов

&НаСервере
Процедура ВидДеятельностиРасходовПриИзмененииСервер()
	
	Если Объект.ВидДеятельностиРасходов <> Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность 
		И Объект.ВариантРаспределенияРасходовРегл <> Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности Тогда
		Объект.ВариантРаспределенияРасходовРегл = Неопределено;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораКорСчета();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаСервере
Процедура ТипРасходовПриИзмененииСервер()
	ЗаполнитьСписокВидовАналитикРасходов();
	Если Элементы.ТипЗначения.СписокВыбора.НайтиПоЗначению(ТипЗначения) = Неопределено Тогда
		Объект.ВидЦенностиНДС = Перечисления.ВидыЦенностей.ПустаяСсылка();
		Если Объект.ТипРасходов = Перечисления.ТипыРасходов.ЗакупкаТоваров Тогда
			ТипЗначения = "ДокументСсылка.ПриобретениеТоваровУслуг";
			Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров;
		ИначеЕсли Объект.ТипРасходов = Перечисления.ТипыРасходов.Производственные Тогда
			ТипЗначения = "СправочникСсылка.ПрочиеРасходы";
			Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты;
		ИначеЕсли Объект.ТипРасходов = Перечисления.ТипыРасходов.ПродажаТоваров Тогда
			ТипЗначения = "СправочникСсылка.Партнеры";
		ИначеЕсли Объект.ТипРасходов = Перечисления.ТипыРасходов.ПрочиеРасходы Тогда
			ТипЗначения = "СправочникСсылка.ПрочиеРасходы";
		ИначеЕсли Объект.ТипРасходов = Перечисления.ТипыРасходов.ФормированиеСтоимостиВНА Тогда
			ТипЗначения = "СправочникСсылка.ОбъектыЭксплуатации";
			Объект.ВидЦенностиНДС = Перечисления.ВидыЦенностей.ОС;
			Если Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ПрочаяДеятельность Тогда
				Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
			Иначе
				Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы;
			КонецЕсли;
		ИначеЕсли Объект.ТипРасходов = Перечисления.ТипыРасходов.СкладскоеХранение Тогда
			ТипЗначения = "СправочникСсылка.Склады";
			Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров;
		КонецЕсли;
	КонецЕсли;
	
	// Проверим вариант распределения расходов (регл).
	Если Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров
	 И Объект.ТипРасходов <> Перечисления.ТипыРасходов.ЗакупкаТоваров
	 И Объект.ТипРасходов <> Перечисления.ТипыРасходов.СкладскоеХранение Тогда
		Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
		
	ИначеЕсли Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты
	 И Объект.ТипРасходов <> Перечисления.ТипыРасходов.Производственные Тогда
		Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
		
	ИначеЕсли Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы
	 И Объект.ТипРасходов <> Перечисления.ТипыРасходов.ФормированиеСтоимостиВНА Тогда
		Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
	КонецЕсли;
	
	// Проверим вариант распределения расходов (упр).
	Если ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров
	 И Объект.ТипРасходов <> Перечисления.ТипыРасходов.ЗакупкаТоваров
	 И Объект.ТипРасходов <> Перечисления.ТипыРасходов.СкладскоеХранение Тогда
		ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
		
	ИначеЕсли ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты
	 И Объект.ТипРасходов <> Перечисления.ТипыРасходов.Производственные Тогда
		ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
		
	ИначеЕсли ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы
	 И Объект.ТипРасходов <> Перечисления.ТипыРасходов.ФормированиеСтоимостиВНА Тогда
		ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
		
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры


#КонецОбласти

#Область Свойства

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область УправлениеЭлементамиФормы

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	НеБазовая = ПолучитьФункциональнуюОпцию("НеБазоваяВерсия");
	
	Если Объект.Ссылка = ПланыВидовХарактеристик.СтатьиРасходов.СебестоимостьПродаж Тогда
		Элементы.СпособРаспределенияПоНаправлениямДеятельности.Видимость = Ложь;
	КонецЕсли;
	
	// Закладка "Основное".
	Элементы.СтатьяРасходов.Видимость =
		(Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
	Элементы.СпособРаспределенияПоНаправлениямДеятельности.Видимость = 
		(Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	Элементы.ПравилоРаспределенияНаСебестоимость.Видимость =
		(Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров);
	Элементы.ПустойРеквизитРегл.Видимость = НеБазовая И (
		(Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.ПустаяСсылка())
		ИЛИ (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		ИЛИ (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять)
		ИЛИ (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности
			И НЕ ФормироватьФинансовыйРезультат));
		
	Элементы.СпособРаспределенияНаПроизводственныеЗатраты.Видимость =
		(Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты);
	Элементы.ГруппаПравилоРаспределенияНаПроизводство.Видимость =
		(Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		ИЛИ (ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты);
	Элементы.СтатьяКалькуляции.Видимость =
		(Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		ИЛИ (ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты);
		
	Элементы.СтатьяРасходовУпр.Видимость = НеБазовая И
		(ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
	Элементы.СпособРаспределенияПоНаправлениямДеятельностиУпр.Видимость = НеБазовая И
		(ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	Элементы.ПравилоРаспределенияНаСебестоимостьУпр.Видимость = НеБазовая И
		(ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров);
	Элементы.СпособРаспределенияНаПроизводственныеЗатратыУпр.Видимость = НеБазовая И
		(ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты);
	Элементы.ПустойРеквизитУпр.Видимость = НеБазовая И (
		(ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.ПустаяСсылка())
		ИЛИ (ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		ИЛИ (ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять)
		ИЛИ (Объект.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности
			И НЕ ФормироватьФинансовыйРезультат));
		
	Элементы.СтатьяРасходовУпр.Доступность =
		(Объект.ВариантРаспределенияРасходовРегл <> ВариантРаспределенияРасходовУпр);
	Элементы.СпособРаспределенияПоНаправлениямДеятельностиУпр.Доступность =
		(Объект.ВариантРаспределенияРасходовРегл <> ВариантРаспределенияРасходовУпр);
	Элементы.ПравилоРаспределенияНаСебестоимостьУпр.Доступность =
		(Объект.ВариантРаспределенияРасходовРегл <> ВариантРаспределенияРасходовУпр);
	Элементы.СпособРаспределенияНаПроизводственныеЗатратыУпр.Доступность =
		(Объект.ВариантРаспределенияРасходовРегл <> ВариантРаспределенияРасходовУпр);
	
	Элементы.ГруппаВидАналитики.Видимость =
		(Объект.ВариантРаспределенияРасходовРегл <> Перечисления.ВариантыРаспределенияРасходов.НаПрочиеАктивы);
	
	// Закладка "Ограничение использования".	
		
	Элементы.ДоступныеХозяйственныеОперации.Доступность = (Объект.ОграничитьИспользование И Не ТолькоПросмотр);
	
	// Закладка "Регламентированный учет".
	
	ВариантРаспределенияРегл = Объект.ВариантРаспределенияРасходовРегл;
	ВариантРаспределенияУпр = ВариантРаспределенияРасходовУпр;
	НаПрочиеАктивы = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаПрочиеАктивы);
	
	ВидимостьНастроекОтраженияВРеглУчете = НЕ НаПрочиеАктивы И ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	Элементы.ГруппаОтражениеВРеглУчете.Видимость = ВидимостьНастроекОтраженияВРеглУчете;
	Элементы.ГруппаКлассификацияРасходовДляНалоговогоУчета.Видимость =  НЕ НаПрочиеАктивы И ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	Элементы.ГруппаДоступностьДляВыбораВДокументах.Видимость = НЕ НаПрочиеАктивы;
	
	
	Элементы.ИнформацияНаПрочиеАктивыТекст.Заголовок = 
		НСтр("ru = 'Данный вариант распределения устарел, вместо статей с таким вариантом распределения в документах следует использовать статьи активов/пассивов.'");
		
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов") Тогда
		Элементы.ИнформацияНаПрочиеАктивыТекст.Заголовок = Элементы.ИнформацияНаПрочиеАктивыТекст.Заголовок 
			+ " " 
			+ НСтр("ru = 'Для использования статей активов/пассивов включите опцию ""Учитывать прочие активы и пассивы"" (раздел Администрирование - Финансовый результат).'")
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьТиповЗначенийАналитики()
	
	МассивИсключаемыхТипов = Новый Массив;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыКлиентов") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ЗаказКлиента");
	Иначе
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.РеализацияТоваровУслуг");
	КонецЕсли;
		
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыПоставщикам") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ЗаказПоставщику");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаПеремещение") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ЗаказНаПеремещение");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСделкиСКлиентами") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.СделкиСКлиентами");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПлатежнымиКартами") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.ЭквайринговыеТерминалы");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ПередачаТоваровМеждуОрганизациями");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ФиксироватьПретензииКлиентов") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.ПретензииКлиентов");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьМаркетинговыеМероприятия") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.МаркетинговыеМероприятия");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПеремещениеТоваров") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ПеремещениеТоваров");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ФормироватьФинансовыйРезультат") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.НаправленияДеятельности");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПроекты") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.Проекты");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2")
		И Не ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.ОбъектыЭксплуатации");
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.НематериальныеАктивы");
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда
		МассивИсключаемыхТипов.Добавить("ПеречислениеСсылка.ВидыОперацийПоЗарплате");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют") Тогда
		МассивИсключаемыхТипов.Добавить("ПеречислениеСсылка.АналитикаКурсовыхРазниц");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.СтруктураПредприятия");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.Организации");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.ДоговорыКредитовИДепозитов");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКасс") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.Кассы");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаСборку") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ЗаказНаСборку");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСборкуРазборку") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.СборкаТоваров");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		МассивИсключаемыхТипов.Добавить("СправочникСсылка.ОбъектыСтроительства22");
	КонецЕсли;
	
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНеотфактурованныеПоставки")
	 И Не ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков") Тогда
		МассивИсключаемыхТипов.Добавить("ДокументСсылка.ПоступлениеТоваров");
	КонецЕсли;
	
	Поле = Элементы.ТипЗначения;
	Для Каждого ИсключаемыйТип Из МассивИсключаемыхТипов Цикл
		ЭлементСписка = Поле.СписокВыбора.НайтиПоЗначению(ИсключаемыйТип);
		Если ЭлементСписка <> Неопределено И ТипЗначения <> ИсключаемыйТип Тогда
			Поле.СписокВыбора.Удалить(ЭлементСписка);
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры


#КонецОбласти

#Область Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	Если Объект.ВариантРаспределенияРасходовУпр = Объект.ВариантРаспределенияРасходовРегл Тогда
		ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.ПустаяСсылка();
	Иначе
		ВариантРаспределенияРасходовУпр = Объект.ВариантРаспределенияРасходовУпр;
	КонецЕсли;
	ФормироватьФинансовыйРезультат = ПолучитьФункциональнуюОпцию("ФормироватьФинансовыйРезультат");
	
	УстановитьТипЗначения(Объект.ТипЗначения);
	ЗаполнитьСписокВыбораКорСчета();
	УправлениеЭлементамиФормы();
	ЗаполнитьСписокДоступныхХозяйственныхОпераций();
	ЗаполнитьСписокВидовАналитикРасходов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипЗначения(ВыбранныйТипЗначения)
	
	Если ВыбранныйТипЗначения = Неопределено Тогда
		Если ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
			ВыбранныйТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Склады");
		Иначе
			ВыбранныйТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Организации");
		КонецЕсли;
	КонецЕсли;
	
	СписокТиповЗначений = Новый СписокЗначений;
	СписокТиповЗначений.Добавить("СправочникСсылка.МаркетинговыеМероприятия");
	СписокТиповЗначений.Добавить("СправочникСсылка.НаправленияДеятельности");
	СписокТиповЗначений.Добавить("СправочникСсылка.СделкиСКлиентами");
	СписокТиповЗначений.Добавить("ДокументСсылка.ЗаказКлиента");
	СписокТиповЗначений.Добавить("СправочникСсылка.Склады");
	СписокТиповЗначений.Добавить("СправочникСсылка.Кассы");
	СписокТиповЗначений.Добавить("СправочникСсылка.Номенклатура");
	СписокТиповЗначений.Добавить("ДокументСсылка.ЗаказПоставщику");
	СписокТиповЗначений.Добавить("ДокументСсылка.ПриобретениеТоваровУслуг");
	СписокТиповЗначений.Добавить("ДокументСсылка.ЗаказНаПеремещение");
	СписокТиповЗначений.Добавить("ДокументСсылка.РеализацияТоваровУслуг");
	СписокТиповЗначений.Добавить("ДокументСсылка.ПеремещениеТоваров");
	СписокТиповЗначений.Добавить("ДокументСсылка.ПередачаТоваровМеждуОрганизациями");
	СписокТиповЗначений.Добавить("ДокументСсылка.РеализацияТоваровУслуг");
	СписокТиповЗначений.Добавить("СправочникСсылка.ПрочиеРасходы");
	СписокТиповЗначений.Добавить("СправочникСсылка.ПрочиеАктивыПассивы");
	СписокТиповЗначений.Добавить("СправочникСсылка.Партнеры");
	СписокТиповЗначений.Добавить("СправочникСсылка.Организации");
	СписокТиповЗначений.Добавить("СправочникСсылка.ФизическиеЛица");
	СписокТиповЗначений.Добавить("СправочникСсылка.СтруктураПредприятия");
	СписокТиповЗначений.Добавить("СправочникСсылка.Проекты");
	СписокТиповЗначений.Добавить("СправочникСсылка.ПретензииКлиентов");
	СписокТиповЗначений.Добавить("СправочникСсылка.ДоговорыКредитовИДепозитов");
	СписокТиповЗначений.Добавить("ПеречислениеСсылка.АналитикаКурсовыхРазниц");
	СписокТиповЗначений.Добавить("ДокументСсылка.ЗаказНаСборку");
	СписокТиповЗначений.Добавить("ДокументСсылка.СборкаТоваров");
	СписокТиповЗначений.Добавить("ДокументСсылка.ВводОстатков");
	СписокТиповЗначений.Добавить("ДокументСсылка.ПоступлениеТоваров");
	Для Каждого ЭлементСписка Из СписокТиповЗначений Цикл
		Если ВыбранныйТипЗначения.СодержитТип(Тип(ЭлементСписка.Значение)) Тогда
			Если ЭлементСписка.Значение = "СправочникСсылка.ОбъектыЭксплуатации"
			 И Объект.ВидЦенностиНДС = Перечисления.ВидыЦенностей.ОбъектыНезавершенногоСтроительства Тогда
				ТипЗначения = "СправочникСсылка.ОбъектыСтроительства22";
			Иначе
				ТипЗначения = ЭлементСписка.Значение;
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНедоступныеХозяйственныеОперации()
	
	ТекущиеДоступныеХозяйственныеОперации = ОбщегоНазначенияКлиентСервер.СкопироватьСписокЗначений(ДоступныеХозяйственныеОперации);
	
	ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьСписокХозяйственныхОпераций(
		ДоступныеХозяйственныеОперации,
		ВариантРаспределенияРасходовУпр,
		Объект.ВариантРаспределенияРасходовРегл);
		
	Для Каждого ТекущийЭлементСписка Из ТекущиеДоступныеХозяйственныеОперации Цикл
		ЭлементСписка = ДоступныеХозяйственныеОперации.НайтиПоЗначению(ТекущийЭлементСписка.Значение);
		Если ЭлементСписка <> Неопределено Тогда
			ЭлементСписка.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораКорСчета()
	
	СписокВыбора = Элементы.КорреспондирующийСчет.СписокВыбора;
	СписокВыбора.Очистить();
	
	Если Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность Тогда
		СписокВыбора.Добавить("20", НСтр("ru='Основное производство (20)'"));
		СписокВыбора.Добавить("23", НСтр("ru='Вспомогательные производства (23)'"));
		СписокВыбора.Добавить("25", НСтр("ru='Общепроизводственные расходы (25)'"));
		СписокВыбора.Добавить("26", НСтр("ru='Общехозяйственные расходы (26)'"));
		СписокВыбора.Добавить("44.01", НСтр("ru='Издержки обращения (44.01)'"));
		СписокВыбора.Добавить("44.02", НСтр("ru='Коммерческие расходы (44.02)'"));
	КонецЕсли;
	Если Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ПрочаяДеятельность Тогда
		СписокВыбора.Добавить("91.02", НСтр("ru='Прочие расходы (91.02)'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДоступныхХозяйственныхОпераций()
	
	ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьСписокХозяйственныхОпераций(
		ДоступныеХозяйственныеОперации,
		ВариантРаспределенияРасходовУпр,
		Объект.ВариантРаспределенияРасходовРегл);
	
	Для Каждого СтрокаТаблицы Из Объект.ДоступныеХозяйственныеОперации Цикл
		ЭлементСписка = ДоступныеХозяйственныеОперации.НайтиПоЗначению(СтрокаТаблицы.ХозяйственнаяОперация);
		Если ЭлементСписка <> Неопределено Тогда
			ЭлементСписка.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВидовАналитикРасходов()
	
	СписокВыбора = Элементы.ТипЗначения.СписокВыбора;
	СписокВыбора.Очистить();
	
	Если Объект.ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.ЗакупкаТоваров") Тогда
		СписокВыбора.Добавить("ДокументСсылка.ЗаказПоставщику", 					НСтр("ru='Заказ поставщику'"));
		СписокВыбора.Добавить("ДокументСсылка.ПриобретениеТоваровУслуг", 			НСтр("ru='Приобретение товаров и услуг'"));
		СписокВыбора.Добавить("ДокументСсылка.ПоступлениеТоваров", 					НСтр("ru='Поступление товаров'"));
		СписокВыбора.Добавить("ДокументСсылка.ВводОстатков", 						НСтр("ru='Ввод остатков'"));
		СписокВыбора.Добавить("ДокументСсылка.ПередачаТоваровМеждуОрганизациями", 	НСтр("ru='Передача товаров между организациями'"));
		
	ИначеЕсли Объект.ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.СкладскоеХранение") Тогда
		СписокВыбора.Добавить("СправочникСсылка.Склады", 			НСтр("ru='Склад (Место хранения)'"));
		СписокВыбора.Добавить("СправочникСсылка.Номенклатура", 		НСтр("ru='Номенклатура'"));
		СписокВыбора.Добавить("ДокументСсылка.ЗаказНаПеремещение", 	НСтр("ru='Заказ на перемещение'"));
		СписокВыбора.Добавить("ДокументСсылка.ПеремещениеТоваров", 	НСтр("ru='Перемещение товаров'"));
		СписокВыбора.Добавить("ДокументСсылка.ЗаказНаСборку", 		НСтр("ru='Заказ на сборку (разборку)'"));
		СписокВыбора.Добавить("ДокументСсылка.СборкаТоваров", 		НСтр("ru='Сборка (разборка) товаров'"));
		
	ИначеЕсли Объект.ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.ПродажаТоваров") Тогда
		СписокВыбора.Добавить("СправочникСсылка.Партнеры",					НСтр("ru='Клиент'"));
		СписокВыбора.Добавить("СправочникСсылка.СделкиСКлиентами",			НСтр("ru='Сделка'"));
		СписокВыбора.Добавить("ДокументСсылка.ЗаказКлиента",				НСтр("ru='Заказ / Реализация'"));
		СписокВыбора.Добавить("СправочникСсылка.МаркетинговыеМероприятия",	НСтр("ru='Маркетинговое мероприятие'"));
		
	ИначеЕсли Объект.ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.Производственные") Тогда
		СписокВыбора.Добавить("СправочникСсылка.СтруктураПредприятия", 	НСтр("ru='Подразделение'"));
		СписокВыбора.Добавить("СправочникСсылка.ПрочиеРасходы", 		НСтр("ru='Прочие расходы'"));
		СписокВыбора.Добавить("СправочникСсылка.ОбъектыЭксплуатации", 	НСтр("ru='Объекты эксплуатации'"));
		
	ИначеЕсли Объект.ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА") Тогда
		
	ИначеЕсли Объект.ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.ПрочиеРасходы") Тогда
		СписокВыбора.Добавить("СправочникСсылка.СтруктураПредприятия", 		НСтр("ru='Подразделение'"));
		СписокВыбора.Добавить("СправочникСсылка.Организации", 				НСтр("ru='Организация'"));
		СписокВыбора.Добавить("ПеречислениеСсылка.АналитикаКурсовыхРазниц", НСтр("ru='Виды курсовых разниц'"));
		СписокВыбора.Добавить("СправочникСсылка.Кассы", 					НСтр("ru='Касса'"));
		СписокВыбора.Добавить("СправочникСсылка.ФизическиеЛица", 			НСтр("ru='Физическое лицо'"));
		СписокВыбора.Добавить("СправочникСсылка.НаправленияДеятельности", 	НСтр("ru='Направление деятельности'"));
		СписокВыбора.Добавить("СправочникСсылка.ДоговорыКредитовИДепозитов",НСтр("ru='Договор кредита (депозита)'"));
		СписокВыбора.Добавить("СправочникСсылка.МаркетинговыеМероприятия", 	НСтр("ru='Маркетинговое мероприятие'"));
		СписокВыбора.Добавить("СправочникСсылка.ПретензииКлиентов", 		НСтр("ru='Претензия клиента'"));
		СписокВыбора.Добавить("СправочникСсылка.Проекты", 					НСтр("ru='Проект'"));
		СписокВыбора.Добавить("СправочникСсылка.Склады", 					НСтр("ru='Склад (Место хранения)'"));
		СписокВыбора.Добавить("СправочникСсылка.Номенклатура", 				НСтр("ru='Номенклатура'"));
		СписокВыбора.Добавить("СправочникСсылка.ПрочиеРасходы", 			НСтр("ru='Прочие расходы'"));
		
	КонецЕсли;
	
	УстановитьВидимостьТиповЗначенийАналитики();
		
КонецПроцедуры


#КонецОбласти

#КонецОбласти
