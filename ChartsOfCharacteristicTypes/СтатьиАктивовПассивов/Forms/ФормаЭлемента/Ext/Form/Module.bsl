
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	// Подсистема запрета редактирования ключевых реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") И Параметры.ЗначенияЗаполнения.Свойство("АктивПассив") Тогда
			Объект.АктивПассив = Параметры.ЗначенияЗаполнения.АктивПассив;
		Иначе
			Объект.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
		КонецЕсли;
	КонецЕсли;
	ЗаполнитьСписокВыбораТиповЗначенийАналитики();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ПустаяСтрока(ТипЗначения) Тогда
		ТекущийОбъект.ТипЗначения = Новый ОписаниеТипов(ТипЗначения);
	КонецЕсли;
	Если АктивПассив = "Актив" Тогда
		ТекущийОбъект.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	ИначеЕсли АктивПассив = "АктивПассив" Тогда
		ТекущийОбъект.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.АктивПассив;
	Иначе
		ТекущийОбъект.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УстановитьПризнакАктивПассив();
	УстановитьТипЗначения(Объект.ТипЗначения);
	УправлениеВидимостью();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// подсистема запрета редактирования ключевых реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	
	УправлениеВидимостью();
	
КонецПроцедуры

&НаКлиенте
Процедура АктивПассивПриИзменении(Элемент)
	ЗаполнитьСписокВыбораТиповЗначенийАналитики()
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗначенияПрочихАктивовПассивов(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = Нстр("ru = 'Данные еще не записаны.
		|Переход к значениям прочих активов и пассивов возможен только после записи данных.
		|Данные будут записаны.'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗначенияПрочихАктивовПассивовЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	КонецЕсли;
	
	ЗначенияПрочихАктивовПассивовФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПрочихАктивовПассивовЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;

	Если НЕ Записать() Тогда
		Возврат;
	КонецЕсли;

	ЗначенияПрочихАктивовПассивовФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПрочихАктивовПассивовФрагмент()

	СтруктураОтбора = Новый Структура("Владелец", Объект.Ссылка);
	ПараметрыФормы = Новый структура("Отбор", СтруктураОтбора);
	ОткрытьФорму("Справочник.ПрочиеАктивыПассивы.ФормаСписка", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УправлениеЭлементамиФормы

&НаКлиенте
Процедура УправлениеВидимостью()
	
	Элементы.ЗначенияПрочихАктивовПассивов.Видимость = (ТипЗначения = "СправочникСсылка.ПрочиеАктивыПассивы");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораТиповЗначенийАналитики()
	
	СписокТиповЗначенийАналитик = Новый СписокЗначений;
	Элементы.ТипЗначения.СписокВыбора.Очистить();
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения") Тогда
		СписокТиповЗначенийАналитик.Добавить("СправочникСсылка.СтруктураПредприятия", НСтр("ru = 'Подразделение'"));
	КонецЕсли;
	СписокТиповЗначенийАналитик.Добавить("СправочникСсылка.ФизическиеЛица", НСтр("ru = 'Физическое лицо'"));
	СписокТиповЗначенийАналитик.Добавить("СправочникСсылка.Партнеры", НСтр("ru = 'Партнер'"));
	СписокТиповЗначенийАналитик.Добавить("СправочникСсылка.Контрагенты", НСтр("ru = 'Контрагент'"));
	СписокТиповЗначенийАналитик.Добавить("СправочникСсылка.Номенклатура", НСтр("ru = 'Позиция номенклатуры'"));
	СписокТиповЗначенийАналитик.Добавить("СправочникСсылка.БанковскиеСчетаОрганизаций", НСтр("ru = 'Банковский счет организации'"));
	СписокТиповЗначенийАналитик.Добавить("СправочникСсылка.СтатьиДвиженияДенежныхСредств", НСтр("ru = 'Статья движения денежных средств'"));
	СписокТиповЗначенийАналитик.Добавить("СправочникСсылка.Организации", НСтр("ru = 'Организация'"));
	СписокТиповЗначенийАналитик.Добавить("СправочникСсылка.Склады", НСтр("ru = 'Склад (складская территория)'"));
	СписокТиповЗначенийАналитик.Добавить("ПеречислениеСсылка.ТипыНалогов", НСтр("ru = 'Типы налогов'"));
	Если ПустаяСтрока(АктивПассив) Тогда
		АктивПассив = СтрЗаменить(Строка(Объект.АктивПассив), "/", "");
	КонецЕсли;
	Если АктивПассив = "Пассив" Тогда
		СписокТиповЗначенийАналитик.Добавить("СправочникСсылка.НаправленияДеятельности", НСтр("ru = 'Направление деятельности'"));
	КонецЕсли;

	Для Каждого ДобавляемыйЭлемент Из СписокТиповЗначенийАналитик Цикл
		Элементы.ТипЗначения.СписокВыбора.Добавить(ДобавляемыйЭлемент.Значение, ДобавляемыйЭлемент.Представление);
	КонецЦикла;
	
	Элементы.ТипЗначения.СписокВыбора.СортироватьПоПредставлению();
	Элементы.ТипЗначения.СписокВыбора.Добавить("СправочникСсылка.ПрочиеАктивыПассивы", НСтр("ru = 'Прочий актив или пассив'"));
	Элементы.ТипЗначения.СписокВыбора.Добавить("ПеречислениеСсылка.СтатьиБезАналитики", НСтр("ru = 'Без аналитики'"));
	
	// Установить подсказзки ввода
	Элементы.ПредставлениеДебетаСтатьи.ПодсказкаВвода = НСтр("ru = 'Увеличение'");
	Элементы.ПредставлениеКредитаСтатьи.ПодсказкаВвода = НСтр("ru = 'Уменьшение'");
	Если АктивПассив = "Пассив" Тогда
		Элементы.ПредставлениеДебетаСтатьи.ПодсказкаВвода = НСтр("ru = 'Уменьшение'");
		Элементы.ПредставлениеКредитаСтатьи.ПодсказкаВвода = НСтр("ru = 'Увеличение'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура УстановитьТипЗначения(ВыбранныйТипЗначения)
	
	СписокТиповЗначений = Новый СписокЗначений;
	СписокТиповЗначений.Добавить("СправочникСсылка.СтруктураПредприятия");
	СписокТиповЗначений.Добавить("СправочникСсылка.Партнеры");
	СписокТиповЗначений.Добавить("СправочникСсылка.Контрагенты");
	СписокТиповЗначений.Добавить("СправочникСсылка.Организации");
	СписокТиповЗначений.Добавить("СправочникСсылка.Склады");
	СписокТиповЗначений.Добавить("СправочникСсылка.Номенклатура");
	СписокТиповЗначений.Добавить("СправочникСсылка.ФизическиеЛица");
	СписокТиповЗначений.Добавить("СправочникСсылка.БанковскиеСчетаОрганизаций");
	СписокТиповЗначений.Добавить("СправочникСсылка.СтатьиДвиженияДенежныхСредств");
	СписокТиповЗначений.Добавить("СправочникСсылка.ПрочиеАктивыПассивы");
	СписокТиповЗначений.Добавить("ПеречислениеСсылка.ТипыНалогов");
	СписокТиповЗначений.Добавить("ПеречислениеСсылка.СтатьиБезАналитики");
	
	Для Каждого ЭлементСписка Из СписокТиповЗначений Цикл
		Если ВыбранныйТипЗначения.СодержитТип(Тип(ЭлементСписка.Значение)) Тогда
			ТипЗначения = ЭлементСписка.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПризнакАктивПассив()
	
	Если Объект.АктивПассив = ПредопределенноеЗначение("Перечисление.ВидыСтатейУправленческогоБаланса.Актив") Тогда
		АктивПассив = "Актив";
	ИначеЕсли Объект.АктивПассив = ПредопределенноеЗначение("Перечисление.ВидыСтатейУправленческогоБаланса.АктивПассив") Тогда
		АктивПассив = "АктивПассив";
	Иначе
		АктивПассив = "Пассив";
	КонецЕсли;
	
Конецпроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЭтоПредопределенныйЭлемент", Объект.Предопределенный);
		Результат = Неопределено;

		ОткрытьФорму("ПланВидовХарактеристик.СтатьиАктивовПассивов.Форма.РазблокированиеРеквизитов", ПараметрыФормы,,,,, Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
        ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
    ИначеЕсли ТипЗнч(Результат) = Тип("Строка") Тогда
        ПоказатьПредупреждение(Неопределено, Результат);
    КонецЕсли;

КонецПроцедуры

// СтандартныеПодсистемы.Свойства 

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()

	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ПоказыватьОборотПриИзменении(Элемент)

	УправлениеВидимостью();

КонецПроцедуры

#КонецОбласти

#КонецОбласти
