
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Сценарий = Параметры.Сценарий;
	ДатаПоступления = Параметры.ДатаПоступления;
	
	Периодичность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Сценарий, "Периодичность");
	
	Если НЕ ЗначениеЗаполнено(ДатаПоступления) Тогда
	
		ДатаПоступления = ТекущаяДатаСеанса();
	
	КонецЕсли;
	
	ДатаПоступления = ПланированиеКлиентСервер.РассчитатьДатуНачалаПериода(ДатаПоступления, Периодичность);
	
	Операция = "Перенос";
	
	ВариантПереноса = "НаЧисло";
	НомерДня = 1;
	
	ДобавлятьВариантПолугодия = Ложь;
	ДобавлятьВариантКвартала = Ложь;
	ДобавлятьВариантМесяца = Ложь;
	ДобавлятьВариантДекады = Ложь;
	ДобавлятьВариантНедели = Ложь;
	
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		Элементы.ВариантПереноса.СписокВыбора[0].Представление = НСтр("ru = 'На день года'");
		Элементы.НомерДня.МаксимальноеЗначение = 365;
		Элементы.КоличествоПериодов.МаксимальноеЗначение = 365;
		
		ДобавлятьВариантПолугодия = Истина;
		ДобавлятьВариантКвартала = Истина;
		ДобавлятьВариантМесяца = Истина;
		ДобавлятьВариантДекады = Истина;
		ДобавлятьВариантНедели = Истина;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Полугодие Тогда
		Элементы.ВариантПереноса.СписокВыбора[0].Представление = НСтр("ru = 'На день полугодия'");
		Элементы.НомерДня.МаксимальноеЗначение = 182;
		Элементы.КоличествоПериодов.МаксимальноеЗначение = 182;
		
		ДобавлятьВариантКвартала = Истина;
		ДобавлятьВариантМесяца = Истина;
		ДобавлятьВариантДекады = Истина;
		ДобавлятьВариантНедели = Истина;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		Элементы.ВариантПереноса.СписокВыбора[0].Представление = НСтр("ru = 'На день квартала'");
		Элементы.НомерДня.МаксимальноеЗначение = 90;
		Элементы.КоличествоПериодов.МаксимальноеЗначение = 90;
		
		ДобавлятьВариантМесяца = Истина;
		ДобавлятьВариантДекады = Истина;
		ДобавлятьВариантНедели = Истина;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		Элементы.ВариантПереноса.СписокВыбора[0].Представление = НСтр("ru = 'На число месяца'");
		Элементы.НомерДня.МаксимальноеЗначение = 31;
		Элементы.КоличествоПериодов.МаксимальноеЗначение = 31;
		
		ДобавлятьВариантДекады = Истина;
		ДобавлятьВариантНедели = Истина;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Декада Тогда
		Элементы.ВариантПереноса.СписокВыбора[0].Представление = НСтр("ru = 'На день в декаде'");
		Элементы.НомерДня.МаксимальноеЗначение = 10;
		Элементы.КоличествоПериодов.МаксимальноеЗначение = 10;
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
		Элементы.ВариантПереноса.СписокВыбора[0].Представление = НСтр("ru = 'На день недели'");
		Элементы.НомерДня.МаксимальноеЗначение = 7;
		Элементы.КоличествоПериодов.МаксимальноеЗначение = 7;
	КонецЕсли; 
	Если Периодичность <> Перечисления.Периодичность.Месяц Тогда
		Элементы.НомерДня.Подсказка = "";
	КонецЕсли;
	
	Элементы.ВариантРаспределнияДат.СписокВыбора.Очистить();
	Элементы.ГруппаРаспределениеПоНеделям.Видимость = Ложь;
	
	Если ДобавлятьВариантПолугодия Тогда
		Элементы.ВариантРаспределнияДат.СписокВыбора.Добавить("ПоПолугодиям", НСтр("ru = 'По полугодиям'"));
	КонецЕсли;
	Если ДобавлятьВариантКвартала Тогда
		Элементы.ВариантРаспределнияДат.СписокВыбора.Добавить("ПоКварталам", НСтр("ru = 'По кварталам'"));
	КонецЕсли;
	Если ДобавлятьВариантМесяца Тогда
		Элементы.ВариантРаспределнияДат.СписокВыбора.Добавить("ПоМесяцам", НСтр("ru = 'По месяцам'"));
	КонецЕсли;
	Если ДобавлятьВариантДекады Тогда
		Элементы.ВариантРаспределнияДат.СписокВыбора.Добавить("ПоДекадам", НСтр("ru = 'По декадам'"));
	КонецЕсли;
	Если ДобавлятьВариантНедели Тогда
		Элементы.ГруппаРаспределениеПоНеделям.Видимость = Истина;
	КонецЕсли;
	
	Элементы.ВариантРаспределнияДат.Видимость = Элементы.ВариантРаспределнияДат.СписокВыбора.Количество() > 0;
	
	ДеньНедели = Перечисления.ДниНедели.Понедельник;
	
	ВариантРаспределенияДат = "ПоНеделям";
	ВариантРаспределенияКоличества = "Пропорционально";
	
	ОтметитьКЗаказу = Истина;
	РасчитатьКоличествоПериодовПоУмолчанию(КоличествоПериодов, Периодичность, ВариантРаспределенияДат);
	
	// Считываем сохраненный предыдущий выбор
	ПараметрыРаспределения = ОбщегоНазначения.ХранилищеНастроекДанныхФормЗагрузить(
		Строка(Объект.Сценарий.УникальныйИдентификатор()),
		"ПараметрыРаспределения");
	Если ТипЗнч(ПараметрыРаспределения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыРаспределения,, "Доли");
		РасчитатьКоличествоПериодовПоУмолчанию(КоличествоПериодов, Периодичность, ВариантРаспределенияДат);
		
		Если ПараметрыРаспределения.Свойство("Доли") И ВариантРаспределенияКоличества <> "Пропорционально" Тогда
			
			Для каждого Доля Из ПараметрыРаспределения.Доли Цикл
			
				НоваяСтрока = Доли.Добавить();
				НоваяСтрока.Доля = Доля;
			
			КонецЦикла;
			
		КонецЕсли; 
	КонецЕсли;
	
	ЗаполнитьДоли(Доли, КоличествоПериодов, ВариантРаспределенияДат);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОперацияПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПереносаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерДняПриИзменении(Элемент)
	
	ОбновитьПодсказкуПереноса();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеньНеделиПервыйПриИзменении(Элемент)
	
	ОбновитьПодсказкуПереноса();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеньНеделиПоследнийПриИзменении(Элемент)
	
	ОбновитьПодсказкуПереноса();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантРаспределенияДатПриИзменении(Элемент)
	
	РасчитатьКоличествоПериодовПоУмолчанию(КоличествоПериодов, Периодичность, ВариантРаспределенияДат);
	
	ЗаполнитьДоли(Доли, КоличествоПериодов, ВариантРаспределенияДат);
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеньНеделиРаспределениеПриИзменении(Элемент)
	
	ОбновитьПодсказкуРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПериодовПриИзменении(Элемент)
	
	ЗаполнитьДоли(Доли, КоличествоПериодов, ВариантРаспределенияДат);
	ОбновитьПодсказкуРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантРаспределенияКоличестваПриИзменении(Элемент)
	
	Если ВариантРаспределенияКоличества = "Пропорционально" Тогда
		
		Доли.Очистить();
		ЗаполнитьДоли(Доли, КоличествоПериодов, ВариантРаспределенияДат);
		
	КонецЕсли; 
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДоли
//Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	Если ВариантРаспределенияКоличества = "ПоДолям" И Элементы.СтраницыРаспределение.ТекущаяСтраница = Элементы.ГруппаОсновное Тогда
		
		Элементы.СтраницыРаспределение.ТекущаяСтраница = Элементы.ГруппаДоли;
		УстановитьВидимость();
		
	Иначе
		// сохраняем настройки
		ПараметрыРаспределения = СформироватьИСохранитьНастройкиНаСервере();
		
		Закрыть(ПараметрыРаспределения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Элементы.СтраницыРаспределение.ТекущаяСтраница = Элементы.ГруппаОсновное;
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимость()

	Если Операция = "Перенос" Тогда
	
		Элементы.ГруппаПеренос.Видимость = Истина;
		Элементы.СтраницыРаспределение.Видимость = Ложь;
		Элементы.ВариантРаспределенияКоличества.Видимость = Ложь;
		Элементы.ТочностьОкругления.Видимость = Ложь;
		
		ОбновитьПодсказкуПереноса();
		
		Элементы.ФормаДалее.Заголовок = НСтр("ru = 'Перенести'");
		
		Элементы.НомерДня.Видимость = ВариантПереноса = "НаЧисло";
		Элементы.ДеньНеделиПервый.Видимость = ВариантПереноса = "НаПервыйДеньНедели";
		Элементы.ДеньНеделиПоследний.Видимость = ВариантПереноса = "НаПоследнийДеньНедели";
		
	ИначеЕсли Операция = "Распределение" Тогда
		
		Элементы.ГруппаПеренос.Видимость = Ложь;
		Элементы.СтраницыРаспределение.Видимость = Истина;
		Элементы.ВариантРаспределенияКоличества.Видимость = Истина;
		Элементы.ТочностьОкругления.Видимость = Истина;
		
		ОбновитьПодсказкуРаспределения();
		
		Элементы.КоличествоПериодов.Видимость = ВариантРаспределенияДат = "ПоПериодам";
		Элементы.ДеньНеделиРаспределение.Видимость = ВариантРаспределенияДат = "ПоНеделям";
		
		Если ВариантРаспределенияКоличества = "Пропорционально" ИЛИ Элементы.СтраницыРаспределение.ТекущаяСтраница = Элементы.ГруппаДоли Тогда
		
		
			Элементы.ФормаДалее.Заголовок = НСтр("ru = 'Распределить'");
		
		
		Иначе
		
			Элементы.ФормаДалее.Заголовок = НСтр("ru = 'Далее >'");
		
		КонецЕсли;
		
	КонецЕсли; 
	
	Если Операция = "Распределение" 
		И ВариантРаспределенияКоличества = "ПоДолям" 
		И Элементы.СтраницыРаспределение.ТекущаяСтраница = Элементы.ГруппаДоли Тогда
		Элементы.ФормаНазад.Видимость = Истина;
	Иначе
		Элементы.ФормаНазад.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПодсказкуПереноса()

	ШаблонПодсказки = НСтр("ru = 'Например, дата поступления %ТекущаяДатаПоступления% будет перенесена на %НоваяДатаПоступления%.'");
	
	Если ВариантПереноса = "НаЧисло" Тогда
	
		НоваяДатаПоступления = ДатаПоступления + (НомерДня-1) * 86400;
	
	ИначеЕсли ВариантПереноса = "НаПервыйДеньНедели" Тогда
		
		НомерДняНедели = НомерДняНедели(ДеньНедели);
		ТекущийНомерДняНедели = ДеньНедели(ДатаПоступления);
		
		Если ТекущийНомерДняНедели > НомерДняНедели Тогда
		
			НоваяДатаПоступления = ДатаПоступления + (7 + НомерДняНедели - ТекущийНомерДняНедели) * 86400;
			
		ИначеЕсли ТекущийНомерДняНедели < НомерДняНедели Тогда
			НоваяДатаПоступления = ДатаПоступления + (НомерДняНедели - ТекущийНомерДняНедели) * 86400;
		Иначе
			НоваяДатаПоступления = ДатаПоступления;
		КонецЕсли; 
		
	ИначеЕсли ВариантПереноса = "НаПоследнийДеньНедели" Тогда
		
		НомерДняНедели = НомерДняНедели(ДеньНедели);
		ТекущийНомерДняНедели = ДеньНедели(ПланированиеКлиентСерверПовтИсп.РассчитатьДатуОкончанияПериода(ДатаПоступления, Периодичность));
		
		Если ТекущийНомерДняНедели > НомерДняНедели Тогда
		
			НоваяДатаПоступления = ПланированиеКлиентСерверПовтИсп.РассчитатьДатуОкончанияПериода(ДатаПоступления, Периодичность) - (ТекущийНомерДняНедели - НомерДняНедели) * 86400;
			
		ИначеЕсли ТекущийНомерДняНедели < НомерДняНедели Тогда
			НоваяДатаПоступления = ПланированиеКлиентСерверПовтИсп.РассчитатьДатуОкончанияПериода(ДатаПоступления, Периодичность) - (7 - НомерДняНедели + ТекущийНомерДняНедели) * 86400;
		Иначе
			НоваяДатаПоступления = ПланированиеКлиентСерверПовтИсп.РассчитатьДатуОкончанияПериода(ДатаПоступления, Периодичность);
		КонецЕсли;
	
	КонецЕсли; 
	
	ШаблонПодсказки = СтрЗаменить(ШаблонПодсказки, "%ТекущаяДатаПоступления%", Формат(ДатаПоступления, "ДЛФ=D"));
	ШаблонПодсказки = СтрЗаменить(ШаблонПодсказки, "%НоваяДатаПоступления%", Формат(НоваяДатаПоступления, "ДЛФ=D"));
	ПодсказкаПереноса = ШаблонПодсказки;

КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьПодсказкуРаспределения()
	
	Если ВариантРаспределенияДат = "ПоНеделям" Тогда
		
		ШаблонПодсказки = НСтр("ru = 'Например, поступление %ТекущаяДатаПоступления% распределено на %КоличествоПериодов% периода(ов), в зависимости от конкретного месяца. Поступления будут в %ДеньНедели%.'");
		СтрокаКоличествоПериодов = Формат(КоличествоПериодов-1, "ЧДЦ=; ЧГ=0") + "("+Формат(КоличествоПериодов, "ЧДЦ=; ЧГ=0") + ")" ;
		ШаблонПодсказки = СтрЗаменить(ШаблонПодсказки, "%КоличествоПериодов%", СтрокаКоличествоПериодов);
		ШаблонПодсказки = СтрЗаменить(ШаблонПодсказки, "%ДеньНедели%", Элементы.ДеньНеделиРаспределение.СписокВыбора.НайтиПоЗначению(ДеньНедели).Представление);
	
	ИначеЕсли ВариантРаспределенияДат = "ПоДекадам" Тогда
		
		ШаблонПодсказки = НСтр("ru = 'Например, поступление %ТекущаяДатаПоступления% распределено на 3 декады. Даты поступления установлены на 1, 11 и 21 число месяца.'");
		
	ИначеЕсли ВариантРаспределенияДат = "ПоПериодам" Тогда
		
		ШаблонПодсказки = НСтр("ru = 'Например, поступление %ТекущаяДатаПоступления% распределено на %КоличествоПериодов% периода(ов). Даты поступления установлены первый день каждого периода.'");
		СтрокаКоличествоПериодов = Формат(КоличествоПериодов, "ЧДЦ=; ЧГ=0") ;
		ШаблонПодсказки = СтрЗаменить(ШаблонПодсказки, "%КоличествоПериодов%", СтрокаКоличествоПериодов);
	КонецЕсли; 
	
	ШаблонПодсказки = СтрЗаменить(ШаблонПодсказки, "%ТекущаяДатаПоступления%", Формат(ДатаПоступления, "ДЛФ=D"));
	ПодсказкаРаспределение = ШаблонПодсказки;

КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Функция НомерДняНедели(ДеньНедели)

	Возврат ПланированиеКлиентСервер.НомерДняНедели(ДеньНедели);

КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДоли(Доли, КоличествоПериодов, ВариантРаспределенияДат)
	
	Если ВариантРаспределенияДат = "ПоПолугодиям" Тогда
		
		ПредставлениеПериода = НСтр("ru = 'полугодие'");
		ПредставлениеПоследнегоПериода = НСтр("ru = 'полугодие'");
		
	ИначеЕсли ВариантРаспределенияДат = "ПоКварталам" Тогда
		
		ПредставлениеПериода = НСтр("ru = 'квартал'");
		ПредставлениеПоследнегоПериода = НСтр("ru = 'квартал'");
		
	ИначеЕсли ВариантРаспределенияДат = "ПоМесяцам" Тогда
		
		ПредставлениеПериода = НСтр("ru = 'месяц'");
		ПредставлениеПоследнегоПериода = НСтр("ru = 'месяц'");
		
	ИначеЕсли ВариантРаспределенияДат = "ПоНеделям" Тогда
		
		ПредставлениеПериода = НСтр("ru = 'неделя'");
		ПредставлениеПоследнегоПериода = НСтр("ru = 'неделя (если есть)'");
		
	ИначеЕсли ВариантРаспределенияДат = "ПоДекадам" Тогда
		
		ПредставлениеПериода = НСтр("ru = 'декада'");
		ПредставлениеПоследнегоПериода = НСтр("ru = 'декада'");
		
	ИначеЕсли ВариантРаспределенияДат = "ПоПериодам" Тогда
		
		ПредставлениеПериода = НСтр("ru = 'период'");
		ПредставлениеПоследнегоПериода = НСтр("ru = 'период (если есть)'");
		
	КонецЕсли;
	
	Если КоличествоПериодов = Доли.Количество() Тогда
		
		Для каждого СтрокаТЧ Из Доли Цикл
			
			Период = Доли.Индекс(СтрокаТЧ) + 1;
			СтрокаТЧ.Период = Период;
			Если КоличествоПериодов = Период Тогда
				СтрокаТЧ.Представление = Строка(Период) + " " + ПредставлениеПоследнегоПериода;
			Иначе
				СтрокаТЧ.Представление = Строка(Период) + " " + ПредставлениеПериода;
			КонецЕсли;
			Если ВариантРаспределенияДат = "ПоДекадам" Тогда
				Если (Период % 3) = 1  Тогда
					СтрокаТЧ.Представление = СтрокаТЧ.Представление + НСтр("ru = ': с 1 по 10'");
				ИначеЕсли (Период % 3) = 2 Тогда
					СтрокаТЧ.Представление = СтрокаТЧ.Представление + НСтр("ru = ': с 11 по 20'");
				Иначе
					СтрокаТЧ.Представление = СтрокаТЧ.Представление + НСтр("ru = ': с 21'");
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла; 
	Иначе
	
		Доли.Очистить();
		
		Для Период =1 По КоличествоПериодов Цикл
			
			НоваяСтрока = Доли.Добавить();
			
			НоваяСтрока.Период = Период;
			Если КоличествоПериодов = Период Тогда
				НоваяСтрока.Представление = Строка(Период) + " " + ПредставлениеПоследнегоПериода;
			Иначе
				НоваяСтрока.Представление = Строка(Период) + " " + ПредставлениеПериода;
			КонецЕсли; 
			НоваяСтрока.Доля = 1;
			Если ВариантРаспределенияДат = "ПоДекадам" Тогда
				Если (Период % 3) = 1  Тогда
					НоваяСтрока.Представление = НоваяСтрока.Представление + НСтр("ru = ': с 1 по 10'");
				ИначеЕсли (Период % 3) = 2 Тогда
					НоваяСтрока.Представление = НоваяСтрока.Представление + НСтр("ru = ': с 11 по 20'");
				Иначе
					НоваяСтрока.Представление = НоваяСтрока.Представление + НСтр("ru = ': с 21'");
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла; 
	
	КонецЕсли; 

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РасчитатьКоличествоПериодовПоУмолчанию(КоличествоПериодов, Периодичность, ВариантРаспределенияДат)

	Если ВариантРаспределенияДат = "ПоПериодам" Тогда
		Возврат;
	КонецЕсли;
	
	Если ВариантРаспределенияДат = "ПоПолугодиям" Тогда
		
		Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
			КоличествоПериодов = 2;
		Иначе
			КоличествоПериодов = 1;
		КонецЕсли; 
		
	ИначеЕсли ВариантРаспределенияДат = "ПоКварталам" Тогда
		
		Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
			КоличествоПериодов = 4;
		ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие") Тогда
			КоличествоПериодов = 2;
		Иначе
			КоличествоПериодов = 1;
		КонецЕсли; 
		
	ИначеЕсли ВариантРаспределенияДат = "ПоМесяцам" Тогда
		
		Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
			КоличествоПериодов = 12;
		ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие") Тогда
			КоличествоПериодов = 6;
		ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
			КоличествоПериодов = 3;
		Иначе
			КоличествоПериодов = 1;
		КонецЕсли; 
		
	ИначеЕсли ВариантРаспределенияДат = "ПоНеделям" Тогда
		
		Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
			КоличествоПериодов = 54;
		ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие") Тогда
			КоличествоПериодов = 27;
		ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
			КоличествоПериодов = 14;
		ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц") Тогда
			КоличествоПериодов = 5;
		ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада") Тогда
			КоличествоПериодов = 2;
		Иначе
			КоличествоПериодов = 1;
		КонецЕсли; 
		
	ИначеЕсли ВариантРаспределенияДат = "ПоДекадам" Тогда
	
		Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
			КоличествоПериодов = 36;
		ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие") Тогда
			КоличествоПериодов = 18;
		ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
			КоличествоПериодов = 9;
		ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц") Тогда
			КоличествоПериодов = 3;
		Иначе
			КоличествоПериодов = 1;
		КонецЕсли; 
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьИСохранитьНастройкиНаСервере()
	
	ПараметрыРаспределения = Новый Структура;
	ПараметрыРаспределения.Вставить("Операция", Операция);
	
	ПараметрыРаспределения.Вставить("ВариантПереноса", ВариантПереноса);
	ПараметрыРаспределения.Вставить("НомерДня", НомерДня);
	ПараметрыРаспределения.Вставить("ДеньНедели", ДеньНедели);
	
	ПараметрыРаспределения.Вставить("ВариантРаспределенияДат", ВариантРаспределенияДат);
	ПараметрыРаспределения.Вставить("КоличествоПериодов", КоличествоПериодов);
	ПараметрыРаспределения.Вставить("ВариантРаспределенияКоличества", ВариантРаспределенияКоличества);
	ПараметрыРаспределения.Вставить("ТочностьОкругления", ТочностьОкругления);
	ПараметрыРаспределения.Вставить("ОтметитьКЗаказу", ОтметитьКЗаказу);
	ПараметрыРаспределения.Вставить("Доли", Доли.Выгрузить(,"Доля").ВыгрузитьКолонку("Доля"));
	
	// Сохраняем настройки в разрезе сценария
	
	ОбщегоНазначения.ХранилищеНастроекДанныхФормСохранить(
		Строка(Объект.Сценарий.УникальныйИдентификатор()),
		"ПараметрыРаспределения",
		ПараметрыРаспределения);
	
	Возврат ПараметрыРаспределения;

КонецФункции
 
#КонецОбласти
