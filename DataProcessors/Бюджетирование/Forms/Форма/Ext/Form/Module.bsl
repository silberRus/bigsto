
&НаСервере
Функция ПолучитьДанные()
	
	//РасчДанные = Бюджетирование.ПолучитьДанныеДляРасчетаСистемныхДокументов(Период);
	//РасчДанные.Новые 	= КонвертацияТипов.ПолучитьМассивИзТаблицыЗначений(КонвертацияТипов.ПолучитьМассивИзТаблицыЗначений(РасчДанные.Новые));
	//РасчДанные.Старые 	= КонвертацияТипов.ПолучитьМассивИзТаблицыЗначений(КонвертацияТипов.ПолучитьМассивИзТаблицыЗначений(РасчДанные.Старые));
	//
	//Возврат РасчДанные;
	
КонецФункции
&НаСервере
Функция РасчитатьБюджет()
	
	РасчДанные = Бюджетирование.ПолучитьДанныеДляРасчетаСистемныхДокументов(Период);
	
	Бюджетирование.СформироватьРасчетСтарыхДокументов(РасчДанные.Старые);
	Бюджетирование.СформироватьРасчетНовыхДокументов(РасчДанные.Новые);
	
	Возврат Истина;
		
КонецФункции

&НаКлиенте
Процедура ОтветНаПересчет(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		текДата = ТекущаяДата();
		
		
		РасчитатьБюджет();
		
		//РасчДанные 	= ПолучитьДанные();
		//Кол 		= РасчДанные.Новые.Количество() + РасчДанные.Старые.Количество();
		//Ном 		= 0;
		//
		//Для Каждого Старый Из РасчДанные.Старые Цикл Ном = Ном + 1; ОбработкаПрерыванияПользователя();
		//	Состояние("Пересчитываем данные", Ном / Кол * 100, Старый.Сценарий);
		//	РасчитатьБюджет(Старый);
		//КонецЦикла;
		//
		//Для Каждого Нов Из РасчДанные.Новые Цикл Ном = Ном + 1; ОбработкаПрерыванияПользователя();
		//	Состояние("Пересчитываем данные", Ном / Кол * 100, Нов.Сценарий);
		//	РасчитатьБюджет(Нов);
		//КонецЦикла;
		
		ПоследнееВыполнение = ТекущаяДата() - текДата;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Рассчитать(Команда)
	
	Если Период.ДатаНачала <> '00010101' И Период.ДатаОкончания <> '00010101' Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ОтветНаПересчет", ЭтаФорма),
				"Перезаписать все системные документы бюджетирования за указанный период?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
	Элементы.СисДоки.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоследнееВыполнение 		= Константы.ЗатраченноеВремяПоследнегоОбновленияБюджета.Получить();
	ДатаЗапретаРедактирования 	= Константы.ДатаЗапретаИзмененийБюджета.Получить();
	ПрочитатьРеглЗадание();
	
КонецПроцедуры

&НаСервере
Процедура установитьДатаЗапретаРедактирования();
	
	Константы.ДатаЗапретаИзмененийБюджета.Установить(ДатаЗапретаРедактирования);
	
КонецПроцедуры
&НаКлиенте
Процедура ДатаЗапретаРедактированияПриИзменении(Элемент)
	
	установитьДатаЗапретаРедактирования();
	
КонецПроцедуры

#Область Робот

&НаСервере
Процедура ОбновитьНадписьРасписания()
	
	Элементы.РасписаниеРобота.Заголовок = ПолучитьРеглЗадание().Расписание;
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьРеглЗадание()
	
	реглЗадания 	= ПолучитьРеглЗадание();
	РоботАктивный 	= реглЗадания.Использование;
	ОбновитьНадписьРасписания();
	
КонецФункции

&НаСервере
Функция ПолучитьРеглЗадание()
	
	Возврат РегламентныеЗадания.НайтиПредопределенное("РасчетДанныхБюджетирования");
	
КонецФункции
&НаСервере
Функция УстановитьРасписаниеРеглЗаданию(Расписание)
	
	текРегл = ПолучитьРеглЗадание();
	текРегл.Расписание 	= Расписание;
	текРегл.Записать();
	
	ОбновитьНадписьРасписания();
	
КонецФункции
&НаКлиенте
Процедура ПолученоНовоеРасписание(Расписание, ДопПараметры) Экспорт
	
	Если Расписание <> Неопределено Тогда
		
		УстановитьРасписаниеРеглЗаданию(Расписание);
	
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура РасписаниеРоботаНажатие(Элемент)
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(ПолучитьРасписание());
	Диалог.Показать(Новый ОписаниеОповещения("ПолученоНовоеРасписание", ЭтаФорма));
	
КонецПроцедуры
&НаСервере
Функция ПолучитьРасписание()
	
	Возврат ПолучитьРеглЗадание().Расписание;
	
КонецФункции
&НаСервере
Функция ИзменитьАктивностьЗадания()
	
	текРегл = ПолучитьРеглЗадание();
	текРегл.Использование = РоботАктивный;
	текРегл.Записать();
	
КонецФункции
&НаКлиенте
Процедура РоботАктивныйПриИзменении(Элемент)
	
	ИзменитьАктивностьЗадания();
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьРобота()
	
	Бюджетирование.РаботаРобота();
	
КонецПроцедуры

&НаКлиенте
Процедура Декорация1Нажатие(Элемент)
	
	ЗапуститьРобота();
	Элементы.СисДоки.Обновить();
	
КонецПроцедуры

#КонецОбласти