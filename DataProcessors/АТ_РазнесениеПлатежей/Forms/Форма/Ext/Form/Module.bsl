
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НачалоПериода = Параметры.НачалоПериода;
	КонецПериода = Параметры.КонецПериода;
	БанковскийСчет = Параметры.БанковскийСчет;
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура ОбновитьДанные()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПоступлениеБезналичныхДенежныхСредств.Контрагент = НЕОПРЕДЕЛЕНО
	|				ИЛИ ПоступлениеБезналичныхДенежныхСредств.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Выбран,
	|	ПоступлениеБезналичныхДенежныхСредств.Ссылка КАК Ссылка,
	|	ПоступлениеБезналичныхДенежныхСредств.Дата КАК Дата,
	|	ПоступлениеБезналичныхДенежныхСредств.Номер КАК Номер,
	|	ПоступлениеБезналичныхДенежныхСредств.СуммаДокумента КАК Сумма,
	|	ПоступлениеБезналичныхДенежныхСредств.Контрагент КАК Контрагент,
	|	ПоступлениеБезналичныхДенежныхСредств.Контрагент.Партнер КАК Партнер,
	|	ПоступлениеБезналичныхДенежныхСредств.НазначениеПлатежа КАК НазначениеПлатежа
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ПоступлениеБезналичныхДенежныхСредств
	|ГДЕ
	|	НЕ ПоступлениеБезналичныхДенежныхСредств.Проведен
	|	И НЕ ПоступлениеБезналичныхДенежныхСредств.ПометкаУдаления
	|	И ПоступлениеБезналичныхДенежныхСредств.БанковскийСчет = &БанковскийСчет
	|	И ПоступлениеБезналичныхДенежныхСредств.Дата МЕЖДУ &НачалоПериода И &КонецПериода";
	Запрос.УстановитьПараметр("БанковскийСчет", БанковскийСчет);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	СписокБанковскихДокументов.Загрузить(Выгрузка);
	
	ЕстьВыбранные = Выгрузка.Найти(Истина, "Выбран");
	Выбран = ?(ЕстьВыбранные = Неопределено, Ложь, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьДокументыНаСервере()
	
	ТаблицаДокументов = СписокБанковскихДокументов.Выгрузить(Новый Структура("Выбран", Истина));
	СписокКонтрагентов = ТаблицаДокументов.ВыгрузитьКолонку("Контрагент");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетыСКлиентамиПоДокументамОстатки.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РасчетыСКлиентамиПоДокументамОстатки.ЗаказКлиента КАК ЗаказКлиента,
	|	РасчетыСКлиентамиПоДокументамОстатки.РасчетныйДокумент КАК РасчетныйДокумент,
	|	РасчетыСКлиентамиПоДокументамОстатки.Валюта КАК Валюта,
	|	РасчетыСКлиентамиПоДокументамОстатки.ДолгОстаток КАК ДолгОстаток,
	|	РасчетыСКлиентамиПоДокументамОстатки.ПредоплатаОстаток КАК ПредоплатаОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам.Остатки(
	|			,
	|			АналитикаУчетаПоПартнерам.Организация = &Организация
	|				И АналитикаУчетаПоПартнерам.Контрагент В (&СписокКонтрагентов)
	|				И Валюта = &Валюта) КАК РасчетыСКлиентамиПоДокументамОстатки
	|ГДЕ
	|	РасчетыСКлиентамиПоДокументамОстатки.ДолгОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетыСКлиентамиПоДокументамОстатки.РасчетныйДокумент.Дата";
	
	РеквизитыБанковскогоСчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(БанковскийСчет, "Владелец, ВалютаДенежныхСредств");
	
	Запрос.УстановитьПараметр("Валюта", РеквизитыБанковскогоСчета.ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("Организация", РеквизитыБанковскогоСчета.Владелец);
	Запрос.УстановитьПараметр("СписокКонтрагентов", СписокКонтрагентов);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("СтатьяДвиженияДенежныхСредств", Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента);
	СтруктураЗаполнения.Вставить("Организация", РеквизитыБанковскогоСчета.Владелец);
	СтруктураЗаполнения.Вставить("ВалютаВзаиморасчетов", РеквизитыБанковскогоСчета.ВалютаДенежныхСредств);
	
	Для Каждого СтрокаДокумент Из ТаблицаДокументов Цикл
		
		ДокументОбъект = СтрокаДокумент.Ссылка.ПолучитьОбъект();
		ДокументОбъект.РасшифровкаПлатежа.Очистить();
		
		СуммаДокумента = ДокументОбъект.СуммаДокумента;
		СтруктураЗаполнения.Вставить("Партнер", СтрокаДокумент.Партнер);
		
		МассивСтрок = ТаблицаРезультат.НайтиСтроки(Новый Структура("Контрагент", СтрокаДокумент.Контрагент));
		
		Если МассивСтрок.Количество() > 0 Тогда
			
			Для Каждого СтрокаРезультат Из МассивСтрок Цикл
				
				Если СуммаДокумента = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если СуммаДокумента >= СтрокаРезультат.ДолгОстаток Тогда
					Сумма = СтрокаРезультат.ДолгОстаток;
					РасчетныйДокумент = СтрокаРезультат.РасчетныйДокумент;
					ТаблицаРезультат.Удалить(СтрокаРезультат);
				Иначе
					Сумма = СуммаДокумента;
					СтрокаРезультат.ДолгОстаток = СтрокаРезультат.ДолгОстаток - СуммаДокумента;
				КонецЕсли;
				
				ДобавитьСтрокуРасшивровкиПлатежа(ДокументОбъект, СтруктураЗаполнения, РасчетныйДокумент, Сумма);
				
				СуммаДокумента = СуммаДокумента - Сумма;
				
			КонецЦикла;
			
			Если СуммаДокумента <> 0 Тогда
				
				Договор = ПолучитьДоговор(СтрокаДокумент.Контрагент);
				ДобавитьСтрокуРасшивровкиПлатежа(ДокументОбъект, СтруктураЗаполнения, Договор, СуммаДокумента);
				
			КонецЕсли;
			
		Иначе
			
			Договор = ПолучитьДоговор(СтрокаДокумент.Контрагент);
			ДобавитьСтрокуРасшивровкиПлатежа(ДокументОбъект, СтруктураЗаполнения, Договор, СуммаДокумента);
			
		КонецЕсли;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьСтрокуРасшивровкиПлатежа(ДокументОбъект, СтруктураЗаполнения, ОснованиеПлатежа, Сумма)
	
	НоваяСтрока = ДокументОбъект.РасшифровкаПлатежа.Добавить();
	НоваяСтрока.Партнер = СтруктураЗаполнения.Партнер;
	НоваяСтрока.СтатьяДвиженияДенежныхСредств = СтруктураЗаполнения.СтатьяДвиженияДенежныхСредств;
	НоваяСтрока.ОснованиеПлатежа = ОснованиеПлатежа;
	Если ТипЗнч(ОснованиеПлатежа) <> Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		НоваяСтрока.Заказ = ОснованиеПлатежа;
	КонецЕсли;
	НоваяСтрока.Сумма = Сумма;
	НоваяСтрока.СуммаВзаиморасчетов = НоваяСтрока.Сумма;
	НоваяСтрока.ВалютаВзаиморасчетов = СтруктураЗаполнения.ВалютаВзаиморасчетов;
	НоваяСтрока.Организация = СтруктураЗаполнения.Организация;
	НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
	НоваяСтрока.СуммаНДС = Ценообразование.РассчитатьСуммуНДС(НоваяСтрока.Сумма, НоваяСтрока.СтавкаНДС, Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДоговор(Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|	И НЕ ДоговорыКонтрагентов.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДоговорыКонтрагентов.ДатаНачалаДействия УБЫВ,
	|	ДоговорыКонтрагентов.Дата УБЫВ";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьДокументы(Команда)
	
	ОбработатьДокументыНаСервере();
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранПриИзменении(Элемент)
	
	Для Каждого Строка Из СписокБанковскихДокументов Цикл
		
		Строка.Выбран = Выбран;
		
	КонецЦикла;
	
КонецПроцедуры
