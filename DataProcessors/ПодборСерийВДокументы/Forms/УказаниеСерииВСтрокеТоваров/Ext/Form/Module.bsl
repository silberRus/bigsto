&НаКлиенте
Перем ТекущаяДатаПроизводства;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	РежимОтображенияСерий = "ТолькоОстатки";
	
	ПараметрыУказанияСерий = Параметры.ПараметрыУказанияСерий;
	Склад = Параметры.Склад;
	
	Количество = Параметры.Количество;
	GTIN = Параметры.GTIN;
	
	АвторизованВнешнийПользователь = ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь();
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма, "");
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Номенклатура,
		"ВидНоменклатуры,ЕдиницаИзмерения,ОсобенностьУчета,СрокГодности,ЕдиницаИзмеренияСрокаГодности");
		
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыНоменклатуры); 
	
	НастройкиИспользованияСерий = Новый ФиксированнаяСтруктура(ЗначениеНастроекПовтИсп.НастройкиИспользованияСерий(
																							РеквизитыНоменклатуры.ВидНоменклатуры,
																							Склад));
	Если Не НастройкиИспользованияСерий.ИспользоватьСерии Тогда
		ТекстИсключения = НСтр("ru = 'Для вида номенклатуры ""%ВидНоменклатуры%"" серии не используются'");
		
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ВидНоменклатуры%",НастройкиИспользованияСерий.ВидНоменклатуры);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ВидНоменклатуры = НастройкиИспользованияСерий.ВладелецСерий;
	
	ШаблонСерии = НастройкиИспользованияСерий.ШаблонЭтикеткиСерии;
	
	Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
		ШаблонСерии = Справочники.ШаблоныЭтикетокИЦенников.ШаблонПоУмолчанию(Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры);
	КонецЕсли;
	
	Распоряжение = Обработки.ПодборСерийВДокументы.РаспоряжениеПоПараметрамФормы(Параметры);
	
	ПараметрыЗапросаВрем = Новый Структура;
	ПараметрыЗапросаВрем.Вставить("Номенклатура", Параметры.Номенклатура);
	ПараметрыЗапросаВрем.Вставить("Характеристика", Параметры.Характеристика);
	Если Параметры.Свойство("Назначение") Тогда
		Назначение = Параметры.Назначение;
		
		Если ПараметрыУказанияСерий.ИмяПоляСкладОтправитель <> Неопределено
			И ПараметрыУказанияСерий.ИмяПоляСкладПолучатель <> Неопределено Тогда //это перемещение товаров
			Назначение = Параметры.НазначениеОтправителя;
		КонецЕсли;
		
		ПараметрыЗапросаВрем.Вставить("Назначение", Назначение);
		
	Иначе
		ПараметрыЗапросаВрем.Вставить("Назначение", Справочники.Назначения.ПустаяСсылка());
	КонецЕсли;	
	ПараметрыЗапросаВрем.Вставить("Склад", Параметры.Склад);
	ПараметрыЗапросаВрем.Вставить("Помещение", Параметры.Помещение);
	ПараметрыЗапросаВрем.Вставить("Регистратор", Параметры.Регистратор);
	ПараметрыЗапросаВрем.Вставить("Распоряжение", Распоряжение);
	
	ПараметрыЗапроса = Новый ФиксированнаяСтруктура(ПараметрыЗапросаВрем);
	
	ВариантПолучениеДанныхИзРегистров = Обработки.ПодборСерийВДокументы.ВариантПолучениеДанныхИзРегистровПоПараметрамФормы(ПараметрыУказанияСерий, Распоряжение, Параметры.Склад, ВидНоменклатуры);
	
	Если Обработки.ПодборСерийВДокументы.ЕстьПраваНаЧтениеДанныхРегистров(ВариантПолучениеДанныхИзРегистров, Склад) Тогда
		ВыполнитьЗапросЗаполненияТаблицыОстатков();
	Иначе
		Элементы.СтраницыСерий.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	Заголовки = Обработки.ПодборСерийВДокументы.ЗаголовкиПоВариантуПолучениеДанныхИзРегистров(ВариантПолучениеДанныхИзРегистров);
	
	Элементы.РежимОтображенияСерий.СписокВыбора[0].Представление = Заголовки.ЗаголовокКнопки;
	
	Если ВариантПолучениеДанныхИзРегистров <> "ВсеСерииНоменклатуры" Тогда
		ЗаголовокСвободногоОстатка = СтрЗаменить(Заголовки.ЗаголовокСвободногоОстатка,"%ЕдиницаИзмерения%", РеквизитыНоменклатуры.ЕдиницаИзмерения);
		Элементы.ОстаткиСерийСвободныйОстаток.Заголовок = ЗаголовокСвободногоОстатка;
	Иначе
		Элементы.ОстаткиСерийСвободныйОстаток.Видимость = Ложь;
		Элементы.РежимОтображенияСерий.Видимость = Ложь;
	КонецЕсли;
	
	Серия = Параметры.Серия;
		
#Область ГИСМ
	
	// С операцией МаркировкаПродукцииДляГИСМ эта форма открывается только
	//	 из документа ПеремаркировкаТоваровГИСМ, в этом сценарии форма работает как помощник
	ЭтоПеремаркировкаТоваровГИСМ  = ПараметрыУказанияСерий.СкладскиеОперации.Найти(
												Перечисления.СкладскиеОперации.МаркировкаПродукцииДляГИСМ) <> Неопределено;
	Если ЭтоПеремаркировкаТоваровГИСМ Тогда
		
		Если ОсобенностьУчета <> Перечисления.ОсобенностиУчетаНоменклатуры.ПродукцияМаркируемаяДляГИСМ Тогда
			ТекстИсключения = НСтр("ru = 'Номенклатура %Номенклатуры% не является продукцией, которую нужно маркировать для ГИСМ.'");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Номенклатуры%",Параметры.Номенклатура);
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		GTINИзКиЗ = Справочники.Номенклатура.GTINКиЗ(Параметры.НоменклатураКиЗ, Параметры.ХарактеристикаКиЗ);
		
		ЭтоМаркировкаПерсонифицированнымиКиЗ = ЗначениеЗаполнено(GTINИзКиЗ);
		
		Если ЭтоМаркировкаПерсонифицированнымиКиЗ
			И GTINИзКиЗ <> GTIN Тогда
			
			ТекстСообщения = НСтр("ru = 'Выбранный КиЗ предназначен для маркировки товаров с GTIN %GTINИзКиЗ%, его нельзя использовать для маркировки товара с GTIN %GTIN%.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%GTINИзКиЗ%", GTINИзКиЗ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%GTIN%", GTIN);
			
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		СерияСписываемая = Параметры.СписываемаяСерия;
		СерияНовая       = Параметры.Серия;
		СерияВрем = Новый Структура(РеквизитыВводаСерии());
		ЗаполнитьРеквизитыПоСерии(СерияВрем, СерияНовая);
		СерияНоваяКешВвода       = Новый ФиксированнаяСтруктура(СерияВрем);
		ЗаполнитьРеквизитыПоСерии(СерияВрем, СерияСписываемая);
		СерияСписываемаяКешВвода = Новый ФиксированнаяСтруктура(СерияВрем);
		
		Если Параметры.ЭтоВводНовойСерии Тогда
			НастроитьФормуПоШагу("Шаг2");
		Иначе
			НастроитьФормуПоШагу("Шаг1");
		КонецЕсли;
		
		Элементы.ОК.Заголовок = НСтр("ru = 'Готово'");
		
		Элементы.Номер.АвтоОтметкаНезаполненного = Ложь;
		
	Иначе
		
		Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииОкончание;
		Элементы.ГруппаНазад.Видимость = Ложь;
		
		НайденныеСтроки = ОстаткиСерий.НайтиСтроки(Новый Структура("Серия",Серия));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Элементы.ОстаткиСерий.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ГруппаНомерКИЗ.Видимость = НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии; 
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		Элементы.Номер.Заголовок = НСтр("ru = 'Номер серии'");
	КонецЕсли;
	
#КонецОбласти
	
#Область RFID
	Если НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии Тогда
		Считыватели = МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам("СчитывательRFID");
		Если Считыватели.Количество() = 0 Тогда
			ПодключатьСчитывательRFID = Ложь;
		ИначеЕсли Считыватели.Количество() = 1 Тогда
			ПодключатьСчитывательRFID = Истина;
			СчитывательRFID = Считыватели[0].Ссылка;
		Иначе
			ТекстСообщения = НСтр("ru = 'К рабочему месту подключено несколько считывателей RFID. Работа одновременно с несколькими считывателями не поддерживается. Оставьте только один считываетель.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			ПодключатьСчитывательRFID = Ложь;
		КонецЕсли;
	Иначе
		ПодключатьСчитывательRFID = Ложь;
	КонецЕсли;
	
	
	Элементы.СчитатьRFID.Видимость               = НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии
													И ПодключатьСчитывательRFID
													И Не АвторизованВнешнийПользователь;
													
	Элементы.RFIDМеткаНеЧитаемая.Видимость       = НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии;
#КонецОбласти
	
	Элементы.СгенерироватьНомер.Видимость = Не НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии;
	Элементы.ГруппаНомер.Видимость = НастройкиИспользованияСерий.ИспользоватьНомерСерии;
	Элементы.ГруппаГоденДо.Видимость = НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии;
	
	Элементы.СтатусРаботыRFID.Видимость  = НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии
		И НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии;
	Элементы.СтатусРаботыRFID1.Видимость = НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии
		И Не НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии;
	Элементы.СтатусРаботыRFID2.Видимость = НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии
		И Не НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии
		И Не НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии;
	
	Элементы.Номер.ТолькоПросмотр = НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии;
	
	Элементы.ПечатьЭтикетки.Видимость = Не НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии;
	
	Элементы.ОстаткиСерийГоденДо.Видимость = НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии;
	Элементы.ОстаткиСерийНомер.Видимость = НастройкиИспользованияСерий.ИспользоватьНомерСерии;
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		Элементы.Номер.Заголовок = НСтр("ru = 'Номер серии'");
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.ГоденДо.Формат               = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.ГоденДо.ФорматРедактирования = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.ОстаткиСерийГоденДо.Формат   = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
	КонецЕсли;
	
	Элементы.ДатаПроизводства.Видимость = НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии;
	Элементы.ОстаткиСерийДатаПроизводства.Видимость = НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии;
	
	Если НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии Тогда
		Элементы.ДатаПроизводства.Формат               = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.ДатаПроизводства.ФорматРедактирования = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.ОстаткиСерийДатаПроизводства.Формат   = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
	КонецЕсли;
	
	Элементы.ОстаткиСерийНомерКиЗГИСМ.Видимость = НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии; 
	
	Элементы.ПроизводительЕГАИС.Видимость = НастройкиИспользованияСерий.ИспользоватьПроизводителяЕГАИССерии;
	Элементы.ОстаткиСерийПроизводительЕГАИС.Видимость = НастройкиИспользованияСерий.ИспользоватьПроизводителяЕГАИССерии;
	
	Элементы.Справка2ЕГАИС.Видимость = НастройкиИспользованияСерий.ИспользоватьСправку2ЕГАИССерии;
	Элементы.ОстаткиСерийСправка2ЕГАИС.Видимость = НастройкиИспользованияСерий.ИспользоватьСправку2ЕГАИССерии;
	
	ИдентификаторТекущейСтроки = Параметры.ИдентификаторТекущейСтроки;
	
	Если Параметры.ТолькоПросмотр Тогда
		Параметры.ТолькоПросмотр = Ложь; //Для исключения платформенной обработки
		
		Элементы.Номер.ТолькоПросмотр   = Истина;
		Элементы.ГоденДо.ТолькоПросмотр = Истина;
		Элементы.ОК.Доступность         = Ложь;
		
		РежимПросмотра = Истина;
	КонецЕсли;
	
	ЗакрыватьПриВыборе = Ложь;
	
	ЗаполнитьРеквизитыПоСерии(ЭтаФорма,Серия);
	ЗаполнитьФлагиРаботыСМеткой(ЭтаФорма);
	
	Если ЗначениеЗаполнено(Параметры.Текст)
	 И (Не ЗначениеЗаполнено(Серия) ИЛИ Параметры.Текст <> Наименование) Тогда
	 	РеквизитыСерииИзСтроки = РеквизитыСерииИзСтроки(Параметры.Текст, НастройкиИспользованияСерий);
		ЗаполнитьЗначенияСвойств(ЭтаФорма,РеквизитыСерииИзСтроки);
	КонецЕсли;
	
	Если Не ПустаяСтрока(Номер) Тогда
		Номер = Номер + " ";
	КонецЕсли;
	
	ПравоДобавленияСерий = ПравоДоступа("Добавление", Метаданные.Справочники.СерииНоменклатуры);
	
	Если ПравоДобавленияСерий Тогда
		
		// Выведем поля для заполнения доп. реквизитов серий 
		Если ЗначениеЗаполнено(Параметры.Серия) Тогда
			СерияОбъект = Параметры.Серия.ПолучитьОбъект();
		Иначе
			СерияОбъект = Обработки.ПодборСерийВДокументы.ВладелецСвойствСерий(ВидНоменклатуры);
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Объект", СерияОбъект);
		ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
		УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
		
		УправлениеСвойствамиУТ.УстановитьОтметкуНезаполненныхСвойств(ЭтаФорма, СерияОбъект);
		
	КонецЕсли;
	
	УстановитьЗаголовокДекорацииСерия();
	УстановитьВидимостьКомандыЗаписиRFID();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПравоДобавленияСерий Тогда
		// СтандартныеПодсистемы.Свойства
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.Свойства
	КонецЕсли;
	
	Если СтрДлина(Номер) > 0 Тогда
		Элементы.Номер.УстановитьГраницыВыделения(СтрДлина(Номер),СтрДлина(Номер));
	КонецЕсли;
	
	ИдетЗаписьМетки = Ложь;
	
	ПоддерживаемыеТипыОборудования = "СканерШтрихкода";
	
	Если ПодключатьСчитывательRFID Тогда
		ПоддерживаемыеТипыОборудования = ПоддерживаемыеТипыОборудования + ", СчитывательRFID";
	КонецЕсли;
	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, ПоддерживаемыеТипыОборудования);

	ТекущаяДатаПроизводства = ДатаПроизводства;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	ШтрихкодированиеНоменклатурыКлиент.ОтключитьОборудование(Неопределено, Новый Структура("Форма",ЭтаФорма));

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() И НЕ ТолькоПросмотр Тогда
		ЗавершитьПодбор = Ложь;
		
		Если ИмяСобытия = "ScanData" Тогда
			
			Если РежимПросмотра Тогда
				Возврат;
			КонецЕсли;
			
			Если ОбработатьШтрихкоды(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр)) Тогда
				ЗавершитьПодбор = Истина;
			КонецЕсли;
			
		ИначеЕсли ИмяСобытия = "RFID"
			И Не ИдетЗаписьМетки
			И ШтрихкодированиеНоменклатурыКлиент.ДляОбработкиRFIDНуженСерверныйВызов(Параметр, ЭтаФорма) Тогда
			ОбработатьСчитываниеRFID(Параметр);
		КонецЕсли;
		
		Если ЗавершитьПодбор
			И Не ЭтоПеремаркировкаТоваровГИСМ
			И ОбязательныеРеквизитыЗаполнены(Ложь) Тогда
			ПодключитьОбработчикОжидания("ПодобратьСериюЗавершитьВвод", 0.1, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяСобытия = "ЗаписьRFID_Серии" Тогда
		RFIDEPC = Параметр.RFIDEPC;
		ЗаполнитьФлагиРаботыСМеткой(ЭтаФорма);
		НайтиСоздатьСерию();
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма,Параметр);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ПравоДобавленияСерий Тогда
		// Проверим заполнение обязательных доп. реквизитов серий
		УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура РежимПросмотраПриИзменении(Элемент)
	ВыполнитьЗапросЗаполненияТаблицыОстатков();
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОстаткиСерийВыборКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийВыборКлиент()
	
	ОчиститьСообщения();

	ТекущиеДанные = Элементы.ОстаткиСерий.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Выберите серию или введите новую.'");	
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если ЭтоПеремаркировкаТоваровГИСМ
		И Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииНачало Тогда
		ПерейтиНаСледующийШаг();
	Иначе
		ПодобратьСериюЗавершитьВвод();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НомерКиЗГИСМПриИзменении(Элемент)
	
	Если ЭтоПеремаркировкаТоваровГИСМ
		И Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииНачало Тогда
		ОчиститьСообщения();
		НомерКиЗГИСМПриИзмененииСервер();
	Иначе
		НайтиСерию();
		УстановитьЗаголовокДекорацииСерия();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура RFIDМеткаНеЧитаемаяПриИзменении(Элемент)
	ЗаполнитьФлагиРаботыСМеткой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	НайтиСерию();
	УстановитьЗаголовокДекорацииСерия();
КонецПроцедуры

&НаКлиенте
Процедура ГоденДоПриИзменении(Элемент)
	
	НоменклатураКлиентСервер.ПересчитатьДатуСерии(ГоденДо);
	
	НайтиСерию();
	УстановитьЗаголовокДекорацииСерия();
	
КонецПроцедуры

&НаКлиенте
Процедура ГоденДоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИменаПараметров = "ГоденДо, ДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности, ФорматДаты, 
						|ИспользоватьДатуПроизводства";
	ПарамемтрыФормы = Новый Структура(ИменаПараметров);
	
	ЗаполнитьЗначенияСвойств(ПарамемтрыФормы, ЭтаФорма);
	
	ПарамемтрыФормы.ФорматДаты                   = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
	ПарамемтрыФормы.ИспользоватьДатуПроизводства = НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ГоденДоНачалоВыбораЗавершение", ЭтотОбъект);
	
	НоменклатураКлиент.ДатаИстеченияСрокаГодностиНачалоВыбора(ЭтаФорма, ПарамемтрыФормы, ОписаниеОповещения,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГоденДоНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		НайтиСерию();
		УстановитьЗаголовокДекорацииСерия();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПроизводстваПриИзменении(Элемент)
	
	НоменклатураКлиентСервер.ПересчитатьДатуСерии(ДатаПроизводства);
	
	ЗаполнитьГоденДоПоДатеПроизводства();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПроизводстваНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДатаПроизводстваНачалоВыбораЗавершение", ЭтотОбъект);
	
	НоменклатураКлиент.ДатаПроизводстваНачалоВыбора(ЭтаФорма, ОписаниеОповещения, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПроизводстваНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗаполнитьГоденДоПоДатеПроизводства();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизводительЕГАИСПриИзменении(Элемент)
	НайтиСерию();
	УстановитьЗаголовокДекорацииСерия();
КонецПроцедуры

&НаКлиенте
Процедура Справка2ЕГАИСПриИзменении(Элемент)
	НайтиСерию();
	УстановитьЗаголовокДекорацииСерия();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	ПодобратьСериюЗавершитьВвод();
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий Тогда
		ОстаткиСерийВыборКлиент();
	Иначе
		
		Если Не ЗначениеЗаполнено(Номер)
			И RFIDМеткаНеЧитаемая Тогда
			Номер = НомерКиЗГИСМ;
		КонецЕсли;
		
		Если Не ОбязательныеРеквизитыЗаполнены(,Истина) Тогда
			Возврат;
		КонецЕсли;
		ПерейтиНаСледующийШаг();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ВернутьсяНаПредыдущийШаг();
	
КонецПроцедуры

&НаКлиенте
Процедура СчитатьМетку(Команда)
	ОчиститьСообщения();
	ШтрихкодированиеНоменклатурыКлиент.ОткрытьСессиюСчитывателяRFID(ЭтаФорма);
	ПодключитьОбработчикОжидания("ОтработатьТаймаутОжиданияСчитыванияМетки", 5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВRFID(Команда)
	ИдетЗаписьМетки = Истина;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ДанныеСерии",ДанныеСерии(ЭтаФорма));
	ПараметрыЗаписи.Вставить("Форма", ЭтаФорма);
	
	ШтрихкодированиеНоменклатурыКлиент.ЗаписатьДанныеВRFID(Неопределено, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНомер(Команда)
	
	СгенерироватьНомерСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЭтикетки(Команда)
	
	КоличествоЭтикеток = Количество;
	
	Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("Назначение", ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
		
		ПараметрыФормы = Новый Структура("Отбор",Отбор);
		
		ОткрытьФорму(
			"Справочник.ШаблоныЭтикетокИЦенников.ФормаВыбора",
			ПараметрыФормы,ЭтаФорма,,,,
			Новый ОписаниеОповещения("ПечатьЗавершение", 
				ЭтотОбъект,
				Новый Структура("КоличествоЭтикеток", КоличествоЭтикеток)),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		Возврат;
		
	КонецЕсли;
	
	ПечатьФрагмент(КоличествоЭтикеток);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#Область Печать

&НаСервере
Процедура НайтиСерию()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Серия
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры
	|	И (СерииНоменклатуры.ГоденДо = &ГоденДо
	|			И СерииНоменклатуры.Номер = &Номер
	|			И СерииНоменклатуры.ДатаПроизводства = &ДатаПроизводства
	|			И СерииНоменклатуры.ПроизводительЕГАИС = &ПроизводительЕГАИС
	|			И СерииНоменклатуры.Справка2ЕГАИС = &Справка2ЕГАИС
	|		ИЛИ &ИспользоватьНомерКИЗГИСМСерии
	|			И СерииНоменклатуры.НомерКиЗГИСМ = &НомерКиЗГИСМ)";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
		Запрос.УстановитьПараметр("Номер", СокрЛП(Номер));
	Иначе
		Запрос.УстановитьПараметр("Номер", "");
	КонецЕсли;
		
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		Запрос.УстановитьПараметр("ГоденДо", ГоденДо);
	Иначе
		Запрос.УстановитьПараметр("ГоденДо", '00010101000000');
	КонецЕсли;	
	
	Если НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии Тогда
		Запрос.УстановитьПараметр("ДатаПроизводства", ДатаПроизводства);
	Иначе
		Запрос.УстановитьПараметр("ДатаПроизводства", '00010101000000');
	КонецЕсли;	
	
	Если НастройкиИспользованияСерий.ИспользоватьПроизводителяЕГАИССерии Тогда
		Запрос.УстановитьПараметр("ПроизводительЕГАИС", ПроизводительЕГАИС);
	Иначе
		Запрос.УстановитьПараметр("ПроизводительЕГАИС", Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка());
	КонецЕсли;	
	
	Если НастройкиИспользованияСерий.ИспользоватьСправку2ЕГАИССерии Тогда
		Запрос.УстановитьПараметр("Справка2ЕГАИС", Справка2ЕГАИС);
	Иначе
		Запрос.УстановитьПараметр("Справка2ЕГАИС", Справочники.Справки2ЕГАИС.ПустаяСсылка());
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ИспользоватьНомерКИЗГИСМСерии", НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии);
	Запрос.УстановитьПараметр("НомерКиЗГИСМ", НомерКиЗГИСМ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Серия = Выборка.Серия;
	Иначе
		Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    ШаблонСерии = Результат;
    
    Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
        Возврат;
    КонецЕсли;
    
    ПечатьФрагмент(ДополнительныеПараметры.КоличествоЭтикеток);

КонецПроцедуры

&НаКлиенте
Процедура ПечатьФрагмент(КоличествоЭтикеток)
    
	Если Не НайтиСоздатьСерию() Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьВводЧисла(
		Новый ОписаниеОповещения(
			"ПечатьФрагментЗавершение", 
			ЭтотОбъект,
			Новый Структура("Серия", Серия)),
		КоличествоЭтикеток,
		НСтр("ru = 'Количество экземпляров'"),
		8,
		0);
		
КонецПроцедуры

&НаКлиенте
Процедура ПечатьФрагментЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) ИЛИ Результат < 1 Тогда
		Возврат;
	КонецЕсли;
	
    СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("АдресВХранилище", ПодготовитьДанныеДляПечати(Результат, ДополнительныеПараметры.Серия));
    
    СтруктураПараметров.Вставить("ШаблонЭтикетки", ШаблонСерии); 
    СтруктураПараметров.Вставить("НазначениеШаблона", ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
    СтруктураПараметров.Вставить("КоличествоЭкземпляров", 1);
    
    ПараметрКоманды = Новый Массив;
    ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка"));
    
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
        "Обработка.ПечатьЭтикетокИЦенников",
        "ЭтикеткаСерииНоменклатуры",
        ПараметрКоманды,
        ЭтаФорма,
        СтруктураПараметров);
    
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеДляПечати(КоличествоЭтикеток, Знач Серия)
	
	СерииНоменклатуры = Новый ТаблицаЗначений;
	СерииНоменклатуры.Колонки.Добавить("Серия",Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	СерииНоменклатуры.Колонки.Добавить("Штрихкод",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(16)));
	
	КоличествоЭкз = КоличествоЭтикеток;
	
	Пока КоличествоЭкз > 0 Цикл
		
		КоличествоЭкз = КоличествоЭкз - 1;
		
		НоваяСтрока = СерииНоменклатуры.Добавить();
		НоваяСтрока.Серия = Серия;
		Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии	И НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
			НоваяСтрока.ШтрихКод = СокрЛП(Номер) + Формат(ГоденДо, "ДФ=""ддММггЧЧ""");
		ИначеЕсли НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
			НоваяСтрока.ШтрихКод = СокрЛП(Номер);
		Иначе
			НоваяСтрока.ШтрихКод = Формат(ГоденДо, "ДФ=""ддММггЧЧ""");
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(СерииНоменклатуры);
	
КонецФункции

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ШтрихкодыИТорговоеОборудование

&НаКлиенте
Функция ОбработатьШтрихкоды(ДанныеШтрихкодов)
	
	Если ДанныеШтрихкодов.Количество() <> 1 Тогда
		
		ТекстСообщения = НСтр("ru = 'Не поддерживается одновременное распознование нескольких штрих-кодов серий. Сканируйте серии по одной.'");
		ПоказатьПредупреждение(,ТекстСообщения);
		Возврат Ложь;
		
	КонецЕсли;
	
	ОбработатьШтрихкодыСервер(ДанныеШтрихкодов);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ОбработатьШтрихкодыСервер(ДанныеШтрихкодов)
	
	ШтрихкодыПоТипам = ШтрихкодированиеНоменклатурыСервер.СтруктураПоТипамШтрихкодов(ДанныеШтрихкодов);
	
	Если ШтрихкодыПоТипам.БезТипа.Количество() > 0 Тогда
		Штрихкод = ДанныеШтрихкодов[0].Штрихкод;
		
		ПоляИзШтрихкода = НоменклатураКлиентСервер.ИнформацияОСерииИзШтрихкода(Штрихкод, 
																				НастройкиИспользованияСерий.ИспользоватьНомерСерии,
																				НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии);
		Номер   = ПоляИзШтрихкода.Номер;
		ГоденДо = ПоляИзШтрихкода.ГоденДо;
		НайтиСерию();
		УстановитьЗаголовокДекорацииСерия();
		
	ИначеЕсли ШтрихкодыПоТипам.КиЗ.Количество() > 0 Тогда
		
		НомерКиЗГИСМ = ШтрихкодыПоТипам.КиЗ[0].ШтрихКод;
		Модифицированность = Истина;
		НайтиСерию();
		УстановитьЗаголовокДекорацииСерия();
		Если ЗначениеЗаполнено(Серия) Тогда
			ЗаполнитьРеквизитыПоСерии(ЭтаФорма,Серия);
		КонецЕсли;
		ЗаполнитьФлагиРаботыСМеткой(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработатьТаймаутОжиданияСчитыванияМетки()
	
	Если ОткрытаСессияСчитывателяRFID Тогда
		ШтрихкодированиеНоменклатурыКлиент.ОтработатьТаймаутОжиданияСчитыванияМетки(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьСчитываниеRFID(ДанныеМеток)
	
	ПараметрыОбработки = ШтрихкодированиеНоменклатурыСервер.ПараметрыОбработкиСчитанныхRFIDИКиЗ();
	ЗаполнитьЗначенияСвойств(ПараметрыОбработки,ЭтаФорма);
	ПараметрыОбработки.ЭтоМаркировкаОстатковГИСМ = Ложь;
	ПараметрыОбработки.ЭтоМаркировкаТоваровГИСМ  = Истина;
	РезультатОбработки = ШтрихкодированиеНоменклатурыСервер.ОбработатьСчитываниеRFID(ДанныеМеток, ПараметрыОбработки);
	
	Если ЗначениеЗаполнено(РезультатОбработки.ДанныеСерии) Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, РезультатОбработки.ДанныеСерии);
		Если ЗначениеЗаполнено(Серия) Тогда
			СтруктураПоиска = Новый Структура("Серия",Серия);
			НайденныеСтроки = ОстаткиСерий.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				Элементы.ОстаткиСерий.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура СгенерироватьНомерСервер()
	
	НомерЧислом = Справочники.СерииНоменклатуры.ВычислитьМаксимальныйНомерСерии(ВидНоменклатуры) + 1;
	Номер = Формат(НомерЧислом, "ЧЦ=8; ЧВН=; ЧГ=");
	Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
	УстановитьЗаголовокДекорацииСерия();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКомандыЗаписиRFID()
	
	ВидимостьКомандыЗаписиRFID = 
		ПодключатьСчитывательRFID
		И Не ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь()
		И ПравоДобавленияСерий;
			
	Если ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ПродукцияМаркируемаяДляГИСМ Тогда
		Элементы.ЗаписатьВRFID.Видимость =
			ВидимостьКомандыЗаписиRFID
			И ЭтоПеремаркировкаТоваровГИСМ
			И Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииОкончание
			И Не ЭтоМаркировкаПерсонифицированнымиКиЗ;
													
	ИначеЕсли ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.КиЗГИСМ Тогда 
		Элементы.ЗаписатьВRFID.Видимость= Ложь;
	Иначе
		Элементы.ЗаписатьВRFID.Видимость =
			ВидимостьКомандыЗаписиRFID
			И НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии
			И (Не ЭтоПеремаркировкаТоваровГИСМ
				Или Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииОкончание);
	КонецЕсли;	

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьФлагиРаботыСМеткой(Форма)
	
	ДанныеСерии = ДанныеСерии(Форма);
	
	ПараметрыЗаполненияФлаговРаботыСМеткой = ШтрихкодированиеНоменклатурыКлиентСервер.ПараметрыЗаполненияФлаговРаботыСМеткой();
	ПараметрыЗаполненияФлаговРаботыСМеткой.GTIN = Форма.GTIN;
	ПараметрыЗаполненияФлаговРаботыСМеткой.ТекущаяМетка = Неопределено;
	ПараметрыЗаполненияФлаговРаботыСМеткой.НастройкиИспользованияСерий = Форма.НастройкиИспользованияСерий;
	ПараметрыЗаполненияФлаговРаботыСМеткой.ЭтоМаркировкаОстатковГИСМ = Ложь;
	ПараметрыЗаполненияФлаговРаботыСМеткой.ЭтоМаркировкаПерсонифицированнымиКиЗ = Форма.ЭтоМаркировкаПерсонифицированнымиКиЗ;
	
	ШтрихкодированиеНоменклатурыКлиентСервер.ЗаполнитьФлагиРаботыСМеткой(ДанныеСерии, ПараметрыЗаполненияФлаговРаботыСМеткой);
	
	ЗаполнитьЗначенияСвойств(Форма,ДанныеСерии);
	
	Если Форма.RFIDМеткаНеЧитаемая Тогда
		Форма.НужноЗаписатьМетку = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДанныеСерии(ДанныеДляЗаполнения)
	
	ДанныеСерии = Новый Структура(РеквизитыВводаСерии());
	ЗаполнитьЗначенияСвойств(ДанныеСерии, ДанныеДляЗаполнения);
	
	Возврат ДанныеСерии;
	
КонецФункции

&НаКлиенте
Процедура ПодобратьСериюЗавершитьВвод()
	
	Если РежимПросмотра Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ВозвращаемоеЗначение = НоменклатураКлиентСервер.ВыбраннаяСерия();
	
	ТекущиеДанные = Элементы.ОстаткиСерий.ТекущиеДанные;
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий Тогда
		Если ТекущиеДанные = Неопределено Тогда
			ТекстПредупреждения = НСтр("ru = 'Выберите или введите серию.'");	
			ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
		Серия = ТекущиеДанные.Серия;
		
	ИначеЕсли НЕ ОбязательныеРеквизитыЗаполнены()
		Или НЕ НайтиСоздатьСерию() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ВозвращаемоеЗначение.ИдентификаторТекущейСтроки = ИдентификаторТекущейСтроки;
	ВозвращаемоеЗначение.Значение                   = Серия;
	ВозвращаемоеЗначение.ИмяТЧ                      = ПараметрыУказанияСерий.ИмяТЧТовары;
	Если ЭтоПеремаркировкаТоваровГИСМ Тогда
		ВозвращаемоеЗначение.ЗначениеСписываемойСерии = СерияСписываемая;
	КонецЕсли;
	ОповеститьОВыборе(ВозвращаемоеЗначение);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция ОбязательныеРеквизитыЗаполнены(ВыводитьСообщения = Истина, ЭтоСписываемаяМетка = Ложь)
	
	Отказ = Ложь;
	
	Если НужноЗаписатьМетку Тогда
		ТекстСообщения = НСтр("ru = 'Параметры RFID-метки не соответствуют ожидаемым: либо считана неперсонифицированная метка, либо считана метка с другим GTIN, либо записанный в метку номер не соответствует TID. Считайте другую метку.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		Если Не ЗначениеЗаполнено(НомерКиЗГИСМ) Тогда
			Отказ = Истина;
			Если ВыводитьСообщения Тогда
				ТекстСообщения = НСтр("ru = 'Поле ""Номер КиЗ"" не заполнено'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"НомерКиЗГИСМ");
			КонецЕсли;
		ИначеЕсли Не ИнтеграцияГИСМВызовСервера.ЭтоНомерКиЗ(НомерКиЗГИСМ) Тогда
			Отказ = Истина;
			Если ВыводитьСообщения Тогда
				ТекстСообщения = НСтр("ru = 'Значение в поле ""Номер КиЗ"" не является номером контрольного (идентификационного) знака ГИСМ'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"НомерКиЗГИСМ");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерСерии
		И Не ЗначениеЗаполнено(Номер)
		И Не НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		Отказ = Истина;
		Если ВыводитьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Номер"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Номер");
		КонецЕсли;
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии
		И Не ЗначениеЗаполнено(ГоденДо) Тогда
		Отказ = Истина;
		Если ВыводитьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Годен до"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ГоденДо");
		КонецЕсли;
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии
		И Не ЗначениеЗаполнено(ДатаПроизводства) Тогда
		Отказ = Истина;
		Если ВыводитьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Дата производства"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ГоденДо");
		КонецЕсли;
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьСправку2ЕГАИССерии
		И Не ЗначениеЗаполнено(Справка2ЕГАИС) Тогда
		Отказ = Истина;
		Если ВыводитьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Справка 2 (ЕГАИС)"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ГоденДо");
		КонецЕсли;
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьПроизводителяЕГАИССерии
		И Не ЗначениеЗаполнено(ПроизводительЕГАИС) Тогда
		Отказ = Истина;
		Если ВыводитьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Производитель (ЕГАИС)"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ГоденДо");
		КонецЕсли;
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии
		И ЗаполненRFIDTID
		И НужноЗаписатьМетку Тогда
		Отказ = Истина;
		Если ВыводитьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Требуется записать RFID-метку.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоПеремаркировкаТоваровГИСМ Тогда
		Если Не ЗаполненRFIDTID
			И Не RFIDМеткаНеЧитаемая Тогда
			Если Не ЭтоМаркировкаПерсонифицированнымиКиЗ Тогда
				Отказ = Истина;
				Если ВыводитьСообщения Тогда
					ТекстСообщения = НСтр("ru = 'Не считана RFID-метка. При перемаркировке неперсонифицированными КиЗ необходимо обязательно считывать метку и записывать EPC.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			ИначеЕсли Не ЗначениеЗаполнено(Номер) Тогда
				Отказ = Истина;
				Если ВыводитьСообщения Тогда
					ТекстСообщения = НСтр("ru = 'Не заполнен номер серии. Перемаркировка осуществляется персонифицированными КиЗ, поэтому номер серии записан в RFID-метку КиЗ. Необходимо считать метку RFID-считывателем.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Номер");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЭтоПоступлениеИзТаможенногоСоюза
		И НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		Если Не ЗаполненRFIDTID Тогда
			Отказ = Истина;
			Если ВыводитьСообщения Тогда
				ТекстСообщения = НСтр("ru = 'Не считана RFID-метка. Оформляется ввоз из стран ЕАЭС маркируемых товаров, поэтому считывать RFID-метки обязательно.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		ИначеЕсли Не ЗначениеЗаполнено(Номер)Тогда
			Отказ = Истина;
			Если ВыводитьСообщения Тогда
				ТекстСообщения = НСтр("ru = 'Не заполнен номер серии. Оформляется ввоз из стран ЕАЭС маркируемых товаров, поэтому номер серии записан в RFID-метку КиЗ. Необходимо считать метку RFID-считывателем.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

&НаСервере
Функция НайтиСоздатьСерию()
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Серия) Тогда
		
		НайтиСерию();
		УстановитьЗаголовокДекорацииСерия();
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Серия) Тогда
		
		СоздатьСерию();
		
	ИначеЕсли ПравоДобавленияСерий Тогда
	
		СерияОбъект = Серия.ПолучитьОбъект();
		
		// Запишем доп. реквизиты серии
		УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, СерияОбъект);
		
		ЗаполнитьЗначенияСвойств(СерияОбъект, ЭтотОбъект, РеквизитыВводаСерии(Истина));
		
		СерияОбъект.Записать();
		
		Серия = СерияОбъект.Ссылка;
		
	КонецЕсли;
	
	Возврат ЗначениеЗаполнено(Серия);
	
КонецФункции

&НаСервере
Функция СоздатьСерию()
		
	Если Не ПравоДобавленияСерий Тогда
		
		ТекстСообщения = НСтр("ru = 'В программе еще не зарегистрирована серия %ПредставлениеСерии%. Недостаточно прав для регистрации новой серии.'");
		
		ПредставлениеСерии = НоменклатураКлиентСервер.ПредставлениеСерии(НастройкиИспользованияСерий, ЭтаФорма);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеСерии%", ПредставлениеСерии);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Возврат Ложь;
		
	Иначе
	
		СерияОбъект = Справочники.СерииНоменклатуры.СоздатьЭлемент();
			
		// Запишем доп. реквизиты серии
		УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, СерияОбъект);
		ЗаполнитьЗначенияСвойств(СерияОбъект, ЭтотОбъект, РеквизитыВводаСерии(Истина));
		
		СерияОбъект.Записать();
		
		Серия = СерияОбъект.Ссылка;
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ВыполнитьЗапросЗаполненияТаблицыОстатков()
	
	ТекстЗапроса = Обработки.ПодборСерийВДокументы.ТекстЗапросаФормированияТаблицыДанныеРегистров(ВариантПолучениеДанныхИзРегистров, Склад);
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	ДанныеРегистров.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).Номер КАК Номер,
	|	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).ГоденДо КАК ГоденДо,
	|	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).НомерКиЗГИСМ КАК НомерКиЗГИСМ,
	|	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).ДатаПроизводства КАК ДатаПроизводства,
	|	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).ПроизводительЕГАИС КАК ПроизводительЕГАИС,
	|	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).Справка2ЕГАИС КАК Справка2ЕГАИС,
	|	ДанныеРегистров.СвободныйОстаток КАК СвободныйОстаток
	|ИЗ
	|	ДанныеРегистров КАК ДанныеРегистров
	|ГДЕ
	|	ДанныеРегистров.СвободныйОстаток > 0
	|	ИЛИ &ВсеСерии
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо,
	|	Номер,
	|	НомерКиЗГИСМ";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Для Каждого Параметр из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	Если ВариантПолучениеДанныхИзРегистров <> "ВсеСерииНоменклатуры" Тогда
		Запрос.УстановитьПараметр("ВсеСерии", РежимОтображенияСерий = "ВсеСерии");
	Иначе
		Запрос.УстановитьПараметр("ВсеСерии", Истина);
	КонецЕсли;
	
	ОстаткиСерий.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоличествоСерий = ОстаткиСерий.Количество();
	
	// Доп. реквизиты
	УправлениеСвойствамиУТ.ДобавитьКолонкиДополнительныхРеквизитов(
		Обработки.ПодборСерийВДокументы.ВладелецСвойствСерий(ВидНоменклатуры),
		ЭтаФорма,
		"ОстаткиСерий",
		"ОстаткиСерий",
		"ОстаткиСерийСвободныйОстаток",
		Истина);
	УправлениеСвойствамиУТ.ЗаполнитьКолонкиДополнительныхРеквизитов(
		ЭтаФорма,
		"ОстаткиСерий",
		"Серия");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыСерииИзСтроки(Знач Строка, НастройкиИспользованияСерий)
	
	РеквизитыСерии = Новый Структура("Номер,НомерКиЗГИСМ,ГоденДо","","",'00010101');
	ГоденДо = Неопределено;
	Номер   = Неопределено;
	НомерКиЗГИСМ = Неопределено;
	
	Строка = СтрЗаменить(Строка, " "+" "," ");
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		СтрокаГоденДо = "";
		Если НастройкиИспользованияСерий.ТочностьУказанияСрокаГодностиСерии 
				= ПредопределенноеЗначение("Перечисление.ТочностиУказанияСрокаГодности.СТочностьюДоЧасов") Тогда
			ДлинаСтрокиГоденДо = СтрДлина(НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности) - 5; // 5 = СтрДлина("ДФ=''")	
		Иначе	
			ДлинаСтрокиГоденДо = СтрДлина(НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности) - 3; // 3 = СтрДлина("ДФ=")
		КонецЕсли;
	
		Если НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
			
			ПозицияДо = СтрНайти(Строка, НСтр("ru = 'до'"));
			СтрокаГоденДо = СокрЛП(Сред(Строка, ПозицияДо+3, ДлинаСтрокиГоденДо));
		
		Иначе
		
			СтрокаГоденДо = Прав(СокрЛП(Строка), ДлинаСтрокиГоденДо);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		
		Если СтрДлина(СтрокаГоденДо) <> ДлинаСтрокиГоденДо Тогда
			ГоденДо = '00010101';
		КонецЕсли;
		
		Если ГоденДо = Неопределено Тогда
			МассивЧастей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаГоденДо,".");
			
			Если МассивЧастей.Количество() < 3 Тогда
				ГоденДо = '00010101';
			КонецЕсли;
		КонецЕсли;
		
		Если ГоденДо = Неопределено Тогда
			День  = МассивЧастей[0];
			Месяц = МассивЧастей[1];
			
			Если НастройкиИспользованияСерий.ТочностьУказанияСрокаГодностиСерии 
				= ПредопределенноеЗначение("Перечисление.ТочностиУказанияСрокаГодности.СТочностьюДоЧасов") Тогда
				ГодЧас =  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МассивЧастей[2]," ");
				Если ГодЧас.Количество() = 2 Тогда
					Год = ГодЧас[0];
					Час = ГодЧас[1];
				ИначеЕсли ГодЧас.Количество() = 1 Тогда
					Год = ГодЧас[0];
					Час = "00";
				Иначе
					Год = "00";
					Час = "00";
				КонецЕсли;
			Иначе	
				Год = МассивЧастей[2];
				Час = "00";
			КонецЕсли;
			
			Если СтрНайти(Час, ":") > 0 Тогда
				Час = Лев(Час, СтрНайти(Час, ":") - 1);
			КонецЕсли;
			
			ДатаСтрокой = "20" + Год + Месяц + День + Час + "0000";
			
			ТипДата = Новый ОписаниеТипов("Дата");
			ГоденДо = ТипДата.ПривестиЗначение(ДатаСтрокой);
		КонецЕсли;
		
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
		Если ЗначениеЗаполнено(ГоденДо) Тогда
			Номер = СтрЗаменить(Строка," " + НСтр("ru = 'до'") + " " + СтрокаГоденДо, "");
		Иначе
			Номер = Строка;
		КонецЕсли; 	
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		Если НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
			ПозицияКиЗ = СтрНайти(ВРег(Номер),НСтр("ru = 'КИЗ'"));
			НомерКиЗГИСМ = ВРег(СокрЛП(Сред(Номер, ПозицияКиЗ + 4)));
			Номер = СокрЛП(Лев(Номер,ПозицияКиЗ-2));
		Иначе
			Если ЗначениеЗаполнено(ГоденДо) Тогда
				НомерКиЗГИСМ = СтрЗаменить(Строка," " + НСтр("ru = 'до'") + " " + СтрокаГоденДо, "");
			Иначе
				НомерКиЗГИСМ = Строка;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Номер <> Неопределено Тогда
		РеквизитыСерии.Номер = Номер;
	КонецЕсли;
	
	Если ГоденДо <> Неопределено Тогда
		РеквизитыСерии.ГоденДо = ГоденДо;
	КонецЕсли;
	
	Если НомерКиЗГИСМ  <> Неопределено Тогда
		РеквизитыСерии.НомерКиЗГИСМ = НомерКиЗГИСМ;
	КонецЕсли;
	
	Возврат РеквизитыСерии; 
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыВводаСерии(ДляЗаполненияОбъекта = Ложь)
	РеквизитыВводаСерии = ?(ДляЗаполненияОбъекта ,"","Серия,
		|НужноЗаписатьМетку,
		|ЗаполненRFIDTID,
		|СтатусРаботыRFID,") + "
		|ВидНоменклатуры,
		|EPCGTIN,
		|RFIDEPC,
		|RFIDTID,
		|RFIDUser,
		|ГоденДо,
		|Номер,
		|НомерКиЗГИСМ,
		|ДатаПроизводства,
		|ПроизводительЕГАИС,
		|Справка2ЕГАИС,
		|RFIDМеткаНеЧитаемая";
	Возврат РеквизитыВводаСерии;
КонецФункции

&НаСервере
Процедура ПерейтиНаСледующийШаг()
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии Тогда
		Если НЕ НайтиСоздатьСерию() Тогда
			Возврат;
		КонецЕсли;
		СерияСписываемая = Серия;
	Иначе
		ТекущиеДанные    = ОстаткиСерий.НайтиПоИдентификатору(Элементы.ОстаткиСерий.ТекущаяСтрока);
		СерияСписываемая = ТекущиеДанные.Серия;
	КонецЕсли;
	
	СерияСписываемаяКешВвода = Новый ФиксированнаяСтруктура(ДанныеСерии(ЭтаФорма));
	
	НастроитьФормуПоШагу("Шаг2");
	
КонецПроцедуры

&НаСервере
Процедура ВернутьсяНаПредыдущийШаг()
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии Тогда
		СерияНовая = Серия;
	Иначе
		ТекущиеДанные =ОстаткиСерий.НайтиПоИдентификатору(Элементы.ОстаткиСерий.ТекущаяСтрока);
		СерияНовая = ТекущиеДанные.Серия;
	КонецЕсли;
	
	СерияНоваяКешВвода = Новый ФиксированнаяСтруктура(ДанныеСерии(ЭтаФорма));
	
	НастроитьФормуПоШагу("Шаг1");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоШагу(Шаг)
	
	Если Шаг = "Шаг1" Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, СерияСписываемаяКешВвода);
		
		Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииНачало;
		Элементы.Далее.КнопкаПоУмолчанию = Истина;
		
		Элементы.Номер.ПодсказкаВвода = "";
		Элементы.Номер.Подсказка = "";
		
		Элементы.ГоденДо.ТолькоПросмотр = Истина;
		Элементы.ГоденДо.АвтоОтметкаНезаполненного = Ложь;
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Укажите списываемую серию'");
		Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий;
		ИскомаяСерия = СерияСписываемая;
		Элементы.RFIDМеткаНеЧитаемая.Видимость = Истина;
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, СерияНоваяКешВвода);
		
		Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииОкончание;
		Элементы.ОК.КнопкаПоУмолчанию = Истина;
		
		Если Не ЭтоМаркировкаПерсонифицированнымиКиЗ Тогда
			Элементы.Номер.ПодсказкаВвода = НСтр("ru = '<генерируются по данным RFID-метки>'");
			Элементы.Номер.Подсказка = НСтр("ru = 'генерируются по данным RFID-метки'");
		Иначе
			Элементы.Номер.ПодсказкаВвода = НСтр("ru = '<заполняется по данным КиЗ>'");
			Элементы.Номер.Подсказка = НСтр("ru = 'заполняется по данным КиЗ'");
		КонецЕсли;
		
		Элементы.ГоденДо.ТолькоПросмотр = Ложь;
		Элементы.ГоденДо.АвтоОтметкаНезаполненного = Истина;
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Укажите новую серию'");
		Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии;
		ИскомаяСерия = СерияНовая;
		Элементы.RFIDМеткаНеЧитаемая.Видимость = Ложь;
		
	КонецЕсли;
	
	ЗаполнитьФлагиРаботыСМеткой(ЭтаФорма);
	
	НайденныеСтроки = ОстаткиСерий.НайтиСтроки(Новый Структура("Серия",ИскомаяСерия));
	Если НайденныеСтроки.Количество() > 0 Тогда
		Элементы.ОстаткиСерий.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли;
	
	УстановитьВидимостьКомандыЗаписиRFID();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыПоСерии(Приемник, Знач СерияДляЗаполнения)
	
	Если ЗначениеЗаполнено(СерияДляЗаполнения) Тогда
		Если ТипЗнч(СерияДляЗаполнения) = Тип("СправочникСсылка.СерииНоменклатуры") Тогда
			Приемник.Серия = СерияДляЗаполнения;
			СерияСсылка = СерияДляЗаполнения;
		Иначе
			ЗаполнитьЗначенияСвойств(Приемник, СерияДляЗаполнения);
			СерияСсылка = СерияДляЗаполнения.Серия;
		КонецЕсли;
		Если ЗначениеЗаполнено(СерияСсылка) Тогда
			РеквизитыСерии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СерияСсылка,
				"Наименование,Номер,ГоденДо,НомерКИЗГИСМ,ДатаПроизводства,ПроизводительЕГАИС,Справка2ЕГАИС,RFIDUser,RFIDEPC,EPCGTIN,RFIDTID,RFIDМеткаНеЧитаемая");
			ЗаполнитьЗначенияСвойств(Приемник, РеквизитыСерии);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НомерКиЗГИСМПриИзмененииСервер()
	
	Если Не ИнтеграцияГИСМВызовСервера.ЭтоНомерКиЗ(НомерКиЗГИСМ) Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма,Новый Структура(РеквизитыВводаСерии()),,"НомерКиЗГИСМ");
		Возврат;
	КонецЕсли;
	
	ТекущаяСерияЗаполнена = ЗначениеЗаполнено(Серия);
	
	Если ТекущаяСерияЗаполнена Тогда
		Номер = "";
		ГоденДо = Дата('00010101');
	ИначеЕсли Номер = НомерКиЗГИСМ Тогда
		Номер = "";
	КонецЕсли;
	
	НайтиСерию();
	УстановитьЗаголовокДекорацииСерия();
	
	Если ЗначениеЗаполнено(Серия) Тогда
		ЗаполнитьРеквизитыПоСерии(ЭтаФорма,Серия);
		ЗаполнитьФлагиРаботыСМеткой(ЭтаФорма);
	Иначе
		Если ТекущаяСерияЗаполнена Тогда
			ЗаполнитьЗначенияСвойств(ЭтаФорма,Новый Структура(РеквизитыВводаСерии()),,"НомерКиЗГИСМ");
			ЗаполнитьФлагиРаботыСМеткой(ЭтаФорма);
		КонецЕсли;
	
		Если ЭтоПеремаркировкаТоваровГИСМ Тогда
			ТекстСообщения = НСтр("ru = 'В программе не зарегистрирована серия с номером КиЗ %НомерКиЗГИСМ%.'");
		Иначе
			ТекстСообщения = НСтр("ru = 'В программе еще не зарегистрирована серия с номером КиЗ %НомерКиЗГИСМ%. Укажите существующую серию.'");
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерКиЗГИСМ%", СокрЛП(НомерКиЗГИСМ));
		
		Если ЭтоПеремаркировкаТоваровГИСМ Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"НомерКиЗГИСМ");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокДекорацииСерия()
	
	Элементы.ДекорацияСерия.Заголовок = ?(ЗначениеЗаполнено(Серия), НСтр("ru = 'Зарегистрированная серия'"),
		НСтр("ru = 'Новая серия'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГоденДоПоДатеПроизводства()
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		
		НовыйГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности);
		
		Если ЗначениеЗаполнено(НовыйГоденДо)
			И (Не ЗначениеЗаполнено(ГоденДо)
				Или ГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ТекущаяДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности)) Тогда
			
			ГоденДо = НовыйГоденДо;
			
		КонецЕсли;
		
	КонецЕсли;
	
	НайтиСерию();
	УстановитьЗаголовокДекорацииСерия();
	
	ТекущаяДатаПроизводства = ДатаПроизводства;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
