&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

&НаКлиенте
Перем ТекущееКоличество; //кеш количества в текущей строке для расчета количества серий

&НаКлиенте
Перем ТекущаяДатаПроизводства;

&НаКлиенте
Перем НужноЗадаватьВопросПередЗакрытием;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	Если Не ЭтоАдресВременногоХранилища(Параметры.АдресВоВременномХранилище) Тогда
		ТекстСообщения = НСтр("ru='Предусмотрено открытие обработки только из документов.'");
		
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	ТолькоРедактированиеКоличества = Параметры.ТолькоРедактированиеКоличества;
	
	АвторизованВнешнийПользователь = ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь();
	
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма, "Серии");
	
	
	АдресВоВременномХранилище = Параметры.АдресВоВременномХранилище;
	ПараметрыУказанияСерий    = Параметры.ПараметрыУказанияСерий;
	КоличествоВДокументе      = Параметры.Количество;
	НомераСтрокПредставление  = Параметры.НомераСтрокДокумента;
	Номенклатура 			  = Параметры.Номенклатура;
	Характеристика			  = Параметры.Характеристика;
	GTIN			          = Параметры.GTIN;
	Склад					  = Параметры.Склад;
	Помещение 				  = Параметры.Помещение;
	Регистратор				  = Параметры.Регистратор;
	ЕстьУпаковки = ПараметрыУказанияСерий.ПоляСвязи.Найти("Упаковка") <> Неопределено;
	
	Если Параметры.Свойство("Назначение") Тогда
		Назначение = Параметры.Назначение;
	КонецЕсли;
	
	Если ПараметрыУказанияСерий.ИмяПоляСкладОтправитель <> Неопределено
		И ПараметрыУказанияСерий.ИмяПоляСкладПолучатель <> Неопределено Тогда
		Назначение = Параметры.НазначениеОтправителя;
	КонецЕсли;
	
	РеквизитыНоменклатуры = Новый Структура;
	РеквизитыНоменклатуры.Вставить("ВидНоменклатуры", "ВидНоменклатуры");
	РеквизитыНоменклатуры.Вставить("ЕдиницаИзмеренияПредставление", "ЕдиницаИзмерения.Наименование");
	РеквизитыНоменклатуры.Вставить("СрокГодности", "СрокГодности");
	РеквизитыНоменклатуры.Вставить("ЕдиницаИзмеренияСрокаГодности", "ЕдиницаИзмеренияСрокаГодности");
	РеквизитыНоменклатуры.Вставить("ОсобенностьУчета", "ОсобенностьУчета");
	
	РеквизитыНоменклатуры = Новый ФиксированнаяСтруктура(
		ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, РеквизитыНоменклатуры)); 
	
	
	НастройкиИспользованияСерий = Новый ФиксированнаяСтруктура(ЗначениеНастроекПовтИсп.НастройкиИспользованияСерий(
																						РеквизитыНоменклатуры.ВидНоменклатуры,
																						Склад));
		
	ВидНоменклатуры = НастройкиИспользованияСерий.ВладелецСерий;
	
	ШаблонСерии = НастройкиИспользованияСерий.ШаблонЭтикеткиСерии;
	
	Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
		ШаблонСерии = Справочники.ШаблоныЭтикетокИЦенников.ШаблонПоУмолчанию(Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры);
	КонецЕсли;
	
	Если Не НастройкиИспользованияСерий.ИспользоватьСерии Тогда
		ТекстИсключения = НСтр("ru = 'Для вида номенклатуры ""%ВидНоменклатуры%"" серии не используются'");
		
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ВидНоменклатуры%",НастройкиИспользованияСерий.ВидНоменклатуры);
		
		ВызватьИсключение ТекстИсключения;
	ИначеЕсли ЭтоМаркировкаТоваровГИСМ Тогда
		Если РеквизитыНоменклатуры.ОсобенностьУчета <> Перечисления.ОсобенностиУчетаНоменклатуры.ПродукцияМаркируемаяДляГИСМ Тогда
			ТекстИсключения = НСтр("ru = 'Номенклатура %Номенклатуры% не является продукцией, которую нужно маркировать для ГИСМ.'");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Номенклатуры%",Номенклатура);
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
	КонецЕсли;
	
	Упаковка                  = Параметры.Упаковка;
	
	Если Не ЗначениеЗаполнено(Упаковка) Тогда
		Если ЗначениеЗаполнено(Параметры.УпаковкаДляПодстановки) Тогда 
			
			ТипИзмеряемойВеличиныНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ЕдиницаИзмерения.ТипИзмеряемойВеличины"); 
			Если ТипИзмеряемойВеличиныНоменклатуры <> Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук 
				Или ТипИзмеряемойВеличиныНоменклатуры = Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук
				И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.УпаковкаДляПодстановки, "ТипИзмеряемойВеличины") = Перечисления.ТипыИзмеряемыхВеличин.Упаковка Тогда
				Упаковка = Параметры.УпаковкаДляПодстановки;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	ИсходнаяУпаковка = Упаковка;
	
	Заголовок = НСтр("ru = 'Регистрация серий товаров'");
	ТоварПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Номенклатура, Характеристика);
	
	Если ЗначениеЗаполнено(GTIN) Тогда
		ШаблонТоварПредставление = НСтр("ru = '%ТоварПредставление% GTIN: %GTIN%'");
		ТоварПредставление = СтрЗаменить(ШаблонТоварПредставление, "%ТоварПредставление%", ТоварПредставление);
		ТоварПредставление = СтрЗаменить(ТоварПредставление, "%GTIN%", GTIN);
	КонецЕсли;
	
	Параметры.Свойство("ЗаголовокКолонкиКоличество", ПараметрЗаголовокКолонкиКоличество);
	
	Элементы.Упаковка.Доступность = Не ЕстьУпаковки;
	
	Элементы.Серии.ИзменятьСоставСтрок              = Не ТолькоПросмотр;
	Элементы.СерииКоличествоУпаковок.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ГруппаКоманднаяПанельТаблицы.Видимость = Не ТолькоПросмотр;
	
	Элементы.Количество.Видимость              = Не ТолькоПросмотр;
	
	Элементы.ОстаткиСерийКоличествоУпаковок.ТолькоПросмотр = ТолькоПросмотр;
	#Область ГИСМ
										
	ЭтоМаркировкаТоваровГИСМ  = ПараметрыУказанияСерий.СкладскиеОперации.Найти(
												Перечисления.СкладскиеОперации.МаркировкаПродукцииДляГИСМ) <> Неопределено;
												
	ЭтоПоступлениеИзТаможенногоСоюза = ПараметрыУказанияСерий.ОперацияДокумента = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС;
	ЭтоМаркировкаОстатковГИСМ        = ПараметрыУказанияСерий.ОперацияДокумента = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаОстатковНа12082016;
	
	Если ЭтоМаркировкаТоваровГИСМ Тогда
		Если ПараметрыУказанияСерий.ОперацияДокумента <> Перечисления.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированнойНаПроизводствеПродукции
			И ПараметрыУказанияСерий.ОперацияДокумента <> Перечисления.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированныхПриИмпортеТоваров Тогда
			
			GTINИзКиЗ = Справочники.Номенклатура.GTINКиЗ(Параметры.НоменклатураКиЗ, Параметры.ХарактеристикаКиЗ);
			
			ЭтоМаркировкаПерсонифицированнымиКиЗ = ЗначениеЗаполнено(GTINИзКиЗ);
			
			Если ЭтоМаркировкаПерсонифицированнымиКиЗ
				И GTINИзКиЗ <> GTIN Тогда
				
				ТекстСообщения = НСтр("ru = 'Выбранный КиЗ предназначен для маркировки товаров с GTIN %GTINИзКиЗ%, его нельзя использовать для маркировки товара с GTIN %GTIN%.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%GTINИзКиЗ%", GTINИзКиЗ);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%GTIN%", GTIN);
				
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		Иначе
			ЭтоМаркировкаПерсонифицированнымиКиЗ = Ложь;
		КонецЕсли;	
	КонецЕсли;
	
	Элементы.СерииНомерКИЗГИСМ.Видимость               = НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии; 
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		Элементы.СерииНомер.Заголовок = НСтр("ru = 'Номер серии'");
	КонецЕсли;
	
	#КонецОбласти
	
	#Область RFID
	Если НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии Тогда
		Считыватели = МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам("СчитывательRFID");
		Если Считыватели.Количество() = 0 Тогда
			ПодключатьСчитывательRFID = Ложь;
		ИначеЕсли Считыватели.Количество() = 1 Тогда
			ПодключатьСчитывательRFID = Истина;
			СчитывательRFID = Считыватели[0].Ссылка;
		Иначе
			ТекстСообщения = НСтр("ru = 'К рабочему месту подключено несколько считывателей RFID. Работа одновременно с несколькими считывателями не поддерживается. Оставьте только один считываетель.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			ПодключатьСчитывательRFID = Ложь;
		КонецЕсли;
	Иначе
		ПодключатьСчитывательRFID = Ложь;
	КонецЕсли;
	
	Элементы.СерииСтатусРаботыRFID.Видимость     = НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии;
	
	Если РеквизитыНоменклатуры.ОсобенностьУчета  = Перечисления.ОсобенностиУчетаНоменклатуры.ПродукцияМаркируемаяДляГИСМ Тогда
		Элементы.ЗаписатьВRFID.Видимость         = ЭтоМаркировкаТоваровГИСМ
													И Не ЭтоМаркировкаОстатковГИСМ
													И Не ЭтоМаркировкаПерсонифицированнымиКиЗ
													И ПодключатьСчитывательRFID
													И Не АвторизованВнешнийПользователь;
	ИначеЕсли РеквизитыНоменклатуры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.КиЗГИСМ Тогда 
		Элементы.ЗаписатьВRFID.Видимость         = Ложь;
	Иначе
		Элементы.ЗаписатьВRFID.Видимость         = НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии
													И ПодключатьСчитывательRFID
													И Не АвторизованВнешнийПользователь
													И ПравоДобавленияСерий;
	КонецЕсли;	
	
	Элементы.СчитатьRFID.Видимость               = НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии
													И ПодключатьСчитывательRFID
													И Не АвторизованВнешнийПользователь;
	#КонецОбласти
	
	
	Элементы.СерииНомер.Видимость                = НастройкиИспользованияСерий.ИспользоватьНомерСерии;
	Элементы.СерииЗагрузитьДанныеИзТСД.Видимость = НастройкиИспользованияСерий.ИспользоватьНомерСерии;
	
	Элементы.СерииГоденДо.Видимость            	 = НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии;
	
	Элементы.ЗаполнитьПоFEFO.Видимость  = НастройкиИспользованияСерий.УчетСерийПоFEFO 
										И Перечисления.СкладскиеОперации.ЕстьОтгрузка(ПараметрыУказанияСерий.СкладскиеОперации)
										И Не ЕстьУпаковки
										И Не ТолькоРедактированиеКоличества;

	
	Если НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
		
		Если НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда					
			МожноИзменятьНомер = Ложь;
				
			Если ЭтоМаркировкаТоваровГИСМ Тогда
				
				Если Не ЭтоМаркировкаПерсонифицированнымиКиЗ Тогда
					ТипПодсказкиЗаполненияНомера = "ПоМетке";
				Иначе
					ТипПодсказкиЗаполненияНомера = "ПоКиЗ";
				КонецЕсли;
				
				Если ЭтоМаркировкаОстатковГИСМ Тогда
					ПроверятьЗаполнениеНомера = Ложь;
				Иначе
					ПроверятьЗаполнениеНомера = Истина;
				КонецЕсли;
				
			Иначе
				Если ЭтоПоступлениеИзТаможенногоСоюза Тогда
					ПроверятьЗаполнениеНомера = Истина;
				Иначе
					ПроверятьЗаполнениеНомера = Ложь;
				КонецЕсли;
				
				ТипПодсказкиЗаполненияНомера = "";
			КонецЕсли;
		Иначе
			МожноИзменятьНомер        = Истина;
			ПроверятьЗаполнениеНомера = Истина;
			ТипПодсказкиЗаполненияНомера = "";
		КонецЕсли;
		
		Элементы.СгенерироватьНомер.Видимость  = Истина;
		Элементы.ЗаполнитьНомера.Видимость = Истина;
		
		Элементы.СгенерироватьНомер.Доступность  = МожноИзменятьНомер;
		Элементы.ЗаполнитьНомера.Доступность = МожноИзменятьНомер;
		
		Если МожноИзменятьНомер Тогда
			Элементы.СерииДобавить.Заголовок 	   = НСтр("ru = 'Ввести номер'");
		Иначе
			Элементы.СерииДобавить.Заголовок 	   = НСтр("ru = 'Ввести'");
		КонецЕсли;
		
		Элементы.СерииНомер.ТолькоПросмотр            = Не МожноИзменятьНомер;
		Элементы.СерииНомер.АвтоОтметкаНезаполненного = ПроверятьЗаполнениеНомера;
		
	Иначе
		Элементы.СгенерироватьНомер.Видимость  = Ложь;
		Элементы.ЗаполнитьНомера.Видимость = Ложь;
		Элементы.СерииДобавить.Заголовок       = НСтр("ru = 'Ввести'");
		
		ПроверятьЗаполнениеНомера = Ложь;
	КонецЕсли;
		
	Элементы.ГруппаПечать.Видимость = Не АвторизованВнешнийПользователь;
	Элементы.ФормаНастроитьПорядокСканированияСерий.Видимость = Не АвторизованВнешнийПользователь;
	Если АвторизованВнешнийПользователь Тогда
		Элементы.СерииЗагрузитьДанныеИзТСД.Видимость = Ложь;
	КонецЕсли;
		
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.СерииГоденДо.Формат               = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.СерииГоденДо.ФорматРедактирования = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
		
		СрокГодности                  = РеквизитыНоменклатуры.СрокГодности;
		ЕдиницаИзмеренияСрокаГодности = РеквизитыНоменклатуры.ЕдиницаИзмеренияСрокаГодности;
		            
		Если НастройкиИспользованияСерий.ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней Тогда
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата)'");
			Элементы.ОстаткиСерийГоденДо.Заголовок = НСтр("ru = 'Годен до (дата)'");
		Иначе
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата, час)'");
			Элементы.ОстаткиСерийГоденДо.Заголовок = НСтр("ru = 'Годен до (дата, час)'");
		КонецЕсли;
	КонецЕсли;
	
	Элементы.СерииДатаПроизводства.Видимость = НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии;
	
	Если НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии Тогда
		Элементы.СерииДатаПроизводства.Формат               = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.СерииДатаПроизводства.ФорматРедактирования = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
		
		Если НастройкиИспользованияСерий.ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней Тогда
			Элементы.СерииДатаПроизводства.Заголовок = НСтр("ru = 'Дата производства (дата)'");
			Элементы.ОстаткиСерийДатаПроизводства.Заголовок = НСтр("ru = 'Дата производства (дата)'");
		Иначе
			Элементы.СерииДатаПроизводства.Заголовок = НСтр("ru = 'Дата производства (дата, час)'");
			Элементы.ОстаткиСерийДатаПроизводства.Заголовок = НСтр("ru = 'Дата производства (дата, час)'");
		КонецЕсли;
	КонецЕсли;	
	
	Элементы.СерииПроизводительЕГАИС.Видимость = НастройкиИспользованияСерий.ИспользоватьПроизводителяЕГАИССерии;
	Элементы.СерииСправка2ЕГАИС.Видимость = НастройкиИспользованияСерий.ИспользоватьСправку2ЕГАИССерии;
	
	РежимОтображенияСерий = "СерииВДокументе";
	
	Распоряжение = Обработки.ПодборСерийВДокументы.РаспоряжениеПоПараметрамФормы(Параметры);
	
	ВариантПолучениеДанныхИзРегистров = Обработки.ПодборСерийВДокументы.ВариантПолучениеДанныхИзРегистровПоПараметрамФормы(ПараметрыУказанияСерий, Распоряжение, Параметры.Склад, ВидНоменклатуры);
	Заголовки = Обработки.ПодборСерийВДокументы.ЗаголовкиПоВариантуПолучениеДанныхИзРегистров(ВариантПолучениеДанныхИзРегистров);
	ЗаголовокСвободногоОстаткаПоУмолчанию = Заголовки.ЗаголовокСвободногоОстатка;
	
	Если ВариантПолучениеДанныхИзРегистров <> "ВсеСерииНоменклатуры" Тогда
		Элементы.РежимОтображенияСерий.СписокВыбора[1].Представление = Заголовки.ЗаголовокКнопки;
	Иначе	
		Элементы.ОстаткиСерийСвободныйОстаток.Видимость = Ложь;
		Элементы.РежимОтображенияСерий.СписокВыбора.Удалить(Элементы.РежимОтображенияСерий.СписокВыбора[1]);
	КонецЕсли;
	
	Элементы.ОстаткиСерийГоденДо.Видимость      = НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии;
	Элементы.ОстаткиСерийНомер.Видимость        = НастройкиИспользованияСерий.ИспользоватьНомерСерии;
	Элементы.ОстаткиСерийНомерКиЗГИСМ.Видимость = НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии; 
	
	Элементы.ОстаткиСерийДатаПроизводства.Видимость   = НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии;
	Элементы.ОстаткиСерийПроизводительЕГАИС.Видимость = НастройкиИспользованияСерий.ИспользоватьПроизводителяЕГАИССерии;
	Элементы.ОстаткиСерийСправка2ЕГАИС.Видимость      = НастройкиИспользованияСерий.ИспользоватьСправку2ЕГАИССерии;
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		Элементы.СерииНомер.Заголовок = НСтр("ru = 'Номер серии'");
	КонецЕсли;
	
	Элементы.ОстаткиСерийГоденДо.Формат = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;

	// Ввод серий
	ТаблицаСерий = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Количество,
	|	ТаблицаСерий.КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество,
	|	СУММА(ТаблицаСерий.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	&ТекстЗапросаРеквизитыСерий
	|ИЗ
	|	ТаблицаСерий КАК ТаблицаСерий
	|ГДЕ
	|	(&ИспользоватьКоличествоСерии
	|			ИЛИ ТаблицаСерий.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо,
	|	Номер,
	|	НомерКИЗГИСМ";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий", ТекстЗапросаРеквизитыСерий("ТаблицаСерий"));
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаСерий", ТаблицаСерий);
	Запрос.УстановитьПараметр("ИспользоватьКоличествоСерии", НастройкиИспользованияСерий.ИспользоватьКоличествоСерии);
	
	Объект.Серии.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоэффициентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Упаковка, Номенклатура);
	ЭтоЕдиничнаяУпаковка = КоэффициентУпаковки = 1;
	
	Если Не НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
		
		Если ТолькоРедактированиеКоличества Тогда
			Элементы.СерииКоличествоУпаковок.Вид = ВидПоляФормы.ПолеФлажка;
		Иначе
			Элементы.СерииКоличествоУпаковок.Видимость = Ложь;
		КонецЕсли;
		Элементы.ОстаткиСерийКоличествоУпаковок.Вид = ВидПоляФормы.ПолеФлажка;
		Элементы.Упаковка.Видимость = Ложь;
		
		Если Не ЭтоЕдиничнаяУпаковка Тогда
			Упаковка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не Обработки.ПодборСерийВДокументы.ЕстьПраваНаЧтениеДанныхРегистров(ВариантПолучениеДанныхИзРегистров, Склад) Тогда
		Элементы.СтраницыСерий.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	ОбновитьКартинкуПечати();
	
	ПравоДобавленияСерий = ПравоДоступа("Добавление", Метаданные.Справочники.СерииНоменклатуры);
	
	Если Не ПравоДобавленияСерий
			Тогда
		Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий;
		Элементы.СтраницаВводСерии.Видимость = Ложь;
		Элементы.СтраницыСерий.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Если Объект.Серии.Итог("КоличествоУпаковок") = 0 Тогда
			Если Элементы.РежимОтображенияСерий.СписокВыбора.НайтиПоЗначению("ТолькоОстатки") <> Неопределено Тогда
				РежимОтображенияСерий = "ТолькоОстатки";
			Иначе
				РежимОтображенияСерий = "ВсеСерии";
			КонецЕсли;
		КонецЕсли; 
		Если ТипЗнч(Склад) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			Заголовок = НСтр("ru = 'Подбор серий по остаткам в производстве'");
		Иначе
			Заголовок = НСтр("ru = 'Подбор серий по остаткам на складе'");
		КонецЕсли;
	КонецЕсли;
	
	УпаковкаПриИзмененииСервер();
		
	// Доп. реквизиты
	УправлениеСвойствамиУТ.ДобавитьКолонкиДополнительныхРеквизитов(
		Обработки.ПодборСерийВДокументы.ВладелецСвойствСерий(ВидНоменклатуры),
		ЭтаФорма,
		"Объект.Серии",
		"Серии",
		"СерииКоличествоУпаковок");
	УправлениеСвойствамиУТ.ЗаполнитьКолонкиДополнительныхРеквизитов(
		ЭтаФорма,
		"Объект.Серии",
		"Серия");
	
	Если ТолькоРедактированиеКоличества Тогда
		
		Элементы.СерииДобавить.Видимость = Ложь;
		Элементы.СгенерироватьНомер.Видимость = Ложь;
		Элементы.ЗаполнитьНомера.Видимость = Ложь;
		Элементы.СерииСкопировать.Видимость = Ложь;
		Элементы.СерииИзменить.Видимость = Ложь;
		Элементы.СерииЗагрузитьДанныеИзТСД.Видимость = Ложь;
			
		Для Каждого Элемент Из Элементы.ОстаткиСерий.ПодчиненныеЭлементы Цикл
			Если Не Элемент = Элементы.ОстаткиСерийКоличествоУпаковок Тогда
				Элемент.ТолькоПросмотр = Истина;
			КонецЕсли;
		КонецЦикла;
		Для Каждого Элемент Из Элементы.Серии.ПодчиненныеЭлементы Цикл
			Если Не Элемент = Элементы.СерииКоличествоУпаковок Тогда
				Элемент.ТолькоПросмотр = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаРеквизитыСерий(ИмяТаблицы)
	
	ТекстЗапросаРеквизитыСерий =	
	"	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).Номер КАК Номер,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).ГоденДо КАК ГоденДо,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).НомерКиЗГИСМ КАК НомерКИЗГИСМ,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).ДатаПроизводства КАК ДатаПроизводства,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).ПроизводительЕГАИС КАК ПроизводительЕГАИС,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).Справка2ЕГАИС КАК Справка2ЕГАИС,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).RFIDUser КАК RFIDUser,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).RFIDEPC КАК RFIDEPC,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).EPCGTIN КАК EPCGTIN,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).RFIDTID КАК RFIDTID,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).RFIDTID <> """" КАК ЗаполненRFIDTID,
	|	ЛОЖЬ КАК НужноЗаписатьМетку,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).RFIDTID <> """"
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусРаботыRFID";
	
	ТекстЗапросаРеквизитыСерий = СтрЗаменить(ТекстЗапросаРеквизитыСерий, "ТаблицаСерий", ИмяТаблицы);
	
	Возврат ТекстЗапросаРеквизитыСерий;
	
КонецФункции

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ОбновитьКартинкуПечати();
	НоменклатураСервер.ЗагрузитьНастройкуРежимСканированияСерий(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИдетЗаписьМетки = Ложь;
	
	ПоддерживаемыеТипыОборудования = "СканерШтрихкода";
	
	Если ПодключатьСчитывательRFID Тогда
		ПоддерживаемыеТипыОборудования = ПоддерживаемыеТипыОборудования + ", СчитывательRFID";
	КонецЕсли;
	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, ПоддерживаемыеТипыОборудования);
	
	НужноЗадаватьВопросПередЗакрытием = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность
		И НужноЗадаватьВопросПередЗакрытием Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОповещениеЗакрытия = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Список серий был изменен.
			|Сохранить изменения?'");
		
		ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(ОповещениеЗакрытия, Отказ, ЗавершениеРаботы, ТекстВопроса,
			ТекстПредупреждения);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ШтрихкодированиеНоменклатурыКлиент.ОтключитьОборудование(Неопределено, Новый Структура("Форма",ЭтаФорма));

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ИдентификаторТекущейСтроки = ТекущиеДанные.ПолучитьИдентификатор(); 	
	Иначе
		ИдентификаторТекущейСтроки = Неопределено;
	КонецЕсли;
		
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен()
		И НЕ ТолькоПросмотр Тогда
		
		РезультатОбработки = Неопределено;
		
		Если ИмяСобытия = "ScanData" Тогда
			
			ОчиститьСообщения(); 
			РезультатОбработки = ОбработатьШтрихкодыСервер(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр), КэшированныеЗначения, ИдентификаторТекущейСтроки);
						
		ИначеЕсли ИмяСобытия = "RFID" Тогда
			Если Не ИдетЗаписьМетки
				И ШтрихкодированиеНоменклатурыКлиент.ДляОбработкиRFIDНуженСерверныйВызов(Параметр, ЭтаФорма) Тогда
				ОчиститьСообщения(); 
				РезультатОбработки = ОбработатьСчитываниеRFID(Параметр, ИдентификаторТекущейСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если РезультатОбработки <> Неопределено Тогда
			Если РезультатОбработки.ЗакрытьФорму Тогда
				ОчиститьСообщения(); 
				ПодключитьОбработчикОжидания("ЗакрытьФормуПриСканировании",0.1, Истина);
			Иначе
				Если РезультатОбработки.ИдентификаторТекущейСтроки <> Неопределено Тогда
					Элементы.Серии.ТекущаяСтрока = РезультатОбработки.ИдентификаторТекущейСтроки;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
	Если ИмяСобытия = "ЗаписьRFID_Серии" Тогда
		ОчиститьСообщения(); 
		ДанныеСерии = Параметр;
		ТекущиеДанные.RFIDEPC = ДанныеСерии.RFIDEPC;
		ЗаполнитьФлагиРаботыСМеткой(ТекущиеДанные);
		СохранитьВводСерийСервер(ИдентификаторТекущейСтроки);
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные.Серия = Источник;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,Параметр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура СтраницыСерийПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.СтраницаОстаткиСерий Тогда
		ВыполнитьЗапросЗаполненияТаблицыОстатков();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаОчистка(Элемент, СтандартнаяОбработка)
	
	УпаковкаПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	УпаковкаПриИзмененииСервер();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСерии

&НаКлиенте
Процедура СерииПриИзменении(Элемент)
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
КонецПроцедуры

&НаКлиенте
Процедура СерииНомерКИЗГИСМПриИзменении(Элемент)
	ОчиститьСообщения(); 
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	ТекущиеДанные.Серия = Неопределено;
	ПолучитьИнформациюПоКиЗДобавитьСерию(ТекущиеДанные.НомерКИЗГИСМ, ТекущиеДанные.ПолучитьИдентификатор(), КэшированныеЗначения);
КонецПроцедуры

&НаКлиенте
Процедура СерииНомерПриИзменении(Элемент)
	ПодобратьСерию(Элемент,"Номер","ГоденДо,НомерКиЗГИСМ,ДатаПроизводства,ПроизводительЕГАИС,Справка2ЕГАИС");
	СерииНомерПриИзмененииНаСервере(Элементы.Серии.ТекущиеДанные.Номер);	
КонецПроцедуры

&НаКлиенте
Процедура СерииПроизводительЕГАИСПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ПроизводительЕГАИС) Тогда
 		ПодобратьСерию(Элемент,"ПроизводительЕГАИС","ГоденДо,Номер,НомерКиЗГИСМ,ДатаПроизводства,Справка2ЕГАИС");
	Иначе
		ТекущиеДанные.Серия   = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииСправка2ЕГАИСПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Справка2ЕГАИС) Тогда
 		ПодобратьСерию(Элемент,"Справка2ЕГАИС","ГоденДо,Номер,НомерКиЗГИСМ,ДатаПроизводства,ПроизводительЕГАИС");
	Иначе
		ТекущиеДанные.Серия   = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииДатаПроизводстваПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	НоменклатураКлиентСервер.ПересчитатьДатуСерии(ТекущиеДанные.ДатаПроизводства);
	
	ЗаполнитьГоденДоПоДатеПроизводства(ТекущиеДанные, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииДатаПроизводстваНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ДополнительныеПараметры = Новый Структура("Элемент", Элемент);
	ОписаниеОповещения      = Новый ОписаниеОповещения("СерииДатаПроизводстваНачалоВыбораЗавершение", ЭтотОбъект,
										ДополнительныеПараметры);
	
	НоменклатураКлиент.ДатаПроизводстваНачалоВыбора(ТекущиеДанные, ОписаниеОповещения, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииДатаПроизводстваНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	Элемент       = ДополнительныеПараметры.Элемент;
	
	Если Результат <> Неопределено Тогда
		ЗаполнитьГоденДоПоДатеПроизводства(ТекущиеДанные, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииГоденДоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ГоденДо) Тогда
		НоменклатураКлиентСервер.ПересчитатьДатуСерии(ТекущиеДанные.ГоденДо);
		
		ПодобратьСерию(Элемент, "ГоденДо", "Номер,НомерКиЗГИСМ,ДатаПроизводства,ПроизводительЕГАИС,Справка2ЕГАИС");
	Иначе
		ТекущиеДанные.Серия = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СерииГоденДоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ИменаПараметров = "ГоденДо, ДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности, ФорматДаты, 
						|ИспользоватьДатуПроизводства";
	ПарамемтрыФормы = Новый Структура(ИменаПараметров);
	
	ЗаполнитьЗначенияСвойств(ПарамемтрыФормы, ЭтаФорма);
	ЗаполнитьЗначенияСвойств(ПарамемтрыФормы, ТекущиеДанные);
	
	ПарамемтрыФормы.ФорматДаты                   = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
	ПарамемтрыФормы.ИспользоватьДатуПроизводства = НастройкиИспользованияСерий.ИспользоватьДатуПроизводстваСерии;
	
	ДополнительныеПараметры = Новый Структура("Элемент", Элемент);
	ОписаниеОповещения      = Новый ОписаниеОповещения("СерииГоденДоНачалоВыбораЗавершение", ЭтотОбъект,
										ДополнительныеПараметры);
	
	НоменклатураКлиент.ДатаИстеченияСрокаГодностиНачалоВыбора(ТекущиеДанные, ПарамемтрыФормы, ОписаниеОповещения,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииГоденДоНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	
	Если Результат <> Неопределено Тогда
		ПодобратьСерию(Элемент, "ГоденДо", "Номер,НомерКиЗГИСМ,ДатаПроизводства,ПроизводительЕГАИС,Справка2ЕГАИС");
		Элементы.Серии.ЗакончитьРедактированиеСтроки(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииКоличествоУпаковокПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	ТекущаяДатаПроизводства = ТекущиеДанные.ДатаПроизводства;
	
	Если Копирование Тогда
		ТекущееКоличество = 0;
	Иначе
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ОтменаРедактирования Тогда
		
		Если Не НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
			
			ТекущиеДанные = Элемент.ТекущиеДанные;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Номер)
				Или ЗначениеЗаполнено(ТекущиеДанные.НомерКИЗГИСМ)
				Или ЗначениеЗаполнено(ТекущиеДанные.ГоденДо) 
				Или ЗначениеЗаполнено(ТекущиеДанные.ДатаПроизводства) 
				Или ЗначениеЗаполнено(ТекущиеДанные.ПроизводительЕГАИС) 
				Или ЗначениеЗаполнено(ТекущиеДанные.Справка2ЕГАИС) Тогда
				Если ТекущиеДанные.КоличествоУпаковок = 0
					И Не ТолькоРедактированиеКоличества Тогда
					ТекущиеДанные.КоличествоУпаковок = 1;
					
					ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, Номенклатура);
					СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
					
					ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
					
					ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
				КонецЕсли;
			Иначе
				ТекущиеДанные.КоличествоУпаковок = 0;
				ТекущиеДанные.Количество         = 0;
			КонецЕсли;
		КонецЕсли;
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Номер",Элементы.Серии.ТекущиеДанные.Номер);
		СтруктураПараметров.Вставить("ГоденДо",Элементы.Серии.ТекущиеДанные.ГоденДо);
		СтруктураПараметров.Вставить("НомерКИЗГИСМ",Элементы.Серии.ТекущиеДанные.НомерКИЗГИСМ);
		СтруктураПараметров.Вставить("ДатаПроизводства",Элементы.Серии.ТекущиеДанные.ДатаПроизводства);
		СтруктураПараметров.Вставить("ПроизводительЕГАИС",Элементы.Серии.ТекущиеДанные.ПроизводительЕГАИС);
		СтруктураПараметров.Вставить("Справка2ЕГАИС",Элементы.Серии.ТекущиеДанные.Справка2ЕГАИС);
		СтруктураПараметров.Вставить("КоличествоУпаковок",Элементы.Серии.ТекущиеДанные.КоличествоУпаковок);
		СтруктураПараметров.Вставить("Количество",Элементы.Серии.ТекущиеДанные.Количество);
		
		Если ОбъединитьСтроки(СтруктураПараметров,Элементы.Серии.ТекущиеДанные.ПолучитьИдентификатор()) Тогда			
			Элементы.Серии.ТекущиеДанные.КоличествоУпаковок = 0;
			Элементы.Серии.ТекущиеДанные.Количество         = 0;
			Объект.Серии.Удалить(Элементы.Серии.ТекущиеДанные);
		КонецЕсли;
		
		ЗаполнитьФлагиРаботыСМеткой(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ВыделенныеСтроки = Новый Массив;
	
	Для Каждого ИДСтроки Из Элементы.Серии.ВыделенныеСтроки Цикл
		
		ВыделенныеСтроки.Добавить(Объект.Серии.НайтиПоИдентификатору(ИДСтроки));
		
	КонецЦикла;	
	
	Для Каждого ТекущиеДанные из ВыделенныеСтроки Цикл 
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
		
		Если ТолькоРедактированиеКоличества Тогда
			Если ТекущиеДанные.КоличествоУпаковок > 0 Тогда
				ТекущиеДанные.КоличествоУпаковок = 0;
				ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, Номенклатура);
				СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
				ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
			КонецЕсли;
		Иначе
			 Объект.Серии.Удалить(ТекущиеДанные);	
		КонецЕсли;
		
	КонецЦикла;
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если ТолькоРедактированиеКоличества Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОстаткиСерий

&НаКлиенте
Процедура ОстаткиСерийКоличествоУпаковокПриИзменении(Элемент)
	Модифицированность = Истина;
	
	ИдентификаторТекущейСтроки = Элементы.ОстаткиСерий.ТекущиеДанные.ПолучитьИдентификатор();
	
 	ОстаткиСерийКоличествоУпаковокПриИзмененииСервер(ИдентификаторТекущейСтроки, КэшированныеЗначения);	
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОтображенияСерийПриИзменении(Элемент)
	ВыполнитьЗапросЗаполненияТаблицыОстатков();
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	ТекущиеДанные.СвободныйОстаток = ТекущиеДанные.СвободныйОстаток + ТекущееКоличество;
	ТекущиеДанные.СвободныйОстаток = ТекущиеДанные.СвободныйОстаток - ТекущиеДанные.КоличествоУпаковок;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВводСерий(Команда)
	ОчиститьСообщения();
	Если Не СохранитьВводСерийСервер() Тогда
		Возврат;
	КонецЕсли;
	Если Не Модифицированность Тогда
		Закрыть(АдресВоВременномХранилище);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзТСД(Команда)
	
	ОчиститьСообщения();
	
	МенеджерОборудованияКлиент.НачатьЗагрузкуДанныеИзТСД(
		Новый ОписаниеОповещения("ЗагрузитьИзТСДЗавершение", ЭтотОбъект),
		УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзТСДЗавершение(Результат, Параметры) Экспорт
	
	Если Результат.Результат Тогда
		
		ЗакрытьФорму = ОбработатьШтрихкодыСервер(Результат, КэшированныеЗначения, Неопределено);
		
		Если ЗакрытьФорму Тогда
			Закрыть(АдресВоВременномХранилище);
		КонецЕсли;
		
	Иначе
		МенеджерОборудованияКлиентПереопределяемый.СообщитьОбОшибке(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПорядокСканированияСерий(Команда)
	Оповещение = Новый ОписаниеОповещения("НастроитьПорядокСканированияСерийЗавершение",ЭтаФорма);
	
	ОткрытьФорму("Обработка.ПодборСерийВДокументы.Форма.НастройкиСканированияИПечатиЭтикеток",
		Новый Структура("ПечатьНаПринтер",ПечатьНаПринтер),
		ЭтаФорма,
		,
		,
		,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ОчиститьСообщения();
	Оповещение = Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект);
	ЗаголовокФормыВводаСерий = НСтр("ru = 'Введите штрихкод серии'");
	ШтрихкодированиеНоменклатурыКлиент.ПоказатьВводШтрихкода(Оповещение,,ЗаголовокФормыВводаСерий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(ДанныхШтрихкода, ДополнительныеПараметры) Экспорт
		
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ИдентификаторТекущейСтроки = ТекущиеДанные.ПолучитьИдентификатор(); 	
	Иначе
		ИдентификаторТекущейСтроки = Неопределено;
	КонецЕсли;
	
	ЗакрытьФорму = ОбработатьШтрихкодыСервер(ДанныхШтрихкода,КэшированныеЗначения, ИдентификаторТекущейСтроки);
	Если ЗакрытьФорму Тогда
		Закрыть(АдресВоВременномХранилище);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСерию(Команда)
	ИзменитьСериюКлиент();
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНомер(Команда)
	
	Результат = ВычислитьМаксимальныйНомерИКоличество(ВидНоменклатуры, Упаковка, 1);
	ТекущаяСтрока = Результат.ТекущаяСтрока;
	Номер = Результат.Номер;
	
	Номер = Номер+1;
	Элементы.Серии.ДобавитьСтроку();
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ТекущиеДанные.Номер =  Формат(Номер, "ЧЦ=8; ЧВН=; ЧГ=");
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные,ТекущаяСтрока);
	МаксимальныйНомерВДокументе = ТекущиеДанные.Номер;
	
	Элементы.Серии.ЗакончитьРедактированиеСтроки(Ложь);
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.Серии.ТекущийЭлемент = Элементы.СерииГоденДо;
	ИначеЕсли НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
		Элементы.Серии.ТекущийЭлемент = Элементы.СерииКоличествоУпаковок;
	КонецЕсли;
	
	СерииПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомера(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КоличествоСерий",Макс(Количество - Объект.Серии.Итог("КоличествоУпаковок"),0)); 
	ПараметрыФормы.Вставить("ИспользоватьКоличество",НастройкиИспользованияСерий.ИспользоватьКоличествоСерии); 
	ПараметрыФормы.Вставить("ВКаждойСерии",ВКаждойСерии); 
	ПараметрыФормы.Вставить("ЕдиницаИзмеренияСтр",ЕдиницаИзмеренияСтр); 
	ПараметрыФормы.Вставить("ВидНоменклатуры",ВидНоменклатуры); 
	
	ОткрытьФорму(
		"Обработка.ПодборСерийВДокументы.Форма.НастройкиЗаполненияНомеров",
		ПараметрыФормы,
		ЭтаФорма,
		,
		,
		,
		Новый ОписаниеОповещения("ЗаполнитьНомераЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомераЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
    АктивнаяСтрока = ДобавитьСтрокиНаСервере(
		ВидНоменклатуры,
		Результат,
		Упаковка);
    
    Элементы.Серии.ЗакончитьРедактированиеСтроки(Ложь);
    
    Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
        Элементы.Серии.ТекущаяСтрока = АктивнаяСтрока;
        Элементы.Серии.ТекущийЭлемент = Элементы.СерииГоденДо;	
    ИначеЕсли НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
        Элементы.Серии.ТекущаяСтрока = АктивнаяСтрока;
        Элементы.Серии.ТекущийЭлемент = Элементы.СерииКоличествоУпаковок;
    КонецЕсли;
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьКаждойШт(Команда)
	Печать(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьКаждойСерии(Команда)
	Печать(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоFEFO(Команда)
	Если Количество = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'В документе не указано количество товара. Заполнение по FEFO не возможно.'"));
		Возврат;
	КонецЕсли;	
	
	ЗаполнитьПоFEFOНаСервере();
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаКлиенте
Процедура СчитатьМетку(Команда)
	ОчиститьСообщения();
	ШтрихкодированиеНоменклатурыКлиент.ОткрытьСессиюСчитывателяRFID(ЭтаФорма);
	ПодключитьОбработчикОжидания("ОтработатьТаймаутОжиданияСчитыванияМетки", 5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВRFID(Команда)
	ОчиститьСообщения(); 
	ИдетЗаписьМетки = Истина;
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ДанныеСерии",Элементы.Серии.ТекущиеДанные);
	ПараметрыЗаписи.Вставить("Форма", ЭтаФорма);
	ШтрихкодированиеНоменклатурыКлиент.ЗаписатьДанныеВRFID(Неопределено, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоСерий.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоСерий");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Количество");

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтличающейсяСтрокиДокумента);

	

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоСерий.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоСерий");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Количество");

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Seagreen);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииСерия.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.Серия");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(WindowsШрифты.DefaultGUIFont, , , Истина, Ложь, Ложь, Ложь, ));
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Новая'"));

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииСерия.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.Серия");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Зарегистрированная'"));
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииКоличествоУпаковок.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТолькоРедактированиеКоличества");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Серии.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.КоличествоУпаковок");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТолькоРедактированиеКоличества");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииНомер.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.Номер");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	  
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипПодсказкиЗаполненияНомера");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "ПоКиЗ";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<заполняется по данным КиЗ>'"));
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииНомер.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.Номер");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	  
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипПодсказкиЗаполненияНомера");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "ПоМетке";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<генерируются по данным RFID-метки>'"));
	
КонецПроцедуры

#Область ШтрихкодыИТорговоеОборудование

&НаКлиенте
Процедура ОтработатьТаймаутОжиданияСчитыванияМетки()
	
	Если ОткрытаСессияСчитывателяRFID Тогда
		ШтрихкодированиеНоменклатурыКлиент.ОтработатьТаймаутОжиданияСчитыванияМетки(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбработатьШтрихкодыСервер(ДанныеШтрихкодов,КэшированныеЗначения, ИдентификаторТекущейСтроки)
	
	ШтрихкодыПоТипам = ШтрихкодированиеНоменклатурыСервер.СтруктураПоТипамШтрихкодов(ДанныеШтрихкодов);
		
	ЕстьОшибки = Ложь;
	ОбрабатываемаяСтрока = Неопределено;
	
	Если ШтрихкодыПоТипам.БезТипа.Количество() > 0 Тогда
		ТаблицаШтрихКодов = Новый ТаблицаЗначений;
		ТаблицаШтрихКодов.Колонки.Добавить("Номер",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
		ТаблицаШтрихКодов.Колонки.Добавить("ГоденДо",Новый ОписаниеТипов("Дата"));
		ТаблицаШтрихКодов.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));
		Для Каждого СтрМас из ШтрихкодыПоТипам.БезТипа Цикл
			НоваяСтрока            = ТаблицаШтрихКодов.Добавить();
			НоваяСтрока.Количество = СтрМас.Количество;
			
			ПоляИзШтрихкода = НоменклатураКлиентСервер.ИнформацияОСерииИзШтрихкода(СтрМас.Штрихкод, 
			НастройкиИспользованияСерий.ИспользоватьНомерСерии,
			НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии);
			
			НоваяСтрока.Номер   = ПоляИзШтрихкода.Номер;
			НоваяСтрока.ГоденДо = ПоляИзШтрихкода.ГоденДо;
			
			Если ПоляИзШтрихкода.ЕстьОшибка Тогда
				ЕстьОшибки = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не ЕстьОшибки Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Штрихкоды.Номер КАК Номер,
			|	Штрихкоды.ГоденДо КАК ГоденДо,
			|	Штрихкоды.Количество КАК Количество
			|ПОМЕСТИТЬ Штрихкоды
			|ИЗ
			|	&Штрихкоды КАК Штрихкоды
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(СерииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
			|	ЕСТЬNULL(СерииНоменклатуры.ГоденДо, Штрихкоды.ГоденДо)   КАК ГоденДо,
			|	Штрихкоды.Номер,
			|	Штрихкоды.Количество
			|ПОМЕСТИТЬ НайденныеНомераДляЗапроса
			|ИЗ
			|	Штрихкоды КАК Штрихкоды
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
			|		ПО Штрихкоды.Номер = СерииНоменклатуры.Номер
			|			И (Штрихкоды.ГоденДо = СерииНоменклатуры.ГоденДо
			|				ИЛИ Штрихкоды.ГоденДо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
			|			И (СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(1) КАК КоличествоНайденныхСерий,
			|	НайденныеНомераДляЗапроса.Номер
			|ПОМЕСТИТЬ КоличествоСерийПоНомеру
			|ИЗ
			|	НайденныеНомераДляЗапроса КАК НайденныеНомераДляЗапроса
			|
			|СГРУППИРОВАТЬ ПО
			|	НайденныеНомераДляЗапроса.Номер
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВЫБОР
			|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
			|		ИНАЧЕ НайденныеНомераДляЗапроса.Серия
			|	КОНЕЦ КАК Серия,
			|	ВЫБОР
			|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
			|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|		ИНАЧЕ НайденныеНомераДляЗапроса.ГоденДо
			|	КОНЕЦ КАК ГоденДо,
			|	НайденныеНомераДляЗапроса.Номер,
			|	НайденныеНомераДляЗапроса.Количество
			|ИЗ
			|	НайденныеНомераДляЗапроса КАК НайденныеНомераДляЗапроса
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоСерийПоНомеру КАК КоличествоСерийПоНомеру
			|		ПО НайденныеНомераДляЗапроса.Номер = КоличествоСерийПоНомеру.Номер
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ Штрихкоды
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ НайденныеНомераДляЗапроса
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ КоличествоСерийПоНомеру";
			
			Запрос.УстановитьПараметр("ВидНоменклатуры",ВидНоменклатуры);
			Запрос.УстановитьПараметр("Штрихкоды",ТаблицаШтрихКодов);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			СрокГодностиЗаполнен = Истина;
			
			Пока Выборка.Следующий() Цикл
				СтруктураПоиска = Новый Структура("Номер,ГоденДо,Серия",Выборка.Номер, Выборка.ГоденДо, Выборка.Серия);
				
				НайденныеСтроки = Объект.Серии.НайтиСтроки(СтруктураПоиска);
				
				Если НайденныеСтроки.Количество() = 0 Тогда
					ОбрабатываемаяСтрока = Объект.Серии.Добавить();
					ЗаполнитьЗначенияСвойств(ОбрабатываемаяСтрока, Выборка);
					
					Если ЗначениеЗаполнено(Выборка.Серия) Тогда
						ЗаполнитьЗначенияСвойств(ОбрабатываемаяСтрока, ПрочитатьДопРеквизитыСерии(Выборка.Серия));
					КонецЕсли;
					Если НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
						ОбрабатываемаяСтрока.КоличествоУпаковок = Выборка.Количество;
					Иначе
						ОбрабатываемаяСтрока.КоличествоУпаковок = 1;
					КонецЕсли;
					
					ПараметрыПересчетаКоличества = Новый Структура("Упаковка,Номенклатура", Упаковка, Номенклатура);
					СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
					
					ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ОбрабатываемаяСтрока, СтруктураДействий, КэшированныеЗначения);
					Модифицированность   = Истина;
					
					Если Не ЗначениеЗаполнено(ОбрабатываемаяСтрока.ГоденДо) Тогда
						СрокГодностиЗаполнен = Ложь;
					КонецЕсли;
				Иначе
					ОбрабатываемаяСтрока = НайденныеСтроки[0];
					Если НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
						
						ТекущееКоличество = ОбрабатываемаяСтрока.КоличествоУпаковок;
						
						ОбрабатываемаяСтрока.КоличествоУпаковок = ОбрабатываемаяСтрока.КоличествоУпаковок + Выборка.Количество;
						
						ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, Номенклатура);
						СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
						
						ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ОбрабатываемаяСтрока, СтруктураДействий, КэшированныеЗначения);
						
						Модифицированность = Истина;
						
					Иначе
						ТекстСообщения = НСтр("ru = 'Серия с номером %НомерСерии% уже присутствует в списке серий'");
						ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НомерСерии%",Выборка.Номер);
						Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Серии",НайденныеСтроки[0].НомерСтроки,"Номер");
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект",ЕстьОшибки);
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(ОбрабатываемаяСтрока.ГоденДо) Тогда
						СрокГодностиЗаполнен = Ложь;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ШтрихкодыПоТипам.КиЗ.Количество() > 0 Тогда
		
		Для Каждого СтрМас из ШтрихкодыПоТипам.КиЗ Цикл
			
			ПолучитьИнформациюПоКиЗДобавитьСерию(СтрМас.ШтрихКод, ИдентификаторТекущейСтроки, КэшированныеЗначения);
			Модифицированность = Истина;
			
		КонецЦикла;
		
	КонецЕсли;
	ЗакрытьФорму = Ложь;
	
	Если Не ЕстьОшибки
		И РежимСканированияСерий = "ТоварСерияТовар"
		И (СрокГодностиЗаполнен
		Или Не НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии) Тогда
		СохранитьВводСерийСервер();
		Если Не Модифицированность Тогда
			ЗакрытьФорму = Истина;
		КонецЕсли;
	КонецЕсли;                              
	
	Результат = Новый Структура;
	Результат.Вставить("ЗакрытьФорму", ЗакрытьФорму);
	Результат.Вставить("ИдентификаторТекущейСтроки", ?(ОбрабатываемаяСтрока <> Неопределено,
														ОбрабатываемаяСтрока.ПолучитьИдентификатор(),
														Неопределено));
														
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ОбработатьСчитываниеRFID(ДанныеМеток, ИдентификаторТекущейСтроки)
	
	ПараметрыОбработки = ШтрихкодированиеНоменклатурыСервер.ПараметрыОбработкиСчитанныхRFIDИКиЗ();
	ЗаполнитьЗначенияСвойств(ПараметрыОбработки,ЭтаФорма);
	РезультатОбработки = ШтрихкодированиеНоменклатурыСервер.ОбработатьСчитываниеRFID(ДанныеМеток, ПараметрыОбработки, Объект.Серии, ИдентификаторТекущейСтроки);
	
	Если РезультатОбработки.ИдентификаторТекущейСтроки <> Неопределено Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
	Если РезультатОбработки.ДанныеСерии <> Неопределено
		И ЗначениеЗаполнено(РезультатОбработки.ДанныеСерии.Серия) Тогда
		ЗаполнитьЗначенияСвойств(РезультатОбработки.ДанныеСерии, ПрочитатьДопРеквизитыСерии(РезультатОбработки.ДанныеСерии.Серия));
	КонецЕсли;
	
	РезультатОбработки.ДанныеСерии = Неопределено;
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	Возврат РезультатОбработки;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьФлагиРаботыСМеткой(ТекущиеДанные)
	
	ПараметрыЗаполненияФлаговРаботыСМеткой = ШтрихкодированиеНоменклатурыКлиентСервер.ПараметрыЗаполненияФлаговРаботыСМеткой();
	ПараметрыЗаполненияФлаговРаботыСМеткой.GTIN = GTIN;
	ПараметрыЗаполненияФлаговРаботыСМеткой.ТекущаяМетка = Неопределено;
	ПараметрыЗаполненияФлаговРаботыСМеткой.НастройкиИспользованияСерий = НастройкиИспользованияСерий;
	ПараметрыЗаполненияФлаговРаботыСМеткой.ЭтоМаркировкаОстатковГИСМ = ЭтоМаркировкаОстатковГИСМ;
	ПараметрыЗаполненияФлаговРаботыСМеткой.ЭтоМаркировкаПерсонифицированнымиКиЗ = ЭтоМаркировкаПерсонифицированнымиКиЗ;
	
	ШтрихкодированиеНоменклатурыКлиентСервер.ЗаполнитьФлагиРаботыСМеткой(ТекущиеДанные, ПараметрыЗаполненияФлаговРаботыСМеткой);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

 &НаКлиенте
Процедура Печать(ПечатьКаждойШт)
	
	Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
		
		ПараметрыФормы = Новый Структура();
		Отбор = Новый Структура;
		Отбор.Вставить("Назначение",ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
		ПараметрыФормы.Вставить("Отбор",Отбор);
		
		ОткрытьФорму(
			"Справочник.ШаблоныЭтикетокИЦенников.ФормаВыбора",
			ПараметрыФормы,ЭтаФорма,,,,
			Новый ОписаниеОповещения("ПечатьЗавершение", 
				ЭтотОбъект,
				Новый Структура("ПечатьКаждойШт", ПечатьКаждойШт)),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		Возврат;
		
	КонецЕсли;
	
	ПечатьФрагмент(ПечатьКаждойШт);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    ПечатьКаждойШт = ДополнительныеПараметры.ПечатьКаждойШт;
    
    ШаблонСерии = Результат;
    
    Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
        Возврат;
    КонецЕсли;
    
    ПечатьФрагмент(ПечатьКаждойШт);

КонецПроцедуры

&НаКлиенте
Процедура ПечатьФрагмент(Знач ПечатьКаждойШт)
    
    Перем ПараметрКоманды, СтруктураПараметров;
    
    СтруктураПараметров = Новый Структура();
    
    Если Модифицированность Тогда
        
        Если СохранитьВводСерийСервер() Тогда
            СтруктураПараметров.Вставить("АдресВХранилище",ПодготовитьДанныеДляПечати(ПечатьКаждойШт,Элементы.Серии.ВыделенныеСтроки));	
        Иначе
            Возврат;
        КонецЕсли;
        
    ИначеЕсли Элементы.Серии.ТекущиеДанные <> Неопределено Тогда
        СтруктураПараметров.Вставить("АдресВХранилище",ПодготовитьДанныеДляПечати(ПечатьКаждойШт,Элементы.Серии.ВыделенныеСтроки));	
    Иначе
        Возврат;		
    КонецЕсли;
    
    СтруктураПараметров.Вставить("ШаблонЭтикетки",ШаблонСерии); 
    СтруктураПараметров.Вставить("НазначениеШаблона",ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
    СтруктураПараметров.Вставить("КоличествоЭкземпляров",1);
    
    ПараметрКоманды = Новый Массив;
    ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка"));
    
    Если ПечатьНаПринтер Тогда
        УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер(
        "Обработка.ПечатьЭтикетокИЦенников", // Для вызова метода менеджера обработки "Печать".
        "ЭтикеткаСерииНоменклатуры",
        ПараметрКоманды,
        СтруктураПараметров);
        
    Иначе
        УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
        "Обработка.ПечатьЭтикетокИЦенников", // Для вызова метода менеджера обработки "Печать".
        "ЭтикеткаСерииНоменклатуры",
        ПараметрКоманды,
        ЭтаФорма,
        СтруктураПараметров); // Форма владелец
        
    КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеДляПечати(ПечатьКаждойШт,Знач ВыделенныеСтроки)
			
	СерииНоменклатуры = Новый ТаблицаЗначений;
	СерииНоменклатуры.Колонки.Добавить("Серия",Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	СерииНоменклатуры.Колонки.Добавить("Штрихкод",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(16)));
	
	Для Каждого Идентификатор Из ВыделенныеСтроки Цикл
		Строка = Объект.Серии.НайтиПоИдентификатору(Идентификатор);
		
		Если ПечатьКаждойШт Тогда
			КоличествоЭкз = Строка.КоличествоУпаковок;
		Иначе
			КоличествоЭкз = 1;
		КонецЕсли;
		
		Пока КоличествоЭкз > 0 Цикл
			КоличествоЭкз = КоличествоЭкз - 1;
			НоваяСтрока = СерииНоменклатуры.Добавить();
			НоваяСтрока.Серия    = Строка.Серия;
			Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии 
				И НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
				НоваяСтрока.ШтрихКод = СокрЛП(Строка.Номер) + Формат(Строка.ГоденДо, "ДФ=""ддММггЧЧ""");
			ИначеЕсли НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
				НоваяСтрока.ШтрихКод = СокрЛП(Строка.Номер);
			Иначе
				НоваяСтрока.ШтрихКод = Формат(Строка.ГоденДо, "ДФ=""ддММггЧЧ""");
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(СерииНоменклатуры);;	
КонецФункции

#КонецОбласти

#Область ГенерацияСерий

&НаСервере
Функция ВычислитьМаксимальныйНомерИКоличество(ВидНоменклатуры, Упаковка, Количество)
	
	МаксимальныйНомерИзСправочника = Справочники.СерииНоменклатуры.ВычислитьМаксимальныйНомерСерии(ВидНоменклатуры);
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	Номер = Макс(ОписаниеТипаЧисла.ПривестиЗначение(МаксимальныйНомерВДокументе), МаксимальныйНомерИзСправочника);
	
	ТекущаяСтрока = Новый Структура;
	ТекущаяСтрока.Вставить("Номенклатура", Номенклатура);
	ТекущаяСтрока.Вставить("Упаковка", Упаковка);
	ТекущаяСтрока.Вставить("Количество", Количество);
	ТекущаяСтрока.Вставить("КоличествоУпаковок", Количество);
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка,Номенклатура", Упаковка, Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Неопределено);

	Результат = Новый Структура("Номер, ТекущаяСтрока", Номер, ТекущаяСтрока);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура НастроитьПорядокСканированияСерийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		РежимСканированияСерий = Результат.РежимСканированияСерий;
		Если Результат.ПечатьНаПринтер <> ПечатьНаПринтер Тогда
			ПечатьНаПринтер = Результат.ПечатьНаПринтер;
			ОбновитьКартинкуПечати();
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗапросЗаполненияТаблицыОстатков()
	
	Если Элементы.СтраницыСерий.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет
		И Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии Тогда
		Возврат;
	КонецЕсли;
	
	КоэффицентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Упаковка, Номенклатура);
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Номенклатура", Номенклатура);
	ПараметрыЗапроса.Вставить("Характеристика", Характеристика);
	ПараметрыЗапроса.Вставить("Назначение", Назначение);
	ПараметрыЗапроса.Вставить("Склад", Склад);
	ПараметрыЗапроса.Вставить("Помещение", Помещение);
	ПараметрыЗапроса.Вставить("Регистратор", Регистратор);
	ПараметрыЗапроса.Вставить("Распоряжение", Распоряжение);
	ПараметрыЗапроса.Вставить("КоэффицентУпаковки", КоэффицентУпаковки);
	
	
	ТекстЗапроса = Обработки.ПодборСерийВДокументы.ТекстЗапросаФормированияТаблицыДанныеРегистров(ВариантПолучениеДанныхИзРегистров, Склад);
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	СерииВДокументе.Серия,
	|	СерииВДокументе.Количество,
	|	СерииВДокументе.КоличествоУпаковок
	|ПОМЕСТИТЬ СерииВДокументе
	|ИЗ
	|	&СерииВДокументе КАК СерииВДокументе
	|ГДЕ
	|	СерииВДокументе.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Если РежимОтображенияСерий = "СерииВДокументе" Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	СерииВДокументе.Серия КАК Серия,
		|	ЕСТЬNULL(ДанныеРегистров.СвободныйОстаток, 0) / &КоэффицентУпаковки * &ЗнакОстатка - СерииВДокументе.КоличествоУпаковок КАК СвободныйОстаток,
		|	СерииВДокументе.Количество КАК Количество,
		|	СерииВДокументе.КоличествоУпаковок КАК КоличествоУпаковок,
		|	&ТекстЗапросаРеквизитыСерий
		|ИЗ
		|	СерииВДокументе КАК СерииВДокументе
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеРегистров КАК ДанныеРегистров
		|		ПО (ДанныеРегистров.Серия = СерииВДокументе.Серия)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГоденДо,
		|	Номер,
		|	НомерКиЗГИСМ";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий", ТекстЗапросаРеквизитыСерий("СерииВДокументе"));
	ИначеЕсли РежимОтображенияСерий = "ТолькоОстатки" Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.СвободныйОстаток) КАК СвободныйОстаток,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	&ТекстЗапросаРеквизитыСерий
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеРегистров.Серия КАК Серия,
		|		ДанныеРегистров.СвободныйОстаток / &КоэффицентУпаковки * &ЗнакОстатка КАК СвободныйОстаток,
		|		0 КАК Количество,
		|		0 КАК КоличествоУпаковок
		|	ИЗ
		|		ДанныеРегистров КАК ДанныеРегистров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СерииВДокументе.Серия,
		|		-СерииВДокументе.КоличествоУпаковок,
		|		СерииВДокументе.Количество,
		|		СерииВДокументе.КоличествоУпаковок
		|	ИЗ
		|		СерииВДокументе КАК СерииВДокументе) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Серия,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Серия КАК Справочник.СерииНоменклатуры).Номер,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Серия КАК Справочник.СерииНоменклатуры).ГоденДо
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВложенныйЗапрос.СвободныйОстаток) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГоденДо,
		|	Номер,
		|	НомерКиЗГИСМ";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий", ТекстЗапросаРеквизитыСерий("ВложенныйЗапрос"));
	ИначеЕсли РежимОтображенияСерий = "ВсеСерии" Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.СвободныйОстаток) КАК СвободныйОстаток,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	&ТекстЗапросаРеквизитыСерий
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеРегистров.Серия КАК Серия,
		|		ДанныеРегистров.СвободныйОстаток / &КоэффицентУпаковки * &ЗнакОстатка КАК СвободныйОстаток,
		|		0 КАК Количество,
		|		0 КАК КоличествоУпаковок
		|	ИЗ
		|		ДанныеРегистров КАК ДанныеРегистров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СерииВДокументе.Серия,
		|		-СерииВДокументе.КоличествоУпаковок,
		|		СерииВДокументе.Количество,
		|		СерииВДокументе.КоличествоУпаковок
		|	ИЗ
		|		СерииВДокументе КАК СерииВДокументе) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Серия,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Серия КАК Справочник.СерииНоменклатуры).Номер,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Серия КАК Справочник.СерииНоменклатуры).ГоденДо
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГоденДо,
		|	Номер,
		|	НомерКиЗГИСМ";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий", ТекстЗапросаРеквизитыСерий("ВложенныйЗапрос"));
	КонецЕсли;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Для Каждого Параметр из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	Запрос.УстановитьПараметр("ВсеСерии", РежимОтображенияСерий = "ВсеСерии");
	Запрос.УстановитьПараметр("СерииВДокументе", Объект.Серии.Выгрузить());
	
	Если ВариантПолучениеДанныхИзРегистров = "ТоварыКОформлениюПоступления"
		И ПараметрыУказанияСерий.ЭтоОрдер Тогда
		Запрос.УстановитьПараметр("ЗнакОстатка", -1);
	Иначе
		Запрос.УстановитьПараметр("ЗнакОстатка", 1);
	КонецЕсли;	
	
	ОстаткиСерий.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// Доп. реквизиты
	УправлениеСвойствамиУТ.ДобавитьКолонкиДополнительныхРеквизитов(
		Обработки.ПодборСерийВДокументы.ВладелецСвойствСерий(ВидНоменклатуры),
		ЭтаФорма,
		"ОстаткиСерий",
		"ОстаткиСерий",
		"ОстаткиСерийСвободныйОстаток",
		Истина);
	УправлениеСвойствамиУТ.ЗаполнитьКолонкиДополнительныхРеквизитов(
		ЭтаФорма,
		"ОстаткиСерий",
		"Серия");
		
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаСервере
Процедура ОстаткиСерийКоличествоУпаковокПриИзмененииСервер(ИдентификаторТекущейСтроки, КэшированныеЗначения)
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка,Номенклатура", Упаковка, Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);

	ТекущиеДанные = ОстаткиСерий.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
	НайденныеСтроки = Объект.Серии.НайтиСтроки(Новый Структура("Серия", ТекущиеДанные.Серия));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		НайденныеСтроки = Объект.Серии.НайтиСтроки(Новый Структура("Серия",Справочники.СерииНоменклатуры.ПустаяСсылка()));
	КонецЕсли;
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтрокаСерий = НайденныеСтроки[0];
		Если ТекущиеДанные.КоличествоУпаковок = 0 Тогда
			Объект.Серии.Удалить(СтрокаСерий);
			Возврат;
		КонецЕсли;
	ИначеЕсли ТекущиеДанные.КоличествоУпаковок = 0 Тогда
		Возврат;
	Иначе
		СтрокаСерий = Объект.Серии.Добавить();
	КонецЕсли;
		
	ЗаполнитьЗначенияСвойств(СтрокаСерий, ТекущиеДанные);
    ЗаполнитьЗначенияСвойств(СтрокаСерий, ПрочитатьДопРеквизитыСерии(СтрокаСерий.Серия));
	
КонецПроцедуры

&НаСервере
Функция СохранитьВводСерийСервер(СтрокаДляЗаписи = Неопределено)
	
	Если Объект.Серии.Количество() > 0 Тогда
		ПоследняяСтрока = Объект.Серии[Объект.Серии.Количество()-1];
		Если Не ЗначениеЗаполнено(ПоследняяСтрока.Серия)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.Номер)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.НомерКИЗГИСМ)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.ГоденДо)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.ДатаПроизводства)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.ПроизводительЕГАИС)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.Справка2ЕГАИС)
			И (ПоследняяСтрока.КоличествоУпаковок = 1
			Или ПоследняяСтрока.КоличествоУпаковок = 0) Тогда
			
			Объект.Серии.Удалить(ПоследняяСтрока);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыПроверки = Новый Структура("Номенклатура,Упаковка,ЭтоМаркировкаТоваровГИСМ,ЭтоМаркировкаПерсонифицированнымиКиЗ,
										|ЭтоМаркировкаОстатковГИСМ,ЭтоПоступлениеИзТаможенногоСоюза,ПроверятьЗаполнениеНомера,
										|ТолькоРедактированиеКоличества");
	
	ЗаполнитьЗначенияСвойств(ПараметрыПроверки, ЭтаФорма);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыПроверки, НастройкиИспользованияСерий);
	
	Объект.ПараметрыПроверки = Новый ФиксированнаяСтруктура(ПараметрыПроверки);
	
	Если НЕ (ПроверитьЗаполнение()
	 И УправлениеСвойствамиУТ.ПроверитьЗаполнениеДополнительныхРеквизитов(ЭтаФорма, "Объект.Серии")) Тогда
		Возврат Ложь;
	КонецЕсли;	
			
	НайтиЗарегистрированныеСерии();
	
	ТаблицаВозврата = Новый ТаблицаЗначений;
	ТаблицаВозврата.Колонки.Добавить("Серия",Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаВозврата.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));
	ТаблицаВозврата.Колонки.Добавить("КоличествоУпаковок",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));

	КоэффициентИсходнойУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(ИсходнаяУпаковка, Номенклатура);
	
	Для Каждого СтрТабл Из Объект.Серии Цикл
		
		Если СтрТабл.Количество > 0
			Или ТолькоРедактированиеКоличества Тогда // В режиме ТолькоРедактированиеКоличества нужно также вернуть строки с нулевым количеством
			
			СохранитьСериюПоСтроке(СтрТабл);
			
			НоваяСтрока = ТаблицаВозврата.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрТабл);
			НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество / КоэффициентИсходнойУпаковки;
			
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыУказанияСерий.ИмяТЧТовары = ПараметрыУказанияСерий.ИмяТЧСерии
		И ТаблицаВозврата.Количество() = 0 Тогда
		
		НоваяСтрока = ТаблицаВозврата.Добавить();
		НоваяСтрока.КоличествоУпаковок = Количество;
		
		СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", Новый Структура("Упаковка,Номенклатура", Упаковка, Номенклатура));
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, Неопределено);
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(ТаблицаВозврата,АдресВоВременномХранилище);
	Модифицированность = Ложь;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция СохранитьСериюПоСтроке(СтрТаблИдентификатор)
	
	Если ТипЗнч(СтрТаблИдентификатор) <> Тип("ДанныеФормыЭлементКоллекции") Тогда
		СтрТабл = Объект.Серии.НайтиПоИдентификатору(СтрТаблИдентификатор);
	Иначе
		СтрТабл = СтрТаблИдентификатор; 
	КонецЕсли;
	
	Результат = Ложь;
	
	Если ПравоДобавленияСерий Тогда
		СправочникОбъект = Неопределено;
		Если Не ЗначениеЗаполнено(СтрТабл.Серия) Тогда
			
			СправочникОбъект                    = Справочники.СерииНоменклатуры.СоздатьЭлемент();
			СправочникОбъект.ВидНоменклатуры    = ВидНоменклатуры;
			СправочникОбъект.Номер              = СтрТабл.Номер;
			СправочникОбъект.ГоденДо            = СтрТабл.ГоденДо;
			СправочникОбъект.НомерКИЗГИСМ       = СтрТабл.НомерКИЗГИСМ;
			СправочникОбъект.ДатаПроизводства   = СтрТабл.ДатаПроизводства;
			СправочникОбъект.ПроизводительЕГАИС = СтрТабл.ПроизводительЕГАИС;
			СправочникОбъект.Справка2ЕГАИС      = СтрТабл.Справка2ЕГАИС;
			
		ИначеЕсли УправлениеСвойствамиУТ.ЕстьДопРеквизитыВТаблице(ЭтотОбъект, "Объект.Серии")
			Или НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии Тогда
			
			СправочникОбъект = СтрТабл.Серия.ПолучитьОбъект();
			
		КонецЕсли;
		
		Если СправочникОбъект <> Неопределено Тогда
			Если УправлениеСвойствамиУТ.ЕстьДопРеквизитыВТаблице(ЭтотОбъект, "Объект.Серии") Тогда
				УправлениеСвойствамиУТ.ПеренестиДополнительныеРеквизитыИзФормыВОбъект(СправочникОбъект, ЭтаФорма, СтрТабл, "Объект.Серии");
			КонецЕсли;
			
			СправочникОбъект.RFIDTID        = СтрТабл.RFIDTID;
			СправочникОбъект.RFIDUser       = СтрТабл.RFIDUser;
			СправочникОбъект.RFIDEPC        = СтрТабл.RFIDEPC;
			СправочникОбъект.EPCGTIN        = СтрТабл.EPCGTIN;
			СправочникОбъект.Номер     		= СтрТабл.Номер;
			
			СправочникОбъект.Записать();
			Результат = Истина;
			СтрТабл.Серия = СправочникОбъект.Ссылка; 
			
		Иначе
			Результат = Истина;
		КонецЕсли;	
	Иначе
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		НужноЗадаватьВопросПередЗакрытием = Ложь;
		ЗавершитьВводСерий(Неопределено);// Сохранение результатов модификации.
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		
		НужноЗадаватьВопросПередЗакрытием = Ложь;
		Закрыть(Неопределено);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПрочитатьДопРеквизитыСерии(Серия)
	
	Возврат УправлениеСвойствамиУТ.ПрочитатьДопРеквизитыСерии(ЭтотОбъект, "Объект.Серии", Серия);
	
КонецФункции

&НаКлиенте
Процедура ПодобратьСерию(Элемент,ВводимыйРеквизит,ПроверяемыеРеквизиты)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить(ВводимыйРеквизит,ТекущиеДанные[ВводимыйРеквизит]);
	
	ПроверяемыеРеквизитыМассив = СтрРазделить(ПроверяемыеРеквизиты,",");
	
	Для каждого СтрМас из ПроверяемыеРеквизитыМассив Цикл 
		ПараметрыПоиска.Вставить(СтрМас,Неопределено);
	КонецЦикла;
	
	ПараметрыПоиска.Вставить("ВидНоменклатуры",ВидНоменклатуры);
	ПараметрыПоиска.Вставить("Отбор", Новый Структура);
	ПараметрыПоиска.Вставить("СтрокаПоиска", Неопределено);
	
	СписокВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.СерииНоменклатуры"),ПараметрыПоиска);
	
	ВыбранныйЭлемент = Неопределено;
		
	Значение = Новый Структура;
	Значение.Вставить("Серия", Неопределено);
	Значение.Вставить("Номер",ТекущиеДанные.Номер);
	Значение.Вставить("ГоденДо",ТекущиеДанные.ГоденДо);
	Значение.Вставить("НомерКиЗГИСМ",ТекущиеДанные.НомерКиЗГИСМ);
	Значение.Вставить("ДатаПроизводства",ТекущиеДанные.ДатаПроизводства);
	Значение.Вставить("ПроизводительЕГАИС",ТекущиеДанные.ПроизводительЕГАИС);
	Значение.Вставить("Справка2ЕГАИС",ТекущиеДанные.Справка2ЕГАИС);
	
	Наименование = НоменклатураКлиентСервер.ПредставлениеСерии(НастройкиИспользованияСерий, ТекущиеДанные, Истина);
	
	СписокВыбора.Вставить(0,Значение,Наименование);
	
	Если СписокВыбора.Количество() = 1 Тогда
		ВыбранныйЭлемент = СписокВыбора[0];
	ИначеЕсли СписокВыбора.Количество() = 2 Тогда
		Если СокрЛП(СписокВыбора[0].Значение.Номер) <> СокрЛП(СписокВыбора[1].Значение.Номер)
			Или (СписокВыбора[0].Значение.ГоденДо <> СписокВыбора[1].Значение.ГоденДо
			     И ЗначениеЗаполнено(СписокВыбора[0].Значение.ГоденДо))
			Или СокрЛП(СписокВыбора[0].Значение.НомерКиЗГИСМ) <> СокрЛП(СписокВыбора[1].Значение.НомерКиЗГИСМ)
			Или (СписокВыбора[0].Значение.ДатаПроизводства <> СписокВыбора[1].Значение.ДатаПроизводства
			     И ЗначениеЗаполнено(СписокВыбора[0].Значение.ДатаПроизводства))
			Или (СписокВыбора[0].Значение.ПроизводительЕГАИС <> СписокВыбора[1].Значение.ПроизводительЕГАИС
			     И ЗначениеЗаполнено(СписокВыбора[0].Значение.ПроизводительЕГАИС))
			Или (СписокВыбора[0].Значение.Справка2ЕГАИС <> СписокВыбора[1].Значение.Справка2ЕГАИС
			     И ЗначениеЗаполнено(СписокВыбора[0].Значение.Справка2ЕГАИС)) Тогда
				 
				 ДопПараметрыВыбора = Новый Структура("СписокВыбора, ТекущиеДанные, Элемент", СписокВыбора, ТекущиеДанные, Элемент);
				 ОписаниеОповещения = Новый ОписаниеОповещения("ПодобратьСериюЗавершение", ЭтотОбъект, ДопПараметрыВыбора);
				 
				 ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент);
		Иначе
			ВыбранныйЭлемент = СписокВыбора[1];
		КонецЕсли;
	ИначеЕсли СписокВыбора.Количество() > 0 Тогда
		ДопПараметрыВыбора = Новый Структура("СписокВыбора, ТекущиеДанные, Элемент", СписокВыбора, ТекущиеДанные, Элемент);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодобратьСериюЗавершение", ЭтотОбъект, ДопПараметрыВыбора);
		
		ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент);
	КонецЕсли;
	
	ПодобратьСериюФрагмент(ВыбранныйЭлемент, ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСериюЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	СписокВыбора = ДополнительныеПараметры.СписокВыбора;
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	Элемент = ДополнительныеПараметры.Элемент;
	
	ПодобратьСериюФрагмент(ВыбранныйЭлемент, ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСериюФрагмент(Знач ВыбранныйЭлемент, Знач ТекущиеДанные)
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ВыбранныйЭлемент.Значение); 
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ПрочитатьДопРеквизитыСерии(ТекущиеДанные.Серия));
		
	Иначе 
		ТекущиеДанные.Серия   = Неопределено; 
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПолучитьИнформациюПоКиЗДобавитьСерию(НомерКиЗ, ИдентификаторТекущейСтроки, КэшированныеЗначения)
	
	Если Не ИнтеграцияГИСМВызовСервера.ЭтоНомерКиЗ(НомерКиЗ) Тогда
		ТекстСообщения = НСтр("ru = 'Введенные данные не являются номером КиЗ.'");
		НомерКиЗ = "";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	                      
	ИнформацияПоКиЗ = ИнтеграцияГИСМ.ИнформацияОКиЗПоНомеру(НомерКиЗ);
	ИнформацияПоКиЗ.НомерКиЗ = НомерКиЗ;
	
	ПараметрыОбработки = ШтрихкодированиеНоменклатурыСервер.ПараметрыОбработкиСчитанныхRFIDИКиЗ();
	ЗаполнитьЗначенияСвойств(ПараметрыОбработки, ЭтотОбъект);	
	ОбработаннаяСтрока = ШтрихкодированиеНоменклатурыСервер.ДобавитьСериюПоИнформацииПоКиЗ(ИнформацияПоКиЗ, ПараметрыОбработки, Объект.Серии, ИдентификаторТекущейСтроки);
	
	Если ЗначениеЗаполнено(ОбработаннаяСтрока.Серия) Тогда
		ЗаполнитьЗначенияСвойств(ОбработаннаяСтрока, ПрочитатьДопРеквизитыСерии(ОбработаннаяСтрока.Серия));
	КонецЕсли;
	
	Если ИдентификаторТекущейСтроки <> Неопределено Тогда
	
		ТекущиеДанные = Объект.Серии.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
		Если Не НастройкиИспользованияСерий.ИспользоватьКоличествоСерии
			И ЗначениеЗаполнено(ТекущиеДанные.Номер)
			Или ЗначениеЗаполнено(ТекущиеДанные.НомерКИЗГИСМ)
			Или ЗначениеЗаполнено(ТекущиеДанные.ГоденДо) Тогда
			Если ТекущиеДанные.КоличествоУпаковок = 0
				И Не ТолькоРедактированиеКоличества Тогда
				ТекущиеДанные.КоличествоУпаковок = 1;
				
				СтруктураДействий = Новый Структура;
				СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", Новый Структура("Упаковка,Номенклатура", Упаковка, Номенклатура));
				
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСериюКлиент()
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	ЗначенияЗаполненияСерии.Вставить("ВидНоменклатуры", ВидНоменклатуры);
	ЗначенияЗаполненияСерии.Вставить("Номер", ТекущиеДанные.Номер);
	ЗначенияЗаполненияСерии.Вставить("ГоденДо", ТекущиеДанные.ГоденДо);
	ЗначенияЗаполненияСерии.Вставить("НомерКИЗГИСМ", ТекущиеДанные.НомерКИЗГИСМ);
	ЗначенияЗаполненияСерии.Вставить("ДатаПроизводства", ТекущиеДанные.ДатаПроизводства);
	ЗначенияЗаполненияСерии.Вставить("ПроизводительЕГАИС", ТекущиеДанные.ПроизводительЕГАИС);
	ЗначенияЗаполненияСерии.Вставить("Справка2ЕГАИС", ТекущиеДанные.Справка2ЕГАИС);
	ЗначенияЗаполненияСерии.Вставить("RFIDTID", ТекущиеДанные.RFIDTID);
	ЗначенияЗаполненияСерии.Вставить("RFIDUser", ТекущиеДанные.RFIDUser);
	ЗначенияЗаполненияСерии.Вставить("RFIDEPC", ТекущиеДанные.RFIDEPC);
	ЗначенияЗаполненияСерии.Вставить("EPCGTIN", ТекущиеДанные.EPCGTIN);
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	ОткрытьФорму("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыФормыСерии, ЭтаФорма,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуПриСканировании()
	Закрыть(АдресВоВременномХранилище);
КонецПроцедуры

&НаСервере
Функция ОбъединитьСтроки(СтруктураПараметров,Идентификатор)
	
	Для Каждого Строка Из Объект.Серии Цикл
		
		Если ((НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии
					И Строка.НомерКИЗГИСМ = СтруктураПараметров.НомерКИЗГИСМ)
				Или	(Не НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии
					И Строка.Номер = СтруктураПараметров.Номер  
					И Строка.ГоденДо = СтруктураПараметров.ГоденДо
					И Строка.ДатаПроизводства = СтруктураПараметров.ДатаПроизводства
					И Строка.ПроизводительЕГАИС = СтруктураПараметров.ПроизводительЕГАИС
					И Строка.Справка2ЕГАИС = СтруктураПараметров.Справка2ЕГАИС))
			И Строка.ПолучитьИдентификатор() <> Идентификатор  Тогда
			
			Если НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
				Строка.Количество = Строка.Количество + СтруктураПараметров.Количество;
				Строка.КоличествоУпаковок = Строка.КоличествоУпаковок + СтруктураПараметров.КоличествоУпаковок;
			КонецЕсли;
			
			Возврат Истина;	
		КонецЕсли;	
		
	КонецЦикла;	
	Возврат Ложь;
КонецФункции

&НаСервере
Процедура ОбновитьКартинкуПечати()
	Если ПечатьНаПринтер Тогда
		Элементы.ГруппаПечать.Картинка = БиблиотекаКартинок.ПечатьСразу;
	Иначе
	    Элементы.ГруппаПечать.Картинка = БиблиотекаКартинок.Печать;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ДобавитьСтрокиНаСервере(ВидНоменклатуры, Результат, Упаковка)
	
    КолСерий = Результат.КоличествоСерий;
    ВКаждойСерии = Результат.ВКаждойСерии;
    ВКаждойСерииКоличество = Результат.ВКаждойСерииКоличество;
	
	АктивнаяСтрока = Неопределено;
	
	ПараметрыСтроки = Новый Структура;
	ПараметрыСтроки.Вставить("Номенклатура",       Номенклатура);
	ПараметрыСтроки.Вставить("Упаковка",           Упаковка);
	ПараметрыСтроки.Вставить("Количество",         ВКаждойСерииКоличество);
	ПараметрыСтроки.Вставить("КоличествоУпаковок", ВКаждойСерииКоличество);
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ПараметрыСтроки, СтруктураДействий, Неопределено);
	
	СтруктураДопРеквизитов = УправлениеСвойствамиУТ.ПрочитатьДопРеквизитыСерии(ЭтотОбъект, "Объект.Серии", Результат);
	
	Если Результат.СпособНумерацииСерий = 0 И Результат.ОграничениеГенерацииНомеров = 0 Тогда
	
	    СтруктураВозврата = ВычислитьМаксимальныйНомерИКоличество(
			ВидНоменклатуры,
			Упаковка,
			ВКаждойСерииКоличество);
		
		Номер = СтруктураВозврата.Номер;

		Пока КолСерий > 0 Цикл
			                             
			КолСерий = КолСерий-1;
			Номер = Номер+1;
			ТекущаяСтрока = Объект.Серии.Добавить();
			   
			Если АктивнаяСтрока = Неопределено Тогда
				АктивнаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
			КонецЕсли;
			
			ТекущаяСтрока.Номер = Формат(Номер, "ЧЦ=8; ЧВН=; ЧГ=");
			
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ПараметрыСтроки); 
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураДопРеквизитов); 
			

		КонецЦикла;	
		
		МаксимальныйНомерВДокументе = ТекущаяСтрока.Номер;
		
	Иначе
		
		Если Результат.СпособНумерацииСерий = 0 И Результат.ОграничениеГенерацииНомеров = 1 Тогда
		
			ТаблицаНомеров = Справочники.СерииНоменклатуры.СгенерироватьНомераСерийВДиапазоне(
				ВидНоменклатуры,
				Результат.НачальныйНомер,
				Результат.КонечныйНомер,
				КолСерий);
		
			Если ТаблицаНомеров.Количество() < КолСерий Тогда
				ТаблицаНомеров.Очистить();
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'В указанном диапазоне недостаточно свободных номеров.'"));
			КонецЕсли;
			
		Иначе
			
			ТаблицаНомеров = Справочники.СерииНоменклатуры.ПолучитьНомераСерийВДиапазоне(
				ВидНоменклатуры,
				Результат.НачальныйНомер,
				Результат.КонечныйНомер);
			
		КонецЕсли;
			
		Для Каждого ТекСтр Из ТаблицаНомеров Цикл
			
			СуществующиеСтроки = Объект.Серии.НайтиСтроки(Новый Структура("Номер", ТекСтр.Номер));
			
			Если СуществующиеСтроки.Количество() > 0 Тогда 
				
				ТекущаяСтрока = СуществующиеСтроки[0];
				
				ТекущаяСтрока.Количество = ТекущаяСтрока.Количество + ПараметрыСтроки.Количество;
				ТекущаяСтрока.КоличествоУпаковок = ТекущаяСтрока.КоличествоУпаковок + ПараметрыСтроки.КоличествоУпаковок;
				
			Иначе
				
				ТекущаяСтрока = Объект.Серии.Добавить();
				
				ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ТекСтр);
				ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ПараметрыСтроки); 
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураДопРеквизитов); 
			
			Если АктивнаяСтрока = Неопределено Тогда
				АктивнаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
			КонецЕсли;
						
			МаксимальныйНомерВДокументе = ТекущаяСтрока.Номер;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат АктивнаяСтрока;
	
КонецФункции

&НаСервере
Процедура СерииНомерПриИзмененииНаСервере(Номер)
	
	Если СтрДлина(Номер) <> 8 Тогда
		Возврат;
	КонецЕсли;	
	
	ТаблицаСерии = Новый ТаблицаЗначений;
	ТаблицаСерии.Колонки.Добавить("Номер", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(8)));
	НоваяСтрока = ТаблицаСерии.Добавить();
	НоваяСтрока.Номер = Номер;
	Запрос = Новый Запрос;
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номер
	|ПОМЕСТИТЬ ТаблицаСерии
	|ИЗ
	|	&ТаблицаСерии КАК ТаблицаСерии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаСерии.Номер
	|ИЗ
	|	ТаблицаСерии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Номер ПОДОБНО ""[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]""";
	Запрос.УстановитьПараметр("ТаблицаСерии", ТаблицаСерии);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
		НомерЧисло = ОписаниеТипаЧисла.ПривестиЗначение(Выборка.Номер);
		МаксимальныйНомерВДокументеЧисло = ОписаниеТипаЧисла.ПривестиЗначение(МаксимальныйНомерВДокументе);
		Если НомерЧисло > МаксимальныйНомерВДокументеЧисло Тогда
			МаксимальныйНомерВДокументе = Номер; 		
		КонецЕсли;	
	КонецЕсли;	
		
КонецПроцедуры	

&НаСервере
Процедура НайтиЗарегистрированныеСерии()
	
	Запрос = Новый Запрос; 
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Серии.Серия КАК Серия,
	|	Серии.НомерКИЗГИСМ КАК НомерКИЗГИСМ,
	|	Серии.RFIDTID КАК RFIDTID,
	|	Серии.Номер КАК Номер,
	|	Серии.Номер = """" КАК НомерНеУказан,
	|	Серии.ГоденДо КАК ГоденДо,
	|	Серии.ГоденДо = ДАТАВРЕМЯ(1, 1, 1) КАК ГоденДоНеУказан,
	|	Серии.ДатаПроизводства КАК ДатаПроизводства,
	|	Серии.ДатаПроизводства = ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПроизводстваНеУказан,
	|	Серии.ПроизводительЕГАИС КАК ПроизводительЕГАИС,
	|	Серии.ПроизводительЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка) КАК ПроизводительЕГАИСНеУказан,
	|	Серии.Справка2ЕГАИС КАК Справка2ЕГАИС,
	|	Серии.Справка2ЕГАИС = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка) КАК Справка2ЕГАИСНеУказан,
	|	Серии.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|ГДЕ
	|	Серии.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Серия,
	|	Серии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Серии КАК Серии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (ВЫБОР
	|				КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьНомерКИЗГИСМСерии
	|					ТОГДА Серии.НомерКИЗГИСМ = СерииНоменклатуры.НомерКиЗГИСМ
	|				ИНАЧЕ ВЫБОР
	|							КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьНомерСерии
	|								ТОГДА Серии.Номер = СерииНоменклатуры.Номер
	|							ИНАЧЕ Серии.НомерНеУказан
	|						КОНЕЦ
	|						И ВЫБОР
	|							КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьСрокГодностиСерии
	|								ТОГДА Серии.ГоденДо = СерииНоменклатуры.ГоденДо
	|							ИНАЧЕ Серии.ГоденДоНеУказан
	|						КОНЕЦ
	|						И ВЫБОР
	|							КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьДатуПроизводстваСерии
	|								ТОГДА Серии.ДатаПроизводства = СерииНоменклатуры.ДатаПроизводства
	|							ИНАЧЕ Серии.ДатаПроизводстваНеУказан
	|						КОНЕЦ
	|						И ВЫБОР
	|							КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьПроизводителяЕГАИССерии
	|								ТОГДА Серии.ПроизводительЕГАИС = СерииНоменклатуры.ПроизводительЕГАИС
	|							ИНАЧЕ Серии.ПроизводительЕГАИСНеУказан
	|						КОНЕЦ
	|						И ВЫБОР
	|							КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьСправку2ЕГАИССерии
	|								ТОГДА Серии.Справка2ЕГАИС = СерииНоменклатуры.Справка2ЕГАИС
	|							ИНАЧЕ Серии.Справка2ЕГАИСНеУказан
	|						КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Серии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (СерииНоменклатуры.ВидНоменклатуры.ИспользоватьRFIDМеткиСерии)
	|			И (Серии.RFIDTID <> """")
	|			И Серии.RFIDTID = СерииНоменклатуры.RFIDTID
	|			И (ВЫБОР
	|				КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьНомерКИЗГИСМСерии
	|					ТОГДА Серии.НомерКИЗГИСМ <> СерииНоменклатуры.НомерКиЗГИСМ
	|				КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьНомерСерии
	|					ТОГДА Серии.Номер <> СерииНоменклатуры.Номер
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры",ВидНоменклатуры);
	Запрос.УстановитьПараметр("Серии",Объект.Серии.Выгрузить());

	Результат = Запрос.ВыполнитьПакет();
	ВыборкаПоСсылкам = Результат[1].Выбрать();
	ВыборкаПоОшибкамМеток = Результат[2].Выбрать();
	
	Отказ = Ложь;
	
	Пока ВыборкаПоОшибкамМеток.Следующий() Цикл
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана информация о серии с привязкой к RFID-метке, по которой уже зарегистрирована другая серия. Попробуйте считать информацию о метке еще раз.'");
	    ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", ВыборкаПоОшибкамМеток.НомерСтроки);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Серии", ВыборкаПоОшибкамМеток.НомерСтроки, "СтатусРаботыRFID");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект",Отказ);
	КонецЦикла;
	
	Если Отказ Тогда
		ТекстИсключения = НСтр("ru = 'Выявлены ошибки при проверке использования TID RFID-меток.'");
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
		
	Пока ВыборкаПоСсылкам.Следующий() Цикл
		Объект.Серии[ВыборкаПоСсылкам.НомерСтроки-1].Серия = ВыборкаПоСсылкам.Серия;		
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьПоFEFOНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеРегистров.Серия КАК Серия,
	|	ДанныеРегистров.Серия.Номер КАК Номер,
	|	ДанныеРегистров.Серия.ГоденДо КАК ГоденДо,
	|	СУММА(ДанныеРегистров.СвободныйОстаток) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Серия КАК Серия,
	|		ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток КАК СвободныйОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				,
	|				Номенклатура = &Номенклатура
	|					И Характеристика = &Характеристика
	|					И Назначение = &Назначение
	|					И Склад = &Склад
	|					И Помещение = &Помещение) КАК ТоварыНаСкладахОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыНаСкладах.Серия,
	|		ВЫБОР
	|			КОГДА ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ТоварыНаСкладах.ВНаличии + ТоварыНаСкладах.КОтгрузке
	|			ИНАЧЕ ТоварыНаСкладах.ВНаличии - ТоварыНаСкладах.КОтгрузке
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
	|	ГДЕ
	|		ТоварыНаСкладах.Номенклатура = &Номенклатура
	|		И ТоварыНаСкладах.Характеристика = &Характеристика
	|		И ТоварыНаСкладах.Назначение = &Назначение
	|		И ТоварыНаСкладах.Склад = &Склад
	|		И ТоварыНаСкладах.Помещение = &Помещение
	|		И ТоварыНаСкладах.Регистратор = &Регистратор) КАК ДанныеРегистров
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистров.Серия,
	|	ДанныеРегистров.Серия.Номер,
	|	ДанныеРегистров.Серия.ГоденДо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДанныеРегистров.СвободныйОстаток) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Запрос.УстановитьПараметр("Назначение", Назначение);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Помещение", Помещение);
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	КоличествоКРаспределению = Количество*КоэффициентУпаковки;
	Объект.Серии.Очистить();
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии Тогда
			
		Пока Выборка.Следующий() И КоличествоКРаспределению > 0 Цикл
				
			КоличествоПоСтроке =  Мин(Выборка.Количество, КоличествоКРаспределению);
			КоличествоКРаспределению = КоличествоКРаспределению - КоличествоПоСтроке;
			
			НоваяСтрока = Объект.Серии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.Количество = КоличествоПоСтроке;
			НоваяСтрока.КоличествоУпаковок = КоличествоПоСтроке/КоэффициентУпаковки;
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого Строка Из ОстаткиСерий Цикл
			Строка.СвободныйОстаток = Строка.СвободныйОстаток + Строка.Количество/КоэффициентУпаковки;
			Строка.КоличествоУпаковок = 0;
			Строка.Количество = 0;
		КонецЦикла;
		
		Пока Выборка.Следующий() И КоличествоКРаспределению > 0 Цикл
			
			Отбор = Новый Структура("Серия", Выборка.Серия);			
			МассивСтрок = ОстаткиСерий.НайтиСтроки(Отбор);
			Если МассивСтрок.Количество() <> 0 Тогда
				
				КоличествоПоСтроке =  Мин(Выборка.Количество, КоличествоКРаспределению);
				КоличествоКРаспределению = КоличествоКРаспределению - КоличествоПоСтроке;
				
				СтрокаСерий = МассивСтрок[0];	
				СтрокаСерий.Количество = КоличествоПоСтроке;
				СтрокаСерий.КоличествоУпаковок = КоличествоПоСтроке/КоэффициентУпаковки;
								
				СтрокаСерий.СвободныйОстаток = СтрокаСерий.СвободныйОстаток - КоличествоПоСтроке/КоэффициентУпаковки;
				
				НоваяСтрокаСерии = Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, СтрокаСерий);
								
			Иначе		
				
				КоличествоПоСтроке =  Мин(Выборка.Количество, КоличествоКРаспределению);
				КоличествоКРаспределению = КоличествоКРаспределению - КоличествоПоСтроке;
				
				НоваяСтрока = ОстаткиСерий.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.СвободныйОстаток = Выборка.Количество/КоэффициентУпаковки;
				НоваяСтрока.Количество = КоличествоПоСтроке;
				НоваяСтрока.КоличествоУпаковок = КоличествоПоСтроке/КоэффициентУпаковки;
								
				НоваяСтрока.СвободныйОстаток = НоваяСтрока.СвободныйОстаток - КоличествоПоСтроке/КоэффициентУпаковки;
					
				НоваяСтрокаСерии = Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НоваяСтрока);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовкиПоУпаковке()
	
	ЗаголовокКоличествоВДокументе = НСтр("ru = 'Необходимо зарегистрировать, %ЕдиницаИзмерения%'");
	ЗаголовокКоличествоСерий      = НСтр("ru = 'Зарегистрировано серий, %ЕдиницаИзмерения%'");
	Если ЗначениеЗаполнено(ПараметрЗаголовокКолонкиКоличество) Тогда
		ЗаголовокКолонкиКоличество = ПараметрЗаголовокКолонкиКоличество; 
	Иначе
		ЗаголовокКолонкиКоличество = НСтр("ru = 'Количество'"); 
	КонецЕсли;
	ЗаголовокКолонкиКоличество    = ЗаголовокКолонкиКоличество + ", %ЕдиницаИзмерения%"; 
	ЗаголовокКомандыПечати        = НСтр("ru = 'Этикетки для каждой(ого) %ЕдиницаИзмерения%'");
	
	Если ЗначениеЗаполнено(Упаковка) Тогда
		
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",Упаковка);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",Упаковка);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",Упаковка);
		ЗаголовокКомандыПечати        = СтрЗаменить(ЗаголовокКомандыПечати,"%ЕдиницаИзмерения%",Упаковка);
		ЗаголовокСвободногоОстатка    = СтрЗаменить(ЗаголовокСвободногоОстаткаПоУмолчанию,"%ЕдиницаИзмерения%", Упаковка);
		ЕдиницаИзмеренияСтр           = Упаковка;
	    
	Иначе
		
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКомандыПечати        = СтрЗаменить(ЗаголовокКомандыПечати,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокСвободногоОстатка    = СтрЗаменить(ЗаголовокСвободногоОстаткаПоУмолчанию,"%ЕдиницаИзмерения%", РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЕдиницаИзмеренияСтр 		  = РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление;
		
	КонецЕсли;
	
	Если Не НастройкиИспользованияСерий.ИспользоватьКоличествоСерии Тогда
		ЗаголовокКолонкиКоличество = " ";
	КонецЕсли;
	
	Элементы.СерииКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	Элементы.Количество.Заголовок              = ЗаголовокКоличествоВДокументе;
	Элементы.КоличествоСерий.Заголовок         = ЗаголовокКоличествоСерий;
	Элементы.ПечатьКаждойШт.Заголовок		     = ЗаголовокКомандыПечати;

	Элементы.ОстаткиСерийСвободныйОстаток.Заголовок   = ЗаголовокСвободногоОстатка;
	Элементы.ОстаткиСерийКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	
КонецПроцедуры

&НаСервере
Процедура УпаковкаПриИзмененииСервер()
	
	КоэффициентУпаковки = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Упаковка, Номенклатура);
	
	ЭтоЕдиничнаяУпаковка = КоэффициентУпаковки = 1;
	
	Для Каждого ТекСтр Из Объект.Серии Цикл
		ТекСтр.КоличествоУпаковок = ТекСтр.Количество / КоэффициентУпаковки;
	КонецЦикла;
	
	ВыполнитьЗапросЗаполненияТаблицыОстатков();
	
	Количество = КоличествоВДокументе / КоэффициентУпаковки;
	
	УстановитьЗаголовкиПоУпаковке();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГоденДоПоДатеПроизводства(ТекущиеДанные, Элемент)
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		
		ГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ТекущиеДанные.ДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности);
		
		Если ЗначениеЗаполнено(ГоденДо)
			И (Не ЗначениеЗаполнено(ТекущиеДанные.ГоденДо)
				Или ТекущиеДанные.ГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ТекущаяДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности)) Тогда
			
			ТекущиеДанные.ГоденДо = ГоденДо;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ДатаПроизводства) Тогда
		ПодобратьСерию(Элемент, "ДатаПроизводства", "ГоденДо,Номер,НомерКиЗГИСМ,ПроизводительЕГАИС,Справка2ЕГАИС");
	Иначе
		ТекущиеДанные.Серия = Неопределено;
	КонецЕсли;
	
	ТекущаяДатаПроизводства = ТекущиеДанные.ДатаПроизводства;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
