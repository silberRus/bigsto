//СТОК Бойков начало         
&НаКлиенте
Процедура СТ_СтрокаПоискаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Состояние("Производится поиск по подстроке");
	Если ЗначениеЗаполнено(Текст) Тогда
		МНомен = СТ_СтрокаПоискаОкончаниеВводаТекстаНаСервере(Текст);
	Иначе
		//МНомен = Новый массив;
		МНомен = неопределено;
		//МНомен.Добавить(Справочники.Номенклатура.ПустаяСсылка());
	КонецЕсли;
	СТ_Общий.СТ_СтрокаПоискаОкончаниеВводаТекста(СписокНоменклатура,Элемент,МНомен,"Ссылка",Текст);
	ЭтаФорма.СТ_СтрокаПоиска = Текст;
	//СТОРВЕРК Лабутин 20.01.2016 Задание №6046
	//сохраним результаты, выведенные в таб. часть в наш регистр 
	//записываем только если более четырех значимых символов в тексте запроса
	Если  ЕстьЧетыреЗначимыхСимвола(Текст)  Тогда 		
		ЗаписатьРезультатыЗапроса(Текст)
	КонецЕсли;
	//_
КонецПроцедуры

//СТОРВЕРК Лабутин 20.01.2016 Задание №6046
//функция записывает результаты поискового запроса в РС СТ_СтатистикаЗапросов
//дублируется в обработке СТ_ПодборЗаказ (правильно было бы вместо двух обработок сделать одну)
&НаСервере
Процедура ЗаписатьРезультатыЗапроса(Запрос)
		
	//получим результаты поискового запроса
	Список = Элементы.СписокНоменклатура;	
	Схема = Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ДатаЗапроса = ТекущаяДата();
	Пользователь = Пользователи.ТекущийПользователь();
	
	//создадим набор записей
	Набор = РегистрыСведений.СТ_СтатистикаЗапросов.СоздатьНаборЗаписей();
	Набор.Отбор.Период.Установить(ДатаЗапроса);
	Набор.Отбор.Запрос.Установить(Запрос);
	Набор.Отбор.Пользователь.Установить(Пользователь);
	
	Если Результат.Количество() > 50 Тогда  //слишком много результатов
		СтатусЗапроса = Перечисления.СТ_СтатусыЗапросов.D;
		
		Запись = Набор.Добавить();
		Запись.Период = ДатаЗапроса;
		Запись.Пользователь = Пользователь;
		Запись.НомерСтрокиРезультата = 1;
		Запись.Статус = СтатусЗапроса;
		Запись.Запрос = Запрос;
		Набор.Записать();
		
	ИначеЕсли Результат.Количество() = 0 Тогда   //ничего не найдено
		СтатусЗапроса = Перечисления.СТ_СтатусыЗапросов.C;
		
		Запись = Набор.Добавить();
		Запись.Период = ДатаЗапроса;
		Запись.Пользователь = Пользователь;
		Запись.НомерСтрокиРезультата = 1;
		Запись.Статус = СтатусЗапроса;
		Запись.Запрос = Запрос;
		Набор.Записать();
		
	Иначе   //обработаем кажду строку результата
		ТекНомерСтроки = 1;
		Для каждого СтрокаРезультата Из Результат Цикл
			Запись = Набор.Добавить();
			Запись.Период = ДатаЗапроса;
			Запись.Пользователь = Пользователь;
			Запись.НомерСтрокиРезультата = ТекНомерСтроки;
			
			Запись.Запрос = Запрос; 
			Запись.Статус = ?(СтрокаРезультата.СвободныйОстаток >0, Перечисления.СТ_СтатусыЗапросов.A, Перечисления.СТ_СтатусыЗапросов.B);
			Запись.Производитель = СтрокаРезультата.Ссылка.Производитель;
			Запись.Артикул = СтрокаРезультата.Ссылка.Артикул;
			Запись.ГруппаТМЦ = СтрокаРезультата.Ссылка.Родитель;
			Запись.Остаток = СтрокаРезультата.СвободныйОстаток;
			
			ТекНомерСтроки = ТекНомерСтроки + 1;
			
		КонецЦикла; 				   
		Набор.Записать();
		
		
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьЧетыреЗначимыхСимвола(Текст)
	КоличествоЗначимых = 0;
	Если СтрДлина(Текст)>=4 Тогда
		Для Инд = 1 По СтрДлина(Текст) Цикл
			Если ЭтоЗначимыйСимвол(Сред(Текст,Инд,1)) Тогда
				КоличествоЗначимых = КоличествоЗначимых + 1;
			КонецЕсли;
			Если КоличествоЗначимых = 4 Тогда 
				Возврат Истина
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция ЭтоЗначимыйСимвол(Строка)
	Возврат ?(Найти("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZАБВГДЕЁЖЗИЙКЛМНОПРОСТУФХЦЧШЩЫЪЬЭЮЯ", Врег(Строка))>0,Истина, Ложь);
КонецФункции
//_

&НаСервереБезКонтекста
Функция СТ_СтрокаПоискаОкончаниеВводаТекстаНаСервере(СтрокаПоиска)
	// Вставить содержимое обработчика.
	Возврат СТ_Общий.ПоискНоменклатуры(СтрокаПоиска);	
КонецФункции


&НаКлиенте
Процедура ОткрытьНоменклатуру(Команда)
	// Вставить содержимое обработчика.
	Номен = этаформа.Элементы.СписокНоменклатура.ТекущиеДанные.Ссылка;
	Параметр = Новый Структура;
	Параметр.Вставить("Ключ",Номен);
	Параметр.Вставить("Номенклатура",Номен);
	
	Если ЭтоСклад() = Истина Тогда
		ОткрытьФорму("Обработка.СТ_СправочникНоменклатура.Форма.ФормаРедактированиеМестаХранения",Параметр,ЭтаФорма);
	Иначе
		ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта",Параметр,ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоСклад()
	Результ = Ложь;
	
	Результ = СТ_Общий.ЭтоСклад();
	
	Возврат Результ;
КонецФункции

&НаКлиенте
Процедура СписокНоменклатураВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ОткрытьНоменклатуру(неопределено);
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Вставить содержимое обработчика                            
	Этаформа.Валюта = ПолучитьВалюту();
	
	СписокНоменклатура.Параметры.УстановитьЗначениеПараметра("Склад",ПолучитьСклад());
	СписокНоменклатура.Параметры.УстановитьЗначениеПараметра("ЦенаРозн",ПолучитьТипЦены("Розничные"));
	СписокНоменклатура.Параметры.УстановитьЗначениеПараметра("ЦенаЗакуп",ПолучитьТипЦены("Закупочные"));
	СписокНоменклатура.Параметры.УстановитьЗначениеПараметра("Валюта",Этаформа.Валюта);
	СписокНоменклатура.Параметры.УстановитьЗначениеПараметра("Скидос",0);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСклад()
	Возврат Справочники.Склады.НайтиПоНаименованию("Склад №2");
КонецФункции
&НаСервереБезКонтекста
Функция ПолучитьТипЦены(ВидЦеныНаименование)
	Возврат Справочники.ВидыЦен.НайтиПоНаименованию(ВидЦеныНаименование);
КонецФункции
&НаСервереБезКонтекста
Функция ПолучитьКурсыВалют()
	Запрос = Новый Запрос;
	ЗАпрос.Текст = "ВЫБРАТЬ
	               |	КурсыВалютСрезПоследних.Валюта,
	               |	КурсыВалютСрезПоследних.Курс,
	               |	КурсыВалютСрезПоследних.Кратность
	               |ИЗ
	               |	РегистрСведений.КурсыВалют.СрезПоследних КАК КурсыВалютСрезПоследних";
	Рез = Запрос.Выполнить().Выбрать();
	Возврат Справочники.Склады.НайтиПоНаименованию("Склад №2");
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВалюту()
	Возврат Справочники.Валюты.НайтиПоНаименованию("руб.");
КонецФункции

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	СписокНоменклатура.Параметры.УстановитьЗначениеПараметра("Валюта",Этаформа.Валюта);
КонецПроцедуры

&НаСервере
Процедура СписокНоменклатураПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать
