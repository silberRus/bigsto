#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьУсловноеОформление();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
//Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаМинМакс
//Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьРасчетМинМакс(Команда)
	ВыполнитьРасчетМинМаксНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьРасчетМинМаксНаСервере()
	НастройкиОбеспечения = АТ_ОбщегоНазначения.ПолучитьНастройку("ОбеспечениеСкладов");
	ОбщиеНастройки = АТ_ОбщегоНазначения.ПолучитьНастройку("ОбщиеНастройки");
	НастройкиСкладов = Неопределено;
	
	Если ТипЗнч(НастройкиОбеспечения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиОбеспечения.Свойство("НастройкиСкладов", НастройкиСкладов);
	
	Если ТипЗнч(НастройкиСкладов) <> Тип("ТаблицаЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаСклада = НастройкиСкладов.Найти(Склад, "Склад");
	
	Если НастройкаСклада = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоследнееПеремещение = ПолучитьПоследнееПеремещение(Склад);
	
	МассивХозОпераций = Новый Массив;
	МассивХозОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
	МассивХозОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияВРозницу);
	МассивХозОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	МассивХозОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет);
	МассивХозОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияПрочихАктивов);
	
	//Описание запроса
	// 01 пакет - ВТ Дн - дни производственного колендаря
	// 02 пакет - ВТ Дни - таблица показывающия рабочие дни и количество рабочих дней с начала периода
	// 03 пакет - ВТ ОбеспечениеСрезПоследних - срез последних регистра АТ_ОбеспечениеСкладов по складу, где максимум больше нуля
	// 04 пакет - ВТ ОстаткиНаКаждыйДень - остатки на каждый день по методу Гилева http://www.gilev.ru/остатки-на-каждый-день/
	// 05 пакет - ВТ ОстаткиНаКаждыйДеньРасширенные - добавление данных о продажах на каждый день, если остаток на начало дня равен нулю, и была продажа, то это товар который "пришел-ушел" и его тоже надо учитывать как "был на остатках"
	// 06 пакет - ВТ ПродажиЗаГод - количество проданной номенклатуры за год со склада
	// 07 пакет - ВТ СредняяПродажаЗаГод - расчет показателя средней продажи за год, средняя продажа = количество проданного товара за период / (количество рабочих дней в периоде, когда товар был на остатках)
	// 08 пакет - ВТ Даты - даты документов поступления (ордеров, перемещений) без повторов для определения периодов
	// 09 пакет - ВТ Периоды - используя даты перемещений, расчет периодов пежду перемещениями, одновременно происходит нумерация периодов с конца
	// 10 пакет - ВТ ПериодыНоменклатура - перекрестное соединение периодов с номенклатуров, для последующего определяния нулевых продаж по периодам
	// 11 пакет - ВТ ПродажиПоПериодам - аналогично 5 пакету, продажи номенклатуры, но уже по периодам
	// 12 пакет - ВТ СредняяПродажаПоПериодам - аналогично 6 пакету, расчет показателя средней продажи по периодам
	// 13 пакет - ВТ СредняяПродажаМаксимумБезКлиентов - определяем максимум из значений средней продажи периодов
	// 14 пакет - ВТ СредняяПродажаМаксимум - добавляем к таблице значение количества клиентов которым реализованы товары в максимальный период
	// 15 пакет - ВТ ПродажиПоПериодамАнализ - продажи номенклатуры за анализируемые периоды, с выводом нулевых продаж
	// 16 пакет - ВТ ПериодыПодрядВНоль - анализируем периоды, вычисляем номенклатуру где были продажи в ноль подряд
	// 17 пакет - основной расчет минимумов и максимумов. Округление и соответствие кратности вынесено во вложенный запрос.
	//            МИН = средняя продажа за год * ОбеспечиваемыйПериод * К1
	//            МАКС = Максимум из средних продаж по периодам * ОбеспечиваемыйПериод * К1
	//            (аналогично формуле из ТЗ: МАКС = МИН * Максимум из средних продаж по периодам / средняя продажа за год)
	//            Округление по кратности минимума.
	//            Ограничение на Максимум в зависимости от количества разных клиентов, которым был реализован товар в период где максимальное среднедневное потребление.
	//            Максимум = 1,5 * Минимума - если 1 клиент
	//            Максимум = 2 * Минимум - если 2-5 клиентов
	//            Максимум = 3 * Минимум - если > 5 клиентов
	//
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеПроизводственногоКалендаря.Дата КАК Дата,
	|	ДанныеПроизводственногоКалендаря.ВидДня КАК ВидДня
	|ПОМЕСТИТЬ Дн
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Дата >= &ДатаНачала
	|	И ДанныеПроизводственногоКалендаря.Дата <= &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Дн1.Дата КАК Дата,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Дн1.ВидДня = &РабочийДень
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЭтоРабочийДень,
	|	СУММА(ВЫБОР
	|			КОГДА Дн2.ВидДня = &РабочийДень
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КолРабДней
	|ПОМЕСТИТЬ Дни
	|ИЗ
	|	Дн КАК Дн1
	|		ЛЕВОЕ СОЕДИНЕНИЕ Дн КАК Дн2
	|		ПО Дн1.Дата > Дн2.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	Дн1.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбеспечениеСрезПоследних.Номенклатура КАК Номенклатура,
	|	ОбеспечениеСрезПоследних.Мин КАК Мин,
	|	ОбеспечениеСрезПоследних.Макс КАК Макс,
	|	ОбеспечениеСрезПоследних.Новый КАК Новый
	|ПОМЕСТИТЬ ОбеспечениеСрезПоследних
	|ИЗ
	|	РегистрСведений.АТ_ОбеспечениеРегиональныхСкладов.СрезПоследних КАК ОбеспечениеСрезПоследних
	|ГДЕ
	|	ОбеспечениеСрезПоследних.Склад = &Склад
	|	И ОбеспечениеСрезПоследних.Макс > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
	|	Дни.Дата КАК ДеньОстатка,
	|	МАКСИМУМ(Дни.ЭтоРабочийДень) КАК ЭтоРабочийДень,
	|	МАКСИМУМ(Дни.КолРабДней) КАК НомерРабДня,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыНаСкладахОстаткиИОбороты.Период = &ДатаНачала
	|				ТОГДА ТоварыНаСкладахОстаткиИОбороты.ВНаличииКонечныйОстаток
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТоварыНаСкладахОстаткиИОбороты.Период <= Дни.Дата
	|						ТОГДА ТоварыНаСкладахОстаткиИОбороты.ВНаличииОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОНЕЦ) КАК Остаток
	|ПОМЕСТИТЬ ОстаткиНаКаждыйДень
	|ИЗ
	|	Дни КАК Дни,
	|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&ДатаНачала, , День, , Склад = &Склад) КАК ТоварыНаСкладахОстаткиИОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбеспечениеСрезПоследних КАК ОбеспечениеСрезПоследних
	|		ПО ТоварыНаСкладахОстаткиИОбороты.Номенклатура = ОбеспечениеСрезПоследних.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура,
	|	Дни.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНаКаждыйДень.Номенклатура КАК Номенклатура,
	|	ОстаткиНаКаждыйДень.ДеньОстатка КАК ДеньОстатка,
	|	ОстаткиНаКаждыйДень.ЭтоРабочийДень КАК ЭтоРабочийДень,
	|	ОстаткиНаКаждыйДень.НомерРабДня КАК НомерРабДня,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.КоличествоОборот, 0) > 0
	|			ТОГДА ЕСТЬNULL(ОстаткиНаКаждыйДень.Остаток, 0) + ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.КоличествоОборот, 0)
	|		ИНАЧЕ ОстаткиНаКаждыйДень.Остаток
	|	КОНЕЦ КАК Остаток
	|ПОМЕСТИТЬ ОстаткиНаКаждыйДеньРасширенные
	|ИЗ
	|	ОстаткиНаКаждыйДень КАК ОстаткиНаКаждыйДень
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|				&ДатаНачала,
	|				&ДатаОкончания,
	|				ДЕНЬ,
	|				ХозяйственнаяОперация В (&ХозОпРеализация)
	|					И АналитикаУчетаПоПартнерам.Организация = &Организация
	|					И АналитикаУчетаНоменклатуры.Склад = &Склад) КАК ВыручкаИСебестоимостьПродаж
	|		ПО (ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура = ОстаткиНаКаждыйДень.Номенклатура)
	|			И (ВыручкаИСебестоимостьПродаж.Период = ОстаткиНаКаждыйДень.ДеньОстатка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(ВыручкаИСебестоимостьПродаж.КоличествоОборот) КАК КоличествоПродано
	|ПОМЕСТИТЬ ПродажиЗаГод
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			ДЕНЬ,
	|			ХозяйственнаяОперация В (&ХозОпРеализация)
	|				И АналитикаУчетаПоПартнерам.Организация = &Организация
	|				И АналитикаУчетаНоменклатуры.Склад = &Склад) КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбеспечениеСрезПоследних КАК ОбеспечениеСрезПоследних
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура = ОбеспечениеСрезПоследних.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиЗаГод.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ПродажиЗаГод.КоличествоПродано) КАК КоличествоПродано,
	|	СУММА(ЕСТЬNULL(ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень, 0)) КАК ЭтоРабочийДень,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСТЬNULL(ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень, 0)) = 0
	|			ТОГДА 0
	|		ИНАЧЕ МАКСИМУМ(ПродажиЗаГод.КоличествоПродано) / СУММА(ЕСТЬNULL(ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень, 0))
	|	КОНЕЦ КАК СредняяПродажаЗаГод
	|ПОМЕСТИТЬ СредняяПродажаЗаГод
	|ИЗ
	|	ПродажиЗаГод КАК ПродажиЗаГод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаКаждыйДеньРасширенные КАК ОстаткиНаКаждыйДеньРасширенные
	|		ПО (ОстаткиНаКаждыйДеньРасширенные.Номенклатура = ПродажиЗаГод.Номенклатура)
	|			И (ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень = 1)
	|			И (ОстаткиНаКаждыйДеньРасширенные.Остаток > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиЗаГод.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 10000
	|	Даты.Дата КАК Дата
	|ПОМЕСТИТЬ Даты
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказНаПерем.Дата КАК ДатаЗаказ,
	|		ВЫБОР
	|			КОГДА НЕ МИНИМУМ(ПриходныйОрдерНаТовары.Дата) ЕСТЬ NULL
	|				ТОГДА НАЧАЛОПЕРИОДА(МИНИМУМ(ПриходныйОрдерНаТовары.Дата), ДЕНЬ)
	|			КОГДА НЕ МИНИМУМ(ПеремещениеТоваров.Дата) ЕСТЬ NULL
	|				ТОГДА НАЧАЛОПЕРИОДА(МИНИМУМ(ПеремещениеТоваров.Дата), ДЕНЬ)
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(ЗаказНаПерем.Дата, ДЕНЬ)
	|		КОНЕЦ КАК Дата
	|	ИЗ
	|		Документ.ЗаказНаПеремещение КАК ЗаказНаПерем
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	|				ПО ПеремещениеТоваров.Ссылка = ПриходныйОрдерНаТовары.Распоряжение
	|			ПО ЗаказНаПерем.Ссылка = ПеремещениеТоваров.ЗаказНаПеремещение
	|	ГДЕ
	|		ПеремещениеТоваров.ЗаказНаПеремещение.АТ_Обеспечение
	|		И ПеремещениеТоваров.СкладПолучатель = &Склад
	|		И ПеремещениеТоваров.ЗаказНаПеремещение.Проведен
	|		И ПеремещениеТоваров.ЗаказНаПеремещение.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаказНаПерем.Дата
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ &ДатаНачала, НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ)) КАК Даты
	|
	|СГРУППИРОВАТЬ ПО
	|	Даты.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 10000
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(Слева.Дата, ДЕНЬ), ДЕНЬ, 1) КАК От,
	|	КОНЕЦПЕРИОДА(МИНИМУМ(ЕСТЬNULL(Справа.Дата, &ДатаОкончания)), ДЕНЬ) КАК До,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(МИНИМУМ(ЕСТЬNULL(Справа.Дата, &ДатаОкончания)), ДЕНЬ) = КОНЕЦПЕРИОДА(&ДатаОкончания, ДЕНЬ)
	|			ТОГДА СУММА(1)
	|		ИНАЧЕ СУММА(1) + 1
	|	КОНЕЦ КАК НомерПериода
	|ПОМЕСТИТЬ Периоды
	|ИЗ
	|	Даты КАК Слева
	|		ЛЕВОЕ СОЕДИНЕНИЕ Даты КАК Справа
	|		ПО Слева.Дата < Справа.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	Слева.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	От УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.От КАК От,
	|	Периоды.До КАК До,
	|	Периоды.НомерПериода КАК НомерПериода,
	|	ОбеспечениеСрезПоследних.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ПериодыНоменклатура
	|ИЗ
	|	Периоды КАК Периоды,
	|	ОбеспечениеСрезПоследних КАК ОбеспечениеСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.От КАК От,
	|	Периоды.До КАК До,
	|	Периоды.НомерПериода КАК НомерПериода,
	|	ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	Количество(Различные(ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)))) КАК КоличествоКлиентов,
	|	СУММА(ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.КоличествоОборот, 0)) КАК КоличествоПродано
	|ПОМЕСТИТЬ ПродажиПоПериодам
	|ИЗ
	|	Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|				&ДатаНачала,
	|				&ДатаОкончания,
	|				ДЕНЬ,
	|				ХозяйственнаяОперация В (&ХозОпРеализация)
	|					И АналитикаУчетаПоПартнерам.Организация = &Организация
	|					И АналитикаУчетаНоменклатуры.Склад = &Склад) КАК ВыручкаИСебестоимостьПродаж
	|		ПО (ВыручкаИСебестоимостьПродаж.Период <= Периоды.До)
	|			И (ВыручкаИСебестоимостьПродаж.Период >= Периоды.От)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.От,
	|	Периоды.До,
	|	Периоды.НомерПериода,
	|	ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиПоПериодам.От КАК От,
	|	ПродажиПоПериодам.До КАК До,
	|	ПродажиПоПериодам.НомерПериода КАК НомерПериода,
	|	ПродажиПоПериодам.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ПродажиПоПериодам.КоличествоКлиентов) КАК КоличествоКлиентов,
	|	МАКСИМУМ(ПродажиПоПериодам.КоличествоПродано) КАК КоличествоПродано,
	|	СУММА(ЕСТЬNULL(ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень, 0)) КАК ЭтоРабочийДень,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСТЬNULL(ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень, 0)) = 0
	|			ТОГДА 0
	|		ИНАЧЕ МАКСИМУМ(ПродажиПоПериодам.КоличествоПродано) / СУММА(ЕСТЬNULL(ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень, 0))
	|	КОНЕЦ КАК СредняяПродажаЗаПериод
	|ПОМЕСТИТЬ СредняяПродажаПоПериодам
	|ИЗ
	|	ПродажиПоПериодам КАК ПродажиПоПериодам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаКаждыйДеньРасширенные КАК ОстаткиНаКаждыйДеньРасширенные
	|		ПО (ОстаткиНаКаждыйДеньРасширенные.Номенклатура = ПродажиПоПериодам.Номенклатура)
	|			И (ОстаткиНаКаждыйДеньРасширенные.ДеньОстатка <= ПродажиПоПериодам.До)
	|			И (ОстаткиНаКаждыйДеньРасширенные.ДеньОстатка >= ПродажиПоПериодам.От)
	|			И (ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень = 1)
	|			И (ОстаткиНаКаждыйДеньРасширенные.Остаток > 0)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбеспечениеСрезПоследних КАК ОбеспечениеСрезПоследних
	|		ПО ПродажиПоПериодам.Номенклатура = ОбеспечениеСрезПоследних.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиПоПериодам.От,
	|	ПродажиПоПериодам.До,
	|	ПродажиПоПериодам.НомерПериода,
	|	ПродажиПоПериодам.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СредняяПродажаПоПериодам.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(СредняяПродажаПоПериодам.СредняяПродажаЗаПериод) КАК СредняяПродажаЗаПериодМаксимум
	|ПОМЕСТИТЬ СредняяПродажаМаксимумБезКлиентов
	|ИЗ
	|	СредняяПродажаПоПериодам КАК СредняяПродажаПоПериодам
	|
	|СГРУППИРОВАТЬ ПО
	|	СредняяПродажаПоПериодам.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СредняяПродажаМаксимумБезКлиентов.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(СредняяПродажаПоПериодамМаксимум.КоличествоКлиентов) КАК КоличествоКлиентов,
	|	МАКСИМУМ(СредняяПродажаМаксимумБезКлиентов.СредняяПродажаЗаПериодМаксимум) КАК СредняяПродажаЗаПериодМаксимум
	|ПОМЕСТИТЬ СредняяПродажаМаксимум
	|ИЗ
	|	СредняяПродажаМаксимумБезКлиентов КАК СредняяПродажаМаксимумБезКлиентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ СредняяПродажаПоПериодам КАК СредняяПродажаПоПериодамМаксимум
	|			ПО СредняяПродажаМаксимумБезКлиентов.Номенклатура = СредняяПродажаПоПериодамМаксимум.Номенклатура
	|			И СредняяПродажаМаксимумБезКлиентов.СредняяПродажаЗаПериодМаксимум = СредняяПродажаПоПериодамМаксимум.СредняяПродажаЗаПериод
	|
	|СГРУППИРОВАТЬ ПО
	|	СредняяПродажаМаксимумБезКлиентов.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыНоменклатура.НомерПериода КАК НомерПериода,
	|	ПериодыНоменклатура.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ПродажиПоПериодам.КоличествоПродано, 0) КАК КоличествоПродано
	|ПОМЕСТИТЬ ПродажиПоПериодамАнализ
	|ИЗ
	|	ПериодыНоменклатура КАК ПериодыНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПоПериодам КАК ПродажиПоПериодам
	|		ПО ПериодыНоменклатура.Номенклатура = ПродажиПоПериодам.Номенклатура
	|			И ПериодыНоменклатура.НомерПериода = ПродажиПоПериодам.НомерПериода
	|ГДЕ
	|	ПериодыНоменклатура.НомерПериода <= &КоличествоАнализируемыхПериодов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиПоПериодамАнализ.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПродажиПоПериодамАнализ.КоличествоПродано = 0
	|					И ЕСТЬNULL(ПродажиПоПериодамАнализЛЕВОЕ.КоличествоПродано, 0) * ЕСТЬNULL(ПродажиПоПериодамАнализПРАВОЕ.КоличествоПродано, 0) = 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ПериодыПодрядВНоль
	|ПОМЕСТИТЬ ПериодыПодрядВНоль
	|ИЗ
	|	ПродажиПоПериодамАнализ КАК ПродажиПоПериодамАнализ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПоПериодамАнализ КАК ПродажиПоПериодамАнализЛЕВОЕ
	|		ПО ПродажиПоПериодамАнализ.Номенклатура = ПродажиПоПериодамАнализЛЕВОЕ.Номенклатура
	|			И (ПродажиПоПериодамАнализ.НомерПериода = ПродажиПоПериодамАнализЛЕВОЕ.НомерПериода + 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПоПериодамАнализ КАК ПродажиПоПериодамАнализПРАВОЕ
	|		ПО ПродажиПоПериодамАнализ.Номенклатура = ПродажиПоПериодамАнализПРАВОЕ.Номенклатура
	|			И (ПродажиПоПериодамАнализ.НомерПериода = ПродажиПоПериодамАнализПРАВОЕ.НомерПериода - 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиПоПериодамАнализ.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.МинСтарый КАК МинСтарый,
	|	ВложенныйЗапрос.МаксСтарый КАК МаксСтарый,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Макс = 0
	|			ТОГДА ВложенныйЗапрос.Мин
	|		КОГДА ВложенныйЗапрос.Мин < ВложенныйЗапрос.Кратность
	|			ТОГДА ВложенныйЗапрос.Кратность
	|		ИНАЧЕ ВЫРАЗИТЬ(ВложенныйЗапрос.Мин КАК ЧИСЛО(10, 0))
	|	КОНЕЦ КАК Мин,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Макс = 0
	|			ТОГДА ВложенныйЗапрос.Макс
	|		КОГДА ВложенныйЗапрос.Мин < ВложенныйЗапрос.Кратность
	|				И (ВЫРАЗИТЬ(ВложенныйЗапрос.Макс КАК ЧИСЛО(10, 0))) <= ВложенныйЗапрос.Кратность
	|			ТОГДА ВложенныйЗапрос.Кратность + 1
	|		КОГДА (ВЫРАЗИТЬ(ВложенныйЗапрос.Мин КАК ЧИСЛО(10, 0))) = (ВЫРАЗИТЬ(ВложенныйЗапрос.Макс КАК ЧИСЛО(10, 0)))
	|			ТОГДА (ВЫРАЗИТЬ(ВложенныйЗапрос.Макс КАК ЧИСЛО(10, 0))) + 1
	|		КОГДА (ВложенныйЗапрос.Мин < ВложенныйЗапрос.Кратность) И ВложенныйЗапрос.Макс / ВложенныйЗапрос.Кратность > 1.5
	|			ТОГДА ВЫБОР КОГДА ВложенныйЗапрос.КоличествоКлиентов <= 1 ТОГДА ВЫРАЗИТЬ(ВложенныйЗапрос.Кратность * 1.5 КАК ЧИСЛО(10, 0))
	|					КОГДА ВложенныйЗапрос.КоличествоКлиентов > 5 ТОГДА ВложенныйЗапрос.Кратность * 3
	|					ИНАЧЕ ВложенныйЗапрос.Кратность * 2
	|				КОНЕЦ
	|		КОГДА ВложенныйЗапрос.Мин > 0 И ВложенныйЗапрос.Макс / ВложенныйЗапрос.Мин > 1.5
	|			ТОГДА ВЫБОР КОГДА ВложенныйЗапрос.КоличествоКлиентов <= 1 Тогда ВЫРАЗИТЬ(ВЫРАЗИТЬ(ВложенныйЗапрос.Мин КАК ЧИСЛО(10, 0)) * 1.5 КАК ЧИСЛО(10, 0))
	|					КОГДА ВложенныйЗапрос.КоличествоКлиентов > 5 Тогда ВЫРАЗИТЬ(ВложенныйЗапрос.Мин КАК ЧИСЛО(10, 0)) * 3
	|					ИНАЧЕ ВЫРАЗИТЬ(ВложенныйЗапрос.Мин КАК ЧИСЛО(10, 0)) * 2
	|				КОНЕЦ
	|		ИНАЧЕ ВЫРАЗИТЬ(ВложенныйЗапрос.Макс КАК ЧИСЛО(10, 0))
	|	КОНЕЦ КАК Макс,
	|	ВложенныйЗапрос.Артикул КАК Артикул,
	|	ВложенныйЗапрос.Группа КАК Группа,
	|	ВложенныйЗапрос.Кратность КАК Кратность,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Остаток < 0
	|			ТОГДА 0
	|		ИНАЧЕ ВложенныйЗапрос.Остаток
	|	КОНЕЦ КАК Остаток,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ОстатокДоПеремещения <= 0
	|				И ВложенныйЗапрос.КоличествоПеремещено <= 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИНеБыло
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбеспечениеСрезПоследних.Номенклатура КАК Номенклатура,
	|		ОбеспечениеСрезПоследних.Мин КАК МинСтарый,
	|		ОбеспечениеСрезПоследних.Макс КАК МаксСтарый,
	|		ВЫБОР
	|			КОГДА ОбеспечениеСрезПоследних.Новый
	|				ТОГДА ОбеспечениеСрезПоследних.Мин
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ЕСТЬNULL(СредняяПродажаЗаГодИтог.СредняяПродажаЗаГод, 0) < &СредняяПродажаГраница1
	|						ТОГДА 0
	|					КОГДА ЕСТЬNULL(СредняяПродажаЗаГодИтог.СредняяПродажаЗаГод, 0) > &СредняяПродажаГраница2
	|							И СправочникНоменклатура.Ликвидность = ЗНАЧЕНИЕ(Справочник.ВидыЛиквидностиНоменклатуры.AКласс)
	|						ТОГДА СредняяПродажаЗаГодИтог.СредняяПродажаЗаГод * &ОбеспечиваемыйПериод * &К1А
	|					КОГДА ЕСТЬNULL(СредняяПродажаЗаГодИтог.СредняяПродажаЗаГод, 0) > &СредняяПродажаГраница2
	|						ТОГДА СредняяПродажаЗаГодИтог.СредняяПродажаЗаГод * &ОбеспечиваемыйПериод * &К1Прочее
	|					КОГДА ЕСТЬNULL(ПериодыПодрядВНольИтог.ПериодыПодрядВНоль, ИСТИНА) = ИСТИНА
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ КАК Мин,
	|		ВЫБОР
	|			КОГДА ОбеспечениеСрезПоследних.Новый
	|				ТОГДА ОбеспечениеСрезПоследних.Макс
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ЕСТЬNULL(СредняяПродажаЗаГодИтог.СредняяПродажаЗаГод, 0) < &СредняяПродажаГраница1
	|						ТОГДА 0
	|					КОГДА ЕСТЬNULL(СредняяПродажаЗаГодИтог.СредняяПродажаЗаГод, 0) > &СредняяПродажаГраница2
	|							И СправочникНоменклатура.Ликвидность = ЗНАЧЕНИЕ(Справочник.ВидыЛиквидностиНоменклатуры.AКласс)
	|						ТОГДА СредняяПродажаМаксимум.СредняяПродажаЗаПериодМаксимум * &ОбеспечиваемыйПериод * &К1А
	|					КОГДА ЕСТЬNULL(СредняяПродажаЗаГодИтог.СредняяПродажаЗаГод, 0) > &СредняяПродажаГраница2
	|						ТОГДА СредняяПродажаМаксимум.СредняяПродажаЗаПериодМаксимум * &ОбеспечиваемыйПериод * &К1Прочее
	|					КОГДА ЕСТЬNULL(ПериодыПодрядВНольИтог.ПериодыПодрядВНоль, ИСТИНА) = ИСТИНА
	|						ТОГДА 1
	|					ИНАЧЕ 2
	|				КОНЕЦ
	|		КОНЕЦ КАК Макс,
	|		СредняяПродажаМаксимум.КоличествоКлиентов КАК КоличествоКлиентов,
	|		НоменклатураСправочник.Артикул КАК Артикул,
	|		НоменклатураСправочник.Родитель КАК Группа,
	|		ВЫРАЗИТЬ(ЕСТЬNULL(ДополнительныеРеквизитыНоменклатура.Значение, 0) КАК ЧИСЛО(10, 0)) КАК Кратность,
	|		ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) КАК Остаток,
	|		ЕСТЬNULL(СвободныеОстаткиДоПеремещение.ВНаличииОстаток, 0) КАК ОстатокДоПеремещения,
	|		ЕСТЬNULL(ПеремещениеТоваров.Количество, 0) КАК КоличествоПеремещено
	|	ИЗ
	|		ОбеспечениеСрезПоследних КАК ОбеспечениеСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ СредняяПродажаЗаГод КАК СредняяПродажаЗаГодИтог
	|			ПО ОбеспечениеСрезПоследних.Номенклатура = СредняяПродажаЗаГодИтог.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ОбеспечениеСрезПоследних.Номенклатура = СправочникНоменклатура.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ABCXYZКлассификацияНоменклатуры.СрезПоследних(
	|					,
	|					Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|						И РазделКлассификации = &Склад
	|						И ТипПараметраКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыПараметровКлассификации.Выручка)
	|						И ТипКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыКлассификации.ABC)) КАК ABCКлассификацияНоменклатурыСрезПоследних
	|			ПО ОбеспечениеСрезПоследних.Номенклатура = ABCКлассификацияНоменклатурыСрезПоследних.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ABCXYZКлассификацияНоменклатуры.СрезПоследних(
	|					,
	|					Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|						И РазделКлассификации = &Склад
	|						И ТипПараметраКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыПараметровКлассификации.Количество)
	|						И ТипКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыКлассификации.XYZ)) КАК XYZКлассификацияНоменклатурыСрезПоследних
	|			ПО ОбеспечениеСрезПоследних.Номенклатура = XYZКлассификацияНоменклатурыСрезПоследних.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПериодыПодрядВНоль КАК ПериодыПодрядВНольИтог
	|			ПО ОбеспечениеСрезПоследних.Номенклатура = ПериодыПодрядВНольИтог.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ СредняяПродажаМаксимум КАК СредняяПродажаМаксимум
	|			ПО ОбеспечениеСрезПоследних.Номенклатура = СредняяПродажаМаксимум.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДополнительныеРеквизитыНоменклатура
	|			ПО (ДополнительныеРеквизитыНоменклатура.Ссылка = ОбеспечениеСрезПоследних.Номенклатура)
	|				И (ДополнительныеРеквизитыНоменклатура.Свойство = &Кратность)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|			ПО ОбеспечениеСрезПоследних.Номенклатура = НоменклатураСправочник.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|									СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|									ИЗ РегистрНакопления.ТоварыОрганизаций.Остатки(, АналитикаУчетаНоменклатуры.Склад = &Склад) КАК ТоварыОрганизацийОстатки
	|									СГРУППИРОВАТЬ ПО ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура) КАК ТоварыОрганизаций
	|			ПО ОбеспечениеСрезПоследних.Номенклатура = ТоварыОрганизаций.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(&МоментПеремещения, Склад = &Склад) КАК СвободныеОстаткиДоПеремещение
	|			ПО ОбеспечениеСрезПоследних.Номенклатура = СвободныеОстаткиДоПеремещение.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТоварыПеремещениеТоваров.Номенклатура КАК Номенклатура,
	|				СУММА(ТоварыПеремещениеТоваров.Количество) КАК Количество
	|			ИЗ
	|				Документ.ПеремещениеТоваров.Товары КАК ТоварыПеремещениеТоваров
	|			ГДЕ
	|				ТоварыПеремещениеТоваров.Ссылка = &ПоследнееПеремещение
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТоварыПеремещениеТоваров.Номенклатура) КАК ПеремещениеТоваров
	|			ПО ОбеспечениеСрезПоследних.Номенклатура = ПеремещениеТоваров.Номенклатура) КАК ВложенныйЗапрос";
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("СредняяПродажаГраница1", НастройкиОбеспечения.СредняяПродажаГраница1);
	Запрос.УстановитьПараметр("СредняяПродажаГраница2", НастройкиОбеспечения.СредняяПродажаГраница2);
	Запрос.УстановитьПараметр("ДатаНачала", ДобавитьМесяц(ТекущаяДата(), -12));
	Запрос.УстановитьПараметр("ДатаОкончания", ТекущаяДата());
	Запрос.УстановитьПараметр("КоличествоАнализируемыхПериодов", НастройкиОбеспечения.КоличествоАнализируемыхПериодов);
	Запрос.УстановитьПараметр("ОбеспечиваемыйПериод", НастройкаСклада.ОбеспечиваемыйПериод);
	Запрос.УстановитьПараметр("К1А", НастройкаСклада.К1А);
	Запрос.УстановитьПараметр("К1Прочее", НастройкаСклада.К1Прочее);
	Запрос.УстановитьПараметр("РабочийДень", Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий);
	Запрос.УстановитьПараметр("ХозОпРеализация", МассивХозОпераций);
	Запрос.УстановитьПараметр("Кратность", НастройкиОбеспечения.Кратность);
	Запрос.УстановитьПараметр("Организация", ОбщиеНастройки.ОсновнаяОрганизация);
	
	Запрос.УстановитьПараметр("МоментПеремещения", Новый Граница(ПоследнееПеремещение.МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ПоследнееПеремещение", ПоследнееПеремещение);
	
	ТаблицаМинМакс.Загрузить(Запрос.Выполнить().Выгрузить());
	
	СкладДляПеремещения = Склад;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаказНаПеремещение(Команда)
	
	Ссылка = СоздатьЗаказНаПеремещениеНаСервере();
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ПоказатьЗначение(,Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьЗаказНаПеремещениеНаСервере()
	
	Если Не ЗначениеЗаполнено(СкладДляПеремещения) Или ТаблицаМинМакс.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Перед созданием перемещения требуется расчитать Мин Макс!";
		Сообщение.Сообщить();
		Возврат Неопределено;
	КонецЕсли;
	
	ЗаказНаПеремещение = ПолучитьДокументЗаказНаПеремещение();
	
	МинМакс = ТаблицаМинМакс.Выгрузить();
	
	ЗаполнитьЗаказНаПеремещение(ЗаказНаПеремещение, МинМакс, СкладДляПеремещения);
	
	ЗаказНаПеремещение.Записать(РежимЗаписиДокумента.Проведение);
	
	ИзменитьПредыдущийЗаказ(ЗаказНаПеремещение.Ссылка);
	
	СоздатьДокументИзмененияАссортимента(ЗаказНаПеремещение.Ссылка, СкладДляПеремещения, МинМакс);
	
	Возврат ЗаказНаПеремещение.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ВаловаяПрибыль(Команда)

	ПараметрыФормы = ПолучитьПараметрыФормы();
	ОткрытьФорму("Отчет.ВыручкаИСебестоимостьПродаж.Форма", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПрошлыйОпыт(Команда)
	ПрошлыйОпытНаСервере();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаМинМакс.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаМинМакс.Остаток");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаМинМакс.ИНеБыло");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноБирюзовый);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДокументЗаказНаПеремещение()
	Возврат Документы.ЗаказНаПеремещение.СоздатьДокумент();
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПоследнееПеремещение(Склад)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПеремещениеТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.ЗаказНаПеремещение.АТ_Обеспечение = ИСТИНА
	|	И ПеремещениеТоваров.Проведен
	|	И ПеремещениеТоваров.СкладПолучатель = &Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеТоваров.Дата УБЫВ";
	Запрос.УстановитьПараметр("Склад", Склад);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Документы.ПеремещениеТоваров.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьЗаказНаПеремещение(ДокументОбъект, МинМакс, СкладДляПеремещения)
	
	ОбщиеНастройки = АТ_ОбщегоНазначения.ПолучитьНастройку("ОбщиеНастройки");
	НастройкиОбеспечения = АТ_ОбщегоНазначения.ПолучитьНастройку("ОбеспечениеСкладов");
	НастройкиСкладов = Неопределено;
	НастройкиОбеспечения.Свойство("НастройкиСкладов", НастройкиСкладов);
	НастройкаСклада = НастройкиСкладов.Найти(СкладДляПеремещения, "Склад");
	
	МассивХозОпераций = Новый Массив;
	МассивХозОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
	МассивХозОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияВРозницу);
	МассивХозОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	МассивХозОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет);
	МассивХозОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияПрочихАктивов);
	
	ДокументОбъект.Дата = ТекущаяДатаСеанса();
	
	ДокументОбъект.Организация = ОбщиеНастройки.ОсновнаяОрганизация;
	ДокументОбъект.Подразделение = ОбщиеНастройки.ОсновноеПодразделение;
	ДокументОбъект.СкладОтправитель = НастройкаСклада.ИсточникОбеспечения;
	ДокументОбъект.СкладПолучатель = СкладДляПеремещения;
	ДокументОбъект.Статус = Перечисления.СтатусыВнутреннихЗаказов.КВыполнению;
	ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров;
	ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.ДоКлиента;
	ДокументОбъект.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным;
	
	ПараметрыСклада = ПолучитьПараметрыСклада(СкладДляПеремещения);
	
	ДокументОбъект.АдресДоставкиЗначенияПолей = ?(ПараметрыСклада.Свойство("АдресДоставкиЗначенияПолей"), ПараметрыСклада.АдресДоставкиЗначенияПолей, "");
	ДокументОбъект.АдресДоставки = ?(ПараметрыСклада.Свойство("АдресДоставки"), ПараметрыСклада.АдресДоставки, "");
	ДокументОбъект.ЗонаДоставки = ?(ПараметрыСклада.Свойство("ЗонаДоставки"), ПараметрыСклада.ЗонаДоставки, Справочники.ЗоныДоставки.ПустаяСсылка());
	
	ДокументОбъект.АТ_Обеспечение = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеПроизводственногоКалендаря.Дата КАК Дата,
	|	ДанныеПроизводственногоКалендаря.ВидДня КАК ВидДня
	|ПОМЕСТИТЬ Дн
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Дата >= &ДатаНачала
	|	И ДанныеПроизводственногоКалендаря.Дата <= &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Дн1.Дата КАК Дата,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Дн1.ВидДня = &РабочийДень
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЭтоРабочийДень,
	|	СУММА(ВЫБОР
	|			КОГДА Дн2.ВидДня = &РабочийДень
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КолРабДней
	|ПОМЕСТИТЬ Дни
	|ИЗ
	|	Дн КАК Дн1
	|		ЛЕВОЕ СОЕДИНЕНИЕ Дн КАК Дн2
	|		ПО Дн1.Дата > Дн2.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	Дн1.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МинМакс.Номенклатура КАК Номенклатура,
	|	МинМакс.Мин КАК Мин,
	|	МинМакс.Макс КАК Макс
	|ПОМЕСТИТЬ МинМакс
	|ИЗ
	|	&МинМакс КАК МинМакс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
	|	Дни.Дата КАК ДеньОстатка,
	|	МАКСИМУМ(Дни.ЭтоРабочийДень) КАК ЭтоРабочийДень,
	|	МАКСИМУМ(Дни.КолРабДней) КАК НомерРабДня,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыНаСкладахОстаткиИОбороты.Период = &ДатаНачала
	|				ТОГДА ТоварыНаСкладахОстаткиИОбороты.ВНаличииКонечныйОстаток
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТоварыНаСкладахОстаткиИОбороты.Период <= Дни.Дата
	|						ТОГДА ТоварыНаСкладахОстаткиИОбороты.ВНаличииОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОНЕЦ) КАК Остаток
	|ПОМЕСТИТЬ ОстаткиНаКаждыйДень
	|ИЗ
	|	Дни КАК Дни,
	|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&ДатаНачала, , День, , Склад = &СкладИсточник) КАК ТоварыНаСкладахОстаткиИОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинМакс КАК МинМакс
	|		ПО ТоварыНаСкладахОстаткиИОбороты.Номенклатура = МинМакс.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура,
	|	Дни.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНаКаждыйДень.Номенклатура КАК Номенклатура,
	|	ОстаткиНаКаждыйДень.ДеньОстатка КАК ДеньОстатка,
	|	ОстаткиНаКаждыйДень.ЭтоРабочийДень КАК ЭтоРабочийДень,
	|	ОстаткиНаКаждыйДень.НомерРабДня КАК НомерРабДня,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.КоличествоОборот, 0) > 0
	|			ТОГДА ЕСТЬNULL(ОстаткиНаКаждыйДень.Остаток, 0) + ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.КоличествоОборот, 0)
	|		ИНАЧЕ ОстаткиНаКаждыйДень.Остаток
	|	КОНЕЦ КАК Остаток
	|ПОМЕСТИТЬ ОстаткиНаКаждыйДеньРасширенные
	|ИЗ
	|	ОстаткиНаКаждыйДень КАК ОстаткиНаКаждыйДень
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|				&ДатаНачала,
	|				&ДатаОкончания,
	|				ДЕНЬ,
	|				ХозяйственнаяОперация В (&ХозОпРеализация)
	|					И АналитикаУчетаНоменклатуры.Склад = &СкладИсточник) КАК ВыручкаИСебестоимостьПродаж
	|		ПО (ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура = ОстаткиНаКаждыйДень.Номенклатура)
	|			И (ВыручкаИСебестоимостьПродаж.Период = ОстаткиНаКаждыйДень.ДеньОстатка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(ВыручкаИСебестоимостьПродаж.КоличествоОборот) КАК КоличествоПродано
	|ПОМЕСТИТЬ ПродажиЗаГод
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			ДЕНЬ,
	|			ХозяйственнаяОперация В (&ХозОпРеализация)
	|				И АналитикаУчетаНоменклатуры.Склад = &СкладИсточник) КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинМакс КАК МинМакс
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура = МинМакс.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажиЗаГод.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ПродажиЗаГод.КоличествоПродано) КАК КоличествоПродано,
	|	СУММА(ЕСТЬNULL(ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень, 0)) КАК ЭтоРабочийДень,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСТЬNULL(ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень, 0)) = 0
	|			ТОГДА 0
	|		ИНАЧЕ МАКСИМУМ(ПродажиЗаГод.КоличествоПродано) / СУММА(ЕСТЬNULL(ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень, 0))
	|	КОНЕЦ КАК СредняяПродажаЗаГод
	|ПОМЕСТИТЬ СредняяПродажаЗаГод
	|ИЗ
	|	ПродажиЗаГод КАК ПродажиЗаГод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаКаждыйДеньРасширенные КАК ОстаткиНаКаждыйДеньРасширенные
	|		ПО (ОстаткиНаКаждыйДеньРасширенные.Номенклатура = ПродажиЗаГод.Номенклатура)
	|			И (ОстаткиНаКаждыйДеньРасширенные.ЭтоРабочийДень = 1)
	|			И (ОстаткиНаКаждыйДеньРасширенные.Остаток > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиЗаГод.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МинМакс.Номенклатура КАК Номенклатура,
	|	МинМакс.Макс - ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток, 0) КАК Требуется,
	|	ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВНаличииОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеСоСкладаОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеПодЗаказОстаток, 0) - ЕСТЬNULL(СредняяПродажаЗаГодИсточник.СредняяПродажаЗаГод, 0) * &МинимальныйЗапасИсточник КАК Доступно,
	|	ВЫБОР
	|		КОГДА МинМакс.Макс - ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток, 0) <= ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВНаличииОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеСоСкладаОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеПодЗаказОстаток, 0) - (ВЫРАЗИТЬ(ЕСТЬNULL(СредняяПродажаЗаГодИсточник.СредняяПродажаЗаГод, 0) * &МинимальныйЗапасИсточник КАК ЧИСЛО(10, 0)))
	|			ТОГДА МинМакс.Макс - ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток, 0)
	|		ИНАЧЕ ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВНаличииОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеСоСкладаОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеПодЗаказОстаток, 0) - (ВЫРАЗИТЬ(ЕСТЬNULL(СредняяПродажаЗаГодИсточник.СредняяПродажаЗаГод, 0) * &МинимальныйЗапасИсточник КАК ЧИСЛО(10, 0)))
	|	КОНЕЦ КАК Отгрузить,
	|	ВЫБОР
	|		КОГДА МинМакс.Макс - ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток, 0) <= ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВНаличииОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеСоСкладаОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеПодЗаказОстаток, 0) - (ВЫРАЗИТЬ(ЕСТЬNULL(СредняяПродажаЗаГодИсточник.СредняяПродажаЗаГод, 0) * &МинимальныйЗапасИсточник КАК ЧИСЛО(10, 0)))
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВНаличииОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеСоСкладаОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеПодЗаказОстаток, 0) - (ВЫРАЗИТЬ(ЕСТЬNULL(СредняяПродажаЗаГодИсточник.СредняяПродажаЗаГод, 0) * &МинимальныйЗапасИсточник КАК ЧИСЛО(10, 0))) > 0
	|			ТОГДА МинМакс.Макс - ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВНаличииОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеСоСкладаОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстаткиИсточник.ВРезервеПодЗаказОстаток, 0) + (ВЫРАЗИТЬ(ЕСТЬNULL(СредняяПродажаЗаГодИсточник.СредняяПродажаЗаГод, 0) * &МинимальныйЗапасИсточник КАК ЧИСЛО(10, 0)))
	|		ИНАЧЕ МинМакс.Макс - ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток, 0) + ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток, 0)
	|	КОНЕЦ КАК КОбеспечению
	|ИЗ
	|	МинМакс КАК МинМакс
	|		ЛЕВОЕ СОЕДИНЕНИЕ СредняяПродажаЗаГод КАК СредняяПродажаЗаГодИсточник
	|		ПО МинМакс.Номенклатура = СредняяПродажаЗаГодИсточник.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(, Склад = &Склад) КАК СвободныеОстаткиОстатки
	|		ПО МинМакс.Номенклатура = СвободныеОстаткиОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|								СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|							ИЗ РегистрНакопления.ТоварыОрганизаций.Остатки(, АналитикаУчетаНоменклатуры.Склад = &Склад) КАК ТоварыОрганизацийОстатки
	|							СГРУППИРОВАТЬ ПО ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура) КАК ТоварыОрганизаций
	|		ПО МинМакс.Номенклатура = ТоварыОрганизаций.Номенклатура

	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(, Склад = &СкладИсточник) КАК СвободныеОстаткиОстаткиИсточник
	|		ПО МинМакс.Номенклатура = СвободныеОстаткиОстаткиИсточник.Номенклатура
	|ГДЕ
	|	ЕСТЬNULL(ТоварыОрганизаций.КоличествоОстаток, 0) <= МинМакс.Мин";
	Запрос.УстановитьПараметр("МинМакс", МинМакс);
	Запрос.УстановитьПараметр("ДатаНачала", ДобавитьМесяц(ТекущаяДата(), -12));
	Запрос.УстановитьПараметр("ДатаОкончания", ТекущаяДата());
	Запрос.УстановитьПараметр("МинимальныйЗапасИсточник", НастройкаСклада.МинимальныйЗапасИсточника);
	Запрос.УстановитьПараметр("РабочийДень", Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий);
	Запрос.УстановитьПараметр("Склад", СкладДляПеремещения);
	Запрос.УстановитьПараметр("СкладИсточник", НастройкаСклада.ИсточникОбеспечения);
	Запрос.УстановитьПараметр("ХозОпРеализация", МассивХозОпераций);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Отгрузить > 0 Тогда
			
			НоваяСтрока = ДокументОбъект.Товары.Добавить();
			
			НоваяСтрока.Номенклатура = Выборка.Номенклатура;
			НоваяСтрока.Количество = Выборка.Отгрузить;
			НоваяСтрока.КоличествоУпаковок = Выборка.Отгрузить;
			НоваяСтрока.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Отгрузить;
			НоваяСтрока.НачалоОтгрузки = НачалоДня(ДокументОбъект.Дата);
			НоваяСтрока.ОкончаниеПоступления = НачалоДня(ДокументОбъект.Дата);
			
		КонецЕсли;
		
		Если Выборка.КОбеспечению > 0 Тогда
			
			НоваяСтрока = ДокументОбъект.Товары.Добавить();
			
			НоваяСтрока.Номенклатура = Выборка.Номенклатура;
			НоваяСтрока.Количество = Выборка.КОбеспечению;
			НоваяСтрока.КоличествоУпаковок = Выборка.КОбеспечению;
			НоваяСтрока.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Требуется;
			НоваяСтрока.НачалоОтгрузки = НачалоДня(ДокументОбъект.Дата);
			НоваяСтрока.ОкончаниеПоступления = НачалоДня(ДокументОбъект.Дата);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПредыдущийЗаказ(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаказНаПеремещение.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаказНаПеремещение КАК ЗаказНаПеремещение
	|ГДЕ
	|	ЗаказНаПеремещение.Ссылка <> &Ссылка
	|	И ЗаказНаПеремещение.Проведен
	|	И ЗаказНаПеремещение.АТ_Обеспечение
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказНаПеремещение.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ИзменитьПредыдущийЗаказ(Ссылка)
	
	ЗаказСсылка = ПолучитьПредыдущийЗаказ(Ссылка);
	
	Если Не ЗначениеЗаполнено(ЗаказСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаказОбъект = ЗаказСсылка.ПолучитьОбъект();
	
	Для Каждого Строка Из ЗаказОбъект.Товары Цикл
		Если Строка.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Требуется Тогда
			Строка.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.НеТребуется;
		КонецЕсли;
	КонецЦикла;
	
	ЗаказОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьДокументИзмененияАссортимента(Ссылка, Склад, МинМакс)
	
	ДокументОбъект = Документы.АТ_ИзменениеАссортиментаСклада.СоздатьДокумент();
	ДокументОбъект.Дата = ТекущаяДатаСеанса();
	ДокументОбъект.Склад = Склад;
	ДокументОбъект.ЗаказНаПеремещение = Ссылка;
	ДокументОбъект.Комментарий = "Создан по заказу на перемещение";
	
	ДокументОбъект.Товары.Загрузить(МинМакс);
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыФормы()
	
	ТаблицаНоменклатуры = ТаблицаМинМакс.Выгрузить();
	ТаблицаНоменклатурыОтбор = ТаблицаНоменклатуры.Скопировать(Новый Структура("Остаток, ИНеБыло", 0, Ложь));
	СписокНоменклатуры = ТаблицаНоменклатурыОтбор.ВыгрузитьКолонку("Номенклатура");
	
	ЗаказСсылка = ПолучитьПредыдущийЗаказ(Документы.ЗаказНаПеремещение.ПустаяСсылка());
	
	
	Период = Новый СтандартныйПериод;
	Период.ДатаНачала = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаказСсылка, "Дата");
	Период.ДатаОкончания = ТекущаяДата();
	
	КлючВарианта = ПолучитьВариантОтчета();
	Если Не ЗначениеЗаполнено(КлючВарианта) Тогда
		Возврат Новый Структура;
	КонецЕсли;
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура", СписокНоменклатуры);
	Отбор.Вставить("Склад", СкладДляПеремещения);
	Отбор.Вставить("Период", Период);
	
	Возврат Новый Структура("КлючВарианта, Отбор, СформироватьПриОткрытии", КлючВарианта, Отбор, Истина);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПараметрыСклада(Ссылка)
	
	ПараметрыСклада = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СкладыКонтактнаяИнформация.Ссылка.АТ_ЗонаДоставки КАК АТ_ЗонаДоставки,
	|	СкладыКонтактнаяИнформация.ЗначенияПолей КАК ЗначенияПолей,
	|	СкладыКонтактнаяИнформация.Представление КАК Представление
	|ИЗ
	|	Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяИнформация
	|ГДЕ
	|	СкладыКонтактнаяИнформация.Ссылка = &Ссылка
	|	И СкладыКонтактнаяИнформация.Вид = &Вид";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.АдресСклада);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат ПараметрыСклада;
	КонецЕсли;
	Выборка = Результат.Выбрать();
	
	Выборка.Следующий();
	
	ПараметрыСклада.Вставить("ЗонаДоставки", Выборка.АТ_ЗонаДоставки);
	ПараметрыСклада.Вставить("АдресДоставкиЗначенияПолей", Выборка.ЗначенияПолей);
	ПараметрыСклада.Вставить("АдресДоставки", Выборка.Представление);
	
	Возврат ПараметрыСклада;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВариантОтчета()
	
	ОтчетИнформация = ВариантыОтчетов.СформироватьИнформациюОбОтчетеПоПолномуИмени("Отчет.ВыручкаИСебестоимостьПродаж");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Варианты.КлючВарианта КАК КлючВарианта,
	|	Варианты.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК Варианты
	|ГДЕ
	|	Варианты.Отчет = &Отчет
	|	И Варианты.Пользовательский
	|	И Варианты.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Отчет", ОтчетИнформация.Отчет);
	Запрос.УстановитьПараметр("Наименование", "Валовая прибыль предприятия - Номенклатура - Менеджер - Клиент");
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Выборка.Следующий();
	
	Возврат Выборка.КлючВарианта;
	
КонецФункции

&НаСервере
Процедура ПрошлыйОпытНаСервере()
	Для Каждого ИндентификаторСтроки Из Элементы.ТаблицаМинМакс.ВыделенныеСтроки Цикл
		ВыбраннаяСтрока = ТаблицаМинМакс.НайтиПоИдентификатору(ИндентификаторСтроки);
		ВыбраннаяСтрока.Мин = ВыбраннаяСтрока.МинСтарый;
		ВыбраннаяСтрока.Макс = ВыбраннаяСтрока.МаксСтарый;
	КонецЦикла;
КонецПроцедуры
#КонецОбласти






