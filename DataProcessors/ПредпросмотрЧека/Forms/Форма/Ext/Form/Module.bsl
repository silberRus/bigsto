
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ДокументСсылка = Параметры.ДокументСсылка;
	Организация    = Параметры.Организация;
	Партнер        = Параметры.Партнер;
	ТорговыйОбъект = Параметры.ТорговыйОбъект;
	
	ДанныеФискальнойОперации = РозничныеПродажи.СтруктураДанныеФискальнойОперации();
	РозничныеПродажи.ЗаполнитьПараметрыОтправкиЭлектронногоЧекаПоПартнеру(ЭтотОбъект);
	Телефон = РозничныеПродажиКлиентСервер.ОтформатироватьНомерТелефона(Телефон10Знаков);
	
	Если Параметры.ПодключенноеОборудование = Неопределено Тогда
		ПодключенноеОборудование = ПодключаемоеОборудованиеУТВызовСервера.ОборудованиеПодключенноеПоОрганизации(Организация);
	Иначе
		ПодключенноеОборудование = Параметры.ПодключенноеОборудование;
	КонецЕсли;
	
	ОборудованиеТерминал           = ПодключенноеОборудование.Терминал;
	ПараметрыЭквайринговойОперации = Параметры.ПараметрыЭквайринговойОперации;
	
	Если ТипЗнч(ПодключенноеОборудование.ККТ) = Тип("Массив") Тогда
		
		Для Каждого ЭлементМассива Из ПодключенноеОборудование.ККТ Цикл
			
			ОборудованиеККТ = ЭлементМассива;
			ВерсияФФД = ДобавитьВТаблицуОборудования(ОборудованиеККТ);
			
		КонецЦикла;
		
		Элементы.ККТ.ТолькоПросмотр = (Элементы.ККТ.СписокВыбора.Количество() = 1);
		
	Иначе
		
		ОборудованиеККТ = ПодключенноеОборудование.ККТ;
		ВерсияФФД = ДобавитьВТаблицуОборудования(ОборудованиеККТ);
		
	КонецЕсли;
	
	Элементы.ВерсияФФД.ТолькоПросмотр               = Не Константы.РазрешитьВыборВерсииФФДПриПечатиЧеков.Получить();
	Элементы.НетПодключенногоОборудования.Видимость = (Элементы.ККТ.СписокВыбора.Количество() = 0);
	Элементы.ККТ.Видимость                          = (Элементы.ККТ.СписокВыбора.Количество() > 0);
	Элементы.ВерсияФФД.Видимость                    = (Элементы.ККТ.СписокВыбора.Количество() > 0);
	
	ПраваДоступа     = НастройкиПродажДляПользователейСервер.ПраваДоступаРМК(Пользователи.ТекущийПользователь());
	РеквизитыКассира = РозничныеПродажи.РеквизитыКассира(Пользователи.ТекущийПользователь());
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаОпределениеВерсииФФД;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ИспользуемоеОборудование = ИспользуемоеОборудование();
	Для Каждого Оборудование Из ИспользуемоеОборудование Цикл
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоИдентификатору(
			Новый ОписаниеОповещения("НачатьПодключениеОборудованиеПоИдентификаторуЗавершение", ЭтотОбъект, Оборудование),
			УникальныйИдентификатор,
			Оборудование);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ИспользуемоеОборудование = ИспользуемоеОборудование();
	Для Каждого Оборудование Из ИспользуемоеОборудование Цикл
		МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоИдентификатору(
			Новый ОписаниеОповещения("НачатьОтключениеОборудованиеПоИдентификаторуЗавершение", ЭтотОбъект, Оборудование),
			УникальныйИдентификатор,
			Оборудование);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СуммаПредоплатыПриИзменении(Элемент)
	
	ПересчитатьПараметрыОплаты();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПостоплатыПриИзменении(Элемент)
	
	СуммаПредоплаты = СуммаДокумента - СуммаОплаты - СуммаПостоплаты;
	
	ПересчитатьПараметрыОплаты();
	
КонецПроцедуры

&НаКлиенте
Процедура ККТПриИзменении(Элемент)
	
	ВерсияФФД = ВерсияФФД(ЭтотОбъект, ОборудованиеККТ);
	
	ККТПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ККТОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияФФДПриИзменении(Элемент)
	
	ВерсияФФДОборудования = ВерсияФФД(ЭтотОбъект, ОборудованиеККТ);
	
	Если ВерсияФФД <> ВерсияФФДОборудования
		И ВерсияФФД <> ВерсияФФДПоУмолчанию() Тогда
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, СтрШаблон(НСтр("ru = 'Использовать ФФД %1'"), ВерсияФФД));
		Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Отмена'"));
		
		ТекстВопроса = СтрШаблон(
			НСтр("ru = 'Фискальное устройство ""%1"" не поддерживает ФФД %2.
			           |При использовании ФФД %3 типы оплаты ""Предоплата"", ""Кредит""
			           |будут просуммированы и переданы в ОФД как тип оплаты ""Электронно"",
			           |что не соответствует типу оплаты текущего документа.'"),
			ОборудованиеККТ, ВерсияФФД, ВерсияФФД);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ВерсияФФДОборудования", ВерсияФФДОборудования);
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПослеОтветаНаВопросОВыбораВерсииФФД", ЭтотОбъект, ДополнительныеПараметры),
			ТекстВопроса,
			Кнопки,,
			КодВозвратаДиалога.Нет);
		
	Иначе
		
		ККТПриИзмененииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросОВыбораВерсииФФД(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		ВерсияФФД = ДополнительныеПараметры.ВерсияФФДОборудования;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		ВерсияФФД = ДополнительныеПараметры.ВерсияФФДОборудования;
	КонецЕсли;
	
	ККТПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияФФДОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтправкиЭлектронногоЧекаSMSПриИзменении(Элемент)
	ККТПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтправкиЭлектронногоЧекаEmailПриИзменении(Элемент)
	ККТПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтправкиЭлектронногоЧекаНеОтправлятьПриИзменении(Элемент)
	ККТПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПробитьЧек(Команда)
	
	ОчиститьСообщения();
	
	Если ЗначениеЗаполнено(ОборудованиеТерминал) Тогда
		
		Если ПараметрыЭквайринговойОперации = Неопределено Тогда
			
			РозничныеПродажиКлиент.ОбработатьСостояниеСмены(
				ЭтотОбъект,
				Новый ОписаниеОповещения("ПослеОбработкиСостоянияСмены", ЭтотОбъект));
				
		Иначе
			
			ПараметрыОткрытияФормы = Новый Структура;
			ПараметрыОткрытияФормы.Вставить("ТипТранзакции",               ПараметрыЭквайринговойОперации.ТипТранзакции);
			ПараметрыОткрытияФормы.Вставить("Сумма",                       ПараметрыЭквайринговойОперации.Сумма);
			ПараметрыОткрытияФормы.Вставить("ПределСуммы",                 ПараметрыЭквайринговойОперации.Сумма);
			ПараметрыОткрытияФормы.Вставить("УказатьДополнительныеДанные", ПараметрыЭквайринговойОперации.ТипТранзакции = "AuthorizeRefund");
			
			Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОперацияПоПлатежнойКарте") Тогда
				ПараметрыОткрытияФормы.Вставить("ЗапретРедактированияСуммы", Истина);
			КонецЕсли;
			
			ОткрытьФорму(
				"Справочник.ПодключаемоеОборудование.Форма.ФормаАвторизацииЭТ",
				ПараметрыОткрытияФормы,,,,,
				Новый ОписаниеОповещения(
					"ОплатитьКартойЗавершение",
					ЭтотОбъект,
					ПараметрыОткрытияФормы),
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		КонецЕсли;
		
	Иначе
		РозничныеПродажиКлиент.ОбработатьСостояниеСмены(
			ЭтотОбъект,
			Новый ОписаниеОповещения("ПослеОбработкиСостоянияСмены", ЭтотОбъект));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВывестиМакетЧека()
	
	ТекстЧека = МенеджерОборудованияКлиентСервер.СформироватьТекстНефискальногоЧека(ПараметрыОперацииФискализацииЧека, 34, ВерсияФФД);
	ТекстовыйДокумент.УстановитьТекст(ТекстЧека);
	
КонецФункции

&НаСервере
Процедура РассчитатьСуммы()
	
	Суммы = Оплаты(ПараметрыОперацииФискализацииЧека);
	
	СуммаДокумента  = Суммы.Всего;
	СуммаОплаты     = Суммы.ОплатаНаличные + Суммы.ОплатаПлатежнаяКарта;
	СуммаПостоплаты = Суммы.Кредит;
	СуммаПредоплаты = Суммы.Предоплата;
	
КонецПроцедуры

&НаСервере
Функция Оплаты(ПараметрыОперацииФискализацииЧека)
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Всего",                0);
	ВозвращаемоеЗначение.Вставить("ОплатаНаличные",       0);
	ВозвращаемоеЗначение.Вставить("ОплатаПлатежнаяКарта", 0);
	ВозвращаемоеЗначение.Вставить("Кредит",               0);
	ВозвращаемоеЗначение.Вставить("Предоплата",           0);
	
	Для Каждого СтрокаОплаты Из ПараметрыОперацииФискализацииЧека.ТаблицаОплат Цикл
		
		ВозвращаемоеЗначение.Всего = ВозвращаемоеЗначение.Всего + СтрокаОплаты.Сумма;
		
		Если СтрокаОплаты.ТипОплаты = Перечисления.ТипыОплатыККТ.Наличные Тогда
			ВозвращаемоеЗначение.ОплатаНаличные = ВозвращаемоеЗначение.ОплатаНаличные + СтрокаОплаты.Сумма;
		КонецЕсли;
		
		Если СтрокаОплаты.ТипОплаты = Перечисления.ТипыОплатыККТ.Электронно Тогда
			ВозвращаемоеЗначение.ОплатаПлатежнаяКарта = ВозвращаемоеЗначение.ОплатаПлатежнаяКарта + СтрокаОплаты.Сумма;
		КонецЕсли;
		
		Если СтрокаОплаты.ТипОплаты = Перечисления.ТипыОплатыККТ.Постоплата Тогда
			ВозвращаемоеЗначение.Кредит = СтрокаОплаты.Сумма;
		КонецЕсли;
		
		Если СтрокаОплаты.ТипОплаты = Перечисления.ТипыОплатыККТ.Предоплата Тогда
			ВозвращаемоеЗначение.Предоплата = СтрокаОплаты.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

&НаСервере
Процедура ККТПриИзмененииНаСервере()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПодключаемоеОборудование.ТипОборудования КАК ТипОборудования,
	|	ПодключаемоеОборудование.СерийныйНомер   КАК СерийныйНомер
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ОборудованиеККТ);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ПараметрыККТ = Новый Структура;
	ПараметрыККТ.Вставить("ТипОборудования",         Выборка.ТипОборудования);
	ПараметрыККТ.Вставить("СерийныйНомер",           Выборка.СерийныйНомер);
	ПараметрыККТ.Вставить("ИдентификаторУстройства", ОборудованиеККТ);
	
	ПолноеИмя = ДокументСсылка.Метаданные().ПолноеИмя();
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
	ПараметрыОперацииФискализацииЧека = МенеджерОбъекта.ПараметрыОперацииФискализацииЧека(
		ДокументСсылка,
		Неопределено,
		ВерсияФФДПараметровФискализации(ВерсияФФД));
	
	Если ПараметрыОперацииФискализацииЧека <> Неопределено Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаТекстовыйДокумент;
		Элементы.ПробитьЧек.Доступность   = (Элементы.ККТ.СписокВыбора.Количество() > 0);
		
		ПодготовитьПараметрыОперацииФискализацииЧекаКПередаче();
		
		РассчитатьСуммы();
		
		ВывестиМакетЧека();
		
	Иначе
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаОперацияНеПоддерживается;
		Элементы.ПробитьЧек.Доступность   = Ложь;
		
	КонецЕсли;
	
	Элементы.Суммы.ТолькоПросмотр = (ВерсияФФД = ВерсияФФДПоУмолчанию());
	
	Элементы.ГруппаОтправкаЭлектронногоЧека.Видимость = (ПараметрыККТ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККТ);
	
	// Если используется ФФД 1.0 и ККТ поддерживает 1.0 и в чеке должны быть суммы кредита и предоплаты.
	Если ВерсияФФДПараметровФискализации(ВерсияФФД) = ВерсияФФДПоУмолчанию()
		И ВерсияФФД(ЭтотОбъект, ОборудованиеККТ) = ВерсияФФДПоУмолчанию() Тогда
		
		ТребуемыеПараметрыОперацииФискализацииЧека = МенеджерОбъекта.ПараметрыОперацииФискализацииЧека(
			ДокументСсылка,
			Неопределено,
			АктуальнаяВерсияФФД());
		
		Суммы = Оплаты(ТребуемыеПараметрыОперацииФискализацииЧека);
		
		Элементы.ГруппаВниманиеТребуетсяФФД105.Видимость     = Ложь;
		Элементы.ГруппаВниманиеРекомендуетсяФФД105.Видимость = (Суммы.Кредит <> 0 Или Суммы.Предоплата <> 0);
		
	// Если используется ФФД 1.0.5, но ККТ поддерживает только ФФД 1.0 и в чеке есть суммы кредита и предоплаты.
	ИначеЕсли (ВерсияФФДПараметровФискализации(ВерсияФФД) = АктуальнаяВерсияФФД())
			И (ВерсияФФД(ЭтотОбъект, ОборудованиеККТ) = ВерсияФФДПоУмолчанию()) Тогда
		
		Суммы = Оплаты(ПараметрыОперацииФискализацииЧека);
		
		Элементы.ГруппаВниманиеТребуетсяФФД105.Видимость     = (Суммы.Кредит <> 0 Или Суммы.Предоплата <> 0);
		Элементы.ГруппаВниманиеРекомендуетсяФФД105.Видимость = Ложь;
		
	Иначе
		
		Элементы.ГруппаВниманиеТребуетсяФФД105.Видимость     = Ложь;
		Элементы.ГруппаВниманиеРекомендуетсяФФД105.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ИспользуемоеОборудование()
	
	ИспользуемоеОборудование = Новый Массив;
	Если ПараметрыЭквайринговойОперации <> Неопределено
		И ЗначениеЗаполнено(ОборудованиеТерминал) Тогда
		ИспользуемоеОборудование.Добавить(ОборудованиеТерминал);
	КонецЕсли;
	Для Каждого Оборудование Из Элементы.ККТ.СписокВыбора.ВыгрузитьЗначения() Цикл
		ИспользуемоеОборудование.Добавить(Оборудование);
	КонецЦикла;
	
	Возврат ИспользуемоеОборудование;
	
КонецФункции

&НаСервере
Процедура ПересчитатьПараметрыОплаты()
	
	ПолноеИмя = ДокументСсылка.Метаданные().ПолноеИмя();
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
	ПараметрыОперацииФискализацииЧека = МенеджерОбъекта.ПараметрыОперацииФискализацииЧека(ДокументСсылка, СуммаПредоплаты, ВерсияФФД);
	
	ПодготовитьПараметрыОперацииФискализацииЧекаКПередаче();
	
	РассчитатьСуммы();
	
	ВывестиМакетЧека();
	
КонецПроцедуры

&НаСервере
Функция ОбработатьДанныеЭлектронногоЧека()
	
	Возврат РозничныеПродажи.ОбработатьДанныеЭлектронногоЧека(ЭтотОбъект);
	
КонецФункции

&НаСервере
Процедура ПодготовитьПараметрыОперацииФискализацииЧекаКПередаче()
	
	ДанныеЭлектронногоЧека = РозничныеПродажиКлиентСервер.ДанныеЭлектронногоЧека(ЭтотОбъект);
	
	Если (ПараметрыККТ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККТ) Тогда
		ДанныеФискальнойОперации.ВариантОтправкиЭлектронногоЧека  = ДанныеЭлектронногоЧека.ВариантОтправкиЭлектронногоЧека;
		ДанныеФискальнойОперации.КонтактныеДанныеЭлектронногоЧека = ДанныеЭлектронногоЧека.КонтактныеДанныеЭлектронногоЧека;
	Иначе
		ДанныеФискальнойОперации.ВариантОтправкиЭлектронногоЧека = Перечисления.ВариантыОтправкиЭлектронногоЧекаПокупателю.НеОтправлять;
		ДанныеФискальнойОперации.КонтактныеДанныеЭлектронногоЧека = "";
	КонецЕсли;
	
	РозничныеПродажиКлиентСервер.ЗаполнитьДанныеФискальнойОперации(ПараметрыОперацииФискализацииЧека, ДанныеФискальнойОперации);
	
	ПараметрыОперацииФискализацииЧека.Кассир    = РеквизитыКассира.Наименование;
	ПараметрыОперацииФискализацииЧека.КассирИНН = РеквизитыКассира.ИНН;
	
	// Для совместмости с фискальными регистраторами
	ПараметрыОперацииФискализацииЧека.СерийныйНомер = ПараметрыККТ.СерийныйНомер;
	
	// Для принтера чеков
	ПараметрыОперацииФискализацииЧека.НомерКассы = "00001";
	ПараметрыОперацииФискализацииЧека.НомерЧека  = 1;
	ПараметрыОперацииФискализацииЧека.НомерСмены = 1;
	ПараметрыОперацииФискализацииЧека.ДатаВремя  = ТекущаяДатаСеанса();
	ПараметрыОперацииФискализацииЧека.КопийЧека  = 1;
	
	Если (ПараметрыККТ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККТ) Тогда
		ФорматноЛогическийКонтрольКлиентСервер.ПровестиФорматноЛогическийКонтроль(ПараметрыОперацииФискализацииЧека, ПараметрыККТ.ИдентификаторУстройства);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатитьКартойЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОперации = МенеджерОборудованияКлиент.ПараметрыВыполненияЭквайринговойОперации();
	ПараметрыОперации.ТипТранзакции  = ДополнительныеПараметры.ТипТранзакции;
	ПараметрыОперации.СуммаОперации  = Результат.Сумма;
	ПараметрыОперации.НомерЧека      = Результат.НомерЧека;
	ПараметрыОперации.СсылочныйНомер = Результат.СсылочныйНомер;
	
	Оповещение = Новый ОписаниеОповещения("ПослеВыполненияОперацииНаЭквайринговомТерминале", ЭтотОбъект, ДополнительныеПараметры);
	МенеджерОборудованияКлиент.НачатьВыполнениеОперацииНаЭквайринговомТерминале(
		Оповещение, УникальныйИдентификатор,
		ОборудованиеТерминал,
		ПараметрыККТ.ИдентификаторУстройства,
		ПараметрыОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияОперацииНаЭквайринговомТерминале(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		
		Модифицированность = Истина;
		ВладелецФормы.Объект.НомерПлатежнойКарты = РезультатВыполнения.НомерКарты;
		ВладелецФормы.Объект.КодАвторизации      = РезультатВыполнения.КодАвторизации;
		ВладелецФормы.Объект.ОплатаВыполнена     = Истина;
		
		ПодключаемоеОборудованиеУТКлиент.ЗаписатьОбъект(
			ВладелецФормы,
			РежимЗаписиДокумента.Проведение,
			Новый ОписаниеОповещения("ПослеЗаписиОперацииПоПлатежнойКарте", ЭтотОбъект, ДополнительныеПараметры));
		
	Иначе
		
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'При выполнении операции возникла ошибка:
				|""%1"".
				|Оплата по карте не была произведена.'"),
			РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписиОперацииПоПлатежнойКарте(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено
		И Результат Тогда
		
		РозничныеПродажиКлиент.ОбработатьСостояниеСмены(
			ЭтотОбъект,
			Новый ОписаниеОповещения("ПослеОбработкиСостоянияСмены", ЭтотОбъект));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОбработкиСостоянияСмены(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	НеобходимостьОбработкиДанных = РозничныеПродажиКлиентСервер.ПроверитьНеобходимостьОбработкиДанныхЭлектронногоЧека(ЭтотОбъект);
	Если НеобходимостьОбработкиДанных.ТребуетсяОбновитьКонтактнуюИнформацию
		Или НеобходимостьОбработкиДанных.ТребуетсяСоздатьПартнера
		Или НеобходимостьОбработкиДанных.ТребуетсяОбновитьВариантОтправкиЭлектронногоЧекаПартнера Тогда
		ОбработатьДанныеЭлектронногоЧека();
	КонецЕсли;
	
	Оповещение        = Новый ОписаниеОповещения("ПечатьЧека_Завершение", ЭтотОбъект);
	ПослеОткрытияЧека = Новый ОписаниеОповещения("ПечатьЧека_ПослеОткрытияЧека",  ЭтотОбъект);

	МенеджерОборудованияКлиент.НачатьФискализациюЧекаНаФискальномУстройстве(
		Оповещение,
		УникальныйИдентификатор,
		ПараметрыОперацииФискализацииЧека,
		ПараметрыККТ.ИдентификаторУстройства,
		ПослеОткрытияЧека);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЧека_ПослеОткрытияЧека(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ШапкаЧека = ПараметрыВыполнения.ВходныеПараметры;
	
	ШапкаЧека.НомерСмены = ПараметрыВыполнения.НомерСмены;
	ШапкаЧека.НомерЧека  = ПараметрыВыполнения.НомерЧека;
	
	ВыполнитьОбработкуОповещения(ПараметрыВыполнения.ОповещениеПродолжения, ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЧека_Завершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		
		ТекстXML = ?(РезультатВыполнения.ВыходныеПараметры.Количество() > 7, РезультатВыполнения.ВыходныеПараметры[7], Неопределено);
		
		ФискальнаяОперацияРеквизиты = ПодключаемоеОборудованиеУТКлиент.СтруктураРеквизитыФискальнойОперацииКассовогоУзла();
		ФискальнаяОперацияРеквизиты.Данные            = ТекстXML;
		ФискальнаяОперацияРеквизиты.Дата              = ПараметрыОперацииФискализацииЧека.ДатаВремя;
		ФискальнаяОперацияРеквизиты.ДокументОснование = ДокументСсылка;
		ФискальнаяОперацияРеквизиты.Организация       = Организация;
		ФискальнаяОперацияРеквизиты.ТорговыйОбъект    = ТорговыйОбъект;
		ФискальнаяОперацияРеквизиты.Устройство        = ПараметрыККТ.ИдентификаторУстройства;
		
		ФискальнаяОперацияРеквизиты.ТипОперации = ПредопределенноеЗначение("Перечисление.ТипыОперацииКассовогоУзла.ФискальнаяОперация");
		ФискальнаяОперацияРеквизиты.ТипРасчета  = ПараметрыОперацииФискализацииЧека.ТипРасчета;
		
		Если (ПараметрыККТ.ТипОборудования = ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ККТ")) Тогда
			ДанныеЭлектронногоЧека = РозничныеПродажиКлиентСервер.ДанныеЭлектронногоЧека(ЭтотОбъект);
			ФискальнаяОперацияРеквизиты.ВариантОтправкиЭлектронногоЧека  = ДанныеЭлектронногоЧека.ВариантОтправкиЭлектронногоЧека;
			ФискальнаяОперацияРеквизиты.КонтактныеДанныеЭлектронногоЧека = ДанныеЭлектронногоЧека.КонтактныеДанныеЭлектронногоЧека;
		КонецЕсли;
		ФискальнаяОперацияРеквизиты.НомерЧекаККМ = РезультатВыполнения.ВыходныеПараметры[1];
		ФискальнаяОперацияРеквизиты.НомерСмены   = РезультатВыполнения.ВыходныеПараметры[0];
		
		Оплаты = Оплаты(ПараметрыОперацииФискализацииЧека);
		ФискальнаяОперацияРеквизиты.Сумма                     = Оплаты.Всего;
		ФискальнаяОперацияРеквизиты.СуммаОплатыНаличные       = Оплаты.ОплатаНаличные;
		ФискальнаяОперацияРеквизиты.СуммаОплатыПлатежнаяКарта = Оплаты.ОплатаПлатежнаяКарта;
		ФискальнаяОперацияРеквизиты.СуммаКредит               = Оплаты.Кредит;
		ФискальнаяОперацияРеквизиты.СуммаПредоплаты           = Оплаты.Предоплата;
		
		ПараметрыЗавершения = Новый Структура;
		ПараметрыЗавершения.Вставить("ЗакрытьФорму",                Истина);
		ПараметрыЗавершения.Вставить("Форма",                       ЭтотОбъект);
		ПараметрыЗавершения.Вставить("ФискальнаяОперацияРеквизиты", ФискальнаяОперацияРеквизиты);
		
		ПодключаемоеОборудованиеУТКлиент.ВыполнитьДействиеПослеЗаписиФискальнойОперацииВЖурнал(
			ЭтотОбъект,
			Новый ОписаниеОповещения("ФискальнаяОперацияЗаписанаВЖурнал", ПодключаемоеОборудованиеУТКлиент, ПараметрыЗавершения),
			НСтр("ru = 'Не удалось записать данные в журнал фискальных операций.'"));
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'При печати чека произошла ошибка.
		                            |Чек не напечатан на фискальном устройстве.
		                            |Дополнительное описание:
		                            |%ДополнительноеОписание%'");
		
		ТекстСообщения = СтрЗаменить(
			ТекстСообщения,
			"%ДополнительноеОписание%",
			РезультатВыполнения.ОписаниеОшибки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияПараметровУстройства(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		
		Если ЗначениеЗаполнено(РезультатВыполнения.ВыходныеПараметры.ВерсияФФДККТ) Тогда
			ДополнительныеПараметры.СтрокаТЧ.ВерсияФФД = РезультатВыполнения.ВыходныеПараметры.ВерсияФФДККТ;
		Иначе
			ДополнительныеПараметры.СтрокаТЧ.ВерсияФФД = ВерсияФФДПоУмолчанию();
		КонецЕсли;
		
	Иначе
		
		ДополнительныеПараметры.СтрокаТЧ.ВерсияФФД = ВерсияФФДПоУмолчанию();
		
	КонецЕсли;
	
	Если ДополнительныеПараметры.СтрокаТЧ.Оборудование = ОборудованиеККТ Тогда
		ВерсияФФД = ДополнительныеПараметры.СтрокаТЧ.ВерсияФФД;
	КонецЕсли;
	
	ККТПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьПодключениеОборудованиеПоИдентификаторуЗавершение(Данные, Оборудование) Экспорт
	
	Если Данные.Результат Тогда
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Оборудование", Оборудование);
		НайденныеСтроки = ТаблицаОборудования.НайтиСтроки(ПараметрыОтбора);
		Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
			
			СтрокаТЧ.Подключено = Истина;
			
			Если Не СтрокаТЧ.СчитанаВерсияФФД Тогда
				
				ДополнительныеПараметры = Новый Структура;
				ДополнительныеПараметры.Вставить("СтрокаТЧ", СтрокаТЧ);
				
				МенеджерОборудованияКлиент.НачатьПолучениеПараметровФискальногоУстройства(
					Новый ОписаниеОповещения("ПослеПолученияПараметровУстройства", ЭтотОбъект, ДополнительныеПараметры),
					ЭтаФорма.УникальныйИдентификатор, Оборудование, Ложь);
					
			Иначе
				
				Если СтрокаТЧ.Оборудование = ОборудованиеККТ Тогда
					ВерсияФФД = СтрокаТЧ.ВерсияФФД;
				КонецЕсли;
				
				ККТПриИзмененииНаСервере();
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru = 'При подключении устройства %1 произошла ошибка:
				           |""%2"".'"),
				Оборудование, 
				Данные.ОписаниеОшибки));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОтключениеОборудованиеПоИдентификаторуЗавершение(Данные, Оборудование) Экспорт
	
	Если Не Данные.Результат Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru = 'При отключении устройства %1 произошла ошибка:
				           |""%2"".'"),
				Оборудование, 
				Данные.ОписаниеОшибки));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВерсияФФД(Форма, Оборудование)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Оборудование", Оборудование);
	НайденныеСтроки = Форма.ТаблицаОборудования.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		Возврат НайденныеСтроки[0].ВерсияФФД;
	Иначе
		Возврат ВерсияФФДПоУмолчанию();
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ВерсияФФДПараметровФискализации(ЗначениеВерсияФФД)
	
	Если ЗначениеВерсияФФД = МаксимальнаяВерсияФФД() Тогда
		Возврат АктуальнаяВерсияФФД();
	Иначе
		Возврат ЗначениеВерсияФФД;
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВерсияФФДПоУмолчанию()
	
	Возврат "1.0";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция МаксимальнаяВерсияФФД()
	
	Возврат "1.1";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция АктуальнаяВерсияФФД()
	
	Возврат "1.0.5";
	
КонецФункции

&НаСервере
Функция ДобавитьВТаблицуОборудования(ПодключаемоеОборудование)
	
	ТипОборудования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПодключаемоеОборудование, "ТипОборудования");
	
	СчитанаВерсияФФД = Ложь;
	ЗначениеВерсияФФД = "";
	Если ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ПринтерЧеков Тогда
		СчитанаВерсияФФД = Истина;
		ЗначениеВерсияФФД = МаксимальнаяВерсияФФД();
	ИначеЕсли ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ФискальныйРегистратор Тогда
		СчитанаВерсияФФД = Истина;
		ЗначениеВерсияФФД = ВерсияФФДПоУмолчанию();
	Иначе
		
		ПараметрыРегистрацииУстройства = МенеджерОборудованияВызовСервера.ПолучитьПараметрыРегистрацииУстройства(ПодключаемоеОборудование);
		Если ПараметрыРегистрацииУстройства.ЕстьДанные Тогда
			ЗначениеВерсияФФД = ПараметрыРегистрацииУстройства.ВерсияФФДККТ;
		Иначе
			ЗначениеВерсияФФД = ВерсияФФДПоУмолчанию();
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ККТ.СписокВыбора.Добавить(ПодключаемоеОборудование);
	НовоеОборудование = ТаблицаОборудования.Добавить();
	НовоеОборудование.Оборудование     = ПодключаемоеОборудование;
	НовоеОборудование.ВерсияФФД        = ЗначениеВерсияФФД;
	НовоеОборудование.СчитанаВерсияФФД = СчитанаВерсияФФД;
	
	Возврат ЗначениеВерсияФФД;
	
КонецФункции

#КонецОбласти