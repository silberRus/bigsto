
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	СТ_СтрокаПоискаОкончаниеВводаТекста(неопределено, "", неопределено, неопределено, неопределено);
	
	ЭтаФорма.ТекущийЭлемент = Элементы.СТ_СтрокаПоиска;
	Скидос = 1;
	//Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Документ) Тогда
	//	Скидос = ПоулчитьСкидку(ЭтаФорма.Параметры.Документ);		
	//	ЭтаФорма.Скидка = (1-Скидос)*100;
	//	Этаформа.Склад = ПолучитьЗначениеРеквизита(ЭтаФорма.Параметры.Документ,"Склад");
	//	ЭтаФорма.Соглашение = ПолучитьЗначениеРеквизита(ЭтаФорма.Параметры.Документ,"Соглашение");
	//	ЭтаФорма.Валюта = ПолучитьЗначениеРеквизита(ЭтаФорма.Параметры.Документ,"Валюта");
	//Иначе
		
		
		ЭтаФорма.Склад = Этаформа.ВладелецФормы.Объект.Склад;
		ЭтаФорма.Соглашение = Этаформа.ВладелецФормы.Объект.Соглашение;		
		ЭтаФорма.Валюта = Этаформа.ВладелецФормы.Объект.Валюта;
		Скидос = ПоулчитьСкидку(неопределено,Этаформа.ВладелецФормы.Объект.Партнер);
		ЭтаФорма.Скидка = (1-Скидос)*100;
	//КонецЕсли;
	                                
	ЭтаФорма.ВидЦен = ПолучитьЗначениеРеквизита(ЭтаФорма.Соглашение,"ВидЦен");	
	    
	СписокНоменклатура.Параметры.УстановитьЗначениеПараметра("Скидос",ЭтаФорма.Скидка);
	СписокНоменклатура.Параметры.УстановитьЗначениеПараметра("Валюта",Валюта);
	СписокНоменклатура.Параметры.УстановитьЗначениеПараметра("Склад",ЭтаФорма.Склад);
	СписокНоменклатура.Параметры.УстановитьЗначениеПараметра("Соглашение",ЭтаФорма.Соглашение);

	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизита(Ссылка,Реквизит)
	Возврат Ссылка[Реквизит];
КонецФункции

//СТОК Бойков начало         
&НаКлиенте
Процедура СТ_СтрокаПоискаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Состояние("Производится поиск по подстроке");
	Если ЗначениеЗаполнено(Текст) Тогда
		МНомен = СТ_СтрокаПоискаОкончаниеВводаТекстаНаСервере(Текст);
	Иначе
		МНомен = Новый массив;
		//МНомен.Добавить(Справочники.Номенклатура.ПустаяСсылка());
	КонецЕсли;
	СТ_Общий.СТ_СтрокаПоискаОкончаниеВводаТекста(СписокНоменклатура,Элемент,МНомен,"Ссылка",Текст);
	ЭтаФорма.СТ_СтрокаПоиска = Текст;
	//СТОРВЕРК Лабутин 20.01.2016 Задание №6046
	//сохраним результаты, выведенные в таб. часть в наш регистр 
	//записываем только если более четырех значимых символов в тексте запроса ЭТУ ПРОЦЕДУРУ ЦЕЛИКОМ ЖЕЛАТЕЛЬНО ПЕРЕНЕСТИ В ОБЩИЙ МОДУЛЬ
	Если ЕстьЧетыреЗначимыхСимвола(Текст)  Тогда 		
		ЗаписатьРезультатыЗапроса(Текст)
	КонецЕсли;
	//_

КонецПроцедуры

//СТОРВЕРК Лабутин 20.01.2016 Задание №6046
//функция записывает результаты поискового запроса в РС СТ_СтатистикаЗапросов
//дублируется в обработке СТ_СправочникНоменклатура (правильно было бы вместо двух обработок сделать одну)
&НаСервере
Процедура ЗаписатьРезультатыЗапроса(Запрос) Экспорт
		
	//получим результаты поискового запроса
	Список = Элементы.СписокНоменклатуры;	
	Схема = Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ДатаЗапроса = ТекущаяДата();
	Пользователь = Пользователи.ТекущийПользователь();
	
	//создадим набор записей
	Набор = РегистрыСведений.СТ_СтатистикаЗапросов.СоздатьНаборЗаписей();
	Набор.Отбор.Период.Установить(ДатаЗапроса);
	Набор.Отбор.Запрос.Установить(Запрос);
	Набор.Отбор.Пользователь.Установить(Пользователь);
	
	Если Результат.Количество() > 50 Тогда  //слишком много результатов
		СтатусЗапроса = Перечисления.СТ_СтатусыЗапросов.D;
		
		Запись = Набор.Добавить();
		Запись.Период = ДатаЗапроса;
		Запись.Пользователь = Пользователь;
		Запись.НомерСтрокиРезультата = 1;
		Запись.Статус = СтатусЗапроса;
		Запись.Запрос = Запрос;
		Набор.Записать();
		
	ИначеЕсли Результат.Количество() = 0 Тогда   //ничего не найдено
		СтатусЗапроса = Перечисления.СТ_СтатусыЗапросов.C;
		
		Запись = Набор.Добавить();
		Запись.Период = ДатаЗапроса;
		Запись.Пользователь = Пользователь;
		Запись.НомерСтрокиРезультата = 1;
		Запись.Статус = СтатусЗапроса;
		Запись.Запрос = Запрос;
		Набор.Записать();
		
	Иначе   //обработаем кажду строку результата
		ТекНомерСтроки = 1;
		Для каждого СтрокаРезультата Из Результат Цикл
			Запись = Набор.Добавить();
			Запись.Период = ДатаЗапроса;
			Запись.Пользователь = Пользователь;
			Запись.НомерСтрокиРезультата = ТекНомерСтроки;
			
			Запись.Запрос = Запрос; 
			Запись.Производитель = СтрокаРезультата.Ссылка.Производитель;
			Запись.Артикул = СтрокаРезультата.Ссылка.Артикул;
			Запись.ГруппаТМЦ = СтрокаРезультата.Ссылка.Родитель;
			Запись.Остаток = СтрокаРезультата.СвободныйОстаток;
			Запись.Статус = ?(Запись.Остаток > 0, Перечисления.СТ_СтатусыЗапросов.A, Перечисления.СТ_СтатусыЗапросов.B);
			
			ТекНомерСтроки = ТекНомерСтроки + 1;
			
		КонецЦикла; 				   
		Набор.Записать();
		
		
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьЧетыреЗначимыхСимвола(Текст)
	КоличествоЗначимых = 0;
	Если СтрДлина(Текст)>=4 Тогда
		Для Инд = 1 По СтрДлина(Текст) Цикл
			Если ЭтоЗначимыйСимвол(Сред(Текст,Инд,1)) Тогда
				КоличествоЗначимых = КоличествоЗначимых + 1;
			КонецЕсли;
			Если КоличествоЗначимых = 4 Тогда 
				Возврат Истина
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция ЭтоЗначимыйСимвол(Строка)
	Возврат ?(Найти("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZАБВГДЕЁЖЗИЙКЛМНОПРОСТУФХЦЧШЩЫЪЬЭЮЯ", Врег(Строка))>0,Истина, Ложь);
КонецФункции
//_  Задание №6046

&НаСервереБезКонтекста
Функция СТ_СтрокаПоискаОкончаниеВводаТекстаНаСервере(СтрокаПоиска)
	// Вставить содержимое обработчика.
	Возврат СТ_Общий.ПоискНоменклатуры(СтрокаПоиска);	
КонецФункции
// Конец СтандартныеПодсистемы.Печать
 
&НаСервереБезКонтекста
Функция ПоулчитьСкидку(Документ,вхПартнер=неопределено)
	Если вхПартнер = Неопределено тогда
		Партнер = Документ.Партнер;
	Иначе
		Партнер = вхПартнер;
	КонецЕсли;
	Результ = 1;
	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыДействияСкидок.Действует);
	Запрос.УстановитьПараметр("Партнер",Партнер);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ДСкид.СкидкаНаценка.Наименование, ""0"") КАК Скидка,
	               |	ДСкид.Источник.Партнер КАК Партнер
	               |ИЗ
	               |	Справочник.Партнеры КАК партнеры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействиеСкидокНаценок.СрезПоследних(, ) КАК ДСкид
	               |		ПО (ДСкид.Статус = &Статус)
	               |			И (ДСкид.Источник.Партнер = партнеры.Ссылка)
	               |			И (ДСкид.Источник.ПометкаУдаления = ЛОЖЬ)
	               |ГДЕ
	               |	партнеры.Ссылка = &Партнер
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Скидка УБЫВ";

	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() Тогда
		Результ = (100-Число(Рез.Скидка))/100;
	КонецЕсли;
	Если 1 = 2 Тогда Партнер = Справочники.Партнеры.ПустаяСсылка(); КонецЕсли;
	//Для Каждого Стр из Партнер.ДополнительныеРеквизиты Цикл
	//	Если Стр.Свойство.Заголовок = "Скидка" Тогда
	//		Скидос = Число(СтрЗаменить(СтрЗаменить(Стр.Значение," ",""),"%",""));
	//		Результ = (100-Скидос)/100;
	//	КонецЕсли;
	//КонецЦикла;
	
	
	Возврат Результ;
КонецФункции

&НаКлиенте
Процедура СписокНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	КолВо = 1;
	Если ВвестиЧисло(КолВо,"Введите количество") Тогда
		Для Каждого ЭлСтр из ЭтаФорма.Элементы.СписокНоменклатуры.ВыделенныеСтроки Цикл
			ТекДанн = ЭтаФорма.Элементы.СписокНоменклатуры.ДанныеСтроки(ЭлСтр);
			Сообщить(ЭтаФорма.ВладелецФормы.ДобавитьИзВне(ТекДанн.Ссылка,КолВо,ТекДанн.Скидка));
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточку(Команда)
	ОткрытьНоменклатуру(неопределено);
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьНоменклатуру(Команда)
	// Вставить содержимое обработчика.
	Номен = этаформа.Элементы.СписокНоменклатуры.ТекущиеДанные.Ссылка;
	Параметр = Новый Структура("Ключ",Номен);
	ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта",Параметр,ЭтаФорма);
КонецПроцедуры


