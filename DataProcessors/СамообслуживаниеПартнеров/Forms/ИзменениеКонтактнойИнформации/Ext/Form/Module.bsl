
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПартнерыИКонтрагентыВызовСервера.ДанныеАвторизовавшегосяВнешнегоПользователя());
	
	Если Партнер = Неопределено ИЛИ Партнер.Пустая() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартнерыКонтактнаяИнформация.НомерСтроки           КАК НомерСтроки,
	|	ПартнерыКонтактнаяИнформация.Тип                   КАК Тип,
	|	ПартнерыКонтактнаяИнформация.Вид                   КАК Вид,
	|	ПартнерыКонтактнаяИнформация.Представление         КАК Представление,
	|	ПартнерыКонтактнаяИнформация.ЗначенияПолей         КАК ЗначенияПолей,
	|	ПартнерыКонтактнаяИнформация.Страна                КАК Страна,
	|	ПартнерыКонтактнаяИнформация.Регион                КАК Регион,
	|	ПартнерыКонтактнаяИнформация.Город                 КАК Город,
	|	ПартнерыКонтактнаяИнформация.АдресЭП               КАК АдресЭП,
	|	ПартнерыКонтактнаяИнформация.ДоменноеИмяСервера    КАК ДоменноеИмяСервера,
	|	ПартнерыКонтактнаяИнформация.НомерТелефона         КАК НомерТелефона,
	|	ПартнерыКонтактнаяИнформация.НомерТелефонаБезКодов КАК НомерТелефонаБезКодов
	|ИЗ
	|	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
	|ГДЕ
	|	ПартнерыКонтактнаяИнформация.Ссылка = &Партнер
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Партнер",Партнер);
	
	КонтактнаяИнформация.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//Обработчик механизма "Контактная информация"
	Ссылка = Партнер;
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, ЭтотОбъект);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
		ПартнерыИКонтрагенты.ЗаполнитьДанныеКонтрагентаПартнера(ЭтотОбъект, Партнер, Ложь);
		ПартнерыИКонтрагенты.ПриСозданииНаСервере_КонтактнаяИнформацияКонтрагентаПартнера(ЭтотОбъект);
	Иначе
		Элементы.ГруппаЮридическийАдресКонтрагентаПредставление.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат)
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура ЮридическийАдресКонтрагентаПриИзменении(Элемент)
	
	ПартнерыИКонтрагентыКлиент.ЮридическийАдресКонтрагентаПриИзменении(Элемент, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮридическийАдресКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПартнерыИКонтрагентыКлиент.ЮридическийАдресКонтрагентаНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮридическийАдресКонтрагентаОчистка(Элемент, СтандартнаяОбработка)
	
	ПартнерыИКонтрагентыКлиент.ЮридическийАдресКонтрагентаОчистка(ЭтотОбъект, Элементы, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮридическийАдресКонтрагентаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПартнерыИКонтрагентыКлиент.ЮридическийАдресКонтрагентаОбработкаВыбора(ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	ЗаписатьКонтактнуюИнформациюПартнера();
	Оповестить("Запись_Партнеры", Новый Структура("Партнер",Партнер));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьКонтактнуюИнформациюПартнера();
	Оповестить("Запись_Партнеры", Новый Структура("Партнер",Партнер));
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СформироватьСтруктуруПартнера()
	
	СтруктрураПартнера = Новый Структура;
	СтруктрураПартнера.Вставить("Ссылка",Партнер);
	СтруктрураПартнера.Вставить("КонтактнаяИнформация",КонтактнаяИнформация.Выгрузить());
	
	Возврат СтруктрураПартнера;
	
КонецФункции

&НаСервере
Процедура ЗаписатьКонтактнуюИнформациюПартнера()
	
	СтруктураПартнера =  СформироватьСтруктуруПартнера();
	
	Отказ = Ложь;
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма,СтруктураПартнера, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		СамообслуживаниеСервер.ЗаписатьКонтактнуюИнформациюПартнера(Партнер,СтруктураПартнера.КонтактнаяИнформация);
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") И ЗначениеЗаполнено(КонтрагентПартнера) Тогда
			КонтрагентОбъект = КонтрагентПартнера.ПолучитьОбъект();
			ПартнерыИКонтрагенты.ЗаполнитьКонтактнуюИнформациюКонтрагентаПартнера(КонтрагентОбъект, ЭтотОбъект, КонтактнаяИнформация);
			КонтрагентОбъект.Записать();
		КонецЕсли;
		
		Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
