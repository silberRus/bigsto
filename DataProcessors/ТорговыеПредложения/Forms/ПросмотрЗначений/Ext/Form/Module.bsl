
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ИдентификаторКатегории", ИдентификаторКатегории);
	Параметры.Свойство("ИдентификаторРеквизитаКатегории", ИдентификаторРеквизита);
	Параметры.Свойство("Категория", Категория);
	Параметры.Свойство("ПредставлениеРеквизитаКатегории", Свойство);
	Параметры.Свойство("ТипРеквизитаРубрикатора", ТипРеквизитаРубрикатора);
	
	Если ТипРеквизитаРубрикатора = "Список" Тогда
		КлючСохраненияПоложенияОкна = "Список";
		ЗагрузитьЗначенияРеквизитаРубрикатора(Отказ);
	Иначе
		КлючСохраненияПоложенияОкна = "Значение";
		Элементы.Список.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьЗначенияРеквизитаРубрикатора(Отказ)
	
	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("ИдентификаторКатегории", ИдентификаторКатегории);
	ПараметрыКоманды.Вставить("ИдентификаторХарактеристики", ИдентификаторРеквизита);
	
	Результат = БизнесСетьКлиентСервер.ОписаниеРезультатаКомандыСервиса();
	ТорговыеПредложения.ВыполнитьКомандуРубрикатора("ПолучитьЗначенияХарактеристики", ПараметрыКоманды, Результат, Отказ);
	Если Отказ ИЛИ Результат.КодСостояния <> 200 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ЗначенияРубрикатора Из Результат.Данные Цикл
		НоваяСтрока = Список.Добавить();
		НоваяСтрока.Значение = ЗначенияРубрикатора.value;
	КонецЦикла;
	
	Список.Сортировать("Значение");
	
КонецПроцедуры

#КонецОбласти
