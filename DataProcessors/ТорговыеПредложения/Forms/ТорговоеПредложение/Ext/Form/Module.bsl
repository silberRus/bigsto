
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УникальныйИдентификаторКорзины = Параметры.УникальныйИдентификаторКорзины;
	Параметры.Свойство("ПредложениеИдентификатор", ПредложениеИдентификатор);
	Параметры.Свойство("Номенклатура",   ИсточникНоменклатура);
	Параметры.Свойство("Характеристика", ИсточникХарактеристика);
	Параметры.Свойство("Валюта",         Валюта);
	ПрочитатьТорговоеПредложение();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КарточкаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если Элемент.ТекущаяОбласть.Имя = "Поставщик_Поставщик" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьПрофильПоставщика();
	ИначеЕсли Элемент.ТекущаяОбласть.Имя = "Шапка_ГруппаТоваров" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФормуПоиска();
	ИначеЕсли Элемент.ТекущаяОбласть.Имя = "Поставщик_КонтрагентСайт" Тогда
		Если ЗначениеЗаполнено(КонтрагентСайт) Тогда
			#Если ВебКлиент Тогда
				ДополнительныеПараметры = Новый Структура("АдресСайта", КонтрагентСайт);
				ЗавершитьПодключениеРасширенияРаботыСФайлами = Новый ОписаниеОповещения("ЗавершитьПодключениеРасширенияРаботыСФайлами", ЭтотОбъект,
					ДополнительныеПараметры);
				НачатьПодключениеРасширенияРаботыСФайлами(ЗавершитьПодключениеРасширенияРаботыСФайлами);
			#Иначе
				ЗапуститьПриложение(КонтрагентСайт);
			#КонецЕсли
		КонецЕсли;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьВКорзину(Команда)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("УникальныйИдентификаторКорзины", УникальныйИдентификаторКорзины);
	ПараметрыОповещения.Вставить("ПредложениеИдентификатор", ПредложениеИдентификатор);
	ПараметрыОповещения.Вставить("ПоставщикИдентификатор", ПоставщикИдентификатор);
	Если ЗначениеЗаполнено(ИсточникНоменклатура) Тогда
		ПараметрыОповещения.Вставить("Номенклатура", ИсточникНоменклатура);
	КонецЕсли;
	Если ЗначениеЗаполнено(ИсточникХарактеристика) Тогда
		ПараметрыОповещения.Вставить("Характеристика", ИсточникХарактеристика);
	КонецЕсли;
	Оповестить("ТорговыеПредложения_ИзменитьКоличествоВКорзине", ПараметрыОповещения);
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьТорговоеПредложение()
	
	Отказ = Ложь;
	ПараметрыЗапроса = Новый Структура("Характеристики");
	Результат = ТорговыеПредложения.ПрочитатьТорговоеПредложение(ПредложениеИдентификатор, Валюта,
		ПараметрыЗапроса, Отказ);
	
	Если Отказ ИЛИ Результат = Неопределено ИЛИ Результат.КодСостояния <> 200 Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка получения карточки торгового предложения в сервисе 1С:Бизнес-сеть.'");
	КонецЕсли;
	
	ТорговоеПредложение = Результат.Данные;
	
	Наименование = ТорговоеПредложение.name;
	Описание = ТорговоеПредложение.description;
	
	Если Не ТорговоеПредложение.Свойство("priceConverted")
		ИЛИ Не ЗначениеЗаполнено(ТорговоеПредложение.priceConverted) Тогда
		Цена = 0;// По запросу.
	Иначе
		Цена = ТорговоеПредложение.priceConverted / 100; // Данные в сервисе хранятся в копейках.
	КонецЕсли;

	//Цена = ТорговоеПредложение.price/100; // Данные в сервисе хранятся в копейках.
	
	ТорговоеПредложение.Свойство("feature", Характеристика);
	ТорговоеПредложение.Свойство("categoryID", ИдентификаторКатегории);
	
	Если ТорговоеПредложение.Свойство("vendor") 
		И Не ТорговоеПредложение.campaign = Неопределено Тогда
		ТорговоеПредложение.vendor.Свойство("inn", КонтрагентИНН);
		ТорговоеПредложение.vendor.Свойство("kpp", КонтрагентКПП);
		Если КонтрагентКПП = "0" Тогда
			КонтрагентКПП = "";
		КонецЕсли;
		ТорговоеПредложение.vendor.Свойство("title", Поставщик);
		ПоставщикИдентификатор = КонтрагентИНН + ?(ЗначениеЗаполнено(КонтрагентКПП), "_" + КонтрагентКПП, "");
	КонецЕсли;
	
	Заголовок = СтрШаблон(НСтр("ru = '%1, %2 (Торговое предложение)'"),
		Наименование,
		Поставщик);
	
	Если ТорговоеПредложение.Свойство("campaign")
		И Не ТорговоеПредложение.campaign = Неопределено Тогда
		Если ТорговоеПредложение.campaign.Свойство("contactInfo")
			И Не ТорговоеПредложение.campaign.contactInfo = Неопределено Тогда 
			Если ТорговоеПредложение.campaign.contactInfo.Свойство("organization")
				И Не ТорговоеПредложение.campaign.contactInfo.organization = Неопределено Тогда
				ТорговоеПредложение.campaign.contactInfo.organization.Свойство("phone", КонтрагентТелефон);
				ТорговоеПредложение.campaign.contactInfo.organization.Свойство("email", КонтрагентПочта);
				ТорговоеПредложение.campaign.contactInfo.organization.Свойство("site",  КонтрагентСайт);
			КонецЕсли;
			Если ТорговоеПредложение.campaign.contactInfo.Свойство("person")
				И Не ТорговоеПредложение.campaign.contactInfo.person = Неопределено Тогда 
				ТорговоеПредложение.campaign.contactInfo.person.Свойство("name", КонтрагентКонтактноеЛицо);
				ТорговоеПредложение.campaign.contactInfo.person.Свойство("phone", КонтрагентКонтактноеЛицоТелефон);
				ТорговоеПредложение.campaign.contactInfo.person.Свойство("email", КонтрагентКонтактноеЛицоПочта);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ТорговоеПредложение.Свойство("Характеристики") Тогда
		Характеристики.Загрузить(ТорговоеПредложение.Характеристики);
	КонецЕсли;
	
	Если ТорговоеПредложение.Свойство("vendorCode")
		И Не ТорговоеПредложение.vendorCode = Неопределено Тогда
		Артикул = ТорговоеПредложение.vendorCode;
	КонецЕсли;
	
	Если ТорговоеПредложение.Свойство("barcodes")
		И Не ТорговоеПредложение.barcodes = Неопределено Тогда
		Для Каждого ШтрихКод Из ТорговоеПредложение.barcodes Цикл
			ШтрихКоды.Добавить(ШтрихКод);
		КонецЦикла;
	КонецЕсли;
	
	ТорговоеПредложение.Свойство("deliveryTime", Поставка);
	ТорговоеПредложение.Свойство("unit", ЕдиницаИзмерения);
	
	ЗначениеНДС = "";
	ТорговоеПредложение.Свойство("nds", ЗначениеНДС);
	
	СтавкаНДС = Неопределено;
	ТорговыеПредложенияПереопределяемый.ПолучитьЗначениеСтавкиНДС(ЗначениеНДС, СтавкаНДС);
	
	ЦенаВключаютНДС = Истина;
	ТорговоеПредложение.campaign.Свойство("saleWithNds", ЦенаВключаютНДС);
	Если ПустаяСтрока(ЗначениеНДС) ИЛИ ЗначениеНДС = "БезНДС" Тогда
		ИнформацияНДС = Строка(СтавкаНДС);
	Иначе
		ИнформацияНДС = СтрШаблон("%1, %2", Строка(СтавкаНДС),
			?(ЦенаВключаютНДС, НСтр("ru = 'входит в стоимость'"), НСтр("ru = 'не входит в стоимость'")));
	КонецЕсли;
	
	// Способ доставки.
	СпособДоставки = "";
	Если ТорговоеПредложение.Свойство("pickup") И ТорговоеПредложение.pickup = Истина Тогда
		СпособДоставки = НСтр("ru = 'Самовывоз'");
	КонецЕсли;
	Если ТорговоеПредложение.Свойство("delivery") И ТорговоеПредложение.delivery = Истина Тогда
		Если СпособДоставки = "" Тогда
			СпособДоставки = НСтр("ru = 'Доставка'");
		Иначе
			СпособДоставки = СтрШаблон(НСтр("ru = '%1, доставка'"), СпособДоставки);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Цена) Тогда
		
		ЦенаСтрокой = СтрШаблон("%1 %2", Цена, Валюта);
		
		// Установка цены публикации, если отличается валюта публикации от валюты запроса.
		ВалютаПубликации = Справочники.Валюты.НайтиПоКоду(ТорговоеПредложение.currency);
		Если Не ЗначениеЗаполнено(ВалютаПубликации) Тогда
			ВалютаСервиса = ТорговыеПредложения.ПолучитьВалютуПоКоду(ТорговоеПредложение.currency);
			Если ЗначениеЗаполнено(ВалютаСервиса) Тогда
				ВалютаПубликации = ВалютаСервиса.name;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВалютаПубликации) И ВалютаПубликации <> Валюта Тогда
			ЦенаПубликацииСтрокой = СтрШаблон("%1 %2", ТорговоеПредложение.price / 100, ВалютаПубликации);
		КонецЕсли;
		
	КонецЕсли;
	
	// Получение списка групп номенклатуры.
	Если Не ПустаяСтрока(ИдентификаторКатегории) Тогда
		
		ПараметрыКоманды = Новый Структура;
		ПараметрыКоманды.Вставить("ИдентификаторыКатегории", "[" + ИдентификаторКатегории + "]");
		Результат = БизнесСетьКлиентСервер.ОписаниеРезультатаКомандыСервиса();
		ТорговыеПредложения.ВыполнитьКомандуРубрикатора("ПолучитьЦепочкуКатегорийДоКорневой", ПараметрыКоманды, Результат, Отказ);
		
		Если Отказ ИЛИ Результат = Неопределено ИЛИ Результат.КодСостояния <> 200 Тогда
			Возврат;
		КонецЕсли;
		
		Индекс = 0;
		Для Каждого Значение Из Результат.Данные[0] Цикл
			ГруппаТоваров = Значение.title + ?(ПустаяСтрока(ГруппаТоваров), "", " \ ") + ГруппаТоваров;
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьМакет();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМакет()
	
	Макет = Обработки.ТорговыеПредложения.ПолучитьМакет("ПФ_MXL_КарточкаТорговогоПредложения");
	
	// Область Шапка.
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьЗначенияСвойств(Шапка.Параметры, ЭтотОбъект);
	ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, Шапка, "Шапка");
	
	// Область Цена.
	ОбластьЦена = Макет.ПолучитьОбласть("Цена|Лево");
	ЗаполнитьЗначенияСвойств(ОбластьЦена.Параметры, ЭтотОбъект);
	ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, ОбластьЦена, "Цена");
	
	// Область ЦенаПубликации.
	Если ЗначениеЗаполнено(ЦенаПубликацииСтрокой) Тогда
		ОбластьЦенаПубликации = Макет.ПолучитьОбласть("ЦенаПубликации|Лево");
		ЗаполнитьЗначенияСвойств(ОбластьЦенаПубликации.Параметры, ЭтотОбъект);
		ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, ОбластьЦенаПубликации, "ЦенаПубликации");
	КонецЕсли;
	
	// Область Условия.
	ОбластьУсловия = Макет.ПолучитьОбласть("Условия|Лево");
	ЗаполнитьЗначенияСвойств(ОбластьУсловия.Параметры, ЭтотОбъект);
	ОбластьУсловия.Параметры.Поставка = ?(Поставка = "0", НСтр("ru = 'В наличии'"), Поставка + " " + НСтр("ru = 'дн.'")); // Дней.
	ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, ОбластьУсловия, "Условия");
	
	// Область Описание.
	Если ЗначениеЗаполнено(Описание) Тогда
		ОбластьОписание = Макет.ПолучитьОбласть("Описание|Лево");
		ЗаполнитьЗначенияСвойств(ОбластьОписание.Параметры, ЭтотОбъект);
		ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, ОбластьОписание, "Описание");
	КонецЕсли;
	
	// Область Поставщик (правая колонка).
	ОбластьПраво = Макет.ПолучитьОбласть("Поставщик|Лево");
	ЗаполнитьЗначенияСвойств(ОбластьПраво.Параметры, ЭтотОбъект);
	ОбластьВставки = Карточка.Область(Шапка.ВысотаТаблицы + 1, ОбластьЦена.ШиринаТаблицы + 1,
		Шапка.ВысотаТаблицы + ОбластьПраво.ВысотаТаблицы + 1, ОбластьЦена.ШиринаТаблицы + ОбластьПраво.ШиринаТаблицы + 1);
	ЭлектронноеВзаимодействиеСлужебный.ВставитьОбластьВТабличныйДокумент(Карточка, ОбластьПраво, "Поставщик",, ОбластьВставки);
	
	// Область Свойства.
	Если Характеристики.Количество() Тогда
		ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка,
			Макет.ПолучитьОбласть("СвойстваШапка"), "СвойстваШапка");
		Для каждого Свойство Из Характеристики Цикл
			СвойстваСтрока = Макет.ПолучитьОбласть("СвойстваСтрока");
			ЗаполнитьЗначенияСвойств(СвойстваСтрока.Параметры, Свойство);
			ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, СвойстваСтрока, "СвойстваСтрока");
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПрофильПоставщика()
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИНН", КонтрагентИНН);
	ПараметрыОткрытия.Вставить("КПП", КонтрагентКПП);
	БизнесСетьКлиент.ОткрытьПрофильУчастника(ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПоиска()
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИдентификаторКатегории", ИдентификаторКатегории);
	ПараметрыОткрытия.Вставить("ОтборНаименование", Наименование);
	ПараметрыОткрытия.Вставить("Валюта", Валюта);
	ОткрытьФорму("Обработка.ТорговыеПредложения.Форма.ПоискПредложенийПоСтроке", ПараметрыОткрытия);
	
	// Дополнительно оповестим формы, если форма поиска ранее была открыта.
	Оповестить("ТорговыеПредложения_Обновить", ПараметрыОткрытия, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПодключениеРасширенияРаботыСФайлами(Результат, ДополнительныеПараметры) Экспорт
		
	Если Результат = Ложь Тогда
		ЗавершитьУстановку = Новый ОписаниеОповещения("ЗавершитьУстановкуРасширения", ЭтотОбъект, ДополнительныеПараметры);
		НачатьУстановкуРасширенияРаботыСФайлами(ЗавершитьУстановку);
	Иначе
		ЗавершитьУстановкуРасширения(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьУстановкуРасширения(ДополнительныеПараметры) Экспорт
	
	АдресСайта = ДополнительныеПараметры.АдресСайта;
	ЗапускПриложенияЗавершить = Новый ОписаниеОповещения("ЗапускПриложенияЗавершить", ЭтотОбъект);
	НачатьЗапускПриложения(ЗапускПриложенияЗавершить, АдресСайта);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапускПриложенияЗавершить(Результат, ДополнительныеПараметры) Экспорт
	
	// Действий не требуется.
	Возврат;
	
КонецПроцедуры

#КонецОбласти