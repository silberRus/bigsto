
///


&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	Попытка
		Номенклатура = Параметры.Номенклатура;
	Исключение
	КонецПопыткИ;
	
	Аналоги.Параметры.УстановитьЗначениеПараметра("Номенклатура",Номенклатура);	
	АналогУНоменклатуры.Параметры.УстановитьЗначениеПараметра("Номенклатура",Номенклатура);	
КонецПроцедуры

///
&НаСервереБезКонтекста
Функция ПлучитьМассивРеквизитов()
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьМассивАналогов(вхСтрока,вхРазделитель)
	Разделитель = вхРазделитель;//"#$#";
	RegExp = Новый COMОбъект("VBScript.RegExp");    // создаем объект для работы с регулярными выражениями
	
	//Параметры:
	RegExp.MultiLine = Ложь;  // истина — текст многострочный, ложь — одна строка
	RegExp.Global = Истина;   // истина — поиск по всей строке, ложь — до первого совпадения
	RegExp.IgnoreCase = Ложь; // истина — игнорировать регистр строки при поиске
	
	//Разбор строки вида 1,СЛОВО,(1+2); Маска для разделителя ',' [^\,]*"
	RegExp.Pattern = "[^\" + Разделитель + "]+";
	Matches = RegExp.Execute (вхСтрока);
	                      
	Массив = Новый Массив;
	
	Для Сч = 0 По Matches.Count - 1 Цикл
		Если ЗначениеЗаполнено(СокрЛП(Matches.Item(Сч).Value)) Тогда
			Массив.Добавить(Matches.Item(Сч).Value);
		КонецЕсли;                                      
	КонецЦикла;
	
	RegExp = Неопределено;
	
	Возврат Массив;	
КонецФункции

&НаСервереБезКонтекста
Функция УдалитьАналогИзСтроки(вхНоменклатура,вхРазделитель)
	Разделитель = вхРазделитель;//"#$#";
	
	
КонецФункции


//////**********************
//////  Добовляем аналог
//////**********************


&НаКлиенте
Процедура ДобавитьАналог(Команда)
	вАналог = неопределено;                 
	//Форма = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора");
	////Сообщить("Вы ищите: "+База.ПолучитьЗначениеПоля("TOBAP"),);
	//вАналог = Форма.ОткрытьМодально();
	//Если вАналог <> неопределено Тогда
	//	Если ЗначениеЗаполнено(вАналог) Тогда
	//		ДобавитьУдалитьАналогНаСервере(Номенклатура,вАналог,Истина);
	//	КонецЕсли;
	//КонецЕсли;
	
	вАналог = "";
	Если ВвестиСтроку(вАналог,"Аналог",99,Ложь) Тогда
		Если ЗначениеЗаполнено(вАналог) Тогда
			ДобавитьУдалитьАналогНаСервере(Номенклатура,вАналог,Истина);
		КонецЕсли;
	КонецЕсли;
	Элементы.Аналоги.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьАналог(Команда)
	вАналог = неопределено;                 
	
	вАналог = Элементы.Аналоги.ТекущиеДанные.Аналог;
	Если вАналог <> неопределено Тогда
		ДобавитьУдалитьАналогНаСервере(Номенклатура,вАналог,Ложь);
	КонецЕсли;
	Элементы.Аналоги.Обновить();    	
КонецПроцедуры                      
&НаСервереБезКонтекста

Процедура ДобавитьУдалитьАналогНаСервере(Номенулатура,Аналог,Действие)
	// Вставить содержимое обработчика.
	Обр = Обработки.СТ_РедактированиеАналогов.Создать();
	Обр.ДобавитьИзменитьЗапись(Номенулатура,Аналог,Действие);
КонецПроцедуры


// Для преобразования имени файла при обращении к OpenOffice/LibreOffice
&НаКлиенте
Функция ConvertToURL(FileName)
	 ИмяФайла =  СтрЗаменить(FileName," ","%20" );
	 ИмяФайла =  СтрЗаменить(ИмяФайла,"\","/");
	 Возврат "file:/" + "/localhost/" + ИмяФайла;
КонецФункции



&НаКлиенте
Процедура ЗагрузитьАналогиИзФацла(Команда)
	
	НоменР = Этаформа.Номенклатура;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    Диалог.Заголовок = "Выберите файл-вложение";
    Диалог.ПолноеИмяФайла = ""; 
    Фильтр = "(*.*)|*.*"; 
    Диалог.Фильтр = Фильтр; 
    Диалог.МножественныйВыбор = Ложь;
   
    Если НЕ Диалог.Выбрать() Тогда
       Возврат;        
    КонецЕсли;

	ПолноеИмяФайла = Диалог.ПолноеИмяФайла;
	
	OpenOffice = Новый ComОбъект("com.sun.star.ServiceManager"); // Создаем СОМ-объект

	scr = Новый ComОбъект("MSScriptControl.ScriptControl");    
	scr.language = "javascript";
	scr.eval("MassivParametrov = new Array()");
	MassivParametrov = scr.eval("MassivParametrov");
	scr.AddObject("OpenOffice", OpenOffice);
	scr.eval("MassivParametrov[0]=OpenOffice.Bridge_GetStruct('com.sun.star.beans.PropertyValue')");
	scr.eval("MassivParametrov[0].Name='Hidden'");
	scr.eval("MassivParametrov[0].Value=true");

	Desktop = OpenOffice.CreateInstance("com.sun.star.frame.Desktop"); // Создаем Desktop
	URL = ConvertToURL(ПолноеИмяФайла); // Правильно формируем имя файла
	Doc = Desktop.LoadComponentFromURL(URL, "_blank", 0, MassivParametrov);

	Doc.lockControllers();
	Doc.addActionLock();

	Sheets = Doc.GetSheets();
	Лист = Sheets.GetByIndex(0); // Открываем первый лист по индексу

	oCell = Лист.GetCellbyPosition(0, 0);
	oCursor = Лист.createCursorByRange(oCell);
	oCursor.GotoEndOfUsedArea(Истина);
	aAddress = oCursor.RangeAddress;
	ВсегоКолонок = aAddress.EndColumn;
	ВсегоСтрок = aAddress.EndRow;

	ТекСтрока = 1;
	//ЧитамеЗаголовок
	МКолонки = Новый Массив;
	МКолонки.Добавить(Лист.GetCellbyPosition(0,0).getText().String());
	МКолонки.Добавить(Лист.GetCellbyPosition(1,0).getText().String());	
	
	СчетчУдач = 0;
	Пока ТекСтрока <= ВсегоСтрок Цикл
		Если ЗначениеЗаполнено(МКолонки[0]) Тогда
			ПолеПоиска = МКолонки[0];	
		Иначе
			ПолеПоиска = "Код";
		КонецЕсли;

		Код = Лист.GetCellbyPosition(0,ТекСтрока).getText().String();
		Анл	= Лист.GetCellbyPosition(1,ТекСтрока).getText().String();
		Состояние("Загрузка аналагов",(ТекСтрока/ВсегоСтрок)*100,""+Код+Символы.ПС+ТекСтрока+" из "+(ВсегоСтрок-1));
	    Номенклатура = ПолучитьНоменклатуру(Код,"",ПолеПоиска);
		Попытка
			Если ЗначениеЗаполнено(Номенклатура) Тогда				
				ЗагрузитьАналогиИзФацлаНаСервере(Номенклатура,Анл);
				СчетчУдач = СчетчУдач + 1;
			КонецЕсли;
		Исключение
		КонецПопытки;
		
		
		ТекСтрока = ТекСтрока + 1;
		
	КонецЦикла;
	
	Doc.close(true);
	Desktop.terminate();
	
	Сообщить("Удачно загружено "+СчетчУдач + " позиций");
	
	Этаформа.Номенклатура = НоменР;
	ЭтаФорма.Элементы.Аналоги.Обновить();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьАналогиИзФацлаНаСервере(Номенклатура,Аналоги)
	// Вставить содержимое обработчика.
	СТ_Общий.УстановитьАналоги(Номенклатура,Аналоги,истина);
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьНоменклатуру(Значение,Пр,ПолеПоиска)
	
	Если ПолеПоиска = "Код" Тогда
		Возврат Справочники.Номенклатура.НайтиПоКоду(Значение);	
	Иначе
		Возврат Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", Значение);	
	КонецЕсли; 
	
	Возврат СТ_Общий.ПолучитьНоменклатуруСервер(Значение,Пр,ПолеПоиска);
КонецФункции

