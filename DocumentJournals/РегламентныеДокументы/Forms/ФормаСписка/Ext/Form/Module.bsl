
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Список.ТекстЗапроса = ТекстЗапросаСпискаЖурналаДокументов();
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список,
		"Организация",
		Организация);
		
	Элементы.ГруппаСоздать.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.Дата.Имя);
	
	Если Параметры.Свойство("Отбор")
	 И Параметры.Отбор.Свойство("Организация") Тогда
		Если ТипЗнч(Параметры.Отбор.Организация) = Тип("Массив")
		 И Параметры.Отбор.Организация.Количество() = 1 Тогда 
			Организация = Параметры.Отбор.Организация[0];
		ИначеЕсли ТипЗнч(Параметры.Отбор.Организация) = Тип("СправочникСсылка.Организации") Тогда
			Организация = Параметры.Отбор.Организация;
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = Настройки.Получить("Организация");
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
		"Организация",
		Организация);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияОтборПриИзменении(Элемент)

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
		"Организация",
		Организация);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьРаспределениеДоходовРасходов(Команда)
	
	СтруктураОснование = Новый Структура("Организация", Организация);
	СтруктураПараметры = Новый Структура("Основание", СтруктураОснование);;
	ОткрытьФорму("Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРасчетКурсовыхРазниц(Команда)
	
	СтруктураОснование = Новый Структура("Организация", Организация);
	СтруктураПараметры = Новый Структура("Основание", СтруктураОснование);;
	ОткрытьФорму("Документ.РасчетКурсовыхРазниц.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКорректировкуНДС(Команда)
	
	СтруктураОснование = Новый Структура("Организация", Организация);
	СтруктураПараметры = Новый Структура("Основание", СтруктураОснование);;
	ОткрытьФорму("Документ.КорректировкаНалогообложенияНДСПартийТоваров.ФормаОбъекта",
		СтруктураПараметры,
		Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАмортизациюОС(Команда)
	
	Возврат; // В УТ11 обработчик пустой
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАмортизацияНМА(Команда)
	
	Возврат; // В УТ11 обработчик пустой
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАмортизацияОС2_4(Команда)
	
	Возврат; // В УТ11 обработчик пустой
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАмортизацияНМА2_4(Команда)
	
	Возврат; // В УТ11 обработчик пустой
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ТекстЗапросаСпискаЖурналаДокументов()
	
	Возврат
	"ВЫБРАТЬ
	|	РегламентныеДокументы.Ссылка КАК Ссылка,
	|	РегламентныеДокументы.Дата КАК Дата,
	|	РегламентныеДокументы.ПометкаУдаления КАК ПометкаУдаления,
	|	РегламентныеДокументы.Номер КАК Номер,
	|	РегламентныеДокументы.Проведен КАК Проведен,
	|	ЕСТЬNULL(РегламентныеДокументы.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	РегламентныеДокументы.Тип КАК Тип
	|ИЗ
	|	ЖурналДокументов.РегламентныеДокументы КАК РегламентныеДокументы
	|ГДЕ
	|	(&Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		ИЛИ РегламентныеДокументы.Организация = &Организация
	|		ИЛИ 1 В
	|			(
	|				ВЫБРАТЬ ПЕРВЫЕ 1
	|					1
	|				ИЗ
	|					Документ.РасчетСебестоимостиТоваров.Организации КАК Т
	|				ГДЕ
	|					Т.Ссылка = РегламентныеДокументы.Ссылка
	|					И Т.Организация = &Организация
	|		
	|				ОБЪЕДИНИТЬ ВСЕ
	|		
	|				ВЫБРАТЬ ПЕРВЫЕ 1
	|					1
	|				ИЗ
	|					Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Доходы КАК Т
	|				ГДЕ
	|					Т.Ссылка = РегламентныеДокументы.Ссылка
	|					И Т.Организация = &Организация
	|		
	|				ОБЪЕДИНИТЬ ВСЕ
	|		
	|				ВЫБРАТЬ ПЕРВЫЕ 1
	|					1
	|				ИЗ
	|					Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Расходы КАК Т
	|				ГДЕ
	|					Т.Ссылка = РегламентныеДокументы.Ссылка
	|					И Т.Организация = &Организация
	|		
	|				ОБЪЕДИНИТЬ ВСЕ
	|		
	|				ВЫБРАТЬ ПЕРВЫЕ 1
	|					1
	|				ИЗ
	|					Документ.КорректировкаНалогообложенияНДСПартийТоваров КАК Т
	|				ГДЕ
	|					Т.Ссылка = РегламентныеДокументы.Ссылка
	|					И Т.Организация = &Организация
	|		
	|				ОБЪЕДИНИТЬ ВСЕ
	|		
	|				ВЫБРАТЬ ПЕРВЫЕ 1
	|					1
	|				ИЗ
	|					Документ.РасчетКурсовыхРазниц КАК Т
	|				ГДЕ
	|					Т.Ссылка = РегламентныеДокументы.Ссылка
	|					И Т.Организация = &Организация
	|			)
	|	)
	|";
	
КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
