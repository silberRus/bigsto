
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СписокПодобранныхОснований = Параметры.СписокПодобранныхОснований;
	Организация     = Параметры.Организация;
	Контрагент      = Параметры.Контрагент;
	Валюта          = Параметры.Валюта;
	СчетФактура     = Параметры.СчетФактура;
	СчетФактураИсправление = Параметры.СчетФактураИсправление;
	ТипСчетаФактуры = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(СчетФактура.Метаданные());
	
	ШаблонОтбораСтрок = Новый Структура;
	ШаблонОтбораСтрок.Вставить("Корректировка");
	
	Если СписокПодобранныхОснований.Количество() > 0 Тогда
		
		ПервыйДокумент = СписокПодобранныхОснований[0].Значение;
		ШаблонОтбораСтрок.Корректировка = ТипЗнч(ПервыйДокумент) = Тип("ДокументСсылка.КорректировкаРеализации")
											ИЛИ ТипЗнч(ПервыйДокумент) = Тип("ДокументСсылка.КорректировкаПриобретения");
		УстановитьОтборСтрокТаблицы(ШаблонОтбораСтрок);
		
	Иначе
		
		Если Не ЗначениеЗаполнено(Организация) Тогда
			ШаблонОтбораСтрок.Вставить("Организация");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			ШаблонОтбораСтрок.Вставить("Контрагент");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Валюта) Тогда
			ШаблонОтбораСтрок.Вставить("Валюта");
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьТаблицуКОформлению();
	
	УстановитьИнформационнуюНадпись();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТаблицаКОформлениюВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = ТаблицаКОформлению.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаКОформлению.ТекущиеДанные;
	
	Если ТекущиеДанные.Выбран Тогда
	
		Если Элементы.ТаблицаКОформлению.ОтборСтрок = Неопределено Тогда
			
			ЗаполнитьЗначенияСвойств(ШаблонОтбораСтрок, ТекущиеДанные);
			УстановитьОтборСтрокТаблицы(ШаблонОтбораСтрок);
			
		КонецЕсли;
		
	Иначе
		
		СброситьОтбор = Истина;
		
		Для Каждого СтрокаТаблицы Из ТаблицаКОформлению Цикл
			Если СтрокаТаблицы.Выбран Тогда
				СброситьОтбор = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если СброситьОтбор Тогда
			УстановитьОтборСтрокТаблицы();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьОснования(Команда)
	
	ВыбранныеОснования = Новый СписокЗначений;
	Для Каждого СтрокаТаблицы Из ТаблицаКОформлению Цикл
		
		Если СтрокаТаблицы.Выбран Тогда
			ВыбранныеОснования.Добавить(СтрокаТаблицы.Ссылка);
			ВыбраннаяСтрока = СтрокаТаблицы;
		КонецЕсли;
		
	КонецЦикла;
	
	Закрыть(ВыбранныеОснования);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаКОформлению Цикл
		
		Если СтрокаТаблицы.Выбран Тогда
			Продолжить;
		КонецЕсли;
		
		Выбран = Истина;
		
		Если Элементы.ТаблицаКОформлению.ОтборСтрок <> Неопределено Тогда
			
			Для Каждого ТекущийОтбор Из ШаблонОтбораСтрок Цикл
				Если ТекущийОтбор.Значение <> СтрокаТаблицы[ТекущийОтбор.Ключ] Тогда
					Выбран = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		СтрокаТаблицы.Выбран = Выбран;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Исключить(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаКОформлению Цикл
		СтрокаТаблицы.Выбран = Ложь;
	КонецЦикла;
	
	УстановитьОтборСтрокТаблицы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаКОформлению.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаКОформлению.УказанВДокументе");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИнформационнуюНадпись(ОтборСтрок = Неопределено)
	
	МассивОтборов = Новый Массив;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		МассивОтборов.Добавить(Организация);
	КонецЕсли;
	Если ЗначениеЗаполнено(Контрагент) Тогда
		МассивОтборов.Добавить(Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(Валюта) Тогда
		МассивОтборов.Добавить(Валюта);
	КонецЕсли;
		
	Если ОтборСтрок <> Неопределено Тогда
		Для Каждого Отбор Из ОтборСтрок Цикл
			Если Не Отбор.Ключ = "Корректировка" Тогда
				МассивОтборов.Добавить(Отбор.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетФактураИсправление) Тогда
		МассивОтборов.Добавить(СчетФактураИсправление);
	КонецЕсли;
	
	Если МассивОтборов.Количество() = 0 Тогда
		Элементы.НадписьОтборы.Видимость = Ложь;
	Иначе
		
		Элементы.НадписьОтборы.Видимость = Истина;
		ТекстОтбора = СтрСоединить(МассивОтборов, ", ");
		НадписьОтборы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Отбор по: %1'"), ТекстОтбора);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуКОформлению()
	
	ТаблицаКОформлению.Очистить();
	
	ТекстВременныхТаблиц = 
	"ВЫБРАТЬ
	|	ВыбранныеОснования.Ссылка КАК Основание
	|ПОМЕСТИТЬ ТаблицаВыбранных
	|ИЗ
	|	&ВыбранныеОснования КАК ВыбранныеОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаДокументов.Основание,
	|	МАКСИМУМ(ТаблицаДокументов.Выбран) КАК Выбран
	|ПОМЕСТИТЬ ДокументыКОформлению
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаВыбранных.Основание КАК Основание,
	|		ИСТИНА КАК Выбран
	|	ИЗ
	|		ТаблицаВыбранных КАК ТаблицаВыбранных
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.ДокументОснование,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &СчетФактура
	|		И НЕ &ОтобразитьТолькоПодобранные
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеРегистра.Основание,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ДанныеРегистра
	|	ГДЕ
	|		НЕ &ОтобразитьТолькоПодобранные
	|		И ДанныеРегистра.ТипСчетаФактуры = &ТипСчетаФактуры
	|		//УсловиеОтбораОснований
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеРегистра.Основание,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ДанныеРегистра
	|	ГДЕ
	|		НЕ &ОтобразитьТолькоПодобранные
	|		И ДанныеРегистра.ТипСчетаФактуры = &ТипСчетаФактуры
	|		И (ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Основание) = ЗНАЧЕНИЕ(Документ.КорректировкаРеализации)
	|					ТОГДА ДанныеРегистра.Основание.ДокументОснование В (&ОснованияИсходногоСФ)
	|				КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Основание) = ЗНАЧЕНИЕ(Документ.КорректировкаПриобретения)
	|					ТОГДА ДанныеРегистра.Основание.ДокументОснование В (&ОснованияИсходногоСФ)
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|
	|	) КАК ТаблицаДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокументов.Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстУсловий = "";
	Если ЗначениеЗаполнено(Организация) Тогда
		ТекстУсловий = ТекстУсловий + "
	|	И ДанныеРегистра.Организация = &Организация";
	КонецЕсли;
	Если ЗначениеЗаполнено(Контрагент) Тогда
		ТекстУсловий = ТекстУсловий + "
	|	И ДанныеРегистра.Контрагент = &Контрагент";
	КонецЕсли;
	Если ЗначениеЗаполнено(Валюта) Тогда
		ТекстУсловий = ТекстУсловий + "
	|	И ДанныеРегистра.Валюта = &Валюта";
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстУсловий) Тогда
		ТекстВременныхТаблиц = СтрЗаменить(ТекстВременныхТаблиц, "//УсловиеОтбораОснований", ТекстУсловий);
	КонецЕсли;
	
	Если ТипСчетаФактуры = Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент") Тогда
		ТекстВременныхТаблиц = СтрЗаменить(ТекстВременныхТаблиц, "СчетФактураВыданный", "СчетФактураПолученныйНалоговыйАгент");
	КонецЕсли;
	
	ТекстОснований = "";
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.АктВыполненныхРабот) Тогда
		ТекстОснований = ТекстОснований + "
			|ОБЪЕДИНИТЬ ВСЕ" +
			ТекстЗапросаДанныхДокумента("АктВыполненныхРабот");
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровПоставщику) Тогда
		ТекстОснований = ТекстОснований + "
			|ОБЪЕДИНИТЬ ВСЕ" +
			ТекстЗапросаДанныхДокумента("ВозвратТоваровПоставщику");
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.ВыкупВозвратнойТарыКлиентом) Тогда
		ТекстОснований = ТекстОснований + "
			|ОБЪЕДИНИТЬ ВСЕ" +
			ТекстЗапросаДанныхДокумента("ВыкупВозвратнойТарыКлиентом");
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаписьКнигиПродаж) Тогда
		ТекстОснований = ТекстОснований + "
			|ОБЪЕДИНИТЬ ВСЕ" +
			ТекстЗапросаДанныхДокумента("ЗаписьКнигиПродаж");
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.КорректировкаРеализации) Тогда
		ТекстОснований = ТекстОснований + "
			|ОБЪЕДИНИТЬ ВСЕ" +
			ТекстЗапросаДанныхДокумента("КорректировкаРеализации");
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.КорректировкаПриобретения) Тогда
		ТекстОснований = ТекстОснований + "
			|ОБЪЕДИНИТЬ ВСЕ" +
			ТекстЗапросаДанныхДокумента("КорректировкаПриобретения");
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.ПриобретениеТоваровУслуг) Тогда
		ТекстОснований = ТекстОснований + "
			|ОБЪЕДИНИТЬ ВСЕ" +
			ТекстЗапросаДанныхДокумента("ПриобретениеТоваровУслуг");
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		ТекстОснований = ТекстОснований + "
			|ОБЪЕДИНИТЬ ВСЕ" +
			ТекстЗапросаДанныхДокумента("РеализацияТоваровУслуг");
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.РеализацияУслугПрочихАктивов) Тогда
		ТекстОснований = ТекстОснований + "
			|ОБЪЕДИНИТЬ ВСЕ" +
			ТекстЗапросаДанныхДокумента("РеализацияУслугПрочихАктивов");
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ОтчетКомитенту) Тогда
		ТекстОснований = ТекстОснований + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка              КАК Ссылка,
		|	ДанныеДокумента.Дата                КАК Дата,
		|	ДанныеДокумента.Номер               КАК Номер,
		|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) КАК ВидДокумента,
		|	ДанныеДокумента.Организация         КАК Организация,
		|	ДанныеДокумента.Контрагент          КАК Контрагент,
		|	ДанныеДокумента.СуммаВознаграждения КАК СуммаДокумента,
		|	ДанныеДокумента.Валюта              КАК Валюта,
		|	ЛОЖЬ                                КАК Корректировка,
		|	ДокументыКОформлению.Выбран         КАК Выбран,
		|	ДокументыКОформлению.Выбран         КАК УказанВДокументе
		|ИЗ
		|	Документ.ОтчетКомитенту КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОформлению КАК ДокументыКОформлению
		|		ПО ДанныеДокумента.Ссылка = ДокументыКОформлению.Основание";
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациями) Тогда
		ТекстОснований = ТекстОснований + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка              КАК Ссылка,
		|	ДанныеДокумента.Дата                КАК Дата,
		|	ДанныеДокумента.Номер               КАК Номер,
		|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) КАК ВидДокумента,
		|	ДанныеДокумента.Комиссионер         КАК Организация,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|			ТОГДА ДанныеДокумента.Контрагент
		|		ИНАЧЕ ДанныеДокумента.Организация
		|	КОНЕЦ                               КАК Контрагент,
		|	ДанныеДокумента.СуммаВознаграждения КАК СуммаДокумента,
		|	ДанныеДокумента.Валюта              КАК Валюта,
		|	ЛОЖЬ                                КАК Корректировка,
		|	ДокументыКОформлению.Выбран         КАК Выбран,
		|	ДокументыКОформлению.Выбран         КАК УказанВДокументе
		|ИЗ
		|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОформлению КАК ДокументыКОформлению
		|		ПО ДанныеДокумента.Ссылка = ДокументыКОформлению.Основание";
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровМеждуОрганизациями) Тогда
		ТекстОснований = ТекстОснований + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка              КАК Ссылка,
		|	ДанныеДокумента.Дата                КАК Дата,
		|	ДанныеДокумента.Номер               КАК Номер,
		|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) КАК ВидДокумента,
		|	ДанныеДокумента.Организация         КАК Организация,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|			ТОГДА ДанныеДокумента.Контрагент
		|		ИНАЧЕ ДанныеДокумента.ОрганизацияПолучатель
		|	КОНЕЦ                               КАК Контрагент,
		|	ДанныеДокумента.СуммаДокумента      КАК СуммаДокумента,
		|	ДанныеДокумента.Валюта              КАК Валюта,
		|	ЛОЖЬ                                КАК Корректировка,
		|	ДокументыКОформлению.Выбран         КАК Выбран,
		|	ДокументыКОформлению.Выбран         КАК УказанВДокументе
		|ИЗ
		|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОформлению КАК ДокументыКОформлению
		|		ПО ДанныеДокумента.Ссылка = ДокументыКОформлению.Основание";
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ПередачаТоваровМеждуОрганизациями) Тогда
		ТекстОснований = ТекстОснований + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка              КАК Ссылка,
		|	ДанныеДокумента.Дата                КАК Дата,
		|	ДанныеДокумента.Номер               КАК Номер,
		|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) КАК ВидДокумента,
		|	ДанныеДокумента.Организация         КАК Организация,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|			ТОГДА ДанныеДокумента.Контрагент
		|		ИНАЧЕ ДанныеДокумента.ОрганизацияПолучатель
		|	КОНЕЦ                               КАК Контрагент,
		|	ДанныеДокумента.СуммаДокумента      КАК СуммаДокумента,
		|	ДанныеДокумента.Валюта              КАК Валюта,
		|	ЛОЖЬ                                КАК Корректировка,
		|	ДокументыКОформлению.Выбран         КАК Выбран,
		|	ДокументыКОформлению.Выбран         КАК УказанВДокументе
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОформлению КАК ДокументыКОформлению
		|		ПО ДанныеДокумента.Ссылка = ДокументыКОформлению.Основание";
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстОснований) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОснований = "ВЫБРАТЬ РАЗРЕШЕННЫЕ" + Сред(ТекстОснований, 24);
	
	ВыбранныеОснования = ТаблицаКОформлению.Выгрузить(, "Ссылка");
	ВыбранныеОснования.Очистить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицуИзМассива(
		ВыбранныеОснования, 
		СписокПодобранныхОснований.ВыгрузитьЗначения(),
		"Ссылка");
		
	ОснованияИсходногоСФ = Новый Массив;
	Если ЗначениеЗаполнено(СчетФактураИсправление) Тогда
		ОснованияИсходногоСФ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СчетФактураИсправление, "ДокументыОснования");
		ОснованияИсходногоСФ = ОснованияИсходногоСФ.Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстВременныхТаблиц + ТекстОснований);
	Запрос.УстановитьПараметр("ВыбранныеОснования", ВыбранныеОснования);
	Запрос.УстановитьПараметр("ТипСчетаФактуры", ТипСчетаФактуры);
	Запрос.УстановитьПараметр("СчетФактура", СчетФактура);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("ОтобразитьТолькоПодобранные", ЗначениеЗаполнено(СчетФактураИсправление));
	Запрос.УстановитьПараметр("ОснованияИсходногоСФ", ОснованияИсходногоСФ);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаКОформлению.Загрузить(РезультатЗапроса.Выгрузить());
	
	ТаблицаКОформлению.Сортировать("Дата");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСтрокТаблицы(ОтборСтрок = Неопределено)
	
	Если ОтборСтрок <> Неопределено Тогда
		СтруктураОтбора = Новый ФиксированнаяСтруктура(ОтборСтрок);
		Элементы.ТаблицаКОформлению.ОтборСтрок = СтруктураОтбора;
	Иначе
		Элементы.ТаблицаКОформлению.ОтборСтрок = Неопределено;
	КонецЕсли;
	
	УстановитьИнформационнуюНадпись(ОтборСтрок);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекстЗапросаДанныхДокумента(ИмяОбъекта)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка              КАК Ссылка,
	|	ДанныеДокумента.Дата                КАК Дата,
	|	ДанныеДокумента.Номер               КАК Номер,
	|	ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) КАК ВидДокумента,
	|	ДанныеДокумента.Организация         КАК Организация,
	|	ДанныеДокумента.Контрагент          КАК Контрагент,
	|	ДанныеДокумента.СуммаДокумента      КАК СуммаДокумента,
	|	ДанныеДокумента.Валюта              КАК Валюта,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) = ТИП(Документ.КорректировкаРеализации) ТОГДА
	|			ИСТИНА
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) = ТИП(Документ.КорректировкаПриобретения) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                               КАК Корректировка,
	|	ДокументыКОформлению.Выбран         КАК Выбран,
	|	ДокументыКОформлению.Выбран         КАК УказанВДокументе
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОформлению КАК ДокументыКОформлению
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОформлению.Основание";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РеализацияТоваровУслуг", ИмяОбъекта);
	
	Если ИмяОбъекта = "ПриобретениеТоваровУслуг" ИЛИ ИмяОбъекта = "КорректировкаПриобретения" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокумента.Дата", "ДанныеДокумента.ДатаВходящегоДокумента");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокумента.Номер", "ДанныеДокумента.НомерВходящегоДокумента");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
