#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПриСоздании();
	ЗаполнитьРеквизитыФормыПриСоздании();
	
	Если ЗначениеЗаполнено(ХозяйственнаяОперация)
		И ЗакупкиСервер.ХозяйственныеОперацииРаздельнойЗакупкиБезОтборов().Найти(ХозяйственнаяОперация) <> Неопределено Тогда
		Элементы.НадписьИнфо.Заголовок = НСтр("ru = 'По выбранным заказам уже оформлены накладные. Необходимо скорректировать имеющиеся накладные с учетом поступления командой ""Перезаполнить выбранную"" или оформить новую накладную на оставшиеся неоформленными товары командой ""Оформить новую"".'");
		Элементы.ТоварыНакладной.Заголовок = НСтр("ru = 'Расхождения между накладными и поступлениями'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапки

&НаКлиенте
Процедура НадписьЗаголовокЗаказыНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму(
		"ОбщаяФорма.ПросмотрСпискаДокументов",
		Новый Структура("СписокДокументов, Заголовок",
			СписокЗаказов,
			НСтр("ru='Распоряжения (%КоличествоДокументов%)'")
		),
		ЭтаФорма,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура СтандартныйПериодПриИзменении(Элемент)
	СтандартныйПериодПриИзмененииСервер();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОформленныеНакладные

&НаКлиенте
Процедура ОформленныеНакладныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеНакладная = Элементы.ОформленныеНакладные.ТекущиеДанные;
	ПоказатьЗначение(, ДанныеНакладная.Накладная);
	
КонецПроцедуры

&НаКлиенте
Процедура ОформленныеНакладныеПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ЗаполнитьТаблицуТоварыНакладнойОтложенно", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Перезаполнить(Команда)
	
	ТекущиеДанные =Элементы.ОформленныеНакладные.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ПерезаполняемаяНакладная = ТекущиеДанные.Накладная;
		ЗначенияЗаполнения = Новый Структура("ЗаполнятьПоОрдеру, МассивЗаказов", Истина, СписокЗаказов.ВыгрузитьЗначения());
		ПараметрыФормы = Новый Структура("Ключ, ЗначенияЗаполнения", ПерезаполняемаяНакладная, ЗначенияЗаполнения);
		
		ОткрытьФорму(НастройкиФормы.ИмяФормыНакладной, ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьНовую(Команда)
	
	ТекущиеДанные =Элементы.ОформленныеНакладные.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ТоварыНакладной.Итог("Увеличить") <= 0 Тогда
			
			ТекстПредупреждения = НСтр("ru = 'Нет положительных расхождений. Оформление новой накладной не предусмотрено.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НастройкиФормы.ДанныеЗаполнения) Тогда
			МассивЗаказов = СписокЗаказов.ВыгрузитьЗначения();
			
			// Создание накладной по выделенным заказам.
			ДанныеЗаполнения = Новый Структура("МассивЗаказов, ЗаполнятьПоОрдеру, РеквизитыШапки",
				МассивЗаказов, Истина, Параметры.РеквизитыШапки);
			
			// Специфика передачи параметров для заполнения реализации товаров.
			ВариантОформленияПродажи = ПредопределенноеЗначение("Перечисление.ВариантыОформленияПродажи.РеализацияТоваровУслуг");
			ДанныеЗаполнения.Вставить("ВариантОформленияПродажи", ВариантОформленияПродажи);
			ДанныеЗаполнения.Вставить("ЗаполнятьПоОстаткам",      Истина);
			ДанныеЗаполнения.Вставить("ДокументОснование",        МассивЗаказов);
			ДанныеЗаполнения.Вставить("СкладОтгрузки",            Склад);
			ДанныеЗаполнения.Вставить("СкладПоступления",         Склад);
			ДанныеЗаполнения.Вставить("ПараметрыОформления",      Новый Структура("ПоЗаказам, ПоОрдерам", Ложь, Истина));
		Иначе
			ДанныеЗаполнения = НастройкиФормы.ДанныеЗаполнения;
		КонецЕсли;
		ОткрытьФорму(НастройкиФормы.ИмяФормыНакладной, Новый Структура("Основание", ДанныеЗаполнения));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПриСоздании()
	
	НастройкиФормы = НакладныеСервер.НастройкиФормыПереоформленияНакладных();
	ЗаполнитьЗначенияСвойств(НастройкиФормы, Параметры.НастройкиФормы);
	
	Если НастройкиФормы.Заголовок <> Неопределено Тогда
		Автозаголовок = Ложь;
		Заголовок = НастройкиФормы.Заголовок;
	КонецЕсли;
	
	Заказ = Параметры.Заказы.Получить(0);
	Если Параметры.Заказы.Количество() = 1 Тогда
		Элементы.СтраницыРаспоряжения.ТекущаяСтраница = Элементы.СтраницаЗаказ;
	Иначе
		НадписьЗаголовокЗаказы = НСтр("ru = 'Всего распоряжений'") + ": " + Параметры.Заказы.Количество();
		Элементы.СтраницыРаспоряжения.ТекущаяСтраница = Элементы.СтраницаЗаказы;
	КонецЕсли;
	Элементы.ЗаказТаблица.Видимость = Параметры.Заказы.Количество() > 1;
	Элементы.ОсновнойТовар.Видимость        = НастройкиФормы.ОсновнойТовар.Ключ.Номенклатура <> Неопределено;
	Элементы.ОсновнойТовар.КартинкаШапки    = НастройкиФормы.ОсновнойТовар.КартинкаШапки;
	Элементы.ОсновнойТовар.КартинкаЗначений = НастройкиФормы.ОсновнойТовар.КартинкаЗначений;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыФормыПриСоздании()
	
	Склад = ?(ЗначениеЗаполнено(Параметры.Склад),Параметры.Склад,Параметры.РеквизитыШапки.Склад);
	Склады.ЗагрузитьЗначения(СкладИлиГруппа(Склад));
	Параметры.РеквизитыШапки.Свойство("ХозяйственнаяОперация", ХозяйственнаяОперация);
	СписокЗаказов.ЗагрузитьЗначения(Параметры.Заказы);
	ТаблицаНакладных = НакладныеПоЗаказам(Параметры.Заказы);
	ОформленныеНакладные.Загрузить(ТаблицаНакладных);
	
КонецПроцедуры

&НаСервере
Функция СкладИлиГруппа(Склад)
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ЭтоГруппа") = Истина Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СпрСклады.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Склады КАК СпрСклады
			|ГДЕ
			|	Не СпрСклады.ПометкаУдаления
			|	И СпрСклады.Ссылка В ИЕРАРХИИ (&Склад)";
		Запрос.УстановитьПараметр("Склад", Склад);
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
	Иначе
		
		МассивСкладов = Новый Массив();
		МассивСкладов.Добавить(Склад);
		Возврат МассивСкладов;
		
	КонецЕсли;
	
КонецФункции

#Область Заполнение

&НаСервере
Процедура ЗаполнитьТаблицуТоварыНакладной(Накладная)
	
	Распоряжения = СписокЗаказов.ВыгрузитьЗначения();
	
	НакладнаяЯвляетсяРаспоряжением = ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Неопределено);
	
	Если НакладнаяЯвляетсяРаспоряжением Тогда
		Распоряжения.Добавить(Накладная);
	КонецЕсли;
	
	ТребуемыеТовары = Неопределено;
	Если Параметры.РеквизитыШапки.Свойство("ТребуемыеТовары") Тогда
		ТребуемыеТовары = ПолучитьИзВременногоХранилища(Параметры.РеквизитыШапки.ТребуемыеТовары);
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивЗаказов",          Распоряжения);
	Запрос.УстановитьПараметр("Накладная",              Накладная);
	Запрос.УстановитьПараметр("Склад",                  Склады.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("НакладнаяНаПриемку",     НастройкиФормы.НакладнаяНаПриемку);
	Запрос.УстановитьПараметр("НакладнаяНаОтгрузку",    НастройкиФормы.НакладнаяНаОтгрузку);
	Запрос.УстановитьПараметр("ТребуемыеТовары",        ТребуемыеТовары);
	
	Запрос.УстановитьПараметр("ОсновнаяНоменклатура",   НастройкиФормы.ОсновнойТовар.Ключ.Номенклатура);
	Запрос.УстановитьПараметр("ОсновнаяХарактеристика", НастройкиФормы.ОсновнойТовар.Ключ.Характеристика);
	Запрос.УстановитьПараметр("ОсновнаяСклад",          НастройкиФормы.ОсновнойТовар.Ключ.Склад);
	Запрос.УстановитьПараметр("ХозОперацииРаздельнойЗакупки", ЗакупкиСервер.ХозяйственныеОперацииРаздельнойЗакупкиБезОтборов());
	
	ЕстьОтборПоСкладу  = ЗначениеЗаполнено(Склад);
	ЕстьОтборПоТоварам = ЗначениеЗаполнено(ТребуемыеТовары);
	
	Запрос.Текст = ТекстЗапросаТоваровНакладной(ЕстьОтборПоСкладу, ЕстьОтборПоТоварам);
	ТоварыНакладной.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого СтрокаТовары Из ТоварыНакладной Цикл
		СтрокаТовары.Увеличить = ?(СтрокаТовары.Расхождение > 0, 1, 0);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекстЗапросаТоваровНакладной(ЕстьОтборПоСкладу, ЕстьОтборПоТоварам)
	
	ТекстЗапросаОтборПоТоварам = ?(ЕстьОтборПоТоварам,
		"ВЫБРАТЬ
		|	ТаблицаОтбора.Номенклатура КАК Номенклатура,
		|	ТаблицаОтбора.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ВТТаблицаОтбора
		|ИЗ
		|	&ТребуемыеТовары КАК ТаблицаОтбора
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика
		|;
		|"
		, "");
	
	ТекстЗапроса = 
		ТекстЗапросаОтборПоТоварам
		+ "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Таблица.ДокументОтгрузки КАК Заказ,
		|
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	Таблица.КОтгрузкеРасход
		|		+ Таблица.СобраноПриход
		|		- Таблица.КОформлениюРасход КАК РасхождениеПоЗаказу
		|
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.ОстаткиИОбороты(, , , , 
		|		&ОтборТоварыКОтгрузке
		|		) КАК Таблица
		|ГДЕ
		|	Таблица.КОтгрузкеРасход
		|		+ Таблица.СобраноПриход
		|		- Таблица.КОформлениюРасход <> 0
		|	И &НакладнаяНаОтгрузку
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.ДокументПоступления КАК Заказ,
		|
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	Таблица.КОформлениюПоступленийПоОрдерамОстаток КАК РасхождениеПоЗаказу
		|
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(,
		|		&ОтборТоварыКОформлениюПоступления И НЕ ХозяйственнаяОперация В (&ХозОперацииРаздельнойЗакупки)
		|		) КАК Таблица
		|ГДЕ
		|	Таблица.КОформлениюПоступленийПоОрдерамОстаток <> 0
		|	И &НакладнаяНаПриемку
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.ДокументПоступления КАК Заказ,
		|
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	-Таблица.КОформлениюПоступленийПоНакладнымОстаток КАК РасхождениеПоЗаказу
		|
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(,
		|		&ОтборТоварыКОформлениюПоступления И ХозяйственнаяОперация В (&ХозОперацииРаздельнойЗакупки)
		|		) КАК Таблица
		|ГДЕ
		|	Таблица.КОформлениюПоступленийПоНакладнымОстаток <> 0
		|	И &НакладнаяНаПриемку
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////
		// Расхождение по всем заказам.
		|ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	СУММА(Таблица.РасхождениеПоЗаказу) КАК Количество
		|
		|ПОМЕСТИТЬ ВтРасхождение
		|ИЗ
		|	ВтТовары КАК Таблица
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Номенклатура, Таблица.Характеристика, Таблица.Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////
		// Номенклатура накладной.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Таблица.ДокументОтгрузки КАК Заказ,
		|
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	СУММА(Таблица.КОформлению) КАК Количество
		|
		|ПОМЕСТИТЬ ВтНакладная
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке КАК Таблица
		|ГДЕ
		|	Таблица.Активность
		|	И Таблица.Регистратор = &Накладная
		|	И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И &НакладнаяНаОтгрузку
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.ДокументОтгрузки,
		|	Таблица.Номенклатура, Таблица.Характеристика, Таблица.Склад
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.ДокументПоступления КАК Заказ,
		|
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	СУММА(Таблица.КОформлениюПоступленийПоОрдерам) КАК Количество
		|
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению КАК Таблица
		|ГДЕ
		|	Таблица.Активность
		|	И Таблица.Регистратор = &Накладная
		|	И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И &НакладнаяНаПриемку
		|	И НЕ Таблица.ХозяйственнаяОперация В (&ХозОперацииРаздельнойЗакупки)
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.ДокументПоступления,
		|	Таблица.Номенклатура, Таблица.Характеристика, Таблица.Склад
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.ДокументПоступления КАК Заказ,
		|
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	СУММА(Таблица.КОформлениюПоступленийПоНакладным) КАК Количество
		|
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению КАК Таблица
		|ГДЕ
		|	Таблица.Активность
		|	И Таблица.Регистратор = &Накладная
		|	И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И &НакладнаяНаПриемку
		|	И Таблица.ХозяйственнаяОперация В (&ХозОперацииРаздельнойЗакупки)
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.ДокументПоступления,
		|	Таблица.Номенклатура, Таблица.Характеристика, Таблица.Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Таблица.Заказ          КАК Заказ,
		|
		|	СпрНоменклатура.Наименование        КАК НоменклатураНаименование,
		|	Таблица.Характеристика.Наименование КАК ХарактеристикаНаименование,
		|	Таблица.Склад.Наименование          КАК СкладНаименование,
		|
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	ТаблицаРасхождениеВсего.Количество КАК Расхождение,
		|	ТаблицаНакладная.Количество        КАК КоличествоВНакладной,
		|
		|	ВЫБОР КОГДА Таблица.РасхождениеПоЗаказу < 0 И ЕСТЬNULL(ТаблицаНакладная.Количество, 0) < -Таблица.РасхождениеПоЗаказу ТОГДА
		|				-ТаблицаНакладная.Количество
		|			ИНАЧЕ
		|				Таблица.РасхождениеПоЗаказу
		|		КОНЕЦ                          КАК УвеличитьУменьшить,
		|
		|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|
		|	// Служебные реквизиты на форму
		|	ВЫБОР КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать) ТОГДА
		|				ЛОЖЬ
		|			ИНАЧЕ
		|				ИСТИНА
		|		КОНЕЦ                          ХарактеристикиИспользуются,
		|
		|	ВЫБОР КОГДА Таблица.Номенклатура         = &ОсновнаяНоменклатура
		|					И Таблица.Характеристика = &ОсновнаяХарактеристика
		|					И Таблица.Склад          В(&Склад) ТОГДА
		|				1
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ                          ОсновнойТовар
		|
		|ИЗ
		|	ВтТовары КАК Таблица
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтНакладная КАК ТаблицаНакладная
		|		ПО Таблица.Номенклатура   = ТаблицаНакладная.Номенклатура
		|		 И Таблица.Характеристика = ТаблицаНакладная.Характеристика
		|		 И Таблица.Склад          = ТаблицаНакладная.Склад
		|		 И Таблица.Заказ          = ТаблицаНакладная.Заказ
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасхождение КАК ТаблицаРасхождениеВсего
		|		ПО Таблица.Номенклатура   = ТаблицаРасхождениеВсего.Номенклатура
		|		 И Таблица.Характеристика = ТаблицаРасхождениеВсего.Характеристика
		|		 И Таблица.Склад          = ТаблицаРасхождениеВсего.Склад
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = Таблица.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	НоменклатураНаименование, ХарактеристикаНаименование, СкладНаименование,
		|	Заказ";
	
	Если ЕстьОтборПоСкладу Тогда
		ОтборТоварыКОтгрузке         = "Склад В (&Склад) И ДокументОтгрузки В (&МассивЗаказов)";
		ТоварыКОформлениюПоступления = "Склад В (&Склад) И ДокументПоступления В (&МассивЗаказов)";
	Иначе
		ОтборТоварыКОтгрузке         = "ДокументОтгрузки В (&МассивЗаказов)";
		ТоварыКОформлениюПоступления = "ДокументПоступления В (&МассивЗаказов)";
	КонецЕсли;
	
	Если ЕстьОтборПоТоварам Тогда
		ОтборПоТоварам = 
		"(Номенклатура, Характеристика) В
		|	(ВЫБРАТЬ
		|		ТаблицаОтбора.Номенклатура,
		|			ТаблицаОтбора.Характеристика
		|		ИЗ
		|			ВТТаблицаОтбора КАК ТаблицаОтбора)";
		
		ОтборТоварыКОтгрузке = ОтборТоварыКОтгрузке + " И " + ОтборПоТоварам;
		ТоварыКОформлениюПоступления = ТоварыКОформлениюПоступления + " И " + ОтборПоТоварам;
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборТоварыКОтгрузке", ОтборТоварыКОтгрузке);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборТоварыКОформлениюПоступления", ТоварыКОформлениюПоступления);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Положительная общая разница
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Представление = НСтр("ru = 'Положительная общая разница'");
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Расхождение.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТоварыНакладной.Расхождение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ОтметкаПоложительногоВыполненияЗадачи);
	
	// Отрицательная общая разница
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Представление = НСтр("ru = 'Отрицательная общая разница'");
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Расхождение.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТоварыНакладной.Расхождение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ОтметкаОтрицательногоВыполненияЗадачи);
	
	// Положительная разница
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Представление = НСтр("ru = 'Положительная разница'");
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УвеличитьУменьшить.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТоварыНакладной.УвеличитьУменьшить");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ОтметкаПоложительногоВыполненияЗадачи);
	
	// Отрицательная разница
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Представление = НСтр("ru = 'Отрицательная разница'");
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УвеличитьУменьшить.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТоварыНакладной.УвеличитьУменьшить");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ОтметкаОтрицательногоВыполненияЗадачи);
	
	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(
		ЭтаФорма, "Характеристика", "ТоварыНакладной.ХарактеристикиИспользуются");
		
	
КонецПроцедуры

&НаСервере
Функция НакладныеПоЗаказам(Заказы)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Таблица.Регистратор      КАК Накладная,
		|	РеквизитыДокумента.ДатаДокументаИБ КАК Дата
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеквизитыДокумента
		|		ПО РеквизитыДокумента.Ссылка = Таблица.Регистратор
		|		И НЕ РеквизитыДокумента.ДополнительнаяЗапись
		|ГДЕ
		|	Таблица.Активность
		|	И Таблица.ДокументОтгрузки В(&Заказы)
		|	И ВЫБОР КОГДА &СкладЗаполнен ТОГДА Таблица.Склад В(&Склад) ИНАЧЕ ИСТИНА КОНЕЦ
		|	И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Таблица.КОформлению > 0
		|	И Таблица.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И &НакладнаяНаОтгрузку
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Регистратор      КАК Накладная,
		|	РеквизитыДокумента.ДатаДокументаИБ КАК Дата
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеквизитыДокумента
		|		ПО РеквизитыДокумента.Ссылка = Таблица.Регистратор
		|		И НЕ РеквизитыДокумента.ДополнительнаяЗапись
		|ГДЕ
		|	Таблица.Активность
		|	И Таблица.ДокументПоступления В(&Заказы)
		|	И ВЫБОР КОГДА &СкладЗаполнен ТОГДА Таблица.Склад В(&Склад) ИНАЧЕ ИСТИНА КОНЕЦ
		|	И ВЫБОР КОГДА &ХозОперацияЗаполнена ТОГДА
		|		РеквизитыДокумента.ХозяйственнаяОперация = &ХозяйственнаяОперация
		|	ИНАЧЕ
		|		ИСТИНА
		|	КОНЕЦ
		|	И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Таблица.КОформлениюПоступленийПоОрдерам > 0
		|	И (&ДатаНачала = Неопределено ИЛИ Таблица.Период МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|	И &НакладнаяНаПриемку
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Регистратор      КАК Накладная,
		|	РеквизитыДокумента.ДатаДокументаИБ КАК Дата
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеквизитыДокумента
		|		ПО РеквизитыДокумента.Ссылка = Таблица.Регистратор
		|		И НЕ РеквизитыДокумента.ДополнительнаяЗапись
		|ГДЕ
		|	Таблица.Активность
		|	И Таблица.ДокументПоступления В(&Заказы)
		|	И ВЫБОР КОГДА &СкладЗаполнен ТОГДА Таблица.Склад В(&Склад) ИНАЧЕ ИСТИНА КОНЕЦ
		|	И ВЫБОР КОГДА &ХозОперацияЗаполнена ТОГДА
		|		РеквизитыДокумента.ХозяйственнаяОперация = &ХозяйственнаяОперация
		|	ИНАЧЕ
		|		ИСТИНА
		|	КОНЕЦ
		|	И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Таблица.КОформлениюПоступленийПоНакладным > 0
		|	И (&ДатаНачала = Неопределено ИЛИ Таблица.Период МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|	И &НакладнаяНаПриемку
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ
		|";
	
	Запрос.УстановитьПараметр("Заказы", Заказы);
	Запрос.УстановитьПараметр("Склад", Склады.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("СкладЗаполнен", ЗначениеЗаполнено(Склад));
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ХозОперацияЗаполнена", ЗначениеЗаполнено(ХозяйственнаяОперация));
	Запрос.УстановитьПараметр("ДатаНачала", ?(ЗначениеЗаполнено(СтандартныйПериод.ДатаНачала),СтандартныйПериод.ДатаНачала,Неопределено));
	Запрос.УстановитьПараметр("ДатаОкончания", ?(ЗначениеЗаполнено(СтандартныйПериод.ДатаОкончания),СтандартныйПериод.ДатаОкончания,Дата(3999,12,31)));
	Запрос.УстановитьПараметр("НакладнаяНаПриемку", НастройкиФормы.НакладнаяНаПриемку);
	Запрос.УстановитьПараметр("НакладнаяНаОтгрузку", НастройкиФормы.НакладнаяНаОтгрузку);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТаблицуТоварыНакладнойОтложенно()
	
	ТоварыНакладной.Очистить();
	СтрокаТовары = Элементы.ОформленныеНакладные.ТекущиеДанные;
	Если СтрокаТовары <> Неопределено Тогда
		
		ЗаполнитьТаблицуТоварыНакладной(СтрокаТовары.Накладная);
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура СтандартныйПериодПриИзмененииСервер()
	ТаблицаНакладных = НакладныеПоЗаказам(СписокЗаказов);
	ОформленныеНакладные.Загрузить(ТаблицаНакладных);
КонецПроцедуры


#КонецОбласти