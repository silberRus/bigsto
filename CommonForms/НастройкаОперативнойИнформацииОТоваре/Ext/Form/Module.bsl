
&НаСервере
Процедура ЗаполнитьСписокСкладов()
	
	Склады.Очистить();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 	Ссылка Значение, Наименование Представление
	|ИЗ						Справочник.Склады
	|ГДЕ НЕ ПометкаУдаления
	|УПОРЯДОЧИТЬ ПО Наименование");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Склады.Добавить(Выборка.Значение, " " + Выборка.Представление, Истина);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокТиповЦен()
	
	//ТипыЦен.Очистить();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 	Ссылка Значение, Наименование Представление
	|ИЗ						Справочник.ВидыЦен
	|ГДЕ НЕ ПометкаУдаления
	|УПОРЯДОЧИТЬ ПО Наименование");
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Значение");
	
	//Пока Выборка.Следующий() Цикл
	//	ТипыЦен.Добавить(Выборка.Значение, " " + Выборка.Представление, Истина);
	//КонецЦикла
	
КонецФункции

&НаСервере
Процедура ОбновитьСписокСкладов()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 	Ссылка Значение, Наименование Представление
	|ИЗ						Справочник.Склады
	|ГДЕ НЕ ПометкаУдаления
	|УПОРЯДОЧИТЬ ПО Наименование");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СкладВСписке = Склады.НайтиПоЗначению(Выборка.Значение);
		Если СкладВСписке = Неопределено Тогда
			Склады.Добавить(Выборка.Значение, " " + Выборка.Представление, Истина);
		Иначе
			СкладВСписке.Представление = " " + Выборка.Представление;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры		

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТоварыФорма 	= Параметры.ТоварыФорма;
	ТоварыЭлемент	= Параметры.ТоварыЭлемент;
	
	ЗагрузитьНастройки();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки()
	
	Настройки = ХранилищеНастроекДанныхФорм.Загрузить("ОбщиеФормы.НастройкаОперативнойИнформацииОТоваре", "НастройкиИнфТовара");
	         			   
	Если Настройки <> Неопределено Тогда
		Склады 	= Настройки.Получить("Склады");
		Если Склады = Неопределено ИЛИ НЕ Склады.Количество() Тогда
			ЗаполнитьСписокСкладов();
		Иначе
			ОбновитьСписокСкладов();
		КонецЕсли;

		ТипыЦен 	= Настройки.Получить("ТипыЦен");
		нТипыЦен 	= ПолучитьСписокТиповЦен();
		Если ТипыЦен = Неопределено ИЛИ НЕ ТипыЦен.Количество() Или нТипыЦен.Количество() <> ТипыЦен.Количество() Тогда
			ТипыЦен.ЗагрузитьЗначения(нТипыЦен);
			//ЗаполнитьСписокТиповЦен();
		КонецЕсли;
		
		Остатки = Настройки.Получить("Остатки");
		Если Остатки = Неопределено Тогда
			Остатки = Истина;
		КонецЕсли;
		
		Соглашения = Настройки.Получить("Соглашения");
		Если Соглашения = Неопределено Тогда
			Соглашения = Истина;
		КонецЕсли;
		
		Кроссы = Настройки.Получить("Кроссы");
		Если Кроссы = Неопределено Тогда
			Кроссы = Истина;
		КонецЕсли;
		
		Цены	= Настройки.Получить("Цены");
		Если Цены = Неопределено Тогда
			Цены = Истина;
		КонецЕсли;
				
		ВнутренниеЗаказы	= Настройки.Получить("ВнутренниеЗаказы");
		Если ВнутренниеЗаказы = Неопределено Тогда
			ВнутренниеЗаказы = Истина;
		КонецЕсли;
	Иначе
		ЗаполнитьСписокСкладов();
        ТипыЦен.ЗагрузитьЗначения(ПолучитьСписокТиповЦен());
        Остатки = Истина;
		Цены = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки(Массив, Заголовок)
	
	МодульИнформации.ОбновитьНастройкиОперативнойИнфоОТоваре(Новый Структура("Склады, ТипыЦен, Остатки, Кроссы, Соглашения, Цены, ВнутренниеЗаказы", 
			Склады, ТипыЦен, Остатки, Кроссы, Соглашения, Цены, ВнутренниеЗаказы));
	
	// обновляем флажки
	Заголовок = МодульИнформации.СформироватьЗаголовокТовараHTML(Массив, Остатки, Кроссы, Цены, ВнутренниеЗаказы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Массив = МодульИнформацииКлиент.ПолучитьМассивВыделенныхТоваров(ВладелецФормы, ТоварыЭлемент, ТоварыФорма);
	
	// сохраняем настройки
	Заголовок = "";
	СохранитьНастройки(Массив, Заголовок);	
	
	//ВладелецФормы.ИнфТовараЗаголовок = Заголовок; 
	
	//Валюта = ?(ВладелецФормы.Элементы.Найти("Валюта") = Неопределено, ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета(), ВладелецФормы.Валюта);
	      
	// обновляем отображения инфы для текущего товара
	Если Массив.Количество() Тогда
				
		//ВладелецФормы.ИнфТовараТекстHTML = РаботаСНоменклатурой.ПолучитьТекстHTMLОТоваре(Массив, Валюта);
		ВладелецФормы.ОбработатьОтображениеИнформацииОТоваре();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Закрыть();
КонецПроцедуры

                                                                                                          