#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбновлениеИнформационнойБазы

Функция ПолноеИмяРегистра()
	
	Возврат "РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями";
	
КонецФункции

// Обработчик обновления УТ 11.4.1
// Регистрирует к обновлению записи с типом запасов, отличным от "Комиссионный товар" и с заполненным полем Договор.
// Регистрирует к обновлению записи со способом передачи "Продажа и возврат" и "Передача на комиссию и возврат".
// Регистрирует к обновление записи со способом передачи "Передача на комиссию" и с незаполненной валютой. 
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Настройка.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	Настройка.ТипЗапасов КАК ТипЗапасов,
	|	Настройка.ОрганизацияПродавец КАК ОрганизацияПродавец
	|ИЗ
	|	РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|ГДЕ
	|	Настройка.СпособПередачиТоваров В (
	|		ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПродажаВозврат), 
	|		ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссиюВозврат))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Настройка.ОрганизацияВладелец,
	|	Настройка.ТипЗапасов,
	|	Настройка.ОрганизацияПродавец
	|ИЗ
	|	РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|ГДЕ
	|	НЕ Настройка.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И НЕ Настройка.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Настройка.ОрганизацияВладелец,
	|	Настройка.ТипЗапасов,
	|	Настройка.ОрганизацияПродавец
	|ИЗ
	|	РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|ГДЕ
	|	Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|	И Настройка.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)");
	
	Данные = Запрос.Выполнить().Выгрузить();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
	
КонецПроцедуры

// Обработчик обновления УТ 11.4.1
// В записях настроек с типов запасов, отличных от "Комиссионный товар" очищает поля:
//	- Валюта;
//	- Договор;
//	- ВидЦены;
// В записях настроек заменяет способы передачи "Продажа и возврат" и "Передача на комиссию и возврат"
// на "Продажа" и "Передача на комиссию" соответсвенно.
// В записях настроек со способом передачи "Передача на комиссию" устанавливает валюту.
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	ДанныеКОбработке = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра(),ДополнительныеПараметры);
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Пока ДанныеКОбработке.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра());
			ЭлементБлокировки.УстановитьЗначение("ОрганизацияВладелец", ДанныеКОбработке.ОрганизацияВладелец);
			ЭлементБлокировки.УстановитьЗначение("ТипЗапасов", ДанныеКОбработке.ТипЗапасов);
			ЭлементБлокировки.УстановитьЗначение("ОрганизацияПродавец", ДанныеКОбработке.ОрганизацияПродавец);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			Запрос = Новый Запрос("
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Настройка.ОрганизацияВладелец,
			|	Настройка.ТипЗапасов,
			|	Настройка.ОрганизацияПродавец,
			|	ВЫБОР 
			|		КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПродажаВозврат)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
			|		КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссиюВозврат)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
			|		ИНАЧЕ Настройка.СпособПередачиТоваров
			|	КОНЕЦ КАК СпособПередачиТоваров,
			|	ВЫБОР
			|		КОГДА Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		КОГДА Настройка.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА ЕСТЬNULL(Настройка.Договор.ВалютаВзаиморасчетов, &ВалютаРегламентированногоУчета)
			|		ИНАЧЕ Настройка.Валюта
			|	КОНЕЦ КАК Валюта,
			|	Настройка.Договор КАК Договор,
			|	Настройка.ВидЦены КАК ВидЦены
			|ИЗ
			|	РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
			|ГДЕ
			|	Настройка.ОрганизацияВладелец = &ОрганизацияВладелец
			|	И Настройка.ТипЗапасов = &ТипЗапасов
			|	И Настройка.ОрганизацияПродавец = &ОрганизацияПродавец
			|");
			
			НаборЗаписей = РегистрыСведений.НастройкаПередачиТоваровМеждуОрганизациями.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ОрганизацияВладелец.Установить(ДанныеКОбработке.ОрганизацияВладелец);
			НаборЗаписей.Отбор.ТипЗапасов.Установить(ДанныеКОбработке.ТипЗапасов);
			НаборЗаписей.Отбор.ОрганизацияПродавец.Установить(ДанныеКОбработке.ОрганизацияПродавец);
			
			Запрос.УстановитьПараметр("ОрганизацияВладелец", ДанныеКОбработке.ОрганизацияВладелец);
			Запрос.УстановитьПараметр("ТипЗапасов", ДанныеКОбработке.ТипЗапасов);
			Запрос.УстановитьПараметр("ОрганизацияПродавец", ДанныеКОбработке.ОрганизацияПродавец);
			Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
			
			НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		
			ЗафиксироватьТранзакцию();
		
		Исключение
		
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось записать данные в регистр %ИмяРегистра% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяРегистра());
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.НастройкаПередачиТоваровМеждуОрганизациями, Неопределено, ТекстСообщения);
			
			Продолжить;;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра());
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
