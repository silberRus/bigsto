#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Предназначена для получения текста запроса временной таблицы "ВтСпособыОбеспечения",
// содержащей основной способ обеспечения для списка товаров и складов
//
// Параметры:
//  ФорматыСкладов - Строка - если значение параметра "ВЫЧИСЛЯТЬ", то будет создана временная таблица "ВтФорматыСкладов",
//                            иначе считается что на момент исполнения запроса эта таблица уже существует
//
// Возвращаемое значение:
//  Строка - текст запроса запроса временной таблицы ВтСпособыОбеспечения"
//
Функция ВременнаяТаблицаСпособыОбеспечения(ФорматыСкладов) Экспорт
	
	ТекстЗапроса = "";
	Если ФорматыСкладов = "ВЫЧИСЛЯТЬ" Тогда
		
		ТекстЗапроса = Справочники.ФорматыМагазинов.ТекстЗапросаВтФорматыСкладов();
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТоварнаяМатрица.Номенклатура   КАК Номенклатура,
	|	ТоварнаяМатрица.Характеристика КАК Характеристика,
	|	ТоварнаяМатрица.Склад          КАК Склад,
	|	
	|	ЕСТЬNULL(СпрСпособ.Ссылка, ЗНАЧЕНИЕ(Справочник.СпособыОбеспеченияПотребностей.ПустаяСсылка)) КАК СпособОбеспеченияПотребностей,
	|	ВЫБОР ЕСТЬNULL(СпрСпособ.ТипОбеспечения, ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.ПустаяСсылка))
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Производство)
	|			ТОГДА 1
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.СборкаРазборка)
	|			ТОГДА 2
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.ПроизводствоНаСтороне)
	|			ТОГДА 3
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Покупка)
	|			ТОГДА 4
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Перемещение)
	|			ТОГДА 5
	|		ИНАЧЕ 9999
	|	КОНЕЦ КАК ПриоритетТипаОбеспечения,
	|	
	|	ВЫБОР КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		
	|			СпрНоменклатура.СпособОбеспеченияПотребностей
	|			
	|		ИНАЧЕ
	|			
	|			ЕСТЬNULL(ТаблицаСхемыОбеспеченияСкладов.СпособОбеспеченияПотребностей,
	|					ЕСТЬNULL(ТаблицаСхемыОбеспеченияФорматов.СпособОбеспеченияПотребностей,
	|						ЗНАЧЕНИЕ(Справочник.СпособыОбеспеченияПотребностей.ПустаяСсылка)))
	|			
	|		КОНЕЦ                      КАК СпособОбеспеченияПотребностейУнаследованный,
	|		
	|	ВЫБОР КОГДА НЕ ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL ИЛИ НЕ ТаблицаВариантыОбеспеченияРаботами.Номенклатура ЕСТЬ NULL ТОГДА
	|				
	|				""НоменклатураХарактеристикаСклад""
	|				
	|			КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|				
	|				""Номенклатура""
	|				
	|			ИНАЧЕ
	|				
	|				""СхемаОбеспечения""
	|				
	|		КОНЕЦ КАК ИсточникНастройки
	|	
	|ПОМЕСТИТЬ ВтСпособыОбеспечения
	|ИЗ
	|	ВтТовары КАК ТоварнаяМатрица
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО СпрНоменклатура.Ссылка = ТоварнаяМатрица.Номенклатура
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияРаботами КАК ТаблицаВариантыОбеспеченияРаботами
	|		ПО СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И ТаблицаВариантыОбеспеченияРаботами.Номенклатура   = ТоварнаяМатрица.Номенклатура
	|		 И ТаблицаВариантыОбеспеченияРаботами.Характеристика = ТоварнаяМатрица.Характеристика
	|		 И ТаблицаВариантыОбеспеченияРаботами.РеквизитДопУпорядочивания = 1
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ТаблицаВариантыОбеспеченияТоварами
	|		ПО СпрНоменклатура.ТипНоменклатуры В(
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Набор))
	|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура   = ТоварнаяМатрица.Номенклатура
	|		 И ТаблицаВариантыОбеспеченияТоварами.Характеристика = ТоварнаяМатрица.Характеристика
	|		 И ТаблицаВариантыОбеспеченияТоварами.Склад          = ТоварнаяМатрица.Склад
	|		 И ТаблицаВариантыОбеспеченияТоварами.РеквизитДопУпорядочивания = 1
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтФорматыСкладов КАК ТаблицаФорматыСкладов
	|		ПО ТаблицаФорматыСкладов.Склад = ТоварнаяМатрица.Склад
	|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК ТаблицаСхемыОбеспеченияСкладов
	|		ПО ТаблицаСхемыОбеспеченияСкладов.СхемаОбеспечения = СпрНоменклатура.СхемаОбеспечения
	|		 И ТаблицаСхемыОбеспеченияСкладов.Склад = ТоварнаяМатрица.Склад
	|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК ТаблицаСхемыОбеспеченияФорматов
	|		ПО ТаблицаСхемыОбеспеченияФорматов.СхемаОбеспечения = СпрНоменклатура.СхемаОбеспечения
	|		 И ТаблицаСхемыОбеспеченияФорматов.Склад = ТаблицаФорматыСкладов.ФорматМагазина
	|		 И ТаблицаСхемыОбеспеченияСкладов.СхемаОбеспечения ЕСТЬ NULL
	|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей КАК СпрСпособ
	|		ПО ВЫБОР КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|						
	|						ЕСТЬNULL(ТаблицаВариантыОбеспеченияРаботами.СпособОбеспеченияПотребностей,
	|							СпрНоменклатура.СпособОбеспеченияПотребностей)
	|						
	|					ИНАЧЕ
	|						
	|						ЕСТЬNULL(ТаблицаВариантыОбеспеченияТоварами.СпособОбеспеченияПотребностей,
	|							ЕСТЬNULL(ТаблицаСхемыОбеспеченияСкладов.СпособОбеспеченияПотребностей,
	|								ЕСТЬNULL(ТаблицаСхемыОбеспеченияФорматов.СпособОбеспеченияПотребностей,
	|									ЗНАЧЕНИЕ(Справочник.СпособыОбеспеченияПотребностей.ПустаяСсылка))))
	|						
	|				КОНЕЦ = СпрСпособ.Ссылка
	|		
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Характеристика, Склад
	|;
	|
	|////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Предназначена для получения текста запроса временной таблицы "ВтСпособыОбеспечения",
// содержащей основной способ обеспечения на всех складах для списка товаров
//
// Параметры:
//  ТипОбеспечения - ПеречислениеСсылка.ТипыОбеспечения - если установлено значение типа обеспечения "Перемещение",
//                                                        то результат будет содержать только товары и склады с основным способом обеспечения путем перемещения.
//
// Возвращаемое значение:
//  Строка - текст запроса запроса временной таблицы ВтСпособыОбеспечения"
//
Функция ВременнаяТаблицаСпособыОбеспеченияВсехСкладов(ТипОбеспечения = Неопределено) Экспорт
	
	ТекстЗапроса = Справочники.ФорматыМагазинов.ТекстЗапросаВтФорматыСкладов(Ложь);
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Набор.Номенклатура   КАК Номенклатура,
		|	Набор.Характеристика КАК Характеристика,
		|	Набор.Склад          КАК Склад,
		|	Набор.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей
		|ПОМЕСТИТЬ ВтСпособыОбеспечения
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТоварнаяМатрица.Номенклатура   КАК Номенклатура,
		|		ТоварнаяМатрица.Характеристика КАК Характеристика,
		|		
		|		Настройка.Склад                         КАК Склад,
		|		Настройка.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей
		|	ИЗ
		|		ВтТовары КАК ТоварнаяМатрица
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК Настройка
		|			ПО Настройка.Номенклатура   = ТоварнаяМатрица.Номенклатура
		|			 И Настройка.Характеристика = ТоварнаяМатрица.Характеристика
		|			 И Настройка.РеквизитДопУпорядочивания = 1
		|	ГДЕ
		|		НЕ Настройка.Склад ЕСТЬ NULL
		|		И &Отборы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварнаяМатрица.Номенклатура   КАК Номенклатура,
		|		ТоварнаяМатрица.Характеристика КАК Характеристика,
		|		
		|		Настройка.Склад                         КАК Склад,
		|		Настройка.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей
		|	ИЗ
		|		ВтТовары КАК ТоварнаяМатрица
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК Настройка
		|			ПО Настройка.СхемаОбеспечения = ТоварнаяМатрица.Номенклатура.СхемаОбеспечения
		|			 И Настройка.Склад ССЫЛКА Справочник.Склады
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВытесняющаяНастройка
		|			ПО ВытесняющаяНастройка.Номенклатура   = ТоварнаяМатрица.Номенклатура
		|			 И ВытесняющаяНастройка.Характеристика = ТоварнаяМатрица.Характеристика
		|			 И ВытесняющаяНастройка.Склад          = Настройка.Склад
		|			 И ВытесняющаяНастройка.РеквизитДопУпорядочивания = 1
		|	ГДЕ
		|		НЕ Настройка.Склад ЕСТЬ NULL
		|		И ВытесняющаяНастройка.Склад ЕСТЬ NULL
		|		И &Отборы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварнаяМатрица.Номенклатура   КАК Номенклатура,
		|		ТоварнаяМатрица.Характеристика КАК Характеристика,
		|		
		|		СкладыФормата.Склад                     КАК Склад,
		|		Настройка.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей
		|	ИЗ
		|		ВтТовары КАК ТоварнаяМатрица
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК Настройка
		|			ПО Настройка.СхемаОбеспечения = ТоварнаяМатрица.Номенклатура.СхемаОбеспечения
		|			 И Настройка.Склад ССЫЛКА Справочник.ФорматыМагазинов
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВтФорматыСкладов КАК СкладыФормата
		|			ПО СкладыФормата.ФорматМагазина = Настройка.Склад
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК ВытесняющаяНастройкаСхемы
		|			ПО ВытесняющаяНастройкаСхемы.СхемаОбеспечения = ТоварнаяМатрица.Номенклатура.СхемаОбеспечения
		|			 И ВытесняющаяНастройкаСхемы.Склад ССЫЛКА Справочник.Склады
		|			 И ВытесняющаяНастройкаСхемы.Склад = СкладыФормата.Склад
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВытесняющаяНастройка
		|			ПО ВытесняющаяНастройка.Номенклатура   = ТоварнаяМатрица.Номенклатура
		|			 И ВытесняющаяНастройка.Характеристика = ТоварнаяМатрица.Характеристика
		|			 И ВытесняющаяНастройка.Склад          = СкладыФормата.Склад
		|			 И ВытесняющаяНастройка.РеквизитДопУпорядочивания = 1
		|	ГДЕ
		|		НЕ Настройка.Склад ЕСТЬ NULL
		|		И НЕ СкладыФормата.Склад ЕСТЬ NULL
		|		И ВытесняющаяНастройкаСхемы.Склад ЕСТЬ NULL
		|		И ВытесняющаяНастройка.Склад ЕСТЬ NULL
		|		И &Отборы) КАК Набор
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|////////////////////////////////////
		|";
	
	ПодстрокаЗамены = "";
	Если ТипОбеспечения = Перечисления.ТипыОбеспечения.Перемещение Тогда
		
		ПодстрокаЗамены = "Настройка.СпособОбеспеченияПотребностей.ТипОбеспечения = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Перемещение)
					|		И НЕ Настройка.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей В(
					|			ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
					|			ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
					|			НЕОПРЕДЕЛЕНО)";
		
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отборы", ПодстрокаЗамены);
	Возврат ТекстЗапроса;
	
КонецФункции

// Подставляет в текст запроса соединения, необходимые для получения основного способа обеспечения товаром на складе или работой
//
// Параметры:
//  ТекстЗапроса	 - Строка - текст запроса, в который нужно подставить соединение
//  ИмяПараметра	 - Строка - имя параметра на место которого будет подставлено соединение
//  ПоляСоединения	 - Строка - поля соединения в формате [ВедущаяТаблица].Номенклатура,[ВедущаяТаблица].Характеристика,[ВедущаяТаблица].Склад
// 
// Возвращаемое значение:
//  Строка - новый тест запроса
//
Функция ПодставитьСоединениеДляПолученияСпособаОбеспечения(ТекстЗапроса, ИмяПараметра, ПоляСоединения = Неопределено) Экспорт
	
	РезультатПодстановки = ТекстЗапроса;
	Пока Истина Цикл
		
		НачалоПараметра = СтрНайти(РезультатПодстановки, ИмяПараметра, НаправлениеПоиска.СНачала);
		
		Если НачалоПараметра = 0 Тогда
			Прервать;
		КонецЕсли;
		
		ПоследнийСимвол = НачалоПараметра + СтрДлина(ИмяПараметра);
		НачалоСинонима = СтрНайти(РезультатПодстановки, "КАК", НаправлениеПоиска.СКонца, НачалоПараметра) + СтрДлина("КАК");
		Синоним = СокрЛП(СтрЗаменить(Сред(РезультатПодстановки, НачалоСинонима, НачалоПараметра - НачалоСинонима - 1), "ПО", ""));
		ПревыйСимвол = СтрНайти(РезультатПодстановки, "СОЕДИНЕНИЕ", НаправлениеПоиска.СКонца, НачалоСинонима) + СтрДлина("СОЕДИНЕНИЕ");
		
		ПодстрокаПоиска = Сред(РезультатПодстановки, ПревыйСимвол, ПоследнийСимвол - ПревыйСимвол);
		ПодстрокаЗамены =
			" Справочник.Номенклатура КАК СпрНоменклатураДляСоединения
			|		ПО СпрНоменклатураДляСоединения.Ссылка = Т.Номенклатура
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияРаботами КАК ТаблицаВариантыОбеспеченияРаботами
			|		ПО СпрНоменклатураДляСоединения.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
			|		 И ТаблицаВариантыОбеспеченияРаботами.Номенклатура   = Т.Номенклатура
			|		 И ТаблицаВариантыОбеспеченияРаботами.Характеристика = Т.Характеристика
			|		 И ТаблицаВариантыОбеспеченияРаботами.РеквизитДопУпорядочивания = 1
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ТаблицаВариантыОбеспеченияТоварами
			|		ПО СпрНоменклатураДляСоединения.ТипНоменклатуры В(
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Набор))
			|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура   = Т.Номенклатура
			|		 И ТаблицаВариантыОбеспеченияТоварами.Характеристика = Т.Характеристика
			|		 И ТаблицаВариантыОбеспеченияТоварами.Склад          = Т.Склад
			|		 И ТаблицаВариантыОбеспеченияТоварами.РеквизитДопУпорядочивания = 1
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВтФорматыСкладов КАК ТаблицаФорматыСкладов
			|		ПО ТаблицаФорматыСкладов.Склад = Т.Склад
			|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК ТаблицаСхемыОбеспеченияСкладов
			|		ПО ТаблицаСхемыОбеспеченияСкладов.СхемаОбеспечения = СпрНоменклатураДляСоединения.СхемаОбеспечения
			|		 И ТаблицаСхемыОбеспеченияСкладов.Склад = Т.Склад
			|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК ТаблицаСхемыОбеспеченияФорматов
			|		ПО ТаблицаСхемыОбеспеченияФорматов.СхемаОбеспечения = СпрНоменклатураДляСоединения.СхемаОбеспечения
			|		 И ТаблицаСхемыОбеспеченияФорматов.Склад = ТаблицаФорматыСкладов.ФорматМагазина
			|		 И ТаблицаСхемыОбеспеченияСкладов.СхемаОбеспечения ЕСТЬ NULL
			|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей КАК СпрСпособ
			|		ПО ВЫБОР КОГДА СпрНоменклатураДляСоединения.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
			|						
			|						ЕСТЬNULL(ТаблицаВариантыОбеспеченияРаботами.СпособОбеспеченияПотребностей,
			|							СпрНоменклатураДляСоединения.СпособОбеспеченияПотребностей)
			|						
			|					ИНАЧЕ
			|						
			|						ЕСТЬNULL(ТаблицаВариантыОбеспеченияТоварами.СпособОбеспеченияПотребностей,
			|							ЕСТЬNULL(ТаблицаСхемыОбеспеченияСкладов.СпособОбеспеченияПотребностей,
			|								ЕСТЬNULL(ТаблицаСхемыОбеспеченияФорматов.СпособОбеспеченияПотребностей,
			|									ЗНАЧЕНИЕ(Справочник.СпособыОбеспеченияПотребностей.ПустаяСсылка))))
			|						
			|				КОНЕЦ = СпрСпособ.Ссылка";
			
		ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "СпрСпособ", Синоним);
		Если ПоляСоединения <> Неопределено Тогда
			МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПоляСоединения);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Номенклатура",   МассивПодстрок[0]);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Характеристика", МассивПодстрок[1]);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Склад",          МассивПодстрок[2]);
		КонецЕсли;
		РезультатПодстановки = СтрЗаменить(РезультатПодстановки, ПодстрокаПоиска, ПодстрокаЗамены);
		
	КонецЦикла;
	
	Возврат РезультатПодстановки;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныйПрограммныйИнтерфейс

Процедура Добавить(Склад, СхемаОбеспечения, СпособОбеспечения) Экспорт
	
	Набор = РегистрыСведений.СхемыОбеспечения.СоздатьНаборЗаписей();
	
	Набор.Отбор.СхемаОбеспечения.Установить(СхемаОбеспечения);
	Набор.Отбор.Склад.Установить(Склад);
	
	Запись = Набор.Добавить();
	Запись.СхемаОбеспечения = СхемаОбеспечения;
	Запись.Склад = Склад;
	
	Запись.СпособОбеспеченияПотребностей = СпособОбеспечения;
	Набор.Записать();
	
КонецПроцедуры

Процедура Удалить(Склад, СхемаОбеспечения) Экспорт
	
	Набор = РегистрыСведений.СхемыОбеспечения.СоздатьНаборЗаписей();
	
	Набор.Отбор.СхемаОбеспечения.Установить(СхемаОбеспечения);
	Набор.Отбор.Склад.Установить(Склад);
	
	Набор.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
