
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Номенклатура", Номенклатура);
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ПерезаполнитьМестаХраненияСервер();	
	КонецЕсли; 
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовУправленияФормы

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ПерезаполнитьМестаХранения();
	
КонецПроцедуры

&НаКлиенте
Процедура МестаХраненияПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.МестаХранения.ТекущиеДанные;	
	
	Если ТекущиеДанные = Неопределено Тогда
		УстановитьОтборПоИсториии();
	Иначе
		УстановитьОтборПоИсториии(ТекущиеДанные.Номенклатура, ТекущиеДанные.Склад);		
	КонецЕсли;	
		
КонецПроцедуры

Процедура УстановитьОтборПоИсториии(Номенклатура = Неопределено, Склад = Неопределено)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(История, "Номенклатура", Номенклатура,	 ВидСравненияКомпоновкиДанных.Равно);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(История, "Склад",		 Склад,			 ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	Отказ = Ложь;
	СохранитьИзмененияНаСервере(Отказ);
	
	ПерезаполнитьМестаХранения();	
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьИзмененияНаСервере(Отказ = Ложь)
	
	ТекДата = НачалоДня(ТекущаяДата());
	
	ТаблицаМестХранения = ПолучитьТаблицуДляСохранения();
	
	НаборЗаписей = РегистрыСведений.СТ_МестаХраненияНоменклатурыНаСкладах.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ТекДата);
	НаборЗаписей.Отбор.Номенклатура.Установить(Номенклатура);
	
	НаборЗаписей.Загрузить(ТаблицаМестХранения);
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		
		Отказ = Истина;
		Сообщить(ОписаниеОшибки());
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуДляСохранения()
	
	ТаблицаМестХранения = МестаХранения.Выгрузить();	
	ТаблицаМестХранения.Колонки.Добавить("Ответственный", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	ТаблицаМестХранения.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	
	ТаблицаМестХранения.ЗаполнитьЗначения(ПользователиКлиентСервер.ТекущийПользователь(), "Ответственный");	
	ТаблицаМестХранения.ЗаполнитьЗначения(НачалоДня(ТекущаяДата()), "Период");	
	
	Возврат ТаблицаМестХранения;

КонецФункции // ПолучитьТаблицуДляСохранения()
 
&НаКлиенте
Процедура ПерезаполнитьМестаХранения()

	ПерезаполнитьМестаХраненияСервер();

КонецПроцедуры // ПерезаполнитьМестаХранения()

&НаСервере
Процедура ПерезаполнитьМестаХраненияСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СкладыДополнительныеРеквизиты.Ссылка КАК Склад
		|ПОМЕСТИТЬ втСклады
		|ИЗ
		|	Справочник.Склады.ДополнительныеРеквизиты КАК СкладыДополнительныеРеквизиты
		|ГДЕ
		|	НЕ СкладыДополнительныеРеквизиты.Ссылка.ПометкаУдаления
		|	И СкладыДополнительныеРеквизиты.Свойство = &СвойствоИспользоватьМестаХранения
		|	И СкладыДополнительныеРеквизиты.Значение = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Номенклатура,
		|	втСклады.Склад,
		|	ЕСТЬNULL(МестаХраненияСрезПоследних.МестоХранения, """") КАК МестоХранения,
		|	ЕСТЬNULL(МестаХраненияСрезПоследних.МестоХранения, """") КАК МестоХраненияДоИзменения
		|ИЗ
		|	втСклады КАК втСклады
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СТ_МестаХраненияНоменклатурыНаСкладах.СрезПоследних(, Номенклатура = &Номенклатура) КАК МестаХраненияСрезПоследних
		|		ПО втСклады.Склад = МестаХраненияСрезПоследних.Склад";
	
	Запрос.УстановитьПараметр("СвойствоИспользоватьМестаХранения", ПолучитьСвойствоИспользоватьМестаХранения());
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	МестаХранения.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // ПерезаполнитьМестаХраненияСервер()

&НаСервереБезКонтекста
Функция ПолучитьСвойствоИспользоватьМестаХранения()

	Возврат ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Использовать места хранения");	

КонецФункции // ПолучитьСвойствоИспользоватьМестаХранения()

 
#КонецОбласти

