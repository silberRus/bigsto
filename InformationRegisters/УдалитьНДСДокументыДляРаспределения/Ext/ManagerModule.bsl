#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбновлениеИнформационнойБазы

Функция ПолноеИмяРегистра()
	
	Возврат "РегистрСведений.УдалитьНДСДокументыДляРаспределения";
	
КонецФункции

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Данные = ЗапросДанныеКОбработке().Выгрузить(ОбходРезультатаЗапроса.Прямой);
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(НДСДокументыДляРаспределения.Дата, МЕСЯЦ) КАК Месяц,
	|	ЕСТЬNULL(ДокументыПоступления.ДокументОснование, НДСДокументыДляРаспределения.ДокументРегистратор) КАК СчетФактура,
	|	НДСДокументыДляРаспределения.ДокументРегистратор.Организация КАК Организация,
	|	НДСДокументыДляРаспределения.Дата КАК Дата,
	|	НДСДокументыДляРаспределения.ДокументРегистратор КАК ДокументРегистратор
	|ИЗ
	|	РегистрСведений.УдалитьНДСДокументыДляРаспределения КАК НДСДокументыДляРаспределения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыПоступления
	|		ПО НДСДокументыДляРаспределения.ДокументРегистратор = ДокументыПоступления.Ссылка
	|ГДЕ
	|	НДСДокументыДляРаспределения.ДокументРегистратор ССЫЛКА Документ.СчетФактураПолученный
	|	ИЛИ НДСДокументыДляРаспределения.ДокументРегистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|
	|ИТОГИ ПО
	|	ДокументРегистратор";
	
	
	ВыборкаПоРегистраторам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДокументРегистратор");
	
	ДанныеКОбработке = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра());
	
	НачатьТранзакцию();
	
	Попытка
		
		Пока ДанныеКОбработке.Следующий() Цикл
			
			СтруктураПоиска = Новый Структура("ДокументРегистратор", ДанныеКОбработке.ДокументРегистратор);
			
			Пока ВыборкаПоРегистраторам.НайтиСледующий(СтруктураПоиска) Цикл
				
				Выборка = ВыборкаПоРегистраторам.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока Выборка.Следующий() Цикл
					
					Если ТипЗнч(Выборка.ДокументРегистратор) = Тип("ДокументСсылка.СчетФактураВыданный")
						Или ТипЗнч(Выборка.ДокументРегистратор) = Тип("ДокументСсылка.СчетФактураНалоговыйАгент") Тогда
						
						РегистрыСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж.СоздатьЗаписьРегистра(Выборка.Месяц, Выборка.СчетФактура, Выборка.Организация);
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			ВыборкаПоРегистраторам.Сбросить();
			
			НаборЗаписей = РегистрыСведений.УдалитьНДСДокументыДляРаспределения.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Дата.Установить(ДанныеКОбработке.Дата);
			НаборЗаписей.Отбор.ДокументРегистратор.Установить(ДанныеКОбработке.ДокументРегистратор);
			НаборЗаписей.Отбор.ДокументПартии.Установить(ДанныеКОбработке.ДокументПартии);
			НаборЗаписей.Отбор.АналитикаУчетаНоменклатуры.Установить(ДанныеКОбработке.АналитикаУчетаНоменклатуры);
			НаборЗаписей.Отбор.РеализацияПроизведенногоТовара.Установить(ДанныеКОбработке.РеализацияПроизведенногоТовара);
			НаборЗаписей.Отбор.ВидЦенности.Установить(ДанныеКОбработке.ВидЦенности);
			НаборЗаписей.Отбор.ЕстьСчетФактура.Установить(ДанныеКОбработке.ЕстьСчетФактура);
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстСообщения = НСтр("ru = 'Не удалось записать данные в регистр %ИмяРегистра% по причине: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", "РегистрыСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж");
		
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
		Метаданные.НайтиПоПолномуИмени(ВыборкаПоРегистраторам.ДокументРегистратор.Метаданные().ПолноеИмя()), ВыборкаПоРегистраторам.ДокументРегистратор, ТекстСообщения);
		
		ВызватьИсключение;
		
	КонецПопытки;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра());
	
КонецПроцедуры

Функция ЗапросДанныеКОбработке()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УдалитьНДСДокументыДляРаспределения.Дата,
	|	УдалитьНДСДокументыДляРаспределения.ДокументРегистратор,
	|	УдалитьНДСДокументыДляРаспределения.ДокументПартии,
	|	УдалитьНДСДокументыДляРаспределения.АналитикаУчетаНоменклатуры,
	|	УдалитьНДСДокументыДляРаспределения.РеализацияПроизведенногоТовара,
	|	УдалитьНДСДокументыДляРаспределения.ВидЦенности,
	|	УдалитьНДСДокументыДляРаспределения.ЕстьСчетФактура
	|ИЗ
	|	РегистрСведений.УдалитьНДСДокументыДляРаспределения КАК УдалитьНДСДокументыДляРаспределения
	|ГДЕ
	|	УдалитьНДСДокументыДляРаспределения.ДокументРегистратор ССЫЛКА Документ.СчетФактураПолученный
	|	ИЛИ УдалитьНДСДокументыДляРаспределения.ДокументРегистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#КонецЕсли
