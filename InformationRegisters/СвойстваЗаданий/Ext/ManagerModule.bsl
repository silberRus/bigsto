#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс
    
// Устанавливает свойства с результатами выполнения задания, сохраняемые после выполнения задания и его удаления.
//
// Параметры:
//  Задание  - СпрвочникСсылка.ОчередьЗаданий, СпрвочникСсылка.ОчередьЗаданийОбластейДанных - задание.
//  Свойства - Структура - значения свойств для установки (см. функцию НовыйСвойстваЗадания()).
//
Процедура Установить(Знач Задание, Свойства = Неопределено) Экспорт
    
    ИдентификаторЗадания = ИдентификаторЗадания(Задание);
    Запись = СоздатьМенеджерЗаписи();
    Запись.ИдентификаторЗадания = ИдентификаторЗадания;
    Запись.Прочитать();
    Если Не Запись.Выбран() Тогда
        Запись.ИдентификаторЗадания = ИдентификаторЗадания;
        Задание = Справочники.ОчередьЗаданийОбластейДанных.ПолучитьСсылку(ИдентификаторЗадания);
        Если ОбщегоНазначения.СсылкаСуществует(Задание) Тогда
            Запись.Задание = Задание;
        КонецЕсли;
    КонецЕсли;
    Если Свойства <> Неопределено Тогда
        ЗаполнитьЗначенияСвойств(Запись, Свойства, "КодСостояния, Результат, СообщениеОбОшибке"); 
    КонецЕсли; 
    Если ЗначениеЗаполнено(Запись.СообщениеОбОшибке) Тогда
        Запись.Ошибка = Истина;
    Иначе
        Запись.Ошибка = Ложь;
    КонецЕсли; 
    Запись.Записать();
	
КонецПроцедуры

// Очищает свойство "Задание" при необходимости. Вызывается, если объект задания удаляется.
//
// Параметры:
//  Задание  - СпрвочникСсылка.ОчередьЗаданий, СпрвочникСсылка.ОчередьЗаданийОбластейДанных - задание.
//
Процедура ОчиститьСвойствоЗадание(Знач Задание) Экспорт
    
    ИдентификаторЗадания = ИдентификаторЗадания(Задание);
    
    Запись = СоздатьМенеджерЗаписи();
    Запись.ИдентификаторЗадания = ИдентификаторЗадания;
    Запись.Прочитать();
    Если Запись.Выбран() Тогда
        Запись.Задание = Неопределено;
    КонецЕсли;
    Запись.Записать();
	
КонецПроцедуры

// Возвращает структуру с пустыми значениями свойств задания. 
// Может использоваться как шаблон для заполнения свойств.
// 
// Возвращаемое значение:
//   - Структура - 
//
Функция НовыйСвойстваЗадания() Экспорт
	
	СвойстваЗадания = Новый Структура;
    СвойстваЗадания.Вставить("КодСостояния", 0);
    СвойстваЗадания.Вставить("Ошибка", Ложь);
    СвойстваЗадания.Вставить("Результат");
    СвойстваЗадания.Вставить("СообщениеОбОшибке", "");
    Возврат СвойстваЗадания;
	
КонецФункции

// Возвращает структуру с именами кодов состояний обработки заданий.
// 
// Возвращаемое значение:
//   - Структура - имена состояний с значениями кодов состояний.
//
Функция КодыСостояний() Экспорт
    
    Возврат ОчередьЗаданийВнешнийИнтерфейсПовтИсп.КодыСостояний();
    
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции
    
Функция ИдентификаторЗадания(Знач Задание)
	
    Если ТипЗнч(Задание) = Тип("УникальныйИдентификатор") Тогда
        ИдентификаторЗадания = Задание;
    Иначе
        ИдентификаторЗадания = Задание.УникальныйИдентификатор();
    КонецЕсли;
    Возврат ИдентификаторЗадания;
	
КонецФункции

#КонецОбласти 

#КонецЕсли
 
 