
Функция СимволСвояДата() Экспорт
	
	Возврат "Z";
	
КонецФункции

Функция ПолучитьДатуКалендаря(СтруктураДаты) Экспорт
	
	// Возвращает превращенную структуру даты в строку для хранения в базе.
	
	Возврат ?(СтруктураДаты.СвояДата,
		СимволСвояДата() + Прав("00" + СтруктураДаты.Месяц, 2) + Прав("0" + СтруктураДаты.Неделя, 1) + Формат(СтруктураДаты.Время, "ДФ=HHmmss; ДП=000000"),
		Формат(СтруктураДаты.ТиповаяДата, "ДФ=yyyyMMddHHMMss"));
	
КонецФункции
Функция ПолучитьСтруктуруДаты(строкаДаты, Дата = '00010101') Экспорт
	
	// Возвращает структуру даты
	//
	// Параметры:
	// 		Дата - сюда можно передать дату и тогда система добавит
	//				в структуру возврата "БлижайшаяДата" если дата своя
	//
	//Возвращает структуру с ключами
	// 	- СвояДата - истина если это своя дата
	//	- ТиповаяДата - если это типовая дата то тут будет типовое датавремя
	//	- Месяц - строка месяц
	//	- Неделя - строка недели
	//	- Время - время
	//
	
	Структура = Новый Структура("СвояДата", Лев(строкаДаты, 1) = СимволСвояДата());
	
	Если Структура.СвояДата Тогда
		
		Структура.Вставить("Месяц", 	Сред(строкаДаты, 2, 2));
		Структура.Вставить("Неделя", 	Сред(строкаДаты, 4, 1));
		Структура.Вставить("Время", 	Дата("00010101" + Сред(строкаДаты, 5, 4) + "00"));
		
	Иначе
		
		Структура.Вставить("ТиповаяДата", Дата(строкаДаты));
		
	КонецЕсли;
	
	Структура.Вставить("БлижайшаяДата", БлижайшаяДата(Дата, Структура));
	
	Возврат Структура;
	
КонецФункции
Функция БлижайшаяДата(Дата, СтруктураДаты)
	
	НайдДата = '00010101';
	
	Если Не СтруктураДаты.СвояДата Тогда
		
		НайдДата = СтруктураДаты.ТиповаяДата;
	
	ИначеЕсли СтруктураДаты.Месяц  <> "00" Тогда
		
		
			
	ИначеЕсли СтруктураДаты.Неделя <> "0" Тогда
		
		Неделя 		= ДеньНедели(Дата);
		ВыбНеделя 	= Число(СтруктураДаты.Неделя);
		НайдДата 	= Дата + (Неделя - ВыбНеделя) * 86400 + (СтруктураДаты.Время - '00010101');
			
	КонецЕсли;
	
	Возврат НайдДата;
	
КонецФункции
Функция ПредставлениеДаты(строкаДаты) Экспорт
	
	// Возвращает представление даты по формату графика
	// начинается <СимволСвояДата()> (день месяца 00 / днеь недели 0 / время 0000) или типовой формат 201801010000 (дата время годМесяцЧислоВремя)
	// Z0010800 - понедельник 8 часов утра, 
	
	Представление = "";
	
	Если Не ПустаяСтрока(строкаДаты) Тогда
		
		Структура = ПолучитьСтруктуруДаты(строкаДаты);
		
		Если Структура.СвояДата Тогда
			
			Месяц 	= СтрРазделить(",январь,февраль,март,апрель,май,июнь,июль,август,сентябрь,октябрь,ноябрь,декабрь", ",")[Число(Структура.Месяц)];
			Неделя 	= СтрРазделить(",понедельник,вторник,среда,четверг,пятница,суббота,воскресенье", ",")[Число(Структура.Неделя)];
			Время 	= Формат(Структура.Время, "ДЛФ=T");
			
			Представление = СокрЛП(СтрШаблон("%1 %2 %3", Месяц, Неделя, Время));
			
		Иначе
			
			Представление = Формат(Дата(строкаДаты), "ДЛФ=DDT");
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции
Функция ПолучитьСтрокуИПредставление(СтруктураДаты) Экспорт
	
	Строка = ПолучитьДатуКалендаря(СтруктураДаты);
	Возврат Новый Структура("Строка, Представление",
					Строка,
					ПредставлениеДаты(Строка));
КонецФункции


Функция ПолучитьВремяРаботыДня(Объект, Дата, НеРаботает = Неопределено) Экспорт
	
	// Возвращает структуру (ДатаНачала, ДатаОкончания) времея работы в этот день
	// Параметры:
	//	Объект 	- объект для которого смотрим график
	//	Дата 	- день на который смотрим график
	//	НеРаботает - сюда возвращается ИСТИНА если объекты задан график но в этот день он не работает
	//
	// Если не задан график для объекта, тогда вернет неопределено.
	
	стрВремени 	= "";
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ от, до ИЗ РегистрСведений.АТ_ГрафикРаботы ГДЕ Объект = &Объект И Работает;
	|ВЫБРАТЬ от, до ИЗ РегистрСведений.АТ_ГрафикРаботы ГДЕ Объект = &Объект И НЕ Работает;
	|");
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка = Пакет[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		отСтрукт = ПолучитьСтруктуруДаты(Выборка.От, Дата);
		доСтрукт = ПолучитьСтруктуруДаты(Выборка.До, Дата);
	
		Если НачалоДня(отСтрукт.БлижайшаяДата) <= Дата И Дата <= КонецДня(доСтрукт.БлижайшаяДата) Тогда
			
			Возврат Новый Структура("ДатаНачала, ДатаОкончания", отСтрукт.БлижайшаяДата, доСтрукт.БлижайшаяДата);
			
		КонецЕсли;
	КонецЦикла;
	
	Если Выборка.Количество() Тогда
		НеРаботает = Истина;
	КонецЕсли;
	
КонецФункции
Функция ПолучитьСтрВремяРаботыДня(Объект, Дата) Экспорт
	
	// Возвращает представление времени работы объекта в этот день
	// формат HH:мм - HH:мм
	
	стрВремени = "";
	
	НеРаботает = Ложь;
	Период = ПолучитьВремяРаботыДня(Объект, Дата, НеРаботает);
	Если Период <> Неопределено Тогда
		стрВремени = Формат(Период.ДатаНачала, "ДФ=HH:mm") + "-" + Формат(Период.ДатаОкончания, "ДФ=HH:mm");
	КонецЕсли;
	
	Возврат ?(НеРаботает, "не работает", стрВремени);
	
КонецФункции

Функция ПолучитьПредставлениеГрафика(Объект) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ от, до, Работает ИЗ РегистрСведений.АТ_ГрафикРаботы ГДЕ Объект = &Объект УПОРЯДОЧИТЬ ПО Работает Убыв");
	Запрос.УстановитьПараметр("Объект", Объект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Текст 	= Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		Текст.Добавить(СтрШаблон("%1%2%3",
					?(Выборка.Работает, "Работает", "Не работает"),
					?(ПустаяСтрока(Выборка.от), "", " с " + ПредставлениеДаты(Выборка.от)),
					?(ПустаяСтрока(Выборка.до), "", " до " + ПредставлениеДаты(Выборка.до))));
	КонецЦикла;
				
	Возврат СтрСоединить(Текст,"; ");			
	
КонецФункции

Процедура ОбновитьИнформацюПоГрафику(Форма, Ссылка, ИмяРеквизита = "АТМГрафикРаботы") Экспорт
	
	Инфа = Новый Массив;
	Представление = ПолучитьПредставлениеГрафика(Ссылка);
	
	Если ПустаяСтрока(Представление) Тогда
		Инфа.Добавить(Новый ФорматированнаяСтрока("Выберите расписание работы.",,,,"НовоеРасписание"));
	Иначе	
		//Инфа.Добавить(Новый ФорматированнаяСтрока("x",,WebЦвета.Красный,,"Удалить"));
		//Инфа.Добавить(Новый ФорматированнаяСтрока(" Расписание: "));
		Инфа.Добавить(Новый ФорматированнаяСтрока(Представление,,,,"ПоРасписанию"));
	КонецЕсли;
	
	Форма[ИмяРеквизита] = Новый ФорматированнаяСтрока(Инфа);
	
КонецПроцедуры

Функция ДобавитьЭлементыГрафикаРаботы(Форма) Экспорт
	
	// Добавляет элементы управления по функционалу график работы
	
	Группа = Форма.Элементы.Найти("АТ_ГрафикРаботы");
	Если Группа = Неопределено Тогда
		ВызватьИсключение "Не найдена группа для отображения графика работы. Добавтье на форму группу ""АТ_ГрафикРаботы"".";
	КонецЕсли;
	
	Реквизиты = Новый Массив;
	Реквизиты.Добавить(Новый РеквизитФормы("АТМГрафикРаботы", Новый ОписаниеТипов("ФорматированнаяСтрока")));
	Форма.ИзменитьРеквизиты(Реквизиты);
	
	ЭлГрафик = Форма.Элементы.Добавить("АТМГрафикРаботы", Тип("ПолеФормы"), Группа);
	ЭлГрафик.ПутьКДанным = "АТМГрафикРаботы";
	ЭлГрафик.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлГрафик.УстановитьДействие("ОбработкаНавигационнойСсылки", "ГрафикРаботыНажатие");
	
	Форма.ОбновитьИнформацюПоГрафику();
	
КонецФункции

