#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос( 
	"ВЫБРАТЬ
	|	СостоянияБлокировки.Период      КАК Период,
	|	СостоянияБлокировки.Организация КАК Организация,
	|	СостоянияБлокировки.СчетФактура КАК СчетФактура,
	|	СостоянияБлокировки.Состояние   КАК Состояние
	|ПОМЕСТИТЬ СостоянияБлокировкиВычетаНДСПоСчетамФактурамПередЗаписью
	|ИЗ
	|	РегистрСведений.СостоянияБлокировкиВычетаНДСПоСчетамФактурам КАК СостоянияБлокировки
	|ГДЕ
	|	СостоянияБлокировки.Регистратор = &Регистратор
	|");
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Или Не ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Месяц           КАК Месяц,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.СчетФактура     КАК СчетФактура
	|ПОМЕСТИТЬ СостоянияБлокировкиВычетаНДСПоСчетамФактурамЗадания
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СостоянияБлокировки.Период, МЕСЯЦ) КАК Месяц,
	|		СостоянияБлокировки.Организация КАК Организация,
	|		СостоянияБлокировки.СчетФактура КАК СчетФактура,
	|		ВЫБОР 
	|			КОГДА СостоянияБлокировки.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБлокировкиВычетаНДС.Установлена)
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ КАК Состояние
	|	ИЗ
	|		СостоянияБлокировкиВычетаНДСПоСчетамФактурамПередЗаписью КАК СостоянияБлокировки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СостоянияБлокировки.Период, МЕСЯЦ) КАК Месяц,
	|		СостоянияБлокировки.Организация КАК Организация,
	|		СостоянияБлокировки.СчетФактура КАК СчетФактура,
	|		ВЫБОР 
	|			КОГДА СостоянияБлокировки.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБлокировкиВычетаНДС.Установлена)
	|				ТОГДА -1
	|			ИНАЧЕ -2
	|		КОНЕЦ КАК Состояние
	|	ИЗ
	|		РегистрСведений.СостоянияБлокировкиВычетаНДСПоСчетамФактурам КАК СостоянияБлокировки
	|	ГДЕ
	|		СостоянияБлокировки.Регистратор = &Регистратор) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Месяц,
	|	Организация,
	|	СчетФактура
	|
	|ИМЕЮЩИЕ
	|	СУММА(Таблица.Состояние) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СостоянияБлокировкиВычетаНДСПоСчетамФактурамПередЗаписью";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли