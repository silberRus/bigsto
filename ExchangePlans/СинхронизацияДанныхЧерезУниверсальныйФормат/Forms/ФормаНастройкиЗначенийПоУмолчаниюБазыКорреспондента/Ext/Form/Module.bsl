#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ИдентификаторНастройки") Тогда
		ВариантНастройки = Параметры.ИдентификаторНастройки;
	КонецЕсли;
	
	ИмяПланаОбмена = Метаданные.ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат.Имя;
	ОбменДаннымиСервер.ФормаНастройкиЗначенийПоУмолчаниюБазыКорреспондентаПриСозданииНаСервере(ЭтаФорма, "СинхронизацияДанныхЧерезУниверсальныйФормат");
	
	УстановитьВидимостьНаСервере();
	ОбновитьНаименованиеКомандФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтотОбъект, ЗавершениеРаботы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма")
		И ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ФормаВыбораДополнительныхУсловий" Тогда
		ОбновитьДанныеОбъекта(ВыбранноеЗначение);
	Иначе
		ОбменДаннымиКлиент.ОбработчикВыбораЭлементовБазыКорреспондентаОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение);
	КонецЕсли;	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ПолеСкладПоУмолчаниюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбменДаннымиКлиент.ОбработчикВыбораЭлементовБазыКорреспондентаНачалоВыбора("СкладПоУмолчанию", "Справочник.Склады", ЭтаФорма, СтандартнаяОбработка, ПараметрыВнешнегоСоединения);
КонецПроцедуры

&НаКлиенте
Процедура ПолеНоменклатурнаяГруппаПоУмолчаниюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбменДаннымиКлиент.ОбработчикВыбораЭлементовБазыКорреспондентаНачалоВыбора("НоменклатурнаяГруппаПоУмолчанию", "Справочник.НоменклатурныеГруппы", ЭтаФорма, СтандартнаяОбработка, ПараметрыВнешнегоСоединения);
КонецПроцедуры

&НаКлиенте
Процедура ПолеСтатьяПрочихДоходовРасходов_ОприходованиеТоваровНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбменДаннымиКлиент.ОбработчикВыбораЭлементовБазыКорреспондентаНачалоВыбора("СтатьяПрочихДоходовРасходов_ОприходованиеТоваров", "Справочник.ПрочиеДоходыИРасходы", ЭтаФорма, СтандартнаяОбработка, ПараметрыВнешнегоСоединения);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура КомандаОК(Команда)
	
	ОбменДаннымиКлиент.ФормаНастройкиЗначенийПоУмолчаниюКомандаЗакрытьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокВыбранныхШаблонов(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИмяЭлементаФормыДляЗаполнения",          "ШаблоныВводаИсходныхДанных");
	ПараметрыФормы.Вставить("ИмяРеквизитаЭлементаФормыДляЗаполнения", "Шаблон");
	ПараметрыФормы.Вставить("ИмяТаблицыВыбора",                       "Справочник.ВидыДокументовВводДанныхДляРасчетаЗарплаты");
	ПараметрыФормы.Вставить("ЗаголовокФормыВыбора",                   НСтр("ru = 'Выберите шаблоны ввода исходных данных'"));
	ПараметрыФормы.Вставить("МассивВыбранныхЗначений",                СформироватьМассивВыбранныхЗначений(ПараметрыФормы));
	ПараметрыФормы.Вставить("ПараметрыВнешнегоСоединения",            ПараметрыВнешнегоСоединения);
	ПараметрыФормы.Вставить("КоллекцияФильтров",                      Неопределено);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораДополнительныхУсловий", ПараметрыФормы, ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ОбновитьДанныеОбъекта(СтруктураПараметров)
	
	ЭтаФорма[СтруктураПараметров.ИмяТаблицыДляЗаполнения].Очистить();
	
	СписокВыбранныхЗначений = ПолучитьИзВременногоХранилища(СтруктураПараметров.АдресТаблицыВоВременномХранилище);
	
	Если СписокВыбранныхЗначений.Количество() > 0 Тогда
		СписокВыбранныхЗначений.Колонки.Представление.Имя = СтруктураПараметров.ИмяКолонкиДляЗаполнения;
		СписокВыбранныхЗначений.Колонки.Идентификатор.Имя = СтруктураПараметров.ИмяКолонкиДляЗаполнения + "_Ключ";
		ЭтаФорма[СтруктураПараметров.ИмяТаблицыДляЗаполнения].Загрузить(СписокВыбранныхЗначений);
	КонецЕсли;
	
	ОбновитьНаименованиеКомандФормы();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаименованиеКомандФормы()
	
	////Обновим заголовок выбранных шаблонов ввода исходных данных
	Если ШаблоныВводаИсходныхДанных.Количество() > 0 Тогда
		
		ВыбранныеШаблоны = ШаблоныВводаИсходныхДанных.Выгрузить().ВыгрузитьКолонку("Шаблон");
		НовыйЗаголовокШаблоны = СтрСоединить(ВыбранныеШаблоны, ",");
		
	Иначе
		
		НовыйЗаголовокШаблоны = НСтр("ru = 'Выбрать шаблоны ввода исходных данных'");
		
	КонецЕсли;
	
	Элементы.ОткрытьСписокВыбранныхШаблонов.Заголовок = НовыйЗаголовокШаблоны;
	
КонецПроцедуры

&НаСервере
Функция СформироватьМассивВыбранныхЗначений(ПараметрыФормы)
	
	Возврат ЭтаФорма[ПараметрыФормы.ИмяЭлементаФормыДляЗаполнения].Выгрузить(,ПараметрыФормы.ИмяРеквизитаЭлементаФормыДляЗаполнения + "_Ключ").ВыгрузитьКолонку(ПараметрыФормы.ИмяРеквизитаЭлементаФормыДляЗаполнения + "_Ключ");
	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	#Область ГруппаДатаЗапретаРедактированияДанных
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаДатаЗапретаРедактированияДанных",
		"Видимость",
		ПолучитьФункциональнуюОпцию("ИспользоватьДатыЗапретаИзменения"));
	#КонецОбласти
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаНоменклатурнаяГруппаПоУмолчанию",
		"Видимость",
		Не (ВариантНастройки = "ОбменУП2ЗУП3"));
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаСтатьяПрочихДоходовРасходовПоУмолчанию",
		"Видимость",
		Не (ВариантНастройки = "ОбменУП2ЗУП3"));
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаСкладПоУмолчанию",
		"Видимость",
		Не (ВариантНастройки = "ОбменУП2ЗУП3"));
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаШаблоныВводаИсходныхДанных",
		"Видимость",
		ВариантНастройки = "ОбменУП2ЗУП3");
	
КонецПроцедуры

#КонецОбласти
