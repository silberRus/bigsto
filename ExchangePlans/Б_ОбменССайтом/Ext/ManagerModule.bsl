

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПоЗаполненияСоответствийПоУмолчанию

Функция ЗаполнениеСоответствийЗагружаемыхДокументовПоУмолчанию() Экспорт
	
	ТзнДок		= Новый ТаблицаЗначений;
	ТзнДок.Колонки.Добавить("Документ");
	ТзнДок.Колонки.Добавить("СинонимДокумента");
	ТзнДок.Колонки.Добавить("ВидДокумента");
	ТзнДок.Колонки.Добавить("НумерацияДокументов");
	ТзнДок.Колонки.Добавить("ДатаДокументов");
	ТзнДок.Колонки.Добавить("ДействияСОтмененнымиДокументами");
	ТзнДок.Колонки.Добавить("РежимЗаписиДокументов");
	
	ТзнШапки 	= Новый ТаблицаЗначений;
	ТзнШапки.Колонки.Добавить("Документ");
	ТзнШапки.Колонки.Добавить("ТипДанных");
	ТзнШапки.Колонки.Добавить("Значение");
	ТзнШапки.Колонки.Добавить("СинонимРеквизита1С");
	ТзнШапки.Колонки.Добавить("НаименованиеРеквизита1С");
	
	ТзнТЧ 		= Новый ТаблицаЗначений;
	ТзнТЧ.Колонки.Добавить("Документ");
	ТзнТЧ.Колонки.Добавить("ТабличнаяЧасть");
	ТзнТЧ.Колонки.Добавить("ПолеXML");
	ТзнТЧ.Колонки.Добавить("ТипДанных");
	ТзнТЧ.Колонки.Добавить("Значение");
	ТзнТЧ.Колонки.Добавить("СинонимРеквизита1С");
	ТзнТЧ.Колонки.Добавить("НаименованиеРеквизита1С");
	
	мДокументы = Новый Массив;
	мДокументы.Добавить("ЗаказКлиента");
	мДокументы.Добавить("ПриходныйКассовыйОрдер");
	мДокументы.Добавить("ОперацияПоПлатежнойКарте");
	мДокументы.Добавить("ПоступлениеБезналичныхДенежныхСредств");
	мДокументы.Добавить("РеализацияТоваровУслуг");
	
	Для каждого Документ из мДокументы Цикл
		НайденныеСтроки = ТзнДок.НайтиСтроки(Новый Структура("Документ",Документ));
		
		Если НайденныеСтроки.Количество() = 0 тогда
			
			НоваяСтрока = ТзнДок.Добавить();
			НоваяСтрока.Документ 			= Документ;
			НоваяСтрока.СинонимДокумента 	= Метаданные.Документы[Документ].Синоним;
			
			Если Документ = "ЗаказКлиента" тогда
				НоваяСтрока.ВидДокумента 		= "Заказ товара";
			ИначеЕсли Документ = "РеализацияТоваровУслуг" тогда
				НоваяСтрока.ВидДокумента 		= "Отпуск товара";
			ИначеЕсли Документ = "ПриходныйКассовыйОрдер" тогда
				НоваяСтрока.ВидДокумента 		= "Выплата наличных денег";
			ИначеЕсли Документ = "ОперацияПоПлатежнойКарте" тогда
				НоваяСтрока.ВидДокумента 		= "Эквайринговая операция";
			ИначеЕсли Документ = "ПоступлениеБезналичныхДенежныхСредств" тогда
				НоваяСтрока.ВидДокумента 		= "Выплата безналичных денег";				
			КонецЕсли;
			
			НоваяСтрока.НумерацияДокументов 			= "Автоматически";
			НоваяСтрока.ДатаДокументов 					= "С сайта";
			НоваяСтрока.ДействияСОтмененнымиДокументами = "Помечать на удаление";
			НоваяСтрока.РежимЗаписиДокументов 			= "Только записывать документы";
			
		КонецЕсли;
		
		Если Документ = "ЗаказКлиента" тогда 
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Дата"						, "Дата"					, "Из поля XML документа"	, "Дата с сайта с учетом настройки обмена");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_Идентификатор"			, "Идентификатор битрикс"	, "Из поля XML документа"	, "Ид с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_ДатаДокумента"			, "Дата документа Битрикс"	, "Из поля XML документа"	, "Дата с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_НомерВерсии"			, "Номер версии Битрикс"	, "Из поля XML документа"	, "Номер версии с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ПометкаУдаления"			, "Пометка удаления"		, "Из поля XML документа"	, "Пометка удаления");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Комментарий"				, "Комментарий"				, "Из поля XML документа"	, "Комментарий");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Организация"				, "Организация"				, "Фиксированное значение"	, Справочники.Организации.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "БанковскийСчет"			, "Банковский счет"			, "Из поля XML документа"	, "Банковский счет");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Приоритет"				, "Приоритет"				, "Из поля XML документа"	, "Приоритет");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Контрагент"				, "Контрагент"				, "Из поля XML документа"	, "Контрагент");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Партнер"					, "Партнер"					, "Из поля XML документа"	, "Партнер");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Соглашение"				, "Соглашение"				, "Фиксированное значение"	, Справочники.СоглашенияСКлиентами.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Склад"					, "Склад"					, "Из поля XML документа"	, "Склад");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "АдресДоставки"			, "Адрес доставки"			, "Из поля XML документа"	, "Адрес доставки");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "АдресДоставкиЗначенияПолей", "Адрес доставки значения полей", "Из поля XML документа"	, "Адрес доставки значения полей");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ГрафикОплаты"				, "График оплаты"			, "Из поля XML документа"	, "График оплаты");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Менеджер"					, "Менеджер"				, "Из поля XML документа"	, "Менеджер");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Статус"					, "Статус"					, "Из поля XML документа"	, "Статус");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ХозяйственнаяОперация"	, "Операция"				, "Из поля XML документа"	, "Операция");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "НалогообложениеНДС"		, "Налогообложение"			, "Из поля XML документа"	, "Налогообложение НДС");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ЦенаВключаетНДС"			, "Цена включает НДС"		, "Из поля XML документа"	, "Цена включает НДС");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Валюта"					, "Валюта"					, "Из поля XML документа"	, "Валюта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Касса"					, "Касса"					, "Из поля XML документа"	, "Касса");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СуммаДокумента"			, "Сумма"					, "Из поля XML документа"	, "Сумма");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ПорядокОплаты"			, "Оплата"					, "Из поля XML документа"	, "Порядок оплаты");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ФормаОплаты"				, "Форма оплаты"			, "Из поля XML документа"	, "Форма оплаты");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "НомерПоДаннымКлиента"		, "Номер по данным клиента"	, "Из поля XML документа"	, "Номер с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ДатаПоДаннымКлиента"		, "Дата по данным клиента"	, "Из поля XML документа"	, "Дата с сайта");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СпособДоставки"			, "Способ доставки"			, "Из поля XML документа"	, "Способ доставки");
			//////////////////
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Номенклатура"		, "Номенклатура"		, "Из поля XML документа", "Номенклатура");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Содержание"		, "Содержание"			, "Из поля XML документа", "Наименование номенклатуры");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Характеристика"	, "Характеристика"		, "Из поля XML документа", "Характеристика");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "СтавкаНДС"			, "СтавкаНДС"			, "Из поля XML документа", "Ставка НДС");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Количество"		, "Количество"			, "Из поля XML документа", "Количество");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "КоличествоУпаковок", "Количество упаковок"	, "Из поля XML документа", "Количество упаковок");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Упаковка"			, "Упаковка"			, "Из поля XML документа", "Упаковка");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ВариантОбеспечения", "Вариант обеспечения"	, "Из поля XML документа", "Вариант обеспечения");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Цена"				, "Цена"				, "Из поля XML документа", "Цена");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Сумма"				, "Сумма позиции"		, "Из поля XML документа", "Сумма позиции");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Отменено"			, "Отменено"			, "Из поля XML документа", "Отменено");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ПричинаОтмены"		, "Причина отмены"		, "Из поля XML документа", "Причина отмены");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ПроцентРучнойСкидки", "% руч."				, "Из поля XML документа", "Процент ручной скидки");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ДатаОтгрузки"		, "Дата отгрузки"		, "Из поля XML документа",  "Дата отгрузки");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "КодСтроки"			, "Код строки"			, "Из поля XML документа",  "Код строки");
			
		ИначеЕсли Документ = "ПриходныйКассовыйОрдер" тогда  
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Дата"						, "Дата"					, "Из поля XML документа"	, "Дата с сайта с учетом настройки обмена");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_Идентификатор"			, "Идентификатор битрикс"	, "Из поля XML документа"	, "Ид с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_ДатаДокумента"			, "Дата документа Битрикс"	, "Из поля XML документа"	, "Дата с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_НомерВерсии"			, "Номер версии Битрикс"	, "Из поля XML документа"	, "Номер версии с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ПометкаУдаления"			, "Пометка удаления"		, "Из поля XML документа"	, "Пометка удаления");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Комментарий"				, "Комментарий"				, "Из поля XML документа"	, "Комментарий");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ХозяйственнаяОперация"	, "Операция"				, "Фиксированное значение"	, Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Организация"				, "Организация"				, "Фиксированное значение"	, Справочники.Организации.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "БанковскийСчет"			, "Банковский счет"			, "Из поля XML документа"	, "Банковский счет");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СтатьяДвиженияДенежныхСредств", "Статья ДДС"			, "Фиксированное значение"	, Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Касса"					, "Касса"					, "Из поля XML документа"	, "Касса");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ДокументОснование"		, "Документ основание"		, "Из поля XML документа"	, "Основание");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СуммаДокумента"			, "Сумма документа"			, "Из поля XML документа"	, "Сумма");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Валюта"					, "Валюта"					, "Из поля XML документа"	, "Валюта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Контрагент"				, "Контрагент"				, "Из поля XML документа"	, "Контрагент");
			
			//////////////////
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СтатьяДвиженияДенежныхСредств", "Статья ДДС"	, "Фиксированное значение"	, Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента);
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Заказ"				, "Объект расчетов"		, "Из поля XML документа"	, "Основание");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Сумма"				, "Сумма"				, "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СуммаВзаиморасчетов"	, "Сумма взаиморасчетов", "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "ВалютаВзаиморасчетов", "Валюта взаиморасчетов", "Из поля XML документа"	, "Валюта");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Подразделение"		, "Подразделение"		, "Фиксированное значение"	, Справочники.СтруктураПредприятия.ПустаяСсылка());
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Партнер"				, "Партнер"				, "Из поля XML документа"	, "Партнер");
			
		ИначеЕсли Документ = "ОперацияПоПлатежнойКарте" тогда  
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Дата"						, "Дата"					, "Из поля XML документа"	, "Дата с сайта с учетом настройки обмена");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_Идентификатор"			, "Идентификатор битрикс"	, "Из поля XML документа"	, "Ид с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_ДатаДокумента"			, "Дата документа Битрикс"	, "Из поля XML документа"	, "Дата с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_НомерВерсии"			, "Номер версии Битрикс"	, "Из поля XML документа"	, "Номер версии с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ПометкаУдаления"			, "Пометка удаления"		, "Из поля XML документа"	, "Пометка удаления");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Организация"				, "Организация"				, "Фиксированное значение"	, Справочники.Организации.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ХозяйственнаяОперация"	, "Операция"				, "Фиксированное значение"	, Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Валюта"					, "Валюта"					, "Из поля XML документа"	, "Валюта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Контрагент"				, "Контрагент"				, "Из поля XML документа"	, "Контрагент");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СуммаДокумента"			, "Сумма документа"			, "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ЭквайринговыйТерминал"	, "Эквайринговый терминал"	, "Из поля XML документа"	, "Эквайринговый терминал");
			
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "НомерПлатежнойКарты"		, "Номер платежной карты"	, "Фиксированное значение"	, "");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ОплатаВыполнена"			, "Оплата выполнена"		, "Фиксированное значение"	, Истина);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "КодАвторизации"			, "Код авторизации"			, "Фиксированное значение"	, "");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Комментарий"				, "Комментарий"				, "Из поля XML документа"	, "Комментарий");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СтатьяДвиженияДенежныхСредств", "Статья ДДС"			, "Фиксированное значение"	, Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента);
			
			//////////////////
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Партнер"				, "Партнер"				, "Из поля XML документа"	, "Партнер");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СтатьяДвиженияДенежныхСредств", "Статья ДДС"	, "Фиксированное значение"	, Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента);
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "ОснованиеПлатежа"	, "Основание платежа"	, "Из поля XML документа"	, "Основание");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Заказ"				, "Объект расчетов"		, "Из поля XML документа"	, "Основание");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Сумма"				, "Сумма"				, "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СуммаВзаиморасчетов"	, "Сумма взаиморасчетов", "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "ВалютаВзаиморасчетов", "Валюта взаиморасчетов", "Из поля XML документа"	, "Валюта");
			
		ИначеЕсли Документ = "ПоступлениеБезналичныхДенежныхСредств" тогда  
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Дата"						, "Дата"					, "Из поля XML документа"	, "Дата с сайта с учетом настройки обмена");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_Идентификатор"			, "Идентификатор битрикс"	, "Из поля XML документа"	, "Ид с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_ДатаДокумента"			, "Дата документа Битрикс"	, "Из поля XML документа"	, "Дата с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_НомерВерсии"			, "Номер версии Битрикс"	, "Из поля XML документа"	, "Номер версии с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ПометкаУдаления"			, "Пометка удаления"		, "Из поля XML документа"	, "Пометка удаления");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Организация"				, "Организация"				, "Фиксированное значение"	, Справочники.Организации.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ХозяйственнаяОперация"	, "Операция"				, "Фиксированное значение"	, Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Валюта"					, "Валюта"					, "Из поля XML документа"	, "Валюта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Контрагент"				, "Контрагент"				, "Из поля XML документа"	, "Контрагент");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СуммаДокумента"			, "Сумма документа"			, "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "БанковскийСчет"			, "Банковский счет"			, "Из поля XML документа"	, "Банковский счет");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "БанковскийСчетКонтрагента", "Банковский счет контрагента", "Из поля XML документа", "Банковский счет контрагента");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ТипПлатежногоДокумента"	, "Тип платежного документа", "Фиксированное значение"	, Перечисления.ТипыПлатежныхДокументов.ПлатежноеПоручение);
			
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Комментарий"				, "Комментарий"				, "Из поля XML документа"	, "Комментарий");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СтатьяДвиженияДенежныхСредств", "Статья ДДС"			, "Фиксированное значение"	, Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента);
			
			//////////////////
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Партнер"				, "Партнер"				, "Из поля XML документа"	, "Партнер");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СтатьяДвиженияДенежныхСредств", "Статья ДДС"	, "Фиксированное значение"	, Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента);
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "ОснованиеПлатежа"	, "Основание платежа"	, "Из поля XML документа"	, "Основание");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Заказ"				, "Объект расчетов"		, "Из поля XML документа"	, "Основание");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "Сумма"				, "Сумма"				, "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "СуммаВзаиморасчетов"	, "Сумма взаиморасчетов", "Из поля XML документа"	, "Сумма");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "РасшифровкаПлатежа", "", "ВалютаВзаиморасчетов", "Валюта взаиморасчетов", "Из поля XML документа"	, "Валюта");
			
		ИначеЕсли Документ = "РеализацияТоваровУслуг" тогда  
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Дата"						, "Дата"						, "Из поля XML документа"	, "Дата с сайта с учетом настройки обмена");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_Идентификатор"			, "Идентификатор битрикс"		, "Из поля XML документа"	, "Ид с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_ДатаДокумента"			, "Дата документа Битрикс"		, "Из поля XML документа"	, "Дата с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Б_НомерВерсии"			, "Номер версии Битрикс"		, "Из поля XML документа"	, "Номер версии с сайта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ПометкаУдаления"			, "Пометка удаления"			, "Из поля XML документа"	, "Пометка удаления");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Комментарий"				, "Комментарий"				, "Из поля XML документа"	, "Комментарий");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Организация"				, "Организация"				, "Фиксированное значение"	, Справочники.Организации.ПустаяСсылка());
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "БанковскийСчетОрганизации", "Банковский счет организации", "Из поля XML документа", "Банковский счет");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Соглашение"				, "Соглашение"				, "Фиксированное значение"	, Справочники.СоглашенияСКлиентами.ПустаяСсылка());
 			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Статус"					, "Статус"					, "Из поля XML документа"	, "Статус");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ХозяйственнаяОперация"	, "Операция"				, "Из поля XML документа"	, "Операция");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "НалогообложениеНДС"		, "Налогообложение"			, "Из поля XML документа"	, "Налогообложение НДС");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ЦенаВключаетНДС"			, "Цена включает НДС"		, "Из поля XML документа"	, "Цена включает НДС");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Валюта"					, "Валюта"					, "Из поля XML документа"	, "Валюта");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ВалютаВзаиморасчетов"		, "ВалютаВзаиморасчетов"	, "Из поля XML документа"	, "Валюта");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Контрагент"				, "Контрагент"				, "Из поля XML документа"	, "Контрагент");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Партнер"					, "Партнер"					, "Из поля XML документа"	, "Партнер");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Склад"					, "Склад"					, "Из поля XML документа"	, "Склад");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "АдресДоставки"			, "Адрес доставки"			, "Из поля XML документа"	, "Адрес доставки");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "АдресДоставкиЗначенияПолей", "Адрес доставки значения полей", "Из поля XML документа"	, "Адрес доставки значения полей");
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "Менеджер"					, "Менеджер"				, "Из поля XML документа"	, "Менеджер");
			
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ДатаПлатежа"				, "Дата платежа"			, "Из поля XML документа"	, "Дата платежа");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ЗаказКлиента"				, "Заказ клиента"			, "Из поля XML документа"	, "Основание");
			
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "РеализацияПоЗаказам"		, "Реализация по заказам"		, "Фиксированное значение"	, Истина);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ВариантОформленияПродажи"	, "Вариант оформления продажи"	, "Фиксированное значение"	, Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг);
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "СпособДоставки"			, "Способ доставки"			, "Фиксированное значение"		, Перечисления.СпособыДоставки.ДоКлиента);
			
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ПорядокОплаты"			, "Оплата"					, "Из поля XML документа"	, "Порядок оплаты");
			ЗаполнениеСтрокиДокументаПоУмолчанию(ТзнШапки, Документ, "ФормаОплаты"				, "Форма оплаты"			, "Из поля XML документа"	, "Форма оплаты");
			
			
			//////////////////
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Номенклатура"		, "Номенклатура"		, "Из поля XML документа", "Номенклатура");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Характеристика"	, "Характеристика"		, "Из поля XML документа", "Характеристика");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "СтавкаНДС"			, "СтавкаНДС"			, "Из поля XML документа", "Ставка НДС");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Количество"		, "Количество"			, "Из поля XML документа", "Количество");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "КоличествоУпаковок", "Количество упаковок"	, "Из поля XML документа", "Количество упаковок");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Упаковка"			, "Упаковка"			, "Из поля XML документа", "Упаковка");
			
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Цена"				, "Цена"				, "Из поля XML документа", "Цена");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "Сумма"				, "Сумма позиции"		, "Из поля XML документа", "Сумма");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ЗаказКлиента"		, "Заказ клиента"		, "Из поля XML документа", "Основание");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "КодСтроки"			, "Код строки"			, "Из поля XML документа",  "Код строки");
			ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТзнТЧ, Документ, "Товары", "Товары", "ПроцентРучнойСкидки", "% руч."				, "Из поля XML документа", "Процент ручной скидки");
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("ДокументыЗагрузки",ТзнДок);
	Результат.Вставить("ВсеСоответствияТабличныхЧастейДокументов",ТзнТЧ);
	Результат.Вставить("ВсеСоответствияШапокДокументов",ТзнШапки);
	
	Возврат  Результат;
	
КонецФункции

Процедура ЗаполнениеСтрокиТЧДокументаПоУмолчанию(ТаблицаЗначений, Документ, ТабличнаяЧасть, ПолеXML, НаименованиеРеквизита1С, СинонимРеквизита1С, ТипДанных, Значение) Экспорт
	
	НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("Документ, ПолеXML, НаименованиеРеквизита1С", Документ, ТабличнаяЧасть, НаименованиеРеквизита1С));
	
	Если НайденныеСтроки.Количество() = 0 тогда
		НоваяСтрока = ТаблицаЗначений.Добавить();
		
		НоваяСтрока.Документ 		= Документ;
		НоваяСтрока.ТабличнаяЧасть	= ТабличнаяЧасть;
		НоваяСтрока.ПолеXML 		= ПолеXML;
		
		НоваяСтрока.ТипДанных 		= ТипДанных;
		НоваяСтрока.Значение 		= Значение;
		
		НоваяСтрока.СинонимРеквизита1С 		= СинонимРеквизита1С;
		НоваяСтрока.НаименованиеРеквизита1С = НаименованиеРеквизита1С;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнениеСтрокиДокументаПоУмолчанию(ТаблицаЗначений, Документ, НаименованиеРеквизита1С, СинонимРеквизита1С, ТипДанных, Значение) Экспорт
	
	НайденныеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("Документ, НаименованиеРеквизита1С", Документ, НаименованиеРеквизита1С));
	
	Если НайденныеСтроки.Количество() = 0 тогда
		НоваяСтрока = ТаблицаЗначений.Добавить();
		
		НоваяСтрока.Документ 		= Документ;
		
		НоваяСтрока.ТипДанных 		= ТипДанных;
		НоваяСтрока.Значение 		= Значение;
		
		НоваяСтрока.СинонимРеквизита1С 		= СинонимРеквизита1С;
		НоваяСтрока.НаименованиеРеквизита1С = НаименованиеРеквизита1С;
		
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////
Функция ЗаполнениеПолейСоответствийКонтрагентовПоУмолчанию(ТипКонтрагента) Экспорт
	
	спкТипов = Новый Массив;
	спкТипов.Добавить("Контрагент");
	спкТипов.Добавить("Партнер");
	
	ТзнКонтактнойИнформации = Новый ТаблицаЗначений;
	ТзнКонтактнойИнформации.Колонки.Добавить("НаименованиеПоля");
	ТзнКонтактнойИнформации.Колонки.Добавить("ВидКонтактнойИнформации");
	ТзнКонтактнойИнформации.Колонки.Добавить("Тип");
	
	Если ТипКонтрагента = "ЮрЛицо" тогда
		
		спкПолей = Новый Массив;
		спкПолей.Добавить("ЮридическийАдрес");
		спкПолей.Добавить("Адрес");
		
		Для Каждого ТекПоле из спкПолей Цикл
			Для Каждого ТекТип из спкТипов Цикл
			
				стрОтбора = Новый Структура;
				стрОтбора.Вставить("НаименованиеПоля", ТекПоле);
				стрОтбора.Вставить("Тип", ТекТип);
						  
				НайденныеСтроки = ТзнКонтактнойИнформации.НайтиСтроки(стрОтбора);
				
				Если НайденныеСтроки.количество() = 0 тогда
				
					Если ТекПоле = "ЮридическийАдрес" тогда
						
						Если ТекТип = "Контрагент" тогда
							
							НоваяСтрока = ТзнКонтактнойИнформации.Добавить();	
							НоваяСтрока.НаименованиеПоля 		= ТекПоле;
							НоваяСтрока.Тип 					= ТекТип;
							НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
							
						КонецЕсли;
						
					ИначеЕсли ТекПоле = "Адрес" тогда
						
						Если ТекТип = "Контрагент" тогда
							
							НоваяСтрока = ТзнКонтактнойИнформации.Добавить();	
							НоваяСтрока.НаименованиеПоля 		= ТекПоле;
							НоваяСтрока.Тип 					= ТекТип;
							НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
								
							НоваяСтрока = ТзнКонтактнойИнформации.Добавить();	
							НоваяСтрока.НаименованиеПоля 		= ТекПоле;
							НоваяСтрока.Тип 					= ТекТип;
							НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента ;
							
						Иначе
							
							НоваяСтрока = ТзнКонтактнойИнформации.Добавить();	
							НоваяСтрока.НаименованиеПоля 		= ТекПоле;
							НоваяСтрока.Тип 					= ТекТип;
							НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.АдресПартнера;
							
						КонецЕсли;
						
					КонецЕсли;
				
				КонецЕсли;
			
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		
		спкПолей = Новый Массив;
		спкПолей.Добавить("АдресРегистрации");
		спкПолей.Добавить("Адрес");
		
		Для Каждого ТекПоле из спкПолей Цикл
			Для Каждого ТекТип из спкТипов Цикл
				
				стрОтбора = Новый Структура;
				стрОтбора.Вставить("НаименованиеПоля", ТекПоле);
				стрОтбора.Вставить("Тип", ТекТип);
						  
				НайденныеСтроки = ТзнКонтактнойИнформации.НайтиСтроки(стрОтбора);
				
				Если НайденныеСтроки.количество() = 0 тогда
					
					Если ТекТип = "Контрагент" тогда
						
						Если ТекПоле = "Адрес" тогда
							НоваяСтрока = ТзнКонтактнойИнформации.Добавить();	
							НоваяСтрока.НаименованиеПоля 		= ТекПоле;
							НоваяСтрока.Тип 			 		= ТекТип;
							НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
						ИначеЕсли ТекПоле = "АдресРегистрации" тогда
							НоваяСтрока = ТзнКонтактнойИнформации.Добавить();	
							НоваяСтрока.НаименованиеПоля 		= ТекПоле;
							НоваяСтрока.Тип 			 		= ТекТип;
							НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента;
						КонецЕсли;
						
					Иначе
						
						Если ТекПоле = "Адрес" тогда
							НоваяСтрока = ТзнКонтактнойИнформации.Добавить();	
							НоваяСтрока.НаименованиеПоля 		= ТекПоле;
							НоваяСтрока.Тип 			 		= ТекТип;
							НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.АдресПартнера;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
			
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТзнКонтактнойИнформации;
	
КонецФункции

/////////////////////////////////////////////////////////////////////////////
Функция ЗаполнениеПолейОсновныхСоответствийНоменклатурыПоУмолчанию() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив);   
	
	СоответствиеОсновныхРеквизитовНоменклатуры = Новый ТаблицаЗначений;
	СоответствиеОсновныхРеквизитовНоменклатуры.Колонки.Добавить("НаименованиеПоля"	, ОписаниеТиповС);
	СоответствиеОсновныхРеквизитовНоменклатуры.Колонки.Добавить("НаименованиеПоля1С", ОписаниеТиповС);
	
	спкПолей = Новый Массив;
	спкПолей.Добавить("Штрихкод");
	спкПолей.Добавить("Артикул");
	спкПолей.Добавить("Наименование");
	спкПолей.Добавить("Описание");
	спкПолей.Добавить("Страна");
	спкПолей.Добавить("Вес");
	
	Для Каждого ТекЭлемент из спкПолей Цикл
		
		НайденнаяСтрока = СоответствиеОсновныхРеквизитовНоменклатуры.Найти(ТекЭлемент, "НаименованиеПоля");
		
		Если НайденнаяСтрока = Неопределено Тогда
			
			НоваяСтрока = СоответствиеОсновныхРеквизитовНоменклатуры.Добавить();	
			
			НоваяСтрока.НаименованиеПоля 	= ТекЭлемент;
			
			Если ТекЭлемент = "Артикул" тогда
				НоваяСтрока.НаименованиеПоля1С = "Артикул";
			ИначеЕсли ТекЭлемент = "Наименование" тогда
				НоваяСтрока.НаименованиеПоля1С = "Наименование";
			ИначеЕсли ТекЭлемент = "Описание" тогда
				НоваяСтрока.НаименованиеПоля1С = "Описание";
			ИначеЕсли ТекЭлемент = "Вес" тогда
				НоваяСтрока.НаименованиеПоля1С = "Вес";
			ИначеЕсли ТекЭлемент = "Штрихкод" тогда
				НоваяСтрока.НаименованиеПоля1С = "Штрихкод";
			КонецЕсли;
		КонецЕсли;
			
	КонецЦикла;
	

	Возврат СоответствиеОсновныхРеквизитовНоменклатуры;
	
КонецФункции

Функция ЗаполнениеПолейДополнительныхСоответствийНоменклатурыПоУмолчанию() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив);   
	
	СоответствиеДополнительныхРеквизитовНоменклатуры = Новый ТаблицаЗначений;
	СоответствиеДополнительныхРеквизитовНоменклатуры.Колонки.Добавить("НаименованиеПоля"	, ОписаниеТиповС);
	СоответствиеДополнительныхРеквизитовНоменклатуры.Колонки.Добавить("НаименованиеПоля1С"	, ОписаниеТиповС);
	
	спкПолей = Новый Массив;
	спкПолей.Добавить("Полное наименование");
	спкПолей.Добавить("Код");
	спкПолей.Добавить("ОписаниеВФорматеHTML");
	спкПолей.Добавить("Планируемая дата поступления");
	
	Для Каждого ТекЭлемент из спкПолей Цикл
		
		НайденнаяСтрока = СоответствиеДополнительныхРеквизитовНоменклатуры.Найти(ТекЭлемент, "НаименованиеПоля");
		
		Если НайденнаяСтрока = Неопределено Тогда
			
			НоваяСтрока = СоответствиеДополнительныхРеквизитовНоменклатуры.Добавить();	
			
			НоваяСтрока.НаименованиеПоля 	= ТекЭлемент;
			
			Если ТекЭлемент = "Полное наименование" тогда
				НоваяСтрока.НаименованиеПоля1С = "Полное наименование";
			ИначеЕсли ТекЭлемент = "Код" тогда
				НоваяСтрока.НаименованиеПоля1С = "Код";
			ИначеЕсли ТекЭлемент = "Планируемая дата поступления" тогда
				НоваяСтрока.НаименованиеПоля1С = "Планируемая дата поступления";  				
			КонецЕсли;
		КонецЕсли;
			
	КонецЦикла;

	Возврат СоответствиеДополнительныхРеквизитовНоменклатуры;
	
КонецФункции

#КонецОбласти


#Область ПрочиеПроцедурыИФункции

Функция УзелОбменаЭтойИБСервер() Экспорт
	
	//метод не работает как надо
	//ЭтотУзел = ПланыОбмена.Б_ОбменССайтом.ЭтотУзел();
	
	ПредопределенныйУзел = Планыобмена.Б_ОбменССайтом.ПустаяСсылка();
	
	Выборка = ПланыОбмена.Б_ОбменССайтом.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтотУзел тогда
			ПредопределенныйУзел = Выборка.Ссылка;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПредопределенныйУзел;
	
КонецФункции

// Возвращает признак использования плана обмена для организации обмена в модели сервиса.
//  Если признак установлен, то в сервисе можно включить обмен данными
//  с использованием этого плана обмена.
//  Если признак не установлен, то план обмена будет использоваться только 
//  для обмена в локальном режиме работы конфигурации.
// 
Функция ПланОбменаИспользуетсяВМоделиСервиса() Экспорт
	
	Возврат Ложь;
	
КонецФункции

Процедура ЗаполнитьСтруктуруИзмененийДляУзла(УзелПланаОбмена, СтруктураВозврата) Экспорт

	СтруктураВозврата.Вставить("Товары", Новый Массив);
	СтруктураВозврата.Вставить("Свойства", Новый Массив);
	СтруктураВозврата.Вставить("Заказы", Новый Массив);
	СтруктураВозврата.Вставить("Отгрузки", Новый Массив);
	СтруктураВозврата.Вставить("ПКО", Новый Массив);
	СтруктураВозврата.Вставить("ОплатаПоПлатежнойКарте", Новый Массив);
	СтруктураВозврата.Вставить("ОплатаПоБезналу", Новый Массив);
	СтруктураВозврата.Вставить("ФайлыНоменклатуры", Новый Массив);
	СтруктураВозврата.Вставить("Контрагенты", Новый Массив);
	СтруктураВозврата.Вставить("Партнеры", Новый Массив);
	СтруктураВозврата.Вставить("Файлы", Новый Массив);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	НоменклатураИзменения.Ссылка,
		|	""Товары"" КАК ТипСсылки
		|ИЗ
		|	Справочник.Номенклатура.Изменения КАК НоменклатураИзменения
		|ГДЕ
		|	НоменклатураИзменения.Узел = &Узел
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|
		|ВЫБРАТЬ
		|	НоменклатураПрисоединенныеФайлыИзменения.Ссылка,
		|	""ФайлыНоменклатуры""
		|ИЗ
		|	Справочник.НоменклатураПрисоединенныеФайлы.Изменения КАК НоменклатураПрисоединенныеФайлыИзменения
		|ГДЕ
		|	НоменклатураПрисоединенныеФайлыИзменения.Узел = &Узел
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Файлы.Ссылка,
		|	""Файлы""
		|ИЗ
		|	Справочник.Файлы.Изменения КАК Файлы
		|ГДЕ
		|	Файлы.Узел = &Узел
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Партнеры.Ссылка,
		|	""Партнеры""
		|ИЗ
		|	Справочник.Партнеры.Изменения КАК Партнеры
		|ГДЕ
		|	Партнеры.Узел = &Узел
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Контрагенты.Ссылка,
		|	""Контрагенты""
		|ИЗ
		|	Справочник.Контрагенты.Изменения КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Узел = &Узел
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Свойства.Ссылка,
		|	""Свойства""
		|ИЗ
		|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Изменения КАК Свойства
		|ГДЕ
		|	Свойства.Узел = &Узел
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказыИзменения.Ссылка,
		|	""Заказы""
		|ИЗ
		|	Документ.ЗаказКлиента.Изменения КАК ЗаказыИзменения
		|ГДЕ
		|	ЗаказыИзменения.Узел = &Узел
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументИзменения.Ссылка,
		|	""Отгрузки""
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Изменения КАК ДокументИзменения
		|ГДЕ
		|	ДокументИзменения.Узел = &Узел
		
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументИзменения.Ссылка,
		|	""ПКО""
		|ИЗ
		|	Документ.ПриходныйКассовыйОрдер.Изменения КАК ДокументИзменения
		|ГДЕ
		|	ДокументИзменения.Узел = &Узел
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументИзменения.Ссылка,
		|	""ОплатаПоПлатежнойКарте""
		|ИЗ
		|	Документ.ОперацияПоПлатежнойКарте.Изменения КАК ДокументИзменения
		|ГДЕ
		|	ДокументИзменения.Узел = &Узел
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументИзменения.Ссылка,
		|	""ОплатаПоБезналу""
		|ИЗ
		|	Документ.ПоступлениеБезналичныхДенежныхСредств.Изменения КАК ДокументИзменения
		|ГДЕ
		|	ДокументИзменения.Узел = &Узел");

	Запрос.УстановитьПараметр("Узел", УзелПланаОбмена);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураВозврата[Выборка.ТипСсылки].Добавить(Выборка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьСписокСвойств() Экспорт
	
	СписокСвойств = Новый Массив;
	
	Выборка = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НЕ (Выборка.ПометкаУдаления ИЛИ Выборка.Б_Идентификатор = "СвойствоЗаказа") тогда
			СписокСвойств.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокСвойств;
	
КонецФункции

Функция ОбновитьСвойстваВТаблицеЗначений(тзнТекущихСвойств) Экспорт
	
	тзнОбновленныхСвойств = тзнТекущихСвойств.СкопироватьКолонки();
	
	МассивСвойств 	= ПолучитьСписокСвойств();
	
	Для каждого Свойство из МассивСвойств Цикл
		
		НайденнаяСтрока = тзнТекущихСвойств.Найти(свойство, "Свойство");
		
		Если НайденнаяСтрока = Неопределено тогда
			
			НовСтр =  тзнОбновленныхСвойств.Добавить();
			НовСтр.Свойство 		= свойство;
			НовСтр.ВлияетНаЦену 	= Ложь;
			НовСтр.ВыгружатьВХИ 	= Ложь;
			НовСтр.НеВыгружатьВСвойстваПредложений 	= Ложь;
			НовСтр.НеВыгружатьВСвойстваТоваров 		= Ложь;
			
			
		Иначе
			
			НовСтр =  тзнОбновленныхСвойств.Добавить();
			НовСтр.Свойство = свойство;
			НовСтр.ВлияетНаЦену = НайденнаяСтрока.ВлияетНаЦену;
			НовСтр.ВыгружатьВХИ = НайденнаяСтрока.ВыгружатьВХИ;
			НовСтр.НеВыгружатьВСвойстваПредложений 	= НайденнаяСтрока.НеВыгружатьВСвойстваПредложений;
			НовСтр.НеВыгружатьВСвойстваТоваров 		= НайденнаяСтрока.НеВыгружатьВСвойстваТоваров;
			
		КонецЕсли;
		
	КонецЦикла;
	
	тзнОбновленныхСвойств.Сортировать("Свойство");
	
	Возврат тзнОбновленныхСвойств;
	
КонецФункции


Функция ПолучитьЗначениеКлючаСтруктурыНастроек(СтруктураНастроек, Ключ) Экспорт
	
	Результат = Неопределено;
	
	Если СтруктураНастроек.Свойство(Ключ) тогда
		Результат = СтруктураНастроек[Ключ];
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура УстановитьЗначениеВСтруктуруНастроек(СтруктураНастроек, Ключ, Значение) Экспорт
	
	Если СтруктураНастроек.Свойство(Ключ) тогда
		СтруктураНастроек[Ключ] = Значение;	
	Иначе
		СтруктураНастроек.Вставить(Ключ, Значение);	
	КонецЕсли;
	
КонецПроцедуры




Функция ПолучитьСлужебныеДанныеССайта(Объект, ТипСоединения = "sale") Экспорт
	
	ОсновныеПараметры = Новый Структура;
	НастройкиУспешноДобавлены = Б_ОбменССайтомСервер.ДобавитьОсновныеНастройкиВПараметры(Объект, ОсновныеПараметры);
	
	НастройкиПодключения = Новый Структура;
	
	НастройкиПодключения.Вставить("ПараметрЗапросаHTTP_Инициализация", "&mode=init");
	
	ОсновныеПараметры.Вставить("НастройкиПодключения",НастройкиПодключения);	
	
	Если НЕ Б_ОбменССайтомСервер.ПолучитьНастройкиПодключения(НастройкиПодключения, ОсновныеПараметры) Тогда
		Сообщить("Не удалось получить настройки подключения. Загрузка невозможна.");
	Иначе
		
		ОтветСервера 	= "";
		Соединение 		= Неопределено;
		НастройкиПодключения = ОсновныеПараметры.НастройкиПодключения;
		
		АдресДляРаботы = НастройкиПодключения.АдресСкрипта + "?type=" + ТипСоединения; 
		
		Успешно = Б_ОбменССайтомСервер.АвторизацияВыполнена(Соединение, НастройкиПодключения, ОтветСервера, ОсновныеПараметры, ТипСоединения);
		
		Если Не Успешно Тогда
			Сообщить("Авторизация на сайт не выполнена. Загрузка невозможна.");	
			Возврат "";
		КонецЕсли;
		
		КукиИмя				= СтрПолучитьСтроку(ОтветСервера, 2);
		КукиЗначение		= СтрПолучитьСтроку(ОтветСервера, 3);
		
		Попытка
			Токен			= "&" + СтрПолучитьСтроку(ОтветСервера, 4);
		Исключение
			
			Токен = "";
			Сообщить("CSRF токен не поддерживается. Для того, чтобы поддерживался - необходимо обновить БУС.");	
			
		КонецПопытки;
		
		ЗаголовкиЗапросов	= "Cookie: " + КукиИмя + "=" + КукиЗначение;
		
		ОтветСервера = Б_ОбменССайтомСервер.ПолучитьДанныеССервера(Соединение, АдресДляРаботы + "&mode=info" + Токен + "&version=" + ОсновныеПараметры.ВерсияСхемы, ЗаголовкиЗапросов, ОсновныеПараметры);
		
		Если ОтветСервера = Неопределено Тогда 
			Сообщить("Не удалось загрузить данные с сервера.");	
			Возврат "";
			
		КонецЕсли;
		
		СтрокаCML = "";
		
		Если Лев(ОтветСервера, 2) = "PK" Тогда
			СтрокаCML = Б_ОбменССайтомСерверЗагрузкиДанных.РаспаковкаZIPАрхива(ОтветСервера);
		Иначе
			Если Лев(ОтветСервера, 5) = "<?xml" Тогда
				СтрокаCML = ОтветСервера;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаCML) Тогда
			Сообщить("Не удалось прочитать данные, загруженные с сервера.");
			Возврат "";
		КонецЕсли;
		
		Возврат СтрокаCML; 
		
	КонецЕсли;
	
	Возврат "";	
	
КонецФункции    
#КонецОбласти

#КонецЕсли


