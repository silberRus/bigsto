
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЭтоАдресВременногоХранилища(Параметры.АдресНастроекОбмена) Тогда
		
		АдресНастроекОбмена = Параметры.АдресНастроекОбмена;
		
		НастройкиОбмена 	= ПолучитьИзВременногоХранилища(АдресНастроекОбмена);
		
		КоличествоЭлементовСправочникаВПакете = ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.ПользовательскиеСправочники, "КоличествоЭлементовСправочникаВПакете");
		
		тзнПоляСправочников = ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.ПользовательскиеСправочники, "ВыгружаемыеПоляСправочников");
		
		ВыгружаемыеПоляСправочников.Загрузить(тзнПоляСправочников);
		
		тзнСправочники = тзнПоляСправочников.Скопировать();
		тзнСправочники.Свернуть("Справочник");
		ВыгружаемыеСправочники.Загрузить(тзнСправочники);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьИЗакрыть(Команда)
	
	Если ЭтаФорма.Модифицированность тогда
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, Параметры), "Были именены настройке на форме. Закрыть форму настроек без сохранения?", РежимДиалогаВопрос.ДаНет);
		
	Иначе
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЭтаФорма.Закрыть();	
    КонецЕсли;

КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура Применить(Команда)
	
	Закрыть(ПрименитьНаСервере());
	
КонецПроцедуры

&НаСервере
Функция ПрименитьНаСервере()
	
	Настройки = ПолучитьИзВременногоХранилища(АдресНастроекОбмена);
	
	Настройки.ПользовательскиеСправочники.КоличествоЭлементовСправочникаВПакете = КоличествоЭлементовСправочникаВПакете;

	Настройки.ПользовательскиеСправочники.ВыгружаемыеПоляСправочников = ВыгружаемыеПоляСправочников.Выгрузить();
	
	лАдресНастроекОбмена = ПоместитьВоВременноеХранилище(Настройки, УникальныйИдентификатор);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресНастроекОбмена"	, лАдресНастроекОбмена);

	Возврат ПараметрыФормы;
	 
КонецФункции

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

////////////////////////////////////////////////////////////////
//                                                           //
//  ПРОЦЕДУРЫ И ФУНКЦИИ ПО РАБОТЕ С П. СПРАВОЧНИКАМИ  		//
//                                                         //
////////////////////////////////////////////////////////////

&НаСервере
Функция ПолучитьСписокСправочников()
		
	ТекВыгрСправочники = ВыгружаемыеСправочники.Выгрузить(, "Справочник").ВыгрузитьКолонку("Справочник");
	
	СписокСправочников = Новый Массив;
	
	Для Каждого ТекСтр из Метаданные.Справочники Цикл
		
		Если ТекВыгрСправочники.Найти(ТекСтр.Имя) = Неопределено тогда
			СписокСправочников.Добавить(ТекСтр.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокСправочников;	
	
КонецФункции

&НаСервере
Процедура ОбновлениеПолейСправочника(пСправочник = Неопределено)
	
	Если пСправочник <> Неопределено тогда
		ТекСправочник = пСправочник; 
	Иначе
		ТекСправочник = "";	
	КонецЕсли;                            
	
	Если ТекСправочник <> Неопределено тогда
		
		НайденныеРекОбъекта = ВыгружаемыеПоляСправочников.НайтиСтроки(Новый Структура("Справочник", ТекСправочник));
		
		ВыгружаемыеПоляСправочникаФ.Очистить();
		
		Если НайденныеРекОбъекта.Количество() = 0 тогда
			
				Если ЗначениеЗаполнено(ТекСправочник) тогда
					
					ТекСпр = Метаданные.Справочники.Найти(ТекСправочник);
					
					НовСтр = ВыгружаемыеПоляСправочникаФ.Добавить();
					НовСтр.Поле = "Код";
					НовСтр = ВыгружаемыеПоляСправочникаФ.Добавить();	
					НовСтр.Поле = "Наименование";
					НовСтр = ВыгружаемыеПоляСправочникаФ.Добавить();	
					НовСтр.Поле	= "ПометкаУдаления";
					НовСтр = ВыгружаемыеПоляСправочникаФ.Добавить();	
					НовСтр.Поле	= "Владелец";
					НовСтр = ВыгружаемыеПоляСправочникаФ.Добавить();	
					НовСтр.Поле	= "Родитель";
					Для каждого ТекРек из ТекСпр.Реквизиты Цикл
						НовСтр = ВыгружаемыеПоляСправочникаФ.Добавить();	
						НовСтр.Поле = ТекРек.Имя;
					КонецЦикла;
					
				КонецЕсли;
		Иначе
			
			Для каждого ТекРек из НайденныеРекОбъекта Цикл
				НовСтр = ВыгружаемыеПоляСправочникаФ.Добавить();	
				НовСтр.Поле 				= ТекРек.Поле;
				НовСтр.Выгружаемо 			= ТекРек.Выгружаемо;
				НовСтр.ВыгружатьКакСтрока 	= ТекРек.ВыгружатьКакСтрока;
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписьПолейСправочника(пСправочник = Неопределено)
	
	Если пСправочник <> Неопределено тогда
		ТекСправочник = пСправочник; 
	Иначе
		ТекСправочник = "";	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекСправочник) тогда
			
		ВремТаб = Новый ТаблицаЗначений;
		ВремТаб = ВыгружаемыеПоляСправочников.Выгрузить().СкопироватьКолонки();
			
		Для каждого ТекСтр из ВыгружаемыеПоляСправочников Цикл
				
			Если ТекСтр.Справочник <> ТекСправочник тогда
				НовСтр = ВремТаб.Добавить();	
				НовСтр.Справочник 			= ТекСтр.Справочник;
				НовСтр.Поле 				= ТекСтр.Поле;
				НовСтр.Выгружаемо 			= ТекСтр.Выгружаемо;
				НовСтр.ВыгружатьКакСтрока 	= ТекСтр.ВыгружатьКакСтрока;
			КонецЕсли;
				
		КонецЦикла;
			
		ВыгружаемыеПоляСправочников.Загрузить(ВремТаб);
			
		Для каждого ТекСтр из ВыгружаемыеПоляСправочникаФ Цикл
			НовСтр = ВыгружаемыеПоляСправочников.Добавить();	
			НовСтр.Справочник 			= ТекСправочник;
			НовСтр.Поле 				= ТекСтр.Поле;
			НовСтр.Выгружаемо 			= ТекСтр.Выгружаемо;
			НовСтр.ВыгружатьКакСтрока 	= ТекСтр.ВыгружатьКакСтрока;
		КонецЦикла;
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПерезаписьВыгружаемыхПолейСправочников(ТекущийСправочник)
	
	ВремТаб = Новый ТаблицаЗначений;
	ВремТаб = ВыгружаемыеПоляСправочников.Выгрузить().СкопироватьКолонки();
	
	Для каждого ТекСтр из ВыгружаемыеПоляСправочников Цикл
		
		Если ТекСтр.Справочник <> ТекущийСправочник тогда
			НовСтр = ВремТаб.Добавить();	
			НовСтр.Справочник 			= ТекСтр.Справочник;
			НовСтр.Поле 				= ТекСтр.Поле;
			НовСтр.Выгружаемо 			= ТекСтр.Выгружаемо;
			НовСтр.ВыгружатьКакСтрока 	= ТекСтр.ВыгружатьКакСтрока;
		КонецЕсли;
		
	КонецЦикла;
	
	ВыгружаемыеПоляСправочников.Загрузить(ВремТаб);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружаемыеСправочникиПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено тогда	
		
		Элемент.ПодчиненныеЭлементы.ВыгружаемыеСправочникиСправочник.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокСправочников());
		
		ОбновлениеПолейСправочника(Элемент.ТекущиеДанные.Справочник);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружаемыеСправочникиПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.Справочник) тогда
			ПерезаписьВыгружаемыхПолейСправочников(ТекущиеДанные.Справочник);	
		КонецЕсли;
		
		ВыгружаемыеПоляСправочникаФ.Очистить();
		//ОбновлениеПолейСправочника(ТекущиеДанные.Справочник);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружаемыеПоляСправочникаФВыгружаемоПриИзменении(Элемент)
	Если Элементы.ВыгружаемыеСправочники.ТекущиеДанные <> Неопределено тогда
		ЗаписьПолейСправочника(Элементы.ВыгружаемыеСправочники.ТекущиеДанные.Справочник);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыгружаемыеПоляСправочникаФВыгружатьКакУИПриИзменении(Элемент)
	Если Элементы.ВыгружаемыеСправочники.ТекущиеДанные <> Неопределено тогда
		ЗаписьПолейСправочника(Элементы.ВыгружаемыеСправочники.ТекущиеДанные.Справочник);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыгружаемыеСправочникиСправочникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбновлениеПолейСправочника(ВыбранноеЗначение);
	ЗаписьПолейСправочника(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеПользовательскихСпарвочниковПриОткрытии()
	 
	тзнВрем = ВыгружаемыеПоляСправочников.Выгрузить();
	тзнВрем.Свернуть("Справочник");
	
	ВыгружаемыеСправочники.Загрузить(тзнВрем);
	
КонецПроцедуры

#КонецОбласти
