
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЭтоАдресВременногоХранилища(Параметры.АдресНастроекОбмена) Тогда
		
		АдресНастроекОбмена = Параметры.АдресНастроекОбмена;
		
		НастройкиОбмена 	= ПолучитьИзВременногоХранилища(АдресНастроекОбмена);
		
		ГруппаДляНовыхКонтрагентов 					= ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.Контрагенты, "ГруппаДляНовыхКонтрагентов");
		
		ИспользоватьФИОДляФизЛиц 					= ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.Контрагенты, "ИспользоватьФИОДляФизЛиц");
		НеРедактироватьКонтрагентовПришедшихССайта 	= ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.Контрагенты, "НеРедактироватьКонтрагентовПришедшихССайта");
		КоличествоКонтрагентовВПакете 				= ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.Контрагенты, "КоличествоКонтрагентовВПакете");
		
		НастройкиКомпоновкиДанныхКонтрагентов 		= ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.Контрагенты, "НастройкиКомпоновкиДанныхКонтрагентов");

		СоответствиеАдресовФизЛиц.Загрузить(ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.Контрагенты, "СоответствиеАдресовФизЛиц"));
		СоответствиеАдресовЮрЛиц.Загрузить(ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.Контрагенты, "СоответствиеАдресовЮрЛиц"));
		
		ПорядокИдентификацииФизЛиц	= ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.Контрагенты, "ПорядокИдентификацииФизЛиц");
		ПорядокИдентификацииЮрЛиц	= ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.Контрагенты, "ПорядокИдентификацииЮрЛиц");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьИЗакрыть(Команда)
	
	Если ЭтаФорма.Модифицированность тогда
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, Параметры), "Были именены настройке на форме. Закрыть форму настроек без сохранения?", РежимДиалогаВопрос.ДаНет);
		
	Иначе
		ЭтаФорма.Закрыть();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЭтаФорма.Закрыть();	
    КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура Применить(Команда)
	
	Закрыть(ПрименитьНаСервере());
	
КонецПроцедуры

&НаСервере
Функция ПрименитьНаСервере()
	
	Настройки = ПолучитьИзВременногоХранилища(АдресНастроекОбмена);

	Настройки.Контрагенты.КоличествоКонтрагентовВПакете					= КоличествоКонтрагентовВПакете;	
	Настройки.Контрагенты.НеРедактироватьКонтрагентовПришедшихССайта	= НеРедактироватьКонтрагентовПришедшихССайта;	
	Настройки.Контрагенты.ИспользоватьФИОДляФизЛиц						= ИспользоватьФИОДляФизЛиц;	
	Настройки.Контрагенты.ГруппаДляНовыхКонтрагентов					= ГруппаДляНовыхКонтрагентов;	
	
	Настройки.Контрагенты.СоответствиеАдресовФизЛиц 					= СоответствиеАдресовФизЛиц.Выгрузить();
	Настройки.Контрагенты.СоответствиеАдресовЮрЛиц 						= СоответствиеАдресовЮрЛиц.Выгрузить();

	ПланыОбмена.Б_ОбменССайтом.УстановитьЗначениеВСтруктуруНастроек(Настройки.Контрагенты, "ПорядокИдентификацииФизЛиц", ПорядокИдентификацииФизЛиц);
	ПланыОбмена.Б_ОбменССайтом.УстановитьЗначениеВСтруктуруНастроек(Настройки.Контрагенты, "ПорядокИдентификацииЮрЛиц", ПорядокИдентификацииЮрЛиц); 
	
	лАдресНастроекОбмена = ПоместитьВоВременноеХранилище(Настройки, УникальныйИдентификатор);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресНастроекОбмена"	, лАдресНастроекОбмена);

	Возврат ПараметрыФормы;
	 
КонецФункции

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы
////////////////////////////////////////////////////////////////////////////////////
//                                                                               //
//  ПРОЦЕДУРЫ И ФУНКЦИИ ПО НАЗНАЧЕНИЮ СООТВЕТСТВИЙ ПОЛЕЙ КОНТАКТОВ КОНТРАГЕНТОВ	//
//                                                                             //
////////////////////////////////////////////////////////////////////////////////

&НаСервере
Функция ПроверкаКорректностиСоответствийАдресов(ТипОбъекта, ВыбранноеЗначение, ВидКонтрагента)
	
	Результат = Ложь;
	
	Если ТипОбъекта = "ЮрЛицо" тогда
		тзнСоответствий = СоответствиеАдресовЮрЛиц.Выгрузить();
	Иначе
		тзнСоответствий = СоответствиеАдресовФизЛиц.Выгрузить();
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Тип",ВидКонтрагента);
	Отбор.Вставить("ВидКонтактнойИнформации",ВыбранноеЗначение);
	
	НайденныеСтроки = тзнСоответствий.НайтиСтроки(Отбор);
	
	Если  НайденныеСтроки.Количество() > 0 тогда
		
		Результат = Истина;


	КонецЕсли;
	
	Возврат Результат;	
	
КонецФункции

&НаКлиенте
Процедура СоответствиеАдресовЮрЛицПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	Если СокрЛП(Элемент.ТекущиеДанные.НаименованиеПоля) = "" тогда
		Отказ = Истина;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоответствиеАдресовФизЛицВидКонтактнойИнформацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если  Элементы.СоответствиеАдресовФизЛиц.ТекущиеДанные.ВидКонтактнойИнформации <> ВыбранноеЗначение тогда
	
		Результат = ПроверкаКорректностиСоответствийАдресов("ФизЛицо", ВыбранноеЗначение, Элементы.СоответствиеАдресовФизЛиц.ТекущиеДанные.Тип);
			
		Если Результат тогда			
			Сообщить("Уже есть строка с таким видом контактной информации. Виды контактной информации должны быть уникальными.");	
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеАдресовЮрЛицВидКонтактнойИнформацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если  Элементы.СоответствиеАдресовЮрЛиц.ТекущиеДанные.ВидКонтактнойИнформации <> ВыбранноеЗначение тогда
	
		Результат = ПроверкаКорректностиСоответствийАдресов("ЮрЛицо", ВыбранноеЗначение, Элементы.СоответствиеАдресовЮрЛиц.ТекущиеДанные.Тип);
			
		Если Результат тогда			
			Сообщить("Уже есть строка с таким видом контактной информации. Виды контактной информации должны быть уникальными.");	
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеАдресовЮрЛицТипОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Результат = ПроверкаКорректностиСоответствийАдресов("ЮрЛицо", Элементы.СоответствиеАдресовЮрЛиц.ТекущиеДанные.ВидКонтактнойИнформации, ВыбранноеЗначение);
		
	Если Результат тогда			
		Сообщить("Уже есть строка с таким видом контактной информации. Виды контактной информации должны быть уникальными.");	
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеАдресовФизЛицТипОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Результат = ПроверкаКорректностиСоответствийАдресов("ФизЛицо", Элементы.СоответствиеАдресовФизЛиц.ТекущиеДанные.ВидКонтактнойИнформации, ВыбранноеЗначение);
		
	Если Результат тогда			
		Сообщить("Уже есть строка с таким видом контактной информации. Виды контактной информации должны быть уникальными.");	
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////////
//                                                                               //
//  ПРОЦЕДУРЫ И ФУНКЦИИ ПО СПОСОБАМ ИДЕНТИФИКАЦИИ								//
//                                                                             //
////////////////////////////////////////////////////////////////////////////////


&НаКлиенте
Процедура ПорядокИдентификацииЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДобавитьСписокВЭлемент(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСписокВЭлемент(Элемент)
	
	Элемент.СписокВыбора.Очистить();
	Элемент.СписокВыбора.Добавить("Внешний идентификатор");
	Элемент.СписокВыбора.Добавить("ИНН");
	Элемент.СписокВыбора.Добавить("Наименование");
	Элемент.СписокВыбора.Добавить("Полное наименование");
	Элемент.СписокВыбора.Добавить("Email");
	Элемент.СписокВыбора.Добавить("Телефон");
	Элемент.СписокВыбора.Добавить("Не использовать");
	
КонецПроцедуры



#КонецОбласти

