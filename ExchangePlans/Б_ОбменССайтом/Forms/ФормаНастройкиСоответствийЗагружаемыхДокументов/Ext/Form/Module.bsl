
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЭтоАдресВременногоХранилища(Параметры.СохраненныеНастройкиЗагружаемыхДокументов) Тогда
		
		СоответствияДокументов = ПолучитьИзВременногоХранилища(Параметры.СохраненныеНастройкиЗагружаемыхДокументов);
		
		Если  СоответствияДокументов <> Неопределено тогда
			
			ДокументыЗагрузки.Загрузить(СоответствияДокументов.ДокументыЗагрузки);	
			ВсеСоответствияТабличныхЧастейДокументов.Загрузить(СоответствияДокументов.ВсеСоответствияТабличныхЧастейДокументов);	
			ВсеСоответствияШапокДокументов.Загрузить(СоответствияДокументов.ВсеСоответствияШапокДокументов);	
			
		КонецЕсли;
		
		Если Параметры.ТипДокумента = "СтандартныеДокументы" тогда

			Элементы.ДокументыЗагрузки.ИзменятьСоставСтрок			= Ложь;
			Элементы.ДокументыЗагрузкиДокумент.ТолькоПросмотр 		= Истина;
			Элементы.ДокументыЗагрузкиВидДокумента.ТолькоПросмотр 	= Истина;
			
			Элементы.ТабличныеЧастиДокумента.ТолькоПросмотр = Истина;
			
		КонецЕсли;
		
		мДокументы = Новый Массив;
		
		Для каждого ТекДокумент из Метаданные.Документы Цикл
			
			мДокументы.Добавить(ТекДокумент.Имя);
			
		КонецЦикла;
		
		Элементы.ДокументыЗагрузкиДокумент.СписокВыбора.ЗагрузитьЗначения(мДокументы);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьСоответствияРеквизитов(Команда)
	
	ТекущийДокумент = Элементы.ДокументыЗагрузки.ТекущиеДанные;
	
	Если ТекущийДокумент <> Неопределено тогда
		
		НастроитьСоответствияРеквизитовТЧ("");
		ТабличныеЧастиДокумента.Очистить();

		НастроитьСоответствияРеквизитовНаСервере(?(ТипДокумента = "", ТекущийДокумент.Документ, ТипДокумента), ТекущийДокумент.Документ);

		ТипДокумента = ТекущийДокумент.Документ;   
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСоответствияРеквизитовНаСервере(СтарыйДокумент, НовыйДокумент)
	
	//Шапка
	тзнВрем = ВсеСоответствияШапокДокументов.Выгрузить(); 
	тзнВрем2 = тзнВрем.СкопироватьКолонки(); 

	ВсеСоответствияШапокДокументов.Очистить();
	
	Для каждого ТекСтрока из тзнВрем Цикл
		Если ТекСтрока.Документ <> СтарыйДокумент Тогда
			НовСтрока = ВсеСоответствияШапокДокументов.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
		Иначе
			НовСтрока = тзнВрем2.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
	
	тзнРеквизитовДокумента = ?(СоответствияШапкиЗагружаемогоДокумента.Количество() >0, СоответствияШапкиЗагружаемогоДокумента, тзнВрем2);
	
	Для каждого ТекСтрока из тзнРеквизитовДокумента Цикл
		
		НовСтрока = ВсеСоответствияШапокДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
		НовСтрока.Документ = СтарыйДокумент; 
		
	КонецЦикла;
	
	
	//ТабличныеЧасти
	Для Каждого ТекТабЧасть из ТабличныеЧастиДокумента Цикл
		
		лЕстьТакаяТабличнаяЧасть = Ложь;
		
		Для каждого ТекСтрока1 из ВсеСоответствияТабличныхЧастейДокументов Цикл
			
			Если ТекСтрока1.Документ = СтарыйДокумент И ТекТабЧасть.ТабличнаяЧасть = ТекСтрока1.ТабличнаяЧасть тогда
				
				ТекСтрока1.ПолеXML 	= ТекТабЧасть.ПолеXML;
				
				лЕстьТакаяТабличнаяЧасть = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ лЕстьТакаяТабличнаяЧасть тогда
			НовСтрока = ВсеСоответствияТабличныхЧастейДокументов.Добавить();
			НовСтрока.Документ 					= СтарыйДокумент;
			НовСтрока.ТабличнаяЧасть 			= ТекТабЧасть.ТабличнаяЧасть;
			НовСтрока.ПолеXML 					= ТекТабЧасть.ПолеXML;
			//НовСтрока.НаименованиеРеквизита1С 	= ТекСтрока.НаименованиеРеквизита1С;
			//НовСтрока.СинонимРеквизита1С 		= ТекСтрока.СинонимРеквизита1С;
			//НовСтрока.Значение 					= ТекСтрока.Значение;
			//НовСтрока.ТипДанных 				= ТекСтрока.ТипДанных;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнениеТаблицыРеквизитоыШапкиДокументов(НовыйДокумент);
	ЗаполнениеТаблицыТабличныхЧастейДокументов(НовыйДокумент);
	СоответствияТабличнойЧастиДокумента.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеТаблицыРеквизитоыШапкиДокументов(НовыйДокумент)
	
	ОбъектМетаданных = Метаданные.Документы[НовыйДокумент];

	//заполнение шапки
	СоответствияШапкиЗагружаемогоДокумента.Очистить();
	
	Для каждого ТекСтрока из ВсеСоответствияШапокДокументов Цикл
		
		Если ТекСтрока.Документ = НовыйДокумент тогда
			
			НоваяСтрока = СоответствияШапкиЗагружаемогоДокумента.Добавить();
			НоваяСтрока.НаименованиеРеквизита1С = ТекСтрока.НаименованиеРеквизита1С;
			НоваяСтрока.СинонимРеквизита1С 		= ТекСтрока.СинонимРеквизита1С;
			НоваяСтрока.Значение 				= ТекСтрока.Значение;
			НоваяСтрока.ТипДанных 				= ТекСтрока.ТипДанных;
				
		КонецЕсли;
			
	КонецЦикла;
	
	Для каждого ТекРеквизит из ОбъектМетаданных.Реквизиты Цикл
		
		Если СоответствияШапкиЗагружаемогоДокумента.НайтиСтроки(Новый Структура("НаименованиеРеквизита1С", ТекРеквизит.Имя)).Количество() = 0 И ТекРеквизит.Имя <> "Номер" тогда
			
			Если ТекРеквизит.Имя = "Соглащение" тогда
				
				Если СоответствияШапкиЗагружаемогоДокумента.НайтиСтроки(Новый Структура("НаименованиеРеквизита1С", "Организация")).Количество() = 0 тогда
					НоваяСтрока = СоответствияШапкиЗагружаемогоДокумента.Добавить();
					НоваяСтрока.НаименованиеРеквизита1С = "Организация"; 
					НоваяСтрока.СинонимРеквизита1С 		= "Организация"; 
					НоваяСтрока.ТипДанных 				= "Из поля XML документа"; 
				КонецЕсли;
				
				Если СоответствияШапкиЗагружаемогоДокумента.НайтиСтроки(Новый Структура("НаименованиеРеквизита1С", "Контрагент")).Количество() = 0 тогда
					НоваяСтрока = СоответствияШапкиЗагружаемогоДокумента.Добавить();
					НоваяСтрока.НаименованиеРеквизита1С = "Контрагент"; 
					НоваяСтрока.СинонимРеквизита1С 		= "Контрагент"; 
					НоваяСтрока.ТипДанных 				= "Из поля XML документа"; 
				КонецЕсли;
				
			ИначеЕсли ТекРеквизит.Имя = "НалогообложениеНДС" тогда
				
				Если ОбъектМетаданных.Реквизиты.Найти("Соглашение") <> Неопределено тогда
					
					Если СоответствияШапкиЗагружаемогоДокумента.НайтиСтроки(Новый Структура("НаименованиеРеквизита1С", "Соглашение")).Количество() = 0 тогда
						НоваяСтрока = СоответствияШапкиЗагружаемогоДокумента.Добавить();
						НоваяСтрока.НаименованиеРеквизита1С = "Соглашение"; 
						НоваяСтрока.СинонимРеквизита1С 		= "Соглашение"; 
						НоваяСтрока.ТипДанных 				= "Из поля XML документа"; 
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли ТекРеквизит.Имя = "Партнер" тогда
				
				Если ОбъектМетаданных.Реквизиты.Найти("Контрагент") <> Неопределено тогда
					
					Если СоответствияШапкиЗагружаемогоДокумента.НайтиСтроки(Новый Структура("НаименованиеРеквизита1С", "Контрагент")).Количество() = 0 тогда
						НоваяСтрока = СоответствияШапкиЗагружаемогоДокумента.Добавить();
						НоваяСтрока.НаименованиеРеквизита1С = "Контрагент"; 
						НоваяСтрока.СинонимРеквизита1С 		= "Контрагент"; 
						НоваяСтрока.ТипДанных 				= "Из поля XML документа"; 
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			НоваяСтрока = СоответствияШапкиЗагружаемогоДокумента.Добавить();
			НоваяСтрока.НаименованиеРеквизита1С = ТекРеквизит.Имя; 
			НоваяСтрока.СинонимРеквизита1С 		= ТекРеквизит.Синоним; 
			НоваяСтрока.ТипДанных 				= "Из поля XML документа"; 
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеТаблицыТабличныхЧастейДокументов(НовыйДокумент)
	
	ОбъектМетаданных = Метаданные.Документы[НовыйДокумент];

	//заполнение шапки
	ТабличныеЧастиДокумента.Очистить();
	
	ВремТабТЧ = ВсеСоответствияТабличныхЧастейДокументов.Выгрузить();
	ВремТабТЧ.Свернуть("ТабличнаяЧасть, Документ, ПолеXML");
	
	Для каждого ТекСтрока из ВремТабТЧ Цикл
		
		Если ТекСтрока.Документ = НовыйДокумент тогда
			
			НоваяСтрока = ТабличныеЧастиДокумента.Добавить();
			НоваяСтрока.ТабличнаяЧасть 	= ТекСтрока.ТабличнаяЧасть;
			НоваяСтрока.ПолеXML 		= ТекСтрока.ПолеXML;
				
		КонецЕсли;
			
	КонецЦикла;
	
	//Заполнение табличных частей 	
	мТабличныеЧасти = Новый Массив;
	
	Для каждого ТекТабличнаяЧасть из ОбъектМетаданных.ТабличныеЧасти Цикл
		
		мТабличныеЧасти.Добавить(ТекТабличнаяЧасть.Имя);
		
	КонецЦикла;
	
	Элементы.ТабличныеЧастиДокументаНаименованиеТабличнойЧасти.СписокВыбора.ЗагрузитьЗначения(мТабличныеЧасти);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура НастроитьСоответствияРеквизитовТЧ(Команда)
	
	ТекущаяТЧ = Элементы.ТабличныеЧастиДокумента.ТекущиеДанные;
	ТекущийД = Элементы.ДокументыЗагрузки.ТекущиеДанные;
	Если ТекущаяТЧ <> Неопределено И ТекущийД <> Неопределено тогда
		Документ = ТекущийД.Документ;
		ТЧ		 = ТекущаяТЧ.ТабличнаяЧасть; 
		ПолеXML	 = ТекущаяТЧ.ПолеXML; 

		НастроитьСоответствияРеквизитовТЧНаСервере(?(ТипДокумента = "", Документ, ТипДокумента), Документ, ?(ТипТЧ = "", ТЧ, ТипТЧ), ТЧ ,?(ТипПолеXML = "", ПолеXML, ТипПолеXML), ПолеXML);
		ТипТЧ 		= ТекущаяТЧ.ТабличнаяЧасть; 
		ТипПолеXML = ТекущаяТЧ.ПолеXML; 

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСоответствияРеквизитовТЧНаСервере(СтарыйДокумент, НовыйДокумент, СтараяТЧ, НоваяТЧ, СтароеПолеXML, НовоеПолеXML)
	
	тзнВрем = ВсеСоответствияТабличныхЧастейДокументов.Выгрузить(); 
	тзнВрем2 = тзнВрем.СкопироватьКолонки(); 

	ВсеСоответствияТабличныхЧастейДокументов.Очистить();
	
	Для каждого ТекСтрока из тзнВрем Цикл
		Если ТекСтрока.Документ <> СтарыйДокумент Тогда
			НовСтрока = ВсеСоответствияТабличныхЧастейДокументов.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
		Иначе
			НовСтрока = тзнВрем2.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
	
	тзнРеквизитовДокумента = ?(СоответствияТабличнойЧастиДокумента.Количество() >0, СоответствияТабличнойЧастиДокумента, тзнВрем2);
	
	Для каждого ТекСтрока из тзнРеквизитовДокумента Цикл
		
		НовСтрока = ВсеСоответствияТабличныхЧастейДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
		НовСтрока.Документ = СтарыйДокумент; 
		НовСтрока.ТабличнаяЧасть 	= НоваяТЧ; 
		НовСтрока.ПолеXML 			= НовоеПолеXML; 
		
	КонецЦикла;
	
	ЗаполнениеТаблицыРеквизитовТабличнойЧастиДокументов(НовыйДокумент, НоваяТЧ);

КонецПроцедуры

&НаСервере
Процедура ЗаполнениеТаблицыРеквизитовТабличнойЧастиДокументов(НовыйДокумент, НоваяТЧ)
	
	ОбъектМетаданных = Метаданные.Документы[НовыйДокумент];

	//заполнение шапки
	СоответствияТабличнойЧастиДокумента.Очистить();
	
	Для каждого ТекСтрока из ВсеСоответствияТабличныхЧастейДокументов Цикл
		
		Если ТекСтрока.Документ = НовыйДокумент И ТекСтрока.ТабличнаяЧасть = НоваяТЧ тогда
			
			НоваяСтрока = СоответствияТабличнойЧастиДокумента.Добавить();
			НоваяСтрока.НаименованиеРеквизита1С = ТекСтрока.НаименованиеРеквизита1С;
			НоваяСтрока.СинонимРеквизита1С 		= ТекСтрока.СинонимРеквизита1С;
			НоваяСтрока.Значение 				= ТекСтрока.Значение;
			НоваяСтрока.ТипДанных 				= ТекСтрока.ТипДанных;
				
		КонецЕсли;
			
	КонецЦикла;
	
	Если ОбъектМетаданных.ТабличныеЧасти.Найти(НоваяТЧ) <> Неопределено тогда
		Для каждого ТекРеквизит из ОбъектМетаданных.ТабличныеЧасти[НоваяТЧ].Реквизиты Цикл
			
			Если СоответствияТабличнойЧастиДокумента.НайтиСтроки(Новый Структура("НаименованиеРеквизита1С", ТекРеквизит.Имя)).Количество()	= 0 тогда
				
				НоваяСтрока = СоответствияТабличнойЧастиДокумента.Добавить();
				НоваяСтрока.НаименованиеРеквизита1С = ТекРеквизит.Имя; 
				НоваяСтрока.СинонимРеквизита1С 		= ТекРеквизит.Синоним; 
				НоваяСтрока.ТипДанных 				= "Из поля XML документа"; 
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	НастроитьСоответствияРеквизитов("");
	
	Закрыть(ПолучитьСтруктуруОтвета());
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруОтвета()
	
	Ответ = Новый Структура;
	Ответ.Вставить("ДокументыЗагрузки",							ДокументыЗагрузки.Выгрузить());
	Ответ.Вставить("ВсеСоответствияТабличныхЧастейДокументов",	ВсеСоответствияТабличныхЧастейДокументов.Выгрузить());
	Ответ.Вставить("ВсеСоответствияШапокДокументов",			ВсеСоответствияШапокДокументов.Выгрузить());
	
	Возврат ПоместитьВоВременноеХранилище(Ответ, УникальныйИдентификатор);
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ЗаполнитьПоУмолчанию(Команда)
	
	ЗаполнитьПоУмолчаниюНаСервере();
	
	СоответствияШапкиЗагружаемогоДокумента.Очистить();
	ТабличныеЧастиДокумента.Очистить();
	СоответствияТабличнойЧастиДокумента.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоУмолчаниюНаСервере()
																															
	СоответствияДокументов = ПланыОбмена.Б_ОбменССайтом.ЗаполнениеСоответствийЗагружаемыхДокументовПоУмолчанию();
	
	ДокументыЗагрузки.Загрузить(СоответствияДокументов.ДокументыЗагрузки);	
	ВсеСоответствияТабличныхЧастейДокументов.Загрузить(СоответствияДокументов.ВсеСоответствияТабличныхЧастейДокументов);	
	ВсеСоответствияШапокДокументов.Загрузить(СоответствияДокументов.ВсеСоответствияШапокДокументов);	
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

//определение типа ячейки
&НаКлиенте
Процедура СоответствияШапкиЗагружаемогоДокументаПриАктивизацииЯчейки(Элемент)
	
	ТекущаяСтрока = Элементы.СоответствияШапкиЗагружаемогоДокумента.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено тогда
		
		лЭлемент = Элементы.СоответствияШапкиЗагружаемогоДокумента.ПодчиненныеЭлементы.СоответствияШапкиЗагружаемогоДокументаЗначение;
		
		Если ТекущаяСтрока.ТипДанных = "Из поля XML документа" тогда
			
			лЭлемент.ВыбиратьТип 		  		= Ложь;
			лЭлемент.РедактированиеТекста 		= Ложь;
			лЭлемент.КнопкаВыпадающегоСписка 	= Истина;
			лЭлемент.КнопкаВыбора 				= Ложь;

			лЭлемент.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивXMLПолейШапки());
			
	        лЭлемент.ОграничениеТипа = ПолучитьОписаниеТипаСтроки();
			
		ИначеЕсли ТекущаяСтрока.ТипДанных = "Фиксированное значение" тогда
			
			лЭлемент.ВыбиратьТип 		  		= Истина;
			лЭлемент.РедактированиеТекста 		= Истина;
			лЭлемент.КнопкаВыпадающегоСписка 	= Ложь;
			лЭлемент.КнопкаВыбора 				= Истина;

			лЭлемент.СписокВыбора.Очистить();
			
			лЭлемент.ОграничениеТипа = ПолучитьОписаниеТипаРеквизита(ТипДокумента, ТекущаяСтрока.НаименованиеРеквизита1С);
			
		ИначеЕсли ТекущаяСтрока.ТипДанных = "<Свой алгоритм>" тогда
			
			лЭлемент.ВыбиратьТип 		  		= Ложь;
			лЭлемент.РедактированиеТекста 		= Ложь;
			лЭлемент.КнопкаВыпадающегоСписка 	= Ложь;
			лЭлемент.КнопкаВыбора 				= Истина;
			лЭлемент.СписокВыбора.Очистить();
		Иначе 
			
			лЭлемент.ВыбиратьТип 		  		= Ложь;
			лЭлемент.РедактированиеТекста 		= Истина;
			лЭлемент.КнопкаВыпадающегоСписка 	= Ложь;
			лЭлемент.КнопкаВыбора 				= Ложь;

			лЭлемент.СписокВыбора.Очистить();
			 
	        лЭлемент.ОграничениеТипа = ПолучитьОписаниеТипаСтроки();

		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствияТабличнойЧастиДокументаПриАктивизацииЯчейки(Элемент)
	
	ТекущаяСтрока = Элементы.СоответствияТабличнойЧастиДокумента.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено тогда
		
		лЭлемент = Элементы.СоответствияТабличнойЧастиДокументаЗначение;
		
		Если ТекущаяСтрока.ТипДанных = "Из поля XML документа" тогда
			
			лЭлемент.ВыбиратьТип 		  		= Ложь;
			лЭлемент.РедактированиеТекста 		= Ложь;
			лЭлемент.КнопкаВыпадающегоСписка 	= Истина;
			лЭлемент.КнопкаВыбора 				= Ложь;
			
			лЭлемент.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивXMLПолейТабличнойЧасти(Элементы.ДокументыЗагрузки.ТекущиеДанные.Документ));
			
	        лЭлемент.ОграничениеТипа = ПолучитьОписаниеТипаСтроки();
			
		ИначеЕсли ТекущаяСтрока.ТипДанных = "Фиксированное значение"  тогда
			
			лЭлемент.ВыбиратьТип 		  		= Истина;
			лЭлемент.РедактированиеТекста 		= Истина;
			лЭлемент.КнопкаВыпадающегоСписка 	= Ложь;
			лЭлемент.КнопкаВыбора 				= Истина;
			лЭлемент.СписокВыбора.Очистить();
			
			лЭлемент.ОграничениеТипа = ПолучитьОписаниеТипаРеквизита(ТипДокумента, ТекущаяСтрока.НаименованиеРеквизита1С, ТипТЧ);      
			
		ИначеЕсли ТекущаяСтрока.ТипДанных = "<Свой алгоритм>" тогда
			
			лЭлемент.ВыбиратьТип 		  		= Ложь;
			лЭлемент.РедактированиеТекста 		= Ложь;
			лЭлемент.КнопкаВыпадающегоСписка 	= Ложь;
			лЭлемент.КнопкаВыбора 				= Истина;
			лЭлемент.СписокВыбора.Очистить();
			
		Иначе 
			
			лЭлемент.ВыбиратьТип 		  		= Ложь;
			лЭлемент.РедактированиеТекста 		= Истина;
			лЭлемент.КнопкаВыпадающегоСписка 	= Ложь;
			лЭлемент.КнопкаВыбора 				= Ложь;
			лЭлемент.СписокВыбора.Очистить();
			 
	        лЭлемент.ОграничениеТипа = ПолучитьОписаниеТипаСтроки();

		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры


//остальное
&НаКлиенте
Процедура ДокументыЗагрузкиДокументОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	НайденныеСтроки = ДокументыЗагрузки.НайтиСтроки(Новый Структура("Документ",ВыбранноеЗначение));
	
	Если НайденныеСтроки.Количество() > 0 тогда
		
		СтандартнаяОбработка = Ложь;	
		Сообщить("Такой документ в таблице соответствий уже есть.")
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныеЧастиДокументаНаименованиеТабличнойЧастиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
		
	НайденныеСтроки = ТабличныеЧастиДокумента.НайтиСтроки(Новый Структура("ТабличнаяЧасть",ВыбранноеЗначение));
	
	Если НайденныеСтроки.Количество() > 0 тогда
		
		СтандартнаяОбработка = Ложь;	
		Сообщить("Такая табличная  чать документа в таблице соответствий уже есть.")
	КонецЕсли;

КонецПроцедуры


#КонецОбласти


#Область ПрочиеПроцедурыИФункции

&НаСервере
Функция ПолучитьМассивXMLПолейШапки()
	
	мНаименованиеПолейXML = Новый Массив;
	мНаименованиеПолейXML.Добавить("");
	мНаименованиеПолейXML.Добавить("Дата с сайта");
	мНаименованиеПолейXML.Добавить("Дата с сайта с учетом настройки обмена");
	мНаименованиеПолейXML.Добавить("Дата 1С");
	мНаименованиеПолейXML.Добавить("Ид с сайта");
	мНаименованиеПолейXML.Добавить("Номер с сайта");
	мНаименованиеПолейXML.Добавить("Номер 1С");
	мНаименованиеПолейXML.Добавить("Номер версии с сайта");
	мНаименованиеПолейXML.Добавить("Пометка удаления");
	мНаименованиеПолейXML.Добавить("Комментарий");
	мНаименованиеПолейXML.Добавить("Менеджер");
	мНаименованиеПолейXML.Добавить("Приоритет");
	мНаименованиеПолейXML.Добавить("Операция");
	мНаименованиеПолейXML.Добавить("Основание");
	мНаименованиеПолейXML.Добавить("Склад");
	мНаименованиеПолейXML.Добавить("Статус");
	мНаименованиеПолейXML.Добавить("Цена включает НДС");
	мНаименованиеПолейXML.Добавить("Налогообложение НДС");
	мНаименованиеПолейXML.Добавить("Валюта");
	мНаименованиеПолейXML.Добавить("Партнер");
	мНаименованиеПолейXML.Добавить("Контрагент");
	мНаименованиеПолейXML.Добавить("Дата платежа");
	мНаименованиеПолейXML.Добавить("Адрес доставки");
	мНаименованиеПолейXML.Добавить("Адрес доставки значения полей");
	мНаименованиеПолейXML.Добавить("Адрес контрагента");
	мНаименованиеПолейXML.Добавить("Телефон контрагента");
	мНаименованиеПолейXML.Добавить("Адрес эл. почты контрагента");
	мНаименованиеПолейXML.Добавить("Полное наименование контрагента");
	мНаименованиеПолейXML.Добавить("График оплаты");
	мНаименованиеПолейXML.Добавить("Банковский счет");
	мНаименованиеПолейXML.Добавить("Банковский счет контрагента");
	мНаименованиеПолейXML.Добавить("Касса");
	мНаименованиеПолейXML.Добавить("Сумма");
	мНаименованиеПолейXML.Добавить("Курс");
	мНаименованиеПолейXML.Добавить("Кратность");
	мНаименованиеПолейXML.Добавить("НДС в сумме");
	мНаименованиеПолейXML.Добавить("Сумма НДС");
	мНаименованиеПолейXML.Добавить("Реализация по заказам");
	мНаименованиеПолейXML.Добавить("Эквайринговый терминал");
	мНаименованиеПолейXML.Добавить("Порядок оплаты");
	мНаименованиеПолейXML.Добавить("Форма оплаты");
	мНаименованиеПолейXML.Добавить("Способ доставки");

	Возврат мНаименованиеПолейXML; 
	
КонецФункции

Функция ПолучитьМассивXMLПолейТабличнойЧасти(Документ)
	
	мНаименованиеПолейXML = ПолучитьМассивXMLПолейШапки();	
	
	Если Документ = "ЗаказКлиента" ИЛИ  Документ = "РеализацияТоваровУслуг" тогда 
		мНаименованиеПолейXML.Добавить("");
		мНаименованиеПолейXML.Добавить("Номенклатура");
		мНаименованиеПолейXML.Добавить("Характеристика");
		мНаименованиеПолейXML.Добавить("Упаковка");
		мНаименованиеПолейXML.Добавить("Ставка НДС");
		мНаименованиеПолейXML.Добавить("Количество");
		мНаименованиеПолейXML.Добавить("Количество упаковок");
		мНаименованиеПолейXML.Добавить("Цена");
		мНаименованиеПолейXML.Добавить("Процент ручной скидки");
		мНаименованиеПолейXML.Добавить("Сумма позиции");
		мНаименованиеПолейXML.Добавить("Отменено");
		мНаименованиеПолейXML.Добавить("Причина отмены");
		мНаименованиеПолейXML.Добавить("Наименование номенклатуры");
		мНаименованиеПолейXML.Добавить("Код строки");
		
		Если Документ = "ЗаказКлиента" тогда
			мНаименованиеПолейXML.Добавить("Дата отгрузки");
			мНаименованиеПолейXML.Добавить("Вариант обеспечения");
		КонецЕсли;	
		
	КонецЕсли;
	
	Возврат мНаименованиеПолейXML; 
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОписаниеТипаРеквизита(ТипДокумента, НаименованиеРеквизита1С, ТабличнаяЧасть = "")
	
	Если ТабличнаяЧасть = "" тогда
		
		НайденныйРеквизит = Метаданные.Документы[ТипДокумента].Реквизиты.Найти(НаименованиеРеквизита1С);
		
		Если НайденныйРеквизит <> Неопределено тогда
		
			Возврат НайденныйРеквизит.Тип;
			
		Иначе
			Возврат Новый ОписаниеТипов();

		КонецЕсли;
		
	Иначе
		НайденныйРеквизит = Метаданные.Документы[ТипДокумента].ТабличныеЧасти[ТабличнаяЧасть].Реквизиты.Найти(НаименованиеРеквизита1С);
		
		Если НайденныйРеквизит <> Неопределено тогда
		
			Возврат НайденныйРеквизит.Тип;
			
		Иначе
			Возврат Новый ОписаниеТипов();

		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьОписаниеТипаСтроки()
	
	КС = Новый КвалификаторыСтроки(100);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Возврат ОписаниеТиповС;
	
КонецФункции

&НаКлиенте
Процедура СоответствияШапкиЗагружаемогоДокументаТипДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Элементы.СоответствияШапкиЗагружаемогоДокумента.ТекущиеДанные.ТипДанных тогда
		Элементы.СоответствияШапкиЗагружаемогоДокумента.ТекущиеДанные.Значение = "";		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоответствияТабличнойЧастиДокументаТипДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
		
	Если ВыбранноеЗначение <> Элементы.СоответствияТабличнойЧастиДокумента.ТекущиеДанные.ТипДанных тогда
		Элементы.СоответствияТабличнойЧастиДокумента.ТекущиеДанные.Значение = "";		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НачалоЗаполненияАлгоритмаВыделенногоРеквизита(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	лЭлементРодитель = Элемент.Родитель;
	
	Если лЭлементРодитель.ТекущиеДанные = Неопределено тогда
		Возврат;	
	КонецЕсли;
	
	Если лЭлементРодитель.ТекущиеДанные.ТипДанных = "<Свой алгоритм>" тогда
		СтандартнаяОбработка = Ложь;
		
		лСтрока = лЭлементРодитель.ТекущиеДанные.Значение;	
		
		Если лСтрока = "" тогда
			лСтрока = "//Параметр на  создаваемый/редактируемый документ происходит через параметр [Документ]
			|// Параметр на создаваемую новую строку документа [НоваяСтрока] Если ее нет(шапка заполняется), то Неопределено
			|// Глобальные настройки в параметре [ПараметрыОбмена] 
			|//
			|// Параметр, возвращающий результат [Результат]
			|// 
			|// Параметр на данные документа  ИЗ XML [ДокументXML]
			|// Параметр, на данные строки товаров из XML [СтрокаXML]. Если ее нет, то Неопределено
			|
			|
			|//---------------------------------------------------------------------------------------------------------
			|//Если в алгоритме необходимо брать данные из заполняемого документа, то нужно понимать, что заполняется документ последовательно, заполняемый реквизит должен быть ниже в списке(на форме), чем тот, на который идет ссылка.
			|//
			|//Описать структуру параметров [ДокументXML] и [СтрокаXML] очень сложно, т.к. они могут разных данных, в зависимости от настроек. Узнать, что в них - можно через конфигуратор, перехватив через точку останова
			|//Выполняется в функции 'ПолучитьЗначениеРеквизитаДокументаПоСоответствию' находящаяся в общем модуле 'Б_ОбменССайтомСерверЗагрузкиДанных' 
			|//
			|
			|
			|//---------------------------------------------------------------------------------------------------------
			|//ПРОСТЕНЬКИЙ ПРИМЕР.
			|
			|[Результат] = [Документ].Контрагент.Наименование;
			|";  
		КонецЕсли;
		
		лПараметры = новый Структура;
		лПараметры.Вставить("Элемент", лЭлементРодитель);
		
		ПоказатьВводСтроки(Новый ОписаниеОповещения("ПослеВводаАлгоритмаЗаполнения", ЭтаФорма, лПараметры), лСтрока, "Введите алгоритм для заполнения реквизита документа",, Истина)
		
	КонецЕсли;
	
КонецПроцедуры




&НаКлиенте
Процедура ПослеВводаАлгоритмаЗаполнения(Строка, пПараметры) Экспорт
	Если НЕ Строка = Неопределено Тогда
		//ПроверитьКорректностьПоля(Строка);
		пПараметры.Элемент.ТекущиеДанные.Значение = Строка;
    КонецЕсли;
КонецПроцедуры



#КонецОбласти
