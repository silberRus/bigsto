
#Область ОбработчикиСобытийФормы


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновлениеЭлементовФормы();		

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект 			= Параметры.Объект;
	ТипДокумента 	= Параметры.ТипДокумента;
	
	Если ЭтоАдресВременногоХранилища(Параметры.АдресНастроекОбмена) Тогда
		
		АдресНастроекОбмена = Параметры.АдресНастроекОбмена;
		
		НастройкиОбмена 	= ПолучитьИзВременногоХранилища(АдресНастроекОбмена);
		
		лНастройкиСлужбДоставки = ПланыОбмена.Б_ОбменССайтом.ПолучитьЗначениеКлючаСтруктурыНастроек(НастройкиОбмена.Заказы, "НастройкиСлужбДоставкиДокументов");
		
		Если лНастройкиСлужбДоставки = Неопределено тогда
			ИсточникСлужбДоставкиЗаказа = "СпособыДоставкиЗаказов";	
		Иначе
			
			ИсточникСлужбДоставкиЗаказа = лНастройкиСлужбДоставки.ИсточникСлужбДоставкиЗаказа;
			
			СвойствоЗаказа 				= лНастройкиСлужбДоставки.СвойствоЗаказа;
			СвойствоОтгрузки 			= лНастройкиСлужбДоставки.СвойствоОтгрузки;
			
			СоответствияЗначенийСвойствЗаказа.Загрузить(лНастройкиСлужбДоставки.СоответствияЗначенийСвойствЗаказа);	
			СоответствияЗначенийСвойствОтгрузки.Загрузить(лНастройкиСлужбДоставки.СоответствияЗначенийСвойствОтгрузки);	
			СоответствияСпособовДоставкиЗаказа.Загрузить(лНастройкиСлужбДоставки.СоответствияСпособовДоставкиЗаказа);	
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	
	Закрыть(ПрименитьНаСервере());
	
КонецПроцедуры

&НаСервере
Функция ПрименитьНаСервере()
	
	Настройки = ПолучитьИзВременногоХранилища(АдресНастроекОбмена);

	лНастройкиСлужбДоставки = Новый Структура;
	лНастройкиСлужбДоставки.Вставить("ИсточникСлужбДоставкиЗаказа"			, ИсточникСлужбДоставкиЗаказа);
	лНастройкиСлужбДоставки.Вставить("СвойствоЗаказа"						, СвойствоЗаказа);
	лНастройкиСлужбДоставки.Вставить("СвойствоОтгрузки"						, СвойствоОтгрузки);
	лНастройкиСлужбДоставки.Вставить("СоответствияЗначенийСвойствЗаказа"	, СоответствияЗначенийСвойствЗаказа.Выгрузить());
	лНастройкиСлужбДоставки.Вставить("СоответствияЗначенийСвойствОтгрузки"	, СоответствияЗначенийСвойствОтгрузки.Выгрузить());
	лНастройкиСлужбДоставки.Вставить("СоответствияСпособовДоставкиЗаказа"	, СоответствияСпособовДоставкиЗаказа.Выгрузить());
	
	Если Настройки.Заказы.Свойство("НастройкиСлужбДоставкиДокументов") тогда
			Настройки.Заказы.НастройкиСлужбДоставкиДокументов = лНастройкиСлужбДоставки;	
		Иначе
			Настройки.Заказы.Вставить("НастройкиСлужбДоставкиДокументов", лНастройкиСлужбДоставки);
	КонецЕсли;
	
	лАдресНастроекОбмена = ПоместитьВоВременноеХранилище(Настройки, УникальныйИдентификатор);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресНастроекОбмена"	, лАдресНастроекОбмена);

	Возврат ПараметрыФормы;
	 
КонецФункции


#КонецОбласти


#Область ОбработчикиЭлементовФормы


&НаКлиенте
Процедура ИсточникДанных1СПриИзменении(Элемент)
	ОбновлениеЭлементовФормы();
КонецПроцедуры


#КонецОбласти


#Область Прочее


&НаКлиенте
Процедура ОбновлениеЭлементовФормы()
	
	Если ТипДокумента = "Заказ" тогда
	
		Если ИсточникСлужбДоставкиЗаказа = "СвойствоЗаказов" тогда
			Элементы.СтраницаИсточникиСлужбДоставкиЗаказа.ТекущаяСтраница = Элементы.СтраницаСвойствоЗаказа;
		Иначе
			ИсточникСлужбДоставкиЗаказа = "СпособыДоставкиЗаказов";	
			Элементы.СтраницаИсточникиСлужбДоставкиЗаказа.ТекущаяСтраница = Элементы.СтраницаСлужбаДоставкиЗаказа;
		КонецЕсли;
		
		Элементы.СтраницыТиповДокументов.ТекущаяСтраница = Элементы.СтраницаЗаказы;
		
	ИначеЕсли ТипДокумента = "Отгрузка" тогда
		
		Элементы.СтраницыТиповДокументов.ТекущаяСтраница = Элементы.СтраницаОтгрузки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСлужбыДоставкиССайта(Команда)
		
	Попытка	
		СтрокаCML = ЗагрузитьСлужбыДоставкиССайтаСервер();
		
		РазборИЗаписьСлужб(Объект, СтрокаCML);
	Исключение
		
		Сообщить("Не удалось получить данные с сайта");
		
	КонецПопытки;

КонецПроцедуры

&НаСервере 
Функция ЗагрузитьСлужбыДоставкиССайтаСервер()
	
	СтрокаCML = ПланыОбмена.Б_ОбменССайтом.ПолучитьСлужебныеДанныеССайта(Объект);

	Возврат СтрокаCML;
	
КонецФункции

&НаСервере
Функция РазборИЗаписьСлужб(УзелОбмена, СтрокаCML)
		
	ЧтениеXML = Новый ЧтениеXML;
		
	Попытка
		ЧтениеXML.УстановитьСтроку(СтрокаCML);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;
	
	ТзнСоответствий = Новый ТаблицаЗначений;
	ТзнСоответствий.Колонки.Добавить("ТаблицаДанных");	
	ТзнСоответствий.Колонки.Добавить("ВременнаяТаблица");	
	
	НовСтрока = ТзнСоответствий.Добавить();
	НовСтрока.ВременнаяТаблица 	= СоответствияЗначенийСвойствЗаказа.Выгрузить();
	СоответствияЗначенийСвойствЗаказа.Очистить();
	НовСтрока.ТаблицаДанных 	= СоответствияЗначенийСвойствЗаказа;
	
	НовСтрока = ТзнСоответствий.Добавить();
	НовСтрока.ВременнаяТаблица 	= СоответствияЗначенийСвойствОтгрузки.Выгрузить();
	СоответствияЗначенийСвойствОтгрузки.Очистить();
	НовСтрока.ТаблицаДанных 	= СоответствияЗначенийСвойствОтгрузки;
	
	НовСтрока = ТзнСоответствий.Добавить();
	НовСтрока.ВременнаяТаблица 	= СоответствияСпособовДоставкиЗаказа.Выгрузить();
	СоответствияСпособовДоставкиЗаказа.Очистить();
	НовСтрока.ТаблицаДанных 	= СоответствияСпособовДоставкиЗаказа;
	
	лЭтоСтатусы		= Ложь;
	лЭтоИд 			= Ложь;
	лЭтоНазвание	= Ложь;
	
	Пока ЧтениеXML.Прочитать() Цикл
			
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.ЛокальноеИмя = "СлужбыДоставки" тогда
			лЭтоСтатусы = Истина;
		КонецЕсли;
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.ЛокальноеИмя = "СлужбыДоставки" тогда
			лЭтоСтатусы = Ложь;
		КонецЕсли;
		
		Если лЭтоСтатусы тогда
			
			Если ЧтениеXML.ТипУзла 	= ТипУзлаXML.НачалоЭлемента И ЧтениеXML.ЛокальноеИмя = "Элемент" тогда
				СтруктураСтр = Новый Структура("Ид, Название, Касса")
			КонецЕсли;
			
				Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.ЛокальноеИмя = "Название" тогда
					лЭтоНазвание = Истина;
				ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.ЛокальноеИмя = "Название" тогда
					лЭтоНазвание = Ложь;
				ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.ЛокальноеИмя = "Ид" тогда
					лЭтоИд = Истина;
				ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.ЛокальноеИмя = "Ид" тогда
					лЭтоИд = Ложь;
				КонецЕсли;
				
				Если лЭтоНазвание И ЧтениеXML.ТипУзла = ТипУзлаXML.Текст тогда
					СтруктураСтр.Название = ЧтениеXML.Значение;
				КонецЕсли;
				
				Если лЭтоИд И ЧтениеXML.ТипУзла = ТипУзлаXML.Текст тогда
					СтруктураСтр.Ид = ЧтениеXML.Значение;
				КонецЕсли;
			
			Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.ЛокальноеИмя = "Элемент" тогда
				
				Для Каждого ТекСтрока из ТзнСоответствий Цикл
				
					Результат = ТекСтрока.ВременнаяТаблица.Найти(СтруктураСтр.Ид,"ИдСлужбы");
					
					Если Результат = Неопределено тогда
							
						НовСтр = ТекСтрока.ТаблицаДанных.Добавить();
						НовСтр.ИдСлужбы 		= СтруктураСтр.Ид;
						НовСтр.НазваниеСлужбы 	= СтруктураСтр.Название;
							
					Иначе
						
						НовСтр = ТекСтрока.ТаблицаДанных.Добавить();
						НовСтр.ИдСлужбы 		= СтруктураСтр.Ид;
						НовСтр.НазваниеСлужбы 	= СтруктураСтр.Название;
						НовСтр.Служба 			= Результат.Служба;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции


#КонецОбласти

