
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьСписокТикетов();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокТикетов()
	
	Выборка = РегистрыСведений.Б_ИнформацияООтправленныхТикетах.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Элементы.НомерТикета.СписокВыбора.Добавить(Выборка.НомерТикета, Выборка.Сообщение);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьТикет(Команда)
	Если Не ЗначениеЗаполнено(ЭлектронныйЯщик) тогда
		Сообщить("Не указан адрес электронной почты");
		Возврат;
	КонецЕсли;
	
	ОтправитьТикетСервер();	
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьТикетСервер()
	
	ОсновныеПараметры = Новый Структура;	
	ОсновныеПараметры.Вставить("ИмяПользователя", "");	
	ОсновныеПараметры.Вставить("Пароль"			, "");	
	ОсновныеПараметры.Вставить("ИмяФайлаЛога"	, "");	
	ОсновныеПараметры.Вставить("АдресСайта"		, "https://www.1c-bitrix.ru/rest/support.php");	
	
	ОписаниеОшибки = "";	
	НастройкиПодключения = Новый Структура;
	
	Если НЕ Б_ОбменССайтомСервер.ПолучитьНастройкиПодключения(НастройкиПодключения, ОсновныеПараметры) Тогда
		Сообщить(ОписаниеОшибки);	
		Возврат;
	КонецЕсли;

	Соединение = Б_ОбменССайтомСервер.ПолучитьСоединениеССервером(НастройкиПодключения, Неопределено);
	
	ПараметрыHTTPЗапроса = ПолучитьТелоСообщения();
	
	АдресСкрипта = "/rest/support.php";
	
	Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
	ИмяФайлаДляЗагрузки = АдресЛогФайла; 

	ИмяФайлаОтправки = КаталогВременныхФайлов() + "post.txt";

	МассивФайловДляОбъединения = Новый Массив;

	Если ЗначениеЗаполнено(АдресЛогФайла) тогда	
		ДобавитьФайл(Boundary, МассивФайловДляОбъединения, АдресЛогФайла, "file");	
	КонецЕсли;
	
	Счетчик = 0;
	Для каждого ТекСтрока из ПриложенныеФайлы Цикл
		Если ЗначениеЗаполнено(ТекСтрока.Файл) тогда	
			ДобавитьФайл(Boundary, МассивФайловДляОбъединения, ТекСтрока.Файл, "screens" + ?(Счетчик = 0, "", Строка(Счетчик)));
			Счетчик = Счетчик + 1;
		КонецЕсли;
	КонецЦикла;
	
	ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
	ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.UTF8, Символы.ПС, Ложь);

    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""submit""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку("1");

    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""decode""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку("0");

    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""message""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.message);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""action""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.action);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""ticket""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.ticket);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""email""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.email);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""unique_id""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.unique_id);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""hash""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.hash);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""TestParam""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.TestParam);
	
    ФайлОтправкиКонец.Закрыть();
    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец);

    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);

    ЗаголовокHTTP = Новый Соответствие();
    ЗаголовокHTTP.Вставить("Content-Type", "multipart/form-data; boundary=" + Boundary);

    ФайлОтправки = Новый Файл(ИмяФайлаОтправки);
    РазмерФайлаОтправки = XMLСтрока(ФайлОтправки.Размер());
    ЗаголовокHTTP.Вставить("Content-Length", РазмерФайлаОтправки);

	Попытка
		
		ЗапросHTTP = Новый HTTPЗапрос(АдресСкрипта, ЗаголовокHTTP);
		ЗапросHTTP.УстановитьИмяФайлаТела(ИмяФайлаОтправки);  
		
		ОтветHTTP = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
	Исключение
		Сообщить("Неудачная попытка отправки тикета в техподдержку");
		Возврат;
	КонецПопытки;
	
	лОтвет = ОтветHTTP.ПолучитьТелоКакСтроку(); 
	
	РазобранныйОтвет = Б_ОбщиеПроцедурыИФункцииСервер.РазобратьОтветСервера(лОтвет);
	
	УспешноОтправлен = Ложь;
	
	Если ТипЗнч(РазобранныйОтвет) = Тип("Структура") тогда
		
		Если РазобранныйОтвет.Свойство("link") тогда
			
			Если ЗначениеЗаполнено(РазобранныйОтвет.link) тогда
				НоваяЗапись = РегистрыСведений.Б_ИнформацияООтправленныхТикетах.СоздатьМенеджерЗаписи();
				НоваяЗапись.НомерТикета = СокрЛП(РазобранныйОтвет.link);
				НоваяЗапись.Сообщение = Сообщение;
				НоваяЗапись.Записать();
				
				УспешноОтправлен = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если УспешноОтправлен тогда
		
		Если СуществующийТикет тогда
			Сообщить("Добавлена информация в тикет:" + СокрЛП(РазобранныйОтвет.link));
		Иначе
			Сообщить("Тикет отправлен. Номер тикета:" + СокрЛП(РазобранныйОтвет.link));
		КонецЕсли;
		
		НомерТикета = СокрЛП(РазобранныйОтвет.link);
		ПолучитьСписокТикетов();
		
	Иначе
		
		Если СуществующийТикет тогда
			Сообщить("Не удалось добавить информацию в тикет:" + НомерТикета);
		Иначе
			Сообщить("Не удалось отправить тикет в техподдержку.");
		КонецЕсли;
		
	КонецЕсли;
	
	ЗапросHTTP = Неопределено;
	
	УдалитьФайлы(ИмяФайлаОтправки);
	Для каждого ЭлементМассива Из МассивФайловДляОбъединения Цикл
		УдалитьФайлы(ЭлементМассива);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьФайл(Boundary, МассивФайловДляОбъединения, ИмяФайлаДляЗагрузки, НазваниеПеременной)
	
	ИнформацияОФайле = новый Файл(ИмяФайлаДляЗагрузки);
	НазваниеФайла = ИнформацияОФайле.Имя;
	
	Если НазваниеПеременной = "file" тогда
		НазваниеФайла = "Log_"+ НазваниеФайла;	
	КонецЕсли;
	
	//Формируем начальный фрагмент файла POST-запроса
    ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);
	
	//Определяем раздел двоичных данных
    ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary);
	
	ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name="""+НазваниеПеременной+"""; filename=""" + НазваниеФайла + """");
	
	ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/x-octet-stream");
    ФайлОтправкиНачало.ЗаписатьСтроку("");
    ФайлОтправкиНачало.Закрыть();

    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

    //Копируем файл для загрузки во временный и добавляем в массив файлов для объединения
    ИмяФайлаДляЗагрузкиВременный = ПолучитьИмяВременногоФайла("tmp");
    КопироватьФайл(ИмяФайлаДляЗагрузки, ИмяФайлаДляЗагрузкиВременный);
    МассивФайловДляОбъединения.Добавить(ИмяФайлаДляЗагрузкиВременный);

    //Формируем конечный фрагмент файла POST-запроса
    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.UTF8, Символы.ПС, Ложь);
	//Завершение раздела двоичных данных
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.Закрыть();

    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец);
КонецПроцедуры

&НаСервере
Функция ПолучитьТелоСообщения()
	
	лРелиз 					= Метаданные.Версия;
	лПрикладноеРешение 		= Метаданные.Синоним;
	лЛокализация            = ТекущийКодЛокализации();
	лТипБазы		        = ?(Лев(СтрокаСоединенияИнформационнойБазы(),4) = "File", "Файловая", "Клиент-серверная");
	
	лСистемнаяИнформация = новый СистемнаяИнформация;
	лВерсияПлатформы1С		= лСистемнаяИнформация.ВерсияПриложения;
	лВерсияОС				= лСистемнаяИнформация.ВерсияОС;	
	
	лВерсияМодуля 			= Б_ОбменССайтомСервер.Версия();
	лНазваниеМодуля 		= "Интернет-магазин + «1С»";
	лМодульДляКонфигурации 	= Б_ОбщиеПроцедурыИФункцииСервер.ПолучитьСлужебноеНазваниеКонфигурации();
	лЛокализацияМодуля 		= Б_ОбщиеПроцедурыИФункцииСервер.ПолучитьЛокализациюКонфигурации();
	
	лУникальныйКод = Строка(Новый УникальныйИдентификатор);
	
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.MD5);
	ХешированиеДанных.Добавить(КодироватьСтроку(лУникальныйКод + "BX_1C", СпособКодированияСтроки.КодировкаURL));
	лХэш = НРег(СтрЗаменить(ХешированиеДанных.ХешСумма, " ", ""));
	
	СуществующийТикет = Ложь;
	Выборка = РегистрыСведений.Б_ИнформацияООтправленныхТикетах.Выбрать(Новый Структура("НомерТикета", НомерТикета)); 
	СуществующийТикет = Выборка.Следующий();
	
	СообщениеВТехподдержку = "";
	
	Если НЕ СуществующийТикет тогда
	
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Версия ОС: " + лВерсияОС + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Версия платформы 1С: " + лВерсияПлатформы1С + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Тип базы 1С: " + лТипБазы + Символы.ПС;
		
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Прикладное решение 1С: " + лПрикладноеРешение + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Локализация прикладного решения 1С" + лЛокализация + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Релиз прикладного решения 1С: " + лРелиз + Символы.ПС;
		
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Название модуля для 1С: " + лНазваниеМодуля + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Версия модуля для 1С: " + лВерсияМодуля + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Модуль разрабатывался для конфигурации : " + лМодульДляКонфигурации + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Локализация модуля для 1С: " + лЛокализацияМодуля + Символы.ПС;
	КонецЕсли;
	
	СообщениеВТехподдержку = СообщениеВТехподдержку + Символы.ПС;
	СообщениеВТехподдержку = СообщениеВТехподдержку + Символы.ПС;
	
	СообщениеВТехподдержку = СообщениеВТехподдержку + Сообщение;
		  
	//СообщениеВТехподдержку = КодироватьСтроку(СообщениеВТехподдержку, СпособКодированияСтроки.КодировкаURL, "UTF8");
	
	
	ТелоHTTPЗапроса = новый Структура;
	ТелоHTTPЗапроса.Вставить("ticket"	, ?(ЗначениеЗаполнено(НомерТикета),НомерТикета, ""));
	ТелоHTTPЗапроса.Вставить("email"	, ЭлектронныйЯщик);
	ТелоHTTPЗапроса.Вставить("message"	, СообщениеВТехподдержку);
	ТелоHTTPЗапроса.Вставить("unique_id", лУникальныйКод);
	ТелоHTTPЗапроса.Вставить("hash"		, лХэш);
	ТелоHTTPЗапроса.Вставить("action"	, "1CLogs");
	ТелоHTTPЗапроса.Вставить("TestParam", "test");
	
	Возврат ТелоHTTPЗапроса;	
	
КонецФункции


&НаКлиенте
Процедура АдресЛогФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
		Предупреждение(НСтр("ru = 'Для данной операции необходимо установить расширение работы с файлами!'"));
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	Диалог.Заголовок = НСтр("ru = 'Укажите лог файла'");
	Диалог.ПолноеИмяФайла   = АдресЛогФайла;
	
	Если Диалог.Выбрать() Тогда
		
		АдресЛогФайла = Диалог.ПолноеИмяФайла;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
			
	СтандартнаяОбработка = Ложь;
	
	Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
		Предупреждение(НСтр("ru = 'Для данной операции необходимо установить расширение работы с файлами!'"));
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	Диалог.Заголовок = НСтр("ru = 'Укажите лог файла'");
	Диалог.ПолноеИмяФайла   = Элементы.ПриложенныеФайлы.ТекущиеДанные.Файл;
	
	Если Диалог.Выбрать() Тогда
		
		Элементы.ПриложенныеФайлы.ТекущиеДанные.Файл = Диалог.ПолноеИмяФайла;
		
	КонецЕсли;

КонецПроцедуры

