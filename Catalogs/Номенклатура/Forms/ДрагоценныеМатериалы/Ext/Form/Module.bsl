
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(Параметры.Номенклатура.ПолучитьОбъект(), "Номенклатура");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ОчиститьСообщения();
	
	Если Модифицированность
		И Не ВыполняетсяЗакрытие Тогда
		
		Отказ = Истина;
		
		Если ЗавершениеРаботы Тогда
			ТекстПредупреждения = НСтр("ru = 'Данные были изменены. Все изменения будут потеряны.'");
			
			Возврат;
		КонецЕсли;
		
		Оповещение   = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить?'");
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
	Если СохранитьРезультат Тогда
		СохранитьРезультат  = Ложь;
		ВыполняетсяЗакрытие = Ложь;
		
		ПроверитьЗаписатьНаСервере(Отказ);
		
		Если Не Отказ Тогда
			Оповестить("Запись_ДрагоценныеМатериалы", Номенклатура.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьРезультат  = Истина;
		ВыполняетсяЗакрытие = Истина;
		
		Закрыть();
		
		Возврат;
	КонецЕсли;
	
	ВыполняетсяЗакрытие = Истина;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДрагоценныеМатериалы

&НаКлиенте
Процедура ДрагоценныеМатериалыПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	СохранитьРезультат  = Истина;
	ВыполняетсяЗакрытие = Истина;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ВыполняетсяЗакрытие = Истина;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьЗаписатьНаСервере(Отказ)
	
	СправочникОбъект = РеквизитФормыВЗначение("Номенклатура");
	
	Для Каждого СтрокаДрагоценныйМатериал Из СправочникОбъект.ДрагоценныеМатериалы Цикл
		Если Не ЗначениеЗаполнено(СтрокаДрагоценныйМатериал.ДрагоценныйМатериал) Тогда
			
			ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""%ИмяКолонки%"" в строке ""%НомерСтроки%"" списка ""Драгоценные металлы и камни""'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяКолонки%",
				Метаданные.Справочники.Номенклатура.ТабличныеЧасти.ДрагоценныеМатериалы.Реквизиты.ДрагоценныйМатериал.Синоним);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%",
				СтрокаДрагоценныйМатериал.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
				,
				"Номенклатура.ДрагоценныеМатериалы["+(СтрокаДрагоценныйМатериал.НомерСтроки-1)+"].ДрагоценныйМатериал",
				,
				Отказ);
				
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаДрагоценныйМатериал.Количество) Тогда
			
			ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""%ИмяКолонки%"" в строке ""%НомерСтроки%"" списка ""Драгоценные металлы и камни""'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяКолонки%",
				Метаданные.Справочники.Номенклатура.ТабличныеЧасти.ДрагоценныеМатериалы.Реквизиты.Количество.Синоним);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%",
				СтрокаДрагоценныйМатериал.НомерСтроки);

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
				,
				"Номенклатура.ДрагоценныеМатериалы["+(СтрокаДрагоценныйМатериал.НомерСтроки-1)+"].Количество",
				,
				Отказ);
			
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаДрагоценныйМатериал.Расположение) 
			Тогда
			
			ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""%ИмяКолонки%"" в строке ""%НомерСтроки%"" списка ""Драгоценные металлы и камни""'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяКолонки%",
				Метаданные.Справочники.Номенклатура.ТабличныеЧасти.ДрагоценныеМатериалы.Реквизиты.Расположение.Синоним);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%",
				СтрокаДрагоценныйМатериал.НомерСтроки);

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
				,
				"Номенклатура.ДрагоценныеМатериалы["+(СтрокаДрагоценныйМатериал.НомерСтроки-1)+"].Расположение",
				,
				Отказ);
			
		КонецЕсли;
	КонецЦикла;
	
	Если Не Отказ Тогда
		СправочникОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
КонецПроцедуры

#КонецОбласти
