#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ТаблицаКонвертацииОКВЭД_ОКВЭД2() Экспорт
	
	ТекстКонвертации = Справочники.КлассификаторОКВЭД2.ПолучитьМакет("КонвертацияОКВЭД_ОКВЭД2").ПолучитьТекст();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТекстКонвертации);
	
	Если Не ЧтениеXML.Прочитать() Тогда
		ВызватьИсключение НСтр("ru = 'Пустой XML'");
	ИначеЕсли ЧтениеXML.Имя <> "КонвертацияОКВЭД_ОКВЭД2" Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка в структуре XML'");
	КонецЕсли;
	
	ТаблицаКонвертацииОКВЭД_ОКВЭД2 = Новый ТаблицаЗначений;
	ТаблицаКонвертацииОКВЭД_ОКВЭД2.Колонки.Добавить("КодОКВЭД",   Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(8)));
	ТаблицаКонвертацииОКВЭД_ОКВЭД2.Колонки.Добавить("КодОКВЭД2",  Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(8)));
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		ИмяУзла = ЧтениеXML.Имя;
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если ИмяУзла = "КонвертацияОКВЭД_ОКВЭД2" Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			Если ИмяУзла = "Элемент" Тогда
				
				ТекущаяСтрока = ТаблицаКонвертацииОКВЭД_ОКВЭД2.Добавить();
				ТекущаяСтрока.КодОКВЭД   = ЧтениеXML.ПолучитьАтрибут("КодОКВЭД");
				ТекущаяСтрока.КодОКВЭД2  = ЧтениеXML.ПолучитьАтрибут("КодОКВЭД2");
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	
	Возврат ТаблицаКонвертацииОКВЭД_ОКВЭД2;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УТ 11.3.4,
// создает элементы справочника по ранее созданным кодам ОКВЭД
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Конвертация", ТаблицаКонвертацииОКВЭД_ОКВЭД2());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Конвертация.КодОКВЭД,
	|	Конвертация.КодОКВЭД2
	|ПОМЕСТИТЬ Конвертация
	|ИЗ
	|	&Конвертация КАК Конвертация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлассификаторВидовЭкономическойДеятельности.Ссылка КАК Ссылка
	|ИЗ
	|	Конвертация КАК Конвертация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторВидовЭкономическойДеятельности КАК КлассификаторВидовЭкономическойДеятельности
	|		ПО Конвертация.КодОКВЭД = КлассификаторВидовЭкономическойДеятельности.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОКВЭД2 КАК КлассификаторОКВЭД2
	|		ПО Конвертация.КодОКВЭД2 = КлассификаторОКВЭД2.Код
	|ГДЕ
	|	КлассификаторОКВЭД2.Ссылка ЕСТЬ NULL
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
 	ПолноеИмяОбъекта = "Справочник.КлассификаторВидовЭкономическойДеятельности";
	МетаданныеСправочника = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Параметры.Вставить("Конвертация", ТаблицаКонвертацииОКВЭД_ОКВЭД2());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Конвертация.КодОКВЭД,
	|	Конвертация.КодОКВЭД2
	|ПОМЕСТИТЬ Конвертация
	|ИЗ
	|	&Конвертация КАК Конвертация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлассификаторВидовЭкономическойДеятельности.Ссылка КАК Ссылка,
	|	КлассификаторВидовЭкономическойДеятельности.ВерсияДанных КАК ВерсияДанных,
	|	Конвертация.КодОКВЭД2 КАК КодОКВЭД2
	|ИЗ
	|	ВТДляОбработкиКлассификаторВидовЭкономическойДеятельности КАК ВТОбъектыДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторВидовЭкономическойДеятельности КАК КлассификаторВидовЭкономическойДеятельности
	|		ПО ВТОбъектыДляОбработки.Ссылка = КлассификаторВидовЭкономическойДеятельности.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Конвертация КАК Конвертация
	|		ПО Конвертация.КодОКВЭД = КлассификаторВидовЭкономическойДеятельности.Код
	|";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
		
	КлассификаторОКВЭД2 = Справочники.Организации.КлассификаторОКВЭД2();
	КлассификаторОКВЭД2.Индексы.Добавить("Код");
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить("Справочник.КлассификаторОКВЭД2");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать данные для обработки элемента классификатора ОКВЭД: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеСправочника,
									Выборка.Ссылка,
									ТекстСообщения);
			Продолжить;
			
		КонецПопытки;
		
		СправочникОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
		Если СправочникОбъект = Неопределено Тогда
			ЗафиксироватьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		Попытка
			
			КодОКВЭД2 = Выборка.КодОКВЭД2;
			ЭлементКлассификатора = Справочники.КлассификаторОКВЭД2.НайтиПоКоду(КодОКВЭД2);
			Если Не ЗначениеЗаполнено(ЭлементКлассификатора) Тогда
				
				СтрокиКлассификатора = КлассификаторОКВЭД2.НайтиСтроки(Новый Структура("Код", КодОКВЭД2));
				Если СтрокиКлассификатора.Количество() = 0 Тогда
					ЗафиксироватьТранзакцию();
					Продолжить;
				КонецЕсли;
				
				СтрокаКлассификатора = СтрокиКлассификатора[0];
				НовыйЭлементКлассификатора = Справочники.КлассификаторОКВЭД2.СоздатьЭлемент();
				НовыйЭлементКлассификатора.Код = СтрокаКлассификатора.Код;
				НовыйЭлементКлассификатора.Наименование       = СтрокаКлассификатора.Наименование;
				НовыйЭлементКлассификатора.НаименованиеПолное = СтрокаКлассификатора.Наименование;
				НовыйЭлементКлассификатора.Записать();
				
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
		
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать элемент классификатора ОКВЭД : %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеСправочника,
				Выборка.Ссылка,
				ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли