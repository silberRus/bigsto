
&НаКлиенте
Перем ОбновитьИнтерфейс;

&НаКлиенте
Перем ОбъектЗаписан;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Статус = Перечисления.СтатусыНаправленияДеятельности.Используется;
		ПриЧтенииСоздании();
	КонецЕсли;
	
	НеУТ = НЕ ПолучитьФункциональнуюОпцию("УправлениеТорговлей");
	Элементы.ГруппаТипДеятельности.Видимость = НеУТ;
	Элементы.ГруппаОбъектыУчета.Видимость = НеУТ;
	Элементы.ГруппаДенежныеСредстваВнеоборотныеАктивы.Доступность = Объект.УчетЗатрат;
	Элементы.ГруппаОбособлениеСверхПотребностиОтступ.Доступность = Объект.УчетЗатрат;
	Элементы.ГруппаОбособлениеСверхПотребностиОтступ.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов");
	
	// подсистема запрета редактирования ключевых реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСоздании();
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ТекущийОбъект.УчетЗатрат Тогда
		ТекущийОбъект.УчетДенежныхСредствРаздельно = Ложь;
		ТекущийОбъект.УчетДенежныхСредствПоКорреспонденции = Ложь;
		ТекущийОбъект.УчетВнеоборотныхАктивов = Ложь;
	КонецЕсли;
	
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если НЕ ЗавершениеРаботы И ОбновитьИнтерфейс = Истина И ОбъектЗаписан = Истина Тогда
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбъектЗаписан = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УчетДоходовПриИзменении(Элемент)
	
	ОбновитьИнтерфейс = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УчетЗатратПриИзменении(Элемент)
	
	ОбновитьИнтерфейс = Истина;
	
	Если Не Объект.УчетЗатрат Тогда
		УчетДенежныхСредств = Ложь;
		Объект.УчетДенежныхСредствРаздельно = Ложь;
		Объект.УчетДенежныхСредствПоКорреспонденции = Ложь;
		Объект.УчетВнеоборотныхАктивов = Ложь;
		Объект.ДопускаетсяОбособлениеСверхПотребности = Ложь;
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежныеСредстваПриИзменении(Элемент)
	
	ОбновитьИнтерфейс = Истина;
	
	Если УчетДенежныхСредств Тогда
		Объект.УчетДенежныхСредствРаздельно = Истина;
		СпособУчетаДС = "РаздельныйУчет";
	Иначе
		Объект.УчетДенежныхСредствРаздельно = Ложь;
		Объект.УчетДенежныхСредствПоКорреспонденции = Ложь;
		СпособУчетаДС = "";
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВнеоборотныеАктивыПриИзменении(Элемент)
	
	ОбновитьИнтерфейс = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособУчетаДСПриИзменении(Элемент)
	
	ОбновитьИнтерфейс = Истина;
	
	Объект.УчетДенежныхСредствРаздельно = СпособУчетаДС = "РаздельныйУчет";
	Объект.УчетДенежныхСредствПоКорреспонденции = НЕ Объект.УчетДенежныхСредствРаздельно;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипНаправленияДеятельностиПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЦелевыеПараметрыКонтракта(Команда)
	
	ПараметрыФормы = ПараметрыФормыЦелевыеПараметрыКонтрактаГОЗ();
	ОписаниеОповещения = Новый ОписаниеОповещения("ЦелевыеПараметрыКонтрактаОбработкаВыбора", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.НаправленияДеятельности.Форма.ФормаЦелевыеПараметрыКонтрактаГОЗ", 
		ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ОбщегоНазначенияУТКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтаФорма);
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСоздании()
	
	УчетДенежныхСредств = Объект.УчетДенежныхСредствРаздельно ИЛИ Объект.УчетДенежныхСредствПоКорреспонденции;
	
	Если Объект.УчетДенежныхСредствРаздельно Тогда
		СпособУчетаДС = "РаздельныйУчет";
	ИначеЕсли Объект.УчетДенежныхСредствПоКорреспонденции Тогда
		СпособУчетаДС = "ПоКорреспонденции";
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	Элементы.ГруппаДенежныеСредстваВнеоборотныеАктивы.Доступность = Объект.УчетЗатрат;
	Элементы.ГруппаОбособлениеСверхПотребностиОтступ.Доступность = Объект.УчетЗатрат;

	Элементы.ГруппаСпособУчетаДС.Доступность = УчетДенежныхСредств;

КонецПроцедуры

&НаСервере
Функция ПараметрыФормыЦелевыеПараметрыКонтрактаГОЗ()
	
	ПараметрыФормы = Справочники.НаправленияДеятельности.СтруктураЦелевыхПараметровКонтрактаГОЗ();
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, Объект);
	
	Возврат ПараметрыФормы;
	
КонецФункции

&НаКлиенте
Процедура ЦелевыеПараметрыКонтрактаОбработкаВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ЗаполнитьЗначенияСвойств(Объект, Результат);
	
КонецПроцедуры

#КонецОбласти

