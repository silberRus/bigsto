#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Обработчик первого запуска.
// Заполняет предопределенные элементы справочника "НастройкиХозяйственныхОпераций".
//
Процедура ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций(Параметры = Неопределено) Экспорт
	
	РеквизитыXML = Справочники.НастройкиХозяйственныхОпераций.ПолучитьМакет("НастройкиПредопределенныхЭлементов").ПолучитьТекст();
	РеквизитыТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(РеквизитыXML).Данные;
	
	СвязанныеДокументыXML = Справочники.НастройкиХозяйственныхОпераций.ПолучитьМакет("СвязанныеДокументы").ПолучитьТекст();
	СвязанныеДокументыТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(СвязанныеДокументыXML).Данные;
	ДобавитьИдентификаторыМетаданныхДокументов(СвязанныеДокументыТаблица);
	
	ФункциональныеОпцииXML = Справочники.НастройкиХозяйственныхОпераций.ПолучитьМакет("ФункциональныеОпции").ПолучитьТекст();
	ФункциональныеОпцииТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(ФункциональныеОпцииXML).Данные;
	
	Для каждого Реквизиты Из РеквизитыТаблица Цикл
		ID = Реквизиты.ID;
		Объект = Справочники.НастройкиХозяйственныхОпераций[ID].ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект, Реквизиты);
		
		// На случай если региональные настройки представления логическийх значений отличаются от типовых.
		Объект.ИспользоватьВБюджетировании = Реквизиты.ИспользоватьВБюджетировании = "Да";
		Объект.ИспользоватьВМеждународномУчете = Реквизиты.ИспользоватьВМеждународномУчете = "Да";
		Объект.ИспользоватьДляВыбора = Реквизиты.ИспользоватьДляВыбора = "Да";
		Объект.ИспользоватьВРеестреДокументов = Реквизиты.ИспользоватьВРеестреДокументов = "Да";
		
		Приход = Реквизиты.Приход;
		Если ЗначениеЗаполнено(Приход) Тогда
			Объект.Приход = Перечисления.ТипыДанныхУчета[Приход];
		КонецЕсли;
		
		Расход = Реквизиты.Расход;
		Если ЗначениеЗаполнено(Расход) Тогда
			Объект.Расход = Перечисления.ТипыДанныхУчета[Расход];
		КонецЕсли;
		
		Хозоперация = Реквизиты.ID;
		Если ЗначениеЗаполнено(Хозоперация) Тогда
			Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации[Хозоперация];
		КонецЕсли;
		
		Объект.Документы.Очистить();
		НайденныеСтроки = СвязанныеДокументыТаблица.Скопировать(Новый Структура("OwnerID", ID));
		НайденныеСтроки.Свернуть("ПредставлениеДокумента,ИдентификаторОбъектаМетаданных");
		НайденныеСтроки.Сортировать("ПредставлениеДокумента");
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если ЗначениеЗаполнено(НайденнаяСтрока.ИдентификаторОбъектаМетаданных) Тогда
				ЗаполнитьЗначенияСвойств(Объект.Документы.Добавить(), НайденнаяСтрока);
			КонецЕсли;
		КонецЦикла;
		
		Объект.ФункциональныеОпции.Очистить();
		НайденныеСтроки = ФункциональныеОпцииТаблица.Скопировать(Новый Структура("OwnerID", ID));
		НайденныеСтроки.Сортировать("ИмяФункциональнойОпции");
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(Объект.ФункциональныеОпции.Добавить(), НайденнаяСтрока);
		КонецЦикла;
		
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
	КонецЦикла;

КонецПроцедуры

Процедура ДобавитьИдентификаторыМетаданныхДокументов(СвязанныеДокументы)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.OwnerID,
	|	Т.ИмяДокумента КАК ИмяДокумента,
	|	Т.ПредставлениеДокумента
	|ПОМЕСТИТЬ втСвязанныеДокументы
	|ИЗ
	|	&СвязанныеДокументы КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСвязанныеДокументы.OwnerID,
	|	втСвязанныеДокументы.ИмяДокумента,
	|	втСвязанныеДокументы.ПредставлениеДокумента,
	|	ИдентификаторыМетаданных.Ссылка КАК ИдентификаторОбъектаМетаданных
	|ИЗ
	|	втСвязанныеДокументы КАК втСвязанныеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыМетаданных
	|		ПО ВЫРАЗИТЬ(втСвязанныеДокументы.ИмяДокумента КАК СТРОКА(255)) = ИдентификаторыМетаданных.Имя
	|			И ИдентификаторыМетаданных.Родитель.Наименование = ""Документы""
	|");
	
	Запрос.УстановитьПараметр("СвязанныеДокументы", СвязанныеДокументы);
	СвязанныеДокументы = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
