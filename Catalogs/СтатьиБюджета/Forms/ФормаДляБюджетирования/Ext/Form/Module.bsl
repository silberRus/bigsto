
&НаКлиенте
Перем стСценарий;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекСтраница = "ТекстЗапроса";
	Элементы.Результат.Видимость = Ложь;
	Сценарий = Справочники.СценарииПланирования.Факт;
	
	текСсылкаДанных = ?(ЗначениеЗаполнено(Параметры.ЗначениеКопирования), Параметры.ЗначениеКопирования, Объект.Ссылка);
	ЗагрузитьЗапросы(Сценарий, текСсылкаДанных);
	ЗагрузитьМодели(текСсылкаДанных);
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("МоделиСтр", КонвертацияТипов.ПолучитьСтрокуИзМассива(КонвертацияТипов.ПолучитьОтмеченныеЗначенияСписка(Модели)));
	
КонецПроцедуры
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СохранитьЗапрос(Сценарий, ТекущийОбъект.Ссылка);
	СохранитьМодели();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьМодели(текСсылка)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Ссылка КАК Значение, 
	|	Ссылка.Наименование Наименование,
	|	МАКСИМУМ(ВЫБОР КОГДА СтатьяБюджета = &Ссылка ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ) Пометка
	|ИЗ
	|	Справочник.МоделиБюджетов.Показатели 
	|ГДЕ
	|	НЕ Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ 	ПО Ссылка
	|УПОРЯДОЧИТЬ 	ПО Наименование");
	
	Запрос.УстановитьПараметр("Ссылка", текСсылка);
	
	Модели = КонвертацияТипов.ПолучитьСписокЗначенийИзВыборки(Запрос.Выполнить().Выбрать(),,,"Пометка");
	
КонецПроцедуры
&НаСервере
Процедура СохранитьМодели()
	
	Запрос = Новый Запрос("
	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка ПОМЕСТИТЬ Модели ИЗ Справочник.МоделиБюджетов ГДЕ Ссылка В(&Модели);
	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка, МАКСИМУМ(ВЫБОР КОГДА СтатьяБюджета = &Ссылка ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ) ЕстьСтатья
	|ПОМЕСТИТЬ 	ВсеМодели
	|ИЗ 		Справочник.МоделиБюджетов.Показатели 
	|СГРУППИРОВАТЬ ПО Ссылка;
	
	|ВЫБРАТЬ
	|	Спр.Ссылка,
	|	НЕ Спр.ЕстьСтатья И НЕ Отмеченные.Ссылка ЕСТЬ NULL Добавить,
	|	Спр.ЕстьСтатья И Отмеченные.Ссылка ЕСТЬ NULL Удалить
	|ИЗ 	
	|	ВсеМодели Спр
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ 	Модели Отмеченные
	|ПО					Спр.Ссылка = Отмеченные.Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Модели", КонвертацияТипов.ПолучитьОтмеченныеЗначенияСписка(Модели));
	
	НачатьТранзакцию();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Добавить Тогда
			
			Спр = Выборка.Ссылка.ПолучитьОбъект();
			Спр.Показатели.Добавить().СтатьяБюджета = Объект.Ссылка;
			Спр.Записать();
			
		ИначеЕсли Выборка.Удалить Тогда
			
			Спр = Выборка.Ссылка.ПолучитьОбъект();
			Спр.Показатели.Удалить(Спр.Показатели.Индекс(Спр.Показатели.НайтиСтроки(Новый Структура("СтатьяБюджета", Объект.Ссылка))[0]));
			Спр.Записать();
			
		КонецЕсли;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьЗапрос(текСценарий, текСтатья)
	
	Запись = РегистрыСведений.ЗапросыДДС.СоздатьМенеджерЗаписи();
	Запись.Статья 					= текСтатья;
	Запись.Сценарий 				= текСценарий;
	Запись.ТекстЗапроса 			= ТекстЗапроса;
	Запись.ТекстЗапросаСсылка		= ТекстЗапросаСсылка;
	Запись.ТекстЗапросаРасшифровки	= ТекстРасшифровки;
	Запись.ТекстЗапросаРасшифровкиСсылка = ТекстРасшифровкиСсылка;
	Запись.Параметры 				= ЗначениеВСтрокуВнутр(ПараметрыЗапроса.Выгрузить());
	Запись.Записать();
	
КонецПроцедуры
&НаСервере
Процедура ЗагрузитьЗапросы(текСценарий, ТекСсылка)
	
	Настройки = Бюджетирование.ПолучитьНастройкиЗапросаПолностью(ТекСсылка, текСценарий);
	
	Если Настройки = Неопределено Тогда
		
		ТекстЗапроса 		= "";
		ТекстРасшифровки 	= "";
		ТекстЗапросаСсылка 		= Справочники.ТекстыЗапросов.ПустаяСсылка();
		ТекстРасшифровкиСсылка 	= Справочники.ТекстыЗапросов.ПустаяСсылка();
		ПараметрыЗапроса.Очистить();
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Настройки);
		
		//ТекстЗапроса 		= Настройки.ТекстЗапроса;
		//ТекстРасшифровки 	= Настройки.ТекстРасшифровки;
		//ТекстЗапросаСсылка	= Настройки.ТекстЗапросаСсылка;
		//ТекстРасшифровкиСсылка 	= Настройки.ТекстРасшифровки;
		
		
		ПараметрыЗапроса.Загрузить(Настройки.Параметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьНаСервере()
	
	ТекстОшибки = "";
	ТекТекст 	= ЭтаФорма[ТекСтраница];
	
	Если ПустаяСтрока(ТекТекст) Тогда
		
		ТекстОшибки = "Текст запроса пустой";
		
	Иначе
		
		Запрос = Новый Запрос(ТекТекст);
		Для Каждого Строка Из ПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Строка.Ключ, Строка.Значение);
		КонецЦикла;
		
		Отбор = Новый Структура("СтатьяБюджета, Период, Запрос",
							Объект.Ссылка, Период, Запрос);
		Попытка
			Результат.Загрузить(Бюджетирование.ПолучитьРезультатВыполненияЗапроса(Отбор));
		Исключение
			ТекстОшибки = ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли;
	
	Возврат ТекстОшибки;
	
КонецФункции
&НаКлиенте
Процедура Проверить(Команда)
	
	ОпОшибки = ПроверитьНаСервере();
	Если Не ПустаяСтрока(ОпОшибки) Тогда
		Сообщить(ОпОшибки);
	Иначе
		Элементы.Результат.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Убрать(Команда)
	
	Элементы.Результат.Видимость = Ложь;
	
КонецПроцедуры


&НаКлиенте
Процедура СтраницыЗапросовПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ТекСтраница = Сред(ТекущаяСтраница.Имя, 2);
	
КонецПроцедуры


&НаКлиенте
Процедура МоделиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Модели.НайтиПоИдентификатору(ВыбраннаяСтрока).Значение);
	
КонецПроцедуры

Процедура УправлениеВидимостьюДоступностью()
	
	Элементы.ТекстЗапроса.Доступность 		= ТекстЗапросаСсылка.Пустая();
	Элементы.ТекстРасшифровки.Доступность 	= ТекстРасшифровкиСсылка.Пустая();
	
КонецПроцедуры
&НаКлиенте
Процедура ТекстЗапросаСсылкаПриИзменении(Элемент)
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры
&НаКлиенте
Процедура ТекстЗапросаРасшифровкаСсылкаПриИзменении(Элемент)
	
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры
