
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);

	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	Элементы.ГруппаПараметрыПроизводственногоПодразделения.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство");
	Элементы.ГруппаПараметрыОбособленногоУчета.Видимость = ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "Ссылка");
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ПеречислениеСсылка.ВариантыОбособленногоУчетаТоваров") Тогда
		
		Модифицированность = Истина;
		Объект.ВариантОбособленногоУчетаТоваров = ВыбранноеЗначение;
		ЗаполнитьПредставлениеПараметров();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("Запись_СтруктураПредприятия");
	
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИспользованиеВСхемахОбеспечения(Команда)
	
	
	Возврат; // в УТ пустой обработчик
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура КомандаПараметрыПроизводственногоПодразделения(Команда)
	
	ПараметрыПроизводства = Новый Структура("ГрафикРаботы,ИнтервалПланирования,
											|НачалоИнтервалаПланирования,ОкончаниеИнтервалаПланирования,
											|УправлениеМаршрутнымиЛистами,СпособПооперационногоУправления,
											|ЗаполнениеДоступностиДляРасписанияРЦКоличествоИнтервалов,
											|ЗаполнениеДоступностиДляРасписанияРЦЕдиницаВремени,
											|ЗаполнениеДоступностиДляРасписанияРЦНапоминаниеДней,
											|ЗаполнениеДоступностиДляГрафикаПроизводстваКоличествоИнтервалов,
											|ЗаполнениеДоступностиДляГрафикаПроизводстваЕдиницаВремени,
											|ЗаполнениеДоступностиДляГрафикаПроизводстваНапоминаниеДней,
											|ВремяНаРегистрациюВыполнения, ВремяНаРегистрациюВыполненияЕдИзм,
											|ПроизводственноеПодразделение, ПроизводствоПоЗаказам, ПроизводствоБезЗаказов,
											|ИспользуетсяСписаниеЗатратНаВыпуск, ПодразделениеДиспетчер,
											|ИспользоватьПооперационноеУправление,
											|ИспользоватьМатериалыВОперациях,
											|ИспользоватьВыходныеИзделияВОперациях,
											|ИспользоватьПооперационноеПланирование,
											|СпособПолученияПолуфабрикатов,
											|ПериодичностьОформленияВыработки,
											|ИспользоватьКТУ,
											|ИспользоватьТарифныеСтавки,
											|ИспользоватьОтработанноеВремя,
											|ИспользоватьБригадныеНаряды,
											|ИспользоватьПерсональныеНаряды,
											|");
	
	ЗаполнитьЗначенияСвойств(ПараметрыПроизводства, Объект);
	
	ПараметрыПроизводства.Вставить("СкладМатериалов", СкладМатериалов);
	
	ПараметрыФормы = Новый Структура("ПараметрыПроизводства,Ссылка,ТолькоПросмотр", ПараметрыПроизводства, Объект.Ссылка,ТолькоПросмотр);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПараметрыПроизводственногоПодразделенияЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.СтруктураПредприятия.Форма.ПараметрыПроизводственногоПодразделения", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыОбособленногоУчетаТоваров(Команда)
	
	ПараметрыФормы = Новый Структура("ВариантОбособленногоУчетаТоваров", Объект.ВариантОбособленногоУчетаТоваров);
	ОткрытьФорму("Справочник.СтруктураПредприятия.Форма.ПараметрыОбособленногоУчетаТоваров", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	
	ЗаполнитьСкладМатериалов();
	ЗаполнитьПредставлениеПараметров();
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСкладМатериалов()
	
	
	Возврат; // В УТ обработчик пустой
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроизводственногоПодразделенияЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

	Если РезультатЗакрытия <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Объект, РезультатЗакрытия);
		СкладМатериалов = РезультатЗакрытия.СкладМатериалов;
		ЗаполнитьПредставлениеПараметров();
		НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "ПроизводственноеПодразделение");
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПредставлениеПараметров()
	
	ЭтоКА = ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация");
	
	Если Объект.ПодразделениеДиспетчер
		И Объект.ПроизводствоПоЗаказам
		И Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение диспетчирует заказы на производство, производит продукцию по заказам и без заказов на производство.'");
			
	ИначеЕсли Объект.ПодразделениеДиспетчер  
		И Объект.ПроизводствоПоЗаказам 
		И Не Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение диспетчирует заказы на производство и производит продукцию по заказам.'");
			
	ИначеЕсли Объект.ПодразделениеДиспетчер
		И Не Объект.ПроизводствоПоЗаказам
		И Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение диспетчирует заказы на производство и производит продукцию без заказов.'");
		
	ИначеЕсли Объект.ПодразделениеДиспетчер
		И Не Объект.ПроизводствоПоЗаказам
		И Не Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение диспетчирует заказы на производство.'");
			
	ИначеЕсли Не Объект.ПодразделениеДиспетчер
		И Объект.ПроизводствоПоЗаказам
		И Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение производит продукцию по заказам и без заказов на производство.'");
			
	ИначеЕсли Не Объект.ПодразделениеДиспетчер
		И Объект.ПроизводствоПоЗаказам
		И Не Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение производит продукцию по заказам на производство.'");
			
	ИначеЕсли Не Объект.ПодразделениеДиспетчер
		И Не Объект.ПроизводствоПоЗаказам
		И Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение производит продукцию без заказов на производство.'");
			
	ИначеЕсли ЭтоКА И Объект.ПроизводствоБезЗаказов Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение производит продукцию.'");
			
	Иначе
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение не является производственным.'");
			
	КонецЕсли;
	
	Если Объект.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.НеВедется Тогда
		ПредставлениеОбособленногоУчетаТоваров = НСтр("ru = 'Обособленный учет товаров не ведется.'");
	ИначеЕсли Объект.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.ПоПодразделению Тогда
		ПредставлениеОбособленногоУчетаТоваров = НСтр("ru = 'Обособленный учет товаров ведется по подразделению.'");
	ИначеЕсли Объект.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения Тогда
		ПредставлениеОбособленногоУчетаТоваров = НСтр("ru = 'Обособленный учет товаров ведется по менеджерам подразделения.'");
	КонецЕсли;
	
КонецПроцедуры

//Конец ИнтеграцияС1СДокументооборотом

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СписокРеквизитов = "")
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Если СтруктураРеквизитов.Свойство("ПроизводственноеПодразделение")
		ИЛИ СтруктураРеквизитов.Свойство("Ссылка")
		ИЛИ Инициализация Тогда
		Элементы.ИспользованиеВСхемахОбеспечения.Видимость = 
				Объект.ПроизводственноеПодразделение 
				И Форма.ЕстьПравоПросмотраСхемОбеспечения
				И ЗначениеЗаполнено(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
