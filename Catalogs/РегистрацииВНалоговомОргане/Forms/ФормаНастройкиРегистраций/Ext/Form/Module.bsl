&НаКлиенте
Перем ВыполняетсяЗакрытие;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПодразделениеОрганизации = Неопределено;
	
	Если Параметры.Свойство("ПодразделениеОрганизации", ПодразделениеОрганизации) Тогда
		
		Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПодразделениеОрганизации, "Владелец");
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРегламентированныеПодразделения;
		
	ИначеЕсли Параметры.Свойство("Организация") Тогда
		
		Организация = Параметры.Организация;
		ОсновнаяРегистрация = Параметры.ОсновнаяРегистрация;
		ОткрытиеИзОрганизации = Параметры.ОткрытиеИзОрганизации;
		
	Иначе
		
		Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
		ДоступенВыборОрганизации = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
		Элементы.Организация.Видимость = ДоступенВыборОрганизации;
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаУправленческиеПодразделения;
		
	КонецЕсли;
	
	Если ДоступенВыборОрганизации Тогда
		Заголовок = НСтр("ru = 'Регистрации в налоговых органах'");
	Иначе
		
		ШаблонЗаголовкаФормы = НСтр("ru = 'Регистрации в налоговых органах (%1)'");
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонЗаголовкаФормы,
			Организация);
	
	КонецЕсли;
	
	
	НастроитьФормуПоОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВыполняетсяЗакрытие = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаРегистрацияВНалоговомОргане" Тогда
		
		ОбработкаЗаписиРегистрацииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.РегистрацииВНалоговомОргане.Форма.ФормаВыбораРегистрацииДляПодразделения" Тогда
		ЗаписатьНалоговыйОрганДляПодразделения(ВыбранноеЗначение);
		Модифицированность = ОткрытиеИзОрганизации;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ОткрытиеИзОрганизации Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗавершениеРаботы Тогда
		
		ТекстПредупреждения = НСтр("ru='Данные были изменены.
			|Перед завершением работы рекомендуется сохранить изменения,
			|иначе измененные данные будут утеряны.'");
		
		Возврат;
		
	Иначе
		
		Если Не ВыполняетсяЗакрытие и Модифицированность Тогда
			
			Отказ = Истина;
			
			ТекстВопроса       = НСтр("ru='Данные были изменены. Сохранить изменения?'");
			ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
			
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ОтветПользователя = РезультатВопроса;
	
	Если ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		
		ВыполняетсяЗакрытие = Истина;
		Закрыть();
		
	ИначеЕсли ОтветПользователя = КодВозвратаДиалога.Да Тогда
		ВыполняетсяЗакрытие = Истина;
		ПараметрыОповещения = Новый Структура("ОткатитьИзменения, ОсновнаяРегистрация", Ложь, ОсновнаяРегистрация);
		Оповестить("ЗавершеноРедактированиеРегистраций", ПараметрыОповещения);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	НастроитьФормуПоОрганизации();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНалоговыеОрганы

&НаКлиенте
Процедура НалоговыеОрганыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДаннаые = Элементы.НалоговыеОрганы.ТекущиеДанные;
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = "КоличествоПодразделенийУпрСтрокой" И ТекущиеДаннаые.НалоговыйОрган = ОсновнаяРегистрация Тогда
		Возврат
	ИначеЕсли Поле.Имя = "КоличествоПодразделенийУпрСтрокой" И ТекущиеДаннаые.НалоговыйОрган <> ОсновнаяРегистрация Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаУправленческиеПодразделения;
	ИначеЕсли Поле.Имя = "КоличествоПодразделенийРеглСтрокой" Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРегламентированныеПодразделения;
	ИначеЕсли Поле.Имя = "КоличествоПодразделенийНаОтдельномБалансеСтрокой" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РегистрацияВНалоговомОргане", ТекущиеДаннаые.НалоговыйОрган);
		ПараметрыФормы.Вставить("ГоловнаяОрганизация", ГоловнаяОрганизация);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ФормаОбособленныеПодразеделенияНаОтдельномБалансеЗакрытие", ЭтотОбъект);
		
		ОткрытьФорму("Справочник.РегистрацииВНалоговомОргане.Форма.ФормаПодразделенияНаОтдельномБалансе",
			ПараметрыФормы, ЭтаФорма,,,,ОписаниеОповещения);
		
	Иначе
		ПоказатьЗначение(Неопределено, ТекущиеДаннаые.НалоговыйОрган);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговыеОрганыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		
		ТекстСообщения = НСтр("ru = 'Не заполнено поле ""Организация""'"); 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Организация",, Отказ);
		
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Если Копирование Тогда
		
		ТекущиеДанные = Элементы.НалоговыеОрганы.ТекущиеДанные;
		ПараметрыФормы = Новый Структура("ЗначениеКопирования ", ТекущиеДанные.НалоговыйОрган);
		
	Иначе
		
		ЗначенияЗаполнения = Новый Структура("Владелец", ГоловнаяОрганизация);
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
	КонецЕсли;
	
	ОткрытьФорму("Справочник.РегистрацииВНалоговомОргане.Форма.ФормаЭлемента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговыеОрганыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.НалоговыеОрганы.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.НалоговыйОрган) Тогда
		ПоказатьЗначение(Неопределено, ТекущиеДанные.НалоговыйОрган);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговыеОрганыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУправленческиеПодразделения

&НаКлиенте
Процедура УправленческиеПодразделенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "УправленческиеПодразделенияНалоговыйОрган" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФормуВыбораНалоговогоОргана(Элементы.УправленческиеПодразделения.ВыделенныеСтроки, Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРегламентированыеПодразделения

&НаКлиенте
Процедура РегламентированыеПодразделенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "РегламентированыеПодразделенияНалоговыйОрган" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФормуВыбораНалоговогоОргана(Элементы.РегламентированыеПодразделения.ВыделенныеСтроки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НазначитьОсновным(Команда)
	
	ТекущиеДанные = Элементы.НалоговыеОрганы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'"));
		Возврат;
	КонецЕсли;
	
	НоваяРегистрация = ТекущиеДанные.НалоговыйОрган;
	
	Если ОсновнаяРегистрация = НоваяРегистрация Тогда
		Возврат;
	КонецЕсли;
	
	ОсновнаяРегистрация = НоваяРегистрация;
	
	ЗаписатьНалоговыйОрганДляОрганизации();
	Модифицированность = ОткрытиеИзОрганизации;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияИзмененийОрганизация(Команда)
	
	
	Возврат; // в УТ пустой
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияИзмененийРегламентированныеПодразделения(Команда)
	
	
	Возврат; // в УТ пустой
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьНалоговыйОрганУпр(Команда)
	
	ОткрытьФормуВыбораНалоговогоОргана(Элементы.УправленческиеПодразделения.ВыделенныеСтроки, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьНалоговыйОрганРегл(Команда)
	
	ОткрытьФормуВыбораНалоговогоОргана(Элементы.РегламентированыеПодразделения.ВыделенныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокНалоговыхОрганов(Команда)
	
	ЗаполнитьСписокНалоговыхОрганов();
	УстановитьТекстНадписи(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Если Модифицированность Тогда
		
		Модифицированность = Ложь;
		
		ПараметрыОповещения = Новый Структура("ОткатитьИзменения, ОсновнаяРегистрация", Ложь, ОсновнаяРегистрация);
		Оповестить("ЗавершеноРедактированиеРегистраций", ПараметрыОповещения);
		
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// основная регистрация выделяется жирным
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НалоговыеОрганы.Имя);
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НалоговыеОрганыНалоговыйОрганКод.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОсновнаяРегистрация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НалоговыеОрганы.НалоговыйОрган");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ОсновнаяРегистрация");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , Истина, Ложь, Ложь, Ложь, ));
	
	// серый текст для не обособленных управленческих подразделений
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УправленческиеПодразделенияНалоговыйОрган.Имя);
	
	ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УправленческиеПодразделения.НалоговыйОрган");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УправленческиеПодразделения.НалоговыйОрган");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ОсновнаяРегистрация");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<налоговый орган организации>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	
	// Оформление гиперссылки, если нет обособленных упр
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоПодразделенийУпрСтрокой.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НалоговыеОрганы.КоличествоПодразделенийУпр");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НалоговыеОрганы.НалоговыйОрган");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ОсновнаяРегистрация");

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<управленческих нет>'"));
	
	
	// Оформление гиперссылки, если нет на отдельном балансе упр
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоПодразделенийНаОтдельномБалансеСтрокой.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НалоговыеОрганы.КоличествоПодразделенийНаОтдельномБалансе");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НалоговыеОрганы.НалоговыйОрган");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ОсновнаяРегистрация");

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<на отдельном балансе нет>'"));

	// Оформление основной регистрации в списке налоговых органов
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоПодразделенийУпрСтрокой.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НалоговыеОрганы.НалоговыйОрган");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ОсновнаяРегистрация");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<основной налоговый орган>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , Ложь, Ложь, Ложь, Ложь, ));
	
	// Оформление основной регистрации в списке налоговых органов
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоПодразделенийРеглСтрокой.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НалоговыеОрганы.НалоговыйОрган");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ОсновнаяРегистрация");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Оформление основной регистрации в списке налоговых органов
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоПодразделенийНаОтдельномБалансеСтрокой.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НалоговыеОрганы.НалоговыйОрган");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ОсновнаяРегистрация");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// если КПП не заполнен
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НалоговыеОрганыНалоговыйОрганКПП.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НалоговыеОрганы.КПП");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуется>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , Ложь, Ложь, Ложь, Ложь, ));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокНалоговыхОрганов(АктивироватьОрган = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НалоговыеОрганы.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Ссылка КАК Ссылка,
	|	Организации.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ РегистрацииПодразделенийНаБалансе
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ОбособленноеПодразделение
	|	И Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Ссылка КАК Ссылка,
	|	РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Организации КАК Организации
	|	ПО
	|		РегистрацииВНалоговомОргане.Организация = Организации.Ссылка
	|		И Организации.ОбособленноеПодразделение
	|		И Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане <> Организации.РегистрацияВНалоговомОргане
	|;
	|
	|/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалоговыеОрганы.Ссылка КАК НалоговыйОрган,
	|	НалоговыеОрганы.Код КАК НалоговыйОрганКод,
	|	НалоговыеОрганы.Наименование КАК НалоговыйОрганНаименование,
	|	НалоговыеОрганы.КПП КАК КПП,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РегистрацииПодразделенийНаБалансе.Ссылка) КАК КоличествоПодразделенийНаОтдельномБалансе,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА ЕСТЬNULL(РегистрацииУпр.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|					И НалоговыеОрганы.Ссылка <> &ОсновнаяРегистрация
	|				ТОГДА РегистрацииУпр.Подразделение
	|		КОНЕЦ) КАК КоличествоПодразделенийУпр,
	|	%ТекстКоличествоПодразделенийРегл% КАК КоличествоПодразделенийРегл,
	|	НалоговыеОрганы.ПометкаУдаления,
	|	ВЫБОР
	|		КОГДА НалоговыеОрганы.ПометкаУдаления
	|			ТОГДА 4
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК СтандартнаяКартинка
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК НалоговыеОрганы
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрацииПодразделенийНаБалансе КАК РегистрацииПодразделенийНаБалансе
	|	ПО 
	|		РегистрацииПодразделенийНаБалансе.РегистрацияВНалоговомОргане = НалоговыеОрганы.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииУпр
	|	ПО 
	|		РегистрацииУпр.РегистрацияВНалоговомОргане = НалоговыеОрганы.Ссылка
	|		И РегистрацииУпр.Организация = &Организация
	|ГДЕ
	|	НалоговыеОрганы.Владелец = &ГоловнаяОрганизация
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыеОрганы.Ссылка,
	|	ВЫБОР
	|		КОГДА НалоговыеОрганы.ПометкаУдаления
	|			ТОГДА 4
	|		ИНАЧЕ 3
	|	КОНЕЦ,
	|	НалоговыеОрганы.ПометкаУдаления");
	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ТекстКоличествоПодразделенийРегл%", "0");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ОсновнаяРегистрация", ОсновнаяРегистрация);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	// варианты написания единицы измерения в родительном падеже для одной, для двух и для пяти единиц
	ПараметрыВыделеноНаБаланс = НСтр("ru = 'на отдельном балансе, на отдельном балансе, на отдельном балансе'");
	ПараметрыУпр = НСтр("ru = 'управленческое, управленческих, управленческих'");
	ПараметрыРегл = НСтр("ru = 'регламентированное, регламентированных, регламентированных'");
	
	АктивироватьИдентификатор = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = НалоговыеОрганы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если Выборка.КоличествоПодразделенийНаОтдельномБалансе > 0 Тогда
			НоваяСтрока.КоличествоПодразделенийНаОтдельномБалансеСтрокой =
				СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(Выборка.КоличествоПодразделенийНаОтдельномБалансе, ПараметрыВыделеноНаБаланс);
		КонецЕсли;
		
		Если Выборка.КоличествоПодразделенийУпр > 0 Тогда
			НоваяСтрока.КоличествоПодразделенийУпрСтрокой =
				СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(Выборка.КоличествоПодразделенийУпр, ПараметрыУпр);
		КонецЕсли;
		
		
		Если АктивироватьОрган = Выборка.НалоговыйОрган Тогда
			АктивироватьИдентификатор = НоваяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЦикла;
	
	Если АктивироватьИдентификатор <> Неопределено Тогда
		Элементы.НалоговыеОрганы.ТекущаяСтрока = АктивироватьИдентификатор;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция УстановитьТекстНадписи(Форма)
	
	Если Форма.ДоступенВыборОрганизации Тогда
		
		ШаблонСостоит = НСтр("ru = 'Состоит на учете в ""%1""'");
		ТекстЗаголовка = НСтр("ru = 'Не состоит на учете в налоговом органе.'");
		
	Иначе
		
		ШаблонСостоит = НСтр("ru = 'Организация состоит на учете в ""%1""'");
		ТекстЗаголовка = НСтр("ru = 'Организация не состоит на учете в налоговом органе.'");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ОсновнаяРегистрация) Тогда
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонСостоит,
			Форма.ОсновнаяРегистрация);
	КонецЕсли;
	
	Форма.ТекстПредставления = ТекстЗаголовка;
	
КонецФункции

&НаСервере
Процедура ЗаписатьНалоговыйОрганДляПодразделения(ПараметрыЗаписи)
	
	МассивПодразделений = ПараметрыЗаписи.МассивПодразделений;
	
	Если МассивПодразделений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(МассивПодразделений[0]) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		
		Для Каждого Подразделение Из МассивПодразделений Цикл
			СоздатьЗаписьРегистрацииВНалоговомОргане(Организация, Подразделение, ПараметрыЗаписи.НалоговыйОрган);
		КонецЦикла;
		
		Элементы.УправленческиеПодразделения.Обновить();
		
		
	КонецЕсли;
	
	ЗаполнитьСписокНалоговыхОрганов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНалоговыйОрганДляОрганизации()
	
	
	Если Не ОткрытиеИзОрганизации Тогда
		ОрганизацияОбъект = Организация.ПолучитьОбъект();
		ОрганизацияОбъект.РегистрацияВНалоговомОргане = ОсновнаяРегистрация;
		ОрганизацияОбъект.Записать();
	КонецЕсли;
	
	ЗаполнитьСписокНалоговыхОрганов(ОсновнаяРегистрация);
	
	УстановитьТекстНадписи(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьЗаписьРегистрацииВНалоговомОргане(Организация, Подразделение, НалоговыйОрган);
	
	Запись = РегистрыСведений.РегистрацииВНалоговомОргане.СоздатьМенеджерЗаписи();
	
	Запись.Организация = Организация;
	Запись.Подразделение = Подразделение;
	
	Если ЗначениеЗаполнено(НалоговыйОрган) Тогда
		
		Запись.РегистрацияВНалоговомОргане = НалоговыйОрган;
		Запись.Записать();
		
	Иначе
		
		Запись.Прочитать();
		
		Если Запись.Выбран() Тогда
			Запись.Удалить();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОрганизации()
	
	Элементы.ГруппаКомандыФормы.Видимость = ОткрытиеИзОрганизации;
	
	Если Не ОткрытиеИзОрганизации Тогда
		ОсновнаяРегистрация = Справочники.РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане(Организация);
	КонецЕсли;
	
	ГоловнаяОрганизация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ГоловнаяОрганизация");
	
	Элементы.КоличествоПодразделенийНаОтдельномБалансеСтрокой.Видимость = (Организация = ГоловнаяОрганизация);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(УправленческиеПодразделения, "Организация", Организация);
	
	ЗаполнитьСписокНалоговыхОрганов();
	
	УстановитьТекстНадписи(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораНалоговогоОргана(ВыделенныеСтроки, Периодичность = Истина)
	
	СписокПодразделений = Новый СписокЗначений;
	
	Для Каждого Строка Из ВыделенныеСтроки Цикл
		СписокПодразделений.Добавить(Строка);
	КонецЦикла;
	
	Если СписокПодразделений.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("СписокПодразделений, Организация, Периодичность", СписокПодразделений, ГоловнаяОрганизация, Периодичность);
	
	ОткрытьФорму("Справочник.РегистрацииВНалоговомОргане.Форма.ФормаВыбораРегистрацииДляПодразделения", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ОбработкаЗаписиРегистрацииНаСервере()
	
	ЗаполнитьСписокНалоговыхОрганов();
	
	Если НалоговыеОрганы.Количество() = 1 И Не ЗначениеЗаполнено(ОсновнаяРегистрация) Тогда
		ОсновнаяРегистрация = НалоговыеОрганы[0].НалоговыйОрган;
		ЗаписатьНалоговыйОрганДляОрганизации();
		УстановитьТекстНадписи(ЭтаФорма);
		Модифицированность = ОткрытиеИзОрганизации;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаОбособленныеПодразеделенияНаОтдельномБалансеЗакрытие(Результат, ДополнительныеПараметры) Экспорт
	
	НастроитьФормуПоОрганизации();
	
КонецПроцедуры

#КонецОбласти
