#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Находит регламентное задание по GUID.
//
// Параметры:
//  УникальныйНомерЗадания - Строка - строка с GUID регламентного задания.
// 
// Возвращаемое значение:
//  Неопределено               - если поиск регламентного задания по GUID не дал результатов.
//  ТекущееРегламентноеЗадание - РегламентноеЗадание - найденное по GUID регламентное задание.
//
Функция РегламентноеЗаданиеПоУникальномуНомеру(УникальныйНомерЗадания) Экспорт
	
	Если ПустаяСтрока(УникальныйНомерЗадания) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		РегламентноеЗадание = РегламентныеЗаданияСервер.ПолучитьРегламентноеЗадание(УникальныйНомерЗадания);
	Исключение
		РегламентноеЗадание = Неопределено;
	КонецПопытки;
	
	Возврат РегламентноеЗадание;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УП 2.2.3, заполняет справочник поставляемыми проверками.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Возврат; // нечего регистрировать - создаются новые элементы
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Результат = АудитСостоянияСистемы.ЗаполнитьСправочникПроверокСостоянияСистемы();
	
	// Заполнение справочника выполняется целиком в одной порции обработки данных.
	// Если при заполнении возникли какие-либо проблемы, то обработчик считаем не выполненным.
	Параметры.ОбработкаЗавершена = Результат;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
