&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОтборПроверокПоСпособамВыполнения.Добавить(Перечисления.СпособыВыполненияПроверокСостоянияСистемы.ПоОбщемуРасписанию);
	ОтборПроверокПоСпособамВыполнения.Добавить(Перечисления.СпособыВыполненияПроверокСостоянияСистемы.ПоОтдельномуРасписанию);
	ОтборПроверокПоСпособамВыполнения.Добавить(Перечисления.СпособыВыполненияПроверокСостоянияСистемы.Вручную);
	
	ЗаполнитьПредставлениеРасписанияОбщегоЗадания();
	
	УстановитьОтборыСпискаПроверок();
	УстановитьОтборыСпискаПроблем(СписокПроблем, Элементы.СписокПроверок.ТекущаяСтрока);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборыСпискаПроверок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененоРасписаниеПроверкаСостоянияСистемы" Тогда
		ЗаполнитьПредставлениеРасписанияОбщегоЗадания(Параметр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборПроверокПоСпособамВыполненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров  = Новый Структура("СписокВыбора", ОтборПроверокПоСпособамВыполнения);
	
	ОткрытьФорму(
		"Перечисление.СпособыВыполненияПроверокСостоянияСистемы.Форма.НастройкаОтбораПоСпособамВыполнения",
		СтруктураПараметров,
		Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПроверокПоСпособамВыполненияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОтборПроверокПоСпособамВыполнения = ВыбранноеЗначение;
	
	УстановитьОтборыСпискаПроверок();
	
КонецПроцедуры


&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверокПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ГруппаПроблемы.Видимость Тогда
		УстановитьОтборыСпискаПроблем(СписокПроблем, Элементы.СписокПроверок.ТекущаяСтрока);
	КонецЕсли;
	
	ТекущиеДанные = Элементы.СписокПроверок.ТекущиеДанные;
	Элементы.ФормаВыполнитьПроверку.Доступность = (ТекущиеДанные <> Неопределено И НЕ ТекущиеДанные.ВыполняетсяТолькоВКонтексте);
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьПроверку(Команда)
	
	Результат = РезультатПроверкиВДлительнойОперации(Элементы.СписокПроверок.ВыделенныеСтроки);
	
	АудитСостоянияСистемыКлиент.ПодключитьДлительнуюОперацию(ЭтаФорма, Результат, ПараметрыОбработчикаОжидания, ФормаДлительнойОперации);
	
	Если Результат.ЗаданиеВыполнено Тогда
		Элементы.СписокПроверок.Обновить();
		Элементы.СписокПроблем.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьПроверки(Команда)
	
	ЗарегистрироватьПроверкиНаСервере();
	
	Элементы.СписокПроверок.Обновить();
	Элементы.СписокПроблем.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция РезультатПроверкиВДлительнойОперации(Знач МассивПроверок)
	
	ДопПараметры = Новый Соответствие;
	
	ВсегоЭлементовМассива = МассивПроверок.Количество();
	Для к = 1 По ВсегоЭлементовМассива Цикл
		
		ЭлементМассива = МассивПроверок[ВсегоЭлементовМассива-к];
		
		Если НЕ ЗначениеЗаполнено(ЭлементМассива)
		 ИЛИ ТипЗнч(ЭлементМассива) <> Тип("СправочникСсылка.ПроверкиСостоянияСистемы")
		 ИЛИ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементМассива, "ЭтоГруппа")
		 ИЛИ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементМассива, "ВыполняетсяТолькоВКонтексте") Тогда
			МассивПроверок.Удалить(МассивПроверок.Найти(ЭлементМассива));
			Продолжить;
		КонецЕсли;
		
		ЗначенияДопПараметров = Новый Структура;
		ОписаниеДопПараметров = ЭлементМассива.ОписаниеДополнительныхПараметров.Получить();
		
		Если ЗначениеЗаполнено(ОписаниеДопПараметров) Тогда
			Для Каждого ДопПараметр Из ОписаниеДопПараметров Цикл
				ЗначенияДопПараметров.Вставить(ДопПараметр.ИмяПараметра,ДопПараметр.ЗначениеПоУмолчанию);
			КонецЦикла;
		КонецЕсли;
		
		ДопПараметры.Вставить(ЭлементМассива, ЗначенияДопПараметров);
		
	КонецЦикла;
	
	Возврат АудитСостоянияСистемы.РезультатПроверкиВДлительнойОперации(ЭтаФорма, МассивПроверок, ДопПараметры);
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания) Экспорт
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Если АудитСостоянияСистемыКлиент.ПроверитьВыполнениеЗадания(ЭтаФорма, ПараметрыОбработчикаОжидания, ФормаДлительнойОперации) Тогда
		Элементы.СписокПроверок.Обновить();
		Элементы.СписокПроблем.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьПроверкиНаСервере()
	
	АудитСостоянияСистемы.ЗаполнитьСправочникПроверокСостоянияСистемы();
	
	ЗаполнитьПредставлениеРасписанияОбщегоЗадания();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПредставлениеРасписанияОбщегоЗадания(Расписание = Неопределено)
	
	Если Расписание = Неопределено Тогда
		ОбщееРегламентноеЗадание = РегламентныеЗаданияСервер.Задание(Метаданные.РегламентныеЗадания.ПроверкаСостоянияСистемы);
		ОбщееРасписание = ОбщееРегламентноеЗадание.Расписание;
	Иначе
		ОбщееРасписание = Расписание;
	КонецЕсли;
	
	ПредставлениеОбщегоРасписания = АудитСостоянияСистемыКлиентСервер.ПредставлениеРасписания(ОбщееРасписание);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		СписокПроверок,
		"ПредставлениеОбщегоРасписания",
		ПредставлениеОбщегоРасписания);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборыСпискаПроверок()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокПроверок,
		"СпособВыполнения",
		ОтборПроверокПоСпособамВыполнения,
		ВидСравненияКомпоновкиДанных.ВСписке,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборыСпискаПроблем(СписокПроблем, ЗначениеОтбора)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокПроблем,
		"Проверка",
		ЗначениеОтбора,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

#КонецОбласти
