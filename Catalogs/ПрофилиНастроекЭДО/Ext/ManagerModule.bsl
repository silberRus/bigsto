#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция формирует краткое наименование оператора из полного.
//
// Параметры:
//  Наименование - Строка - полное наименование оператора.
//
// Возвращаемое значение:
//  Строка - краткое наименование оператора.
Функция КраткоеНаименованиеОператора(Наименование) Экспорт
	
	КраткоеНаименование = СтрЗаменить(Наименование, "«", "");
	КраткоеНаименование = СтрЗаменить(КраткоеНаименование, "»", "");
	
	Если СтрНайти(КраткоеНаименование, "ЗАО ") Тогда
		КраткоеНаименование = СтрЗаменить(КраткоеНаименование, "ЗАО ", "");
	ИначеЕсли СтрНайти(КраткоеНаименование, "ООО ") Тогда
		КраткоеНаименование = СтрЗаменить(КраткоеНаименование, "ООО ", "");
	ИначеЕсли СтрНайти(КраткоеНаименование, "ПАО ") Тогда
		КраткоеНаименование = СтрЗаменить(КраткоеНаименование, "ПАО ", "");
	ИначеЕсли СтрНайти(КраткоеНаименование, "АО ") Тогда
		КраткоеНаименование = СтрЗаменить(КраткоеНаименование, "АО ", "");
	ИначеЕсли СтрНайти(КраткоеНаименование, "ОАО ") Тогда
		КраткоеНаименование = СтрЗаменить(КраткоеНаименование, "ОАО ", "");
	КонецЕсли;
	
	Возврат КраткоеНаименование;
	
КонецФункции

// Обработчик обновления на БЭД 1.3.6.7
// Заполняет реквизиты табличных частей справочников "Профили настроек ЭДО"
// и "Соглашение об использовании ЭДО".
//
Процедура ЗаполнитьРегламентЭДО() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрофилиНастроекЭДО.Ссылка КАК Профиль,
	|	ПрофилиНастроекЭДО.ИспользоватьУПД,
	|	ПрофилиНастроекЭДО.ИспользоватьУКД
	|ИЗ
	|	Справочник.ПрофилиНастроекЭДО КАК ПрофилиНастроекЭДО";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Профиль = Выборка.Профиль;
		ПрофильОбъект = Профиль.ПолучитьОбъект();
		ИсходящиеДокументы = ПрофильОбъект.ИсходящиеДокументы;
		Для Каждого ТекСтрока Из ИсходящиеДокументы Цикл
			
			ТекСтрока.ТребуетсяИзвещениеОПолучении = Истина;
			
			Если ТекСтрока.ИсходящийДокумент = Перечисления.ВидыЭД.СчетФактура Тогда
				
				Если Выборка.ИспользоватьУПД Тогда
					ТекСтрока.ТребуетсяОтветнаяПодпись = Истина;
					
				Иначе
					ТекСтрока.ТребуетсяОтветнаяПодпись = Ложь;
				КонецЕсли;
			ИначеЕсли ТекСтрока.ИсходящийДокумент = Перечисления.ВидыЭД.КорректировочныйСчетФактура Тогда
				Если Выборка.ИспользоватьУКД Тогда
					ТекСтрока.ТребуетсяОтветнаяПодпись = Истина;
					
				Иначе
					ТекСтрока.ТребуетсяОтветнаяПодпись = Ложь;
				КонецЕсли;
				
			ИначеЕсли ТекСтрока.ИсходящийДокумент = Перечисления.ВидыЭД.СчетНаОплату Тогда
				
				ТекСтрока.ТребуетсяОтветнаяПодпись = Ложь;
				
			Иначе
				ТекСтрока.ТребуетсяОтветнаяПодпись = ТекСтрока.ИспользоватьЭП;
				
			КонецЕсли;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ПрофильОбъект);
		
		ПрофильОбъект.ИзменитьДанныеВСвязанныхНастройкахЭДО(ПрофильОбъект, Ложь);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоглашенияОбИспользованииЭД.Ссылка КАК Настройка
	|ИЗ
	|	Справочник.СоглашенияОбИспользованииЭД КАК СоглашенияОбИспользованииЭД
	|ГДЕ
	|	СоглашенияОбИспользованииЭД.РасширенныйРежимНастройкиСоглашения = ИСТИНА";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Соглашение = Выборка.Настройка;
		СоглашениеОбъект = Соглашение.ПолучитьОбъект();
		Для Каждого ТекСтрока Из СоглашениеОбъект.ИсходящиеДокументы Цикл
			
			ВидЭД = ТекСтрока.ИсходящийДокумент;
			ПрофильЭДО = ТекСтрока.ПрофильНастроекЭДО;
			
			СвойстваЭД = Новый Структура("ТребуетсяИзвещение, ТребуетсяОтветнаяПодпись, ИспользоватьЭП");
			ЗаполнитьСвойстваЭДИзПрофиля(ПрофильЭДО, ВидЭД, СвойстваЭД);
			
			ЗаполнитьЗначенияСвойств(ТекСтрока, СвойстваЭД);
			
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СоглашениеОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

// Обработчик обновления БЭД 1.3.6.25
Процедура СнятьФлагОтветнойПодписиУСчетаНаОплату() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрофилиНастроекЭДОИсходящиеДокументы.Ссылка КАК ПрофильЭДО
	|ИЗ
	|	Справочник.ПрофилиНастроекЭДО.ИсходящиеДокументы КАК ПрофилиНастроекЭДОИсходящиеДокументы
	|ГДЕ
	|	ПрофилиНастроекЭДОИсходящиеДокументы.ИсходящийДокумент = ЗНАЧЕНИЕ(Перечисление.ВидыЭД.СчетНаОплату)
	|	И ПрофилиНастроекЭДОИсходящиеДокументы.ТребуетсяОтветнаяПодпись = ИСТИНА";
	
	Результат = Запрос.Выполнить();
	
	ИсходящийДокументСчетНаОплату = Перечисления.ВидыЭД.СчетНаОплату;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПрофильОбъект = Выборка.ПрофильЭДО.ПолучитьОбъект();
		ИсходящиеДокументыПрофиля = ПрофильОбъект.ИсходящиеДокументы;
		
		СтрокаСчетНаОплату = ИсходящиеДокументыПрофиля.Найти(ИсходящийДокументСчетНаОплату, "ИсходящийДокумент");
		СтрокаСчетНаОплату.ТребуетсяОтветнаяПодпись = Ложь;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ПрофильОбъект);
		
		ПрофильОбъект.ИзменитьДанныеВСвязанныхНастройкахЭДО(ПрофильОбъект, Ложь);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоглашенияОбИспользованииЭДИсходящиеДокументы.Ссылка КАК НастройкаЭДО
	|ИЗ
	|	Справочник.СоглашенияОбИспользованииЭД.ИсходящиеДокументы КАК СоглашенияОбИспользованииЭДИсходящиеДокументы
	|ГДЕ
	|	СоглашенияОбИспользованииЭДИсходящиеДокументы.ИсходящийДокумент = ЗНАЧЕНИЕ(Перечисление.ВидыЭД.СчетНаОплату)
	|	И СоглашенияОбИспользованииЭДИсходящиеДокументы.Ссылка.РасширенныйРежимНастройкиСоглашения = ИСТИНА";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НастройкаЭДООбъект = Выборка.НастройкаЭДО.ПолучитьОбъект();
		ИсходящиеДокументыНастройки = НастройкаЭДООбъект.ИсходящиеДокументы;
		
		СтрокаСчетНаОплатуНастройки = ИсходящиеДокументыНастройки.Найти(ИсходящийДокументСчетНаОплату, "ИсходящийДокумент");
		СтрокаСчетНаОплатуНастройки.ТребуетсяОтветнаяПодпись = Ложь;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(НастройкаЭДООбъект);
		
	КонецЦикла;
	
КонецПроцедуры

// Регистрирует данные для обработчика обновления
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПустойМаршрут = Справочники.МаршрутыПодписания.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустойМаршрут", ПустойМаршрут);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		Настройки.Ссылка КАК Ссылка
	|	ИЗ
	|		Справочник.ПрофилиНастроекЭДО.ИсходящиеДокументы КАК Настройки
	|	ГДЕ
	|		Настройки.МаршрутПодписания = &ПустойМаршрут
	|		И Настройки.ИспользоватьЭП = ИСТИНА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПрофилиНастроекЭДО.Ссылка
	|	ИЗ
	|		Справочник.ПрофилиНастроекЭДО КАК ПрофилиНастроекЭДО
	|	ГДЕ
	|		ПрофилиНастроекЭДО.СпособОбменаЭД = ЗНАЧЕНИЕ(Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО)) КАК ВложенныйЗапрос";
	Результат = Запрос.Выполнить().Выгрузить();
	МассивСсылок = Результат.ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, МассивСсылок);
	
КонецПроцедуры

// Обработчик обновления.
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	// Обрабатывать настройки можно только после обновления предопределенных маршрутов.
	Если ОбновлениеИнформационнойБазы.ОбъектОбработан("Справочник.МаршрутыПодписания").Обработан Тогда
		Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(
			Параметры.Очередь, "Справочник.ПрофилиНастроекЭДО");
			
		Пока Выборка.Следующий() Цикл
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			
			ЗаписатьОбъект = Ложь;
			
			ПараметрыОтбора = Новый Структура("МаршрутПодписания, ИспользоватьЭП", 
				Справочники.МаршрутыПодписания.ПустаяСсылка(), Истина);
			СтрокиСПустымМаршрутом = Объект.ИсходящиеДокументы.НайтиСтроки(ПараметрыОтбора);
			
			Если СтрокиСПустымМаршрутом.Количество() Тогда
				Для Каждого СтрокаНастройки Из СтрокиСПустымМаршрутом Цикл
					СтрокаНастройки.МаршрутПодписания = Справочники.МаршрутыПодписания.ОднойДоступнойПодписью;
				КонецЦикла;
				
				ЗаписатьОбъект = Истина;
			КонецЕсли;
			
			Если Объект.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезСервис1СЭДО Тогда
				ОператорЭДО = КраткоеНаименованиеОператора(Объект.ОператорЭДО);
				Если СтрНайти(Объект.Наименование, ОператорЭДО) = 0 Тогда
					Объект.Наименование = Объект.Наименование + " (" + ОператорЭДО + ")";
					ЗаписатьОбъект = Истина;
				КонецЕсли;
			КонецЕсли;
			
			Если ЗаписатьОбъект Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;

	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, "Справочник.ПрофилиНастроекЭДО");
	
КонецПроцедуры

// См. ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы.
Функция ДанныеОбновленыНаНовуюВерсиюПрограммы(МетаданныеИОтбор) Экспорт
	
	Если МетаданныеИОтбор.ПолноеИмя = "Справочник.ПрофилиНастроекЭДО" Тогда
		МетаданныеИОтборПрофиляНастроек = МетаданныеИОтбор;
	ИначеЕсли МетаданныеИОтбор.ПолноеИмя = "Документ.ЭлектронныйДокументИсходящий" 
		ИЛИ МетаданныеИОтбор.ПолноеИмя = "Документ.ЭлектронныйДокументВходящий" Тогда
		ПрофильНастроек = МетаданныеИОтбор.Отбор.ПрофильНастроекЭДО;
		МетаданныеИОтборПрофиляНастроек = ОбновлениеИнформационнойБазы.МетаданныеИОтборПоДанным(ПрофильНастроек);
	КонецЕсли;
	
	Возврат ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы(МетаданныеИОтборПрофиляНастроек);
	
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьСвойстваЭДИзПрофиля(ПрофильЭДО, ВидЭД, СвойстваЭД)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрофилиНастроекЭДОИсходящиеДокументы.ТребуетсяИзвещениеОПолучении КАК ТребуетсяИзвещение,
	|	ПрофилиНастроекЭДОИсходящиеДокументы.ТребуетсяОтветнаяПодпись КАК ТребуетсяОтветнаяПодпись,
	|	ПрофилиНастроекЭДОИсходящиеДокументы.ИспользоватьЭП КАК ИспользоватьЭП
	|ИЗ
	|	Справочник.ПрофилиНастроекЭДО.ИсходящиеДокументы КАК ПрофилиНастроекЭДОИсходящиеДокументы
	|ГДЕ
	|	ПрофилиНастроекЭДОИсходящиеДокументы.Ссылка = &ПрофильЭДО
	|	И ПрофилиНастроекЭДОИсходящиеДокументы.ИсходящийДокумент = &ВидЭД";
	
	Запрос.УстановитьПараметр("ПрофильЭДО", ПрофильЭДО);
	Запрос.УстановитьПараметр("ВидЭД", ВидЭД);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СвойстваЭД, Выборка);
	КонецЦикла;
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
