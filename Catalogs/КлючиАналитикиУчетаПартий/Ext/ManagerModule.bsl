#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает ключ аналитики учета партий с полями, соответствующими указанным.
//
// Параметры:
//	ПоляАналитики - Структура или ВыборкаИзРезультатаЗапроса - поля аналитики учета партий.
//		Если в этом параметре не указаны какие-то поля аналитики, то эти неуказанные поля заполняются пустыми значениями.
//		Должно обязательно присутствовать поле "Дата", для определения режима партионного учета, который видяет на заполнение полей.
//	ИскатьПодходящийКлюч - Булево - сначала попытаться найти ключ с указанными полями;
//		если в вызывающей процедуре уже выполнялся поиск ключей, то в этом параметре для ускорения работы функции следует указывать Ложь
//
// Возвращаемое значение:
//	СправочникСсылка.КлючиАналитикиУчетаПартий - найденный или сформированный ключ аналитики учета партий
//
Функция ПолучитьКлючАналитики(ПоляАналитики = Неопределено, ИскатьПодходящийКлюч = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Заполним все реквизиты ключа аналитики.
	СтруктураРеквизитовКлюча = Новый Структура;
	
	Для Каждого МетаРеквизит Из Метаданные.Справочники.КлючиАналитикиУчетаПартий.Реквизиты Цикл
		
		СтруктураРеквизита = Новый Структура(МетаРеквизит.Имя);
		ЗаполнитьЗначенияСвойств(СтруктураРеквизита, ПоляАналитики); // в ПоляАналитики такого свойства может и не быть
		
		СтруктураРеквизитовКлюча.Вставить(
			МетаРеквизит.Имя,
			МетаРеквизит.Тип.ПривестиЗначение(СтруктураРеквизита[МетаРеквизит.Имя])); // а в СтруктураРеквизита такое свойство точно есть
		
	КонецЦикла;
	
	// Учтем особые случаи заполнения реквизитов.
	СтруктураРеквизитовКлюча.Вставить("ГруппаФинансовогоУчета", Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка());
	
	Если УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВерсии22(НачалоМесяца(ПоляАналитики.Дата)) Тогда
		СтруктураРеквизитовКлюча.Вставить("НалогообложениеНДС", Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
	Иначе
		СтруктураРеквизитовКлюча.Вставить("ВидЦенности", 		Перечисления.ВидыЦенностей.ПустаяСсылка());
	КонецЕсли;
	
	// Если надо - попытаемся найти подходящий ключ.
	ДанныеКлюча = Новый Структура;
	ДанныеКлюча.Вставить("КлючАналитики", 	   Справочники.КлючиАналитикиУчетаПартий.ПустаяСсылка());
	ДанныеКлюча.Вставить("ЕстьЗаписьРегистра", Ложь);
	
	Если ИскатьПодходящийКлюч Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Таблица.Ссылка КАК КлючАналитики
		|ПОМЕСТИТЬ ВТКлюч
		|ИЗ
		|	Справочник.КлючиАналитикиУчетаПартий КАК Таблица
		|ГДЕ
		|	НЕ Таблица.ПометкаУдаления
		|	%1
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючАналитики
		|;
		|////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.КлючАналитики 			   КАК КлючАналитики,
		|	МАКСИМУМ(Т.ЕстьЗаписьРегистра) КАК ЕстьЗаписьРегистра
		|ИЗ
		|(ВЫБРАТЬ ПЕРВЫЕ 1
		|	Таблица.КлючАналитики,
		|	ИСТИНА КАК ЕстьЗаписьРегистра
		|ИЗ
		|	РегистрСведений.АналитикаУчетаПартий КАК Таблица
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКлюч КАК ВТКлюч
		|		ПО Таблица.КлючАналитики = ВТКлюч.КлючАналитики
		|ГДЕ
		|	ИСТИНА
		|	%1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.КлючАналитики,
		|	ЛОЖЬ КАК ЕстьЗаписьРегистра
		|ИЗ
		|	ВТКлюч КАК Таблица
		|) КАК Т
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.КлючАналитики
		|";
		
		ТекстОтбора = "";
		
		Для Каждого КлючИЗначение Из СтруктураРеквизитовКлюча Цикл
			
			Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			
			ТекстОтбора = ТекстОтбора + "
				|	И Таблица." + КлючИЗначение.Ключ + " = &" + КлючИЗначение.Ключ;
			
		КонецЦикла;
		
		Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Запрос.Текст, СокрЛП(ТекстОтбора));
			
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ДанныеКлюча, Выборка);
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДанныеКлюча.КлючАналитики) Тогда
		
		// Ключа аналитики нет в справочнике - создадим элемент справочника.
		СправочникОбъект = Справочники.КлючиАналитикиУчетаПартий.СоздатьЭлемент();
		
		ЗаполнитьЗначенияСвойств(СправочникОбъект, СтруктураРеквизитовКлюча);
		СправочникОбъект.Наименование = НаименованиеКлючаАналитики(СтруктураРеквизитовКлюча);
		
		СправочникОбъект.Записать();
		
		ДанныеКлюча.КлючАналитики = СправочникОбъект.Ссылка;
		
	КонецЕсли;
	
	Если НЕ ДанныеКлюча.ЕстьЗаписьРегистра Тогда
		
		// Ключа аналитики нет в регистре - добавим запись регистра.
		Набор = РегистрыСведений.АналитикаУчетаПартий.СоздатьНаборЗаписей();
		
		Для Каждого КлючИЗначение Из СтруктураРеквизитовКлюча Цикл
			Набор.Отбор[КлючИЗначение.Ключ].Установить(КлючИЗначение.Значение);
		КонецЦикла;
		
		Запись = Набор.Добавить();
		
		ЗаполнитьЗначенияСвойств(Запись, СтруктураРеквизитовКлюча);
		Запись.КлючАналитики = ДанныеКлюча.КлючАналитики;
		
		Набор.Записать(Истина);
		
	КонецЕсли;
	
	Возврат ДанныеКлюча.КлючАналитики;

КонецФункции

// Используется при формировании движений документа - инициализирует таблицу значений (параметр запроса)
// и возвращает текст создания временной таблицы аналитик учета партий документа из этой таблицы значений.
// Поля таблицы значений ТаблицаАналитикУчетаПартий:
//		- ИмяТабличнойЧасти (как в исходной таблице)
//		- НомерСтроки  (как в исходной таблице)
//		- НалогообложениеНДС (как в исходной таблице)
//		- ВидЦенности (как в исходной таблице)
//		- АналитикаУчетаПартий (подобранная существующая аналитика или созданная новая)
//	Сочетание полей (ИмяТабличнойЧасти + НомерСтроки) можно использовать в качестве уникального идентификатора строки,
//	для сопоставления строк этой таблицы со строками исходной таблицы.
//
// Параметры:
//	ТекстВыборкаПоляАналитик - Строка - текст запроса формирования временной таблицы ВТПоляАналитикУчетаПартий с полями:
//		- ИмяТабличнойЧасти
//		- НомерСтроки
//		- Поставщик
//		- Контрагент
//		- НалогообложениеНДС
//		- СтавкаНДС
//		- ВидЦенности
//		- КодСтроки
//	ЗапросОбщий - Запрос - общий запрос для формирования движений документа
//		У запроса должны быть инициализированы параметры:
//			- Ссылка - ссылка на сам проводимый документ
//			- Период или Дата - дата документа
// 	ТекстыЗапроса - СписокЗначений - тексты подзапросов общего запроса
//
// Возвращаемое значение:
//	Строка - текст запроса для создания ВтТаблицаАналитикУчетаПартий
//
Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, ЗапросОбщий, ТекстыЗапроса = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИмяВременнойТаблицы = "ВтТаблицаАналитикУчетаПартий";
	
	Если ЗапросОбщий.Параметры.Свойство("Период") Тогда
		ДатаДокумента = ЗапросОбщий.Параметры.Период;
	Иначе
		ДатаДокумента = ЗапросОбщий.Параметры.Дата;
	КонецЕсли;
	
	СсылкаДокумента = ЗапросОбщий.Параметры.Ссылка;
	
	// Создадим запрос для выборки полей аналитик и заполним его свойства.
	ЗапросАналитикиПартий = Новый Запрос;
	ЗапросАналитикиПартий.Текст = ТекстВыборкаПоляАналитик;
	Если ЗапросОбщий.МенеджерВременныхТаблиц <> Неопределено Тогда
		ЗапросАналитикиПартий.МенеджерВременныхТаблиц = ЗапросОбщий.МенеджерВременныхТаблиц;
	Иначе
		ЗапросАналитикиПартий.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	ЗапросАналитикиПартий.УстановитьПараметр("Ссылка", 		  		   СсылкаДокумента);
	ЗапросАналитикиПартий.УстановитьПараметр("ДатаДокумента", 		   ДатаДокумента);
	ЗапросАналитикиПартий.УстановитьПараметр("ПартионныйУчетВерсии22",
		УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВерсии22(НачалоМесяца(ДатаДокумента)));
	Если ЗапросОбщий.Параметры.Свойство("НалогообложениеОрганизации") Тогда
		ЗапросАналитикиПартий.УстановитьПараметр("НалогообложениеОрганизации", ЗапросОбщий.Параметры.НалогообложениеОрганизации);
	КонецЕсли;
	Если ЗапросОбщий.Параметры.Свойство("ФИФОСкользящаяОценка") Тогда
		ЗапросАналитикиПартий.УстановитьПараметр("ФИФОСкользящаяОценка", ЗапросОбщий.Параметры.ФИФОСкользящаяОценка);
	КонецЕсли;
	
	// Сформируем временную таблицу ВТПоляАналитикУчетаПартий.
	ЗапросАналитикиПартий.Выполнить();
	
	// Создадим недостающие ключи аналитики.
	ЗапросАналитикиПартий.Текст =
	"ВЫБРАТЬ
	|	Т.ИмяТабличнойЧасти 													КАК ИмяТабличнойЧасти,
	|	Т.НомерСтроки 															КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаФинансовогоУчета,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Т.Поставщик) <> ТИП(Справочник.Партнеры)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|		ИНАЧЕ Т.Поставщик
	|	КОНЕЦ 																	КАК Поставщик,
	|	ВЫБОР КОГДА
	|	  НЕ ТИПЗНАЧЕНИЯ(Т.Контрагент) В (ТИП(Справочник.Организации), ТИП(Справочник.Контрагенты))
	|	  ИЛИ Т.Контрагент В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Т.Контрагент
	|	КОНЕЦ 																	КАК Контрагент,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Т.СтавкаНДС) <> ТИП(Перечисление.СтавкиНДС)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
	|		ИНАЧЕ Т.СтавкаНДС
	|	КОНЕЦ 																	КАК СтавкаНДС,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Т.НалогообложениеНДС) <> ТИП(Перечисление.ТипыНалогообложенияНДС)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ИНАЧЕ Т.НалогообложениеНДС
	|	КОНЕЦ 																	КАК НалогообложениеНДС,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Т.ВидЦенности) <> ТИП(Перечисление.ВидыЦенностей)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|		ИНАЧЕ Т.ВидЦенности
	|	КОНЕЦ 																	КАК ВидЦенности,
	|	Т.КодСтроки 															КАК КодСтроки
	|ПОМЕСТИТЬ ВТАналитик_КорректныеПоляАналитикУчетаПартий
	|ИЗ
	|	ВТПоляАналитикУчетаПартий КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ИмяТабличнойЧасти 													КАК ИмяТабличнойЧасти,
	|	Т.НомерСтроки 															КАК НомерСтроки,
	|	Т.ГруппаФинансовогоУчета 												КАК ГруппаФинансовогоУчета,
	|	Т.Поставщик 															КАК Поставщик,
	|	Т.Контрагент 															КАК Контрагент,
	|	Т.СтавкаНДС 															КАК СтавкаНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ИНАЧЕ Т.НалогообложениеНДС
	|	КОНЕЦ 																	КАК НалогообложениеНДС,
	|	ВЫБОР КОГДА НЕ &ПартионныйУчетВерсии22
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|		ИНАЧЕ Т.ВидЦенности
	|	КОНЕЦ 																	КАК ВидЦенности,
	|	Т.КодСтроки																КАК КодСтроки,
	|	ЕСТЬNULL(АналитикаПартий.КлючАналитики,
	|		ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка))		КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВТАналитик_ТаблицаАналитикУчетаПартийПредварительная
	|ИЗ
	|	ВТАналитик_КорректныеПоляАналитикУчетаПартий КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
	|		ПО Т.ГруппаФинансовогоУчета 				= АналитикаПартий.ГруппаФинансовогоУчета
	|			И Т.Поставщик 						 	= АналитикаПартий.Поставщик
	|			И Т.Контрагент 						 	= АналитикаПартий.Контрагент
	|			И ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|				ИНАЧЕ Т.НалогообложениеНДС
	|			  КОНЕЦ 							 	= АналитикаПартий.НалогообложениеНДС
	|			И Т.СтавкаНДС 						 	= АналитикаПартий.СтавкаНДС
	|			И ВЫБОР КОГДА НЕ &ПартионныйУчетВерсии22
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|				ИНАЧЕ Т.ВидЦенности
	|			  КОНЕЦ 								= АналитикаПартий.ВидЦенности
	|			И Т.КодСтроки 							= АналитикаПартий.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ДатаДокумента				КАК Дата,
	|	Т.ГруппаФинансовогоУчета	КАК ГруппаФинансовогоУчета,
	|	Т.Поставщик					КАК Поставщик,
	|	Т.Контрагент				КАК Контрагент,
	|	Т.СтавкаНДС					КАК СтавкаНДС,
	|	Т.НалогообложениеНДС		КАК НалогообложениеНДС,
	|	Т.ВидЦенности				КАК ВидЦенности,
	|	Т.КодСтроки					КАК КодСтроки,
	|	Т.АналитикаУчетаПартий		КАК АналитикаУчетаПартий
	|ИЗ
	|	ВТАналитик_ТаблицаАналитикУчетаПартийПредварительная КАК Т
	|ГДЕ
	|	Т.АналитикаУчетаПартий = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|";
	
	ТаблицаПустыхАналитик = ЗапросАналитикиПартий.Выполнить().Выгрузить();
	
	// Если значение колонки Контрагент = Неопределено, то описание типов значений этой колонки будет пустым.
	// В этом случае в следующем запросе платформа не сможет выбрать значения из нетипизированной колонки.
	// Для обхода этой ситуации создадим в таблице колонку с "правильным" типом значений и подменим ей исходную колонку.
	ТаблицаПустыхАналитик.Колонки.Добавить("КонтрагентТипизированный",
		Метаданные.Справочники.КлючиАналитикиУчетаПартий.Реквизиты.Контрагент.Тип);
	
	Для Каждого ТекСтр Из ТаблицаПустыхАналитик Цикл
		ТекСтр.АналитикаУчетаПартий 	= ПолучитьКлючАналитики(ТекСтр, Ложь); // создать ключ без попытки его поиска
		ТекСтр.КонтрагентТипизированный = ТекСтр.Контрагент;
	КонецЦикла;
	
	ТаблицаПустыхАналитик.Колонки.Удалить("Контрагент");
	ТаблицаПустыхАналитик.Колонки.КонтрагентТипизированный.Имя = "Контрагент";
	
	// Сформируем таблицу аналитик.
	// Поля НалогообложениеНДС и ВидЦенности вернем из исходной таблицы, а не из аналитики учета партий,
	// т.к. в аналитике эти поля могут не заполняться (в зависимости от используемой версии механизма партионного учета).
	ЗапросАналитикиПартий.УстановитьПараметр("ТаблицаСозданныхАналитик", ТаблицаПустыхАналитик);
	
	ЗапросАналитикиПартий.Текст =
	"ВЫБРАТЬ
	|	Т.ГруппаФинансовогоУчета	КАК ГруппаФинансовогоУчета,
	|	Т.Поставщик					КАК Поставщик,
	|	Т.Контрагент				КАК Контрагент,
	|	Т.СтавкаНДС					КАК СтавкаНДС,
	|	Т.НалогообложениеНДС		КАК НалогообложениеНДС,
	|	Т.ВидЦенности				КАК ВидЦенности,
	|	Т.КодСтроки					КАК КодСтроки,
	|	Т.АналитикаУчетаПартий		КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВТАналитик_ТаблицаСозданныхАналитик
	|ИЗ
	|	&ТаблицаСозданныхАналитик КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ИмяТабличнойЧасти 															КАК ИмяТабличнойЧасти,
	|	Т.НомерСтроки 																	КАК НомерСтроки,
	|	ИсходныеДанные.НалогообложениеНДС 												КАК НалогообложениеНДС,
	|	ИсходныеДанные.ВидЦенности 														КАК ВидЦенности,
	|	ЕСТЬNULL(ТаблицаСозданныхАналитик.АналитикаУчетаПартий, Т.АналитикаУчетаПартий) КАК АналитикаУчетаПартий
	|ИЗ
	|	ВТАналитик_ТаблицаАналитикУчетаПартийПредварительная КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТАналитик_КорректныеПоляАналитикУчетаПартий КАК ИсходныеДанные
	|		ПО Т.ИмяТабличнойЧасти		= ИсходныеДанные.ИмяТабличнойЧасти
	|			И Т.НомерСтроки			= ИсходныеДанные.НомерСтроки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТАналитик_ТаблицаСозданныхАналитик КАК ТаблицаСозданныхАналитик
	|		ПО Т.АналитикаУчетаПартий 		= ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|			И Т.ГруппаФинансовогоУчета	= ТаблицаСозданныхАналитик.ГруппаФинансовогоУчета
	|			И Т.Поставщик				= ТаблицаСозданныхАналитик.Поставщик
	|			И Т.Контрагент				= ТаблицаСозданныхАналитик.Контрагент
	|			И Т.СтавкаНДС				= ТаблицаСозданныхАналитик.СтавкаНДС
	|			И Т.НалогообложениеНДС 		= ТаблицаСозданныхАналитик.НалогообложениеНДС
	|			И Т.ВидЦенности				= ТаблицаСозданныхАналитик.ВидЦенности
	|			И Т.КодСтроки				= ТаблицаСозданныхАналитик.КодСтроки
	|;
	|/////////////////////////////
	|УНИЧТОЖИТЬ ВТАналитик_ТаблицаАналитикУчетаПартийПредварительная
	|;
	|/////////////////////////////
	|УНИЧТОЖИТЬ ВТАналитик_КорректныеПоляАналитикУчетаПартий
	|;
	|/////////////////////////////
	|УНИЧТОЖИТЬ ВТАналитик_ТаблицаСозданныхАналитик
	|";
	
	ТаблицаАналитикУчетаПартий = ЗапросАналитикиПартий.Выполнить().Выгрузить();
	
	// Поместим аналитики во временную таблицу общего запроса.
	ЗапросОбщий.УстановитьПараметр("ТаблицаАналитикУчетаПартий", ТаблицаАналитикУчетаПартий);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Т.ИмяТабличнойЧасти		КАК ИмяТабличнойЧасти,
	|	Т.НомерСтроки			КАК НомерСтроки,
	|	Т.НалогообложениеНДС	КАК НалогообложениеНДС,
	|	Т.ВидЦенности			КАК ВидЦенности,
	|	Т.АналитикаУчетаПартий 	КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВтТаблицаАналитикУчетаПартий
	|ИЗ
	|	&ТаблицаАналитикУчетаПартий КАК Т
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки,
	|	ИмяТабличнойЧасти
	|";
	
	// Добавим запрос в список текстов общего запроса.
	Если ТекстыЗапроса <> Неопределено Тогда
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтТаблицаАналитикУчетаПартий");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Устанавливает пометку на удаление для найденных элементов справочника.
//
// Параметры:
//	СтруктураПараметров - Структура - Параметры выбора элементов справочника
//	ПометкаУдаления - Булево - Признак установки пометки на удаление
//
Процедура УстановитьПометкуУдаления(СтруктураПараметров, ПометкаУдаления) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаПартий КАК Таблица
	|ГДЕ
	|	Таблица.ПометкаУдаления <> &ПометкаУдаления
	|";
	
	Для Каждого МетаРеквизит Из Метаданные.Справочники.КлючиАналитикиУчетаПартий.Реквизиты Цикл
		
		ИмяРеквизита = МетаРеквизит.Имя;
		
		Если СтруктураПараметров.Свойство(ИмяРеквизита) Тогда
			Запрос.УстановитьПараметр(ИмяРеквизита, СтруктураПараметров[ИмяРеквизита]);
			Запрос.Текст = Запрос.Текст + "	И Таблица." + ИмяРеквизита + " = &" + ИмяРеквизита + Символы.ПС;
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ПометкаУдаления", ПометкаУдаления);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Выборка.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(ПометкаУдаления);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует наименование ключа аналитики учета партий.
//
// Параметры:
//	СтруктураРеквизитовКлюча - поля ключа аналитики учета партий, для которой необходимо сформировать наименование.
//
Функция НаименованиеКлючаАналитики(СтруктураРеквизитовКлюча)
	
	Наименование = "";
		
	Если ЗначениеЗаполнено(СтруктураРеквизитовКлюча.ГруппаФинансовогоУчета) Тогда
		Наименование = Наименование + НСтр("ru = 'Группа'") + ": " + СтруктураРеквизитовКлюча.ГруппаФинансовогоУчета + "; ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураРеквизитовКлюча.Поставщик) Тогда
		Наименование = Наименование + НСтр("ru = 'Поставщик'") + ": " + СтруктураРеквизитовКлюча.Поставщик + "; ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураРеквизитовКлюча.Контрагент) Тогда
		Наименование = Наименование + НСтр("ru = 'Контрагент'") + ": " + СтруктураРеквизитовКлюча.Контрагент + "; ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураРеквизитовКлюча.НалогообложениеНДС) Тогда
		Наименование = Наименование + НСтр("ru = 'Налогообложение НДС'") + ": " + СтруктураРеквизитовКлюча.НалогообложениеНДС + "; ";
	КонецЕсли;
		
	Если ЗначениеЗаполнено(СтруктураРеквизитовКлюча.СтавкаНДС) Тогда
		Наименование = Наименование + НСтр("ru = 'Ставка НДС'") + ": " + СтруктураРеквизитовКлюча.СтавкаНДС + "; ";
	КонецЕсли;  	
   		
	Если ЗначениеЗаполнено(СтруктураРеквизитовКлюча.ВидЦенности) Тогда
		Наименование = Наименование + НСтр("ru = 'Вид ценности'") + ": " + СтруктураРеквизитовКлюча.ВидЦенности + "; ";
	КонецЕсли;  	
	
	Если ЗначениеЗаполнено(СтруктураРеквизитовКлюча.КодСтроки) Тогда
		Наименование = Наименование + НСтр("ru = 'Код строки (продукция)'") + ": " + СтруктураРеквизитовКлюча.КодСтроки;
	КонецЕсли;
	
	Наименование = СокрЛП(Наименование);
	
	Если Прав(Наименование, 1) = ";" Тогда
		Наименование = СокрЛП(Сред(Наименование, 1, СтрДлина(Наименование) - 1));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		Наименование = "<>";
	КонецЕсли;
	
	Возврат Наименование;
	
КонецФункции

// Заменяет дубли ключей аналитики.
//
Процедура ЗаменитьДублиКлючейАналитики() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеСправочника.Ссылка 			КАК Ссылка,
	|	ДанныеСправочника.ПометкаУдаления 	КАК ПометкаУдаления,
	|	Аналитика.КлючАналитики 			КАК КлючАналитики
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаПартий КАК ДанныеСправочника
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК ДанныеРегистра
	|	ПО
	|		ДанныеСправочника.Ссылка = ДанныеРегистра.КлючАналитики
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК Аналитика
	|	ПО
	|		ДанныеСправочника.ГруппаФинансовогоУчета = Аналитика.ГруппаФинансовогоУчета
	|		И ДанныеСправочника.Поставщик 			 = Аналитика.Поставщик
	|		И ДанныеСправочника.Контрагент			 = Аналитика.Контрагент
	|		И ДанныеСправочника.НалогообложениеНДС 	 = Аналитика.НалогообложениеНДС
	|		И ДанныеСправочника.СтавкаНДС 			 = Аналитика.СтавкаНДС
	|		И ДанныеСправочника.ВидЦенности 		 = Аналитика.ВидЦенности
	|		И ДанныеСправочника.КодСтроки			 = Аналитика.КодСтроки
	|ГДЕ
	|	ДанныеРегистра.КлючАналитики ЕСТЬ NULL
	|");
	
	// Сформируем соответствие ключей аналитики.
	СоответствиеАналитик = Новый Соответствие;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
	
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СоответствиеАналитик.Вставить(Выборка.Ссылка, Выборка.КлючАналитики);
			
			Если НЕ Выборка.ПометкаУдаления Тогда
				СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
				СправочникОбъект.УстановитьПометкуУдаления(Истина, Ложь);
			КонецЕсли;

		КонецЦикла;
		
		ОбщегоНазначенияУТ.ЗаменитьСсылки(СоответствиеАналитик);
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
