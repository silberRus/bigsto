#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция получения списка организаций по настройкам Яндекс.Кассы
//
// Параметры:
//  ТолькоСДоговором  - Булево, Неопределено - признак того, что нужно возвращать организации только по настройкам для варианта с договором и наоборот, если Неопределено будет выдано по всем
//  ТолькоДействительные  - Булево - признак того, что нужно возвращать организации только по действующим настройкам
//
// Возвращаемое значение:
//   Массив   - Массив банковских счетов
//
Функция СписокДоступныхОрганизаций(ТолькоСДоговором = Неопределено, ТолькоДействительные = Истина) Экспорт
	
	МассивОрганизаций = Новый Массив;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	                      |	НастройкиЯндексКассы.Организация КАК Организация
	                      |ИЗ
	                      |	Справочник.НастройкиЯндексКассы КАК НастройкиЯндексКассы
	                      |ГДЕ
	                      |	НЕ НастройкиЯндексКассы.ПометкаУдаления
	                      |	И ВЫБОР
	                      |			КОГДА &ТолькоДействительные
	                      |				ТОГДА НастройкиЯндексКассы.Недействительна = ЛОЖЬ
	                      |		КОНЕЦ
	                      |	И ВЫБОР
	                      |			КОГДА &ТолькоСДоговором <> НЕОПРЕДЕЛЕНО
	                      |				ТОГДА НастройкиЯндексКассы.СДоговором = &ТолькоСДоговором
	                      |			ИНАЧЕ ИСТИНА
	                      |		КОНЕЦ");
	
	Запрос.УстановитьПараметр("ТолькоДействительные", ТолькоДействительные);
	Запрос.УстановитьПараметр("ТолькоСДоговором", ТолькоСДоговором);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		МассивОрганизаций = Результат.Выгрузить().ВыгрузитьКолонку("Организация");
	КонецЕсли;
	
	Возврат МассивОрганизаций;
	
КонецФункции

// Функция позволяющая получить настройку с Яндекс.Кассой по переданным параметрам поиска.
//
// Параметры:
//  КлючиПоиска  - Структура, ФиксированнаяСтруктура, Соответствие, ФиксированноеСоответствие - Ключи поиска по которым необходимо искать данные, поиск работает по логическому "И".
//    * Ключ - Строка - имя реквизита настройки.
//    * Значение - Произвольный - значение отбора.
//  ТолькоДействительные  - Булево - признак того, что нужно возвращать только действительные настройки.
//
// Возвращаемое значение:
//   СправочникСсылка.НастройкиЯндексКассы - Ссылка на найденную настройку, если ничего не найдено будет возвращена пустая ссылка.
//
Функция НайтиНастройку(КлючиПоиска, ТолькоДействительные = Истина) Экспорт 

	Если Не ТипЗнч(КлючиПоиска) = Тип("Структура") 
		и Не ТипЗнч(КлючиПоиска) = Тип("ФиксированнаяСтруктура")
		и Не ТипЗнч(КлючиПоиска) = Тип("Соответствие")
		и Не ТипЗнч(КлючиПоиска) = Тип("ФиксированноеСоответствие") Тогда 
		Возврат Справочники.НастройкиЯндексКассы.ПустаяСсылка();
	КонецЕсли;		
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	НастройкиЯндексКассы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.НастройкиЯндексКассы КАК НастройкиЯндексКассы
	               |ГДЕ
	               |	НЕ НастройкиЯндексКассы.ПометкаУдаления 
                   |	И ВЫБОР
                   |			КОГДА &ТолькоДействительные
                   |				ТОГДА НастройкиЯндексКассы.Недействительна = ЛОЖЬ
                   |		КОНЕЦ
	               |	#Условия#";
				   
	Запрос.УстановитьПараметр("ТолькоДействительные", ТолькоДействительные);
			   
	ТекстУсловия = "";
	Для Каждого КлючПоиска из КлючиПоиска Цикл  
		
		ТекстУсловия = ТекстУсловия 
			+ Символы.ПС + "И "
			+ "НастройкиЯндексКассы." + КлючПоиска.Ключ + " = &" +КлючПоиска.Ключ;
			
		Запрос.УстановитьПараметр(КлючПоиска.Ключ, КлючПоиска.Значение);
	КонецЦикла;	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Условия#", ТекстУсловия);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.НастройкиЯндексКассы.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

// Функция получения юридических данных эквайера Яндекс.Кассы на дату запроса.
//
// Параметры:
//  ДатаСреза  - Дата - дата на которую требуется получить юр. данные эквайера.
//
// Возвращаемое значение:
//   Структура  - Данные эквайера, содержащие следующие реквизиты:
//    * ПолноеНаименование
//    * Наименование
//    * ИНН
//    * КПП
//    * ОГРН
//    * ОКВЕД
//    * ОКПО
//
Функция ДанныеЭквайераПоУмолчанию(ДатаСреза) Экспорт 
	
	ЭквайерыXML = Справочники.НастройкиЯндексКассы.ПолучитьМакет("Эквайеры").ПолучитьТекст();
	ЭквайерыXMLТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(ЭквайерыXML).Данные;
	
	ЭквайерыXMLТаблица.Колонки.Добавить("ДатаСреза", Новый ОписаниеТипов("Дата",,,
													 Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	Для Каждого СтрокаТаблицы из ЭквайерыXMLТаблица Цикл 
		СтрокаТаблицы.ДатаСреза = ?(ПустаяСтрока(СтрокаТаблицы.DateFrom), Дата('00010101'), Дата(СтрокаТаблицы.DateFrom));
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ЭквайерыXMLТаблица"	, ЭквайерыXMLТаблица);
	Запрос.УстановитьПараметр("ДатаСреза"			, ДатаСреза);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЭквайерыXMLТаблица.FullName,
	               |	ЭквайерыXMLТаблица.Name,
	               |	ЭквайерыXMLТаблица.INN,
	               |	ЭквайерыXMLТаблица.KPP,
	               |	ЭквайерыXMLТаблица.OGRN,
	               |	ЭквайерыXMLТаблица.OKVED,
	               |	ЭквайерыXMLТаблица.OKPO,
	               |	ЭквайерыXMLТаблица.ДатаСреза
	               |ПОМЕСТИТЬ ЭквайерыXMLТаблица
	               |ИЗ
	               |	&ЭквайерыXMLТаблица КАК ЭквайерыXMLТаблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(ЭквайерыXMLТаблица.ДатаСреза) КАК ДатаСреза
	               |ПОМЕСТИТЬ ПолучениеПоДатеСреза
	               |ИЗ
	               |	ЭквайерыXMLТаблица КАК ЭквайерыXMLТаблица
	               |ГДЕ
	               |	ЭквайерыXMLТаблица.ДатаСреза <= &ДатаСреза
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭквайерыXMLТаблица.FullName КАК НаименованиеПолное,
	               |	ЭквайерыXMLТаблица.Name КАК Наименование,
	               |	ЭквайерыXMLТаблица.INN КАК ИНН,
	               |	ЭквайерыXMLТаблица.KPP КАК КПП,
	               |	ЭквайерыXMLТаблица.OGRN КАК ОГРН,
	               |	ЭквайерыXMLТаблица.OKVED КАК ОКВЕД,
	               |	ЭквайерыXMLТаблица.OKPO КАК КодПоОКПО
	               |ИЗ
	               |	ЭквайерыXMLТаблица КАК ЭквайерыXMLТаблица
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПолучениеПоДатеСреза КАК ПолучениеПоДатеСреза
	               |		ПО ЭквайерыXMLТаблица.ДатаСреза = ПолучениеПоДатеСреза.ДатаСреза";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ДанныеЭквайера = Новый Структура("НаименованиеПолное, Наименование, ИНН, КПП, ОГРН, ОКВЕД, КодПоОКПО");
	ЗаполнитьЗначенияСвойств(ДанныеЭквайера, Выборка);
	
	Возврат ДанныеЭквайера;
	
КонецФункции

#Область КарточкаНастройки

// Возвращает табличный документ настройки.
// Параметры:
//  Настройка - СправочникОбъект.НастройкиЯндексКассы, ДанныеФормыСтруктура - элемент, для которого нужно отработать логику связи реквизитов 
//
// Возвращаемое значение:
//	ТабличныйДокумент - табличный документ с реквизитами
//
Функция ПолучитьТабличныйДокументКарточкиНастройки(Настройка) Экспорт
	
	Перем Заголовок;
	
	Объект = Неопределено;
	Если ТипЗнч(Настройка) = Тип("СправочникСсылка.НастройкиЯндексКассы") Тогда
		Объект = Настройка.ПолучитьОбъект();
	ИначеЕсли ТипЗнч(Настройка) = Тип("СправочникОбъект.НастройкиЯндексКассы")
		Или ТипЗнч(Настройка) = Тип("ДанныеФормыСтруктура") 
		Или ТипЗнч(Настройка) = Тип("УправляемаяФорма") Тогда
		Объект = Настройка;
	Иначе
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	ТабличныйДокументКарточка = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ПФ_MXL_КарточкаНастройки");
	
#Область Основная
	
	ОбластьОсновная = Макет.ПолучитьОбласть("Основная");
	ОбластьОсновная.Параметры.Организация = Объект.Организация;
	
	Вариант = ?(Объект.СДоговором = 0, НСтр("ru = 'Без договора'"), НСтр("ru = 'С договором'"));
	ОбластьОсновная.Параметры.Вариант = Вариант;
	
	Недействительна = ?(Объект.Недействительна, "НЕДЕЙСТВИТЕЛЬНА", "");
	ОбластьОсновная.Параметры.НЕДЕЙСТВИТЕЛЬНА = Недействительна;
	
	ТабличныйДокументКарточка.Вывести(ОбластьОсновная);
	
#КонецОбласти
	
#Область СДоговором
	
	Если Объект.СДоговором Тогда 

#Область ПараметрыПодключения
	
		ОбластьПараметрыПодключения = Макет.ПолучитьОбласть("ПараметрыПодключения");
		ЗаполнитьЗначенияСвойств(ОбластьПараметрыПодключения.Параметры, Объект);

		ТабличныйДокументКарточка.Вывести(ОбластьПараметрыПодключения);
		
#КонецОбласти

#Область НастройкиУчета
	
		ОбластьНастройкиУчета = Макет.ПолучитьОбласть("НастройкиУчета");
		ЗаполнитьЗначенияСвойств(ОбластьНастройкиУчета.Параметры, Объект);

		ТабличныйДокументКарточка.Вывести(ОбластьНастройкиУчета);
		
#Область СтатьиЗатрат
	
		ОбластьСтатьиЗатрат = Макет.ПолучитьОбласть("СтатьиЗатрат");
		ЗаполнитьЗначенияСвойств(ОбластьСтатьиЗатрат.Параметры, Объект);

		ТабличныйДокументКарточка.Вывести(ОбластьСтатьиЗатрат);
		
#КонецОбласти

#Область Комиссия
	
		ОбластьКомиссия = Макет.ПолучитьОбласть("Комиссия");
		ЗаполнитьЗначенияСвойств(ОбластьКомиссия.Параметры, Объект);

		ТабличныйДокументКарточка.Вывести(ОбластьКомиссия);
		
#Область СтатьяРасходов
	
	
	ТипРеквизитаСтатьяРасходов = Метаданные.НайтиПоТипу(ТипЗнч(Объект.СтатьяРасходов));
	
	Если ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(ТипРеквизитаСтатьяРасходов) Тогда 
		
		ОбластьКомиссияСтатьяРасходов = Макет.ПолучитьОбласть("КомиссияСтатьяРасходов");
		ЗаполнитьЗначенияСвойств(ОбластьКомиссияСтатьяРасходов.Параметры, Объект);

		ТабличныйДокументКарточка.Вывести(ОбластьКомиссияСтатьяРасходов);
		
	КонецЕсли;
		
#КонецОбласти
	
#Область КомиссияПодразделение
	
	ТипРеквизитаПодразделение = Метаданные.НайтиПоТипу(ТипЗнч(Объект.Подразделение));
		
	Если ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(ТипРеквизитаПодразделение) Тогда 
		
		ОбластьКомиссияПодразделение = Макет.ПолучитьОбласть("КомиссияПодразделение");
		ЗаполнитьЗначенияСвойств(ОбластьКомиссияПодразделение.Параметры, Объект);

		ТабличныйДокументКарточка.Вывести(ОбластьКомиссияПодразделение);
		
	КонецЕсли;
		
#КонецОбласти
	
#КонецОбласти

#КонецОбласти
	
	КонецЕсли;
	
#КонецОбласти
	
#Область ШаблоныПисем
	
	Если ТипЗнч(Настройка) = Тип("УправляемаяФорма") 
		И Настройка.СоздатьШаблоныАвтоматически Тогда 
				
		ОбластьШаблоныПисем = Макет.ПолучитьОбласть("ШаблоныПисем");
		ТабличныйДокументКарточка.Вывести(ОбластьШаблоныПисем);
			
	КонецЕсли;
	
#КонецОбласти
	
	Возврат ТабличныйДокументКарточка;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли