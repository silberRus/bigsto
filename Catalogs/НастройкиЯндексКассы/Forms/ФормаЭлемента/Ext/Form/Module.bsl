#Область ОписаниеПеременных

&НаКлиенте
Перем ХронологияПереключенияСтраниц;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		РежимСоздания = Истина;
		ПриЧтенииСозданииНаСервере(Объект);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ХронологияПереключенияСтраниц = Новый Массив;
	
	ИзменитьЗаголовок();
	ОтобразитьПризнакНедействительна();
	
	Если НеПоказыватьСтраницуКарточкаНастроекПриОткрытии Тогда 
		СменитьСтраницуШаги(Элементы.СтраницаПреимущества);
	Иначе
		СменитьСтраницуШаги(Элементы.СтраницаКарточкаНастройки);
	КонецЕсли;
	СменитьСтраницуКомандНавигации(Элементы.ДалееОтмена)
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_УчетнаяЗаписьЭлектроннойПочты" 
		и Элементы.Шаги.ТекущаяСтраница = Элементы.СтраницаШаблоныСообщений Тогда 
		
		ПроверитьНастроенныеУчетныеЗаписиЭлектроннойПочтыИОбработатьВидимостьПредупреждения();
		
	ИначеЕсли ИмяСобытия = "Запись_НастройкиЯндексКассы"
		и Элементы.Шаги.ТекущаяСтраница = Элементы.СтраницаВариантыИВыборОрганизации Тогда 
		
		Если РежимСоздания Тогда 
			ТекущаяОрганизация = Неопределено;			
		Иначе	
			ТекущаяОрганизация = Объект.Организация;
		КонецЕсли;
		
		СписокВыбора = Новый СписокЗначений;
		УстановитьСписокНеПодключенныхОрганизаций(СписокВыбора, ТекущаяОрганизация);
		
		Элементы.Организация.СписокВыбора.ЗагрузитьЗначения(СписокВыбора.ВыгрузитьЗначения());
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере(ТекущийОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#Область СтраницаВариантыИВыборОрганизации

&НаКлиенте
Процедура ВариантПриИзменении(Элемент)
	
	ОтобразитьПодсказку(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ИзменитьЗаголовок();
	
КонецПроцедуры

#КонецОбласти

#Область СтраницаНастройкиУчета

&НаКлиенте
Процедура СтатьяДвиженияДенежныхСредствОплатыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыСобытия = Новый Структура("ДанныеВыбора", ДанныеВыбора);
	ИнтеграцияСЯндексКассойКлиентПереопределяемый.ОбработкаСобытияЭлементаФормыНастройкиЯндексКассы("НачалоВыбора",
		ЭтотОбъект, Элемент, ПараметрыСобытия, СтандартнаяОбработка);
	ДанныеВыбора = ПараметрыСобытия.ДанныеВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДвиженияДенежныхСредствВозвратыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыСобытия = Новый Структура("ДанныеВыбора", ДанныеВыбора);
	ИнтеграцияСЯндексКассойКлиентПереопределяемый.ОбработкаСобытияЭлементаФормыНастройкиЯндексКассы("НачалоВыбора",
		ЭтотОбъект, Элемент, ПараметрыСобытия, СтандартнаяОбработка);
	ДанныеВыбора = ПараметрыСобытия.ДанныеВыбора;

КонецПроцедуры

&НаКлиенте
Процедура ЭквайерСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Основание", ДанныеЭквайераПоУмолчанию());
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыФормы, Элемент, УникальныйИдентификатор); 

КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыСобытия = Новый Структура("ДанныеВыбора", ДанныеВыбора);
	ИнтеграцияСЯндексКассойКлиентПереопределяемый.ОбработкаСобытияЭлементаФормыНастройкиЯндексКассы("НачалоВыбора",
		ЭтотОбъект, Элемент, ПараметрыСобытия, СтандартнаяОбработка);
	ДанныеВыбора = ПараметрыСобытия.ДанныеВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)
	
	УстановитьДоступ(ЭтотОбъект, СтатьяРасходов);
	
	ИнтеграцияСЯндексКассойКлиентПереопределяемый.ОбработкаСобытияЭлементаФормыНастройкиЯндексКассы("ПриИзменении",
		ЭтотОбъект, Элемент);	

	СтатьяРасходовПриИзмененииНаСервере();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"АналитикаРасходов",
		"ВыбиратьТип",
		АналитикаРасходов = Неопределено);
	
	
КонецПроцедуры

&НаСервере
Процедура СтатьяРасходовПриИзмененииНаСервере()
	
	ИнтеграцияСЯндексКассойПереопределяемый.СтатьяРасходовПриИзмененииНаСервере(ЭтотОбъект)

КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовОчистка(Элемент, СтандартнаяОбработка)
	
	АналитикаРасходов = "";
	ИнтеграцияСЯндексКассойКлиентПереопределяемый.ОбработкаСобытияЭлементаФормыНастройкиЯндексКассы("Очистка", 
		ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыСобытия = Новый Структура("ДанныеВыбора", ДанныеВыбора);
	ИнтеграцияСЯндексКассойКлиентПереопределяемый.ОбработкаСобытияЭлементаФормыНастройкиЯндексКассы("НачалоВыбора",
		ЭтотОбъект, Элемент, ПараметрыСобытия, СтандартнаяОбработка);
	ДанныеВыбора = ПараметрыСобытия.ДанныеВыбора;

КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПараметрыСобытия = Новый Структура("ВыбранноеЗначение", ВыбранноеЗначение);
	ИнтеграцияСЯндексКассойКлиентПереопределяемый.ОбработкаСобытияЭлементаФормыНастройкиЯндексКассы("ОбработкаВыбора",
		ЭтотОбъект, Элемент, ПараметрыСобытия, СтандартнаяОбработка);
	ВыбранноеЗначение = ПараметрыСобытия.ВыбранноеЗначение;
	
КонецПроцедуры

#КонецОбласти

#Область СтраницаШаблоныСообщений

&НаКлиенте
Процедура СоздатьШаблоныАвтоматическиПриИзменении(Элемент)
	
	ПроверитьНастроенныеУчетныеЗаписиЭлектроннойПочтыИОбработатьВидимостьПредупреждения();
	
КонецПроцедуры

#КонецОбласти

#Область СтраницаФинал

&НаКлиенте
Процедура ОткрытьФормуСпискаШаблоныСообщенийНажатие(Элемент)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Ссылка", СозданныеШаблоныСообщений);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	ОткрытьФорму("Справочник.ШаблоныСообщений.ФормаСписка", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПовторитьПолучениеНастроекНажатие(Элемент)
	
	ПолучитьНастройкиИзСервиса();
	
КонецПроцедуры

#КонецОбласти

#Область СтраницаПараметрыПодключенияКСервису

&НаКлиенте
Процедура ОтправкаЧековЧерезЯндексПриИзменении(Элемент)
	
	ОтправкаЧековЧерезЯндекс = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправкаЧековСамостоятельноПриИзменении(Элемент)
	
	ОтправкаЧековЧерезЯндекс = Ложь;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтраницаШаблоныСообщений

&НаКлиенте
Процедура СоздатьУчетнуюЗаписьЭлектроннойПочты(Команда)
	
	ОповещениеОЗакрытииПомощника = Новый ОписаниеОповещения(
		"ПослеЗакрытияФормыПомощникаСозданияУчетнойЗаписиЭлектроннойПочты", ЭтотОбъект);
	ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаОбъекта",,ЭтотОбъект,,,,ОповещениеОЗакрытииПомощника);
	
КонецПроцедуры

#КонецОбласти

#Область КомандыНавигации

&НаКлиенте
Процедура Готово(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	ОчиститьСообщения();
	
	Если Элементы.Шаги.ТекущаяСтраница = Элементы.СтраницаПреимущества Тогда
		
		ХронологияПереключенияСтраниц.Добавить(Элементы.СтраницаПреимущества);
		СменитьСтраницуШаги(Элементы.СтраницаВариантыИВыборОрганизации);
		
	ИначеЕсли Элементы.Шаги.ТекущаяСтраница = Элементы.СтраницаКарточкаНастройки Тогда
		
		Если ХронологияПереключенияСтраниц.Количество() Тогда 
			Если СДоговором Тогда 
				СменитьСтраницуШаги(Элементы.СтраницаФинал);
				СменитьСтраницуКомандНавигации(Элементы.Готово);
			Иначе 
				ХронологияПереключенияСтраниц.Добавить(Элементы.СтраницаКарточкаНастройки);
				СменитьСтраницуШаги(Элементы.СтраницаПолученияНастроек);
				СменитьСтраницуКомандНавигации(Элементы.НазадОтмена);
				ПолучитьНастройкиИзСервиса();
			КонецЕсли;
			СменитьВидимостьПодменюЕще(ЭтотОбъект, Ложь);
		Иначе
			ХронологияПереключенияСтраниц.Добавить(Элементы.СтраницаКарточкаНастройки);
			СменитьСтраницуШаги(Элементы.СтраницаВариантыИВыборОрганизации);
		КонецЕсли;
		
	ИначеЕсли Элементы.Шаги.ТекущаяСтраница = Элементы.СтраницаВариантыИВыборОрганизации Тогда
		
		Отказ = Ложь;
		ПроверкаЗаполненияСтраницаВариантыИВыборОрганизации(Отказ);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ХронологияПереключенияСтраниц.Добавить(Элементы.СтраницаВариантыИВыборОрганизации);
		
		Если Не СДоговором Тогда
			Если НеОткрыватьСтраницуШаблоныСообщений Тогда
				СменитьСтраницуШаги(Элементы.СтраницаКарточкаНастройки);
			Иначе
				СменитьСтраницуШаги(Элементы.СтраницаШаблоныСообщений);
			КонецЕсли;
		ИначеЕсли СДоговором Тогда
			СменитьСтраницуШаги(Элементы.СтраницаПараметрыПодключенияКСервису);
		КонецЕсли;
			
	ИначеЕсли Элементы.Шаги.ТекущаяСтраница = Элементы.СтраницаПараметрыПодключенияКСервису Тогда
		
		Отказ = Ложь;
		ПроверкаЗаполненияСтраницаПараметрыПодключенияКСервису(Отказ);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ХронологияПереключенияСтраниц.Добавить(Элементы.СтраницаПараметрыПодключенияКСервису);
		СменитьСтраницуШаги(Элементы.СтраницаНастройкиУчета);
		
	ИначеЕсли Элементы.Шаги.ТекущаяСтраница = Элементы.СтраницаНастройкиУчета Тогда
		
		Отказ = Ложь;
		ПроверкаЗаполненияСтраницаНастройкиУчета(Отказ);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ХронологияПереключенияСтраниц.Добавить(Элементы.СтраницаНастройкиУчета);
		Если НеОткрыватьСтраницуШаблоныСообщений Тогда 
			СменитьСтраницуШаги(Элементы.СтраницаКарточкаНастройки);
		Иначе
			СменитьСтраницуШаги(Элементы.СтраницаШаблоныСообщений);
		КонецЕсли;	
		
	ИначеЕсли Элементы.Шаги.ТекущаяСтраница = Элементы.СтраницаШаблоныСообщений Тогда
		
		ХронологияПереключенияСтраниц.Добавить(Элементы.СтраницаШаблоныСообщений);
		СменитьСтраницуШаги(Элементы.СтраницаКарточкаНастройки);
		
	ИначеЕсли Элементы.Шаги.ТекущаяСтраница = Элементы.СтраницаПолученияНастроек Тогда
		
		СменитьСтраницуШаги(Элементы.СтраницаФинал);
		СменитьСтраницуКомандНавигации(Элементы.Готово);
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)

	ОтменитьАктивныеФоновыеОперации();
	ВернутьсяНаПредыдущуюСтраницу();

КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ОтменитьАктивныеФоновыеОперации();
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область КомандыЕще

&НаКлиенте
Процедура НастройкаНедействительна(Команда)
	
	Недействительна = Не Недействительна;
	
	ОтобразитьПризнакНедействительна();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДополнительныеНастройки(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НастройкаЯндексКассы", Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.СтатусОбменовСЯндексКассой.ФормаЗаписи", 
		ПараметрыФормы, 
		ЭтотОбъект,
		УникальныйИдентификатор); 
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере(ОбъектДанных)
	
	ЗаполнитьПараметрыФормы(ОбъектДанных);
	ИнтеграцияСЯндексКассойПереопределяемый.ИнициализироватьДополнительныеПараметрыФормыНастройкиЯндексКассы(ДополнительныеПараметрыФормы);
	УстановитьВидимостьДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыФормы(ОбъектДанных)
	
	Если РежимСоздания Тогда // новый
		
		Если ЗначениеЗаполнено(Параметры.Организация) Тогда
			Организация = Параметры.Организация;
		ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") И Параметры.ЗначенияЗаполнения.Свойство("Организация")
			И ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.Организация) Тогда
			Организация = Параметры.ЗначенияЗаполнения.Организация;
		КонецЕсли;
		
		НеПоказыватьСтраницуКарточкаНастроекПриОткрытии = Истина;
		
	Иначе  // редактирование
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбъектДанных);
		
	КонецЕсли;
	
	ИспользоватьНесколькоОрганизаций = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизацийЭД");
	
	Если Не ИспользоватьНесколькоОрганизаций и Не ЗначениеЗаполнено(Организация) Тогда 
		Организация = ЭлектронноеВзаимодействиеСлужебный.ОрганизацияПоУмолчанию();
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ГруппаВыборОрганизации",
		"Видимость",
		ИспользоватьНесколькоОрганизаций);
		
	Элементы.Варианты.Заголовок = ?(ИспользоватьНесколькоОрганизаций,
		НСтр("ru = 'Выберите вариант использования сервиса и организацию'"),
		НСтр("ru = 'Выберите вариант использования сервиса'"));
	
	Если ИспользоватьНесколькоОрганизаций Тогда 
		УстановитьСписокНеПодключенныхОрганизаций(Элементы.Организация.СписокВыбора, Организация);
	КонецЕсли;
	
	НеОткрыватьСтраницуШаблоныСообщений = Не ИспользоватьШаблоныСообщений();
	
	ВалютаРубль = Справочники.Валюты.НайтиПоКоду("643"); //Рубль
	НовыйПараметр = Новый ПараметрВыбора("Отбор.ВалютаДенежныхСредств", ВалютаРубль);
	НовыеПараметры = Новый ФиксированныйМассив(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(НовыйПараметр));
	Элементы.БанковскийСчет.ПараметрыВыбора = НовыеПараметры;
	
	ДанныеЭквайераПоУмолчанию = ДанныеЭквайераПоУмолчанию();
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"Эквайер",
		"ПодсказкаВвода",
		ДанныеЭквайераПоУмолчанию.Наименование);
		
	ДополнительныеПараметрыФормы = Новый Структура();
	
	ОтправкаЧековЧерезЯндекс = Объект.ОтправкаЧековЧерезЯндекс;
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементовФормы()
	
	ОтобразитьПодсказку(ЭтотОбъект);
	СменитьВидимостьПодменюЕще(ЭтотОбъект, Не РежимСоздания);
	Элементы.КомандыНавигации.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	// Доступность аналитик учета в зависимости от наличия данных аналитик в этой базе данных
	
	ТипРеквизитаСтатьяРасходов = Метаданные.НайтиПоТипу(ТипЗнч(Объект.СтатьяРасходов));
	СтатьиРасходовДоступны = ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(ТипРеквизитаСтатьяРасходов);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"СтатьяРасходов",
		"Видимость",
		СтатьиРасходовДоступны);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"АналитикаРасходов",
		"Видимость",
		СтатьиРасходовДоступны);
	
КонецПроцедуры

#КонецОбласти

#Область Шапка

&НаКлиенте
Процедура ИзменитьЗаголовок()
	
	Если ЗначениеЗаполнено(Организация) Тогда 
		Шаблон = НСтр("ru = 'Настройка подключения %1 к сервису'");
		Элементы.Заголовок.Заголовок = СтрШаблон(Шаблон, Организация);
	Иначе
		Элементы.Заголовок.Заголовок = НСтр("ru = 'Настройка подключения к сервису'");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПризнакНедействительна()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ЗаголовокНедействительна",
		"Видимость",
		Недействительна);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"КомандаНастройкаНедействительна",
		"Картинка",
		?(Недействительна, БиблиотекаКартинок.ФлагУстановлен, БиблиотекаКартинок.ФлагНеУстановлен));
		
	Если Элементы.Шаги.ТекущаяСтраница = Элементы.СтраницаКарточкаНастройки
		и ХронологияПереключенияСтраниц.Количество() Тогда 
		ПриОткрытииСтраницыКарточкаНастройки(Истина);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СтраницаКарточкаНастройки

&НаСервере
Процедура ПриОткрытииСтраницыКарточкаНастройки(СтраницаСохранения)
	
	Если СтраницаСохранения Тогда 
		КарточкаНастройки = Справочники.НастройкиЯндексКассы.ПолучитьТабличныйДокументКарточкиНастройки(ЭтотОбъект);
	Иначе
		КарточкаНастройки = Справочники.НастройкиЯндексКассы.ПолучитьТабличныйДокументКарточкиНастройки(Объект);
	КонецЕсли;	
	
	МассивФС = Новый Массив;
	
	МассивФС.Добавить(НСтр("ru = 'Для сохранения настройки нажмите Далее, для изменения нажмите Назад, а для закрытия нажмите Отмена'"));
	МассивФС.Добавить(Символы.ПС);
	МассивФС.Добавить(НСтр("ru = 'Нажатие кнопки Далее означает согласие с '"));
	МассивФС.Добавить(Новый ФорматированнаяСтрока("Условиями использования сервиса",,,,"https://kassa-yandex.1c.ru/agreement"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
		"ПодсказкаЧтоДелатьНадпись",
		"Заголовок",
		?(СтраницаСохранения, 
			Новый ФорматированнаяСтрока(МассивФС),
			
			НСтр("ru = 'Для изменения настройки нажмите Далее, а для закрытия нажмите Отмена'")));
			
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
		"ГруппаКарточкаНастройки",
		"Заголовок",
		?(СтраницаСохранения, 
			НСтр("ru = 'Сохранение настройки'"),
			НСтр("ru = 'Сводная информация'")));
			
	
КонецПроцедуры

#КонецОбласти

#Область СтраницаВариантыИВыборОрганизации

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьПодсказку(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы,
		"ГруппаПодсказки",
		"ТекущаяСтраница",
		?(Форма.СДоговором = 0, Форма.Элементы.ГруппаПодсказкиБезДоговора, Форма.Элементы.ГруппаПодсказкиСДоговора)); 
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаЗаполненияСтраницаВариантыИВыборОрганизации(Отказ)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Выберите организацию'"), , "Организация", , Отказ);
		
	Иначе
		
		ПроверкаЗаполненияСтраницаВариантыИВыборОрганизацииНаСервере(Отказ);
		
		
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаЗаполненияСтраницаВариантыИВыборОрганизацииНаСервере(Отказ)
	
	Если НЕ НастройкаПоОрганизацииУникальна() Тогда 
		ТекстСообщения = СтрШаблон(НСтр("ru = 'В информационной базе уже существует настройка для организации %1'"),
			Организация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Организация", , Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда 
		//Проверка реквизитов организации
		ИнтеграцияСЯндексКассой.ПроверитьОрганизациюНаСоответствиеТребованиямПриПодключенииКСервису(Организация,
			СДоговором, Отказ);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция НастройкаПоОрганизацииУникальна()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяНастройка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	НастройкиЯндексКассы.Ссылка
	               |ИЗ
	               |	Справочник.НастройкиЯндексКассы КАК НастройкиЯндексКассы
	               |ГДЕ
	               |	НастройкиЯндексКассы.Организация = &Организация
	               |	И НастройкиЯндексКассы.Ссылка <> &ТекущаяНастройка
	               |	И НЕ НастройкиЯндексКассы.ПометкаУдаления
	               |	И НЕ НастройкиЯндексКассы.Недействительна";
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервереБезКонтекста
функция УстановитьСписокНеПодключенныхОрганизаций(СписокВыбора, ТекущаяОрганизация = Неопределено)
	
	СписокВыбора.Очистить();
	
	НазваниеСправочникаОрганизации =
		ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяПрикладногоСправочника("Организации");
	Если Не ЗначениеЗаполнено(НазваниеСправочникаОрганизации) Тогда
		НазваниеСправочникаОрганизации = "Организации";
	КонецЕсли;

	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтрШаблон("Справочник.%1",
		НазваниеСправочникаОрганизации));
		
	ПустаяСсылка = МенеджерОбъекта.ПустаяСсылка();
	Если ТекущаяОрганизация = Неопределено Тогда
		ТекущаяОрганизация = ПустаяСсылка;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяОрганизация", ТекущаяОрганизация);
	Запрос.УстановитьПараметр("ПустаяСсылка", ПустаяСсылка);
	ТекстЗапроса =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	НастройкиЯндексКассы.Организация КАК Организация
	                |ПОМЕСТИТЬ ПодключенныеОрганизации
	                |ИЗ
	                |	Справочник.НастройкиЯндексКассы КАК НастройкиЯндексКассы
	                |ГДЕ
	                |	НЕ НастройкиЯндексКассы.ПометкаУдаления
	                |	И НЕ НастройкиЯндексКассы.Недействительна
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	Организации.Ссылка КАК Организация,
	                |	ПРЕДСТАВЛЕНИЕ(Организации.Ссылка) КАК Представление
	                |ИЗ
	                |	#СправочникОрганизации КАК Организации
	                |ГДЕ
	                |	НЕ Организации.Ссылка = &ТекущаяОрганизация
	                |	И НЕ Организации.Ссылка В
	                |				(ВЫБРАТЬ
	                |					ПодключенныеОрганизации.Организация
	                |				ИЗ
	                |					ПодключенныеОрганизации)
	                |
	                |ОБЪЕДИНИТЬ
	                |
	                |ВЫБРАТЬ
	                |	&ТекущаяОрганизация,
	                |	ПРЕДСТАВЛЕНИЕ(&ТекущаяОрганизация)
	                |ГДЕ
	                |	НЕ &ТекущаяОрганизация = &ПустаяСсылка
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Организация";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#СправочникОрганизации", "Справочник." + НазваниеСправочникаОрганизации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		СписокВыбора.Добавить(Выборка.Организация ,Выборка.Представление);
	КонецЦикла;
	
КонецФункции

#КонецОбласти

#Область СтраницаПараметрыПодключенияКСервису

&НаКлиенте
Процедура ПроверкаЗаполненияСтраницаПараметрыПодключенияКСервису(Отказ)
	
	Если Не ЗначениеЗаполнено(ИдентификаторМагазина) Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите SHOP ID (идентификатор магазина)'"),
			, "ИдентификаторМагазина", , Отказ);
	ИначеЕсли Не НастройкаПоИдентификаторуМагазинаУникальна(Объект.Ссылка, ИдентификаторМагазина) Тогда 
		ТекстСообщения = НСтр("ru = 'В информационной базе уже существует настройка с таким идентификатором магазина'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ИдентификаторМагазина", , Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИдентификаторВитрины) Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите SC ID (идентификатор витрины)'"),
			, "ИдентификаторВитрины", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкаПоИдентификаторуМагазинаУникальна(НастройкаСсылка, ИдентификаторМагазина)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НастройкаСсылка",       НастройкаСсылка);
	Запрос.УстановитьПараметр("ИдентификаторМагазина", ИдентификаторМагазина);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	НастройкиЯндексКассы.Ссылка
	               |ИЗ
	               |	Справочник.НастройкиЯндексКассы КАК НастройкиЯндексКассы
	               |ГДЕ
	               |	НастройкиЯндексКассы.Ссылка <> &НастройкаСсылка
	               |	И НастройкиЯндексКассы.ИдентификаторМагазина = &ИдентификаторМагазина
	               |	И НЕ НастройкиЯндексКассы.ПометкаУдаления
	               |	И НастройкиЯндексКассы.СДоговором
	               |	И НЕ НастройкиЯндексКассы.Недействительна";
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#Область СтраницаНастройкиУчета

&НаКлиенте
Процедура ПриОткрытииСтраницыНастройкиУчета()
	
	УстановитьДоступ(ЭтотОбъект, СтатьяРасходов)
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступ(Форма, СтатьяРасходов)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы,
		"АналитикаРасходов",
		"ТолькоПросмотр",
		Не ЗначениеЗаполнено(СтатьяРасходов));
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаЗаполненияСтраницаНастройкиУчета(Отказ)
	
	Если Не ЗначениеЗаполнено(БанковскийСчет) Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите Банковский счет'"),,
			"БанковскийСчет", , Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтатьяДвиженияДенежныхСредствОплаты) Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите Статью ддс для учета поступлений оплаты от клиента'"),,
			"СтатьяДвиженияДенежныхСредствОплаты", , Отказ);
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(СтатьяДвиженияДенежныхСредствВозвраты) Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите Статью ддс для учета возвратов оплаты клиенту'"),,
			"СтатьяДвиженияДенежныхСредствВозвраты", , Отказ);
	КонецЕсли;	
	
	Если СтатьиРасходовДоступны Тогда 
		
		Если Не ЗначениеЗаполнено(СтатьяРасходов) Тогда	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите Статью расходов'"),,
				"СтатьяРасходов", , Отказ);
		КонецЕсли;	
		
		Если АналитикаРасходовОбязательна и Не ЗначениеЗаполнено(АналитикаРасходов) Тогда	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите Аналитику расходов'"),,
				"АналитикаРасходов", , Отказ);
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеЭквайераПоУмолчанию(ДатаСреза = Неопределено)
	
	Если ДатаСреза = Неопределено Тогда 
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Возврат Справочники.НастройкиЯндексКассы.ДанныеЭквайераПоУмолчанию(ДатаСреза);
КонецФункции

#КонецОбласти

#Область СтраницаШаблоныСообщений

&НаКлиенте
Процедура ПриОткрытииСтраницыШаблоныСообщений()
	
	ПроверитьНастроенныеУчетныеЗаписиЭлектроннойПочтыИОбработатьВидимостьПредупреждения();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВидимостьПредупрежденияОНеобходимостиНастроитьЭлектроннуюПочту(Видимость)

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ГруппаВниманиеНетУчетнойЗаписиЭлектроннойПочты",
		"Видимость",
		Видимость);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПроверитьНастроенныеУчетныеЗаписиЭлектроннойПочтыИОбработатьВидимостьПредупреждения()
	
	Видимость = СоздатьШаблоныАвтоматически и НужноСоздатьУчетнуюЗаписьЭлектроннойПочты();
	ОбработатьВидимостьПредупрежденияОНеобходимостиНастроитьЭлектроннуюПочту(Видимость);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыПомощникаСозданияУчетнойЗаписиЭлектроннойПочты(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	
	ПроверитьНастроенныеУчетныеЗаписиЭлектроннойПочтыИОбработатьВидимостьПредупреждения();	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НужноСоздатьУчетнуюЗаписьЭлектроннойПочты()
	
	Возврат РаботаСПочтовымиСообщениями.ДоступнаОтправкаПисем()
			и РаботаСПочтовымиСообщениями.ДоступныеУчетныеЗаписи(Истина).Количество() = 0;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИспользоватьШаблоныСообщений()
	
	ИспользоватьШаблоныСообщений = Ложь;
	ИнтеграцияСЯндексКассойПереопределяемый.ПроверитьИспользованиеШаблоновСообщений(ИспользоватьШаблоныСообщений);
	
	Если Не ИспользоватьШаблоныСообщений Тогда 
		Возврат Ложь;
	КонецЕсли;	
	
	ШаблоныПисем = Новый Массив;
	ИнтеграцияСЯндексКассойПереопределяемый.ПредопределенныеШаблоныСообщений(ШаблоныПисем);

	Если Не ШаблоныПисем.Количество() Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	ЕстьФункционал = ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Взаимодействия") 
					и ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями")
					и Не Метаданные.НайтиПоПолномуИмени("Справочник.ШаблоныСообщений") = Неопределено;
					
	Если Не ЕстьФункционал Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СправочникШаблоныСообщений = Метаданные.НайтиПоПолномуИмени("Справочник.ШаблоныСообщений");
	
	ЕстьПравоИспользованияШаблонов = ПравоДоступа("Чтение", СправочникШаблоныСообщений) и ПравоДоступа("Добавление",
		СправочникШаблоныСообщений);
	
	Если Не ЕстьПравоИспользованияШаблонов Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	ШаблоныСоответствуютОснованиямПлатежа = ИнтеграцияСЯндексКассойСлужебныйВызовСервера.ПроверитьСоответствиеШаблоновОснованиямПлатежа();
	
	Возврат ШаблоныСоответствуютОснованиямПлатежа = Ложь;
	
КонецФункции

#КонецОбласти

#Область СтраницаПолученияНастроек

&НаКлиенте 
Процедура ПолучитьНастройкиИзСервиса()

	//Очистим параметры которые не доступны для заполнения вручную при схеме без договора
	Если Не СДоговором Тогда 
		БанковскийСчет = "";
		ИдентификаторМагазина = 0;
		ИдентификаторВитрины = 0;
		СтатьяДвиженияДенежныхСредствОплаты = "";
		СтатьяДвиженияДенежныхСредствВозвраты = "";
		СтатьяРасходов = "";
		АналитикаРасходов = "";
		Подразделение = "";
		Эквайер = "";
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"СтраницыПолученияНастроек",
		"ТекущаяСтраница",
		Элементы.СтраницаПолучениеНастроек);
			
	ПолучитьАктуальныеНастройкиИзСервиса();

КонецПроцедуры

&НаКлиенте
Процедура ПолучитьАктуальныеНастройкиИзСервиса()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Получение настроек по Яндекс.Кассе'");
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ПолучитьНастройкиЗавершение = Новый ОписаниеОповещения(
		"ПолучитьАктуальныеНастройкиИзСервисаЗавершение", ЭтотОбъект);
		
		
	ДлительнаяОперация = ПолучитьАктуальныеНастройкиИзСервисаВФоне(УникальныйИдентификатор);

	ИдентификаторЗаданияПолученияНастроек = ДлительнаяОперация.ИдентификаторЗадания;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ПолучитьНастройкиЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьАктуальныеНастройкиИзСервисаВФоне(УникальныйИдентификатор) 
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение настроек по Яндекс.Кассе'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("ИнтеграцияСЯндексКассойСлужебныйВызовСервера.ПолучитьНастройкиИзСервиса", 
		Неопределено, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте 
Процедура ПолучитьАктуальныеНастройкиИзСервисаЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Отказ = Ложь;
	
	Если Результат = Неопределено Тогда  // отменено пользователем
		Отказ = Истина;
	КонецЕсли;
	
	Если Результат.Свойство("Сообщения") Тогда 
		Для Каждого Сообщение из Результат.Сообщения Цикл 
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
	Если Не Отказ И Результат.Статус = "Выполнено" Тогда
		
		Если ЗначениеЗаполнено(Результат.АдресРезультата) 
			И ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
			
			Настройки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
			Если ТипЗнч(Настройки) = Тип("Структура") 
				И Настройки.Количество() Тогда 
				
				Настройки.Свойство("ИдентификаторМагазина", ИдентификаторМагазина);
				Настройки.Свойство("ИдентификаторВитрины", ИдентификаторВитрины);
				Отказ = Настройки.ЕстьОшибки;
				
			Иначе
				Отказ = Истина;
			КонецЕсли;
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ТекстСообщения = Результат.ПодробноеПредставлениеОшибки;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"СтраницыПолученияНастроек",
			"ТекущаяСтраница",
			Элементы.СтраницаОшибкаПолученияНастроек);
	Иначе
		СменитьСтраницуШаги(Элементы.СтраницаФинал);
		СменитьСтраницуКомандНавигации(Элементы.Готово);
		СменитьВидимостьПодменюЕще(ЭтотОбъект, Ложь);
	КонецЕсли;
	
	ИдентификаторЗаданияПолученияНастроек = Неопределено;
	
КонецПроцедуры 


#КонецОбласти


#Область СтраницаФинал 

&НаКлиенте 
Процедура ПриОткрытииСтраницыФинал(Отказ)
	
	ПриОткрытииСтраницыФиналНаСервере(Отказ);
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ГруппаСозданыШаблоныПисем",
		"Видимость",
		СозданныеШаблоныСообщений.Количество());
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"СтраницыФинала",
		"ТекущаяСтраница",
		?(РежимСоздания,
		Элементы.СтраницаУспешноеПодключение,
		Элементы.СтраницаУспешноеСохранениеИзменений));
		
	Оповестить("Запись_НастройкиЯндексКассы", , НастройкаЯндексКассыСсылка);
	ОповеститьОбИзменении(НастройкаЯндексКассыСсылка);
		
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииСтраницыФиналНаСервере(Отказ)
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	// Настройка Яндекс.Кассы
	СоздатьЗаписатьНастройкуЯндексКассы(Отказ);
		
	// Шаблоны сообщений
	Если ИспользоватьШаблоныСообщений() и СоздатьШаблоныАвтоматически Тогда 
		ПроверитьИВключитьФункциональныеОпцииРаботыСПочтовымиСообщениями();
		ПроверитьИВключитьФункциональныеОпцииШаблоновСообщений();
		
		ПредопределенныеШаблоныСообщений = ИнтеграцияСЯндексКассойСлужебныйВызовСервера.СоздатьПредопределенныеШаблоныСообщений(Отказ);
		СозданныеШаблоныСообщений.ЗагрузитьЗначения(ПредопределенныеШаблоныСообщений);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаписатьНастройкуЯндексКассы(Отказ)
	
	Если РежимСоздания Тогда 
		НастройкиОбъект = Справочники.НастройкиЯндексКассы.СоздатьЭлемент();
	Иначе
		НастройкиОбъект = Объект.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	СписокРеквизитов = "СДоговором, Организация, БанковскийСчет, 
                        |ИдентификаторМагазина, ИдентификаторВитрины, Недействительна, 
                        |СтатьяДвиженияДенежныхСредствОплаты, СтатьяДвиженияДенежныхСредствВозвраты, 
                        |СтатьяРасходов, АналитикаРасходов, Подразделение, Эквайер, ОтправкаЧековЧерезЯндекс";
	
	НастройкиОбъект.Наименование = Организация;
	
	ЗаполнитьЗначенияСвойств(НастройкиОбъект, ЭтотОбъект, СписокРеквизитов);
	
	НачатьТранзакцию();
	Попытка
		НастройкиОбъект.Записать();
		ЗафиксироватьТранзакцию();
	Исключение	
		ОтменитьТранзакцию();
		Отказ = Истина;
		ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ОбработатьОшибку(НСтр("ru = 'Запись настройки по Яндекс Кассе'"),
			ОписаниеОшибки(), НСтр("ru = 'Возникла ошибка при записи настройки по Яндекс.Кассе'"), 6);
	КонецПопытки;
	
	НастройкаЯндексКассыСсылка = НастройкиОбъект.Ссылка;
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьИВключитьФункциональныеОпцииРаботыСПочтовымиСообщениями()
	
	ФОИспользоватьПочтовыйКлиент = ПолучитьФункциональнуюОпцию("ИспользоватьПочтовыйКлиент");
	Если Не ФОИспользоватьПочтовыйКлиент Тогда 
		Константы.ИспользоватьПочтовыйКлиент.Установить(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьИВключитьФункциональныеОпцииШаблоновСообщений()
	
	ФОИспользоватьШаблоныСообщений = ПолучитьФункциональнуюОпцию("ИспользоватьШаблоныСообщений");
	Если Не ФОИспользоватьШаблоныСообщений Тогда 
		Константы.ИспользоватьШаблоныСообщений.Установить(Истина);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область Навигация

&НаКлиенте
Процедура СменитьСтраницуШаги(Знач НоваяСтраница)
	
	Элементы.КомандыНавигации.Доступность = Истина;
	
	КомандыСВозвратом = Элементы.НазадДалееОтмена;
	КомандыБезВозврата = Элементы.ДалееОтмена;
	
	Если НоваяСтраница = Элементы.СтраницаНастройкиУчета Тогда 
		
		ПриОткрытииСтраницыНастройкиУчета();
		
	ИначеЕсли НоваяСтраница = Элементы.СтраницаШаблоныСообщений Тогда 
		
		ПриОткрытииСтраницыШаблоныСообщений();
		
	ИначеЕсли НоваяСтраница = Элементы.СтраницаКарточкаНастройки Тогда 
		
		ПриОткрытииСтраницыКарточкаНастройки(ХронологияПереключенияСтраниц.Количество());
		
	ИначеЕсли НоваяСтраница = Элементы.СтраницаФинал Тогда 
		
		Отказ = Ложь;
		ПриОткрытииСтраницыФинал(Отказ);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ХронологияПереключенияСтраниц.Количество() Тогда
		СменитьСтраницуКомандНавигации(КомандыСВозвратом)
	Иначе
		СменитьСтраницуКомандНавигации(КомандыБезВозврата)
	КонецЕсли;
	
	Элементы.Шаги.ТекущаяСтраница = НоваяСтраница;
	
	ИнтеграцияСЯндексКассойКлиентПереопределяемый.ПриСмененСтраницыФормыНастройкиЯндексКассы(ЭтотОбъект, НоваяСтраница.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СменитьСтраницуКомандНавигации(НоваяСтраница)
	
	Элементы.КомандыНавигации.ТекущаяСтраница = НоваяСтраница;
	
	Если НоваяСтраница = Элементы.ДалееОтмена Тогда
		Элементы.ДалееПервая.КнопкаПоУмолчанию = Истина;
		Элементы.ДалееПервая.АктивизироватьПоУмолчанию = Истина;
		ТекущийЭлемент = Элементы.ДалееПервая;
	ИначеЕсли НоваяСтраница = Элементы.НазадДалееОтмена Тогда
		Элементы.ДалееВторая.КнопкаПоУмолчанию = Истина;
		Элементы.ДалееВторая.АктивизироватьПоУмолчанию = Истина;
		ТекущийЭлемент = Элементы.ДалееВторая;
	ИначеЕсли НоваяСтраница = Элементы.НазадГотово Тогда
		Элементы.ГотовоПервая.КнопкаПоУмолчанию = Истина;
	ИначеЕсли НоваяСтраница = Элементы.Готово Тогда
		Элементы.ГотовоВторая.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяНаПредыдущуюСтраницу()
	
	ПредыдущийШаг = ХронологияПереключенияСтраниц[ХронологияПереключенияСтраниц.ВГраница()];
	ХронологияПереключенияСтраниц.Удалить(ХронологияПереключенияСтраниц.ВГраница());
	СменитьСтраницуШаги(ПредыдущийШаг);

КонецПроцедуры

#КонецОбласти

#Область Подвал

&НаКлиентеНаСервереБезКонтекста
Процедура СменитьВидимостьПодменюЕще(Форма, Видимость)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы,
		"ПодменюЕще",
		"Видимость",
		Видимость);
		
КонецПроцедуры

#КонецОбласти

#Область РаботаСФоновымиЗаданиями

&НаКлиенте
Процедура ОтменитьАктивныеФоновыеОперации()
	
	Если Не ИдентификаторЗаданияПолученияНастроек = Неопределено Тогда 
		
		ОтменитьВыполнениеЗадания(ИдентификаторЗаданияПолученияНастроек);
		ИдентификаторЗаданияПолученияНастроек = Неопределено;

	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(ИдентификаторЗадания)
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

