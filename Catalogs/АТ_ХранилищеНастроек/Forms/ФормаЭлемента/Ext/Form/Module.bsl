#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ОсновнаяСтруктура = ДокОбъект.Хранилище.Получить();
	
	Если ОсновнаяСтруктура = Неопределено Тогда
		ОсновнаяСтруктура = Новый Структура;
	КонецЕсли;
	
	N = 0;
	
	//Добавление основной группы элементов на форму
	ЭлементОсновнаяГруппа = Элементы.Добавить("ГруппаРодитель", Тип("ГруппаФормы"));
	ЭлементОсновнаяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементОсновнаяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ЭлементОсновнаяГруппа.Заголовок = "Конфигуратор элемента справочника";
	
	ДобавитьРеквизитФормы("НаименованиеЭлементаНастроек", ДокОбъект.Наименование, Тип("Строка"), ЭлементОсновнаяГруппа);
	
	Для Каждого Строка Из ОсновнаяСтруктура Цикл
		НаименованиеПараметра = Строка.Ключ;
		ТипПараметра = ПолучитьТипПараметра(Строка.Значение);
		N = N + 1;
		
		//Добавление группы элементов для параметра
		ГруппаПараметра = Элементы.Добавить("ГруппаПараметра" + N, Тип("ГруппаФормы"), Элементы.ГруппаРодитель);
		ГруппаПараметра.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаПараметра.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаПараметра.Заголовок = "Параметр " + N;
		
		ДобавитьРеквизитФормы("Ключ", НаименованиеПараметра, Тип("Строка"), Элементы["ГруппаПараметра" + N], N);
		
		Если ТипПараметра = Тип("Булево") Тогда
			ДобавитьРеквизитФормы("Значение", Строка.Значение, ТипПараметра, Элементы["ГруппаПараметра" + N], N);
		ИначеЕсли ТипПараметра = Тип("Строка") Тогда
			ДобавитьРеквизитФормы("Значение", Строка.Значение, ТипПараметра, Элементы["ГруппаПараметра" + N], N);
		ИначеЕсли ТипПараметра = Тип("Дата") Тогда
			ДобавитьРеквизитФормы("Значение", Строка.Значение, ТипПараметра, Элементы["ГруппаПараметра" + N], N);
		ИначеЕсли ТипПараметра = Тип("Число") Тогда
			ДобавитьРеквизитФормы("Значение", Строка.Значение, ТипПараметра, Элементы["ГруппаПараметра" + N], N);
		ИначеЕсли ТипПараметра = Тип("ТаблицаЗначений") Тогда
			ДобавитьРеквизитыФормыДляТаблицыЗначений(Строка.Значение, Элементы["ГруппаПараметра" + N], N)
		ИначеЕсли ТипПараметра = Тип("Структура") Тогда
			ДобавитьРеквизитыФормыДляСтруктуры("Значение", Строка.Значение, Элементы["ГруппаПараметра" + N], N);
		ИначеЕсли ТипПараметра = Тип("Соответствие") Тогда
			ДобавитьРеквизитыФормыДляСоответствия("Значение", Строка.Значение, Элементы["ГруппаПараметра" + N], N);
		ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипПараметра) Тогда
			ДобавитьРеквизитФормы("Значение", Строка.Значение, ТипПараметра, Элементы["ГруппаПараметра" + N], N, Истина);
		ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипПараметра) Тогда
			ДобавитьРеквизитФормы("Значение", Строка.Значение, ТипПараметра, Элементы["ГруппаПараметра" + N], N, Истина);
		ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(ТипПараметра) Тогда
			ДобавитьРеквизитФормы("Значение", Строка.Значение, ТипПараметра, Элементы["ГруппаПараметра" + N], N, Истина);
		КонецЕсли;
		
		МаксимальныйИндексПараметра = N;
		
	КонецЦикла;
	
	ПолеНадписиДляПробела = Элементы.Добавить("ПолеНадписиДляПробела1", Тип("ДекорацияФормы"));
	ПолеНадписиДляПробела.Вид = ВидДекорацииФормы.Надпись;
	
	//Добавление группы кнопок на форму
	ЭлементГруппаКнопок = Элементы.Добавить("ГруппаКнопок", Тип("ГруппаФормы"));
	ЭлементГруппаКнопок.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппаКнопок.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ЭлементГруппаКнопок.ОтображатьЗаголовок = Ложь;
	
	//Кнопка "Добавить параметр"
	КонструкторНовыйЭлемент = Элементы.Добавить("ДобавитьПараметр", Тип("КнопкаФормы"), ЭлементГруппаКнопок);
	КонструкторНовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КонструкторНовыйЭлемент.Заголовок = "Добавить параметр";
	//КонструкторНовыйЭлемент.Картинка = БиблиотекаКартинок.ЗначокПлюс;
	КонструкторНовыйЭлемент.Отображение = ОтображениеКнопки.КартинкаИТекст;
	КонструкторНовыйЭлемент.ИмяКоманды = "ДобавитьПараметр";
	
	ПолеНадписиДляПробела = Элементы.Добавить("ПолеНадписиДляПробела2", Тип("ДекорацияФормы"), ЭлементГруппаКнопок);
	ПолеНадписиДляПробела.Вид = ВидДекорацииФормы.Надпись;
	ПолеНадписиДляПробела.Ширина = 40;
	
	//Кнопка и поле "Удалить параметр
	ТипыРеквизита = Новый Массив;
	ТипыРеквизита.Добавить(Тип("Строка"));
	ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);
	РеквизитУдаляемыйЭлемент = Новый РеквизитФормы("УдаляемыйПараметр", ОписаниеТиповДляРеквизита);
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(РеквизитУдаляемыйЭлемент);
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	КонструкторВыпадающийСписок = Элементы.Добавить("УдаляемыйПараметр", Тип("ПолеФормы"), ЭлементГруппаКнопок);
	КонструкторВыпадающийСписок.Вид = ВидПоляФормы.ПолеВвода;
	КонструкторВыпадающийСписок.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КонструкторВыпадающийСписок.ПутьКДанным = "УдаляемыйПараметр";
	КонструкторВыпадающийСписок.РежимВыбораИзСписка = Истина;
	
	КонструкторУдалитьПараметр = Элементы.Добавить("УдалитьПараметр", Тип("КнопкаФормы"), ЭлементГруппаКнопок);
	КонструкторУдалитьПараметр.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КонструкторУдалитьПараметр.Заголовок = "Удалить параметр";
	//КонструкторУдалитьПараметр.Картинка = БиблиотекаКартинок.;
	КонструкторУдалитьПараметр.Отображение = ОтображениеКнопки.КартинкаИТекст;
	КонструкторУдалитьПараметр.ИмяКоманды = "УдалитьПараметр";
	
	ПолеНадписиДляПробела = Элементы.Добавить("ПолеНадписиДляПробела3", Тип("ДекорацияФормы"));
	ПолеНадписиДляПробела.Вид = ВидДекорацииФормы.Надпись;
	
	//Кнопка "Записать"
	НовыйЭлемент = Элементы.Добавить("Записать", Тип("КнопкаФормы"));
	НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	НовыйЭлемент.Заголовок = "Записать";
	НовыйЭлемент.ИмяКоманды = "ЗаписатьЭлемент";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	N = 1;
	Пока Истина Цикл
		Элемент = Элементы.Найти("Параметр" + N + "Ключ");
		Если Элемент = Неопределено Тогда
			Прервать;
		КонецЕсли;
		Элементы["УдаляемыйПараметр"].СписокВыбора.Добавить("Параметр" + N);
		N = N + 1;
	КонецЦикла;
	//Медленный алгоритм
	//Для Каждого Элемент Из Элементы Цикл
	//	Если Прав(Элемент.Имя, 4) = "Ключ" Тогда
	//		МассивИмени = РазложитьИмяВМассив(Элемент.Имя);
	//		Если МассивИмени.Количество() = 3 И МассивИмени[0] = "Параметр" И МассивИмени[2] = "Ключ" Тогда
	//			Элементы["УдаляемыйПараметр"].СписокВыбора.Добавить(МассивИмени[0] + "" + МассивИмени[1]);
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ЗаписатьЭлемент(Команда)
	Результат = ЗаписатьНаСервере();
	Если ЗначениеЗаполнено(Результат) Тогда
		ОповеститьОбИзменении(Результат);
		ЭтаФорма.Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗаписатьНаСервере(ВызовУдаления = Ложь)
	ПараметрыНастройки = Новый Структура;
	ЗаполнениеСтруктуры = Ложь;
	ИмяЭлементаСтруктуры = "";
	ПорядковыйНомерСтруктуры = 0;
	ЗаполнениеСоответствия = Ложь;
	ЗначениеКлючаСоответствия = Неопределено;
	
	Для Каждого Реквизит Из ЭтаФорма.ПолучитьРеквизиты() Цикл
		Если Реквизит.Имя = "Объект" Или Реквизит.Имя = "Наименование" 
		 Или Реквизит.Имя = "НаименованиеЭлементаНастроек" Или Реквизит.Имя = "УдаляемыйПараметр" 
		 Или Реквизит.Имя = "МаксимальныйИндексПараметра" Тогда
			Продолжить;
		КонецЕсли;
		
		//Обработка удаления параметра
		ДлинаУдаляемогоПараметра = СтрДлина(ЭтаФорма["УдаляемыйПараметр"]);
		Если ВызовУдаления И ДлинаУдаляемогоПараметра > 0 И ЭтаФорма["УдаляемыйПараметр"] = Лев(Реквизит.Имя, ДлинаУдаляемогоПараметра)
		 И СтрНайти("0123456789", Сред(Реквизит.Имя, ДлинаУдаляемогоПараметра + 1, 1)) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		МассивИмени = РазложитьИмяВМассив(Реквизит.Имя);
		Если Прав(Реквизит.Имя, 4) = "Ключ" И МассивИмени.Количество() = 3 Тогда
			Если ПроверитьИмяКлюча(ЭтаФорма[Реквизит.Имя]) Тогда
				ПараметрыНастройкиКлюч = ЭтаФорма[Реквизит.Имя];
			Иначе
				Возврат Справочники.АТ_ХранилищеНастроек.ПустаяСсылка();
			КонецЕсли;
		ИначеЕсли Прав(Реквизит.Имя, 8) = "Значение" И МассивИмени.Количество() = 3 Тогда
			Если Реквизит.ТипЗначения = Новый ОписаниеТипов("ТаблицаЗначений") Тогда
				ПараметрыНастройки.Вставить(ПараметрыНастройкиКлюч, ЭтаФорма[Реквизит.Имя].Выгрузить());
			Иначе
				ПараметрыНастройки.Вставить(ПараметрыНастройкиКлюч, ЭтаФорма[Реквизит.Имя]);
			КонецЕсли;
		ИначеЕсли МассивИмени.Количество() > 3 И МассивИмени[2] = "Структура" Тогда
			//Обработка структуры
			Если ПорядковыйНомерСтруктуры <> МассивИмени[1] Тогда
				НоваяСтруктура = Новый Структура;
				ПорядковыйНомерСтруктуры = МассивИмени[1];
			КонецЕсли;
			Если Прав(Реквизит.Имя, 4) = "Ключ" Тогда
				Если ПроверитьИмяКлюча(ЭтаФорма[Реквизит.Имя]) Тогда
					ИмяЭлементаСтруктуры = ЭтаФорма[Реквизит.Имя];
				Иначе
					Возврат Справочники.АТ_ХранилищеНастроек.ПустаяСсылка();
				КонецЕсли;
			ИначеЕсли Прав(Реквизит.Имя, 8) = "Значение" Тогда
				НоваяСтруктура.Вставить(ИмяЭлементаСтруктуры, ЭтаФорма[Реквизит.Имя]);
				ПараметрыНастройки.Вставить(ПараметрыНастройкиКлюч, НоваяСтруктура);
			КонецЕсли;
		ИначеЕсли МассивИмени.Количество() > 3 И МассивИмени[2] = "Соответствие" Тогда
			//Обработка соответствия
			Если ПорядковыйНомерСтруктуры <> МассивИмени[1] Тогда
				НовоеСоответствие = Новый Соответствие;
				ЗаполнениеСоответствия = Истина;
				ПорядковыйНомерСтруктуры = МассивИмени[1];
			КонецЕсли;
			Если Прав(Реквизит.Имя, 4) = "Ключ" Тогда
				ЗначениеКлючаСоответствия = ЭтаФорма[Реквизит.Имя];
			ИначеЕсли Прав(Реквизит.Имя, 8) = "Значение" Тогда
				НовоеСоответствие.Вставить(ЗначениеКлючаСоответствия, ЭтаФорма[Реквизит.Имя]);
				ПараметрыНастройки.Вставить(ПараметрыНастройкиКлюч, НовоеСоответствие);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//Запись элемента справочника
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Если Не ЗначениеЗаполнено(ДокОбъект.Ссылка) Тогда
		ДокОбъект = Справочники.АТ_ХранилищеНастроек.СоздатьЭлемент();
	КонецЕсли;
	ДокОбъект.Наименование = ЭтаФорма["НаименованиеЭлементаНастроек"];
	ДокОбъект.Хранилище = Новый ХранилищеЗначения(ПараметрыНастройки);
	ДокОбъект.Записать();
	
	Возврат ДокОбъект.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура УдалитьПараметр(Команда)
	Результат = ЗаписатьНаСервере(Истина);
	Если ЗначениеЗаполнено(Результат) Тогда
		ОповеститьОбИзменении(Результат);
		ЭтаФорма.Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПараметр(Команда)
	НоваяФорма = ОткрытьФорму("Справочник.АТ_ХранилищеНастроек.Форма.ФормаДобавления", , ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно, , ,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ДобавитьРеквизитФормы(ИмяЭлемента, Значение, ТипРеквизита, Группа, ПорядковыйНомер = "", ЗначениеКнопкиВыбора = Ложь)
	Если ИмяЭлемента = "Ключ" Или ИмяЭлемента = "Значение" Тогда
		ИмяЭлемента = "Параметр" + ПорядковыйНомер + ИмяЭлемента;
	КонецЕсли;
	
	//Добавление реквизита формы
	Если ТипЗнч(ТипРеквизита) = Тип("ОписаниеТипов") Тогда
		ОписаниеТиповДляРеквизита = ТипРеквизита;
	Иначе
		ТипыРеквизита = Новый Массив;
		ТипыРеквизита.Добавить(ТипРеквизита);
		ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);
	КонецЕсли;
	
	НовыйРеквизит = Новый РеквизитФормы(ИмяЭлемента, ОписаниеТиповДляРеквизита,, ИмяЭлемента, Истина);
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	//Добавление элемента формы и связка его с реквизитом формы
	НовыйЭлемент = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Группа);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	НовыйЭлемент.ПутьКДанным = ИмяЭлемента;
	Если ТипРеквизита <> Тип("Строка") И ТипРеквизита <> Тип("Булево") И ТипРеквизита <> Тип("Число") Тогда
		НовыйЭлемент.КнопкаВыбора = Истина;
		НовыйЭлемент.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВВыпадающемСпискеИВПолеВвода;
	КонецЕсли;
	
	ЭтаФорма[ИмяЭлемента] = Значение;
	
	Если ТипРеквизита = Тип("СправочникСсылка.АТ_ХранилищеНастроек") Тогда
		ЗначениеПредставления = Значение.Хранилище.Получить();
		ТипыРеквизита = Новый Массив;
		Если ТипЗнч(ЗначениеПредставления) = Тип("Строка") Или ТипЗнч(ЗначениеПредставления) = Тип("Булево")
			Или ТипЗнч(ЗначениеПредставления) = Тип("Число") Или ТипЗнч(ЗначениеПредставления) = Тип("Дата")
			Или Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеПредставления))
			//Шалим
			Или ПланыОбмена.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеПредставления))
			//-Шалим
			Или Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеПредставления)) Тогда
				ТипыРеквизита.Добавить(ТипЗнч(ЗначениеПредставления));
		ИначеЕсли ТипЗнч(ЗначениеПредставления) = Тип("Структура") Тогда
				ЗначениеПредставления = "Структура";
				ТипыРеквизита.Добавить(Тип("Строка"));
		ИначеЕсли ТипЗнч(ЗначениеПредставления) = Тип("Соответствие") Тогда
				ЗначениеПредставления = "Соответствие";
				ТипыРеквизита.Добавить(Тип("Строка"));
		ИначеЕсли ТипЗнч(ЗначениеПредставления) = Тип("ТаблицаЗначений") Тогда
				ЗначениеПредставления = "ТаблицаЗначений";
				ТипыРеквизита.Добавить(Тип("Строка"));
		КонецЕсли;
		
		//Добавление реквизита формы
		ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);
		ИмяЭлемента = ИмяЭлемента + "Представление";
		
		НовыйРеквизит = Новый РеквизитФормы(ИмяЭлемента, ОписаниеТиповДляРеквизита,, ИмяЭлемента, Истина);
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		//Добавление элемента формы и связка его с реквизитом формы
		НовыйЭлемент = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Группа);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
		НовыйЭлемент.ПутьКДанным = ИмяЭлемента;
		НовыйЭлемент.КнопкаВыбора = Ложь;
		НовыйЭлемент.Доступность = Ложь;
		
		ЭтаФорма[ИмяЭлемента] = ЗначениеПредставления;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыФормыДляСтруктуры(ИмяЭлемента, Значение, Группа, ПорядковыйНомер)
	
	Если ИмяЭлемента = "Ключ" Или ИмяЭлемента = "Значение" Тогда
		ИмяЭлемента = "Параметр" + ПорядковыйНомер + ИмяЭлемента;
	КонецЕсли;
	
	//Добавление группы для описания структуры
	ГруппаСтруктуры = Элементы.Добавить("ОписаниеСтруктуры" + ПорядковыйНомер, Тип("ГруппаФормы"), Группа);
	ГруппаСтруктуры.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаСтруктуры.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаСтруктуры.Заголовок = "Описание структуры";
	ГруппаСтруктуры.ОтображатьЗаголовок = Ложь;
	
	ПорядковыйНомерЭлемента = 0;
	
	Для Каждого ЭлементСтруктуры Из Значение Цикл
		
		ПорядковыйНомерЭлемента = ПорядковыйНомерЭлемента + 1;
		ТипПараметра = ПолучитьТипПараметра(ЭлементСтруктуры.Значение);
		
		ИмяЭлемента = "Параметр" + ПорядковыйНомер + "Структура" + ПорядковыйНомерЭлемента + "Ключ";
		
		//Добавление реквизита имени элемента структуры
		ТипыРеквизита = Новый Массив;
		ТипыРеквизита.Добавить(Тип("Строка"));
		ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);
		НовыйРеквизит = Новый РеквизитФормы(ИмяЭлемента, ОписаниеТиповДляРеквизита,, ИмяЭлемента, Истина);
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		//Добавление элемента формы для имени элемента структуры и связка его с реквизитом
		НовыйЭлемент = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Элементы["ОписаниеСтруктуры" + ПорядковыйНомер]);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
		НовыйЭлемент.ПутьКДанным = ИмяЭлемента;
		
		ЭтаФорма[ИмяЭлемента] = ЭлементСтруктуры.Ключ;
		
		ИмяЭлемента = "Параметр" + ПорядковыйНомер + "Структура" + ПорядковыйНомерЭлемента + "Значение";
		
		//Добавление реквизита значения структуры
		ТипыРеквизита = Новый Массив;
		ТипыРеквизита.Добавить(ТипПараметра);
		ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);
		НовыйРеквизит = Новый РеквизитФормы(ИмяЭлемента, ОписаниеТиповДляРеквизита,, ИмяЭлемента, Истина);
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		//Добавление элемента формы и связка его с реквизитом
		НовыйЭлемент = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Элементы["ОписаниеСтруктуры" + ПорядковыйНомер]);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
		НовыйЭлемент.ПутьКДанным = ИмяЭлемента;
		Если ТипЗнч(ЭлементСтруктуры.Значение) <> Тип("Строка") И ТипЗнч(ЭлементСтруктуры.Значение) <> Тип("Булево") 
			И ТипЗнч(ЭлементСтруктуры.Значение) <> Тип("Число") Тогда
			НовыйЭлемент.КнопкаВыбора = Истина;
			НовыйЭлемент.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВВыпадающемСпискеИВПолеВвода;
		КонецЕсли;
		
		ЭтаФорма[ИмяЭлемента] = ЭлементСтруктуры.Значение;
		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыФормыДляСоответствия(ИмяЭлемента, Значение, Группа, ПорядковыйНомер)
	
	Если ИмяЭлемента = "Ключ" Или ИмяЭлемента = "Значение" Тогда
		ИмяЭлемента = "Параметр" + ПорядковыйНомер + ИмяЭлемента;
	КонецЕсли;
	
	//Добавление группы для описания соответствия
	ГруппаСоответствия = Элементы.Добавить("ОписаниеСоответствия" + ПорядковыйНомер, Тип("ГруппаФормы"), Группа);
	ГруппаСоответствия.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаСоответствия.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаСоответствия.Заголовок = "Описание соответствия";
	ГруппаСоответствия.ОтображатьЗаголовок = Ложь;
	
	ПорядковыйНомерЭлемента = 0;
	
	Для Каждого ЭлементСоответствия Из Значение Цикл
		
		ПорядковыйНомерЭлемента = ПорядковыйНомерЭлемента + 1;
		ИмяЭлемента = "Параметр" + ПорядковыйНомер + "Соответствие" + ПорядковыйНомерЭлемента + "Ключ";
		ТипКлючаЭлементСоответствия = ПолучитьТипПараметра(ЭлементСоответствия.Ключ);
		ТипЗначенияЭлементСоответствия = ПолучитьТипПараметра(ЭлементСоответствия.Значение);
		
		//Добавление реквизита для ключа элемента соответствия
		ТипыРеквизита = Новый Массив;
		ТипыРеквизита.Добавить(ТипКлючаЭлементСоответствия);
		ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);
		НовыйРеквизит = Новый РеквизитФормы(ИмяЭлемента, ОписаниеТиповДляРеквизита,, ИмяЭлемента, Истина);
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		//Добавление элемента формы для наименования ключа элемента соответствия и связка его с реквизитом
		НовыйЭлемент = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Элементы["ОписаниеСоответствия" + ПорядковыйНомер]);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
		НовыйЭлемент.ПутьКДанным = ИмяЭлемента;
		Если ТипЗнч(ЭлементСоответствия.Ключ) <> Тип("Строка") И ТипЗнч(ЭлементСоответствия.Ключ) <> Тип("Булево") 
			И ТипЗнч(ЭлементСоответствия.Ключ) <> Тип("Число") Тогда
			НовыйЭлемент.КнопкаВыбора = Истина;
			НовыйЭлемент.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВВыпадающемСпискеИВПолеВвода;
		КонецЕсли;
		
		ЭтаФорма[ИмяЭлемента] = ЭлементСоответствия.Ключ;
		
		ИмяЭлемента = "Параметр" + ПорядковыйНомер + "Соответствие" + ПорядковыйНомерЭлемента + "Значение";
		
		//Добавление реквизита значения соответствия
		ТипыРеквизита = Новый Массив;
		ТипыРеквизита.Добавить(ТипЗначенияЭлементСоответствия);
		ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);
		НовыйРеквизит = Новый РеквизитФормы(ИмяЭлемента, ОписаниеТиповДляРеквизита,, ИмяЭлемента, Истина);
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		//Добавление элемента формы и связка его с реквизитом
		НовыйЭлемент = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Элементы["ОписаниеСоответствия" + ПорядковыйНомер]);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
		НовыйЭлемент.ПутьКДанным = ИмяЭлемента;
		Если ТипЗнч(ЭлементСоответствия.Значение) <> Тип("Строка") И ТипЗнч(ЭлементСоответствия.Значение) <> Тип("Булево") 
			И ТипЗнч(ЭлементСоответствия.Значение) <> Тип("Число") Тогда
			НовыйЭлемент.КнопкаВыбора = Истина;
			НовыйЭлемент.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВВыпадающемСпискеИВПолеВвода;
		КонецЕсли;
		
		ЭтаФорма[ИмяЭлемента] = ЭлементСоответствия.Значение;
		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыФормыДляТаблицыЗначений(Значение, Группа, ПорядковыйНомер)
	
	НаименованиеТаблицы = "Параметр" + ПорядковыйНомер + "Значение";
	
	//Добавления группы для таблицы
	ГруппаСтруктуры = Элементы.Добавить("ОписаниеТаблицы" + ПорядковыйНомер, Тип("ГруппаФормы"), Группа);
	ГруппаСтруктуры.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаСтруктуры.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаСтруктуры.Заголовок = "Описание таблицы";
	ГруппаСтруктуры.ОтображатьЗаголовок = Ложь;
	
	//Добавление реквизита таблицы значений
	ТипыРеквизита = Новый Массив;
	ТипыРеквизита.Добавить(Тип("ТаблицаЗначений"));
	ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);
	НовыйРеквизит = Новый РеквизитФормы(НаименованиеТаблицы, ОписаниеТиповДляРеквизита,, НаименованиеТаблицы, Истина);
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(НовыйРеквизит);
	
	Для Каждого Колонка Из Значение.Колонки Цикл
		ТипыЗначений = Новый Массив;
		Для Каждого ТипКолонки Из Колонка.ТипЗначения.Типы() Цикл
			Если Колонка.Имя = "SourceLineNumber" Тогда
				Продолжить;
			КонецЕсли;
			Если ТипКолонки <> Тип("Null") Тогда
				ТипыЗначений.Добавить(ТипКолонки);
			КонецЕсли;
		КонецЦикла;
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Новый ОписаниеТипов(ТипыЗначений), НаименованиеТаблицы));
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	ЭлементТаблица = Элементы.Добавить(НаименованиеТаблицы, Тип("ТаблицаФормы"), Элементы["ОписаниеТаблицы" + ПорядковыйНомер]);
	ЭлементТаблица.ПутьКДанным = НаименованиеТаблицы;
	ЭлементТаблица.Отображение = ОтображениеТаблицы.Список;
	ЭлементТаблица.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Верх;
	ЭлементТаблица.ИзменятьСоставСтрок = Истина;
	
	Для Каждого Колонка Из Значение.Колонки Цикл
		Если Колонка.Имя = "SourceLineNumber" Тогда
			Продолжить;
		КонецЕсли;
		НовыйЭлемент = Элементы.Добавить(Колонка.Имя+ПорядковыйНомер, Тип("ПолеФормы"), ЭлементТаблица);
		НовыйЭлемент.ПутьКДанным = НаименованиеТаблицы + "." + Колонка.Имя;
		Если Колонка.Имя = "Выгружать" Тогда
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		Иначе
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.КнопкаВыбора = Истина;
			//НовыйЭлемент.КнопкаОчистки = Ложь;
			//НовыйЭлемент.РедактированиеТекста = Ложь;
			//НовыйЭлемент.КнопкаОткрытия = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ЭтаФорма.ЗначениеВРеквизитФормы(Значение, НаименованиеТаблицы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипПараметра(Параметр)
	Возврат ТипЗнч(Параметр);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РазложитьИмяВМассив(Строка)
	НовыйМассив = Новый Массив;
	СимволНовогоЭлемента = 1;
	НомерСимвола = 1;
	
	Если СтрНайти("0123456789", Сред(Строка, 1, 1)) = 0 Тогда
		Число = Ложь;
	Иначе
		Число = Истина;
	КонецЕсли;
	
	Пока НомерСимвола <= СтрДлина(Строка) Цикл
		Символ = Сред(Строка, НомерСимвола, 1); 
		Если Число И СтрНайти("0123456789", Символ) = 0 Тогда
			НовыйМассив.Добавить(Сред(Строка, СимволНовогоЭлемента, НомерСимвола - СимволНовогоЭлемента));
			СимволНовогоЭлемента = НомерСимвола;
			Число = Ложь;
		ИначеЕсли Не Число И Не СтрНайти("0123456789", Символ) = 0 Тогда
			НовыйМассив.Добавить(Сред(Строка, СимволНовогоЭлемента, НомерСимвола - СимволНовогоЭлемента));
			СимволНовогоЭлемента = НомерСимвола;
			Число = Истина;
		КонецЕсли;
		НомерСимвола = НомерСимвола + 1;
	КонецЦикла;
	НовыйМассив.Добавить(Сред(Строка, СимволНовогоЭлемента, НомерСимвола - СимволНовогоЭлемента));
	
	Возврат НовыйМассив;
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ПеренестиВыбор" Тогда
		ОбработкаОповещенияНаСервере(Параметр);
	Иначе
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияНаСервере(Параметр)
	N = МаксимальныйИндексПараметра + 1;
	
	//Добавление группы элементов для параметра
	ГруппаПараметра = Элементы.Добавить("ГруппаПараметра" + N, Тип("ГруппаФормы"), Элементы.ГруппаРодитель);
	ГруппаПараметра.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаПараметра.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаПараметра.Заголовок = "Параметр " + N;
	
	ДобавитьРеквизитФормы("Ключ", "", Тип("Строка"), Элементы["ГруппаПараметра" + N], N);

	Если Параметр.Тип = "Строка" Тогда
		ДобавитьРеквизитФормы("Значение", "", Тип("Строка"), Элементы["ГруппаПараметра" + N], N);
	ИначеЕсли Параметр.Тип = "Число" Тогда
		ДобавитьРеквизитФормы("Значение", 0, Тип("Число"), Элементы["ГруппаПараметра" + N], N);
	ИначеЕсли Параметр.Тип = "Дата" Тогда
		ДобавитьРеквизитФормы("Значение", Дата(1, 1, 1), Тип("Дата"), Элементы["ГруппаПараметра" + N], N);
	ИначеЕсли Параметр.Тип = "Булево" Тогда
		ДобавитьРеквизитФормы("Значение", Ложь, Тип("Булево"), Элементы["ГруппаПараметра" + N], N);
	ИначеЕсли Параметр.Тип = "Перечисление" Тогда
		ДобавитьРеквизитФормы("Значение", , Перечисления.ТипВсеСсылки(), Элементы["ГруппаПараметра" + N], N)
	ИначеЕсли Параметр.Тип = "Справочник" Тогда
		ДобавитьРеквизитФормы("Значение", Ложь, Справочники.ТипВсеСсылки(), Элементы["ГруппаПараметра" + N], N)
	ИначеЕсли Параметр.Тип = "ПланВидовХарактеристик" Тогда
		ДобавитьРеквизитФормы("Значение", Ложь, ПланыВидовХарактеристик.ТипВсеСсылки(), Элементы["ГруппаПараметра" + N], N)
	ИначеЕсли Параметр.Тип = "Структура" Тогда
		НоваяСтруктура = Новый Структура;
		Для Каждого Строка Из Параметр.ОписаниеТипа.Получить() Цикл
			НоваяСтруктура.Вставить(Строка.Ключ, Строка.Тип.ПривестиЗначение());
		КонецЦикла;
		ДобавитьРеквизитыФормыДляСтруктуры("Значение", НоваяСтруктура, Элементы["ГруппаПараметра" + N], N);
	ИначеЕсли Параметр.Тип = "Соответствие" Тогда
		НовоеСоответствие = Новый Соответствие;
		Для Каждого Строка Из Параметр.ОписаниеТипа.Получить() Цикл
			НовоеСоответствие.Вставить(Строка.ТипКлюча.ПривестиЗначение(), Строка.ТипЗначения.ПривестиЗначение());
		КонецЦикла;
		ДобавитьРеквизитыФормыДляСоответствия("Значение", НовоеСоответствие, Элементы["ГруппаПараметра" + N], N);
	ИначеЕсли Параметр.Тип = "ТаблицаЗначений" Тогда
		НоваяТаблицаЗначений = Новый ТаблицаЗначений;
		Для Каждого Строка Из Параметр.ОписаниеТипа.Получить() Цикл
			НоваяТаблицаЗначений.Колонки.Добавить(Строка.ИмяКолонки, Строка.Тип);
		КонецЦикла;
		ДобавитьРеквизитыФормыДляТаблицыЗначений(НоваяТаблицаЗначений, Элементы["ГруппаПараметра" + N], N)
	//Шалим
	ИначеЕсли Параметр.Тип = "ПланОбмена" Тогда
		ДобавитьРеквизитФормы("Значение", Ложь, ПланыОбмена.ТипВсеСсылки(), Элементы["ГруппаПараметра" + N], N)
	//-Шалим
	КонецЕсли;
	
	МаксимальныйИндексПараметра = N;
	
	Элементы["УдаляемыйПараметр"].СписокВыбора.Добавить("Параметр" + N);

КонецПроцедуры

&НаСервере
Функция ПроверитьИмяКлюча(Ключ)
	ОшибкаПервогоСимвола = Ложь;
	Ошибка = Ложь;
	НомерСимвола = 1;
	
	Пока НомерСимвола <= СтрДлина(Ключ) Цикл
		Символ = Сред(Ключ, НомерСимвола, 1);
		Если НомерСимвола = 1 И СтрНайти("0123456789", Символ) <> 0 Тогда
			ОшибкаПервогоСимвола = Истина;
		КонецЕсли;
		Если СтрНайти("_0123456789ЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮйцукенгшщзхъфывапролджэячсмитьбюQWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm", Символ) = 0 Тогда
			Ошибка = Истина;
		КонецЕсли;
		НомерСимвола = НомерСимвола + 1;
	КонецЦикла;
	
	Если ОшибкаПервогоСимвола Тогда
		ТекстСообщения = "Имя ключа начинается с недопустимого символа: ";
	ИначеЕсли Ошибка Тогда
		ТекстСообщения = "Ключ содержит недопустимые символы: ";
	КонецЕсли;
	
	Если ОшибкаПервогоСимвола ИЛИ Ошибка Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ключ имеет неверное имя: " + Ключ;
		Сообщение.Сообщить();
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции
#КонецОбласти









