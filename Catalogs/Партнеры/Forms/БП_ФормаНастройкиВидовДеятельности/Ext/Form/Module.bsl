
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("СсылкаНаОбъект",СсылкаНаОбъект);
	ЗаполнитьРеквизитыИЗДанныхОбъекта();
	УстановитьВидимость();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыИЗДанныхОбъекта()
	ТаблицаВидыДеятельности =  СсылкаНаОбъект.БП_ВидыДеятельности.Выгрузить(Новый Структура("Использование",Истина));
	ТаблицаВидыДеятельности.Свернуть("ВидДеятельности");
	
	ЗаполнитьСтраницуАТП();
	ЗаполнитьСтраницуМагазин();
	ЗаполнитьСтраницуСТО();
	Для каждого текСтрока Из ТаблицаВидыДеятельности Цикл
		Если НЕ ЗначениеЗаполнено(текСтрока.ВидДеятельности) Тогда
			Продолжить;
		КонецЕсли;
		нвСтрока = ВидыДеятельности.Добавить();
		нвСтрока.ВидДеятельности = текСтрока.ВидДеятельности;
		Элементы.ВидДеятельности.СписокВыбора.Добавить(текСтрока.ВидДеятельности);
		Если НЕ ЗначениеЗаполнено(ВидДеятельности) Тогда
			ВидДеятельности = текСтрока.ВидДеятельности;
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура ВывестиРеквизитыТЧНаФорму(Таблица,Префикс,ГруппаФлажков,ТаблицаКонтроля,СЧ = Неопределено)
	
	ДобавляемыеРеквизиты = Новый Массив;
	Если СЧ = Неопределено Тогда
		СЧ = 0;
	КонецЕсли;
	Для каждого текСтрока Из Таблица Цикл
		НовыйРеквизит = Новый РеквизитФормы(Префикс+СЧ,Новый ОписаниеТипов("Булево"),,текСтрока.Ссылка,Истина); 			
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		ДобавитьРеквизитВТЧ(ТаблицаКонтроля,Префикс+СЧ,текСтрока.Ссылка);
		СЧ = СЧ+1;
	КонецЦикла;	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для каждого текСтрока Из ДобавляемыеРеквизиты Цикл
		элФлажок = Элементы.Добавить("Флажок"+текСтрока.Имя,Тип("ПолеФормы"),ГруппаФлажков);
		элФлажок.Вид = ВидПоляФормы.ПолеФлажка;
		элФлажок.ПутьКДанным = текСтрока.Имя;
	КонецЦикла;
	
	Для каждого текСтрока Из Таблица Цикл
		Если текСтрока.Использование Тогда
			СтрокиРеквизитов = ТаблицаКонтроля.НайтиСтроки(Новый Структура("Ссылка",текСтрока.Ссылка));
			Для каждого текСтр Из СтрокиРеквизитов Цикл
				ЭтаФорма[текСтр.ИмяРеквизита] = Истина;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры


&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.СтраницаАТП.Видимость = Ложь;
	Элементы.СтраницаМагазин.Видимость = Ложь;
	Элементы.СтраницаСТО.Видимость = Ложь;
//	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;

	Если ВидыДеятельности.НайтиСтроки(Новый Структура("ВидДеятельности",Перечисления.БП_ВидыДеятельности.АТП)).Количество() > 0 Тогда
		Элементы.СтраницаАТП.Видимость = Истина;
	КонецЕсли;
	Если ВидыДеятельности.НайтиСтроки(Новый Структура("ВидДеятельности",Перечисления.БП_ВидыДеятельности.Магазин)).Количество() > 0 Тогда
		Элементы.СтраницаМагазин.Видимость = Истина;
	КонецЕсли;	
	Если ВидыДеятельности.НайтиСтроки(Новый Структура("ВидДеятельности",Перечисления.БП_ВидыДеятельности.СТО)).Количество() > 0 Тогда
		Элементы.СтраницаСТО.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОСоставеПарка()
	
	СведенияОСоставеПарка.Загрузить(СсылкаНаОбъект.БП_СведенияОСоставеПарка.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтраницуАТП()
	
	ЗаполнитьТипыТС(Перечисления.БП_ВидыДеятельности.АТП,"РеквизитАТПТипТС",Элементы.ГруппаАТПТипыТС,АТПТипыТС);
	ЗаполнитьСведенияОСоставеПарка();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАссортимент()
	
	Для каждого текСтрока Из СсылкаНаОбъект.БП_ВидыДеятельности Цикл
		Если текСтрока.Ассортимент = Перечисления.БП_Ассортимент.Грузовые И текСтрока.Использование И текСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.Магазин  Тогда
			МагазинГрузовые = Истина;
		ИначеЕсли текСтрока.Ассортимент = Перечисления.БП_Ассортимент.Легковые И текСтрока.Использование И текСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.Магазин  Тогда
			МагазинЛегковые = Истина;
		ИначеЕсли текСтрока.Ассортимент = Перечисления.БП_Ассортимент.Грузовые И текСтрока.Использование И текСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.СТО Тогда
			СТОГрузовые = Истина;
		ИначеЕсли текСтрока.Ассортимент = Перечисления.БП_Ассортимент.Легковые И текСтрока.Использование И текСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.СТО  Тогда
			СТОЛегковые = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтраны(лкВидДеятельности,Префикс,ГруппаФлажков,ТаблицаКонтроля)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БП_Страны.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ПартнерыБП_ВидыДеятельности.Использование, ЛОЖЬ) КАК Использование
	|ИЗ
	|	Справочник.БП_Страны КАК БП_Страны
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.БП_ВидыДеятельности КАК ПартнерыБП_ВидыДеятельности
	|		ПО (ПартнерыБП_ВидыДеятельности.Страна = БП_Страны.Ссылка)
	|			И (ПартнерыБП_ВидыДеятельности.ВидДеятельности = &ВидДеятельности)
	|			И (ПартнерыБП_ВидыДеятельности.Использование = ИСТИНА)
	|			И (ПартнерыБП_ВидыДеятельности.Ссылка = &Партнер)
	|ГДЕ
	|	НЕ БП_Страны.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	БП_Страны.Наименование";
	
	Запрос.УстановитьПараметр("ВидДеятельности", лкВидДеятельности);
	Запрос.УстановитьПараметр("Партнер", СсылкаНаОбъект);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРезультата = РезультатЗапроса.Выгрузить();
	ВывестиРеквизитыТЧНаФорму(ТаблицаРезультата,Префикс,ГруппаФлажков,ТаблицаКонтроля);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтраницуМагазин()
	
	ЗаполнитьТипыТС(Перечисления.БП_ВидыДеятельности.Магазин,"РеквизитМагазинТипТС",Элементы.МагазинТипыТС,МагазинТипыТС);	
	ЗаполнитьАссортимент();
	ЗаполнитьСтраны(Перечисления.БП_ВидыДеятельности.Магазин,"РеквизитМагазинСтрана",Элементы.МагазинСтраны,МагазинСтраны);
	ЗаполнитьТоварнуюМатрицу();
	БП_КоличествоТорговыхЗалов = СсылкаНаОбъект.БП_КоличествоТорговыхЗалов;
	//ДобавляемыеРеквизиты = Новый Массив;
	//СЧ = 0;
	//Выборка = РезультатЗапроса.Выбрать();
	//ТаблицаРезультата = РезультатЗапроса.Выгрузить();
	
	//Пока Выборка.Следующий() Цикл
	//	
	//	НовыйРеквизит = Новый РеквизитФормы("РеквизитАТПТипТС"+СЧ,НОвый ОписаниеТипов("Булево"),,Выборка.ТипТС,Истина); 			
	//	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
	//	ДобавитьРеквизитВТЧ(АТПТипыТС,"РеквизитАТПТипТС"+СЧ,Выборка.ТипТС);
	//	СЧ = СЧ+1;
	//	
	//КонецЦикла;
	//
	//ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	//
	//Для каждого текСтрока Из ДобавляемыеРеквизиты Цикл
	//	элФлажок = Элементы.Добавить("Флажок"+текСтрока.Имя,Тип("ПолеФормы"),ГруппаФлажков);
	//	элФлажок.Вид = ВидПоляФормы.ПолеФлажка;
	//	элФлажок.ПутьКДанным = текСтрока.Имя;
	//КонецЦикла;
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Если Выборка.Использование Тогда
	//		СтрокиРеквизитов = АТПТипыТС.НайтиСтроки(Новый Структура("Ссылка",Выборка.ТипТС));
	//		Для каждого текСтрока Из СтрокиРеквизитов Цикл
	//			ЭтаФорма[текСтрока.ИмяРеквизита] = Истина;
	//		КонецЦикла;
	//										 
	//	КонецЕсли;
	//КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтраницуСТО()
	
	ЗаполнитьТипыТС(Перечисления.БП_ВидыДеятельности.СТО,"РеквизитСТОТипТС",Элементы.СТОТипыТС,СТОТипыТС);	
	ЗаполнитьАссортимент();
	ЗаполнитьСтраны(Перечисления.БП_ВидыДеятельности.СТО,"РеквизитСТОСтрана",Элементы.СТОСтраны,СТОСтраны);
	ЗаполнитьВидыРабот();
	БП_КоличествоРемонтныхПостов = СсылкаНаОбъект.БП_КоличествоРемонтныхПостов;
	//ДобавляемыеРеквизиты = Новый Массив;
	//СЧ = 0;
	//Выборка = РезультатЗапроса.Выбрать();
	//ТаблицаРезультата = РезультатЗапроса.Выгрузить();
	
	//Пока Выборка.Следующий() Цикл
	//	
	//	НовыйРеквизит = Новый РеквизитФормы("РеквизитАТПТипТС"+СЧ,НОвый ОписаниеТипов("Булево"),,Выборка.ТипТС,Истина); 			
	//	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
	//	ДобавитьРеквизитВТЧ(АТПТипыТС,"РеквизитАТПТипТС"+СЧ,Выборка.ТипТС);
	//	СЧ = СЧ+1;
	//	
	//КонецЦикла;
	//
	//ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	//
	//Для каждого текСтрока Из ДобавляемыеРеквизиты Цикл
	//	элФлажок = Элементы.Добавить("Флажок"+текСтрока.Имя,Тип("ПолеФормы"),ГруппаФлажков);
	//	элФлажок.Вид = ВидПоляФормы.ПолеФлажка;
	//	элФлажок.ПутьКДанным = текСтрока.Имя;
	//КонецЦикла;
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Если Выборка.Использование Тогда
	//		СтрокиРеквизитов = АТПТипыТС.НайтиСтроки(Новый Структура("Ссылка",Выборка.ТипТС));
	//		Для каждого текСтрока Из СтрокиРеквизитов Цикл
	//			ЭтаФорма[текСтрока.ИмяРеквизита] = Истина;
	//		КонецЦикла;
	//										 
	//	КонецЕсли;
	//КонецЦикла;
	
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьВидыРабот()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БП_ВидыРабот.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ПартнерыБП_ВидыРабот.Использование, ЛОЖЬ) КАК Использование
	|ИЗ
	|	Справочник.БП_ВидыРабот КАК БП_ВидыРабот
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.БП_ВидыРабот КАК ПартнерыБП_ВидыРабот
	|		ПО (ПартнерыБП_ВидыРабот.ВидРабот = БП_ВидыРабот.Ссылка)
	|			И (ПартнерыБП_ВидыРабот.Использование = ИСТИНА)
	|			И (ПартнерыБП_ВидыРабот.Ссылка = &Партнер)
	|ГДЕ
	|	НЕ БП_ВидыРабот.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	БП_ВидыРабот.Наименование";
	
	Запрос.УстановитьПараметр("Партнер", СсылкаНаОбъект);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРезультата = РезультатЗапроса.Выгрузить();
	ТаблицаЛеваяКолонка = ТаблицаРезультата.СкопироватьКолонки();
	ТаблицаПраваяКолонка = ТаблицаРезультата.СкопироватьКолонки();
	СЧ = 0;
	Для каждого текСтрока Из ТаблицаРезультата Цикл
		Если СЧ = 0  Тогда
			нвСтрока = ТаблицаЛеваяКолонка.Добавить();
			ЗаполнитьЗначенияСвойств(нвСтрока,текСтрока);
			СЧ = 1;
		Иначе
			нвСтрока = ТаблицаПраваяКолонка.Добавить();
			ЗаполнитьЗначенияСвойств(нвСтрока,текСтрока);
			СЧ = 0;
		КонецЕсли;
	КонецЦикла;
	ВывестиРеквизитыТЧНаФорму(ТаблицаЛеваяКолонка,"СТОВидыРабот",Элементы.СТОВидыРаботЛК,СТОВидыРабот);
	ВывестиРеквизитыТЧНаФорму(ТаблицаПраваяКолонка,"СТОВидыРабот",Элементы.СТОВидыРаботПК,СТОВидыРабот,ТаблицаЛеваяКолонка.Количество());

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьТоварнуюМатрицу()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БП_ТоварнаяМатрица.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ПартнерыБП_ТоварнаяМатрица.Использование, ЛОЖЬ) КАК Использование
	|ИЗ
	|	Справочник.БП_ТоварнаяМатрица КАК БП_ТоварнаяМатрица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.БП_ТоварнаяМатрица КАК ПартнерыБП_ТоварнаяМатрица
	|		ПО (ПартнерыБП_ТоварнаяМатрица.Товар = БП_ТоварнаяМатрица.Ссылка)
	|			И (ПартнерыБП_ТоварнаяМатрица.Использование = ИСТИНА)
	|			И (ПартнерыБП_ТоварнаяМатрица.Ссылка = &Партнер)
	|ГДЕ
	|	НЕ БП_ТоварнаяМатрица.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	БП_ТоварнаяМатрица.Наименование";
	
	Запрос.УстановитьПараметр("Партнер", СсылкаНаОбъект);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРезультата = РезультатЗапроса.Выгрузить();
	ТаблицаЛеваяКолонка = ТаблицаРезультата.СкопироватьКолонки();
	ТаблицаПраваяКолонка = ТаблицаРезультата.СкопироватьКолонки();
	СЧ = 0;
	Для каждого текСтрока Из ТаблицаРезультата Цикл
		Если СЧ = 0  Тогда
			нвСтрока = ТаблицаЛеваяКолонка.Добавить();
			ЗаполнитьЗначенияСвойств(нвСтрока,текСтрока);
			СЧ = 1;
		Иначе
			нвСтрока = ТаблицаПраваяКолонка.Добавить();
			ЗаполнитьЗначенияСвойств(нвСтрока,текСтрока);
			СЧ = 0;
		КонецЕсли;
	КонецЦикла;
	ВывестиРеквизитыТЧНаФорму(ТаблицаЛеваяКолонка,"МагазинТоварнаяМатрица",Элементы.ТоварнаяМатрицаЛК,МагазинТоварнаяМатрица);
	ВывестиРеквизитыТЧНаФорму(ТаблицаПраваяКолонка,"МагазинТоварнаяМатрица",Элементы.ТоварнаяМатрицаПК,МагазинТоварнаяМатрица,ТаблицаЛеваяКолонка.Количество());

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипыТС(лкВидДеятельности,Префикс,ГруппаФлажков,ТаблицаКонтроля)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БП_ТипыТС.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ПартнерыБП_ВидыДеятельности.Использование, ЛОЖЬ) КАК Использование
	|ИЗ
	|	Справочник.БП_ТипыТС КАК БП_ТипыТС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.БП_ВидыДеятельности КАК ПартнерыБП_ВидыДеятельности
	|		ПО (ПартнерыБП_ВидыДеятельности.ТипТС = БП_ТипыТС.Ссылка)
	|			И (ПартнерыБП_ВидыДеятельности.ВидДеятельности = &ВидДеятельности)
	|			И (ПартнерыБП_ВидыДеятельности.Использование = ИСТИНА)
	|			И (ПартнерыБП_ВидыДеятельности.Ссылка = &Партнер)
	|ГДЕ
	|	БП_ТипыТС.ВыводитьВРазделВыбораГрузовогоТранспорта
	|	И НЕ БП_ТипыТС.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	БП_ТипыТС.Наименование";
	
	Запрос.УстановитьПараметр("ВидДеятельности", лкВидДеятельности);
	Запрос.УстановитьПараметр("Партнер", СсылкаНаОбъект);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРезультата = РезультатЗапроса.Выгрузить();
	ВывестиРеквизитыТЧНаФорму(ТаблицаРезультата,Префикс,ГруппаФлажков,ТаблицаКонтроля);

КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитВТЧ(ТЧ,ИмяРеквизита,Ссылка)
	
	нвСтрока = ТЧ.Добавить();
	нвСтрока.ИмяРеквизита = ИмяРеквизита;
	нвСтрока.Ссылка = Ссылка;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВидДеятельности(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ОкончаниеДобавленияВидаДеятельности",ЭтаФорма);
	ПоказатьВыборИзСписка(ОписаниеОповещения,ПолучитьСписокВидовДеятельностиДляВыбора());
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеДобавленияВидаДеятельности(Результат,ДопПараметры)	Экспорт
	
	Если Результат <> Неопределено Тогда
		Элементы.ВидДеятельности.СписокВыбора.Добавить(Результат.Значение);
		нвСтрока = ВидыДеятельности.Добавить();
		нвСтрока.ВидДеятельности = Результат.Значение;
		ВидДеятельности = Результат.Значение;
	КонецЕсли;
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокВидовДеятельностиДляВыбора()
	СписокЗначений = Новый СписокЗначений();
	
	ДобавитьЗначениеВидаДеятельностиСПроверкой(Перечисления.БП_ВидыДеятельности.АТП,СписокЗначений);
	ДобавитьЗначениеВидаДеятельностиСПроверкой(Перечисления.БП_ВидыДеятельности.Магазин,СписокЗначений);
	ДобавитьЗначениеВидаДеятельностиСПроверкой(Перечисления.БП_ВидыДеятельности.СТО,СписокЗначений);
	
	Возврат СписокЗначений;
КонецФункции

&НаСервере
Процедура ДобавитьЗначениеВидаДеятельностиСПроверкой(Значение,МассивЗначений)
	
	Если ВидыДеятельности.Выгрузить().Найти(Значение) = Неопределено Тогда
		МассивЗначений.Добавить(Значение);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьФорму(Команда)
	
	Если НЕ ПроверкаЗаполненности() Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьДанныеПоРеквизитам();
	Если ВладелецФормы.ИмяФормы = "Справочник.Партнеры.Форма.ФормаЭлемента" Тогда
		ВладелецФормы.Прочитать();
	КонецЕсли;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Функция ПроверкаЗаполненности()
	Для каждого текСтрока Из СведенияОСоставеПарка Цикл
		Если НЕ ЗначениеЗаполнено(текСтрока.ТипТС) ИЛИ НЕ ЗначениеЗаполнено(текСтрока.МаркаТС) Тогда
			Сообщить("В строке: "+Строка(СведенияОСоставеПарка.Индекс(текСтрока)+1)+" не заполнены обязательные реквизиты.");
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
	
КонецФункции


&НаСервере
Процедура СохранитьДанныеПоРеквизитам()
	текОБ = СсылкаНаОбъект.ПолучитьОбъект();
	текОБ.БП_ВидыДеятельности.Очистить();
	Для каждого текСтрока Из ВидыДеятельности Цикл
		нвСтрока = текОБ.БП_ВидыДеятельности.Добавить();
		нвСтрока.ВидДеятельности = текСтрока.ВидДеятельности;
		нвСтрока.Использование = Истина;
	КонецЦикла;
	//АТП
	Для каждого текСтрока Из АТПТипыТС Цикл
		Если ЭтаФорма[текСтрока.ИмяРеквизита] Тогда
			нвСтрока = текОБ.БП_ВидыДеятельности.Добавить();
			нвСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.АТП;
			нвСтрока.ТипТС = текСтрока.Ссылка;
			нвСтрока.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	текОБ.БП_СведенияОСоставеПарка.Загрузить(СведенияОСоставеПарка.Выгрузить());
	
	//Магазин
	Если МагазинГрузовые Тогда
		нвСтрока = текОБ.БП_ВидыДеятельности.Добавить();
		нвСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.Магазин;
		нвСтрока.Ассортимент = Перечисления.БП_Ассортимент.Грузовые;
		нвСтрока.Использование = Истина;
	КонецЕсли;
	Если МагазинЛегковые Тогда
		нвСтрока = текОБ.БП_ВидыДеятельности.Добавить();
		нвСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.Магазин;
		нвСтрока.Ассортимент = Перечисления.БП_Ассортимент.Легковые;
		нвСтрока.Использование = Истина;
	КонецЕсли;
	Для каждого текСтрока Из МагазинТипыТС Цикл
		Если ЭтаФорма[текСтрока.ИмяРеквизита] Тогда
			нвСтрока = текОБ.БП_ВидыДеятельности.Добавить();
			нвСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.Магазин;
			нвСтрока.ТипТС = текСтрока.Ссылка;
			нвСтрока.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	Для каждого текСтрока Из МагазинСтраны Цикл
		Если ЭтаФорма[текСтрока.ИмяРеквизита] Тогда
			нвСтрока = текОБ.БП_ВидыДеятельности.Добавить();
			нвСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.Магазин;
			нвСтрока.Страна = текСтрока.Ссылка;
			нвСтрока.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	текОБ.БП_ТоварнаяМатрица.Очистить();
	Для каждого текСтрока Из МагазинТоварнаяМатрица Цикл
		Если ЭтаФорма[текСтрока.ИмяРеквизита] Тогда
			нвСтрока = текОБ.БП_ТоварнаяМатрица.Добавить();
			нвСтрока.Товар = текСтрока.Ссылка;
			нвСтрока.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	текОБ.БП_ТоварнаяМатрица.Свернуть("Товар,Использование");
	текОБ.БП_КоличествоТорговыхЗалов = БП_КоличествоТорговыхЗалов;
	//СТО
	Если СТОГрузовые Тогда
		нвСтрока = текОБ.БП_ВидыДеятельности.Добавить();
		нвСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.СТО;
		нвСтрока.Ассортимент = Перечисления.БП_Ассортимент.Грузовые;
		нвСтрока.Использование = Истина;
	КонецЕсли;
	Если СТОЛегковые Тогда
		нвСтрока = текОБ.БП_ВидыДеятельности.Добавить();
		нвСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.СТО;
		нвСтрока.Ассортимент = Перечисления.БП_Ассортимент.Легковые;
		нвСтрока.Использование = Истина;
	КонецЕсли;
	Для каждого текСтрока Из СТОТипыТС Цикл
		Если ЭтаФорма[текСтрока.ИмяРеквизита] Тогда
			нвСтрока = текОБ.БП_ВидыДеятельности.Добавить();
			нвСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.СТО;
			нвСтрока.ТипТС = текСтрока.Ссылка;
			нвСтрока.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	Для каждого текСтрока Из СТОСтраны Цикл
		Если ЭтаФорма[текСтрока.ИмяРеквизита] Тогда
			нвСтрока = текОБ.БП_ВидыДеятельности.Добавить();
			нвСтрока.ВидДеятельности = Перечисления.БП_ВидыДеятельности.СТО;
			нвСтрока.Страна = текСтрока.Ссылка;
			нвСтрока.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	текОБ.БП_ВидыРабот.Очистить();
	Для каждого текСтрока Из СТОВидыРабот Цикл
		Если ЭтаФорма[текСтрока.ИмяРеквизита] Тогда
			нвСтрока = текОБ.БП_ВидыРабот.Добавить();
			нвСтрока.ВидРабот = текСтрока.Ссылка;
			нвСтрока.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	текОБ.БП_ВидыРабот.Свернуть("ВидРабот,Использование");
	текОБ.БП_КоличествоРемонтныхПостов = БП_КоличествоРемонтныхПостов;
	текОБ.Записать();
КонецПроцедуры


&НаКлиенте
Процедура ВидДеятельностиПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры



&НаКлиенте
Процедура СведенияОСоставеПаркаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Элементы.СведенияОСоставеПаркаТипТС.СписокВыбора.Очистить();
	Для каждого текСтрока Из АТПТипыТС Цикл
		Если ЭтаФорма[текСтрока.ИмяРеквизита] Тогда
			Элементы.СведенияОСоставеПаркаТипТС.СписокВыбора.Добавить(текСтрока.Ссылка);	
		КонецЕсли;
	КонецЦикла;
	текСтрока = Элементы.СведенияОСоставеПарка.ТекущиеДанные;
	Если текСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	текСтрока.Партнер = СсылкаНаОбъект;
КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьФорму(Команда)
	
	Если НЕ ПроверкаЗаполненности() Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьДанныеПоРеквизитам();
	Если ВладелецФормы.ИмяФормы = "Справочник.Партнеры.Форма.ФормаЭлемента" Тогда
		ВладелецФормы.Прочитать();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры


&НаКлиенте
Процедура МагазинВыбратьВсе(Команда)
	Для каждого текСтрока Из МагазинТоварнаяМатрица Цикл
		ЭтаФорма[текСтрока.ИмяРеквизита] = Истина;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура МагазинОтменитьВсе(Команда)
	Для каждого текСтрока Из МагазинТоварнаяМатрица Цикл
		ЭтаФорма[текСтрока.ИмяРеквизита] = Ложь;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура МагазинГрузовыеПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()
	
	Элементы.МагазинТипыТС.Доступность = МагазинГрузовые;
	Элементы.МагазинСтраны.Доступность = МагазинГрузовые;
	Элементы.СТОТипыТС.Доступность = СТОГрузовые;
	Элементы.СТОСтраны.Доступность = СТОГрузовые;
	//Элементы.МагазинТипыТС.Доступность = МагазинГрузовые;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступность();
КонецПроцедуры


&НаКлиенте
Процедура СТОВыбратьВсе(Команда)
	Для каждого текСтрока Из СТОВидыРабот Цикл
		ЭтаФорма[текСтрока.ИмяРеквизита] = Истина;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура СТООтменитьВсе(Команда)
	Для каждого текСтрока Из СТОВидыРабот Цикл
		ЭтаФорма[текСтрока.ИмяРеквизита] = Ложь;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура СТОГрузовыеПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры


&НаКлиенте
Процедура УдалитьАТП(Команда)
	
	УдалитьСтраницу(ПредопределенноеЗначение("Перечисление.БП_ВидыДеятельности.АТП"));
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу(ВидДеятельности)
	
	Оповещение = Новый ОписаниеОповещения("ОтветНаВопросОУдаленииСтраницы",ЭтаФорма,Новый Структура("ВидДеятельности",ВидДеятельности));
	ПоказатьВопрос(Оповещение,"Данные страницы будут очищены. Продолжить?",РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры


&НаКлиенте
Процедура ОтветНаВопросОУдаленииСтраницы(Результат, ДопПараметры)		Экспорт
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	СтрокиВидов = ВидыДеятельности.НайтиСтроки(Новый Структура("ВидДеятельности",ДопПараметры.ВидДеятельности));
	
	Для каждого текСтрока Из СтрокиВидов Цикл
		ВидыДеятельности.Удалить(текСтрока);		
	КонецЦикла;
	
	Если ДопПараметры.ВидДеятельности = ПредопределенноеЗначение("Перечисление.БП_ВидыДеятельности.АТП") Тогда
		Для каждого текСтрока Из АТПТипыТС Цикл
			текСтрока.Использование = Ложь;
			ЭтаФорма[текСтрока.ИмяРеквизита] = Ложь;
		КонецЦикла;
		СведенияОСоставеПарка.Очистить();
	ИначеЕсли ДопПараметры.ВидДеятельности = ПредопределенноеЗначение("Перечисление.БП_ВидыДеятельности.Магазин") Тогда
		МагазинЛегковые = Ложь;
		МагазинГрузовые = Ложь;
		Для каждого текСтрока Из МагазинТипыТС Цикл
			//текСтрока.Использование = Ложь;
			ЭтаФорма[текСтрока.ИмяРеквизита] = Ложь;
		КонецЦикла;
		Для каждого текСтрока Из МагазинСтраны Цикл
			//текСтрока.Использование = Ложь;
			ЭтаФорма[текСтрока.ИмяРеквизита] = Ложь;
		КонецЦикла;
		Для каждого текСтрока Из МагазинТоварнаяМатрица Цикл
			//текСтрока.Использование = Ложь;
			ЭтаФорма[текСтрока.ИмяРеквизита] = Ложь;
		КонецЦикла;
		БП_КоличествоТорговыхЗалов = "";
		
	ИначеЕсли ДопПараметры.ВидДеятельности = ПредопределенноеЗначение("Перечисление.БП_ВидыДеятельности.СТО") Тогда
		СТОЛегковые = Ложь;
		СТОГрузовые = Ложь;
		Для каждого текСтрока Из СТОТипыТС Цикл
			//текСтрока.Использование = Ложь;
			ЭтаФорма[текСтрока.ИмяРеквизита] = Ложь;
		КонецЦикла;
		Для каждого текСтрока Из СТОСтраны Цикл
			//текСтрока.Использование = Ложь;
			ЭтаФорма[текСтрока.ИмяРеквизита] = Ложь;
		КонецЦикла;
		Для каждого текСтрока Из СТОВидыРабот Цикл
			//текСтрока.Использование = Ложь;
			ЭтаФорма[текСтрока.ИмяРеквизита] = Ложь;
		КонецЦикла;
		БП_КоличествоРемонтныхПостов = "";
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСТО(Команда)
	УдалитьСтраницу(ПредопределенноеЗначение("Перечисление.БП_ВидыДеятельности.СТО"));
КонецПроцедуры

&НаКлиенте
Процедура УдалитьМагазин(Команда)
	УдалитьСтраницу(ПредопределенноеЗначение("Перечисление.БП_ВидыДеятельности.Магазин"));
КонецПроцедуры


