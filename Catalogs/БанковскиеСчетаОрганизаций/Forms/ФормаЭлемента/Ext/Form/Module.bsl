&НаКлиенте
Перем ИмяРедактируемогоРеквизита;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ИспользоватьНесколькоВалют = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	
	Если ИспользоватьНесколькоВалют Тогда
		// подсистема запрета редактирования ключевых реквизитов объектов	
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	КонецЕсли;
	
	Элементы.Владелец.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	Элементы.ГруппаПрямойОбмен.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьОбменСБанками");
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	
	// Обработчик механизма "Свойства"
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	НадписьСоздатьПравило = НСтр("ru='Объединять данные счетов банка в один файл'");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ИспользоватьНесколькоВалют Тогда
		// подсистема запрета редактирования ключевых реквизитов объектов	
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	КонецЕсли;
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ)
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		Если БИКБанка <> Объект.БИКБанка Тогда
			Объект.БИКБанка = БИКБанка;
		КонецЕсли;
		Если КоррСчетБанка <> Объект.КоррСчетБанка И Не ИностранныйБанк И Не ВалютныйСчет Тогда
			Объект.КоррСчетБанка = КоррСчетБанка;
		КонецЕсли;
		Если НаименованиеБанка <> Объект.НаименованиеБанка Тогда
			Объект.НаименованиеБанка = НаименованиеБанка;
		КонецЕсли;
		Если ГородБанка <> Объект.ГородБанка Тогда
			Объект.ГородБанка = ГородБанка;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		Если БИКБанкаДляРасчетов <> Объект.БИКБанкаДляРасчетов Тогда
			Объект.БИКБанкаДляРасчетов = БИКБанкаДляРасчетов;
		КонецЕсли;
		Если КоррСчетБанкаДляРасчетов <> Объект.КоррСчетБанкаДляРасчетов Тогда
			Объект.КоррСчетБанкаДляРасчетов = КоррСчетБанкаДляРасчетов;
		КонецЕсли;
		Если НаименованиеБанкаДляРасчетов <> Объект.НаименованиеБанкаДляРасчетов Тогда
			Объект.НаименованиеБанкаДляРасчетов = НаименованиеБанкаДляРасчетов;
		КонецЕсли;
		Если ГородБанкаДляРасчетов <> Объект.ГородБанкаДляРасчетов Тогда
			Объект.ГородБанкаДляРасчетов = ГородБанкаДляРасчетов;
		КонецЕсли;
	КонецЕсли;
	
	Если ИспользоватьТекстКорреспондента Тогда
		Объект.ТекстКорреспондента = ТекстКорреспондента;
	Иначе
		Объект.ТекстКорреспондента = "";
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.Наименование) Тогда
		Объект.Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		ДубльБанковскогоСчета = НайтиДубльБанковскогоСчета(Объект.Ссылка, Объект.НомерСчета, Объект.Владелец, Объект.ВалютаДенежныхСредств, Объект.Банк);
		
		Если ДубльБанковскогоСчета <> Неопределено Тогда
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Найден банковский счет ""%1"", с аналогичным номером в указанном банке.
					|Продолжить запись текущего элемента?'"),
				ДубльБанковскогоСчета);
				
			ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаДублейЗавершение", ЭтаФорма);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
			Отказ = Истина;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаДублейЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		Записать();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_БанковскиеСчетаОрганизаций", ПараметрыЗаписи, Объект.Ссылка);
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик механизма "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)
	
	Если ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	Если (ИсточникВыбора.ИмяФормы = "Справочник.БанковскиеСчетаОрганизаций.Форма.РеквизитыБанка") Тогда
		Если Не ПустаяСтрока(РезультатВыбора) Тогда
			Если РезультатВыбора.Реквизит = "БИКБанка" Тогда
				Объект.РучноеИзменениеРеквизитовБанка = РезультатВыбора.РучноеИзменение;
				Если РезультатВыбора.РучноеИзменение Тогда
					Объект.Банк              = "";
					Объект.БИКБанка          = РезультатВыбора.ЗначенияПолей.БИК;
					Объект.НаименованиеБанка = РезультатВыбора.ЗначенияПолей.Наименование;
					Объект.КоррСчетБанка     = РезультатВыбора.ЗначенияПолей.КоррСчет;
					Объект.ГородБанка        = РезультатВыбора.ЗначенияПолей.Город;
					Объект.АдресБанка        = РезультатВыбора.ЗначенияПолей.Адрес;
					Объект.ТелефоныБанка     = РезультатВыбора.ЗначенияПолей.Телефоны;
					
					БИКБанка                 = РезультатВыбора.ЗначенияПолей.БИК;
					КоррСчетБанка            = РезультатВыбора.ЗначенияПолей.КоррСчет;
					НаименованиеБанка        = РезультатВыбора.ЗначенияПолей.Наименование;
					ГородБанка               = РезультатВыбора.ЗначенияПолей.Город;
				Иначе
					Объект.Банк              = РезультатВыбора.Банк;
					Объект.БИКБанка          = "";
					Объект.НаименованиеБанка = "";
					Объект.КоррСчетБанка     = "";
					Объект.ГородБанка        = "";
					Объект.АдресБанка        = "";
					Объект.ТелефоныБанка     = "";
					
					ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Ложь);
				КонецЕсли;
			ИначеЕсли РезультатВыбора.Реквизит = "БИКБанкаДляРасчетов" Тогда
				Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = РезультатВыбора.РучноеИзменение;
				Если РезультатВыбора.РучноеИзменение Тогда
					Объект.БанкДляРасчетов              = "";
					Объект.БИКБанкаДляРасчетов          = РезультатВыбора.ЗначенияПолей.БИК;
					Объект.НаименованиеБанкаДляРасчетов = РезультатВыбора.ЗначенияПолей.Наименование;
					Объект.КоррСчетБанкаДляРасчетов     = РезультатВыбора.ЗначенияПолей.КоррСчет;
					Объект.ГородБанкаДляРасчетов        = РезультатВыбора.ЗначенияПолей.Город;
					Объект.АдресБанкаДляРасчетов        = РезультатВыбора.ЗначенияПолей.Адрес;
					Объект.ТелефоныБанкаДляРасчетов     = РезультатВыбора.ЗначенияПолей.Телефоны;
					
					БИКБанкаДляРасчетов          = РезультатВыбора.ЗначенияПолей.БИК; 
					КоррСчетБанкаДляРасчетов     = РезультатВыбора.ЗначенияПолей.КоррСчет;
					НаименованиеБанкаДляРасчетов = РезультатВыбора.ЗначенияПолей.Наименование;
					ГородБанкаДляРасчетов        = РезультатВыбора.ЗначенияПолей.Город;
				Иначе
					Объект.БанкДляРасчетов              = РезультатВыбора.Банк;
					Объект.БИКБанкаДляРасчетов          = "";
					Объект.НаименованиеБанкаДляРасчетов = "";
					Объект.КоррСчетБанкаДляРасчетов     = "";
					Объект.ГородБанкаДляРасчетов        = "";
					Объект.АдресБанкаДляРасчетов        = "";
					Объект.ТелефоныБанкаДляРасчетов     = "";
					
					ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", Объект.БанкДляРасчетов, Ложь);	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли (ИсточникВыбора.ИмяФормы = "Справочник.КлассификаторБанков.Форма.ФормаВыбора") Тогда	
		Если ТипЗнч(РезультатВыбора) = Тип("СправочникСсылка.КлассификаторБанков") Тогда
			Если ИмяРедактируемогоРеквизита = "БИКБанка" Тогда
				Объект.Банк              = РезультатВыбора;
				Объект.БИКБанка          = "";
				Объект.НаименованиеБанка = "";
				Объект.КоррСчетБанка     = "";
				Объект.ГородБанка        = "";
				Объект.АдресБанка        = "";
				Объект.ТелефоныБанка     = "";
				
				ЗаполнитьРеквизитыБанкаПоБанку("Банк", РезультатВыбора, Ложь);
			ИначеЕсли ИмяРедактируемогоРеквизита = "БИКБанкаДляРасчетов" Тогда
				Объект.БанкДляРасчетов              = РезультатВыбора;
				Объект.БИКБанкаДляРасчетов          = "";
				Объект.НаименованиеБанкаДляРасчетов = "";
				Объект.КоррСчетБанкаДляРасчетов     = "";
				Объект.ГородБанкаДляРасчетов        = "";
				Объект.АдресБанкаДляРасчетов        = "";
				Объект.ТелефоныБанкаДляРасчетов     = "";
				
				ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", РезультатВыбора, Ложь);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;
	
	БанкПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.НастройкиОбменСБанками") Тогда
		ОбновитьЭлементыФормыИСоглашениеЭД();
	КонецЕсли;
	
	// Обработчик механизма "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
  	// ЭлектронноеВзаимодействие.ОбменСБанками
	ОбменСБанкамиКлиент.ОбновитьРекламуДиректБанк(ИмяСобытия, Элементы.ГруппаРекламаДиректБанк, Элементы.ТекстДиректБанкГоризонтально);
  	// Конец ЭлектронноеВзаимодействие.ОбменСБанками
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Объект.НомерСчета) Тогда
		НомерСчетаПриИзмененииСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользуетсяБанкДляРасчетовПриИзменении(Элемент)
	
	Элементы.БИКБанкаДляРасчетов.Доступность					   = ИспользуетсяБанкДляРасчетов;
	Элементы.РучноеИзменениеРеквизитовБанкаДляРасчетов.Доступность = ИспользуетсяБанкДляРасчетов;
	Элементы.КоррСчетБанкаДляРасчетов.Доступность				   = ИспользуетсяБанкДляРасчетов;
	Элементы.НаименованиеБанкаДляРасчетов.Доступность			   = ИспользуетсяБанкДляРасчетов;
	Элементы.ГородБанкаДляРасчетов.Доступность					   = ИспользуетсяБанкДляРасчетов;

	Если НЕ ИспользуетсяБанкДляРасчетов Тогда
		Объект.БанкДляРасчетов							 = "";
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = "";
		Объект.БИКБанкаДляРасчетов						 = "";
		Объект.НаименованиеБанкаДляРасчетов				 = "";
		Объект.КоррСчетБанкаДляРасчетов					 = "";
		Объект.ГородБанкаДляРасчетов					 = "";
		Объект.АдресБанкаДляРасчетов					 = "";
		Объект.ТелефоныБанкаДляРасчетов					 = "";
		БИКБанкаДляРасчетов								 = "";
		КоррСчетБанкаДляРасчетов						 = "";
		НаименованиеБанкаДляРасчетов					 = "";
		ГородБанкаДляРасчетов							 = "";
	КонецЕсли;
	
	ИспользуетсяБанкДляРасчетовПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ИспользуетсяБанкДляРасчетовПриИзмененииНаСервере()
	
	УстановитьПараметрыРедактированияРеквизитов();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТекстКорреспондентаПриИзменении(Элемент)

	Элементы.ТекстКорреспондента.Доступность = ИспользоватьТекстКорреспондента;
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ЗаполнитьТекстКорреспондента();
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборФайла(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборФайла(Элемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФайлДляПросмотра(Элемент, НСтр("ru='Файл загрузки'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФайлДляПросмотра(Элемент, НСтр("ru='Файл выгрузки'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
	
	ВалютныйСчет = (ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) И Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	ВалютаДенежныхСредствПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеБанкаПриИзменении(Элемент)
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияДобавитьСоглашениеЭДНажатие(Элемент)
	
	НеДобавлять = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не указана организация'"), , "Владелец", "Объект", НеДобавлять); 
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Банк) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не указан банк'"), , "БИК", "Объект", НеДобавлять); 
	КонецЕсли;
	
	Если НеДобавлять Тогда
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("ПослеСозданияНастройкиОбмена", ЭтотОбъект);
	ОбменСБанкамиКлиент.ОткрытьСоздатьНастройкуОбмена(
		Объект.Владелец, Объект.Банк, Объект.НомерСчета, Обработчик);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСозданияНастройкиОбмена(НастройкаЭДО, Параметры) Экспорт
	
	Элементы.ДекорацияДобавитьСоглашениеЭД.Заголовок = ОбменСБанкамиКлиентСервер.ЗаголовокНастройкиОбменаСБанком(
		Объект.Владелец, Объект.Банк);

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСоглашениеЭДНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", СоглашениеЭД);
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбновитьИнформациюПоСоглашениямЭД", ЭтаФорма);
	ОткрытьФорму("Справочник.НастройкиОбменСБанками.Форма.ФормаЭлемента", 
		ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОбменаКлиентБанкаПриИзменении(Элемент)
	
	РежимОбменаПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОбменаПрямойОбменПриИзменении(Элемент)
	
	РежимОбменаПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОбменаВключенПриИзменении(Элемент)
	
	РежимОбменаПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ТекстОшибки = "";
	ОчиститьСообщения();
	Валютный = (Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	Если Не ПустаяСтрока(Текст)
		И Не Объект.ИностранныйБанк
		И Не ДенежныеСредстваКлиентСервер.ПроверитьКорректностьНомераСчета(Текст, Валютный, ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "НомерСчета", "Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИностранныйБанкПриИзменении(Элемент)
	
	Объект.ИностранныйБанк = (ИностранныйБанк = 1);
	
	ИностранныйБанкПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ИностранныйБанкПриИзмененииНаСервере()
	
	УстановитьПараметрыРедактированияРеквизитов();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтдельныйСчетГОЗПриИзменении(Элемент)
	
	
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ГосударственныйКонтрактПриИзменении(Элемент)
	
	
	Возврат;
	
КонецПроцедуры


&НаКлиенте
Процедура ТекстДиректБанкГоризонтальноОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	ОбменСБанкамиКлиент.ОбработкаНавигационнойСсылкиРекламыДиректБанк(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если ИспользоватьНесколькоВалют И (Не Объект.Ссылка.Пустая()) Тогда
		ОткрытьФорму("Справочник.БанковскиеСчетаОрганизаций.Форма.РазблокированиеРеквизитов",,,,,, 
			Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
        ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
    КонецЕсли;

КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТекстКорреспондента.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИспользоватьТекстКорреспондента");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.FormBackColor);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.BorderColor);
	
	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТекстКорреспондента.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИспользоватьТекстКорреспондента");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.FormBackColor);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.BorderColor);

КонецПроцедуры

#Область ПриИзмененииРеквизитов

&НаСервере
Процедура ЗаполнитьТекстКорреспондента()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НаименованиеСокращенное КАК Наименование
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Ссылка
	|";
	Запрос.УстановитьПараметр("Ссылка", Объект.Владелец);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ТекстКорреспондента = СокрЛП(Выборка.Наименование);
	Иначе
		ТекстКорреспондента = "";
	КонецЕсли;
	
	Если (ЗначениеЗаполнено(Объект.БанкДляРасчетов)) или (ЗначениеЗаполнено(Объект.БИКБанкаДляРасчетов)) Тогда
			
		Если Объект.РучноеИзменениеРеквизитовБанка Тогда
			ТекстКорреспондента = ТекстКорреспондента
				+ " р/с " + СокрЛП(Объект.НомерСчета)
				+ " в " + Строка(Объект.НаименованиеБанка)
				+ " " + Объект.ГородБанка;
		Иначе
			ТекстКорреспондента = ТекстКорреспондента
				+ " р/с " + СокрЛП(Объект.НомерСчета)
				+ " в " + Строка(Объект.Банк);
			Если ЗначениеЗаполнено(Объект.Банк) Тогда
				ТекстКорреспондента = ТекстКорреспондента	
				+ " " + Объект.Банк.Город;
			КонецЕсли;
		КонецЕсли;
									
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДляПросмотра(Элемент, Заголовок)
	
	ФайлНаДиске = Новый Файл;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьФайлДляПросмотраНачатьИнициализацию",
		ЭтотОбъект,
		Новый Структура("Элемент, Заголовок", Элемент, Заголовок));
		
	ФайлНаДиске.НачатьИнициализацию(ОписаниеОповещения, Элемент.ТекстРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДляПросмотраНачатьИнициализацию(Файл, ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьФайлДляПросмотраФайлСуществует",
		ЭтотОбъект,
		ДополнительныеПараметры);
		
	Файл.НачатьПроверкуСуществования(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДляПросмотраФайлСуществует(Существует, ДополнительныеПараметры) Экспорт
	
	Если НЕ Существует Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru='Не найден файл!'"));
		Возврат;
	КонецЕсли;
	
	Текст = Новый ТекстовыйДокумент;
	Если Объект.Кодировка = "DOS" Тогда
		Кодир = КодировкаТекста.OEM;
	Иначе
		Кодир = КодировкаТекста.ANSI;
	КонецЕсли;
	
	Текст.Прочитать(ДополнительныеПараметры.Элемент.ТекстРедактирования, Кодир);
	Текст.Показать(ДополнительныеПараметры.Заголовок, ДополнительныеПараметры.Элемент.ТекстРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайла(Элемент, Загрузка = Истина);
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = НСтр("ru='Текстовый файл (*.txt)|*.txt'");
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.Расширение = "txt";
	ДиалогВыбораФайла.ИндексФильтра = 0;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Ложь;
	
	Если Загрузка Тогда
		ДиалогВыбораФайла.Заголовок = НСтр("ru='Выберите файл для загрузки данных из программы банка'");
		ДиалогВыбораФайла.ПолноеИмяФайла =
			?(ПустаяСтрока(Элемент.ТекстРедактирования), "kl_to_1c.txt", Элемент.ТекстРедактирования);
	Иначе
		ДиалогВыбораФайла.Заголовок = НСтр("ru='Выберите файл для выгрузки данных в программу банка'");
		НазваниеФайла = СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
		ДиалогВыбораФайла.ПолноеИмяФайла =
			?(ПустаяСтрока(Элемент.ТекстРедактирования), НазваниеФайла + ".txt", Элемент.ТекстРедактирования);
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыборФайлаЗавершение",
		ЭтотОбъект,
		Новый Структура("Загрузка", Загрузка));
	
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Загрузка Тогда
		Объект.ФайлЗагрузки = ВыбранныеФайлы[0];
	Иначе
		Объект.ФайлВыгрузки = ВыбранныеФайлы[0];
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоБИК(ТипБанка, БИК = "", ПеренестиЗначенияРеквизитов = Ложь)
	
	НашлиПоБИК   = Ложь;
	ЗаписьОБанке = "";
	
	Если ТипБанка = "Банк" Тогда
		БИКБанка          = "";
		КоррСчетБанка     = "";
		НаименованиеБанка = "";
		ГородБанка        = "";
		РаботаСБанками.ПолучитьДанныеКлассификатора(БИК,,ЗаписьОБанке);
		Если НЕ ПустаяСтрока(ЗаписьОБанке) Тогда
			БИКБанка		  = ЗаписьОБанке.Код;
			КоррСчетБанка	  = ЗаписьОБанке.КоррСчет;
			НаименованиеБанка = ЗаписьОБанке.Наименование;
			ГородБанка		  = ЗаписьОБанке.Город;
			НашлиПоБИК		  = Истина;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанка			 = "";
				Объект.НаименованиеБанка = "";
				Объект.КоррСчетБанка	 = "";
				Объект.ГородБанка		 = "";
				Объект.АдресБанка		 = "";
				Объект.ТелефоныБанка	 = "";
				Объект.Банк				 = ЗаписьОБанке;
			КонецЕсли;
			Если Не Объект.ИностранныйБанк Тогда
				Объект.СВИФТБанка = СВИФТпоБИК(БИКБанка);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипБанка = "БанкДляРасчетов" Тогда
		БИКБанкаДляРасчетов          = "";
		КоррСчетБанкаДляРасчетов     = "";
		НаименованиеБанкаДляРасчетов = "";
		ГородБанкаДляРасчетов        = "";
		РаботаСБанками.ПолучитьДанныеКлассификатора(БИК,,ЗаписьОБанке);
	 	Если НЕ ПустаяСтрока(ЗаписьОБанке) Тогда
			БИКБанкаДляРасчетов			 = ЗаписьОБанке.Код;
			КоррСчетБанкаДляРасчетов	 = ЗаписьОБанке.КоррСчет;
			НаименованиеБанкаДляРасчетов = ЗаписьОБанке.Наименование;
			ГородБанкаДляРасчетов		 = ЗаписьОБанке.Город;
			НашлиПоБИК					 = Истина;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанкаДляРасчетов			= "";
				Объект.НаименованиеБанкаДляРасчетов = "";
				Объект.КоррСчетБанкаДляРасчетов		= "";
				Объект.ГородБанкаДляРасчетов		= "";
				Объект.АдресБанкаДляРасчетов		= "";
				Объект.ТелефоныБанкаДляРасчетов		= "";
				Объект.БанкДляРасчетов				= ЗаписьОБанке;
			КонецЕсли;
			Объект.СВИФТБанкаДляРасчетов = СВИФТпоБИК(БИКБанкаДляРасчетов);
		КонецЕсли;
	КонецЕсли;
	
	Возврат НашлиПоБИК;
	
КонецФункции

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоБанку(ТипБанка, Банк = "", ПеренестиЗначенияРеквизитов = Ложь)
	
	Если ТипЗнч(Банк) = Тип("СправочникСсылка.КлассификаторБанков") Тогда
		Если ТипБанка = "Банк" Тогда
			
			БИКБанка		  = Банк.Код;
			КоррСчетБанка	  = Банк.КоррСчет;
			НаименованиеБанка = Банк.Наименование;
			ГородБанка		  = Банк.Город;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанка			 = Банк.Код;
				Объект.НаименованиеБанка = Банк.Наименование;
				Объект.КоррСчетБанка	 = Банк.КоррСчет;
				Объект.ГородБанка		 = Банк.Город;
				Объект.АдресБанка		 = Банк.Адрес;
				Объект.ТелефоныБанка	 = Банк.Телефоны;
				Объект.Банк				 = "";
			КонецЕсли;
			
			Если Не Объект.ИностранныйБанк Тогда
				Объект.СВИФТБанка = СВИФТпоБИК(БИКБанка);
			КонецЕсли;
			
		ИначеЕсли ТипБанка = "БанкДляРасчетов" Тогда
			
			БИКБанкаДляРасчетов			 = Банк.Код;
			КоррСчетБанкаДляРасчетов	 = Банк.КоррСчет;
			НаименованиеБанкаДляРасчетов = Банк.Наименование;
			ГородБанкаДляРасчетов		 = Банк.Город;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанкаДляРасчетов			= Банк.Код;
				Объект.НаименованиеБанкаДляРасчетов = Банк.Наименование;
				Объект.КоррСчетБанкаДляРасчетов		= Банк.КоррСчет;
				Объект.ГородБанкаДляРасчетов		= Банк.Город;
				Объект.АдресБанкаДляРасчетов		= Банк.Адрес;
				Объект.ТелефоныБанкаДляРасчетов		= Банк.Телефоны;
				Объект.БанкДляРасчетов				= "";
			КонецЕсли;
			
			Объект.СВИФТБанкаДляРасчетов = СВИФТпоБИК(БИКБанкаДляРасчетов);
			
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура НомерСчетаПриИзмененииСервер()
	
	Валюта = ДенежныеСредстваСервер.ПолучитьВалютуПоНомеруСчета(Объект.НомерСчета);
	Если ЗначениеЗаполнено(Валюта) Тогда
		Объект.ВалютаДенежныхСредств = Валюта;
	КонецЕсли;
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры 

&НаКлиенте
Процедура РежимОбменаПриИзменении()
	
	Объект.ИспользоватьПрямойОбменСБанком = (РежимОбмена = 1);
	Объект.ИспользоватьОбменСБанком = (РежимОбмена = 2);
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеЭлементамиФормы

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.ВалютаДенежныхСредств.ТолькоПросмотр = Истина;
		Элементы.Владелец.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ВалютаДенежныхСредств.ТолькоПросмотр = Ложь;
		Элементы.Владелец.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Элементы.ГосударственныйКонтракт.Доступность = Объект.ОтдельныйСчетГОЗ;
	Элементы.ГосударственныйКонтракт.АвтоОтметкаНезаполненного = Объект.ОтдельныйСчетГОЗ;
	Элементы.Декорация4.Видимость = ПоддержкаПлатежей275ФЗ;
	
	Элементы.ИностранныйБанк.Доступность = Не Объект.ОтдельныйСчетГОЗ;
	Элементы.ИспользуетсяБанкДляРасчетов.Доступность = Не Объект.ОтдельныйСчетГОЗ;
	
	
	// Банковские реквизиты
	Элементы.ИностранныйБанк.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	
	Элементы.КоррСчетБанка.Доступность     = Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.НаименованиеБанка.Доступность = Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.ГородБанка.Доступность        = Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.АдресБанка.Доступность        = Объект.РучноеИзменениеРеквизитовБанка;
	
	Элементы.КоррСчетБанкаДляРасчетов.Доступность     = Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов И ИспользуетсяБанкДляРасчетов;
	Элементы.НаименованиеБанкаДляРасчетов.Доступность = Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов И ИспользуетсяБанкДляРасчетов;
	Элементы.ГородБанкаДляРасчетов.Доступность        = Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов И ИспользуетсяБанкДляРасчетов;
	Элементы.АдресБанкаДляРасчетов.Доступность        = Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов И ИспользуетсяБанкДляРасчетов;
	Элементы.СчетВБанкеДляРасчетов.Доступность        = ИспользуетсяБанкДляРасчетов;
	
	Элементы.БИКБанкаДляРасчетов.Доступность                       = ИспользуетсяБанкДляРасчетов;
	Элементы.СВИФТБанкаДляРасчетов.Доступность                     = ИспользуетсяБанкДляРасчетов;
	Элементы.РучноеИзменениеРеквизитовБанкаДляРасчетов.Доступность = ИспользуетсяБанкДляРасчетов;
	
	Если Не Объект.ИностранныйБанк Тогда
		
		Элементы.НомерСчета.Маска = "!!!!!!!!!!!!!!!!!!!!";
		
		Элементы.РучноеИзменениеРеквизитовБанка.Видимость = Истина;
		Элементы.РучноеИзменениеРеквизитовБанкаДляРасчетов.Видимость = Не ВалютныйСчет;
		
		Элементы.БИКБанка.Заголовок = НСтр("ru = 'БИК'");
		Элементы.БИКБанка.КнопкаОткрытия = Истина;
		Элементы.БИКБанкаДляРасчетов.КнопкаОткрытия = Не ВалютныйСчет;
		
		Элементы.КоррСчетБанка.Видимость = Не ВалютныйСчет;
		Элементы.КоррСчетБанкаДляРасчетов.Видимость = Не ВалютныйСчет;
		Элементы.СчетВБанкеДляРасчетов.Видимость = ВалютныйСчет;
		
		Элементы.АдресБанка.Видимость = ВалютныйСчет;
		Элементы.ГородБанка.Видимость = Не ВалютныйСчет;
		
		Элементы.АдресБанкаДляРасчетов.Видимость = ВалютныйСчет;
		Элементы.ГородБанкаДляРасчетов.Видимость = Не ВалютныйСчет;
		
		Элементы.ВариантВыводаМесяца.Видимость = Не ВалютныйСчет;
		Элементы.ВыводитьСуммуБезКопеек.Видимость = Не ВалютныйСчет;
		
		Элементы.Переместить(Элементы.БИКБанка, Элементы.БИКБанка.Родитель, Элементы.СВИФТБанка);
		
		Если ВалютныйСчет Тогда
			Элементы.БИКБанкаДляРасчетов.Заголовок = НСтр("ru = 'Национальный код банка'");
			Элементы.Переместить(Элементы.СВИФТБанкаДляРасчетов, Элементы.СВИФТБанкаДляРасчетов.Родитель, Элементы.БИКБанкаДляРасчетов);
		Иначе
			Элементы.БИКБанкаДляРасчетов.Заголовок = НСтр("ru = 'БИК'");
			Элементы.Переместить(Элементы.БИКБанкаДляРасчетов, Элементы.БИКБанкаДляРасчетов.Родитель, Элементы.СВИФТБанкаДляРасчетов);
		КонецЕсли;
	Иначе
		
		Элементы.НомерСчета.Маска = "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!";
		
		Элементы.РучноеИзменениеРеквизитовБанка.Видимость = Ложь;
		Элементы.РучноеИзменениеРеквизитовБанкаДляРасчетов.Видимость = Не ВалютныйСчет;
		
		Элементы.БИКБанка.Заголовок = НСтр("ru = 'Национальный код банка'");
		Элементы.БИКБанка.КнопкаОткрытия = Ложь;
		Элементы.БИКБанкаДляРасчетов.КнопкаОткрытия = Не ВалютныйСчет;
		
		Элементы.КоррСчетБанка.Видимость = Ложь;
		Элементы.КоррСчетБанкаДляРасчетов.Видимость = Ложь;
		Элементы.СчетВБанкеДляРасчетов.Видимость = Истина;
		
		Элементы.АдресБанка.Видимость = Истина;
		Элементы.ГородБанка.Видимость = Ложь;
		
		Элементы.АдресБанкаДляРасчетов.Видимость = Истина;
		Элементы.ГородБанкаДляРасчетов.Видимость = Ложь;
		
		Элементы.ВариантВыводаМесяца.Видимость = Ложь;
		Элементы.ВыводитьСуммуБезКопеек.Видимость = Не ВалютныйСчет;
		
		Элементы.Переместить(Элементы.СВИФТБанка, Элементы.СВИФТБанка.Родитель, Элементы.БИКБанка);
		
		Если ВалютныйСчет Тогда
			Элементы.БИКБанкаДляРасчетов.Заголовок = НСтр("ru = 'Национальный код банка'");
			Элементы.Переместить(Элементы.СВИФТБанкаДляРасчетов, Элементы.СВИФТБанкаДляРасчетов.Родитель, Элементы.БИКБанкаДляРасчетов);
		Иначе
			Элементы.БИКБанкаДляРасчетов.Заголовок = НСтр("ru = 'БИК'");
			Элементы.Переместить(Элементы.БИКБанкаДляРасчетов, Элементы.БИКБанкаДляРасчетов.Родитель, Элементы.СВИФТБанкаДляРасчетов);
		КонецЕсли;
	КонецЕсли;
	
	// Редактирование текста наименования организации
	ИспользоватьТекстКорреспондента = ЗначениеЗаполнено(Объект.ТекстКорреспондента);
	Элементы.ТекстКорреспондента.Доступность = ИспользоватьТекстКорреспондента;
	
	Если ИспользоватьТекстКорреспондента Тогда
		ТекстКорреспондента = Объект.ТекстКорреспондента;
	Иначе
		ЗаполнитьТекстКорреспондента();
	КонецЕсли;
	
	// Обмен с банками
	ДиректБанкНастроен = ЗначениеЗаполнено(СоглашениеЭД);
	
	Элементы.ДекорацияСоглашениеЭД.Доступность = Объект.ИспользоватьПрямойОбменСБанком И Объект.ОбменСБанкомВключен;
	Элементы.ДекорацияДобавитьСоглашениеЭД.Доступность = Объект.ИспользоватьПрямойОбменСБанком И Объект.ОбменСБанкомВключен;
	Элементы.ДекорацияНетПравСоглашениеЭД.Доступность = Объект.ИспользоватьПрямойОбменСБанком И Объект.ОбменСБанкомВключен;
	
	Элементы.ФайлВыгрузки.Видимость  = Объект.ИспользоватьОбменСБанком И Объект.ОбменСБанкомВключен;
	Элементы.Кодировка.Видимость     = Объект.ИспользоватьОбменСБанком И Объект.ОбменСБанкомВключен;
	Элементы.ФайлЗагрузки.Видимость  = Объект.ИспользоватьОбменСБанком И Объект.ОбменСБанкомВключен;
	
	Элементы.РежимОбменаКлиентБанка.Доступность = Объект.ОбменСБанкомВключен;
	Элементы.РежимОбменаПрямойОбмен.Доступность = Не Объект.РучноеИзменениеРеквизитовБанка И Объект.ОбменСБанкомВключен;
	Элементы.ДекорацияПояснениеИспользованиеПрямогоОбменаДаннымиСБанком.Видимость = Не Объект.РучноеИзменениеРеквизитовБанка
		И Не ДиректБанкНастроен;
		
	Элементы.СтраницаОбменСБанком.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Настройка обмена с банком %1'"),
		?(Объект.ОбменСБанкомВключен, НСтр("ru = '(включен)'"), НСтр("ru = '(не включен)'")));
	
	Элементы.ДекорацияПояснениеИзмененыРеквизитыБанка.Видимость = Объект.РучноеИзменениеРеквизитовБанка;
	
	Элементы.ДекорацияОтступИспользованиеПрямогоОбменаДаннымиСБанком.Видимость = Элементы.ДекорацияПояснениеИзмененыРеквизитыБанка.Видимость
		Или Элементы.ДекорацияПояснениеИспользованиеПрямогоОбменаДаннымиСБанком.Видимость;
	
	УстановитьСтраницуСоглашенийЭД();
	
	Элементы.БИКБанка.КнопкаВыбора = Не Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.БИКБанкаДляРасчетов.КнопкаВыбора = Не Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютныйСчет = (ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) И Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	ИностранныйБанк = ?(Объект.ИностранныйБанк, 1, 0);
	
	Если Объект.ИспользоватьПрямойОбменСБанком Тогда
		РежимОбмена = 1;
	ИначеЕсли Объект.ИспользоватьОбменСБанком Тогда
		РежимОбмена = 2;
	Иначе
		РежимОбмена = 0;
	КонецЕсли;
	
	ПрочитатьТаблицуСоответствияБИКСВИФТ();
	ЗаполнитьРеквизитыБанка();
	ОбновитьЭлементыФормыИСоглашениеЭД();
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыБанка()
	
	БИКБанка		  = "";
	НаименованиеБанка = "";
	КоррСчетБанка	  = "";
	ГородБанка		  = "";
	
	БИКБанкаДляРасчетов			 = "";
	КоррСчетБанкаДляРасчетов	 = "";
	НаименованиеБанкаДляРасчетов = "";
	ГородБанкаДляРасчетов		 = "";
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		БИКБанка		  = Объект.БИКБанка;
		НаименованиеБанка = Объект.НаименованиеБанка;
		КоррСчетБанка	  = Объект.КоррСчетБанка;
		ГородБанка		  = Объект.ГородБанка;
	Иначе
		Если НЕ Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ЗначениеЗаполнено(Объект.БанкДляРасчетов)
			Или ЗначениеЗаполнено(Объект.БИКБанкаДляРасчетов)
			Или ЗначениеЗаполнено(Объект.СВИФТБанкаДляРасчетов) Тогда
			ИспользуетсяБанкДляРасчетов = Истина;
		Иначе
			ИспользуетсяБанкДляРасчетов = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		БИКБанкаДляРасчетов			 = Объект.БИКБанкаДляРасчетов;
		НаименованиеБанкаДляРасчетов = Объект.НаименованиеБанкаДляРасчетов;
		КоррСчетБанкаДляРасчетов	 = Объект.КоррСчетБанкаДляРасчетов;
		ГородБанкаДляРасчетов		 = Объект.ГородБанкаДляРасчетов;
	Иначе
		Если НЕ Объект.БанкДляРасчетов.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", Объект.БанкДляРасчетов, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Программа    = "";
		Объект.Кодировка    = "Windows";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьАвтоНаименование()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4) 
		+ ?(ЗначениеЗаполнено(НаименованиеБанка), " в " + Строка(НаименованиеБанка), "")
		+ ", " + СокрЛП(Объект.Владелец);
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(НаименованиеБанка), Строка(НаименованиеБанка), "")
		+ ", " + СокрЛП(объект.Владелец)
		+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
	Иначе	
		
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4) 
		+ ?(ЗначениеЗаполнено(Объект.Банк), " в " + Строка(Объект.Банк), "")
		+ ", " + СокрЛП(Объект.Владелец);
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(Объект.Банк), Строка(Объект.Банк), "")
		+ ", " + СокрЛП(объект.Владелец)
		+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
	КонецЕсли;
	
	Возврат СтрокаНаименования;

КонецФункции

&НаКлиенте
Процедура БИКБанкаПриИзменении(Элемент)
	
	ИмяРедактируемогоРеквизита = "БИКБанка";
	РеквизитБанкаПриИзменении("БИКБанка");
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяРедактируемогоРеквизита = "БИКБанка";
	РеквизитБанкаПриВыборе("БИКБанка", ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(БИКБанка) Тогда
		ИмяРедактируемогоРеквизита = "БИКБанка";
		РеквизитБанкаОткрытие("БИКБанка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаДляРасчетовПриИзменении(Элемент)
	
	ИмяРедактируемогоРеквизита = "БИКБанкаДляРасчетов";
	РеквизитБанкаПриИзменении("БИКБанкаДляРасчетов");
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаДляРасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяРедактируемогоРеквизита = "БИКБанкаДляРасчетов";
	РеквизитБанкаПриВыборе("БИКБанкаДляРасчетов", ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаДляРасчетовОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(БИКБанкаДляРасчетов) Тогда
		ИмяРедактируемогоРеквизита = "БИКБанкаДляРасчетов";
		РеквизитБанкаОткрытие("БИКБанкаДляРасчетов");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РучноеИзменениеРеквизитовБанкаПриИзменении(Элемент)
	
	ЗаписьОБанке = "";
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		Если НЕ Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Истина);
		КонецЕсли;	
		Объект.Банк = "";
		Если Объект.ИспользоватьПрямойОбменСБанком Тогда
			Объект.ИспользоватьПрямойОбменСБанком = Ложь;
			РежимОбмена = 0;
		КонецЕсли;
	Иначе
		ЗаполнитьРеквизитыБанкаПоБИК("Банк", Объект.БИКБанка, Истина);
		Объект.БИКБанка			 = "";
		Объект.НаименованиеБанка = "";
		Объект.КоррСчетБанка	 = "";
		Объект.ГородБанка		 = "";
		Объект.АдресБанка		 = "";
		Объект.ТелефоныБанка	 = "";
	КонецЕсли;
	
	БанкПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура РучноеИзменениеРеквизитовБанкаДляРасчетовПриИзменении(Элемент)
	
	ЗаписьОБанке = "";
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		Если НЕ Объект.БанкДляРасчетов.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", Объект.БанкДляРасчетов, Истина);
		КонецЕсли;	
		Объект.БанкДляРасчетов = "";
	Иначе
		ЗаполнитьРеквизитыБанкаПоБИК("БанкДляРасчетов", Объект.БИКБанкаДляРасчетов, Истина);
		Объект.БИКБанкаДляРасчетов			= "";
		Объект.НаименованиеБанкаДляРасчетов = "";
		Объект.КоррСчетБанкаДляРасчетов		= "";
		Объект.ГородБанкаДляРасчетов		= "";
		Объект.АдресБанкаДляРасчетов		= "";
		Объект.ТелефоныБанкаДляРасчетов		= "";
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриВыборе(ИмяЭлемента, Форма)
	
	Если ИмяЭлемента = "БИКБанка" Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанка Тогда
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
			СтруктураПараметров.Вставить("ТекущаяСтрока", Объект.Банк);
			СтруктураПараметров.Вставить("ПараметрВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
			ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, Форма);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "БИКБанкаДляРасчетов" Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
			СтруктураПараметров.Вставить("ТекущаяСтрока", Объект.БанкДляРасчетов);
			СтруктураПараметров.Вставить("ПараметрВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
			ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, Форма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаОткрытие(ИмяЭлемента)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
	ЗначенияПараметров = Новый Структура;
	
	Если ИмяЭлемента = "БИКБанка" Тогда
		
		СтруктураПараметров.Вставить("РучноеИзменение", Объект.РучноеИзменениеРеквизитовБанка);
		
		Если Объект.РучноеИзменениеРеквизитовБанка Тогда
			ЗначенияПараметров.Вставить("БИК", БИКБанка);
			ЗначенияПараметров.Вставить("Наименование", НаименованиеБанка);
			ЗначенияПараметров.Вставить("КоррСчет", КоррСчетБанка);
			ЗначенияПараметров.Вставить("Город", ГородБанка);
			ЗначенияПараметров.Вставить("Адрес", Объект.АдресБанка);
			ЗначенияПараметров.Вставить("Телефоны", Объект.ТелефоныБанка);
		Иначе
			СтруктураПараметров.Вставить("Банк", Объект.Банк);
		КонецЕсли;
		
	ИначеЕсли ИмяЭлемента = "БИКБанкаДляРасчетов" Тогда
		
		СтруктураПараметров.Вставить("РучноеИзменение", Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов);
		
		Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
			ЗначенияПараметров.Вставить("БИК", БИКБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Наименование", НаименованиеБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("КоррСчет", КоррСчетБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Город", ГородБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Адрес", Объект.АдресБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Телефоны", Объект.ТелефоныБанкаДляРасчетов);
		Иначе
			СтруктураПараметров.Вставить("Банк", Объект.БанкДляРасчетов);
		КонецЕсли;

	КонецЕсли;
	
	СтруктураПараметров.Вставить("ЗначенияПолей", ЗначенияПараметров);
	ОткрытьФорму("Справочник.БанковскиеСчетаОрганизаций.Форма.РеквизитыБанка",СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзменении(ИмяЭлемента)
	
	Если ИмяЭлемента = "БИКБанка" Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанка И Не Объект.ИностранныйБанк Тогда
			Если Не ЗаполнитьРеквизитыБанкаПоБИК("Банк", БИКБанка, Истина) Тогда
				
				СписокВариантовОтветовНаВопрос = Новый СписокЗначений;
				СписокВариантовОтветовНаВопрос.Добавить("ВыбратьИзСписка",  НСтр("ru = 'Выбрать из списка'"));
				СписокВариантовОтветовНаВопрос.Добавить("ПродолжитьВвод",   НСтр("ru = 'Продолжить ввод'"));
				СписокВариантовОтветовНаВопрос.Добавить("ОтменитьВвод",     НСтр("ru = 'Отменить ввод'"));
				
				ТекстВопроса = НСтр("ru = 'Банк с БИК  %Значение% не найден в классификаторе банков.'");
				ТекстВопроса = СтрЗаменить(ТекстВопроса, "%Значение%", БИКБанка);
				
				Ответ = Неопределено;

				
				ПоказатьВопрос(
					Новый ОписаниеОповещения("РеквизитБанкаПриИзмененииПослеВопроса",
					ЭтотОбъект,
					Новый Структура("ИмяЭлемента, СписокВариантовОтветовНаВопрос, ТекстВопроса",
						ИмяЭлемента, СписокВариантовОтветовНаВопрос, ТекстВопроса)),
					ТекстВопроса,
					СписокВариантовОтветовНаВопрос,
					0,,
					НСтр("ru = 'Выбор банка из классификатора'"));
				Возврат;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "БИКБанкаДляРасчетов" Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов И Не ВалютныйСчет Тогда
			Если Не ЗаполнитьРеквизитыБанкаПоБИК("БанкДляРасчетов", БИКБанкаДляРасчетов, Истина) Тогда
				
				СписокВариантовОтветовНаВопрос = Новый СписокЗначений;
				СписокВариантовОтветовНаВопрос.Добавить("ВыбратьИзСписка", НСтр("ru = 'Выбрать из списка'"));
				СписокВариантовОтветовНаВопрос.Добавить("ПродолжитьВвод",  НСтр("ru = 'Продолжить ввод'"));
				СписокВариантовОтветовНаВопрос.Добавить("ОтменитьВвод",    НСтр("ru = 'Отменить ввод'"));
				
				ТекстВопроса = НСтр("ru = 'Банк с БИК  %Значение% не найден в классификаторе банков.'");
				ТекстВопроса = СтрЗаменить(ТекстВопроса, "%Значение%", БИКБанкаДляРасчетов);
				
				ПоказатьВопрос(
					Новый ОписаниеОповещения("РеквизитБанкаПриИзмененииЗавершение", ЭтотОбъект),
					ТекстВопроса,
					СписокВариантовОтветовНаВопрос,
					0,,
					НСтр("ru = 'Выбор банка-корреспондента из классификатора'"));
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	БанкПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзмененииПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ИмяЭлемента = ДополнительныеПараметры.ИмяЭлемента;
	СписокВариантовОтветовНаВопрос = ДополнительныеПараметры.СписокВариантовОтветовНаВопрос;
	ТекстВопроса = ДополнительныеПараметры.ТекстВопроса;
	
	Ответ = РезультатВопроса;
	
	Если Ответ = "ОтменитьВвод" Тогда
		БИКБанка = "";
	ИначеЕсли Ответ = "ПродолжитьВвод" Тогда
		Объект.РучноеИзменениеРеквизитовБанка = Истина;
		Объект.БИКБанка = БИКБанка;
	ИначеЕсли Ответ = "ВыбратьИзСписка" Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Реквизит", "БИКБанка");
		ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтаФорма);
	КонецЕсли;
	
	ОбновитьЭлементыФормыИСоглашениеЭД();
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = "ОтменитьВвод" Тогда
		БИКБанкаДляРасчетов = "";
	ИначеЕсли Ответ = "ПродолжитьВвод" Тогда
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = Истина;
		Объект.БИКБанкаДляРасчетов = БИКБанкаДляРасчетов;
	ИначеЕсли Ответ = "ВыбратьИзСписка" Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Реквизит", "БИКБанкаДляРасчетов");
		ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтаФорма);
	КонецЕсли;
	
	ОбновитьЭлементыФормыИСоглашениеЭД();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыФормыИСоглашениеЭД();
	
	ЗаполнитьСоглашениеЭД();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоглашениеЭД()
	
	СоглашениеЭД = Неопределено;
	
	Если ЗначениеЗаполнено(Объект.Владелец) И ЗначениеЗаполнено(Объект.Банк)
		И ПравоДоступа("Чтение", Метаданные.Справочники.НастройкиОбменСБанками) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Соглашения.Ссылка КАК СоглашениеЭД,
		|	Соглашения.Недействительна КАК Статус
		|ИЗ
		|	Справочник.НастройкиОбменСБанками КАК Соглашения
		|ГДЕ
		|	Соглашения.Организация = &Организация
		|	И Соглашения.Банк = &Банк";
		
		Запрос.УстановитьПараметр("Организация", Объект.Владелец);
		Запрос.УстановитьПараметр("Банк", Объект.Банк);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СоглашениеЭД = Выборка.СоглашениеЭД;
			Если Выборка.Статус Тогда
				СтатусСоглашенияЭД = НСтр("ru='Не действует'");
			Иначе
				СтатусСоглашенияЭД = НСтр("ru='Действует'");
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтраницуСоглашенийЭД()
	
	Если Не Объект.ИспользоватьПрямойОбменСБанком Тогда
		Элементы.ГруппаСоглашениеЭД.ТекущаяСтраница = Элементы.СтраницаЕстьСоглашениеЭД;
		Элементы.ДекорацияСоглашениеЭД.Заголовок = "";
		Элементы.ДекорацияСоглашениеЭД.Гиперссылка = Ложь;
	ИначеЕсли ЗначениеЗаполнено(СоглашениеЭД) Тогда
		Элементы.ГруппаСоглашениеЭД.ТекущаяСтраница = Элементы.СтраницаЕстьСоглашениеЭД;
		Элементы.ДекорацияСоглашениеЭД.Заголовок = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1, (%2)'"), СоглашениеЭД, СтатусСоглашенияЭД);
		Элементы.ДекорацияСоглашениеЭД.Гиперссылка = Истина;
	ИначеЕсли ПравоДоступа("Добавление", Метаданные.Справочники.НастройкиОбменСБанками) Тогда
		Элементы.ГруппаСоглашениеЭД.ТекущаяСтраница = Элементы.СтраницаНетСоглашенияЭДДобавление;
	Иначе
		Элементы.ГруппаСоглашениеЭД.ТекущаяСтраница = Элементы.СтраницаНетСоглашенияЭДНетПрав;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюПоСоглашениямЭД(Результат, ДополнительныеПараметры)
	
	ОбновитьЭлементыФормыИСоглашениеЭД();
	
КонецПроцедуры

&НаСервере
Процедура ВалютаДенежныхСредствПриИзмененииСервер()
	
	СформироватьАвтоНаименование();
	
	УстановитьПараметрыРедактированияРеквизитов();
	
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыРедактированияРеквизитов()
	
	Если Объект.ИностранныйБанк Тогда
		Объект.РучноеИзменениеРеквизитовБанка = Истина;
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = ВалютныйСчет;
	Иначе
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = ВалютныйСчет;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиДубльБанковскогоСчета(Ссылка, НомерСчета, Организация, Валюта, Банк)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	БанковскиеСчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	Не БанковскиеСчета.ПометкаУдаления
	|	И БанковскиеСчета.Ссылка <> &Ссылка
	|	И БанковскиеСчета.НомерСчета = &НомерСчета
	|	И БанковскиеСчета.Владелец = &Организация
	|	И БанковскиеСчета.ВалютаДенежныхСредств = &Валюта
	|	И БанковскиеСчета.Банк = &Банк
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НомерСчета", НомерСчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("Банк", Банк);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПрочитатьТаблицуСоответствияБИКСВИФТ()
	
	СоответствиеБИКСВИФТXML = Справочники.БанковскиеСчетаОрганизаций.ПолучитьМакет("СоответствиеБИКSWIFT").ПолучитьТекст();
	СоответствиеБИКСВИФТ.Загрузить(ОбщегоНазначения.ПрочитатьXMLВТаблицу(СоответствиеБИКСВИФТXML).Данные);
	
КонецПроцедуры

&НаСервере
Функция СВИФТпоБИК(БИК)
	
	СтрокиСоответствия = СоответствиеБИКСВИФТ.НайтиСтроки(Новый Структура("БИК", БИК));
	Если СтрокиСоответствия.Количество() = 1 Тогда
		Возврат СтрокиСоответствия[0].SWIFT;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура БанкПриИзменении()
	
	Объект.ФайлВыгрузки = Справочники.БанковскиеСчетаОрганизаций.ФайлВыгрузкиПоУмолчанию(Объект.Банк);
	Объект.ФайлЗагрузки = Справочники.БанковскиеСчетаОрганизаций.ФайлЗагрузкиПоУмолчанию(Объект.Банк);
	
	ОбновитьЭлементыФормыИСоглашениеЭД();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
