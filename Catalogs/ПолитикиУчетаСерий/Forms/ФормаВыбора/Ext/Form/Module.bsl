
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НоменклатураСервер.НастроитьОтборВПараметрахПолитикУчетаСерий(Параметры);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	Элементы.ДекорацияРасшифровкаОтбора.Видимость = Ложь;
	
	Если Параметры.Свойство("ОтборПоНастройкамПолитики") Тогда
		НастроитьСписок("ОтборПоНастройкамПолитики");
	ИначеЕсли Параметры.Свойство("ОтборПоТипуПолитики") Тогда
		НастроитьСписок("ОтборПоТипуПолитики");
		
		Если Параметры.Отбор.Свойство("ДляСклада") Тогда
			Параметры.Отбор.Удалить("ДляСклада");
		КонецЕсли;
		Если Параметры.Отбор.Свойство("ДляПроизводства") Тогда
			Параметры.Отбор.Удалить("ДляПроизводства");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НастроитьСписок(Отбор, ОтключениеОтбора = Ложь)
	
	ВидНоменклатуры    = Неопределено;
	ПолитикаУчетаСерий = Неопределено;
	
	Параметры.Свойство("ВидНоменклатуры",    ВидНоменклатуры);
	Параметры.Свойство("ПолитикаУчетаСерий", ПолитикаУчетаСерий);
	
	ТекстЗапроса = ТекстЗапросаДинамическогоСписка();
	
	Если (Не ЗначениеЗаполнено(ВидНоменклатуры)
			И Не ЗначениеЗаполнено(ПолитикаУчетаСерий))
		Или ОтключениеОтбора Тогда
		Список.ТекстЗапроса = ТекстЗапроса;
		Элементы.ДекорацияРасшифровкаОтбора.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	ИспользоватьНеотфактурованныеПоставки = ПолучитьФункциональнуюОпцию("ИспользоватьНеотфактурованныеПоставки");
	ИспользоватьТоварыВПутиОтПоставщиков = ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков");
	
	ОтборПоНастройкамПолитики = (Отбор = "ОтборПоНастройкамПолитики")
		И (ИспользоватьНеотфактурованныеПоставки
			Или ИспользоватьТоварыВПутиОтПоставщиков);
	ОтборПоТипуПолитики       = (Отбор = "ОтборПоТипуПолитики");
	
	Если Не ОтборПоНастройкамПолитики
		И Не ОтборПоТипуПолитики Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтборПоНастройкамПолитики
		И ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	ПолитикиУчетаСерийПереопределяемый.УчетТоваровВПутиОтПоставщикаПоСериям = &УчетТоваровВПутиОтПоставщикаПоСериям
		|	И ПолитикиУчетаСерийПереопределяемый.УчетСерийВНеотфактурованныхПоставкахТоваров = &УчетСерийВНеотфактурованныхПоставкахТоваров";
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		ПараметрыЗапроса = Запрос.НайтиПараметры();

		ИменаРеквизитов = Новый Структура;
		Для Каждого Параметр Из ПараметрыЗапроса Цикл
			ИменаРеквизитов.Вставить(Параметр.Имя, "ПолитикаУчетаСерий." + Параметр.Имя);
		КонецЦикла;
		
		СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидНоменклатуры, ИменаРеквизитов);
		
		Список.ТекстЗапроса = ТекстЗапроса;
		
		Для Каждого Параметр Из ПараметрыЗапроса Цикл
			ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																				Параметр.Имя,
																				СтарыеРеквизиты[Параметр.Имя],
																				Истина);
		КонецЦикла;
		
		Элементы.Список.Обновить();
		
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Отобраны политики учета серий, выбор которых в виде номенклатуры, которая ранее уже использовалась в программе, не приведет к проблемам в учете.'")));
		
		Если Пользователи.РолиДоступны("РедактированиеРеквизитовОбъектов") Тогда
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Отключить отбор'"),
			,
			,
			,
			"ОтключитьОтбор"));
		КонецЕсли;
		Элементы.ДекорацияРасшифровкаОтбора.Видимость = Истина;
		Элементы.ДекорацияРасшифровкаОтбора.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок);
	
	ИначеЕсли ОтборПоТипуПолитики
		И ЗначениеЗаполнено(ПолитикаУчетаСерий) Тогда
		
		// Если политика вида номенклатуры по умолчанию - "Учет себестоимости по сериям", то на отдельных складах
		// и подразделениях можно выбирать только предопределенную политику "Не учитывать серии".
		
		ТипПолитикиВидаНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПолитикаУчетаСерий, "ТипПолитики");
		Если ТипПолитикиВидаНоменклатуры = Перечисления.ТипыПолитикУказанияСерий.УчетСебестоимостиПоСериям Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|ГДЕ
			|	ПолитикиУчетаСерийПереопределяемый.Предопределенный = ИСТИНА";
		КонецЕсли;
		
		Список.ТекстЗапроса = ТекстЗапроса;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаДинамическогоСписка()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПолитикиУчетаСерийПереопределяемый.Ссылка,
	|	ПолитикиУчетаСерийПереопределяемый.ПометкаУдаления,
	|	ПолитикиУчетаСерийПереопределяемый.Наименование,
	|	ПолитикиУчетаСерийПереопределяемый.ДляПроизводства,
	|	ПолитикиУчетаСерийПереопределяемый.ДляСклада,
	|	ПолитикиУчетаСерийПереопределяемый.Описание,
	|	ПолитикиУчетаСерийПереопределяемый.ТипПолитики,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПроизводствеПродукции,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриРасходеМатериалов,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПоФактуОтбора,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриВозвратеНаСклад,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриВозвратеНепринятыхПолучателемТоваров,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриВыпускеВПодразделение,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриДвиженииМатериалов,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриДвиженииПродукции,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриМаркировкеПродукцииДляГИСМ,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриОтгрузке,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриОтгрузкеВРозницу,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриОтгрузкеКлиенту,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриОтгрузкеКомплектовДляРазборки,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриОтгрузкеКомплектующихДляСборки,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриОтгрузкеНаВнутренниеНужды,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриОтгрузкеПоВозвратуПоставщику,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриОтгрузкеПоПеремещению,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриОтраженииЗатратНаПроизводство,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриОтраженииИзлишков,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриОтраженииНедостач,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПеремещенииМеждуПомещениями,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПересчетеТоваров,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПланированииОтбора,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПланированииОтгрузки,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПолученииМатериалов,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПриемке,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПриемкеКомплектующихПослеРазборки,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПриемкеОтПоставщика,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПриемкеПоВозвратуОтКлиента,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПриемкеПоПеремещению,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПриемкеПоПрочемуОприходованию,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПриемкеПродукцииИзПроизводства,
	|	ПолитикиУчетаСерийПереопределяемый.УказыватьПриПриемкеСобранныхКомплектов,
	|	ПолитикиУчетаСерийПереопределяемый.УчетСерийВНеотфактурованныхПоставкахТоваров,
	|	ПолитикиУчетаСерийПереопределяемый.УчетСерийПоFEFO,
	|	ПолитикиУчетаСерийПереопределяемый.УчетТоваровВПутиОтПоставщикаПоСериям,
	|	ПолитикиУчетаСерийПереопределяемый.УчитыватьОстаткиСерий,
	|	ПолитикиУчетаСерийПереопределяемый.УчитыватьСебестоимостьПоСериям,
	|	ПолитикиУчетаСерийПереопределяемый.Предопределенный,
	|	ПолитикиУчетаСерийПереопределяемый.ИмяПредопределенныхДанных
	|ИЗ
	|	Справочник.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийПереопределяемый";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиенте
Процедура ДекорацияРасшифровкаОтбораОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "ОтключитьОтбор" Тогда 
		НастроитьСписок(,Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
