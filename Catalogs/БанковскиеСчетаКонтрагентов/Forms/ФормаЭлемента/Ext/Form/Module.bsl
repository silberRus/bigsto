&НаКлиенте
Перем ИмяРедактируемогоРеквизита;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)

	Если (ИсточникВыбора.ИмяФормы = "Справочник.БанковскиеСчетаКонтрагентов.Форма.РеквизитыБанка") Тогда
		Если Не ПустаяСтрока(РезультатВыбора) Тогда
			Если РезультатВыбора.Реквизит = "БИКБанка" Тогда
				Объект.РучноеИзменениеРеквизитовБанка = РезультатВыбора.РучноеИзменение;
				Если РезультатВыбора.РучноеИзменение Тогда
					Объект.Банк				 = "";
					Объект.БИКБанка			 = РезультатВыбора.ЗначенияПолей.БИК;
					Объект.НаименованиеБанка = РезультатВыбора.ЗначенияПолей.Наименование;
					Объект.КоррСчетБанка	 = РезультатВыбора.ЗначенияПолей.КоррСчет;
					Объект.ГородБанка		 = РезультатВыбора.ЗначенияПолей.Город;
					Объект.АдресБанка		 = РезультатВыбора.ЗначенияПолей.Адрес;
					Объект.ТелефоныБанка	 = РезультатВыбора.ЗначенияПолей.Телефоны;
					
					БИКБанка		  = РезультатВыбора.ЗначенияПолей.БИК;
					КоррСчетБанка	  = РезультатВыбора.ЗначенияПолей.КоррСчет;
					НаименованиеБанка = РезультатВыбора.ЗначенияПолей.Наименование;
					ГородБанка		  = РезультатВыбора.ЗначенияПолей.Город;
				Иначе
					Объект.Банк				 = РезультатВыбора.Банк;
					Объект.БИКБанка			 = "";
					Объект.НаименованиеБанка = "";
					Объект.КоррСчетБанка	 = "";
					Объект.ГородБанка		 = "";
					Объект.АдресБанка		 = "";
					Объект.ТелефоныБанка	 = "";
					
                    ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Ложь);
				КонецЕсли;
			ИначеЕсли РезультатВыбора.Реквизит = "БИКБанкаДляРасчетов" Тогда
				Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = РезультатВыбора.РучноеИзменение;
				Если РезультатВыбора.РучноеИзменение Тогда
					Объект.БанкДляРасчетов				= "";
					Объект.БИКБанкаДляРасчетов			= РезультатВыбора.ЗначенияПолей.БИК;
					Объект.НаименованиеБанкаДляРасчетов = РезультатВыбора.ЗначенияПолей.Наименование;
					Объект.КоррСчетБанкаДляРасчетов		= РезультатВыбора.ЗначенияПолей.КоррСчет;
					Объект.ГородБанкаДляРасчетов		= РезультатВыбора.ЗначенияПолей.Город;
					Объект.АдресБанкаДляРасчетов		= РезультатВыбора.ЗначенияПолей.Адрес;
					Объект.ТелефоныБанкаДляРасчетов		= РезультатВыбора.ЗначенияПолей.Телефоны;
					
					БИКБанкаДляРасчетов			 = РезультатВыбора.ЗначенияПолей.БИК; 
					КоррСчетБанкаДляРасчетов	 = РезультатВыбора.ЗначенияПолей.КоррСчет;
					НаименованиеБанкаДляРасчетов = РезультатВыбора.ЗначенияПолей.Наименование;
					ГородБанкаДляРасчетов		 = РезультатВыбора.ЗначенияПолей.Город;
				Иначе
					Объект.БанкДляРасчетов				= РезультатВыбора.Банк;
					Объект.БИКБанкаДляРасчетов			= "";
					Объект.НаименованиеБанкаДляРасчетов = "";
					Объект.КоррСчетБанкаДляРасчетов		= "";
					Объект.ГородБанкаДляРасчетов		= "";
					Объект.АдресБанкаДляРасчетов		= "";
					Объект.ТелефоныБанкаДляРасчетов		= "";
					
					ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", Объект.БанкДляРасчетов, Ложь);
                КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли (ИсточникВыбора.ИмяФормы = "Справочник.КлассификаторБанков.Форма.ФормаВыбора") Тогда	
		Если ТипЗнч(РезультатВыбора) = Тип("СправочникСсылка.КлассификаторБанков") Тогда
			Если ИмяРедактируемогоРеквизита = "БИКБанка" Тогда
				Объект.Банк				 = РезультатВыбора;
				Объект.БИКБанка			 = "";
				Объект.НаименованиеБанка = "";
				Объект.КоррСчетБанка	 = "";
				Объект.ГородБанка		 = "";
				Объект.АдресБанка		 = "";
				Объект.ТелефоныБанка	 = "";

				ЗаполнитьРеквизитыБанкаПоБанку("Банк", РезультатВыбора, Ложь);
			ИначеЕсли ИмяРедактируемогоРеквизита = "БИКБанкаДляРасчетов" Тогда
				Объект.БанкДляРасчетов				= РезультатВыбора;
				Объект.БИКБанкаДляРасчетов			= "";
				Объект.НаименованиеБанкаДляРасчетов = "";
				Объект.КоррСчетБанкаДляРасчетов		= "";
				Объект.ГородБанкаДляРасчетов		= "";
				Объект.АдресБанкаДляРасчетов		= "";
				Объект.ТелефоныБанкаДляРасчетов		= "";

				ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", РезультатВыбора, Ложь);
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
       
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ)
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		Если БИКБанка <> Объект.БИКБанка Тогда
			Объект.БИКБанка = БИКБанка;
		КонецЕсли;
		Если КоррСчетБанка <> Объект.КоррСчетБанка Тогда
			Объект.КоррСчетБанка = КоррСчетБанка;
		КонецЕсли;
		Если НаименованиеБанка <> Объект.НаименованиеБанка Тогда
			Объект.НаименованиеБанка = НаименованиеБанка;
		КонецЕсли;
		Если ГородБанка <> Объект.ГородБанка Тогда
			Объект.ГородБанка = ГородБанка;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		Если БИКБанкаДляРасчетов <> Объект.БИКБанкаДляРасчетов Тогда
			Объект.БИКБанкаДляРасчетов = БИКБанкаДляРасчетов;
		КонецЕсли;
		Если КоррСчетБанкаДляРасчетов <> Объект.КоррСчетБанкаДляРасчетов Тогда
			Объект.КоррСчетБанкаДляРасчетов = КоррСчетБанкаДляРасчетов;
		КонецЕсли;
		Если НаименованиеБанкаДляРасчетов <> Объект.НаименованиеБанкаДляРасчетов Тогда
			Объект.НаименованиеБанкаДляРасчетов = НаименованиеБанкаДляРасчетов;
		КонецЕсли;
		Если ГородБанкаДляРасчетов <> Объект.ГородБанкаДляРасчетов Тогда
			Объект.ГородБанкаДляРасчетов = ГородБанкаДляРасчетов;
		КонецЕсли;
	КонецЕсли;
	
	// Заполним текст корреспондента.
	Если ИспользоватьТекстКорреспондента Тогда
		Объект.ТекстКорреспондента = ТекстКорреспондента;
	Иначе
		Объект.ТекстКорреспондента = "";
	КонецЕсли;
	
	Если ИспользоватьИННКорреспондента Тогда
		Объект.ИННКорреспондента = ИННКорреспондента;
	Иначе
		Объект.ИННКорреспондента = "";
	КонецЕсли;
	
	Если ИспользоватьКППКорреспондента Тогда
		Объект.КППКорреспондента = КППКорреспондента;
	Иначе
		Объект.КППКорреспондента = "";
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.Наименование) Тогда
		Объект.Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Объект.НомерСчета) Тогда
		НомерСчетаПриИзмененииСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользуетсяБанкДляРасчетовПриИзменении(Элемент)

	Элементы.БИКБанкаДляРасчетов.Доступность					   = ИспользуетсяБанкДляРасчетов;
	Элементы.РучноеИзменениеРеквизитовБанкаДляРасчетов.Доступность = ИспользуетсяБанкДляРасчетов;
	Элементы.КоррСчетБанкаДляРасчетов.Доступность				   = ИспользуетсяБанкДляРасчетов;
	Элементы.НаименованиеБанкаДляРасчетов.Доступность			   = ИспользуетсяБанкДляРасчетов;
	Элементы.ГородБанкаДляРасчетов.Доступность					   = ИспользуетсяБанкДляРасчетов;

	Если НЕ ИспользуетсяБанкДляРасчетов Тогда
		Объект.БанкДляРасчетов							 = "";
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = "";
		Объект.БИКБанкаДляРасчетов						 = "";
		Объект.НаименованиеБанкаДляРасчетов				 = "";
		Объект.КоррСчетБанкаДляРасчетов					 = "";
		Объект.ГородБанкаДляРасчетов					 = "";
		Объект.АдресБанкаДляРасчетов					 = "";
		Объект.ТелефоныБанкаДляРасчетов					 = "";
		БИКБанкаДляРасчетов								 = "";
		КоррСчетБанкаДляРасчетов						 = "";
		НаименованиеБанкаДляРасчетов					 = "";
		ГородБанкаДляРасчетов							 = "";
	КонецЕсли;
	
	ИспользуетсяБанкДляРасчетовПриИзмененииНаСервере();
	
КонецПроцедуры

Процедура ИспользуетсяБанкДляРасчетовПриИзмененииНаСервере()
	
	УстановитьПараметрыРедактированияРеквизитов();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаПриИзменении(Элемент)
	
	ИмяРедактируемогоРеквизита = "БИКБанка";
	РеквизитБанкаПриИзменении(Новый ОписаниеОповещения("БИКБанкаПриИзмененииЗавершение", ЭтотОбъект), "БИКБанка");
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаПриИзмененииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяРедактируемогоРеквизита = "БИКБанка";
	РеквизитБанкаПриВыборе("БИКБанка", ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(БИКБанка) Тогда
		ИмяРедактируемогоРеквизита = "БИКБанка";
		РеквизитБанкаОткрытие("БИКБанка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаДляРасчетовПриИзменении(Элемент)
	
	ИмяРедактируемогоРеквизита = "БИКБанкаДляРасчетов";
	РеквизитБанкаПриИзменении(Неопределено, "БИКБанкаДляРасчетов");
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаДляРасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяРедактируемогоРеквизита = "БИКБанкаДляРасчетов";
	РеквизитБанкаПриВыборе("БИКБанкаДляРасчетов", ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура БИКБанкаДляРасчетовОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(БИКБанкаДляРасчетов) Тогда
		ИмяРедактируемогоРеквизита = "БИКБанкаДляРасчетов";
		РеквизитБанкаОткрытие("БИКБанкаДляРасчетов");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТекстКорреспондентаПриИзменении(Элемент)
	
	Элементы.ТекстКорреспондента.Доступность = ИспользоватьТекстКорреспондента;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеБанкаПриИзменении(Элемент)
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
	
	ВалютныйСчет = (ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) И Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	ВалютаДенежныхСредствПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВалютаДенежныхСредствПриИзмененииСервер()
	
	СформироватьАвтоНаименование();
	
	УстановитьПараметрыРедактированияРеквизитов();
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ТекстОшибки = "";
	ОчиститьСообщения();
	Валютный = (Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	Если НЕ ПустаяСтрока(Текст)
		И Не Объект.ИностранныйБанк
		И НЕ ДенежныеСредстваКлиентСервер.ПроверитьКорректностьНомераСчета(Текст, Валютный, ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "НомерСчета", "Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИностранныйБанкПриИзменении(Элемент)
	
	Объект.ИностранныйБанк = (ИностранныйБанк = 1);
	
	ИностранныйБанкПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ИностранныйБанкПриИзмененииНаСервере()
	
	УстановитьПараметрыРедактированияРеквизитов();
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтдельныйСчетГОЗПриИзменении(Элемент)
	
	Если Не Объект.ОтдельныйСчетГОЗ Тогда
		Объект.ГосударственныйКонтракт = Неопределено;
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ГосударственныйКонтрактПриИзменении(Элемент)
	
	ГосударственныйКонтрактПриИзмененииНаСервере();
	
	ИмяРедактируемогоРеквизита = "БИКБанка";
	РеквизитБанкаПриИзменении(Новый ОписаниеОповещения("БИКБанкаПриИзмененииЗавершение", ЭтотОбъект), "БИКБанка");
	
КонецПроцедуры

&НаСервере
Процедура ГосударственныйКонтрактПриИзмененииНаСервере()
	
	БИКБанка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ГосударственныйКонтракт, "УполномоченныйБанк.Код");
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИННКорреспондентаПриИзменении(Элемент)
	
	Элементы.ИННКорреспондента.Доступность = ИспользоватьИННКорреспондента;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКППКорреспондентаПриИзменении(Элемент)
	
	Элементы.КППКорреспондента.Доступность = ИспользоватьКППКорреспондента;
	
КонецПроцедуры

&НаКлиенте
Процедура ИННКорреспондентаПриИзменении(Элемент)
	
	ИННЗаполненКорректно = Истина;
	
	ТекстСообщения = "";
	Если ПустаяСтрока(ИННКорреспондента) Тогда
		ИННЗаполненКорректно = Ложь;
	ИначеЕсли Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИННКорреспондента, Ложь, ТекстСообщения) Тогда
		ОчиститьСообщения();
		ИННЗаполненКорректно = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,,
			"ИННКорреспондента",,);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КППКорреспондентаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ТекстСообщения = "";
	Если Не ПустаяСтрока(Текст) И
		Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Текст, ТекстСообщения) Тогда
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,,
			"КППКорреспондента",,);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ОткрытьФорму("Справочник.БанковскиеСчетаКонтрагентов.Форма.РазблокированиеРеквизитов",,,,,, 
			Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
        ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
    КонецЕсли;

КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТекстКорреспондента.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИспользоватьТекстКорреспондента");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.FormBackColor);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.BorderColor);

КонецПроцедуры

#Область ПриИзмененииРеквизитов

&НаСервере
Процедура ЗаполнитьТекстКорреспондента()
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДанныеСправочника.НаименованиеПолное КАК НаименованиеПолное
		|ИЗ
		|	Справочник.Контрагенты КАК ДанныеСправочника
		|ГДЕ
		|	ДанныеСправочника.Ссылка = &Ссылка
		|");
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДанныеСправочника.Наименование КАК НаименованиеПолное
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ДанныеСправочника
		|ГДЕ
		|	ДанныеСправочника.Ссылка = &Ссылка
		|");
	Иначе
		Запрос = Неопределено;
	КонецЕсли;
	
	Если Запрос <> Неопределено Тогда
	
		Запрос.УстановитьПараметр("Ссылка", Объект.Владелец);
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ТекстКорреспондента = СокрЛП(Выборка.НаименованиеПолное);
		КонецЕсли;
		
		Если (ЗначениеЗаполнено(Объект.БанкДляРасчетов)) или (ЗначениеЗаполнено(Объект.БИКБанкаДляРасчетов)) Тогда
			
			Если Объект.РучноеИзменениеРеквизитовБанка Тогда
				ТекстКорреспондента = ТекстКорреспондента
					+ " р/с " + СокрЛП(Объект.НомерСчета)
					+ " в " + Строка(Объект.НаименованиеБанка)
					+ " " + Объект.ГородБанка;
			Иначе
				ТекстКорреспондента = ТекстКорреспондента
					+ " р/с " + СокрЛП(Объект.НомерСчета)
					+ " в " + Строка(Объект.Банк);
				Если ЗначениеЗаполнено(Объект.Банк) Тогда
					ТекстКорреспондента = ТекстКорреспондента	
					+ " " + Объект.Банк.Город;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИННКорреспондента()
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		ИННКорреспондента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ИНН");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКППКорреспондента()
	
	Если ЗначениеЗаполнено(Объект.Владелец) И ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		КППКорреспондента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "КПП");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоБИК(ТипБанка, БИК = "", ПеренестиЗначенияРеквизитов = Ложь)
	
	НашлиПоБИК   = Ложь;
	ЗаписьОБанке = "";
	
	Если ТипБанка = "Банк" Тогда
		БИКБанка		  = "";
		КоррСчетБанка	  = "";
		НаименованиеБанка = "";
		ГородБанка		  = "";
		РаботаСБанками.ПолучитьДанныеКлассификатора(БИК,,ЗаписьОБанке);
		Если НЕ ПустаяСтрока(ЗаписьОБанке) Тогда
			БИКБанка		  = ЗаписьОБанке.Код;
			КоррСчетБанка	  = ЗаписьОБанке.КоррСчет;
			НаименованиеБанка = ЗаписьОБанке.Наименование;
			ГородБанка		  = ЗаписьОБанке.Город;
			НашлиПоБИК		  = Истина;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанка			 = "";
				Объект.НаименованиеБанка = "";
				Объект.КоррСчетБанка	 = "";
				Объект.ГородБанка		 = "";
				Объект.АдресБанка		 = "";
				Объект.ТелефоныБанка	 = "";
				Объект.Банк				 = ЗаписьОБанке;
			КонецЕсли;
			Если Не Объект.ИностранныйБанк Тогда
				Объект.СВИФТБанка = СВИФТпоБИК(БИКБанка);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипБанка = "БанкДляРасчетов" Тогда
		БИКБанкаДляРасчетов			 = "";
		КоррСчетБанкаДляРасчетов	 = "";
		НаименованиеБанкаДляРасчетов = "";
		ГородБанкаДляРасчетов		 = "";
		РаботаСБанками.ПолучитьДанныеКлассификатора(БИК,,ЗаписьОБанке);
	 	Если НЕ ПустаяСтрока(ЗаписьОБанке) Тогда
			БИКБанкаДляРасчетов			 = ЗаписьОБанке.Код;
			КоррСчетБанкаДляРасчетов	 = ЗаписьОБанке.КоррСчет;
			НаименованиеБанкаДляРасчетов = ЗаписьОБанке.Наименование;
			ГородБанкаДляРасчетов		 = ЗаписьОБанке.Город;
			НашлиПоБИК					 = Истина;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанкаДляРасчетов			= "";
				Объект.НаименованиеБанкаДляРасчетов = "";
				Объект.КоррСчетБанкаДляРасчетов		= "";
				Объект.ГородБанкаДляРасчетов		= "";
				Объект.АдресБанкаДляРасчетов		= "";
				Объект.ТелефоныБанкаДляРасчетов		= "";
				Объект.БанкДляРасчетов				= ЗаписьОБанке;
			КонецЕсли;
			Объект.СВИФТБанкаДляРасчетов = СВИФТпоБИК(БИКБанкаДляРасчетов);
		КонецЕсли;
	КонецЕсли;
	
	Возврат НашлиПоБИК;
	
КонецФункции

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоБанку(ТипБанка, Банк = "", ПеренестиЗначенияРеквизитов = Ложь)
	
	Если ТипЗнч(Банк) = Тип("СправочникСсылка.КлассификаторБанков") Тогда
		Если ТипБанка = "Банк" Тогда
			
			БИКБанка		  = Банк.Код;
			КоррСчетБанка	  = Банк.КоррСчет;
			НаименованиеБанка = Банк.Наименование;
			ГородБанка		  = Банк.Город;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанка			 = Банк.Код;
				Объект.НаименованиеБанка = Банк.Наименование;
				Объект.КоррСчетБанка	 = Банк.КоррСчет;
				Объект.ГородБанка		 = Банк.Город;
				Объект.АдресБанка		 = Банк.Адрес;
				Объект.ТелефоныБанка	 = Банк.Телефоны;
				Объект.Банк				 = "";
			КонецЕсли;
			
			Если Не Объект.ИностранныйБанк Тогда
				Объект.СВИФТБанка = СВИФТпоБИК(БИКБанка);
			КонецЕсли;
			
		ИначеЕсли ТипБанка = "БанкДляРасчетов" Тогда
			БИКБанкаДляРасчетов			 = Банк.Код;
			КоррСчетБанкаДляРасчетов	 = Банк.КоррСчет;
			НаименованиеБанкаДляРасчетов = Банк.Наименование;
			ГородБанкаДляРасчетов		 = Банк.Город;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.БИКБанкаДляРасчетов			= Банк.Код;
				Объект.НаименованиеБанкаДляРасчетов = Банк.Наименование;
				Объект.КоррСчетБанкаДляРасчетов		= Банк.КоррСчет;
				Объект.ГородБанкаДляРасчетов		= Банк.Город;
				Объект.АдресБанкаДляРасчетов		= Банк.Адрес;
				Объект.ТелефоныБанкаДляРасчетов		= Банк.Телефоны;
				Объект.БанкДляРасчетов				= "";
			КонецЕсли;
			
			Объект.СВИФТБанкаДляРасчетов = СВИФТпоБИК(БИКБанкаДляРасчетов);
			
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура НомерСчетаПриИзмененииСервер()
	
	Валюта = ДенежныеСредстваСервер.ПолучитьВалютуПоНомеруСчета(Объект.НомерСчета);
	Если ЗначениеЗаполнено(Валюта) Тогда
		Объект.ВалютаДенежныхСредств = Валюта;
	КонецЕсли;
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеЭлементамиФормы

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Владелец", "ТолькоПросмотр", Истина);
	Иначе
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Владелец", "ТолькоПросмотр", Ложь);
	КонецЕсли;
	
	СчетФизЛица = (ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФизическиеЛица"));
	
	КонтрагентФизЛицо = Ложь;
	Если Не СчетФизЛица И ЗначениеЗаполнено(Объект.Владелец) Тогда
		КонтрагентФизЛицо = (ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо);
	КонецЕсли;
	
	Если СчетФизЛица Тогда
		Элементы.Владелец.Заголовок = НСтр("ru='Физическое лицо'");
	КонецЕсли;
	
	Элементы.ГосударственныйКонтракт.Доступность = Объект.ОтдельныйСчетГОЗ;
	Элементы.ГосударственныйКонтракт.АвтоОтметкаНезаполненного = Объект.ОтдельныйСчетГОЗ;
	Элементы.Декорация4.Видимость = ПоддержкаПлатежей275ФЗ И Не СчетФизЛица;
	Элементы.ОтдельныйСчетГОЗ.Видимость = Не СчетФизЛица;
	Элементы.ГосударственныйКонтракт.Видимость = Не СчетФизЛица;
	
	Элементы.ИностранныйБанк.Доступность = Не Объект.ОтдельныйСчетГОЗ;
	Элементы.ИспользуетсяБанкДляРасчетов.Доступность = Не Объект.ОтдельныйСчетГОЗ;
	
	
	// Банковские реквизиты
	Элементы.ИностранныйБанк.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	
	Элементы.КоррСчетБанка.Доступность     = Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.НаименованиеБанка.Доступность = Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.ГородБанка.Доступность        = Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.АдресБанка.Доступность        = Объект.РучноеИзменениеРеквизитовБанка;
	
	Элементы.КоррСчетБанкаДляРасчетов.Доступность     = Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов И ИспользуетсяБанкДляРасчетов;
	Элементы.НаименованиеБанкаДляРасчетов.Доступность = Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов И ИспользуетсяБанкДляРасчетов;
	Элементы.ГородБанкаДляРасчетов.Доступность        = Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов И ИспользуетсяБанкДляРасчетов;
	Элементы.АдресБанкаДляРасчетов.Доступность        = Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов И ИспользуетсяБанкДляРасчетов;
	Элементы.СчетВБанкеДляРасчетов.Доступность        = ИспользуетсяБанкДляРасчетов;
	
	Элементы.БИКБанкаДляРасчетов.Доступность                       = ИспользуетсяБанкДляРасчетов;
	Элементы.СВИФТБанкаДляРасчетов.Доступность                     = ИспользуетсяБанкДляРасчетов;
	Элементы.РучноеИзменениеРеквизитовБанкаДляРасчетов.Доступность = ИспользуетсяБанкДляРасчетов;
	
	Если Не Объект.ИностранныйБанк Тогда
		
		Элементы.НомерСчета.Маска = "!!!!!!!!!!!!!!!!!!!!";
		
		Элементы.РучноеИзменениеРеквизитовБанка.Видимость = Истина;
		Элементы.РучноеИзменениеРеквизитовБанкаДляРасчетов.Видимость = Не ВалютныйСчет;
		
		Элементы.БИКБанка.Заголовок = НСтр("ru = 'БИК'");
		Элементы.БИКБанка.КнопкаОткрытия = Истина;
		Элементы.БИКБанкаДляРасчетов.КнопкаОткрытия = Не ВалютныйСчет;
		
		Элементы.КоррСчетБанка.Видимость = Не ВалютныйСчет;
		Элементы.КоррСчетБанкаДляРасчетов.Видимость = Не ВалютныйСчет;
		Элементы.СчетВБанкеДляРасчетов.Видимость = ВалютныйСчет;
		
		Элементы.АдресБанка.Видимость = ВалютныйСчет;
		Элементы.ГородБанка.Видимость = Не ВалютныйСчет;
		
		Элементы.АдресБанкаДляРасчетов.Видимость = ВалютныйСчет;
		Элементы.ГородБанкаДляРасчетов.Видимость = Не ВалютныйСчет;
		
		Элементы.Переместить(Элементы.БИКБанка, Элементы.БИКБанка.Родитель, Элементы.СВИФТБанка);
		
		Если ВалютныйСчет Тогда
			Элементы.БИКБанкаДляРасчетов.Заголовок = НСтр("ru = 'Национальный код банка'");
			Элементы.Переместить(Элементы.СВИФТБанкаДляРасчетов, Элементы.СВИФТБанкаДляРасчетов.Родитель, Элементы.БИКБанкаДляРасчетов);
		Иначе
			Элементы.БИКБанкаДляРасчетов.Заголовок = НСтр("ru = 'БИК'");
			Элементы.Переместить(Элементы.БИКБанкаДляРасчетов, Элементы.БИКБанкаДляРасчетов.Родитель, Элементы.СВИФТБанкаДляРасчетов);
		КонецЕсли;
	Иначе
		
		Элементы.НомерСчета.Маска = "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!";
		
		Элементы.РучноеИзменениеРеквизитовБанка.Видимость = Ложь;
		Элементы.РучноеИзменениеРеквизитовБанкаДляРасчетов.Видимость = Не ВалютныйСчет;
		
		Элементы.БИКБанка.Заголовок = НСтр("ru = 'Национальный код банка'");
		Элементы.БИКБанка.КнопкаОткрытия = Ложь;
		Элементы.БИКБанкаДляРасчетов.КнопкаОткрытия = Не ВалютныйСчет;
		
		Элементы.КоррСчетБанка.Видимость = Ложь;
		Элементы.КоррСчетБанкаДляРасчетов.Видимость = Ложь;
		Элементы.СчетВБанкеДляРасчетов.Видимость = Истина;
		
		Элементы.АдресБанка.Видимость = Истина;
		Элементы.ГородБанка.Видимость = Ложь;
		
		Элементы.АдресБанкаДляРасчетов.Видимость = Истина;
		Элементы.ГородБанкаДляРасчетов.Видимость = Ложь;
		
		Элементы.Переместить(Элементы.СВИФТБанка, Элементы.СВИФТБанка.Родитель, Элементы.БИКБанка);
		
		Если ВалютныйСчет Тогда
			Элементы.БИКБанкаДляРасчетов.Заголовок = НСтр("ru = 'Национальный код банка'");
			Элементы.Переместить(Элементы.СВИФТБанкаДляРасчетов, Элементы.СВИФТБанкаДляРасчетов.Родитель, Элементы.БИКБанкаДляРасчетов);
		Иначе
			Элементы.БИКБанкаДляРасчетов.Заголовок = НСтр("ru = 'БИК'");
			Элементы.Переместить(Элементы.БИКБанкаДляРасчетов, Элементы.БИКБанкаДляРасчетов.Родитель, Элементы.СВИФТБанкаДляРасчетов);
		КонецЕсли;
	КонецЕсли;
	
	// Редактирование текста наименования организации
	ИспользоватьТекстКорреспондента = ЗначениеЗаполнено(Объект.ТекстКорреспондента);
	Элементы.ТекстКорреспондента.Доступность = ИспользоватьТекстКорреспондента;
	
	Если ИспользоватьТекстКорреспондента Тогда
		ТекстКорреспондента = Объект.ТекстКорреспондента;
	Иначе
		ЗаполнитьТекстКорреспондента();
	КонецЕсли;
	
	ИспользоватьИННКорреспондента = ЗначениеЗаполнено(Объект.ИННКорреспондента);
	Элементы.ИННКорреспондента.Доступность = ИспользоватьИННКорреспондента;
	
	Если ИспользоватьИННКорреспондента Тогда
		ИННКорреспондента = Объект.ИННКорреспондента;
	Иначе
		ЗаполнитьИННКорреспондента();
	КонецЕсли;
	
	ИспользоватьКППКорреспондента = ЗначениеЗаполнено(Объект.КППКорреспондента);
	Элементы.КППКорреспондента.Доступность = ИспользоватьКППКорреспондента;
	
	Если ИспользоватьКППКорреспондента Тогда
		КППКорреспондента = Объект.КППКорреспондента;
	Иначе
		ЗаполнитьКППКорреспондента();
	КонецЕсли;
	
	Элементы.ИспользоватьИННКорреспондента.Видимость = СчетФизЛица Или КонтрагентФизЛицо;
	Элементы.ИННКорреспондента.Видимость = СчетФизЛица Или КонтрагентФизЛицо;
	Элементы.ИспользоватьКППКорреспондента.Видимость = Не СчетФизЛица И Не КонтрагентФизЛицо;
	Элементы.КППКорреспондента.Видимость = Не СчетФизЛица И Не КонтрагентФизЛицо;
	
	Элементы.БИКБанка.КнопкаВыбора = Не Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.БИКБанкаДляРасчетов.КнопкаВыбора = Не Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютныйСчет = (ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) И Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	ИностранныйБанк = ?(Объект.ИностранныйБанк, 1, 0);
	
	ПрочитатьТаблицуСоответствияБИКСВИФТ();
	ЗаполнитьРеквизитыБанка();
	СформироватьАвтоНаименование();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыБанка()
	
	БИКБанка		  = "";
	НаименованиеБанка = "";
	КоррСчетБанка	  = "";
	ГородБанка		  = "";
	
	БИКБанкаДляРасчетов			 = "";
	КоррСчетБанкаДляРасчетов	 = "";
	НаименованиеБанкаДляРасчетов = "";
	ГородБанкаДляРасчетов		 = "";
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		БИКБанка		  = Объект.БИКБанка;
		НаименованиеБанка = Объект.НаименованиеБанка;
		КоррСчетБанка	  = Объект.КоррСчетБанка;
		ГородБанка		  = Объект.ГородБанка;
	Иначе
		Если НЕ Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ЗначениеЗаполнено(Объект.БанкДляРасчетов)
			Или ЗначениеЗаполнено(Объект.БИКБанкаДляРасчетов)
			Или ЗначениеЗаполнено(Объект.СВИФТБанкаДляРасчетов) Тогда
			ИспользуетсяБанкДляРасчетов = Истина;
		Иначе
			ИспользуетсяБанкДляРасчетов = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		БИКБанкаДляРасчетов			 = Объект.БИКБанкаДляРасчетов;
		НаименованиеБанкаДляРасчетов = Объект.НаименованиеБанкаДляРасчетов;
		КоррСчетБанкаДляРасчетов	 = Объект.КоррСчетБанкаДляРасчетов;
		ГородБанкаДляРасчетов		 = Объект.ГородБанкаДляРасчетов;
	Иначе
		Если НЕ Объект.БанкДляРасчетов.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", Объект.БанкДляРасчетов, Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьАвтоНаименование()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4) 
		+ ?(ЗначениеЗаполнено(НаименованиеБанка), " в " + Строка(НаименованиеБанка), "")
		+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(НаименованиеБанка), Строка(НаименованиеБанка), "")
		+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
	Иначе
		
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4) 
		+ ?(ЗначениеЗаполнено(Объект.Банк), " в " + Строка(Объект.Банк), "")
		+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(Объект.Банк), Строка(Объект.Банк), "")
		+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
	КонецЕсли;
	
	Возврат СтрокаНаименования;

КонецФункции

&НаКлиенте
Процедура РучноеИзменениеРеквизитовБанкаПриИзменении(Элемент)
	ЗаписьОБанке = "";
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		Если НЕ Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Истина);
		КонецЕсли;	
		Объект.Банк = "";
	Иначе
		ЗаполнитьРеквизитыБанкаПоБИК("Банк", Объект.БИКБанка, Истина);
		Объект.БИКБанка			 = "";
		Объект.НаименованиеБанка = "";
		Объект.КоррСчетБанка	 = "";
		Объект.ГородБанка		 = "";
		Объект.АдресБанка		 = "";
		Объект.ТелефоныБанка	 = "";
    КонецЕсли;
	
	УправлениеЭлементамиФормы();

КонецПроцедуры

&НаКлиенте
Процедура РучноеИзменениеРеквизитовБанкаДляРасчетовПриИзменении(Элемент)
	ЗаписьОБанке = "";
	Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
		Если НЕ Объект.БанкДляРасчетов.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("БанкДляРасчетов", Объект.БанкДляРасчетов, Истина);
		КонецЕсли;	
		Объект.БанкДляРасчетов = "";
	Иначе
		ЗаполнитьРеквизитыБанкаПоБИК("БанкДляРасчетов", Объект.БИКБанкаДляРасчетов, Истина);
		Объект.БИКБанкаДляРасчетов			= "";
		Объект.НаименованиеБанкаДляРасчетов = "";
		Объект.КоррСчетБанкаДляРасчетов		= "";
		Объект.ГородБанкаДляРасчетов		= "";
		Объект.АдресБанкаДляРасчетов		= "";
		Объект.ТелефоныБанкаДляРасчетов		= "";
    КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриВыборе(ИмяЭлемента, Форма)
	
	Если ИмяЭлемента = "БИКБанка" Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанка Тогда
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
			СтруктураПараметров.Вставить("ТекущаяСтрока", Объект.Банк);
			СтруктураПараметров.Вставить("ПараметрВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
			ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, Форма);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "БИКБанкаДляРасчетов" Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
			СтруктураПараметров.Вставить("ТекущаяСтрока", Объект.БанкДляРасчетов);
			СтруктураПараметров.Вставить("ПараметрВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
			ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, Форма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаОткрытие(ИмяЭлемента)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
	ЗначенияПараметров = Новый Структура;
	
	Если ИмяЭлемента = "БИКБанка" Тогда
		
		СтруктураПараметров.Вставить("РучноеИзменение", Объект.РучноеИзменениеРеквизитовБанка);
		
		Если Объект.РучноеИзменениеРеквизитовБанка Тогда
			ЗначенияПараметров.Вставить("БИК", БИКБанка);
			ЗначенияПараметров.Вставить("Наименование", НаименованиеБанка);
			ЗначенияПараметров.Вставить("КоррСчет", КоррСчетБанка);
			ЗначенияПараметров.Вставить("Город", ГородБанка);
			ЗначенияПараметров.Вставить("Адрес", Объект.АдресБанка);
			ЗначенияПараметров.Вставить("Телефоны", Объект.ТелефоныБанка);
		Иначе
			СтруктураПараметров.Вставить("Банк", Объект.Банк);
		КонецЕсли;
		
	ИначеЕсли ИмяЭлемента = "БИКБанкаДляРасчетов" Тогда
		
		СтруктураПараметров.Вставить("РучноеИзменение", Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов);
		
		Если Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов Тогда
			ЗначенияПараметров.Вставить("БИК", БИКБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Наименование", НаименованиеБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("КоррСчет", КоррСчетБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Город", ГородБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Адрес", Объект.АдресБанкаДляРасчетов);
			ЗначенияПараметров.Вставить("Телефоны", Объект.ТелефоныБанкаДляРасчетов);
		Иначе
			СтруктураПараметров.Вставить("Банк", Объект.БанкДляРасчетов);
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ЗначенияПолей", ЗначенияПараметров);
	ОткрытьФорму("Справочник.БанковскиеСчетаКонтрагентов.Форма.РеквизитыБанка",СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзменении(Знач Оповещение, ИмяЭлемента)
	
	Если (ИмяЭлемента = "БИКБанка") Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанка И Не Объект.ИностранныйБанк Тогда
			Если Не ЗаполнитьРеквизитыБанкаПоБИК("Банк", БИКБанка, Истина) Тогда
				СписокВариантовОтветовНаВопрос = Новый СписокЗначений;
				СписокВариантовОтветовНаВопрос.Добавить("ВыбратьИзСписка", НСтр("ru = 'Выбрать из списка'"));
				СписокВариантовОтветовНаВопрос.Добавить("ПродолжитьВвод",  НСтр("ru = 'Продолжить ввод'"));
				СписокВариантовОтветовНаВопрос.Добавить("ОтменитьВвод",	   НСтр("ru = 'Отменить ввод'"));
				
				ТекстВопроса = НСтр("ru = 'Банк с БИК  %Значение% не найден в классификаторе банков.'");
				ТекстВопроса = СтрЗаменить(ТекстВопроса,"%Значение%",БИКБанка);
				
				Ответ = Неопределено;

				
				ПоказатьВопрос(Новый ОписаниеОповещения("РеквизитБанкаПриИзмененииЗавершение", ЭтотОбъект, Новый Структура("ИмяЭлемента, Оповещение, СписокВариантовОтветовНаВопрос, ТекстВопроса", ИмяЭлемента, Оповещение, СписокВариантовОтветовНаВопрос, ТекстВопроса)), ТекстВопроса, СписокВариантовОтветовНаВопрос, 0,,НСтр("ru = 'Выбор банка из классификатора'"));
				Возврат;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли (ИмяЭлемента = "БИКБанкаДляРасчетов") Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов И Не ВалютныйСчет Тогда
			Если Не ЗаполнитьРеквизитыБанкаПоБИК("БанкДляРасчетов", БИКБанкаДляРасчетов, Истина) Тогда
				
				СписокВариантовОтветовНаВопрос = Новый СписокЗначений;
				СписокВариантовОтветовНаВопрос.Добавить("ВыбратьИзСписка", НСтр("ru = 'Выбрать из списка'"));
				СписокВариантовОтветовНаВопрос.Добавить("ПродолжитьВвод",  НСтр("ru = 'Продолжить ввод'"));
				СписокВариантовОтветовНаВопрос.Добавить("ОтменитьВвод",	   НСтр("ru = 'Отменить ввод'"));
				
				ТекстВопроса = НСтр("ru = 'Банк с БИК  %Значение% не найден в классификаторе банков.'");
				ТекстВопроса = СтрЗаменить(ТекстВопроса,"%Значение%",БИКБанкаДляРасчетов);
				
				ПоказатьВопрос(Новый ОписаниеОповещения("РеквизитБанкаПриИзмененииПослеВопроса", ЭтотОбъект, Новый Структура("Оповещение", Оповещение)), ТекстВопроса, СписокВариантовОтветовНаВопрос, 0,,НСтр("ru = 'Выбор банка-корреспондента из классификатора'"));
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	РеквизитБанкаПриИзмененииФрагмент(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзмененииПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Оповещение = ДополнительныеПараметры.Оповещение;
	
	Ответ = РезультатВопроса;
	
	Если Ответ = "ОтменитьВвод" Тогда
		БИКБанкаДляРасчетов = "";
	ИначеЕсли Ответ = "ПродолжитьВвод" Тогда
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = Истина;
		Объект.БИКБанкаДляРасчетов = БИКБанкаДляРасчетов;
	ИначеЕсли Ответ = "ВыбратьИзСписка" Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Реквизит", "БИКБанкаДляРасчетов");
		ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтаФорма);
	КонецЕсли;
	
	РеквизитБанкаПриИзмененииФрагмент(Оповещение);
	

КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ИмяЭлемента = ДополнительныеПараметры.ИмяЭлемента;
    Оповещение = ДополнительныеПараметры.Оповещение;
    СписокВариантовОтветовНаВопрос = ДополнительныеПараметры.СписокВариантовОтветовНаВопрос;
    ТекстВопроса = ДополнительныеПараметры.ТекстВопроса;
    
    
    Ответ = РезультатВопроса;
    
    Если Ответ = "ОтменитьВвод" Тогда
        БИКБанка = "";
    ИначеЕсли Ответ = "ПродолжитьВвод" Тогда
        Объект.РучноеИзменениеРеквизитовБанка = Истина;
        Объект.БИКБанка = БИКБанка;
    ИначеЕсли Ответ = "ВыбратьИзСписка" Тогда
        СтруктураПараметров = Новый Структура;
        СтруктураПараметров.Вставить("Реквизит", "БИКБанка");
        ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтаФорма);
    КонецЕсли;
    
    РеквизитБанкаПриИзмененииФрагмент(Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзмененииФрагмент(Знач Оповещение)
	
	УправлениеЭлементамиФормы();
	ВыполнитьОбработкуОповещения(Оповещение);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыРедактированияРеквизитов()
	
	Если Объект.ИностранныйБанк Тогда
		Объект.РучноеИзменениеРеквизитовБанка = Истина;
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = ВалютныйСчет;
	Иначе
		Объект.РучноеИзменениеРеквизитовБанкаДляРасчетов = ВалютныйСчет;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьТаблицуСоответствияБИКСВИФТ()
	
	СоответствиеБИКСВИФТXML = Справочники.БанковскиеСчетаОрганизаций.ПолучитьМакет("СоответствиеБИКSWIFT").ПолучитьТекст();
	СоответствиеБИКСВИФТ.Загрузить(ОбщегоНазначения.ПрочитатьXMLВТаблицу(СоответствиеБИКСВИФТXML).Данные);
	
КонецПроцедуры

&НаСервере
Функция СВИФТпоБИК(БИК)
	
	СтрокиСоответствия = СоответствиеБИКСВИФТ.НайтиСтроки(Новый Структура("БИК", БИК));
	Если СтрокиСоответствия.Количество() = 1 Тогда
		Возврат СтрокиСоответствия[0].SWIFT;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции


#КонецОбласти

#КонецОбласти
