#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция определяет банковский счет выбранного контрагента или физического лица.
//
// Возвращает банковский счет получателя, если найден один банковский счет.
// Возвращает Неопределено, если банковский счет не найден или счетов больше одного
//
// Параметры:
//	Получатель - СправочникСсылка.Контрагенты, СправочникСсылка.ФизическиеЛица - Ссылка на получателя
//	Валюта - СправочникСсылка.Валюты - Валюта банковского счета
//
// Возвращаемое значение:
//	СправочникСсылка.БанковскиеСчетаКонтрагентов - Найденный банковский счет получателя
//
Функция ПолучитьБанковскийСчетПоУмолчанию(Получатель, Валюта = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	БанковскиеСчетаКонтрагентов.Ссылка КАК БанковскийСчетПолучателя
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|ГДЕ
	|	НЕ БанковскиеСчетаКонтрагентов.ПометкаУдаления
	|	И НЕ БанковскиеСчетаКонтрагентов.Закрыт
	|	И БанковскиеСчетаКонтрагентов.Владелец = &Получатель
	|	И (БанковскиеСчетаКонтрагентов.ВалютаДенежныхСредств = &Валюта
	|		ИЛИ &Валюта = Неопределено)
	|");
	
	Запрос.УстановитьПараметр("Получатель", Получатель);
	Запрос.УстановитьПараметр("Валюта", ?(ЗначениеЗаполнено(Валюта), Валюта, Неопределено));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		БанковскийСчетПолучателя = Выборка.БанковскийСчетПолучателя;
	Иначе
		БанковскийСчетПолучателя = Справочники.БанковскиеСчетаКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
	Возврат БанковскийСчетПолучателя;

КонецФункции

// Функция проверяет соответствие владельца банковского счета выбранному контрагенту или физическому лицу.
//
// Параметры:
//  БанковскийСчет - СправочникСсылка.БанковскиеСчетаКонтрагентов - Ссылка на банковский счет
//  Владелец - СправочникСсылка.Контрагенты, СправочникСсылка.ФизическиеЛица - Ссылка на владельца
//
// Возвращаемое значение:
//	Булево - Признак принадлежности банковского счета указанному владельцу
//
Функция ПроверитьВладельцаБанковскогоСчета(БанковскийСчет, Владелец) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	БанковскиеСчетаКонтрагентов.Ссылка КАК БанковскийСчетПолучателя
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|ГДЕ
	|	БанковскиеСчетаКонтрагентов.Ссылка = &БанковскийСчет
	|	И БанковскиеСчетаКонтрагентов.Владелец = &Владелец
	|");
	
	Запрос.УстановитьПараметр("БанковскийСчет", БанковскийСчет);
	Запрос.УстановитьПараметр("Владелец", Владелец);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		СчетСоответствуетВладельцу = Ложь;
	Иначе
		СчетСоответствуетВладельцу = Истина;
	КонецЕсли;
	
	Возврат СчетСоответствуетВладельцу;

КонецФункции

// Функция получает реквизиты банковского счета.
//
// Параметры:
//  БанковскийСчетОрганизации - СправочникСсылка.БанковскиеСчетаОрганизаций - Ссылка на банковский счет
//
// Возвращаемое значение:
//	Структура - реквизиты банковского счета контрагента
//
Функция ПолучитьРеквизитыБанковскогоСчета(БанковскийСчет) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БанковскиеСчета.ВалютаДенежныхСредств КАК Валюта,
	|	БанковскиеСчета.ТекстНазначения КАК ТекстНазначения,
	|	БанковскиеСчета.НомерСчета КАК НомерСчета,
	|	ВЫБОР
	|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка
	|			ТОГДА БанковскиеСчета.НаименованиеБанка
	|		ИНАЧЕ БанковскиеСчета.Банк
	|	КОНЕЦ КАК Банк,
	|	ВЫБОР
	|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка
	|			ТОГДА БанковскиеСчета.БИКБанка
	|		ИНАЧЕ БанковскиеСчета.Банк.Код
	|	КОНЕЦ КАК БИК,
	|	ВЫБОР
	|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка
	|			ТОГДА БанковскиеСчета.КоррСчетБанка
	|		ИНАЧЕ БанковскиеСчета.Банк.КоррСчет
	|	КОНЕЦ КАК КоррСчет,
	|	ВЫБОР
	|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка
	|			ТОГДА БанковскиеСчета.АдресБанка
	|		ИНАЧЕ БанковскиеСчета.Банк.Адрес
	|	КОНЕЦ КАК АдресБанка
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Ссылка = &БанковскийСчет";
	
	Запрос.УстановитьПараметр("БанковскийСчет", БанковскийСчет);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Валюта 			= Выборка.Валюта;
		ТекстНазначения = Выборка.ТекстНазначения;
		НомерСчета 		= Выборка.НомерСчета;
		Банк 			= Выборка.Банк;
		БИК 			= Выборка.БИК;
		КоррСчет 		= Выборка.КоррСчет;
		АдресБанка 		= Выборка.АдресБанка;
	Иначе
		Валюта 			= Справочники.Валюты.ПустаяСсылка();
		ТекстНазначения = "";
		НомерСчета 		= "";
		Банк 			= Неопределено;
		БИК 			= "";
		КоррСчет 		= "";
		АдресБанка 		= "";
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Валюта, ТекстНазначения, НомерСчета, Банк, БИК, КоррСчет, АдресБанка",
		Валюта,
		ТекстНазначения,
		НомерСчета,
		Банк,
		БИК,
		КоррСчет,
		АдресБанка,);
	
	Возврат СтруктураРеквизитов;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ВалютаДенежныхСредств");
	Результат.Добавить("Владелец");
	Результат.Добавить("ИностранныйБанк; ИностранныйБанк");
	Результат.Добавить("ОтдельныйСчетГОЗ");
	Результат.Добавить("ГосударственныйКонтракт");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
