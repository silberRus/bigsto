#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Процедура регистрации данных для обработчика обновления ОбработатьДанныеДляПереходаНаВерсию
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ПланыСборкиРазборки";
	ИмяРегистра       = "ПланыСборкиРазборки";
	
	ПолноеИмяДокумента = "Документ.ПланСборкиРазборки";
	
	ТекстЗапроса = Документы.ПланСборкиРазборки.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
		ТекстЗапроса, ПолноеИмяРегистра, ПолноеИмяДокумента);
	
	ПолноеИмяРегистра = "РегистрНакопления.ПланыПотребленияКомплектующих";
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
		Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяДокумента = "Документ.ПланСборкиРазборки";
	
	ПолноеИмяРегистра = "РегистрНакопления.ПланыПотребленияКомплектующих";
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ПланыПотребленияКомплектующих;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПланыПотребленияКомплектующих.Период КАК Период,
	|	ПланыПотребленияКомплектующих.Регистратор КАК Регистратор,
	|	ПланыПотребленияКомплектующих.НомерСтроки КАК НомерСтроки,
	|	ПланыПотребленияКомплектующих.Активность КАК Активность,
	|	ПланыПотребленияКомплектующих.Сценарий КАК Сценарий,
	|	ПланыПотребленияКомплектующих.Статус КАК Статус,
	|	ПланыПотребленияКомплектующих.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ПланыПотребленияКомплектующих.Номенклатура КАК Номенклатура,
	|	ПланыПотребленияКомплектующих.Характеристика КАК Характеристика,
	|	ПланыПотребленияКомплектующих.Склад КАК Склад,
	|	ПланыПотребленияКомплектующих.ПланСборкиРазборки КАК ПланСборкиРазборки,
	|	ПланыПотребленияКомплектующих.ДатаВыпуска КАК ДатаВыпуска,
	|	ВЫБОР ПланыПотребленияКомплектующих.Регистратор.Периодичность
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПотребленияКомплектующих.ДатаВыпуска, НЕДЕЛЯ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПотребленияКомплектующих.ДатаВыпуска, ДЕКАДА)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПотребленияКомплектующих.ДатаВыпуска, МЕСЯЦ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПотребленияКомплектующих.ДатаВыпуска, КВАРТАЛ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПотребленияКомплектующих.ДатаВыпуска, ПОЛУГОДИЕ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПотребленияКомплектующих.ДатаВыпуска, ГОД)
	|		ИНАЧЕ ПланыПотребленияКомплектующих.ДатаВыпуска
	|	КОНЕЦ КАК ПериодДатыВыпуска,
	|	ПланыПотребленияКомплектующих.Назначение КАК Назначение,
	|	ПланыПотребленияКомплектующих.Количество КАК Количество,
	|	ПланыПотребленияКомплектующих.ВариантКомплектации КАК ВариантКомплектации
	|ПОМЕСТИТЬ ПланыПотребленияКомплектующих
	|ИЗ
	|	РегистрНакопления.ПланыПотребленияКомплектующих КАК ПланыПотребленияКомплектующих
	|ГДЕ
	|	ПланыПотребленияКомплектующих.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗамещениеПланов.ЗамещенныйПериод КАК ЗамещенныйПериод
	|ПОМЕСТИТЬ ЗамещенныеПериоды
	|ИЗ
	|	РегистрСведений.ЗамещениеПланов КАК ЗамещениеПланов
	|ГДЕ
	|	ЗамещениеПланов.ЗамещенныйПлан = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПотребленияКомплектующих.Период КАК Период,
	|	ПланыПотребленияКомплектующих.Регистратор КАК Регистратор,
	|	ПланыПотребленияКомплектующих.НомерСтроки КАК НомерСтроки,
	|	ПланыПотребленияКомплектующих.Активность КАК Активность,
	|	ПланыПотребленияКомплектующих.Сценарий КАК Сценарий,
	|	ПланыПотребленияКомплектующих.Статус КАК Статус,
	|	ПланыПотребленияКомплектующих.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ПланыПотребленияКомплектующих.Номенклатура КАК Номенклатура,
	|	ПланыПотребленияКомплектующих.Характеристика КАК Характеристика,
	|	ПланыПотребленияКомплектующих.Склад КАК Склад,
	|	ПланыПотребленияКомплектующих.ПланСборкиРазборки КАК ПланСборкиРазборки,
	|	ПланыПотребленияКомплектующих.ДатаВыпуска КАК ДатаВыпуска,
	|	ПланыПотребленияКомплектующих.ПериодДатыВыпуска КАК ПериодДатыВыпуска,
	|	ПланыПотребленияКомплектующих.Назначение КАК Назначение,
	|	ПланыПотребленияКомплектующих.Количество КАК Количество,
	|	ПланыПотребленияКомплектующих.ВариантКомплектации КАК ВариантКомплектации
	|ИЗ
	|	ПланыПотребленияКомплектующих КАК ПланыПотребленияКомплектующих
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗамещенныеПериоды КАК ЗамещенныеПериоды
	|		ПО ПланыПотребленияКомплектующих.ПериодДатыВыпуска = ЗамещенныеПериоды.ЗамещенныйПериод
	|ГДЕ
	|	ЗамещенныеПериоды.ЗамещенныйПериод ЕСТЬ NULL";
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(Параметры.Очередь, Неопределено, ПолноеИмяРегистра);
	Пока Выборка.Следующий() Цикл
		
		Регистратор = Выборка.Регистратор;
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ЗамещениеПланов");
			ЭлементБлокировки.УстановитьЗначение("ЗамещенныйПлан", Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

			Блокировка.Заблокировать();
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Регистратор", Регистратор);
			
			Набор = РегистрыНакопления.ПланыПотребленияКомплектующих.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Регистратор);
			
			Результат = Запрос.Выполнить().Выгрузить();
			Набор.Загрузить(Результат);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли