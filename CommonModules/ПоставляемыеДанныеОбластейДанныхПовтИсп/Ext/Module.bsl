
#Область ПрограммныйИнтерфейс

// Возвращает словарь подсистемы (имена событий и шаблоны комментариев для журнала регистрации,
// шаблоны текстов сообщений и другие строковые константы, используемые подсистемой).
//
// Параметры:
//  нет
//
// Возвращаемое значение:
//   Структура - сформированный словарь.
//
Функция СловарьПодсистемы() Экспорт
    
    СловарьПодсистемы = Новый Структура;
    
    Фрагмент = НСтр("ru='Не найден файл ''%1'''");
    СловарьПодсистемы.Вставить("ФайлНеНайден", Фрагмент);
    
    Фрагмент = НСтр("ru='Файл поврежден.'");
    СловарьПодсистемы.Вставить("ФайлПоврежден", Фрагмент); 
    
    Фрагмент = НСтр("ru='Не задан манифест.'");
    СловарьПодсистемы.Вставить("МанифестНеЗадан", Фрагмент);
    
    Фрагмент = НСтр("ru='Манифест не верного формата. Ожидается файл в формате json.'");
    СловарьПодсистемы.Вставить("МанифестНеВерногоФормата", Фрагмент);
    
    Фрагмент = НСтр("ru='Отсутствует свойство манифеста ''%1'''");
    СловарьПодсистемы.Вставить("ОтсутствуетСвойствоМанифеста", Фрагмент);
    
    Фрагмент = НСтр("ru='Не найден обработчик ''%1'''");
    СловарьПодсистемы.Вставить("ОбработчикНеНайден", Фрагмент); 
    
    Фрагмент = НСтр("ru='Метод не поддерживается.'");
    СловарьПодсистемы.Вставить("МетодНеПоддерживается", Фрагмент);
    
    Фрагмент = НСтр("ru='Не найдено задание по идентификатору обрабатываемого файла.'");
    СловарьПодсистемы.Вставить("ЗаданиеНеНайдено", Фрагмент); 
    
    Возврат СловарьПодсистемы;
    
КонецФункции

Функция КодыСостояний() Экспорт
	
	КодыСостояний = Новый Структура;
    КодыСостояний.Вставить("Выполнено", 10200);
    КодыСостояний.Вставить("ОшибкаДанных", 10400);
    КодыСостояний.Вставить("НеНайдено", 10404);
    КодыСостояний.Вставить("ВнутренняяОшибка", 10500);
    КодыСостояний.Вставить("ВыполненоСПредупреждениями", 10240);
    Возврат КодыСостояний;
    
КонецФункции
    
#КонецОбласти 

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает имя файла описания порядка обработки и идентификаторов обработчиков файлов начального заполнения области.
// Пример содержимого файла файла: {"upload": [{"file":"base_data.json","handler":"base_data"}]}, где
// - upload - секция с описаниями порядка обработки, может содержать несколько элементов.
// - file - имя файла начальных данных для обработки.
// - handler - идентификатор обработчика файла начальных данных.
//
// Возвращаемое значение:
//   - Строка - имя файла манифеста.
//
Функция ИмяФайлаМанифеста() Экспорт
	
    Возврат "manifest.json";	
	
КонецФункции
 
// Возвращает имя свойства порядка обработки файла описания порядка обработки файлов начального заполнения области.
// 
// Возвращаемое значение:
//   - Строка - имя свойства порядка обработки.
//
Функция ИмяПоляСоставаДанных() Экспорт
	
	Возврат "upload";
	
КонецФункции

#КонецОбласти  


