
#Область ПрограммныйИнтерфейс

#Область ПроверкаНеобходимостиЗаполненияВидовЗапасов

// Процедура проверяет изменение реквизитов в документе.
//
Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК РеквизитыИзменены
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.%1 КАК СохраненныеДанные
	|		ПО СохраненныеДанные.Ссылка = &Ссылка
	|ГДЕ
	|	СохраненныеДанные.Ссылка ЕСТЬ NULL
	|	%2";
	
	ТекстУсловие = "";
	
	Для Каждого КлючИЗначение Из Новый Структура(ИменаРеквизитов) Цикл
		
		ТекстУсловие = ТекстУсловие + "
			|	ИЛИ ДанныеДокумента." + КлючИЗначение.Ключ + " <> СохраненныеДанные." + КлючИЗначение.Ключ;
		
	КонецЦикла;
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Запрос.Текст,
		Ссылка.Метаданные().Имя,
		ТекстУсловие);
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции

// Функция проверяет изменение табличной части "Товары" относительно табличной части "Виды запасов" документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Булево - Истина - товары изменены
//           Ложь - товары не изменены
//
Функция ПроверитьИзменениеТоваровПоКоличеству(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.Количество КАК Количество
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

// Функция проверяет изменение табличной части "Товары" относительно табличной части "Виды запасов" документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Булево - Истина - товары изменены
//           Ложь - товары не изменены
//
Функция ПроверитьИзменениеТоваровПоКоличествуИСумме(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаТоваров.Количество КАК Количество,
	|		ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|		ТаблицаТоваров.СуммаВознаграждения КАК СуммаВознаграждения,
	|		ТаблицаТоваров.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|	ГДЕ
	|		ТаблицаТоваров.Номенклатура.ТипНоменклатуры  В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество,
	|		-ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|		-ТаблицаВидыЗапасов.СуммаВознаграждения КАК СуммаВознаграждения,
	|		-ТаблицаВидыЗапасов.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтавкаНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаВознаграждения) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДСВознаграждения) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

// Функция проверяет необходимость принудительного перезаполнения видов запасов и устанавливает соответствующий параметр запроса.
//
Функция ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДокументОбъектИлиДопСвойства, Запрос = Неопределено) Экспорт
	
	ИмяДопСвойства = ИмяДопСвойстваДляПерезаполненияВидовЗапасов();
	
	Если ТипЗнч(ДокументОбъектИлиДопСвойства) = Тип("Структура") Тогда
		ПерезаполнитьВидыЗапасов = ДокументОбъектИлиДопСвойства.Свойство(ИмяДопСвойства);
	Иначе
		ПерезаполнитьВидыЗапасов = ДокументОбъектИлиДопСвойства.ДополнительныеСвойства.Свойство(ИмяДопСвойства);
	КонецЕсли;
	
	Если Запрос <> Неопределено Тогда
		Запрос.УстановитьПараметр(ИмяДопСвойства, ПерезаполнитьВидыЗапасов);
	КонецЕсли;
		
	Возврат ПерезаполнитьВидыЗапасов;
	
КонецФункции

// Процедура дополняет временные таблицы обязательными колонками, требующихся для корректного заполнения
// видов запасов.
//
// Параметры:
//  Запрос	 - Запрос	 - запрос, который содержит описание временных таблиц
//
Процедура ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос) Экспорт
	
	ОписаниеТаблиц = ОписаниеТаблицСОбязательнымиКолонками();
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	
	Для Каждого ЗапросСхемы Из СхемаЗапроса.ПакетЗапросов Цикл
		
		Если ТипЗнч(ЗапросСхемы) = Тип("ЗапросУничтоженияТаблицыСхемыЗапроса") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЗапросСхемы.ТаблицаДляПомещения) Тогда
			Продолжить;
		КонецЕсли;
		
		// Если источник запроса берется из параметра, то добавим служебную временную
		// таблицу, чтобы была возможность выбирать значения НЕОПРЕДЕЛЕНО.
		Если ОписаниеТаблиц.Свойство(ЗапросСхемы.ТаблицаДляПомещения) Тогда
			Если ЗапросСхемы.Операторы[0].Источники.Количество() И
				СтрНайти(ЗапросСхемы.Операторы[0].Источники[0].Источник.ИмяТаблицы, "&") <> 0 Тогда
				
				ТаблицаДляПомещения = ЗапросСхемы.ТаблицаДляПомещения;
				ЗапросСхемы.ТаблицаДляПомещения = ТаблицаДляПомещения + "СлужебнаяВТ";
				
				НовыйЗапросСхемы = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросВыбораСхемыЗапроса"));
				НовыйЗапросСхемы.ТаблицаДляПомещения = ТаблицаДляПомещения;
				НовыйЗапросСхемы.Операторы[0].Источники.Добавить(ТаблицаДляПомещения + "СлужебнаяВТ");
				ДоступныеПоля = НовыйЗапросСхемы.Операторы[0].Источники[0].Источник.ДоступныеПоля;
				Для Каждого ДоступноеПоле Из ДоступныеПоля Цикл
					НовыйЗапросСхемы.Операторы[0].ВыбираемыеПоля.Добавить(ТаблицаДляПомещения + "СлужебнаяВТ." + ДоступноеПоле.Имя);
				КонецЦикла;
				
				СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса")).ИмяТаблицы = 
					ТаблицаДляПомещения + "СлужебнаяВТ";
				
			КонецЕсли;
		КонецЕсли;
		
		ОписаниеТаблицы = Неопределено;
		Если ОписаниеТаблиц.Свойство(ЗапросСхемы.ТаблицаДляПомещения, ОписаниеТаблицы) Тогда
			Для Каждого ОписаниеКолонки Из ОписаниеТаблицы Цикл
				Если ЗапросСхемы.Колонки.Найти(ОписаниеКолонки.Ключ) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				Для Каждого Оператор Из ЗапросСхемы.Операторы Цикл
					Поле = Оператор.ВыбираемыеПоля.Добавить(ОписаниеКолонки.Значение);
				КонецЦикла;
				Колонка = ЗапросСхемы.Колонки.Найти(Поле);
				Колонка.Псевдоним = ОписаниеКолонки.Ключ;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеВидовЗапасов

// Возвращает стуктуру, которая используется при заполнении видов запасов.
// В структуре описываются основные отборы видов запасов и варианты контроля.
//
// Параметры:
//	* ИмяТЧВидыЗапасов - Строка - Имя табличной части документа, в которую будут добавлены подобранные виды запасов
//	* ТаблицаВидыЗапасов - ТаблицаЗначений - Таблица, в которую будут добавлены подобранные виды запасов. Если определено, 
//		то виды запасов будут добавлены только в таблицу значений, а не в табличную часть.
//	* ИмяПоляОрганизация - Строка - Имя реквизита в документе, в котором хранится организация.
//	* ВладелецТовараВШапке - Булево - Показывает, где находится владелец вида запасов:
//		в шапке или будет указан отдельно в ВТ.
//	* ДоступныеВидыЗапасовУжеСформированы - Булево - Показывает отсутствие необходимости
//		формирования ВТ ДоступныеВидыЗапасов.
//	* ПодбиратьВидыЗапасовПоИнтеркампани - Булево - Разрешает необходимость потребления видов запасов
//		по схеме интеркампани.
//	* ДокументДелаетИПриходИРасход - Булево - Признак того, что документ делает приходные и расходные движения.
//		Например: Документ.ПередачаТоваровМеждуОрганизациями. В этом случае используется более сложный механизм
//		формирования резервов - резервы записываются один раз при обработке всех видов движений.
//	* НалогообложениеНДС - Неопределено - Тип налогообложения документа. Если не заполнено, то считается, что
//		оно не меняется.
//	* ОтборыВидовЗапасов - Стуктура - По данным отборам строится временная таблица ДоступныеВидыЗапасов.
//		Используется при построении таблицы остатков. См. метод Справочники.ВидыЗапасов.ПараметрыОтбораВидовЗапасов().
//	* СообщатьОбОшибкахЗаполнения - Булево - Признак необходимости вывода информационных сообщений пользователю.
//	* ИмяТаблицыОстатков - Неопределено - Имя таблицы остатков.
//	* СторноДвижений - Булево - Выполняется сторно движений.
//	* ПодбиратьЗапасыРазныхПериодов - Булево - Разрешается документу использовать виды запасов из разных периодов.
//	* ТаблицаНовыеРезервы - Неопределено, ТаблицаЗначений - Таблица сформированных резервов.
//	* ПериодЗаполнения - Неопределено - Период заполнения видов запасов.
//	* ЕстьТаблицаПриходуемыхВидовЗапасов - Булево - Признак наличия ТЗ ВидыЗапасовОприходование.
//	* БезОтбораПоНомерамГТД - Булево - Признак выключенного отбора по номерам ГТД при подборе остатков.
//	* ПеремещениеВЦеховуюКладовую - Булево - Признак перемещения в цеховую кладовую.
//	* ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию - Неопределено - Если не хватает остатков, то генерируется вид запасов по умолчанию.
//		В этом случае необходима ТаблицаРеквизитовВидовЗапасовПоУмолчанию.
//	* ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию - ТаблицаЗначений - См. ЗапасыСервер.ПустаяТаблицаРеквизитовВидовЗапасовПоУмолчанию().
//
Функция ПараметрыЗаполненияВидовЗапасов() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяТЧВидыЗапасов", "ВидыЗапасов");
	Результат.Вставить("ТаблицаВидыЗапасов", Неопределено);
	Результат.Вставить("ИмяПоляОрганизация", "Организация");
	Результат.Вставить("ВладелецТовараВШапке", Истина);
	
	Результат.Вставить("ДоступныеВидыЗапасовУжеСформированы", Ложь);
	Результат.Вставить("ПодбиратьВидыЗапасовПоИнтеркампани", Истина);
	Результат.Вставить("ПриПодбореПоИнтеркампаниИсключатьОрганизации", Новый Массив);
	
	Результат.Вставить("ДокументДелаетИПриходИРасход", Ложь);
	Результат.Вставить("НалогообложениеНДС", Неопределено);
	
	Результат.Вставить("ОтборыВидовЗапасов", Справочники.ВидыЗапасов.ПараметрыОтбораВидовЗапасов());
	Результат.ОтборыВидовЗапасов.ТипЗапасов = Новый Массив;
	Результат.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	Результат.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
	Результат.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.КомиссионныйТовар);
	
	Результат.Вставить("КорВидыЗапасов", Новый Массив);
	
	Результат.Вставить("СообщатьОбОшибкахЗаполнения", Истина);
	Результат.Вставить("ИмяТаблицыОстатков", "ТоварыОрганизаций");
	Результат.Вставить("СторноДвижений", Ложь);
	
	Результат.Вставить("ПодбиратьЗапасыРазныхПериодов", Ложь);
	Результат.Вставить("ТаблицаНовыеРезервы", Неопределено);
	Результат.Вставить("ТаблицаСторноДвижений", Неопределено);
	Результат.Вставить("ПериодЗаполнения", Неопределено);
	Результат.Вставить("ЕстьТаблицаПриходуемыхВидовЗапасов", Ложь);
	Результат.Вставить("ЭтоРасходТоваровОрганизацийНаПроизводство", Ложь);
	
	Результат.Вставить("БезОтбораПоНомерамГТД", Ложь);
	Результат.Вставить("ПеремещениеВЦеховуюКладовую", Ложь);
	
	Результат.Вставить("ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию", Неопределено);
	Результат.Вставить("ТаблицаРеквизитовВидовЗапасовПоУмолчанию", ПустаяТаблицаРеквизитовВидовЗапасовПоУмолчанию());
	
	Возврат Результат;
	
КонецФункции

// Процедура заполняет виды запасов в табличной части "Товары" документа поступления товаров.
//
// Параметры:
//	МенеджерВременныхТаблиц - требуется временные таблица ИсходнаяТаблицаТоваров
// 			(НомерСтроки, Номенклатура, Организация, ХозяйственнаяОперация, ТипЗапасов, Поставщик, Соглашение, Валюта, НалогообложениеНДС) 
//	ТабличнаяЧастьТовары - ТабличнаяЧасть - Табличная часть документа
//	ВидЗапасовДокумента - СправочникСсылка.ВидыЗапасов - Найденный вид запасов (возвращаемое значение). Используется если параметр "ТабличнаяЧастьТовары" имеет значение Неопределено.
//	ИмяПоля - Строка - Имя поля в табличной части ТабличнаяЧастьТовары, в котором должны находиться виды запасов.
//	ЭтоПередачаТоваровМеждуОрганизациями - Булево - Признак того, что вызов идет из документа передачи товаров между организациями
//		
Процедура ЗаполнитьВидыЗапасовПоУмолчанию(
	МенеджерВременныхТаблиц, 
	ТабличнаяЧастьТовары, 
	ВидЗапасовДокумента = Неопределено, 
	ИмяПоля = "ВидЗапасов") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.ЭтоВозвратнаяТара
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ТаблицаТоваров.ТипЗапасов
	|	КОНЕЦ КАК ТипЗапасов,
	|	ТаблицаТоваров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.ЭтоВозвратнаяТара
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		ИНАЧЕ ТаблицаТоваров.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.Соглашение КАК Соглашение,
	|	ТаблицаТоваров.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ТаблицаТоваров.НалогообложениеНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ТаблицаТоваров.НалогообложениеОрганизации КАК НалогообложениеОрганизации,
	|	ВЫБОР ТаблицаТоваров.ВладелецТовара
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ВЫБОР ТаблицаТоваров.Контрагент
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР ТаблицаТоваров.Договор
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Договор
	|	КОНЕЦ КАК Договор,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.ГруппаПродукции КАК ГруппаПродукции,
	|	ТаблицаТоваров.ВидЦены КАК ВидЦены,
	|	ТаблицаТоваров.ТекущийВидЗапасов КАК ТекущийВидЗапасов
	|ПОМЕСТИТЬ ТаблицаТоваровСАналитикой
	|ИЗ
	|	ИсходнаяТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Организация КАК Организация
	|ПОМЕСТИТЬ ОтборВидовЗапасов
	|ИЗ
	|	ТаблицаТоваровСАналитикой КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасовРезерва.Ссылка КАК Ссылка,
	|	ВидыЗапасовРезерва.Организация КАК Организация,
	|	ВидыЗапасовРезерва.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасовРезерва.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВидыЗапасовРезерва.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасовРезерва.Соглашение КАК Соглашение,
	|	ВидыЗапасовРезерва.Валюта КАК Валюта,
	|	ВидыЗапасовРезерва.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасовРезерва.Контрагент КАК Контрагент,
	|	ВидыЗапасовРезерва.Договор КАК Договор,
	|	ВидыЗапасовРезерва.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасовРезерва.ВидЦены КАК ВидЦены,
	|	ВидыЗапасовРезерва.Устаревший КАК Устаревший
	|ПОМЕСТИТЬ ВидыЗапасовРезерва
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасовРезерва
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборВидовЗапасов КАК Отбор
	|		ПО ВидыЗапасовРезерва.Организация = Отбор.Организация
	|ГДЕ
	|	НЕ ВидыЗапасовРезерва.ЭтоДубль
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТипЗапасов,
	|	Соглашение,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки            КАК НомерСтроки,
	|	ТаблицаТоваров.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.ТипЗапасов             КАК ТипЗапасов,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара      КАК ЭтоВозвратнаяТара,
	|	ТаблицаТоваров.Организация            КАК Организация,
	|	ТаблицаТоваров.ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.Соглашение             КАК Соглашение,
	|	ТаблицаТоваров.Валюта                 КАК Валюта,
	|	ТаблицаТоваров.НалогообложениеНДС     КАК НалогообложениеНДС,
	|	ТаблицаТоваров.НалогообложениеОрганизации КАК НалогообложениеОрганизации,
	|	ТаблицаТоваров.ВладелецТовара         КАК ВладелецТовара,
	|	ТаблицаТоваров.Контрагент             КАК Контрагент,
	|	ТаблицаТоваров.Договор                КАК Договор,
	|	ТаблицаТоваров.ГруппаПродукции        КАК ГруппаПродукции,
	|	ТаблицаТоваров.ВидЦены                КАК ВидЦены,
	|	ВидыЗапасовРезерва.Ссылка             КАК ВидЗапасов
	|ИЗ
	|	ТаблицаТоваровСАналитикой КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗапасовРезерва КАК ВидыЗапасовРезерва
	|		ПО ТаблицаТоваров.Организация = ВидыЗапасовРезерва.Организация
	|			И ТаблицаТоваров.ТипЗапасов = ВидыЗапасовРезерва.ТипЗапасов
	|			И ТаблицаТоваров.ВладелецТовара = ВидыЗапасовРезерва.ВладелецТовара
	|			И ТаблицаТоваров.Контрагент = ВидыЗапасовРезерва.Контрагент
	|			И ТаблицаТоваров.Соглашение = ВидыЗапасовРезерва.Соглашение
	|			И ТаблицаТоваров.Договор = ВидыЗапасовРезерва.Договор
	|			И ТаблицаТоваров.Валюта = ВидыЗапасовРезерва.Валюта
	|			И ТаблицаТоваров.ГруппаПродукции = ВидыЗапасовРезерва.ГруппаПродукции
	|			И ТаблицаТоваров.ВидЦены = ВидыЗапасовРезерва.ВидЦены
	|			И ТаблицаТоваров.НалогообложениеНДС = ВидыЗапасовРезерва.НалогообложениеНДС
	|			И ТаблицаТоваров.ГруппаФинансовогоУчета = ВидыЗапасовРезерва.ГруппаФинансовогоУчета
	|			И (ВЫБОР
	|					КОГДА ТаблицаТоваров.ТекущийВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|						ТОГДА НЕ ВидыЗапасовРезерва.Устаревший
	|					ИНАЧЕ ВидыЗапасовРезерва.Ссылка = ТаблицаТоваров.ТекущийВидЗапасов
	|				КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаФинансовогоУчета,
	|	ГруппаПродукции,
	|	ТипЗапасов,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборВидовЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВидыЗапасовРезерва";

	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	ПоляКлюча = "ГруппаФинансовогоУчета, ГруппаПродукции, ТипЗапасов, ЭтоВозвратнаяТара";
	КлючСтроки = Новый Структура(ПоляКлюча);
	ВидЗапасов = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ГруппаФинансовогоУчета <> КлючСтроки.ГруппаФинансовогоУчета
			Или Выборка.ГруппаПродукции <> КлючСтроки.ГруппаПродукции
			Или Выборка.ТипЗапасов <> КлючСтроки.ТипЗапасов
			Или Выборка.ЭтоВозвратнаяТара <> КлючСтроки.ЭтоВозвратнаяТара Тогда
			ЗаполнитьЗначенияСвойств(КлючСтроки, Выборка);
			ВидЗапасов = Неопределено;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВидЗапасов) Тогда
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
				ВидЗапасов = Выборка.ВидЗапасов;
			Иначе
				Если ПараметрыСеанса.ПараметрыОбработчикаОбновления.РежимВыполнения = "Отложенно" Тогда
					ВызватьИсключение НСтр("ru = 'Создание новых видов запасов в режиме отложенного обновления запрещено.'");
				КонецЕсли;
				ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
					Выборка.Организация,
					Выборка.ХозяйственнаяОперация,
					Выборка);
			КонецЕсли;
		КонецЕсли;
		
		Если ТабличнаяЧастьТовары <> Неопределено Тогда
			СтрокаТаблицы = ТабличнаяЧастьТовары.Найти(Выборка.НомерСтроки, "НомерСтроки");
			СтрокаТаблицы[ИмяПоля]= ВидЗапасов;
		Иначе
			ВидЗапасовДокумента = ВидЗапасов;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполняет виды запасов в табличной части "ВидыЗапасов" документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - требуется временные таблицы ТаблицаТоваров, ТаблицаВидыЗапасов.
//	Отказ - Булево - Признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//		
Процедура ЗаполнитьВидыЗапасовПоТоварамОрганизаций(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы Тогда
		Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
			СформироватьВТДоступныеВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, "ТаблицаВидыЗапасовПоПериодам");
		Иначе
			СформироватьВТДоступныеВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, "ТаблицаВидыЗапасов");
		КонецЕсли;
	КонецЕсли;
	
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	СохранитьИсходныеДвиженияТоваровИРезервов(ДокументОбъект.Ссылка, МенеджерВременныхТаблиц);
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, Истина);
	
	УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
	
	СформироватьВТТоварыОрганизацийИзменения(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	СформироватьВТСторноРезервов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
			
		ЗаполнитьВидыЗапасовРазныхПериодов(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов);
		
	Иначе
		
		СформироватьВТТаблицаОстатков(
			ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков, 
			ДокументОбъект, 
			МенеджерВременныхТаблиц, 
			ПараметрыЗаполненияВидовЗапасов, 
			Истина);
			
		ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы(
			ДокументОбъект, 
			МенеджерВременныхТаблиц, 
			Отказ, 
			ПараметрыЗаполненияВидовЗапасов);
		
	КонецЕсли;
	
	Если Отказ Тогда
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
		Возврат;
	КонецЕсли;
	
	ТаблицаРезервыТоваровОрганизаций = ТаблицаРезервыТоваровОрганизаций(
		ДокументОбъект, 
		МенеджерВременныхТаблиц, 
		ПараметрыЗаполненияВидовЗапасов,
		Истина);
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ТаблицаРезервыТоваровОрганизаций", ТаблицаРезервыТоваровОрганизаций);
	ДокументОбъект.ДополнительныеСвойства.Вставить("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми", Не ПараметрыЗаполненияВидовЗапасов.ДокументДелаетИПриходИРасход);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Процедура заполняет виды запасов в табличной части "ВидыЗапасов" документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - требуется временные таблицы ТаблицаТоваров, ТаблицаВидыЗапасов.
//	Отказ - Булево - Признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//
Процедура ЗаполнитьВидыЗапасовПоКомиссионнымТоварамИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы Тогда
		СформироватьВТДоступныеВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, "ТаблицаВидыЗапасов");	
	КонецЕсли;
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, Ложь);
	
	УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
	
	СформироватьВТТаблицаОстатков("КомиссионныеТоварыИнтеркампани", ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	ЗаполнитьВидыЗапасовПоТаблицеОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов);
	
	ДозаполнитьВидыЗапасовВОтчетахПоКомиссииИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Отказ Тогда
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет виды запасов в табличной части "ВидыЗапасов" документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - требуется временные таблицы ТаблицаТоваров, ТаблицаВидыЗапасов.
//	Отказ - Булево - Признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//
Процедура ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПараметрыЗаполненияВидовЗапасов.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Неопределено Тогда
		ТекстИсключения = НСтр("ru = 'В вызывающем коде не задано значение параметра ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы Тогда
		СформироватьВТДоступныеВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, "ТаблицаВидыЗапасов");
	КонецЕсли;
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, Ложь);
	
	УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
	
	СформироватьВТТаблицаОстатков(ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков, ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	ЗаполнитьВидыЗапасовПоТаблицеОстатков(
		ДокументОбъект, 
		МенеджерВременныхТаблиц, 
		Отказ, 
		ПараметрыЗаполненияВидовЗапасов);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Отказ Тогда
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
	КонецЕсли;
	
КонецПроцедуры

// При проведении документа определяется факт потребления "чужих" видов запасов и выполняется
// формирование движений по РН Резервы товаров организаций.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	Отказ - Булево - Признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//
Процедура СформироватьРезервыПоТоварамОрганизаций(ДокументОбъект, Отказ, ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыСеанса.ПараметрыОбработчикаОбновления.РежимВыполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
	
	Если ДополнительныеСвойства.Свойство("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми")
		И ДополнительныеСвойства.ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.НужноКонтролироватьОстаткиТоваровОрганизаций
		И Не ДополнительныеСвойства.НужноФормироватьСторноПоРезервамТоваровОрганизаций Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Если ДополнительныеСвойства.НужноФормироватьСторноПоРезервамТоваровОрганизаций
		И НЕ ДокументОбъект.ДополнительныеСвойства.Свойство("СформированоВтСторно") Тогда // сторно резервов вызываем один раз
		СформироватьВТСторноРезервов(
			ДокументОбъект, 
			МенеджерВременныхТаблиц, 
			ПараметрыЗаполненияВидовЗапасов);
		ДокументОбъект.ДополнительныеСвойства.Вставить("СформированоВтСторно", Истина);
	КонецЕсли;
		
	Если ДополнительныеСвойства.НужноКонтролироватьОстаткиТоваровОрганизаций Тогда
		СформироватьРезервыПоОрганизациямДляКонтроля(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов);
	КонецЕсли;
	
	Если Отказ Тогда
		ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
		Возврат;
	КонецЕсли;
	
	ТаблицаРезервыТоваровОрганизаций = ТаблицаРезервыТоваровОрганизаций(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, Ложь);	
	
	// Если документ делает и приход, и расход, то писать регистр нужно только тогда, когда по второй стороне
	// движений таблица уже сформирована
	Если Не ПараметрыЗаполненияВидовЗапасов.ДокументДелаетИПриходИРасход
		Или ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") Тогда
		
		НаборРезервыТоваровОрганизаций = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей();
		НаборРезервыТоваровОрганизаций.Отбор.Регистратор.Установить(ДокументОбъект.Ссылка);
		
		ПроведениеСерверУТ.ЗаполнитьДополнительныеСвойстваНабораПоДокументу(ДокументОбъект, НаборРезервыТоваровОрганизаций);
		
		НаборРезервыТоваровОрганизаций.Загрузить(ТаблицаРезервыТоваровОрганизаций);
		НаборРезервыТоваровОрганизаций.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", Истина);
		НаборРезервыТоваровОрганизаций.Записать();
		Если ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") Тогда
			ДокументОбъект.ДополнительныеСвойства.ТаблицаРезервыТоваровОрганизаций.Очистить();
		КонецЕсли;
	Иначе
		ДокументОбъект.ДополнительныеСвойства.Вставить("ТаблицаРезервыТоваровОрганизаций", ТаблицаРезервыТоваровОрганизаций);
		ДокументОбъект.ДополнительныеСвойства.Вставить("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми", Ложь);
	КонецЕсли;
	
КонецПроцедуры

// При проведении документа формируется ВТ ДоступныеВидыЗапасов для использования в других механизмах контроля,
// ставятся необходимые блокировки.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	РежимЗаписи - РежимЗаписиДокумента - Режим записи документа.
//	ПараметрыЗаполненияВидовЗапасов - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//
Процедура ПодготовитьЗаписьТоваровОрганизаций(ДокументОбъект, РежимЗаписи, ПараметрыЗаполненения = Неопределено) Экспорт
	
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства; 
	МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц; 
	
	Если ПараметрыЗаполненения = Неопределено Тогда
		ПараметрыЗаполненения = ПараметрыЗаполненияВидовЗапасов();
		ПараметрыЗаполненения.ОтборыВидовЗапасов.Организация = ДокументОбъект[ПараметрыЗаполненения.ИмяПоляОрганизация];
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми")
		И ДополнительныеСвойства.ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьИсходныеДвиженияТоваровИРезервов(ДокументОбъект.Ссылка, МенеджерВременныхТаблиц); 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.Период КАК Период,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ТоварыОрганизаций.Количество
	|		ИНАЧЕ -ТоварыОрганизаций.Количество
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТоварыОрганизаций
	|ИЗ
	|	&ТоварыОрганизаций КАК ТоварыОрганизаций";
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Запрос.УстановитьПараметр("ТоварыОрганизаций", ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизаций);
	Иначе
		Запрос.УстановитьПараметр("ТоварыОрганизаций", РегистрыНакопления.ТоварыОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки());
	КонецЕсли;
	Запрос.Выполнить();
	
	СформироватьВТТоварыОрганизацийИзменения(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненения);
	
	Если Не ПараметрыЗаполненения.ДоступныеВидыЗапасовУжеСформированы Тогда
		Организации = ОрганизацииДляКонтроляОстатков(МенеджерВременныхТаблиц);
		Если ЗначениеЗаполнено(ПараметрыЗаполненения.ОтборыВидовЗапасов.Организация) Тогда
			Организации.Добавить(ПараметрыЗаполненения.ОтборыВидовЗапасов.Организация);
			Организации = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Организации);
		КонецЕсли;
		ПараметрыЗаполненения.ОтборыВидовЗапасов.Организация = Организации;
		СформироватьВТДоступныеВидыЗапасов(
			ДокументОбъект, 
			МенеджерВременныхТаблиц, 
			ПараметрыЗаполненения,
			"ДвиженияТоварыОрганизацийПередЗаписью");
	КонецЕсли;
	
	УстановитьДопСвойстваКонтролироватьОстаткиИФормироватьСторно(ДокументОбъект, ПараметрыЗаполненения, МенеджерВременныхТаблиц);
	
	Если ДополнительныеСвойства.НужноКонтролироватьОстаткиТоваровОрганизаций
		Или ДополнительныеСвойства.НужноФормироватьСторноПоРезервамТоваровОрганизаций Тогда
		СформироватьВтОтборыОстатковПоТаблицеИзменений(МенеджерВременныхТаблиц);
		УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет проведение документов по регистру "Себестоимость товаров".
//
// Параметры:
//	Параметры - Строка - Параметры вызова метода.
//	АдресХранилища - Строка - Адрес хранилища, в который помещается результат работы.
//
Процедура ПроведениеДокументовПоРегиструСебестоимостьТоваров(Параметры="", АдресХранилища="") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КодЯзыка = Метаданные.ОсновнойЯзык.КодЯзыка;
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Запасы сервер.Проведение документов по регистру себестоимость товаров'", КодЯзыка), 
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru = 'Начато перепроведение документов по регистру ""Себестоимость товаров""'", КодЯзыка), 
		РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
		
	ИспользоватьВидыЗапасов = Константы.УчитыватьСебестоимостьТоваровПоВидамЗапасов.Получить();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Себестоимость.Регистратор КАК Ссылка,
	|	Себестоимость.МоментВремени КАК МоментВремени
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	| ТИПЗНАЧЕНИЯ(Себестоимость.Регистратор) <> ТИП(Документ.РасчетСебестоимостиТоваров)
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени Возр
	|");
	
	Запрос.УстановитьПараметр("ОчиститьВидыЗапасов", НЕ ИспользоватьВидыЗапасов);
	ДопСвойства = Новый Структура("ЭтоНовый, РежимЗаписи", Ложь, РежимЗаписиДокумента.Проведение);
	ДопСвойства.Вставить("ПериодЗаданияКРасчетуСебестоимости", Дата(1,1,1));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		// Проводим документы по регистрам "Себестоимость товаров" и "Выручка и себестоимость продаж".
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ИмяДокумента = Выборка.Ссылка.Метаданные().Имя;
			ЭлементБлокировки = Блокировка.Добавить("Документ." + ИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			Отказ = Ложь;
			
			ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Выборка.Ссылка, ДопСвойства, РежимПроведенияДокумента.Неоперативный);
			Документы[ИмяДокумента].ИнициализироватьДанныеДокумента(Выборка.Ссылка, ДопСвойства);
			
			Если ДопСвойства.ТаблицыДляДвижений.Свойство("ТаблицаСебестоимостьТоваров")
			 И ДопСвойства.ТаблицыДляДвижений.ТаблицаСебестоимостьТоваров.Количество() > 0 Тогда
				ЗаписатьДвиженияВБазу(
					РегистрыНакопления.СебестоимостьТоваров, 
					ДопСвойства.ТаблицыДляДвижений.ТаблицаСебестоимостьТоваров,
					Выборка.Ссылка);
				РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьЗаписьРегистра(
					ДопСвойства.ТаблицыДляДвижений.ТаблицаСебестоимостьТоваров[0].Период,
					Выборка.Ссылка,
					ДопСвойства.ТаблицыДляДвижений.ТаблицаСебестоимостьТоваров[0].Организация);
			КонецЕсли;
			Если ДопСвойства.ТаблицыДляДвижений.Свойство("ТаблицаВыручкаИСебестоимостьПродаж") Тогда
				ЗаписатьДвиженияВБазу(
					РегистрыНакопления.ВыручкаИСебестоимостьПродаж, 
					ДопСвойства.ТаблицыДляДвижений.ТаблицаВыручкаИСебестоимостьПродаж,
					Выборка.Ссылка);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Ошибка при проведении документа'", КодЯзыка), 
				УровеньЖурналаРегистрации.Ошибка,
				,
				, 
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры 

// Сохраняет в менеджере временных таблиц исходные движения по регистру Товары организаций.
//
// Параметры:
//	ДокументСсылка - ДокументСсылка - Ссылка на документ.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, в который будет помещена таблица.
//
Процедура СохранитьИсходныеДвиженияТоваровИРезервов(ДокументСсылка, МенеджерВременныхТаблиц, СоздаватьПустыеТаблицы = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый Массив;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ДвиженияТоварыОрганизацийПередЗаписью") = Неопределено Тогда
		
		Если СоздаватьПустыеТаблицы Тогда
			ТекстЗапроса =	
			"ВЫБРАТЬ
			|	Товары.Период,
			|	Товары.Регистратор,
			|	Товары.НомерСтроки,
			|	Товары.Активность,
			|	Товары.ВидДвижения,
			|	Товары.АналитикаУчетаНоменклатуры,
			|	Товары.Организация,
			|	Товары.ВидЗапасов,
			|	Товары.НомерГТД,
			|	Товары.Количество,
			|	Товары.ХозяйственнаяОперация,
			|	Товары.НалогообложениеНДС,
			|	Товары.КорАналитикаУчетаНоменклатуры,
			|	Товары.КорВидЗапасов,
			|	Товары.ОрганизацияОтгрузки,
			|	Товары.ДокументРеализации,
			|	Товары.СтатьяРасходов,
			|	Товары.АналитикаРасходов,
			|	Товары.АналитикаАктивовПассивов,
			|	Товары.Номенклатура,
			|	Товары.Характеристика,
			|	Товары.РасчетПартий,
			|	Товары.Первичное
			|ПОМЕСТИТЬ ДвиженияТоварыОрганизацийПередЗаписью
			|ИЗ
			|	&ТоварыОрганизаций КАК Товары";
			
			ТоварыОрганизаций = РегистрыНакопления.ТоварыОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
			Запрос.УстановитьПараметр("ТоварыОрганизаций", ТоварыОрганизаций);
			
		Иначе
			ТекстЗапроса =	
			"ВЫБРАТЬ
			|	Товары.Период,
			|	Товары.Регистратор,
			|	Товары.НомерСтроки,
			|	Товары.Активность,
			|	Товары.ВидДвижения,
			|	Товары.АналитикаУчетаНоменклатуры,
			|	Товары.Организация,
			|	Товары.ВидЗапасов,
			|	Товары.НомерГТД,
			|	Товары.Количество,
			|	Товары.ХозяйственнаяОперация,
			|	Товары.НалогообложениеНДС,
			|	Товары.КорАналитикаУчетаНоменклатуры,
			|	Товары.КорВидЗапасов,
			|	Товары.ОрганизацияОтгрузки,
			|	Товары.ДокументРеализации,
			|	Товары.СтатьяРасходов,
			|	Товары.АналитикаРасходов,
			|	Товары.АналитикаАктивовПассивов,
			|	Товары.Номенклатура,
			|	Товары.Характеристика,
			|	Товары.РасчетПартий,
			|	Товары.Первичное
			|ПОМЕСТИТЬ ДвиженияТоварыОрганизацийПередЗаписью
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций КАК Товары
			|ГДЕ
			|	Товары.Регистратор = &Ссылка";
		КонецЕсли;
		ТекстыЗапроса.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ДвиженияРезервыТоварыОрганизацийПередЗаписью") = Неопределено Тогда
		
		Если СоздаватьПустыеТаблицы Тогда
			ТекстЗапроса =	
			"ВЫБРАТЬ
			|	Резервы.Период,
			|	Резервы.Регистратор,
			|	Резервы.НомерСтроки,
			|	Резервы.Активность,
			|	Резервы.ВидДвижения,
			|	Резервы.АналитикаУчетаНоменклатуры,
			|	Резервы.Организация,
			|	Резервы.ВидЗапасов,
			|	Резервы.НомерГТД,
			|	Резервы.Количество,
			|	Резервы.КорОрганизация,
			|	Резервы.КорВидЗапасов,
			|	Резервы.НалогообложениеНДС
			|ПОМЕСТИТЬ ДвиженияРезервыТоварыОрганизацийПередЗаписью
			|ИЗ
			|	&РезервыТоваровОрганизаций КАК Резервы
			|ГДЕ
			|	Резервы.Регистратор = &Ссылка";
			
			РезервыТоваровОрганизаций = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
			Запрос.УстановитьПараметр("РезервыТоваровОрганизаций", РезервыТоваровОрганизаций);
			
		Иначе
			ТекстЗапроса =	
			"ВЫБРАТЬ
			|	Резервы.Период,
			|	Резервы.Регистратор,
			|	Резервы.НомерСтроки,
			|	Резервы.Активность,
			|	Резервы.ВидДвижения,
			|	Резервы.АналитикаУчетаНоменклатуры,
			|	Резервы.Организация,
			|	Резервы.ВидЗапасов,
			|	Резервы.НомерГТД,
			|	Резервы.Количество,
			|	Резервы.КорОрганизация,
			|	Резервы.КорВидЗапасов,
			|	Резервы.НалогообложениеНДС
			|ПОМЕСТИТЬ ДвиженияРезервыТоварыОрганизацийПередЗаписью
			|ИЗ
			|	РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
			|ГДЕ
			|	Резервы.Регистратор = &Ссылка";
			
		КонецЕсли;
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ТекстыЗапроса.Количество() > 0 Тогда
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Разделитель = "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Запрос.Текст = СтрСоединить(ТекстыЗапроса, Разделитель);
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
		Запрос.Выполнить();
	КонецЕсли;
КонецПроцедуры

// Метод формирует на основании отборов ВТ ДоступныеВидыЗапасов. Используются при построении таблицы отстатков.
// Экспортируется для документа ВозвратСырьяДавальцу.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором будут заполняться виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Необходима таблица ТаблицаТоваров,
//	ВТ ДоступныеВидыЗапасов будет помещена сюда же.
//	ПараметрыЗаполненияВидовЗапасов - Стуктура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//
Процедура СформироватьВТДоступныеВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ИмяВТИсточникаТекущихВидовЗапасов) Экспорт
	
	ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы = Истина;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ДоступныеВидыЗапасов") <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОтборыВидовЗапасов = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВидыЗапасовДокумента") <> Неопределено Тогда
		ТекстЗапроса = 
		"УНИЧТОЖИТЬ ВидыЗапасовДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	Иначе
		ТекстЗапроса = "";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ ВидыЗапасовДокумента
	|ИЗ
	|	 &ИмяВТИсточникаТекущихВидовЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Настройка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) КАК НалогообложениеНДС
	|ПОМЕСТИТЬ Налогообложение
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Дата, &КонтролироватьНалогообложениеНДС) КАК Настройка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК СпрУчетнаяПолитика
	|		ПО Настройка.УчетнаяПолитика = СпрУчетнаяПолитика.Ссылка
	|			И (СпрУчетнаяПолитика.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная))
	|ГДЕ
	|	&КонтролироватьНалогообложениеНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|ГДЕ
	|	НЕ &КонтролироватьНалогообложениеНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Виды запасов собственной организации
	|ВЫБРАТЬ
	|	ВидыЗапасов.Организация КАК ДляОрганизации,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ВозможныеВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УстаревшиеВидыЗапасовСОстатками КАК УстаревшиеВидыЗапасовСОстатками
	|		ПО ВидыЗапасов.Ссылка = УстаревшиеВидыЗапасовСОстатками.ВидЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗапасовДокумента КАК ВидыЗапасовДокумента
	|		ПО ВидыЗапасов.Ссылка = ВидыЗапасовДокумента.ВидЗапасов
	|ГДЕ
	|	(&ПоВсемТипамЗапасов ИЛИ ВидыЗапасов.ТипЗапасов В (&ТипЗапасов))
	|	И (&ПоВсемНалогообложениямНДС ИЛИ ВидыЗапасов.НалогообложениеНДС В (&НалогообложениеНДС)
	|		ИЛИ ВидыЗапасов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ИЛИ ВидыЗапасов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|		ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) // собственный товар можно продавать под любое налогообложение.
	|	И (&ПоВсемВладелецамТоваров ИЛИ ВидыЗапасов.ВладелецТовара В (&ВладелецТовара))
	|	И (&ПоВсемСоглашениям ИЛИ ВидыЗапасов.Соглашение В (&Соглашение))
	|	И (&ПоВсемВалютам ИЛИ ВидыЗапасов.Валюта В (&Валюта))
	|	И (&ПоВсемКонтрагентам ИЛИ ВидыЗапасов.Контрагент В (&Контрагент))
	|	И (&ПоВсемДоговорам ИЛИ ВидыЗапасов.Договор В (&Договор))
	|	И (&ПоВсемГруппамПродукции ИЛИ ВидыЗапасов.ГруппаПродукции В (&ГруппаПродукции))
	|	И (&ПоВсемВидамЦен ИЛИ ВидыЗапасов.ВидЦены В (&ВидЦены))
	|	И ВидыЗапасов.Организация В (&Организация)
	|	И (НЕ ВидыЗапасов.Устаревший
	|				И НЕ ВидыЗапасов.ЭтоДубль
	|			ИЛИ НЕ УстаревшиеВидыЗапасовСОстатками.ВидЗапасов ЕСТЬ NULL
	|           ИЛИ НЕ ВидыЗапасовДокумента.ВидЗапасов ЕСТЬ NULL)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Виды запасов по интеркампани
	|ВЫБРАТЬ
	|	ВидыЗапасов.Организация,
	|	ВидыЗапасов.Ссылка,
	|	ВЫБОР
	|		КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &КонтролироватьНалогообложениеНДС
	|				И Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|			ТОГДА ВЫБОР
	|					КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|						ТОГДА ВидыЗапасов.НалогообложениеНДС
	|					ИНАЧЕ ЕСТЬNULL(Налогообложение.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС))
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО ВидыЗапасов.Организация = Настройка.ОрганизацияВладелец
	|			И ВидыЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|			И (Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается))
	|			И (Настройка.ОрганизацияПродавец В (&Организация))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Налогообложение КАК Налогообложение
	|		ПО (Настройка.ОрганизацияВладелец = Налогообложение.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УстаревшиеВидыЗапасовСОстатками КАК УстаревшиеВидыЗапасовСОстатками
	|		ПО ВидыЗапасов.Ссылка = УстаревшиеВидыЗапасовСОстатками.ВидЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗапасовДокумента КАК ВидыЗапасовДокумента
	|		ПО ВидыЗапасов.Ссылка = ВидыЗапасовДокумента.ВидЗапасов
	|ГДЕ
	|	&ПодбиратьВидыЗапасовПоИнтеркампани
	|	И НЕ ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И НЕ ВидыЗапасов.Организация В (&ИнтеркампаниКроме)
	|	И (&ПоВсемТипамЗапасов ИЛИ ВидыЗапасов.ТипЗапасов В (&ТипЗапасов))
	|	И (НЕ ВидыЗапасов.Устаревший
	|				И НЕ ВидыЗапасов.ЭтоДубль
	|			ИЛИ НЕ УстаревшиеВидыЗапасовСОстатками.ВидЗапасов ЕСТЬ NULL
	|           ИЛИ НЕ ВидыЗапасовДокумента.ВидЗапасов ЕСТЬ NULL)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозможныеВидыЗапасов.ДляОрганизации КАК ДляОрганизации,
	|	ВозможныеВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	ВозможныеВидыЗапасов КАК ВозможныеВидыЗапасов
	|ГДЕ
	|	(НЕ &КонтролироватьНалогообложениеНДС
	|			ИЛИ ВЫБОР
	|				КОГДА ВозможныеВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|					ТОГДА &НалогообложениеНДС В (ВозможныеВидыЗапасов.НалогообложениеНДС, НЕОПРЕДЕЛЕНО)
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Налогообложение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВозможныеВидыЗапасов
	|";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ПустаяСтрока(ИмяВТИсточникаТекущихВидовЗапасов) Тогда
		ПустаяТаблицаВидовЗапасов = Новый ТаблицаЗначений;
		ПустаяТаблицаВидовЗапасов.Колонки.Добавить("ВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
		
		Запрос.УстановитьПараметр("ИмяВТИсточникаТекущихВидовЗапасов", ПустаяТаблицаВидовЗапасов);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяВТИсточникаТекущихВидовЗапасов", ИмяВТИсточникаТекущихВидовЗапасов);
	КонецЕсли;
	                                                                
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Дата", ДокументОбъект.Дата);
	
	Если ЗначениеЗаполнено(ОтборыВидовЗапасов.Организация) Тогда
		Запрос.УстановитьПараметр("Организация", ОтборыВидовЗапасов.Организация);
	Иначе
		Запрос.УстановитьПараметр("Организация", ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
	КонецЕсли;
	
	КонтролироватьНалогообложениеНДС = КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов);
	Запрос.УстановитьПараметр("КонтролироватьНалогообложениеНДС", КонтролироватьНалогообложениеНДС);
	
	ПодбиратьВидыЗапасовПоИнтеркампани = ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями")
										И ПараметрыЗаполненияВидовЗапасов.ПодбиратьВидыЗапасовПоИнтеркампани;

	Запрос.УстановитьПараметр("ПодбиратьВидыЗапасовПоИнтеркампани", ПодбиратьВидыЗапасовПоИнтеркампани);

	Если ПодбиратьВидыЗапасовПоИнтеркампани Тогда
		Запрос.УстановитьПараметр("ИнтеркампаниКроме", ПараметрыЗаполненияВидовЗапасов.ПриПодбореПоИнтеркампаниИсключатьОрганизации);
	Иначе
		Запрос.УстановитьПараметр("ИнтеркампаниКроме", Новый Массив);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипЗапасов", ОтборыВидовЗапасов.ТипЗапасов);
	Запрос.УстановитьПараметр("ПоВсемТипамЗапасов", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ТипЗапасов));
	
	Запрос.УстановитьПараметр("НалогообложениеНДС", ОтборыВидовЗапасов.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ПоВсемНалогообложениямНДС", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.НалогообложениеНДС));
	
	Запрос.УстановитьПараметр("ВладелецТовара", ОтборыВидовЗапасов.ВладелецТовара);
	Запрос.УстановитьПараметр("ПоВсемВладелецамТоваров", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ВладелецТовара));
	
	Запрос.УстановитьПараметр("Соглашение", ОтборыВидовЗапасов.Соглашение);
	Запрос.УстановитьПараметр("ПоВсемСоглашениям", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Соглашение));
	
	Запрос.УстановитьПараметр("Валюта", ОтборыВидовЗапасов.Валюта);
	Запрос.УстановитьПараметр("ПоВсемВалютам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Валюта));
	
	Запрос.УстановитьПараметр("Контрагент", ОтборыВидовЗапасов.Контрагент);
	Запрос.УстановитьПараметр("ПоВсемКонтрагентам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Контрагент));
	
	Запрос.УстановитьПараметр("Договор", ОтборыВидовЗапасов.Договор);
	Запрос.УстановитьПараметр("ПоВсемДоговорам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Договор));
	
	Запрос.УстановитьПараметр("ГруппаПродукции", ОтборыВидовЗапасов.ГруппаПродукции);
	Запрос.УстановитьПараметр("ПоВсемГруппамПродукции", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ГруппаПродукции));
	
	Запрос.УстановитьПараметр("ВидЦены", ОтборыВидовЗапасов.ВидЦены);
	Запрос.УстановитьПараметр("ПоВсемВидамЦен", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ВидЦены));
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыРегламентныхЗаданий

// Процедуры обновления информации о доступности товаров.
//
Процедура ОбновитьИнформациюОДоступностиТоваровДляВнешнихПользователей() Экспорт

	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОбновлениеДанныхОДоступностиТоваровДляВнешнихПользователей);
	
	УстановитьПривилегированныйРежим(Истина);

	НаборЗаписей = РегистрыСведений.ДоступностьТоваровДляВнешнихПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Записать(Истина);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоДня",   НачалоДня(ТекущаяДатаСеанса()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Номенклатура           КАК Номенклатура,
	|	Т.Характеристика         КАК Характеристика,
	|	Т.Склад                  КАК Склад,
	|	Т.ВНаличииОстаток
	|		- Т.ВРезервеСоСкладаОстаток
	|		- Т.ВРезервеПодЗаказОстаток КАК Количество
	|
	|ПОМЕСТИТЬ ВтОстаткиСклада
	|ИЗ
	|	РегистрНакопления.СвободныеОстатки.Остатки(,) КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Характеристика, Склад
	|;
	|
	|//////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ДатаДоступности         КАК Период,
	|
	|	Т.Номенклатура            КАК Номенклатура,
	|	Т.Характеристика          КАК Характеристика,
	|	Т.Склад                   КАК Склад,
	|
	|	Т.Количество + ЕСТЬNULL(ОстаткиСклада.Количество, 0) КАК Доступно
	|
	|ИЗ
	|	РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК Т
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстаткиСклада КАК ОстаткиСклада
	|		ПО Т.Склад          = ОстаткиСклада.Склад
	|		 И Т.Номенклатура   = ОстаткиСклада.Номенклатура
	|		 И Т.Характеристика = ОстаткиСклада.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
	|		ПО Т.Склад          = НастройкаХарактеристика.Склад
	|		 И Т.Номенклатура   = НастройкаХарактеристика.Номенклатура
	|		 И Т.Характеристика = НастройкаХарактеристика.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
	|		ПО Т.Склад        = НастройкаНоменклатура.Склад
	|		 И Т.Номенклатура = НастройкаНоменклатура.Номенклатура
	|		 И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
	|		ПО Т.Склад = НастройкаСклад.Склад
	|		 И НастройкаСклад.Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
	|		 И НастройкаНоменклатура.Склад ЕСТЬ NULL
	|
	|ГДЕ
	|	ЕСТЬNULL(НастройкаХарактеристика.Контролировать, ЕСТЬNULL(НастройкаНоменклатура.Контролировать, НастройкаСклад.Контролировать))
	|	И Т.ДатаДоступности > &НачалоДня
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&НачалоДня               КАК Период,
	|
	|	Т.Номенклатура           КАК Номенклатура,
	|	Т.Характеристика         КАК Характеристика,
	|	Т.Склад                  КАК Склад,
	|
	|	Т.Количество + ЕСТЬNULL(ОстаткиИзЗаказов.Количество, 0) КАК Доступно
	|
	|ИЗ
	|	ВтОстаткиСклада КАК Т
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК ОстаткиИзЗаказов
	|		ПО Т.Склад          = ОстаткиИзЗаказов.Склад
	|		 И Т.Номенклатура   = ОстаткиИзЗаказов.Номенклатура
	|		 И Т.Характеристика = ОстаткиИзЗаказов.Характеристика
	|		 И ОстаткиИзЗаказов.ДатаДоступности = ДАТАВРЕМЯ(1, 1, 1)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
	|		ПО Т.Склад          = НастройкаХарактеристика.Склад
	|		 И Т.Номенклатура   = НастройкаХарактеристика.Номенклатура
	|		 И Т.Характеристика = НастройкаХарактеристика.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
	|		ПО Т.Склад        = НастройкаНоменклатура.Склад
	|		 И Т.Номенклатура = НастройкаНоменклатура.Номенклатура
	|		 И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
	|		ПО Т.Склад = НастройкаСклад.Склад
	|		 И НастройкаСклад.Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
	|		 И НастройкаНоменклатура.Склад ЕСТЬ NULL
	|
	|ГДЕ
	|	ЕСТЬNULL(НастройкаХарактеристика.Контролировать, ЕСТЬNULL(НастройкаНоменклатура.Контролировать, НастройкаСклад.Контролировать))";
	
	НаборЗаписей = РегистрыСведений.ДоступностьТоваровДляВнешнихПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	Если НаборЗаписей.Модифицированность() Тогда
		НаборЗаписей.Записать(Ложь);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПользовательскийИнтерфейс

// Устанавливаем условное оформление для подразделения, если используются виды запасов по подразделениям
//
// Параметры:
// 		Форма - Форма - Содержит данную форму 
// 		ИмяПоляВводаПодразделения - Строка - Наименование элемента формы, содержащего подразделение,
//											   если оно отличается от "Подразделение"
// 		ПутьКПолюОтбора - Строка - Полный путь к реквизиту "Подразделение",
//									если он отличается от "Объект.Подразделение"
// 
Процедура УстановитьУсловноеОформлениеПодразделенияДляВидовЗапасов(Форма,
																	ИмяПоляВводаПодразделения = "Подразделение",
																	ПутьКПолюОтбора = "Объект.Подразделение") Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам") Тогда
		Возврат;
	КонецЕсли;
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаПодразделения].Имя);
	
	ЭлементыФормы[ИмяПоляВводаПодразделения].АвтоОтметкаНезаполненного = Истина;
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюОтбора);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры

// Процедура помещает табличные части "Товары" и "Виды запасов" во временное хранилище.
//
// Параметры:
//	Товары - ТабличнаяЧасть - Помещаемая таб.часть "Товары" во временое хранилище
//	ВидыЗапасов - ТабличнаяЧасть - Помещаемая таб.часть "Виды запасов" во временое хранилище
//	УникальныйИдентификатор - УникальныйИдентификатор - Идентификатор формы, в который помещаются таб.части
//	АдресТоваровВХранилище - Строка - Адрес таб.части "Товары" во временном хранилище
//	АдресВидовЗапасовВХранилище - Строка - Адрес таб.части "Виды запасов" во временном хранилище
//
Процедура ПоместитьТоварыИВидыЗапасовВХранилище(
	Знач Товары,
	Знач ВидыЗапасов,
	УникальныйИдентификатор, 
	АдресТоваровВХранилище, 
	АдресВидовЗапасовВХранилище
	) Экспорт
	
	КолонкиТаблицаТоваров = "НомерСтроки, АналитикаУчетаНоменклатуры, Номенклатура, Характеристика, Количество";
	КолонкиТаблицаВидовЗапасов = "АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, Количество";
	
	Если Товары.Количество() > 0 Тогда
		
		Если Товары[0].Свойство("Сумма") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",Сумма";
		КонецЕсли;
		Если Товары[0].Свойство("СуммаНДС") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",СуммаНДС,СтавкаНДС";
		КонецЕсли;
		Если Товары[0].Свойство("СуммаПродажи") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",СуммаПродажи";
		КонецЕсли;
		Если Товары[0].Свойство("Склад") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",Склад";
		КонецЕсли;
		Если Товары[0].Свойство("ДокументРеализации") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",ДокументРеализации";
		КонецЕсли;
		Если Товары[0].Свойство("Серия") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",Серия";
		КонецЕсли;
		Если Товары[0].Свойство("Назначение") Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",Назначение";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидыЗапасов.Количество() > 0 Тогда
		
		Если ВидыЗапасов[0].Свойство("СуммаСНДС") Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",СуммаСНДС";
		КонецЕсли;
		Если ВидыЗапасов[0].Свойство("СуммаНДС") Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",СуммаНДС,СтавкаНДС";
		КонецЕсли;
		Если ВидыЗапасов[0].Свойство("Склад") Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",Склад";
		КонецЕсли;
		Если ВидыЗапасов[0].Свойство("СкладОтгрузки") Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",СкладОтгрузки";
		КонецЕсли;
		Если ВидыЗапасов[0].Свойство("ДокументРеализации") Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",ДокументРеализации";
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаТоваров = Товары.Выгрузить(,КолонкиТаблицаТоваров);
	ТаблицаВидовЗапасов = ВидыЗапасов.Выгрузить(,КолонкиТаблицаВидовЗапасов);
	
	АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(
		ТаблицаТоваров,
		УникальныйИдентификатор);
	АдресВидовЗапасовВХранилище = ПоместитьВоВременноеХранилище(
		ТаблицаВидовЗапасов,
		УникальныйИдентификатор);
	
КонецПроцедуры // ПоместитьТоварыИВидыЗапасовВХранилище()

// Процедура заполняет список выбора налогообложения для документа закупки.
//
// Параметры:
//	Поле - ПолеФормы - Поле формы для выбора налогообложения
//
Процедура ЗаполнитьСписокВыбораНалогообложения(Поле, ХозяйственнаяОперация) Экспорт
	
	СписокНалогообложений = Поле.СписокВыбора;
	
	СписокНалогообложений.Очистить();
	СписокНалогообложений.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, НСтр("ru = 'Закупка облагается НДС'"));
	СписокНалогообложений.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС, НСтр("ru = 'Закупка не облагается НДС'"));
	ЗакупкиСервер.ЗаполнитьСписокВыбораНалогообложения(Поле, ХозяйственнаяОперация)
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполненияРеквизитов

// Проверяет заполнение подразделения в табличной части.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект.ЗаказПоставщику, ДокументОбъект.ПоступлениеТоваровИУслуг - Проверяемый документ
//	Товары - ДанныеФормыКоллекция - Табличная часть товаров
//	ТипыНоменклатуры - Массив - Массив проверяемых типов номенклатуры
//	ТекстОшибки - Строка - Текст ошибки с параметром "%1" для номера строки
//	Отказ - Булево - Признак наличия ошибок
//
Процедура ПроверитьЗаполнениеПодразделенияВТабличнойЧасти(ДокументОбъект, Товары, ТипыНоменклатуры, ТекстОшибки, Отказ) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения") Тогда
		Возврат;
	КонецЕсли;  
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры В (&ТипыНоменклатуры)
	|	И ТаблицаТовары.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ТаблицаТовары",     Товары.Выгрузить(, "Номенклатура, Подразделение, НомерСтроки"));
	Запрос.УстановитьПараметр("ТипыНоменклатуры",  ТипыНоменклатуры);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Выборка.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ДокументОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Подразделение"),
				,
				Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура проверяет указание номеров ГТД в табличной части "Товары".
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Товары - ДанныеФормыКоллекция - Табличная часть товаров
//	Отказ - Булево - Признак отказа от проведения документа
//
Процедура ПроверитьЗаполнениеНомеровГТД(ДокументОбъект, Отказ, ИмяТЧ = "Товары") Экспорт
	
	МетаданныеОбъекта = ДокументОбъект.Метаданные();
	ПредставлениеТЧ = МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Синоним;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки КАК НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура КАК Номенклатура,
	|	ИсходнаяТаблица.НомерГТД КАК НомерГТД
	|
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ИсходнаяТаблица
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.Номенклатура.ВестиУчетПоГТД
	|");
	ТаблицаТовары = ДокументОбъект[ИмяТЧ].Выгрузить(, "НомерСтроки, Номенклатура, НомерГТД");
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не заполнена колонка ""Номер ГТД"" в строке %1 списка ""%2""'"),
			Выборка.НомерСтроки,
			ПредставлениеТЧ);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ДокументОбъект,
			ИмяТЧ + "[" + (Выборка.НомерСтроки - 1) + "].НомерГТД",
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ИсправлениеОтрицательныхОстатковТоваровКПередаче

// Выполняет исправление отрицательных остатков по РН Товары организаций к передаче в фоновом задании.
//
// Параметры:
//	ПараметрыЗадания - Структура - Параметры расчета в фоне.
//
// Возвращаемое значение:
//	Булево - Признак успешного запуска задания.
Функция ИсправитьОстаткиПоТоварамКПередачеВФоновомЗадании(ПараметрыЗадания) Экспорт
	
	НаименованиеЗадания = НСтр("ru = 'Исправление отрицательных остатков по товарам к передаче'");
	
	ПараметрыЭкспортнойПроцедуры = Новый Массив();
	ПараметрыЭкспортнойПроцедуры.Добавить(ПараметрыЗадания);
	
	ПараметрыЗадания = Новый Массив();
	ПараметрыЗадания.Добавить("ЗапасыСервер.ИсправитьОстаткиПоТоварамКПередаче");
	ПараметрыЗадания.Добавить(ПараметрыЭкспортнойПроцедуры);
	
	ФоновоеЗадание = ФоновыеЗадания.Выполнить("ОбщегоНазначения.ВыполнитьМетодКонфигурации", ПараметрыЗадания, , НаименованиеЗадания);
	
	Возврат ФоновоеЗадание.УникальныйИдентификатор;
	
КонецФункции

// Исправляет отрицательные остатки по РН Товары организаций к передаче.
// Вызывается из Обработки.ЖурналДокументовИнтеркампани.РабочееМестоПередачиТоваров21.
//
// ПараметрыВызова - Структура:
//	 * НачалоПериода - Период - Дата начала выборки движений к исправлению.
//	 * КонецПериода - Период - Дата окончания выборки движений к исправлению.
//	 * Организации - Массив - Перечень организаций по которым необходимо исправить остатки.
//
Процедура ИсправитьОстаткиПоТоварамКПередаче(ПараметрыВызова) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ИсходноеПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций;
	ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Истина;
	
	КонецПериода = ПараметрыВызова.КонецПериода;
	Организации = ПараметрыВызова.Организации;
	
	СтатусыПроведенияДокументов = Новый Соответствие;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОстаткиНаКонецПериода.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОстаткиНаКонецПериода.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиНаКонецПериода.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ОстаткиНаКонецПериода.НомерГТД КАК НомерГТД,
	|	ОстаткиНаКонецПериода.КоличествоОстаток КАК Количество,
	|	0 КАК Возвращено,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ПОМЕСТИТЬ ОстаткиНаКонецПериода
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|			&НаКонецПериода,
	|			&ПоВсемОрганизациям
	|				ИЛИ ОрганизацияВладелец В (&МассивОрганизаций)) КАК ОстаткиНаКонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиНаКонецПериода.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОстаткиНаКонецПериода.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиНаКонецПериода.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ОстаткиНаКонецПериода.НомерГТД КАК НомерГТД,
	|	0 КАК Количество,
	|	ОстаткиНаКонецПериода.ВозвращеноОстаток КАК Возвращено,
	|	ИСТИНА КАК ЭтоВозврат
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|			&НаКонецПериода,
	|			&ПоВсемОрганизациям
	|				ИЛИ ОрганизацияВладелец В (&МассивОрганизаций)) КАК ОстаткиНаКонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтрицательныеОстатки.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОтрицательныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОтрицательныеОстатки.НомерГТД КАК НомерГТД,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ПОМЕСТИТЬ ОтборОстатковКПогашению
	|ИЗ
	|	ОстаткиНаКонецПериода КАК ОтрицательныеОстатки
	|ГДЕ
	|	ОтрицательныеОстатки.Количество < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтрицательныеОстатки.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОтрицательныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОтрицательныеОстатки.НомерГТД КАК НомерГТД,
	|	ИСТИНА КАК ЭтоВозврат
	|ИЗ
	|	ОстаткиНаКонецПериода КАК ОтрицательныеОстатки
	|ГДЕ
	|	ОтрицательныеОстатки.Возвращено < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Отрицательные остатки к распределению.
	|ВЫБРАТЬ
	|	&КонецМесяца КАК Период,
	|	ОтрицательныеОстатки.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОтрицательныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОтрицательныеОстатки.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ОтрицательныеОстатки.НомерГТД КАК НомерГТД,
	|	0 - ОтрицательныеОстатки.Количество КАК Количество,
	|	ИСТИНА КАК ПоТоварамКОформлению,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	ОстаткиНаКонецПериода КАК ОтрицательныеОстатки
	|ГДЕ
	|	ОтрицательныеОстатки.Количество < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&КонецМесяца КАК Период,
	|	ОтрицательныеОстатки.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОтрицательныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОтрицательныеОстатки.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ОтрицательныеОстатки.НомерГТД КАК НомерГТД,
	|	0 - ОтрицательныеОстатки.Возвращено КАК Количество,
	|	ИСТИНА КАК ПоТоварамКОформлению,
	|	ИСТИНА КАК ЭтоВозврат
	|ИЗ
	|	ОстаткиНаКонецПериода КАК ОтрицательныеОстатки
	|ГДЕ
	|	ОтрицательныеОстатки.Возвращено < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтрицательныеОстатки.ОрганизацияВладелец,
	|	ОтрицательныеОстатки.АналитикаУчетаНоменклатуры,
	|	ОтрицательныеОстатки.НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Положительные остатки к погашению развернутого сальдо.
	|ВЫБРАТЬ
	|	&КонецМесяца КАК Период,
	|	ПоложительныеОстатки.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ПоложительныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ПоложительныеОстатки.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ПоложительныеОстатки.НомерГТД КАК НомерГТД,
	|	ПоложительныеОстатки.Количество КАК Количество
	|ИЗ
	|	ОстаткиНаКонецПериода КАК ПоложительныеОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборОстатковКПогашению КАК Отбор
	|		ПО ПоложительныеОстатки.ОрганизацияВладелец = Отбор.ОрганизацияВладелец
	|			И ПоложительныеОстатки.АналитикаУчетаНоменклатуры = Отбор.АналитикаУчетаНоменклатуры
	|			И ПоложительныеОстатки.НомерГТД = Отбор.НомерГТД
	|			И ПоложительныеОстатки.ЭтоВозврат = Отбор.ЭтоВозврат
	|ГДЕ
	|	ПоложительныеОстатки.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&КонецМесяца КАК Период,
	|	ПоложительныеОстатки.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ПоложительныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ПоложительныеОстатки.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ПоложительныеОстатки.НомерГТД КАК НомерГТД,
	|	ПоложительныеОстатки.Возвращено КАК Количество
	|ИЗ
	|	ОстаткиНаКонецПериода КАК ПоложительныеОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборОстатковКПогашению КАК Отбор
	|		ПО ПоложительныеОстатки.ОрганизацияВладелец = Отбор.ОрганизацияВладелец
	|			И ПоложительныеОстатки.АналитикаУчетаНоменклатуры = Отбор.АналитикаУчетаНоменклатуры
	|			И ПоложительныеОстатки.ЭтоВозврат = Отбор.ЭтоВозврат
	|ГДЕ
	|	ПоложительныеОстатки.Возвращено > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоложительныеОстатки.ОрганизацияВладелец,
	|	ПоложительныеОстатки.АналитикаУчетаНоменклатуры,
	|	ПоложительныеОстатки.НомерГТД");
	
	Запрос.УстановитьПараметр("НаКонецПериода", Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(КонецПериода));
	Запрос.УстановитьПараметр("МассивОрганизаций", Организации);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЗначениеЗаполнено(Организации));
	
	Результат = Запрос.ВыполнитьПакет();
	
	// [0] - Вт ОстаткиНаКонецПериода
	// [1] - Вт ОтборОстатковКПогашению
	// [2] - Отрицательные остатки к распределению.
	ОтрицательныйОстаток = Результат[2].Выбрать();
	// [3] - Положительные остатки к погашению развернутого сальдо.
	ПоложительныеОстаткиРазвернутоеСальдо = Результат[3].Выгрузить();
	
	КэшДокументов = Новый Соответствие();
	
	ДанныеКорректировки = РегистрыНакопления.ТоварыОрганизацийКПередаче.СоздатьНаборЗаписей();
	
	Пока ОтрицательныйОстаток.Следующий() Цикл
		
		КоличествоОтрицательное = ОтрицательныйОстаток.Количество;
		МассивУдаляемыхСтрок = Новый Массив;
		
		ОтборИсточников = Новый Структура("ОрганизацияВладелец, АналитикаУчетаНоменклатуры, НомерГТД");
		ЗаполнитьЗначенияСвойств(ОтборИсточников, ОтрицательныйОстаток);
		ИсточникиПогашения = ПоложительныеОстаткиРазвернутоеСальдо.НайтиСтроки(ОтборИсточников);
		Для Каждого СтрокаИсточника Из ИсточникиПогашения Цикл
			
			Если КоличествоОтрицательное <= 0 Тогда
				Прервать;
			КонецЕсли;
			
			КСписанию = Мин(КоличествоОтрицательное, СтрокаИсточника.Количество);
			КоличествоОтрицательное = КоличествоОтрицательное - КСписанию;
			СтрокаИсточника.Количество = СтрокаИсточника.Количество - КСписанию;
			
			СтрокаПриход = ДанныеКорректировки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПриход, ОтрицательныйОстаток);
			СтрокаПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
			СтрокаПриход.Количество = КСписанию;
			
			СтрокаРасход = ДанныеКорректировки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРасход, СтрокаИсточника);
			СтрокаРасход.ВидДвижения = ВидДвиженияНакопления.Расход;
			СтрокаРасход.Количество = КСписанию;
			
			Если СтрокаИсточника.Количество = 0 Тогда
				МассивУдаляемыхСтрок.Добавить(СтрокаИсточника);
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого СтрокаСНулевымОстатком Из МассивУдаляемыхСтрок Цикл
			ПоложительныеОстаткиРазвернутоеСальдо.Удалить(СтрокаСНулевымОстатком);
		КонецЦикла;
		
	КонецЦикла;
	
	Если ДанныеКорректировки.Количество() > 0 Тогда
		
		КорректировкаРегистров = Документы.КорректировкаРегистров.СоздатьДокумент();
		КорректировкаРегистров.Дата = ТекущаяДатаСеанса();
		КорректировкаРегистров.УстановитьНовыйНомер();
		КорректировкаРегистров.Комментарий = НСтр("ru = 'Корректировка развернутого сальдо по регистру накопления ""Товары организаций к передаче""'");
		
		СтрокаТаблицыРегистров = КорректировкаРегистров.ТаблицаРегистров.Добавить();
		СтрокаТаблицыРегистров.Имя = "ТоварыОрганизацийКПередаче";
		
		КорректировкаРегистров.Записать();
		
		ДанныеКорректировки.Отбор.Регистратор.Установить(КорректировкаРегистров.Ссылка);
		ДанныеКорректировки.Записать();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиНаКонецПериода.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОстаткиНаКонецПериода.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиНаКонецПериода.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ОстаткиНаКонецПериода.НомерГТД КАК НомерГТД,
	|	-ОстаткиНаКонецПериода.КоличествоОстаток КАК Количество,
	|	ИСТИНА КАК ПоТоварамКОформлению,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|			&НаКонецПериода,
	|			ОрганизацияВладелец В (&МассивОрганизаций)
	|				ИЛИ &ПоВсемОрганизациям) КАК ОстаткиНаКонецПериода
	|ГДЕ
	|	ОстаткиНаКонецПериода.КоличествоОстаток < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиНаКонецПериода.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОстаткиНаКонецПериода.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиНаКонецПериода.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ОстаткиНаКонецПериода.НомерГТД КАК НомерГТД,
	|	-ОстаткиНаКонецПериода.ВозвращеноОстаток КАК Количество,
	|	ИСТИНА КАК ПоТоварамКОформлению,
	|	ИСТИНА КАК ЭтоВозврат
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|			&НаКонецПериода,
	|			ОрганизацияВладелец В (&МассивОрганизаций)
	|				ИЛИ &ПоВсемОрганизациям) КАК ОстаткиНаКонецПериода
	|ГДЕ
	|	ОстаткиНаКонецПериода.ВозвращеноОстаток < 0
	|";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		КоличествоОтрицательное = Выборка.Количество;
		КоличествоВКорректировках = 0;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.Период КАК Период,
		|	Товары.Регистратор КАК Ссылка,
		|	СУММА(Товары.Количество) КАК Количество,
		|	Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров КАК ЭтоКорректировкаРегистров
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче КАК Товары
		|ГДЕ
		|	Товары.ОрганизацияВладелец = &ОрганизацияВладелец
		|	И Товары.АналитикаУчетаНоменклатуры = &АналитикаУчетаНоменклатуры
		|	И Товары.ВидЗапасовПродавца = &ВидЗапасовПродавца
		|	И Товары.НомерГТД = &НомерГТД
		|	И (Товары.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
		|			ИЛИ Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров)
		|	И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Товары.Период <= &КонецПериода
		|	И Товары.Активность
		|	И НЕ &ЭтоВозврат
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Регистратор,
		|	Товары.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Товары.Период,
		|	Товары.Регистратор,
		|	СУММА(Товары.Возвращено),
		|	Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче КАК Товары
		|ГДЕ
		|	Товары.ОрганизацияВладелец = &ОрганизацияВладелец
		|	И Товары.АналитикаУчетаНоменклатуры = &АналитикаУчетаНоменклатуры
		|	И Товары.ВидЗапасовПродавца = &ВидЗапасовПродавца
		|	И Товары.НомерГТД = &НомерГТД
		|	И (Товары.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
		|			ИЛИ Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров)
		|	И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Товары.Период <= &КонецПериода
		|	И Товары.Активность
		|	И &ЭтоВозврат
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Регистратор,
		|	Товары.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товары.Период УБЫВ");

	
		Запрос.УстановитьПараметр("ОрганизацияВладелец", Выборка.ОрганизацияВладелец);
		Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры", Выборка.АналитикаУчетаНоменклатуры);
		Запрос.УстановитьПараметр("ВидЗапасовПродавца", Выборка.ВидЗапасовПродавца);
		Запрос.УстановитьПараметр("НомерГТД", Выборка.НомерГТД);
		Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
		Запрос.УстановитьПараметр("ЭтоВозврат", Выборка.ЭтоВозврат);
	
		ДокументыККорректировке = Запрос.Выполнить().Выбрать();
		Пока ДокументыККорректировке.Следующий() И КоличествоОтрицательное > 0 Цикл
			
			Если ДокументыККорректировке.ЭтоКорректировкаРегистров Тогда
				КоличествоВКорректировках = КоличествоВКорректировках + ДокументыККорректировке.Количество;
				Продолжить;
			КонецЕсли;
			
			ДокументОбъект = КэшДокументов.Получить(ДокументыККорректировке.Ссылка);
			Если ДокументОбъект = Неопределено Тогда
				ДокументОбъект = ДокументыККорректировке.Ссылка.ПолучитьОбъект();
			КонецЕсли;
		
			ПараметрыПоиска = Новый Структура("АналитикаУчетаНоменклатуры, ПоТоварамКОформлению");
			ЗаполнитьЗначенияСвойств(ПараметрыПоиска, Выборка);
		
			СписатьПоДокументу = Мин(КоличествоОтрицательное, ДокументыККорректировке.Количество); // в документе исправляем только количество по этому виду запасов.
			КоличествоОтрицательное = КоличествоОтрицательное - СписатьПоДокументу;
			
			КСписанию = СписатьПоДокументу;
			ТабличнаяЧасть = ДокументОбъект.Товары;
			СтрокиТоваровККорректировке = ТабличнаяЧасть.НайтиСтроки(ПараметрыПоиска);
			Для Каждого СтрокаТоваров Из СтрокиТоваровККорректировке Цикл
				
				Если КСписанию = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если СтрокаТоваров.Количество < КСписанию Тогда
					КСписанию = КСписанию - СтрокаТоваров.Количество;
				ИначеЕсли СтрокаТоваров.Количество > КСписанию Тогда
					СтрокаПоТоварамКОформлению = ТабличнаяЧасть.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаПоТоварамКОформлению, СтрокаТоваров);
				
					НовоеКоличество = СтрокаТоваров.Количество - КСписанию;
					
					СтрокаПоТоварамКОформлению.Количество = НовоеКоличество;
					СтрокаПоТоварамКОформлению.КоличествоУпаковок = Окр(СтрокаТоваров.КоличествоУпаковок * НовоеКоличество / СтрокаТоваров.Количество, 3, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.Цена = Окр(СтрокаТоваров.Цена * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.Сумма = Окр(СтрокаТоваров.Сумма * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаНДС = Окр(СтрокаТоваров.СуммаНДС * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаСНДС = Окр(СтрокаТоваров.СуммаСНДС * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаВзаиморасчетов = Окр(СтрокаТоваров.СуммаВзаиморасчетов * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаНДСВзаиморасчетов = Окр(СтрокаТоваров.СуммаНДСВзаиморасчетов * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					
					СтрокаТоваров.Количество = КСписанию;
					СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.КоличествоУпаковок - СтрокаПоТоварамКОформлению.КоличествоУпаковок;
					СтрокаТоваров.Цена = СтрокаТоваров.Цена - СтрокаПоТоварамКОформлению.Цена;
					СтрокаТоваров.Сумма = СтрокаТоваров.Сумма - СтрокаПоТоварамКОформлению.Сумма;
					СтрокаТоваров.СуммаНДС = СтрокаТоваров.СуммаНДС - СтрокаПоТоварамКОформлению.СуммаНДС;
					СтрокаТоваров.СуммаСНДС = СтрокаТоваров.СуммаСНДС - СтрокаПоТоварамКОформлению.СуммаСНДС;
					СтрокаТоваров.СуммаВзаиморасчетов = СтрокаТоваров.СуммаВзаиморасчетов - СтрокаПоТоварамКОформлению.СуммаВзаиморасчетов;
					СтрокаТоваров.СуммаНДСВзаиморасчетов = СтрокаТоваров.СуммаНДСВзаиморасчетов - СтрокаПоТоварамКОформлению.СуммаНДСВзаиморасчетов;
					
					КСписанию = 0;
				
				Иначе // СтрокаТоваров.Количество = КСписанию - просто снимаем признак ПоТоварамКОформлению
					КСписанию = 0;
				КонецЕсли;
				СтрокаТоваров.ПоТоварамКОформлению = Ложь;
				
			КонецЦикла;
			
			// Распределяем строки видов запасов, чтобы заполнение видов запасов отработало только по строкам не "ПоОформлению".
			КСписанию = СписатьПоДокументу;
			ТабличнаяЧасть = ДокументОбъект.ВидыЗапасов;
			СтрокиВидыЗапасовККорректировке = ТабличнаяЧасть.НайтиСтроки(ПараметрыПоиска);
			Для Каждого СтрокаВидыЗапасов Из СтрокиВидыЗапасовККорректировке Цикл
				
				Если КСписанию = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если СтрокаВидыЗапасов.Количество < КСписанию Тогда
					КСписанию = КСписанию - СтрокаВидыЗапасов.Количество;
				ИначеЕсли СтрокаВидыЗапасов.Количество > КСписанию Тогда
					СтрокаВидыЗапасовКОформлению = ТабличнаяЧасть.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаВидыЗапасовКОформлению, СтрокаВидыЗапасов);
				
					НовоеКоличество = СтрокаВидыЗапасов.Количество - КСписанию;
					
					СтрокаВидыЗапасовКОформлению.Количество = НовоеКоличество;
					СтрокаВидыЗапасовКОформлению.КоличествоУпаковок = Окр(СтрокаВидыЗапасов.КоличествоУпаковок * НовоеКоличество / СтрокаВидыЗапасов.Количество, 3, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаНДС = Окр(СтрокаВидыЗапасов.СуммаНДС * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаСНДС = Окр(СтрокаВидыЗапасов.СуммаСНДС * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаВзаиморасчетов = Окр(СтрокаВидыЗапасов.СуммаВзаиморасчетов * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаНДСВзаиморасчетов = Окр(СтрокаВидыЗапасов.СуммаНДСВзаиморасчетов * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					
					СтрокаВидыЗапасов.Количество = КСписанию;
					СтрокаВидыЗапасов.КоличествоУпаковок = СтрокаВидыЗапасов.КоличествоУпаковок - СтрокаВидыЗапасовКОформлению.КоличествоУпаковок;
					СтрокаВидыЗапасов.СуммаНДС = СтрокаВидыЗапасов.СуммаНДС - СтрокаВидыЗапасовКОформлению.СуммаНДС;
					СтрокаВидыЗапасов.СуммаСНДС = СтрокаВидыЗапасов.СуммаСНДС - СтрокаВидыЗапасовКОформлению.СуммаСНДС;
					СтрокаВидыЗапасов.СуммаВзаиморасчетов = СтрокаВидыЗапасов.СуммаВзаиморасчетов - СтрокаВидыЗапасовКОформлению.СуммаВзаиморасчетов;
					СтрокаВидыЗапасов.СуммаНДСВзаиморасчетов = СтрокаВидыЗапасов.СуммаНДСВзаиморасчетов - СтрокаВидыЗапасовКОформлению.СуммаНДСВзаиморасчетов;
					
					КСписанию = 0;
				
				Иначе // СтрокаТоваров.Количество = КСписанию - просто снимаем признак ПоТоварамКОформлению
					КСписанию = 0;
				КонецЕсли;
				ТабличнаяЧасть.Удалить(СтрокаВидыЗапасов);
				
			КонецЦикла;
			
			КэшДокументов.Вставить(ДокументыККорректировке.Ссылка, ДокументОбъект); // документы в ИБ пишем только один раз, в самом конце.
		КонецЦикла;
	
		Если КоличествоОтрицательное <> 0 Тогда
			Если КоличествоОтрицательное > КоличествоВКорректировках Тогда
				ТекстСообщения = НСтр("ru = 'Ошибка в алгоритме исправления остатков по товарам к передаче.
				|Обратитесь к разработчикам программы.'");
				ВызватьИсключение ТекстСообщения;
			Иначе
				ТекстСообщения = НСтр("ru = 'Ошибка исправления остатков по товарам к передаче: 
				|есть избыточные расходные движения в корректировках регистров по измерениям 
				|%Организация% - %АналитикаУчетаНоменклатуры% - %ВидЗапасов% - %НомерГТД%,
				|лишний расход %КоличествоОтрицательное%. Необходимо скорректировать движения документов и провести вручную.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Строка(Выборка.ОрганизацияВладелец));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%АналитикаУчетаНоменклатуры%", Строка(Выборка.АналитикаУчетаНоменклатуры));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидЗапасов%", Строка(Выборка.ВидЗапасовПродавца));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерГТД%", Строка(Выборка.НомерГТД));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОтрицательное%", Строка(КоличествоОтрицательное));
				ЗаписьЖурналаРегистрации(
					НСтр("ru = 'ИсправлениеОтрицательныхОстатков.Ошибка исправления остатков'",
						ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Ошибка,
					,
					,
					ТекстСообщения);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
				
	КонецЦикла;
	
	Для Каждого ТекДокумент Из КэшДокументов Цикл
		
		ДокументОбъект = ТекДокумент.Значение;
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			РезультатПроведения = Нстр("ru = 'перепроведен успешно.'");
		Исключение
			ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			РезультатПроведения = Нстр("ru = 'Ошибка при проведении. Необходимо отменить проведение и провести вручную.'");
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'ИсправлениеОтрицательныхОстатков.Ошибка перепроведения документа'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				ДокументОбъект.Метаданные(),
				,
				ИнформацияОбОшибке);
		КонецПопытки;
		СтатусыПроведенияДокументов.Вставить(ТекДокумент.Ключ, РезультатПроведения);
	КонецЦикла;
	
	Если ПараметрыВызова.Свойство("АдресХранилища") Тогда
		ПоместитьВоВременноеХранилище(СтатусыПроведенияДокументов, ПараметрыВызова.АдресХранилища);
	КонецЕсли;
	
	ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = ИсходноеПроводитьБезКонтроляОстатковТоваровОрганизаций;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Выполняет установку параметров сеанса. Вызывается из модуля сеанса.
//
// Параметры:
//   ИмяПараметра           - строка с именем параметра сеанса.
//   УстановленныеПараметры - массив всех установленных параметров сеанса.
//
Процедура УстановитьПараметрыСеанса(ИмяПараметра, УстановленныеПараметры) Экспорт
	
	ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Ложь;
	
	Если ИмяПараметра = "ПроводитьБезКонтроляОстатковТоваровОрганизаций" Тогда
		ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Ложь;
		УстановленныеПараметры.Добавить(ИмяПараметра);
	КонецЕсли;

КонецПроцедуры

Функция ИмяСобытияВыключенКонтрольОстатков() Экспорт
	КодОсновногоЯзыка = ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка();
	Возврат НСтр("ru = 'Контроль остатков товаров организаций'", КодОсновногоЯзыка);
КонецФункции

// Процедура заполняет номера ГТД в строках табличной части документа.
//
Процедура ЗаполнитьНомераГТДвТабличнойЧасти(Товары, НомерГТД, МассивСтрок, ЗаполненыНомераГТД) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеСправочника.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК ДанныеСправочника
	|ГДЕ
	|	ДанныеСправочника.Ссылка В (&МассивНоменклатуры)
	|	И ДанныеСправочника.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ДанныеСправочника.ВестиУчетПоГТД
	|");
	Запрос.УстановитьПараметр("МассивНоменклатуры", Товары.Выгрузить(, "Номенклатура").ВыгрузитьКолонку("Номенклатура"));
	МассивВедетсяУчетПоГТД = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ЗаполненыНомераГТД = Ложь;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		СтрокаТаблицы = Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если МассивВедетсяУчетПоГТД.Найти(СтрокаТаблицы.Номенклатура) <> Неопределено Тогда
			СтрокаТаблицы.НомерГТД = НомерГТД;
			ЗаполненыНомераГТД = Истина;
			
			ДанныеГТД = Новый Структура("НомерГТД, СтранаПроисхождения", НомерГТД, Неопределено);
			НоменклатураВызовСервера.ЗаполнитьСтрануПроисхожденияДляНомераГТД(ДанныеГТД);
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ДанныеГТД, "СтранаПроисхождения");
			
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Функция ИмяДопСвойстваДляПерезаполненияВидовЗапасов() Экспорт
	Возврат "ПерезаполнитьВидыЗапасов";
КонецФункции


// Метод подготавливает данные для отчета "Остатки товаров организаций".
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, для которого вызывается формирование отчета.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Содержит временную таблицу ТаблицаТоваров, 
//														подготовленные данные помещаются в менеджер.
//	ПараметрыЗаполненияВидовЗапасов - Структура - Параметры заполнения, см. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов()
//
Процедура ПодготовитьДанныеДляОтчета(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	СформироватьВТДоступныеВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, "");
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, Ложь);
	СохранитьИсходныеДвиженияТоваровИРезервов(ДокументОбъект.Ссылка, МенеджерВременныхТаблиц);
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольПроведенияПоТоварамОрганизаций

// Метод проверяет принадлежит ли переданное имя к списку контролей.
//
// Параметры:
//	ИмяКонтроля - Строка - Проверяемое имя.
//
// ВозвращаемоеЗначение:
//	Булево - Истина, если принадлежит и Ложь в противном случае.
//
Функция ЭтоИмяКонтроляПоТоварамОрганизацийИРезервам(ИмяКонтроля) Экспорт
	
	Возврат ИмяКонтроля = ИмяКонтроляВТОтборыКонтроляКорректностиДвижений()
		Или ИмяКонтроля = ИмяКонтроляТоварыОрганизацийРезервыСводно();
	
КонецФункции

// Метод выводит информационные сообщения пользователю об ошибках заполнения видов запасов.
//
// Параметры:
//	ИмяКонтроля - Строка - Имя контроля регистра.
//	Объект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	Отказ - Булево - Взводится в Истина, для прекращения проведения документа.
//	РезультатЗапроса - РезультатЗапроса - Результат запроса, содержащий информацию об ошибках.
//
Процедура СообщитьОбОшибкахПроведенияПоТоварамОраганизацийИРезервам(ИмяКонтроля, Объект, Отказ, РезультатЗапроса) Экспорт
	
	Если ИмяКонтроля <> ИмяКонтроляТоварыОрганизацийРезервыСводно() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаОрганизация = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОрганизация.Следующий() Цикл
	
		ВыборкаАналитикаУчетаНоменклатуры = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаАналитикаУчетаНоменклатуры.Следующий() Цикл
			
			ВыборкаВидЗапасов = ВыборкаАналитикаУчетаНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаВидЗапасов.Следующий() Цикл
	
				ВыборкаНомерГТД = ВыборкаВидЗапасов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаНомерГТД.Следующий() Цикл
					
					ОтрицательныйОстаток = 0;
					ПокрывающийРезерв = 0;
					ПредыдущиеИтоги = Неопределено;
					ТекущиеИтоги = ВыборкаНомерГТД.Выбрать();
					Пока ТекущиеИтоги.Следующий() Цикл
						
						Если ТекущиеИтоги.ИмяКонтроля = "КонтрольКорректностиДвижений" Тогда
							
							ОтрицательныйОстаток = Мин(ТекущиеИтоги.Остаток, ОтрицательныйОстаток);
							ПокрывающийРезерв = Макс(ТекущиеИтоги.Резерв, ПокрывающийРезерв);
							
							Если ТекущиеИтоги.Остаток + ТекущиеИтоги.Резерв < 0 Тогда
								ТекстСообщения = НСтр("ru = 'При записи %Регистратор% в регистры ТоварыОрганизаций и РезервыТоваровОрганизаций
								|обнаружен отрицательный остаток товаров организаций по измерениям: %Период% - %Организация% - %АналитикаНоменклатуры% - %ВидЗапасов% - %НомерГТД%, остаток %Остаток%, резерв %Резерв%.'");
								ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОраганизацийИРезервам(ТекстСообщения, Объект.Ссылка, ТекущиеИтоги);			
								Если ТекущиеИтоги.Период = ДатаАктуальныхОстатков() Тогда
									ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", НСтр("ru = 'Дата актуальности остатков'"));
								Иначе
									ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", ТекущиеИтоги.Период);
								КонецЕсли;
								ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Остаток%", ТекущиеИтоги.Остаток);	
								ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Резерв%", ТекущиеИтоги.Резерв);
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
							КонецЕсли;
							
							Если ПредыдущиеИтоги <> Неопределено Тогда
								
								РазницаОстатков = Мин(ТекущиеИтоги.Остаток, 0) - Мин(ПредыдущиеИтоги.Остаток, 0);
								Дельта = 0;
								Если РазницаОстатков > 0 И ТекущиеИтоги.Резерв <> ПредыдущиеИтоги.Резерв Тогда
									Дельта = РазницаОстатков;
								ИначеЕсли РазницаОстатков < 0 И ТекущиеИтоги.Остаток < -ТекущиеИтоги.Резерв Тогда
									Дельта = ТекущиеИтоги.Резерв + ТекущиеИтоги.Остаток;
								КонецЕсли;
									
								Если Дельта <> 0 И ТекущиеИтоги.КоличествоИзменение < 0 Тогда
									ТекстСообщения = НСтр("ru = 'При записи %Регистратор% в регистры ТоварыОрганизаций и РезервыТоваровОрганизаций
									|обнаружен лишний резерв по измерениям: %Период% - %Организация% - %АналитикаНоменклатуры% - %ВидЗапасов% - %НомерГТД%, лишний резерв %Дельта%.'");
									ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОраганизацийИРезервам(ТекстСообщения, Объект.Ссылка, ТекущиеИтоги);			
									Если ТекущиеИтоги.Период = ДатаАктуальныхОстатков() Тогда
										ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", НСтр("ru = 'Дата актуальности остатков'"));
									Иначе
										ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", ТекущиеИтоги.Период);
									КонецЕсли;
									ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Дельта%", Дельта);	
									ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
								КонецЕсли;
								
							КонецЕсли;
							
							ПредыдущиеИтоги = Новый Структура("Остаток, Резерв");
							ЗаполнитьЗначенияСвойств(ПредыдущиеИтоги, ТекущиеИтоги);
							
						ИначеЕсли ТекущиеИтоги.ИмяКонтроля = "КонтрольОтрицательныхОстатков" Тогда
							Если ТекущиеИтоги.Остаток + ТекущиеИтоги.Резерв < 0 Тогда
								
								ТекстСообщения = НСтр("ru = 'По организации %Организация% на %Месяц% обнаружен отрицательный остаток %Количество% %ЕдиницаИзмерения% товара %Товар% на складе %Склад%'");
								
								Если ТекущиеИтоги.Период = ДатаАктуальныхОстатков() Тогда
									ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Месяц%", НСтр("ru = 'дату актуальности остатков'"));
								КонецЕсли;
								ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОраганизацийИРезервам(ТекстСообщения, Объект.Ссылка, ТекущиеИтоги);			
								ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", ТекущиеИтоги.Остаток + ТекущиеИтоги.Резерв);
								ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", ТекущиеИтоги.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения);
								ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Товар%", ТекущиеИтоги.АналитикаУчетаНоменклатуры.Номенклатура);
								ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", ТекущиеИтоги.АналитикаУчетаНоменклатуры.Склад);
								
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
								
							КонецЕсли;
						КонецЕсли;
						
					КонецЦикла;
					
					Если ОтрицательныйОстаток + ПокрывающийРезерв > 0 Тогда
						ТекстСообщения = НСтр("ru = 'При записи %Регистратор% в регистры ТоварыОрганизаций и РезервыТоваровОрганизаций
						|обнаружен лишний резерв по измерениям: %Организация% - %АналитикаНоменклатуры% - %ВидЗапасов% - %НомерГТД%, лишний резерв %Дельта%.'");
						ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОраганизацийИРезервам(ТекстСообщения, Объект.Ссылка, ВыборкаНомерГТД);
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Дельта%", ОтрицательныйОстаток + ПокрывающийРезерв);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
					КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Заполняет в тексте сообщения информационные поля.
//
// Параметры:
//	ТекстСообщения - Строка - Шаблон текста сообщения.
//	Регистратор - ДокументСсылка - Ссылка на документ.
//	Выборка - ВыборкаИзРезультатаЗапроса - Источник данных для заполнения.
//
Процедура ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОраганизацийИРезервам(ТекстСообщения, Регистратор, Выборка) Экспорт
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
	
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Выборка.Организация);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%АналитикаНоменклатуры%", Выборка.АналитикаУчетаНоменклатуры);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидЗапасов%", Выборка.ВидЗапасов);
	Если ЗначениеЗаполнено(Выборка.НомерГТД) Тогда
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерГТД%", Выборка.НомерГТД);
	Иначе
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерГТД%", НСтр("ru = '<без номера ГТД>'"));
	КонецЕсли;
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Месяц%", Формат(Выборка.Период, "Л=ru; ДФ='MMMM гггг'"));
КонецПроцедуры

// Процедура выполняет контроль результатов проведения.
// Вызывается из общего модуля ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения().
//
// Параметры:
//	Объект - ДокументОбъект - документ для контроля.
//	ПакетЗапросов - Запрос - Запрос контроля корректности проведения.
//	ТекстЗапроса - Текст - Текст запроса контроля корректности проведения.
//	МассивКонтролей - Массив - Массив имен контрольных таблиц.
//	ДанныеТаблиц - Структура - Инициализируется в ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения().
//
Процедура ДобавитьКонтрольПоТоварамОрганизаций(Объект, ПакетЗапросов, ТекстЗапроса , МассивКонтролей, ДанныеТаблиц) Экспорт
	
	Если Объект.ДополнительныеСвойства.Свойство("ОтказПриЗаполненииВидовЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций 
		ИЛИ НЕ Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроведениеСерверУТ.ЕстьИзмененияВТаблице(ДанныеТаблиц, "ДвиженияТоварыОрганизацийИзменение") Тогда
		МинимальныйПериод = ДанныеТаблиц.ДвиженияТоварыОрганизацийИзменение.МинимальныйПериод;
		ЕстьТаблицаОстатков = Истина;
	Иначе
		МинимальныйПериод = ДатаАктуальныхОстатков();
		ЕстьТаблицаОстатков = Ложь;
	КонецЕсли;
		
	Если ПроведениеСерверУТ.ЕстьИзмененияВТаблице(ДанныеТаблиц, "ДвиженияРезервыТоваровОрганизацийИзменение") Тогда
		ЕстьТаблицаРезервов = Истина;
	Иначе
		ЕстьТаблицаРезервов = Ложь;
	КонецЕсли;
	
	Если ЕстьТаблицаОстатков
		И ЕстьТаблицаРезервов Тогда
		
		ИмяВТОтборыКонтроляКорректностиДвижений = "ВТОтборыКонтроляКорректностиДвижений";
		ИмяКонтроля = "КонтрольКорректностиДвижений";
		ИмяКоличествоИзменение = "Отбор.КоличествоИзменение";
		
		ТекстЗапросаКонтроля =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВложенныйЗапрос.Организация КАК Организация,
		|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
		|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
		|	СУММА(ВложенныйЗапрос.КоличествоИзменение) КАК КоличествоИзменение
		|ПОМЕСТИТЬ ВТОтборыКонтроляКорректностиДвижений
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаИзменений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаИзменений.Организация КАК Организация,
		|		ТаблицаИзменений.ВидЗапасов КАК ВидЗапасов,
		|		ТаблицаИзменений.НомерГТД КАК НомерГТД,
		|		ТаблицаИзменений.КоличествоИзменение КАК КоличествоИзменение
		|	ИЗ
		|		ДвиженияТоварыОрганизацийИзменение КАК ТаблицаИзменений
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаИзменений.АналитикаУчетаНоменклатуры,
		|		ТаблицаИзменений.Организация,
		|		ТаблицаИзменений.ВидЗапасов,
		|		ТаблицаИзменений.НомерГТД,
		|		0
		|	ИЗ
		|		ДвиженияРезервыТоваровОрганизацийИзменение КАК ТаблицаИзменений) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
		|	ВложенныйЗапрос.ВидЗапасов,
		|	ВложенныйЗапрос.Организация,
		|	ВложенныйЗапрос.НомерГТД
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВложенныйЗапрос.ВидЗапасов,
		|	ВложенныйЗапрос.НомерГТД,
		|	ВложенныйЗапрос.Организация,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры";
		
		ТекстЗапросаКонтроля = ТекстЗапросаКонтроля + 
		"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	ИначеЕсли ЕстьТаблицаОстатков Тогда
		
		ИмяВТОтборыКонтроляКорректностиДвижений = "ДвиженияТоварыОрганизацийИзменение";
		ИмяКонтроля = "КонтрольОтрицательныхОстатков";
		ИмяКоличествоИзменение = "0";
		ТекстЗапросаКонтроля = "";
		
	ИначеЕсли ЕстьТаблицаРезервов Тогда
		
		ИмяВТОтборыКонтроляКорректностиДвижений = "ДвиженияРезервыТоваровОрганизацийИзменение";
		ИмяКонтроля = "КонтрольКорректностиДвижений";
		ИмяКоличествоИзменение = "0";
		ТекстЗапросаКонтроля = "";
		
	Иначе
		
		Возврат;
				
	КонецЕсли;
	
	ТекстЗапросаКонтроля = ТекстЗапросаКонтроля +
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	&ИмяКонтроля КАК ИмяКонтроля,
	|	СУММА(ВложенныйЗапрос.Остаток) КАК Остаток,
	|	СУММА(ВложенныйЗапрос.Резерв) КАК Резерв,
	|	&ИмяКоличествоИзменение КАК КоличествоИзменение
	|ИЗ
	|	ТекстЗапросаОстаткиПоМесяцам КАК ВложенныйЗапрос
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборыКонтроляКорректностиДвижений КАК Отбор
	|		ПО ВложенныйЗапрос.АналитикаУчетаНоменклатуры = Отбор.АналитикаУчетаНоменклатуры
	|			И ВложенныйЗапрос.Организация = Отбор.Организация
	|			И ВложенныйЗапрос.ВидЗапасов = Отбор.ВидЗапасов
	|			И ВложенныйЗапрос.НомерГТД = Отбор.НомерГТД
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.Период,
	|	&ИмяКоличествоИзменение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ ПО
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД";
	
	ШаблонЗапросаОстаткаМесяца =
	"ВЫБРАТЬ
	|	&ПериодДата КАК Период,
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийОстатки.Организация КАК Организация,
	|	ТоварыОрганизацийОстатки.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизацийОстатки.НомерГТД КАК НомерГТД,
	|	0 КАК Резерв,
	|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК Остаток
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			&ПериодГраница,
	|			(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД) В
	|				(ВЫБРАТЬ
	|					Отбор.АналитикаУчетаНоменклатуры,
	|					Отбор.Организация,
	|					Отбор.ВидЗапасов,
	|					Отбор.НомерГТД
	|				ИЗ
	|					ВТОтборыКонтроляКорректностиДвижений КАК Отбор)) КАК ТоварыОрганизацийОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ПериодДата,
	|	РезервыТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизацийОстатки.Организация,
	|	РезервыТоваровОрганизацийОстатки.ВидЗапасов,
	|	РезервыТоваровОрганизацийОстатки.НомерГТД,
	|	РезервыТоваровОрганизацийОстатки.КоличествоОстаток,
	|	0
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
	|			&ПериодГраница,
	|			(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД) В
	|				(ВЫБРАТЬ
	|					Отбор.АналитикаУчетаНоменклатуры,
	|					Отбор.Организация,
	|					Отбор.ВидЗапасов,
	|					Отбор.НомерГТД
	|				ИЗ
	|					ВТОтборыКонтроляКорректностиДвижений КАК Отбор)) КАК РезервыТоваровОрганизацийОстатки";
	
	МинимальныйПериод = КонецМесяца(Мин(МинимальныйПериод, ДатаПервогоРезерва(МинимальныйПериод)));
	КонецТекущегоМесяца = КонецМесяца(ТекущаяДатаСеанса());
	
	// Больше трех лет не контролируем, чтобы не превысить количество таблиц в запросе.
	ТриГодаНазад = КонецМесяца(ДобавитьМесяц(КонецТекущегоМесяца, -36)); 
	Если МинимальныйПериод < ТриГодаНазад Тогда
		МинимальныйПериод = ТриГодаНазад;
	ИначеЕсли МинимальныйПериод > КонецТекущегоМесяца Тогда
		МинимальныйПериод = КонецТекущегоМесяца;
	КонецЕсли;
	
	ОбрабатываемыйМесяц = КонецМесяца(ДобавитьМесяц(ДатаПоследнегоДвижения(), -1));
	
	ТекстыЗапросовОстатковПоМесяцам = Новый Массив;
	
	Счетчик = 0;
		
	Пока ОбрабатываемыйМесяц >= МинимальныйПериод Цикл
		
		ТекстЗапросаОстаткаМесяца = СтрЗаменить(ШаблонЗапросаОстаткаМесяца, "&ПериодДата", "&ПериодДата" + Строка(Счетчик));
		ТекстЗапросаОстаткаМесяца = СтрЗаменить(ТекстЗапросаОстаткаМесяца, "&ПериодГраница", "&ПериодГраница" + Строка(Счетчик));
		ТекстыЗапросовОстатковПоМесяцам.Добавить(ТекстЗапросаОстаткаМесяца);
		
		ПакетЗапросов.УстановитьПараметр("ПериодДата" + Строка(Счетчик), ОбрабатываемыйМесяц);
		ПакетЗапросов.УстановитьПараметр("ПериодГраница" + Строка(Счетчик), Новый Граница(ОбрабатываемыйМесяц, ВидГраницы.Включая));
		
		Счетчик = Счетчик + 1;
		ОбрабатываемыйМесяц = КонецМесяца(ДобавитьМесяц(ОбрабатываемыйМесяц, -1));
		
	КонецЦикла;	
	
	ТекстЗапросаОстаткаМесяца = СтрЗаменить(ШаблонЗапросаОстаткаМесяца, "&ПериодДата", "&ПериодДата" + Строка(Счетчик));
	ТекстЗапросаОстаткаМесяца = СтрЗаменить(ТекстЗапросаОстаткаМесяца, "&ПериодГраница", "");
	ТекстыЗапросовОстатковПоМесяцам.Добавить(ТекстЗапросаОстаткаМесяца);
	
	ПакетЗапросов.УстановитьПараметр("ПериодДата" + Строка(Счетчик), ДатаАктуальныхОстатков());
	
	Разделитель =" 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|";
	
	ТекстЗапросаКонтроля = СтрЗаменить(ТекстЗапросаКонтроля, "ТекстЗапросаОстаткиПоМесяцам", "(" + СтрСоединить(ТекстыЗапросовОстатковПоМесяцам, Разделитель) + ")");
	ТекстЗапросаКонтроля = СтрЗаменить(ТекстЗапросаКонтроля, "ВТОтборыКонтроляКорректностиДвижений", ИмяВТОтборыКонтроляКорректностиДвижений);
	ТекстЗапросаКонтроля = СтрЗаменить(ТекстЗапросаКонтроля, "&ИмяКоличествоИзменение", ИмяКоличествоИзменение);
	ТекстЗапросаКонтроля = СтрЗаменить(ТекстЗапросаКонтроля, "&ИмяКонтроля", """" + ИмяКонтроля + """");
	
	Если ИмяВТОтборыКонтроляКорректностиДвижений = "ВТОтборыКонтроляКорректностиДвижений" Тогда
		МассивКонтролей.Добавить(ИмяКонтроляВТОтборыКонтроляКорректностиДвижений());
	КонецЕсли;
	
	МассивКонтролей.Добавить(ИмяКонтроляТоварыОрганизацийРезервыСводно());
	
	ТекстЗапросаКонтроля = ТекстЗапросаКонтроля + 
	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаКонтроля;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныйПрограммныйИнтерфейс

#Область ПроцедурыЗаписиДвиженийВРегистр

Процедура ОтразитьТоварыПереданныеПереработчику(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыПереданныеПереработчику;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ТоварыПереданныеПереработчику.Записывать = Истина;
	Движения.ТоварыПереданныеПереработчику.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыПолученныеОтПереработчика(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыПолученныеОтПереработчика;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ТоварыПолученныеОтПереработчика.Записывать = Истина;
	Движения.ТоварыПолученныеОтПереработчика.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыНаСкладах;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.ТоварыНаСкладах.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыПринятые(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыПринятые;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыПринятые.Записывать = Истина;
	Движения.ТоварыПринятые.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьДатыПоступленияТоваровОрганизаций(ДополнительныеСвойства, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДатыПоступленияТоваровОрганизаций;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		МенеджерЗаписи = РегистрыСведений.ДатыПоступленияТоваровОрганизаций.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТаблицы);
		МенеджерЗаписи.Записать(Истина);	
	КонецЦикла;

КонецПроцедуры // ОтразитьДатыПоступленияТоваровОрганизаций()

Процедура ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизаций;
	
	Если Отказ
		Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ТоварыОрганизаций.Записывать = Истина;
	Движения.ТоварыОрганизаций.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыУПартнеров(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыУПартнеров;
	
	Если Отказ
		Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ТоварыУПартнеров.Записывать = Истина;
	Движения.ТоварыУПартнеров.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьРезервыТоваровОрганизаций(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = Новый ТаблицаЗначений;
	ЕстьДвижения = ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций", Таблица);
	
	Если Отказ ИЛИ НЕ ЕстьДвижения ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.РезервыТоваровОрганизаций.Записывать = Истина;
	Движения.РезервыТоваровОрганизаций.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыОрганизацийКПередаче(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизацийКПередаче;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыОрганизацийКПередаче.Записывать = Истина;
	Движения.ТоварыОрганизацийКПередаче.Загрузить(Таблица);
	
КонецПроцедуры 

Процедура ОтразитьТоварыКОформлениюТаможенныхДеклараций(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюТаможенныхДеклараций;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыКОформлениюТаможенныхДеклараций.Записывать = Истина;
	Движения.ТоварыКОформлениюТаможенныхДеклараций.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыПереданныеНаКомиссию(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыПереданныеНаКомиссию;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыПереданныеНаКомиссию.Записывать = Истина;
	Движения.ТоварыПереданныеНаКомиссию.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьДатыПередачиТоваровНаКомиссию(ДополнительныеСвойства, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДатыПередачиТоваровНаКомиссию;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		МенеджерЗаписи = РегистрыСведений.ДатыПередачиТоваровНаКомиссию.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТаблицы);
		МенеджерЗаписи.Записать(Истина);	
	КонецЦикла;

КонецПроцедуры 

Процедура ОтразитьТоварыКОформлениюОтчетовКомитента(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюОтчетовКомитенту;
	
	Если Отказ ИЛИ Таблица .Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыКОформлениюОтчетовКомитенту.Записывать = Истина;
	Движения.ТоварыКОформлениюОтчетовКомитенту.Загрузить(Таблица);
	
КонецПроцедуры 

Процедура ОтразитьУслугиКОформлениюОтчетовПринципалу(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУслугиКОформлениюОтчетовПринципалу;
	
	Если Отказ ИЛИ Таблица .Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.УслугиКОформлениюОтчетовПринципалу.Записывать = Истина;
	Движения.УслугиКОформлениюОтчетовПринципалу.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСвободныеОстатки;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.СвободныеОстатки.Записывать = Истина;
	Движения.СвободныеОстатки.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьТоварыКОформлениюИзлишковНедостач(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюИзлишковНедостач;

	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыКОформлениюИзлишковНедостач.Записывать = Истина;
	Движения.ТоварыКОформлениюИзлишковНедостач.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОбеспечениеЗаказов;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ОбеспечениеЗаказов.Записывать = Истина;
	Движения.ОбеспечениеЗаказов.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьОбеспечениеЗаказовРаботами(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОбеспечениеЗаказовРаботами;
	
	Если Отказ Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ОбеспечениеЗаказовРаботами.Записывать = Истина;
	Движения.ОбеспечениеЗаказовРаботами.Загрузить(Таблица);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ЗаполнениеВидовЗапасов

Функция ПустаяТаблицаРеквизитовВидовЗапасовПоУмолчанию()
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("НомерСтроки",
						Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("АналитикаУчетаНоменклатуры",
						Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
	Результат.Колонки.Добавить("Организация",
						Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Результат.Колонки.Добавить("ВидЗапасов",
						Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	Результат.Колонки.Добавить("НомерГТД",
						Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	Результат.Колонки.Добавить("ВладелецТовара",
						Метаданные.Справочники.ВидыЗапасов.Реквизиты.ВладелецТовара.Тип);
	Результат.Колонки.Добавить("ТипЗапасов",
						Новый ОписаниеТипов("ПеречислениеСсылка.ТипыЗапасов"));
	Результат.Колонки.Добавить("ТипЗапасовРезервы",
						Новый ОписаниеТипов("ПеречислениеСсылка.ТипыЗапасов"));
	Результат.Колонки.Добавить("Контрагент",
						Метаданные.Справочники.ВидыЗапасов.Реквизиты.Контрагент.Тип);
	Результат.Колонки.Добавить("Договор",
						Метаданные.Справочники.ВидыЗапасов.Реквизиты.Договор.Тип);
	
	Возврат Результат;
	                                              
КонецФункции

Функция НеконтролируемыеТипыЗапасов()
	
	ТипыЗапасов = Новый Массив;
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска);
	
	Возврат ТипыЗапасов;
	
КонецФункции

Функция ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(ПараметрыЗаполненияВидовЗапасов)
	
	Если ПараметрыЗаполненияВидовЗапасов.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Неопределено Тогда
		Возврат Не ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизаций");
	Иначе
		Возврат ПараметрыЗаполненияВидовЗапасов.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию;
	КонецЕсли;
	
КонецФункции

Функция ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов)
	
	Если ЗначениеЗаполнено(ПараметрыЗаполненияВидовЗапасов.ИмяПоляОрганизация) Тогда
		Возврат ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяПоляОрганизация];
	ИначеЕсли ЗначениеЗаполнено(ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация) Тогда
		Возврат ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация;
	Иначе
		ТекстИсключения = НСтр("ru = 'Ошибка в программе: невозможно определить организацию документа.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецФункции

Функция ОрганизацииДляКонтроляОстатков(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТТоварыОрганизацийИзменения.Организация КАК Организация
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляКонтроляОстатков";
	Результат = Запрос.Выполнить();
	Организации = Результат.Выгрузить().ВыгрузитьКолонку("Организация");
	Возврат Организации;
	
КонецФункции

Процедура СформироватьВТТоварыОрганизацийИзменения(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, "ТоварыОрганизаций");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыОрганизацийИзменения.Период КАК Период,
	|	ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийИзменения.Организация КАК Организация,
	|	ТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	СУММА(ТоварыОрганизацийИзменения.Количество) КАК Количество,
	|	СУММА(ТоварыОрганизацийИзменения.Количество) > 0 КАК ДляСторноРезерва,
	|	СУММА(ТоварыОрганизацийИзменения.Количество) < 0 КАК ДляКонтроляОстатков
	|ПОМЕСТИТЬ ВТТоварыОрганизацийИзменения
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) КАК Период,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.Организация КАК Организация,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ТоварыОрганизаций.Количество
	|			ИНАЧЕ -ТоварыОрганизаций.Количество
	|		КОНЕЦ КАК Количество
	|	ИЗ
	|		ДвиженияТоварыОрганизацийПередЗаписью КАК ТоварыОрганизаций
	|	ГДЕ
	|		ВЫРАЗИТЬ(ТоварыОрганизаций.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ),
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.Организация,
	|		ТоварыОрганизаций.ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД,
	|		ТоварыОрганизаций.Количество
	|	ИЗ
	|		ТоварыОрганизаций КАК ТоварыОрганизаций
	|	ГДЕ
	|		ВЫРАЗИТЬ(ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))) КАК ТоварыОрганизацийИзменения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийИзменения.Период,
	|	ТоварыОрганизацийИзменения.Организация,
	|	ТоварыОрганизацийИзменения.ВидЗапасов,
	|	ТоварыОрганизацийИзменения.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыОрганизацийИзменения.Количество) <> 0";
	
	Запрос.УстановитьПараметр("Регистратор", ДокументОбъект.Ссылка);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов)
	
	ТаблицаОшибок          = ТаблицаОшибокЗаполненияВидовЗапасов();
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов <> Неопределено Тогда
		ТаблицаВидыЗапасов = ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов;
	Иначе
		ТаблицаВидыЗапасов = ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].ВыгрузитьКолонки();
	КонецЕсли;
		
	КонтролироватьИзменениеНомеровГТД = ДополнительныеСвойства.Свойство("КонтролироватьИзменениеНомеровГТД");
	Если КонтролироватьИзменениеНомеровГТД Тогда
		ТаблицаНомеровГТД = ТаблицаВидыЗапасов.Скопировать(, "АналитикаУчетаНоменклатуры, НомерГТД, Количество");
	КонецЕсли;
	
	ВидЗапасовПоУмолчанию = Неопределено;
	ВидЗапасовПолучателяПоУмолчанию = Неопределено;
	СоответствиеВидовЗапасов = Новый Соответствие;
	СоответствиеВидовЗапасовВладельца = Новый Соответствие;
	СоответствиеВидовЗапасовПодакцизныйТовар = Новый Соответствие;
	СоответствиеВидовЗапасовВозвратаБезПередачи = Новый Соответствие;
	ТаблицаНовыеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ПеремещениеВЦеховуюКладовую = ПараметрыЗаполненияВидовЗапасов.ПеремещениеВЦеховуюКладовую;
	ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию =
		ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(ПараметрыЗаполненияВидовЗапасов);
	
	Если Константы.ПорядокОформленияВыкупаПриСписанииТоваров.Получить() = Перечисления.НастройкиОформленияВыкупаПриСписанииТоваров.ПриПеремещении Тогда
		ОформлятьВыкупПриПередачеВПроизводство = Истина;
	Иначе
		ОформлятьВыкупПриПередачеВПроизводство = Ложь;
	КонецЕсли;
	
	СтруктураДанныхСтроки = Новый Структура("
		|Склад,
		|СкладОтгрузки,
		|Количество,
		|СуммаСНДС,
		|СтавкаНДС,
		|СуммаНДС,
		|СуммаВознаграждения,
		|СуммаНДСВознаграждения,
		|АналитикаУчетаНоменклатурыОтгрузки,
		|ЗаказКлиента,
		|НедостаточноОстатковТоваровОрганизаций
		|");
	
	СтруктураВидаЗапасовПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|ВладелецТовара,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалогообложениеНДС,
		|НалогообложениеОрганизации,
		|ТипЗапасов,
		|ВидЦены
		|");

	Запрос = ЗапросРаспределенияСУчетомПриоритетовТаблицыТоваровНаТаблицуОстатков(
		МенеджерВременныхТаблиц, 
		ДополнительныеСвойства);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаДанныеДокумента = МассивРезультатов[1].Выбрать();
	ВыборкаТаблицаТоваров = МассивРезультатов[2].Выбрать();
	ВыборкаОстаткиПоСтрокам = МассивРезультатов[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаДанныеДокумента.Следующий();
	ЗаполнитьЗначенияСвойств(СтруктураВидаЗапасовПоУмолчанию, ВыборкаДанныеДокумента);
	ПередачаПодДеятельность = ВыборкаДанныеДокумента.НалогообложениеНДС;
	Организация = ВыборкаДанныеДокумента.Организация;
	ХозяйственнаяОперация = ВыборкаДанныеДокумента.ХозяйственнаяОперация;
	
	ВидыЗапасовПоУмолчанию = Новый ТаблицаЗначений;
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("ВидЗапасов",
											Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("ВидЦены",
											Новый ОписаниеТипов("СправочникСсылка.ВидыЦенПоставщиков"));
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("ГруппаФинансовогоУчета",
											Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры"));
	
	Пока ВыборкаОстаткиПоСтрокам.Следующий() Цикл
		
		КоличествоТовара			= ВыборкаОстаткиПоСтрокам.Количество;
		СуммаТовараСНДС				= ВыборкаОстаткиПоСтрокам.СуммаСНДС;
		СуммаНДСТовара				= ВыборкаОстаткиПоСтрокам.СуммаНДС;
		СуммаВознагражденияВсего	= ВыборкаОстаткиПоСтрокам.СуммаВознаграждения;
		СуммаНДСВознагражденияВсего	= ВыборкаОстаткиПоСтрокам.СуммаНДСВознаграждения;
		
		ЕстьНулевыеОстаткиТоваровОрганизаций = Ложь;
		
		// Детальные записи
		Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ЗаполнитьСтруктуруПоСтрокеТоваров(СтруктураВидаЗапасовПоУмолчанию, Выборка, ВыборкаДанныеДокумента);
			ПродажаНаЭкспортКомиссионногоТовара = Ложь;
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
			
				Если Выборка.ОрганизацияОстатка = Организация
					И (НЕ ЗначениеЗаполнено(Выборка.ВладелецТовара) 
						ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтгрузкаПринятыхСПравомПродажиТоваровСХранения
						ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровХранящихсяНаСкладе
						ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПереданныхВПроизводство
						ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупТоваровХранящихсяНаСкладе
						ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупТоваровПереданныхВПроизводство
						ИЛИ ((ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
							ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую)
							И Выборка.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи
							И НЕ ОформлятьВыкупПриПередачеВПроизводство)
						ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзПроизводства
						ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства
						ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой
						ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатов
						ИЛИ (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров
							И Выборка.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи
							И ПеремещениеВЦеховуюКладовую
							И НЕ ОформлятьВыкупПриПередачеВПроизводство)
						ИЛИ (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров
							И Выборка.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи
							И НЕ ПеремещениеВЦеховуюКладовую)
						ИЛИ Выборка.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар
						ИЛИ Выборка.ТипЗапасов = Перечисления.ТипыЗапасов.ПродукцияДавальца
						ИЛИ Выборка.ТипЗапасов = Перечисления.ТипыЗапасов.МатериалДавальца) Тогда
						ВидЗапасов = Выборка.ВидЗапасов;
				ИначеЕсли Выборка.НастройкаПередачи = Перечисления.СпособыПередачиТоваров.ПередачаНаКомиссию
					И ПередачаПодДеятельность <> Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт 
					И ПередачаПодДеятельность <> Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров
					И ПередачаПодДеятельность <> Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг Тогда
					// должен быть сгенерирован комиссионный товар,
					// остатки по которому позже будут закрыты документом передачи на комиссию.
					Если Выборка.НовыйВидЗапасовЭтоСубкомиссия Тогда
						// сохраняется исходное налогообложение, под которое был принят товар на комиссию
						НалогообложениеКомиссионногоВидаЗапасов = Выборка.НовыйВидЗапасовНалогообложениеКомитента;
					Иначе
						// налогообложение определяется по организации-комитенту.
						НалогообложениеКомиссионногоВидаЗапасов = Справочники.Организации.НалогообложениеНДС(
							Выборка.НовыйВидЗапасовВладелецТовара,
							Неопределено, // Склад
							ДокументОбъект.Дата);
					КонецЕсли;
					СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС = НалогообложениеКомиссионногоВидаЗапасов;
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
						Организация,
						Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию,
						СтруктураВидаЗапасовПоУмолчанию);
				ИначеЕсли Выборка.НастройкаПередачи = Перечисления.СпособыПередачиТоваров.Продажа Тогда
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
						Организация,
						Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию,
						СтруктураВидаЗапасовПоУмолчанию);
				ИначеЕсли Выборка.ОрганизацияОстатка = Организация И ЗначениеЗаполнено(Выборка.ВладелецТовара) Тогда
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
						Организация,
						Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию,
						СтруктураВидаЗапасовПоУмолчанию);
				Иначе // при настройках интеркампани - передача на комиссию, нельзя продавать на экспорт.
					ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
					ПродажаНаЭкспортКомиссионногоТовара = Истина;
				КонецЕсли;
			Иначе
				ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
			КонецЕсли;
			
			КоличествоОстаток	= Выборка.КоличествоОстаток;
			СуммаОстаток		= Выборка.СуммаОстаток;
			НеУказанНомерГТД	= Ложь;
			
			Если Выборка.НеУказанНомерГТД ИЛИ ПродажаНаЭкспортКомиссионногоТовара Тогда
				
				КоличествоОстаток	= 0;
				СуммаОстаток		= 0;
				НеУказанНомерГТД	= Выборка.НеУказанНомерГТД;
				
			ИначеЕсли (КоличествоТовара > 0 И КоличествоОстаток > 0)
			 ИЛИ (КоличествоТовара < 0 И КоличествоОстаток < 0) Тогда
				
				НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
				Если ЗначениеЗаполнено(ВидЗапасов) Тогда
					
					НоваяСтрока.ВидЗапасов = ВидЗапасов;
					
				Иначе
					
					ТекстИсключения = НСтр("ru = 'Ненулевое количество при пустом виде запасов.'");
					ВызватьИсключение ТекстИсключения;
					
				КонецЕсли;
				
				Если КоличествоТовара > 0 Тогда
					
					КоличествоОстаток = Макс(КоличествоОстаток, 0);
					Количество = Мин(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток = Макс(СуммаОстаток, 0);
						СуммаСНДС = ?(КоличествоОстаток = Количество, СуммаОстаток, Мин(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0, Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1), 0);
					КонецЕсли;
					
				Иначе
					
					КоличествоОстаток = Мин(КоличествоОстаток, 0);
					Количество = Макс(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток = Мин(СуммаОстаток, 0);
						СуммаСНДС = ?(КоличествоОстаток = Количество, СуммаОстаток, Макс(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0, Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1), 0);
					КонецЕсли;
					
				КонецЕсли;
				
				СтруктураДанныхСтроки.Количество				= Количество;
				СтруктураДанныхСтроки.СуммаСНДС					= СуммаСНДС;
				СтруктураДанныхСтроки.СуммаНДС					= ?(СуммаТовараСНДС <> 0, Окр(СуммаСНДС * СуммаНДСТовара / СуммаТовараСНДС, 2, 1), 0);
				СтруктураДанныхСтроки.СтавкаНДС					= Выборка.СтавкаНДС;
				СтруктураДанныхСтроки.СуммаВознаграждения		= ?(КоличествоТовара <> 0, Окр(Количество * СуммаВознагражденияВсего / КоличествоТовара, 2, 1), 0);
				СтруктураДанныхСтроки.СуммаНДСВознаграждения	= ?(КоличествоТовара <> 0, Окр(Количество * СуммаНДСВознагражденияВсего / КоличествоТовара, 2, 1), 0);
				СтруктураДанныхСтроки.Склад						= Выборка.Склад;
				СтруктураДанныхСтроки.СкладОтгрузки				= Выборка.СкладОтгрузки;
				СтруктураДанныхСтроки.ЗаказКлиента				= Выборка.Заказ;
				СтруктураДанныхСтроки.АналитикаУчетаНоменклатурыОтгрузки = Выборка.АналитикаУчетаНоменклатурыОтгрузки;
				СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций = Ложь;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
				
				// Для товаров, выкупаемых по интеркампани, формируются движения по Резервам.
				Если Выборка.ВидЗапасов <> ВидЗапасов Тогда
					
					ДвижениеРезерваПродавца = ТаблицаНовыеРезервы.Добавить();
					ЗаполнитьЗначенияСвойств(ДвижениеРезерваПродавца, НоваяСтрока);
					Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
						ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов Тогда
						ДвижениеРезерваПродавца.ВидДвижения = ВидДвиженияНакопления.Расход;
					Иначе
						ДвижениеРезерваПродавца.ВидДвижения = ВидДвиженияНакопления.Приход;
					КонецЕсли;
					ДвижениеРезерваПродавца.Период             = ВыборкаДанныеДокумента.Период;
					ДвижениеРезерваПродавца.Организация        = Организация;
					ДвижениеРезерваПродавца.КорОрганизация     = Выборка.ОрганизацияОстатка;
					ДвижениеРезерваПродавца.КорВидЗапасов      = Выборка.ВидЗапасов;
					
					Если ВыборкаДанныеДокумента.Период >= УчетНДСУТ.ДатаНачалаДействия150ФЗ()
						И ВыборкаДанныеДокумента.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
						И Выборка.СырьевойТовар Тогда
						РезервНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг;
					ИначеЕсли ВыборкаДанныеДокумента.Период >= УчетНДСУТ.ДатаНачалаДействия150ФЗ()
						И ВыборкаДанныеДокумента.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
						И Не Выборка.СырьевойТовар Тогда
						РезервНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров;
					ИначеЕсли Выборка.НастройкаПередачи = Перечисления.СпособыПередачиТоваров.ПередачаНаКомиссию Тогда
						РезервНалогообложениеНДС = НалогообложениеКомиссионногоВидаЗапасов;
					Иначе
						РезервНалогообложениеНДС = ВыборкаДанныеДокумента.НалогообложениеНДС;
					КонецЕсли;
					
					ДвижениеРезерваПродавца.НалогообложениеНДС = РезервНалогообложениеНДС;
					
					ДвижениеРезерваВладельца = ТаблицаНовыеРезервы.Добавить();
					Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
						ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов Тогда
						ДвижениеРезерваВладельца.ВидДвижения = ВидДвиженияНакопления.Приход;
					Иначе
						ДвижениеРезерваВладельца.ВидДвижения = ВидДвиженияНакопления.Расход;
					КонецЕсли;

					ДвижениеРезерваВладельца.Период                     = ВыборкаДанныеДокумента.Период;
					ДвижениеРезерваВладельца.АналитикаУчетаНоменклатуры = Выборка.АналитикаУчетаНоменклатуры;
					ДвижениеРезерваВладельца.Организация                = Выборка.ОрганизацияОстатка;
					ДвижениеРезерваВладельца.ВидЗапасов                 = Выборка.ВидЗапасов;
					ДвижениеРезерваВладельца.НомерГТД                   = Выборка.НомерГТД;
					ДвижениеРезерваВладельца.Количество                 = НоваяСтрока.Количество;
					ДвижениеРезерваВладельца.КорОрганизация             = Организация;
					ДвижениеРезерваВладельца.КорВидЗапасов              = ВидЗапасов;
					ДвижениеРезерваВладельца.НалогообложениеНДС         = РезервНалогообложениеНДС;
					
				КонецЕсли;
				
				КоличествоТовара			= КоличествоТовара				- СтруктураДанныхСтроки.Количество;
				СуммаТовараСНДС				= СуммаТовараСНДС				- СтруктураДанныхСтроки.СуммаСНДС;
				СуммаНДСТовара				= СуммаНДСТовара				- СтруктураДанныхСтроки.СуммаНДС;
				СуммаВознагражденияВсего	= СуммаВознагражденияВсего		- СтруктураДанныхСтроки.СуммаВознаграждения;
				СуммаНДСВознагражденияВсего	= СуммаНДСВознагражденияВсего	- СтруктураДанныхСтроки.СуммаНДСВознаграждения;
				СуммаОстаток				= СуммаОстаток					- СтруктураДанныхСтроки.СуммаСНДС;
				
			КонецЕсли;
			
		КонецЦикла; // Выборка по остаткам
		
		ПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций ИЛИ НЕ Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить();
		
		Если (КоличествоТовара <> 0 ИЛИ СуммаТовараСНДС <> 0) 
			И Не ПараметрыЗаполненияВидовЗапасов.ЭтоРасходТоваровОрганизацийНаПроизводство Тогда
			
			Если ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию
				ИЛИ ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
				
				Если Не ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке
					И ПараметрыЗаполненияВидовЗапасов.ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Количество() = 0 Тогда
					ТекстИсключения = НСтр("ru = 'Установлен флаг получения владельца товаров из таблицы
												|реквизитов видов запасов по умолчанию, но таблица не передана.'");
					ВызватьИсключение ТекстИсключения;
				КонецЕсли;
				
				ВыборкаТаблицаТоваров.Сбросить();
				ВидыЗапасовПоУмолчанию.Очистить();
				
				Если ВыборкаТаблицаТоваров.НайтиСледующий(Новый Структура("НомерСтроки", ВыборкаОстаткиПоСтрокам.НомерСтроки)) Тогда
					
					ВидЦены = ВыборкаТаблицаТоваров.ВидЦены;
					ГруппаФинансовогоУчета = ВыборкаТаблицаТоваров.ГруппаФинансовогоУчета;
					
					Если ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке Тогда
						Отбор = Новый Структура("ВидЦены, ГруппаФинансовогоУчета", ВидЦены, ГруппаФинансовогоУчета);
						СтрокиВидовЗапасовПоУмолчанию = ВидыЗапасовПоУмолчанию.НайтиСтроки(Отбор);
						
						Если СтрокиВидовЗапасовПоУмолчанию.Количество() = 0 Тогда
							ЗаполнитьЗначенияСвойств(СтруктураВидаЗапасовПоУмолчанию, Отбор);
							
							ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
								Организация,
								ХозяйственнаяОперация,
								СтруктураВидаЗапасовПоУмолчанию);
							
							НоваяСтрока = ВидыЗапасовПоУмолчанию.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, Отбор);
							НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
						КонецЕсли;
					Иначе
						СтруктураВидаЗапасовПоУмолчанию.ВидЦены = ВидЦены;
						СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = ГруппаФинансовогоУчета;
						
						СтруктураВидаЗапасовПоУмолчанию.ВладелецТовара	= ВыборкаТаблицаТоваров.ВладелецТовара;
						СтруктураВидаЗапасовПоУмолчанию.Контрагент		= ВыборкаТаблицаТоваров.Контрагент;
						СтруктураВидаЗапасовПоУмолчанию.Договор			= ВыборкаТаблицаТоваров.Договор;
						СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов		= ВыборкаТаблицаТоваров.ТипЗапасов;
						
						ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
							Организация,
							ХозяйственнаяОперация,
							СтруктураВидаЗапасовПоУмолчанию);
					КонецЕсли;
					
					НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТаблицаТоваров);
					НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
					
					СтруктураДанныхСтроки.Количество				= КоличествоТовара;
					СтруктураДанныхСтроки.СуммаСНДС					= СуммаТовараСНДС;
					СтруктураДанныхСтроки.СуммаНДС					= СуммаНДСТовара;
					СтруктураДанныхСтроки.СуммаВознаграждения		= 0;
					СтруктураДанныхСтроки.СуммаНДСВознаграждения	= 0;
					СтруктураДанныхСтроки.СтавкаНДС					= ВыборкаТаблицаТоваров.СтавкаНДС;
					СтруктураДанныхСтроки.Склад						= ВыборкаТаблицаТоваров.Склад;
					СтруктураДанныхСтроки.СкладОтгрузки				= ВыборкаТаблицаТоваров.Склад;
					СтруктураДанныхСтроки.ЗаказКлиента				= Неопределено;
					СтруктураДанныхСтроки.АналитикаУчетаНоменклатурыОтгрузки = ВыборкаТаблицаТоваров.АналитикаУчетаНоменклатуры;
					СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций = Истина;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
					
					Если Не ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке Тогда
						
						СтруктураВидаЗапасовПоУмолчаниюРезервы = Новый Структура;
						Для Каждого ТекКлюч Из СтруктураВидаЗапасовПоУмолчанию Цикл
							СтруктураВидаЗапасовПоУмолчаниюРезервы.Вставить(ТекКлюч.Ключ, ТекКлюч.Значение);
						КонецЦикла;
						СтруктураВидаЗапасовПоУмолчаниюРезервы.ТипЗапасов		= ВыборкаТаблицаТоваров.ТипЗапасовРезервы;
						
						// Добавляем резервы для неотрицательности остатка продукции по товарам организации
						ВидЗапасовПоУмолчаниюРезерв = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
							Организация,
							ХозяйственнаяОперация,
							СтруктураВидаЗапасовПоУмолчаниюРезервы);
						
						ДвижениеРезерваСобственного = ТаблицаНовыеРезервы.Добавить();
						ЗаполнитьЗначенияСвойств(ДвижениеРезерваСобственного, НоваяСтрока);
						ДвижениеРезерваСобственного.ВидДвижения = ВидДвиженияНакопления.Приход;
						
						ДвижениеРезерваСобственного.Период             = ВыборкаДанныеДокумента.Период;
						ДвижениеРезерваСобственного.Организация        = Организация;
						
						ДвижениеРезерваСобственного.КорОрганизация     = Организация;
						ДвижениеРезерваСобственного.КорВидЗапасов      = ВидЗапасовПоУмолчаниюРезерв;
						
						Если ВыборкаДанныеДокумента.Период >= УчетНДСУТ.ДатаНачалаДействия150ФЗ()
							И ВыборкаДанныеДокумента.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
							И ВыборкаТаблицаТоваров.СырьевойТовар Тогда
							РезервНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг;
						ИначеЕсли ВыборкаДанныеДокумента.Период >= УчетНДСУТ.ДатаНачалаДействия150ФЗ()
							И ВыборкаДанныеДокумента.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
							И Не ВыборкаТаблицаТоваров.СырьевойТовар Тогда
							РезервНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров;
						Иначе
							РезервНалогообложениеНДС = ВыборкаДанныеДокумента.НалогообложениеНДС;
						КонецЕсли;
						
						ДвижениеРезерваСобственного.НалогообложениеНДС = РезервНалогообложениеНДС;
						
						// Добавляем резервы для отражения отрицательного неконтролируемого остатка
						ДвижениеРезерваБезКонтроля = ТаблицаНовыеРезервы.Добавить();
						ЗаполнитьЗначенияСвойств(ДвижениеРезерваБезКонтроля, ДвижениеРезерваСобственного);
						ДвижениеРезерваБезКонтроля.ВидДвижения = ВидДвиженияНакопления.Расход;
						
						ДвижениеРезерваБезКонтроля.ВидЗапасов    = ВидЗапасовПоУмолчаниюРезерв;
						ДвижениеРезерваБезКонтроля.КорВидЗапасов = ДвижениеРезерваСобственного.ВидЗапасов;
						
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			Если Не ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию Тогда
				Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения Тогда
					Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
					Выборка.Следующий();
					
					НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, ВыборкаТаблицаТоваров);
					
					НоваяСтрокаОшибок.Количество		= КоличествоТовара;
					НоваяСтрокаОшибок.ЕдиницаИзмерения	= Выборка.ЕдиницаИзмерения;
					НоваяСтрокаОшибок.НеУказанНомерГТД	= НеУказанНомерГТД;
					НоваяСтрокаОшибок.Номенклатура		= Выборка.Номенклатура;
					НоваяСтрокаОшибок.Характеристика	= Выборка.Характеристика;
					НоваяСтрокаОшибок.Серия				= Выборка.Серия;
					НоваяСтрокаОшибок.Склад				= Выборка.Склад;
					НоваяСтрокаОшибок.Назначение		= Выборка.Назначение;
				КонецЕсли;
				Если Не ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; // Выборка по строкам документа
	
	Если ТаблицаОшибок.Количество() > 0 И ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
		ТекстСообщения = НСтр( "ru = 'Документ %Ссылка% проведен с выключенным контролем остатков товаров организаций.'", Метаданные.ОсновнойЯзык.КодЯзыка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ДокументОбъект.Ссылка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытияВыключенКонтрольОстатков(),
			УровеньЖурналаРегистрации.Предупреждение,
			,
			ДокументОбъект.Ссылка,
			ТекстСообщения);
	КонецЕсли;
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов = Неопределено Тогда
		ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].Загрузить(ТаблицаВидыЗапасов);
	КонецЕсли;
	
	Если КонтролироватьИзменениеНомеровГТД Тогда
		
		ТаблицаНомеровГТД.Колонки.Добавить("НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаВидыЗапасов Цикл
			
			НоваяСтрока = ТаблицаНомеровГТД.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			НоваяСтрока.Количество = 0;
			НоваяСтрока.НовоеКоличество = СтрокаТаблицы.Количество;
			
		КонецЦикла;
		
		ТаблицаНомеровГТД.Свернуть("АналитикаУчетаНоменклатуры, НомерГТД", "Количество, НовоеКоличество");
		Для Каждого СтрокаТаблицы Из ТаблицаНомеровГТД Цикл
			Если СтрокаТаблицы.Количество <> СтрокаТаблицы.НовоеКоличество Тогда
				ДополнительныеСвойства.Вставить("ИзменилисьНомераГТД", Истина);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	СообщитьОбОшибкахКонтроляТоваровОрганизаций(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов);
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы <> Неопределено Тогда
		ПараметрыЗаполненияВидовЗапасов.Вставить("ТаблицаНовыеРезервы", ТаблицаНовыеРезервы);
	Иначе
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НовыеРезервы.ВидДвижения,
		|	НовыеРезервы.Период,
		|	НовыеРезервы.АналитикаУчетаНоменклатуры,
		|	НовыеРезервы.Организация,
		|	НовыеРезервы.ВидЗапасов,
		|	НовыеРезервы.НомерГТД,
		|	НовыеРезервы.Количество,
		|	НовыеРезервы.КорОрганизация,
		|	НовыеРезервы.КорВидЗапасов,
		|	НовыеРезервы.НалогообложениеНДС
		|ПОМЕСТИТЬ ВТНовыеРезервы
		|ИЗ
		|	&ТаблицаНовыеРезервы КАК НовыеРезервы";
		
		Запрос.УстановитьПараметр("ТаблицаНовыеРезервы", ТаблицаНовыеРезервы);
		Запрос.Выполнить();
	КонецЕсли;
	
КонецПроцедуры

Функция ЗапросРаспределенияРезервовПоТаблицеОстатков(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ЗапросРаспределенияРезервов = Новый Запрос;
	ЗапросРаспределенияРезервов.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросРаспределенияРезервов.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.Организация КАК Организация,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	0 - Остатки.КоличествоОстаток КАК Количество,
	|	ВЫБОР
	|		КОГДА Остатки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				И ТИПЗНАЧЕНИЯ(Остатки.ВидЗапасов.ВладелецТовара) = ЗНАЧЕНИЕ(Справочник.Партнеры)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеПокрываетсяОстатками,
	|	Ключи.Номенклатура КАК Номенклатура,
	|	Ключи.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Ключи.Характеристика КАК Характеристика,
	|	Ключи.Серия КАК Серия,
	|	Ключи.Назначение КАК Назначение,
	|	Ключи.Склад КАК Склад
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|		ПО (Ключи.Ссылка = Остатки.АналитикаУчетаНоменклатуры)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТоварыОрганизацийИзменения КАК ТоварыОрганизацийИзменения
	|		ПО Остатки.АналитикаУчетаНоменклатуры = ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры
	|			И Остатки.Организация = ТоварыОрганизацийИзменения.Организация
	|			И Остатки.ВидЗапасов = ТоварыОрганизацийИзменения.ВидЗапасов
	|			И (Остатки.НомерГТД = ТоварыОрганизацийИзменения.НомерГТД
	|				ИЛИ &БезОтбораПоНомерамГТД)
	|			
	|ГДЕ
	|	Остатки.КоличествоОстаток < 0
	|	И Остатки.Организация = &Организация
	|	И НЕ Остатки.ВидЗапасов.ТипЗапасов В (&НеконтролируемыеТипыЗапасов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОстатков.Организация КАК Организация
	|ПОМЕСТИТЬ ОтборВидовЗапасов
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасовРезерва.Ссылка КАК Ссылка,
	|	ВидыЗапасовРезерва.Организация КАК Организация,
	|	ВидыЗапасовРезерва.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасовРезерва.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВидыЗапасовРезерва.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасовРезерва.Соглашение КАК Соглашение,
	|	ВидыЗапасовРезерва.Валюта КАК Валюта,
	|	ВидыЗапасовРезерва.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасовРезерва.Контрагент КАК Контрагент,
	|	ВидыЗапасовРезерва.Договор КАК Договор,
	|	ВидыЗапасовРезерва.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасовРезерва.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ВидыЗапасовРезерва
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасовРезерва
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборВидовЗапасов КАК Отбор
	|	ПО ВидыЗапасовРезерва.Организация = Отбор.Организация
	|
	|ГДЕ
	|	НЕ ВидыЗапасовРезерва.ЭтоДубль
	|	И НЕ ВидыЗапасовРезерва.РеализацияЗапасовДругойОрганизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТипЗапасов,
	|	НалогообложениеНДС,
	|	ВладелецТовара,
	|	Соглашение,
	|	Валюта,
	|	ГруппаФинансовогоУчета,
	|	Контрагент,
	|	Договор,
	|	ГруппаПродукции,
	|	ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.Организация КАК Организация,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	Остатки.Количество КАК Количество,
	|	Ключи.Номенклатура КАК Номенклатура,
	|	Ключи.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Ключи.Характеристика КАК Характеристика,
	|	Ключи.Серия КАК Серия,
	|	Ключи.Склад КАК Склад
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Остатки.Организация КАК Организация,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК Количество
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|	ГДЕ
	|		Остатки.КоличествоОстаток > 0
	|		И Остатки.Организация <> &Организация
	|		И Остатки.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.Организация,
	|		Остатки.ВидЗапасов,
	|		Остатки.НомерГТД,
	|		Остатки.КоличествоОстаток
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройки
	|			ПО (Настройки.ОрганизацияВладелец = Остатки.Организация)
	|				И (Настройки.ОрганизацияПродавец = &Организация)
	|				И (Настройки.ТипЗапасов = Остатки.ВидЗапасов.ТипЗапасов)
	|				И (Настройки.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|					ИЛИ Настройки.Валюта = Остатки.ВидЗапасов.Валюта
	|						И Настройки.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию))
	|	ГДЕ
	|		Остатки.КоличествоОстаток > 0
	|		И Остатки.Организация <> &Организация
	|		И Остатки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.Организация,
	|		Остатки.ВидЗапасов,
	|		Остатки.НомерГТД,
	|		Остатки.КоличествоОстаток
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|	ГДЕ
	|		Остатки.КоличествоОстаток > 0
	|		И Остатки.Организация = &Организация
	|		И Остатки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.Организация,
	|		ВидыЗапасовРезерва.Ссылка,
	|		Остатки.НомерГТД,
	|		0 - Остатки.КоличествоОстаток
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|			ПО Остатки.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРеквизитовВидовЗапасовПоУмолчанию КАК ВидыЗапасовПоУмолчанию
	|			ПО Остатки.АналитикаУчетаНоменклатуры = ВидыЗапасовПоУмолчанию.АналитикаУчетаНоменклатуры
	|				И Остатки.Организация = ВидыЗапасовПоУмолчанию.Организация
	|				И Остатки.ВидЗапасов = ВидыЗапасовПоУмолчанию.ВидЗапасов
	|				И Остатки.НомерГТД = ВидыЗапасовПоУмолчанию.НомерГТД
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыЗапасовРезерва КАК ВидыЗапасовРезерва
	|			ПО (ВидыЗапасовРезерва.Организация = СпрВидыЗапасов.Организация)
	|				И (ВидыЗапасовРезерва.ТипЗапасов = ВидыЗапасовПоУмолчанию.ТипЗапасовРезервы)
	|				И (ВидыЗапасовРезерва.НалогообложениеНДС = СпрВидыЗапасов.НалогообложениеНДС)
	|				И (ВидыЗапасовРезерва.ВладелецТовара = СпрВидыЗапасов.ВладелецТовара
	|					ИЛИ СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|				И (ВидыЗапасовРезерва.Соглашение = СпрВидыЗапасов.Соглашение)
	|				И (ВидыЗапасовРезерва.Валюта = СпрВидыЗапасов.Валюта)
	|				И (ВидыЗапасовРезерва.ГруппаФинансовогоУчета = СпрВидыЗапасов.ГруппаФинансовогоУчета)
	|				И (ВидыЗапасовРезерва.Контрагент = СпрВидыЗапасов.Контрагент)
	|				И (ВидыЗапасовРезерва.Договор = СпрВидыЗапасов.Договор)
	|				И (ВидыЗапасовРезерва.ГруппаПродукции = СпрВидыЗапасов.ГруппаПродукции)
	|				И (ВидыЗапасовРезерва.ВидЦены = СпрВидыЗапасов.ВидЦены)
	|	ГДЕ
	|		Остатки.КоличествоОстаток < 0) КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|		ПО (Ключи.Ссылка = Остатки.АналитикаУчетаНоменклатуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборВидовЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВидыЗапасовРезерва
	|";
	
	ЗапросРаспределенияРезервов.УстановитьПараметр("НеконтролируемыеТипыЗапасов", НеконтролируемыеТипыЗапасов());
	ЗапросРаспределенияРезервов.УстановитьПараметр("БезОтбораПоНомерамГТД", ПараметрыЗаполненияВидовЗапасов.БезОтбораПоНомерамГТД);
	
	Возврат ЗапросРаспределенияРезервов;

КонецФункции

Процедура РаспределитьНовыеРезервыПоТаблицеОстатковРазныхПериодов(
	Знач ЗапросРаспределенияРезервов, 
	МенеджерВременныхТаблиц, 
	Знач Организация, 
	Знач ПараметрыЗаполненияВидовЗапасов, 
	ТаблицаНовыеРезервы, 
	ТаблицаОшибок)
	
	ЗапросУничтоженияТаблиц = Новый Запрос;
	ЗапросУничтоженияТаблиц.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросУничтоженияТаблиц.Текст = "УНИЧТОЖИТЬ ВтНовыеРезервы; УНИЧТОЖИТЬ ПодобранныеРезервы";
	
	ЗапросТаблицыОстатков = Новый Запрос;
	ЗапросТаблицыОстатков.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросТаблицыОстатков.Текст = 
	"ВЫБРАТЬ
	|	НовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	НовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	НовыеРезервы.НомерГТД КАК НомерГТД,
	|	НовыеРезервы.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА НовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -НовыеРезервы.Количество
	|		ИНАЧЕ НовыеРезервы.Количество
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ВтНовыеРезервы
	|ИЗ
	|	&ТаблицаНовыеРезервы КАК НовыеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	ВтНовыеРезервы.НомерГТД КАК НомерГТД,
	|	ВтНовыеРезервы.Организация КАК Организация,
	|	СУММА(ВтНовыеРезервы.Количество) КАК Количество
	|ПОМЕСТИТЬ ПодобранныеРезервы
	|ИЗ
	|	ВтНовыеРезервы КАК ВтНовыеРезервы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтНовыеРезервы.АналитикаУчетаНоменклатуры,
	|	ВтНовыеРезервы.ВидЗапасов,
	|	ВтНовыеРезервы.НомерГТД,
	|	ВтНовыеРезервы.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоПериодам.Организация КАК Организация,
	|	ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиПоПериодам.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиПоПериодам.НомерГТД КАК НомерГТД,
	|	СУММА(ОстаткиПоПериодам.КоличествоОстаток - ЕСТЬNULL(ПодобранныеРезервы.Количество, 0)) КАК КоличествоОстаток,
	|	ОстаткиПоПериодам.ДатаПоступления КАК ДатаПоступления,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ОстаткиПоПериодам.Номенклатура КАК Номенклатура,
	|	ОстаткиПоПериодам.Характеристика КАК Характеристика,
	|	ОстаткиПоПериодам.Серия КАК Серия,
	|	ОстаткиПоПериодам.Назначение КАК Назначение,
	|	ОстаткиПоПериодам.Склад КАК Склад,
	|	ОстаткиПоПериодам.ДокументРеализации КАК ДокументРеализации,
	|	ОстаткиПоПериодам.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ОстаткиПоПериодам.СуммаОстаток КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ТаблицаОстатковПоПериодам КАК ОстаткиПоПериодам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодобранныеРезервы КАК ПодобранныеРезервы
	|		ПО ОстаткиПоПериодам.АналитикаУчетаНоменклатуры = ПодобранныеРезервы.АналитикаУчетаНоменклатуры
	|			И ОстаткиПоПериодам.ВидЗапасов = ПодобранныеРезервы.ВидЗапасов
	|			И ОстаткиПоПериодам.НомерГТД = ПодобранныеРезервы.НомерГТД
	|			И ОстаткиПоПериодам.Организация = ПодобранныеРезервы.Организация
	|ГДЕ
	|	ОстаткиПоПериодам.Период = &ТекущийПериод
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПоПериодам.СуммаОстаток,
	|	ОстаткиПоПериодам.Характеристика,
	|	ОстаткиПоПериодам.Номенклатура,
	|	ОстаткиПоПериодам.НомерГТД,
	|	ОстаткиПоПериодам.СкладОтгрузки,
	|	ОстаткиПоПериодам.ВидЗапасов,
	|	ОстаткиПоПериодам.АналитикаУчетаНоменклатуры,
	|	ОстаткиПоПериодам.Организация,
	|	ОстаткиПоПериодам.РеализацияЗапасовДругойОрганизации,
	|	ОстаткиПоПериодам.ДокументРеализации,
	|	ОстаткиПоПериодам.Склад,
	|	ОстаткиПоПериодам.Серия,
	|	ОстаткиПоПериодам.Назначение,
	|	ОстаткиПоПериодам.ДатаПоступления";
	
	ЗапросПериодов = ЗапросРазныхПериодов(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	Выборка = ЗапросПериодов.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗапросТаблицыОстатков.УстановитьПараметр("ТаблицаНовыеРезервы", ТаблицаНовыеРезервы);
		ЗапросТаблицыОстатков.УстановитьПараметр("ТекущийПериод", Выборка.Период);
		ЗапросТаблицыОстатков.Выполнить();
		
		ЗапросРаспределенияРезервов.УстановитьПараметр("Период", Выборка.Период);
		
		РаспределитьНовыеРезервыПоТаблицеОстатков(
			ЗапросРаспределенияРезервов, 
			Организация, 
			ПараметрыЗаполненияВидовЗапасов, 
			ТаблицаНовыеРезервы, 
			ТаблицаОшибок);
		
		ЗапросУничтоженияТаблиц.Выполнить();
		
	КонецЦикла;
	
	ЗапросУничтоженияТаблиц.Текст = "УНИЧТОЖИТЬ ТаблицаОстатковПоПериодам";
	ЗапросУничтоженияТаблиц.Выполнить();

КонецПроцедуры

Процедура РаспределитьНовыеРезервыПоТаблицеОстатков(
		Знач ЗапросРаспределенияРезервов, 
		Знач Организация, 
		Знач ПараметрыЗаполненияВидовЗапасов, 
		ТаблицаНовыеРезервы, 
		ТаблицаОшибок)
	
	ЗапросРаспределенияРезервов.УстановитьПараметр("Организация", Организация);
	
	Результаты = ЗапросРаспределенияРезервов.ВыполнитьПакет();
	
	ТаблицаРаспределения = Результаты[0].Выгрузить(); // п.4
	ОстаткиКРаспределению = Результаты[3].Выгрузить();
	
	КолонкиПоискаОстатковКРаспределению = "АналитикаУчетаНоменклатуры, НомерГТД";
	
	ОстаткиКРаспределению.Индексы.Добавить(КолонкиПоискаОстатковКРаспределению);
	СтруктураПоиска = Новый Структура(КолонкиПоискаОстатковКРаспределению);
	
	Для Каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл     // п.5
		
		Если СтрокаРаспределения.НеПокрываетсяОстатками Тогда
			ЗаписьОшибки = ТаблицаОшибок.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьОшибки, СтрокаРаспределения);
			ЗаписьОшибки.НеУказанНомерГТД = Ложь;
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаРаспределения);
		СтрокиОстатка = ОстаткиКРаспределению.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаОстатка Из СтрокиОстатка Цикл
			
			Если СтрокаОстатка.Количество <= 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(СтрокаРаспределения.Количество, СтрокаОстатка.Количество);
			СтрокаРаспределения.Количество = СтрокаРаспределения.Количество - Количество;
			СтрокаОстатка.Количество = СтрокаОстатка.Количество - Количество;
			
			РезервПродавца = ТаблицаНовыеРезервы.Добавить();
			ЗаполнитьЗначенияСвойств(РезервПродавца, СтрокаРаспределения);
			РезервПродавца.ВидДвижения = ВидДвиженияНакопления.Приход;
			РезервПродавца.Количество = Количество;
			РезервПродавца.КорОрганизация= СтрокаОстатка.Организация;
			РезервПродавца.КорВидЗапасов = СтрокаОстатка.ВидЗапасов;
			РезервПродавца.НалогообложениеНДС = ПараметрыЗаполненияВидовЗапасов.НалогообложениеНДС;
			
			РезервВладельца = ТаблицаНовыеРезервы.Добавить();
			ЗаполнитьЗначенияСвойств(РезервВладельца, СтрокаОстатка);
			РезервВладельца.ВидДвижения = ВидДвиженияНакопления.Расход;
			РезервВладельца.Количество = Количество;
			РезервВладельца.КорОрганизация= СтрокаРаспределения.Организация;
			РезервВладельца.КорВидЗапасов = СтрокаРаспределения.ВидЗапасов;
			РезервВладельца.НалогообложениеНДС = ПараметрыЗаполненияВидовЗапасов.НалогообложениеНДС
			
		КонецЦикла;
		
		Если СтрокаРаспределения.Количество <> 0 Тогда
			ЗаписьОшибки = ТаблицаОшибок.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьОшибки, СтрокаРаспределения);
			ЗаписьОшибки.НеУказанНомерГТД = Ложь;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Функция КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов)
	НалогообложениеНДС            = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС;
	
	Если Не ЗначениеЗаполнено(НалогообложениеНДС) Тогда
		КонтролироватьНалогообложение = Ложь;
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
	 		 ИЛИ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
		КонтролироватьНалогообложение = Ложь;
	Иначе
		КонтролироватьНалогообложение = Истина;
	КонецЕсли;
	
	Возврат КонтролироватьНалогообложение;
КонецФункции

Процедура СформироватьВТСторноРезервов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, "ВТСторноРезервовПредыдущихПериодов");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	НЕ ВТТоварыОрганизацийИзменения.ДляСторноРезерва
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	(&ПоВсемТипамЗапасов
	|			ИЛИ ВидыЗапасов.ТипЗапасов В (&ТипЗапасов))
	|	И (&ПоВсемНалогообложениямНДС
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС В (&НалогообложениеНДС)
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|	И (&ПоВсемВладелецамТоваров
	|			ИЛИ ВидыЗапасов.ВладелецТовара В (&ВладелецТовара))
	|	И (&ПоВсемСоглашениям
	|			ИЛИ ВидыЗапасов.Соглашение В (&Соглашение))
	|	И (&ПоВсемВалютам
	|			ИЛИ ВидыЗапасов.Валюта В (&Валюта))
	|	И (&ПоВсемКонтрагентам
	|			ИЛИ ВидыЗапасов.Контрагент В (&Контрагент))
	|	И (&ПоВсемДоговорам
	|			ИЛИ ВидыЗапасов.Договор В (&Договор))
	|	И (&ПоВсемГруппамПродукции
	|			ИЛИ ВидыЗапасов.ГруппаПродукции В (&ГруппаПродукции))
	|	И (&ПоВсемВидамЦен
	|			ИЛИ ВидыЗапасов.ВидЦены В (&ВидЦены))
	|	И (&ПоВсемОрганизациям
	|			ИЛИ ВидыЗапасов.Организация В (&Организация))
	|	И НЕ ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И НЕ ВидыЗапасов.ЭтоДубль";
	
	ОтборыВидовЗапасов = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов;
	
	Запрос.УстановитьПараметр("ТипЗапасов", ОтборыВидовЗапасов.ТипЗапасов);
	Запрос.УстановитьПараметр("ПоВсемТипамЗапасов", ОтборыВидовЗапасов.ТипЗапасов = Неопределено);
	
	Запрос.УстановитьПараметр("НалогообложениеНДС", ОтборыВидовЗапасов.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ПоВсемНалогообложениямНДС", ОтборыВидовЗапасов.НалогообложениеНДС = Неопределено);
	
	Запрос.УстановитьПараметр("ВладелецТовара", ОтборыВидовЗапасов.ВладелецТовара);
	Запрос.УстановитьПараметр("ПоВсемВладелецамТоваров", ЗначениеЗаполнено(ОтборыВидовЗапасов.ВладелецТовара));
	
	Запрос.УстановитьПараметр("Соглашение", ОтборыВидовЗапасов.Соглашение);
	Запрос.УстановитьПараметр("ПоВсемСоглашениям", ОтборыВидовЗапасов.Соглашение = Неопределено);
	
	Запрос.УстановитьПараметр("Валюта", ОтборыВидовЗапасов.Валюта);
	Запрос.УстановитьПараметр("ПоВсемВалютам", ОтборыВидовЗапасов.Валюта = Неопределено);
	
	Запрос.УстановитьПараметр("Контрагент", ОтборыВидовЗапасов.Контрагент);
	Запрос.УстановитьПараметр("ПоВсемКонтрагентам", ЗначениеЗаполнено(ОтборыВидовЗапасов.Контрагент));
	
	Запрос.УстановитьПараметр("Договор", ОтборыВидовЗапасов.Договор);
	Запрос.УстановитьПараметр("ПоВсемДоговорам", ЗначениеЗаполнено(ОтборыВидовЗапасов.Договор));
	
	Запрос.УстановитьПараметр("ГруппаПродукции", ОтборыВидовЗапасов.ГруппаПродукции);
	Запрос.УстановитьПараметр("ПоВсемГруппамПродукции", ОтборыВидовЗапасов.ГруппаПродукции = Неопределено);
	
	Запрос.УстановитьПараметр("ВидЦены", ОтборыВидовЗапасов.ВидЦены);
	Запрос.УстановитьПараметр("ПоВсемВидамЦен", ОтборыВидовЗапасов.ВидЦены = Неопределено);
	
	Запрос.УстановитьПараметр("Организация", ОтборыВидовЗапасов.Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", ОтборыВидовЗапасов.Организация = Неопределено);

	Результаты = Запрос.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("КорВидыЗапасовДляСторно", Результаты[0].Выгрузить().ВыгрузитьКолонку("ВидЗапасов"));
	Запрос.УстановитьПараметр("ВидыЗапасовПолучателя", Результаты[1].Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СформированныеРезервы.Период КАК Период,
	|	СформированныеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СформированныеРезервы.Организация КАК Организация,
	|	СформированныеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	СформированныеРезервы.НомерГТД КАК НомерГТД,
	|	СформированныеРезервы.КорОрганизация КАК КорОрганизация,
	|	СформированныеРезервы.КорВидЗапасов КАК КорВидЗапасов,
	|	СформированныеРезервы.НалогообложениеНДС КАК НалогообложениеНДС,
	|	СформированныеРезервы.Количество КАК Количество,
	|	СформированныеРезервы.ВидДвижения КАК ВидДвижения
	|ПОМЕСТИТЬ ВТСформированныеРезервы
	|ИЗ
	|	&СформированныеРезервы КАК СформированныеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТТоварыОрганизацийИзменения.Организация КАК Организация,
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов,
	|	ВТТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	ВТТоварыОрганизацийИзменения.Период КАК Период
	|ПОМЕСТИТЬ ВТОтборыРезервовДляСторно
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляСторноРезерва
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, МЕСЯЦ) КАК Период,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов,
	|	ВложенныйЗапрос.НалогообложениеНДС КАК НалогообложениеНДС,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КорВидЗапасов В (&КорВидыЗапасовДляСторно)
	|			ТОГДА 0
	|		КОГДА ВложенныйЗапрос.КорВидЗапасов В (&ВидыЗапасовПолучателя)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет
	|ИЗ
	|	(ВЫБРАТЬ
	|		РезервыТоваровОрганизаций.Период КАК Период,
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация КАК Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|		РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|		РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|		РезервыТоваровОрганизаций.НалогообложениеНДС КАК НалогообложениеНДС,
	|		РезервыТоваровОрганизаций.Количество КАК Количество
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборыРезервовДляСторно КАК ОтборыРезервовДляСторно
	|			ПО РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры = ОтборыРезервовДляСторно.АналитикаУчетаНоменклатуры
	|				И РезервыТоваровОрганизаций.Организация = ОтборыРезервовДляСторно.Организация
	|				И РезервыТоваровОрганизаций.ВидЗапасов = ОтборыРезервовДляСторно.ВидЗапасов
	|				И РезервыТоваровОрганизаций.НомерГТД = ОтборыРезервовДляСторно.НомерГТД
	|				И (КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) >= ОтборыРезервовДляСторно.Период)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|			ПО РезервыТоваровОрганизаций.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	ГДЕ
	|		РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И (КорВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска)
	|				ИЛИ &ПодтверждениеВыпуска)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СторноРезервов.Период,
	|		СторноРезервов.АналитикаУчетаНоменклатуры,
	|		СторноРезервов.Организация,
	|		СторноРезервов.ВидЗапасов,
	|		СторноРезервов.НомерГТД,
	|		СторноРезервов.КорОрганизация,
	|		СторноРезервов.КорВидЗапасов,
	|		СторноРезервов.НалогообложениеНДС,
	|		СторноРезервов.Количество
	|	ИЗ
	|		ВТСторноРезервовПредыдущихПериодов КАК СторноРезервов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборыРезервовДляСторно КАК ОтборыРезервовДляСторно
	|			ПО СторноРезервов.АналитикаУчетаНоменклатуры = ОтборыРезервовДляСторно.АналитикаУчетаНоменклатуры
	|				И СторноРезервов.Организация = ОтборыРезервовДляСторно.Организация
	|				И СторноРезервов.ВидЗапасов = ОтборыРезервовДляСторно.ВидЗапасов
	|				И СторноРезервов.НомерГТД = ОтборыРезервовДляСторно.НомерГТД
	|				И (КОНЕЦПЕРИОДА(СторноРезервов.Период, МЕСЯЦ) >= ОтборыРезервовДляСторно.Период)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|			ПО СторноРезервов.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	ГДЕ
	|		СторноРезервов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И (КорВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска)
	|				ИЛИ &ПодтверждениеВыпуска)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СформированныеРезервы.Период,
	|		СформированныеРезервы.АналитикаУчетаНоменклатуры,
	|		СформированныеРезервы.Организация,
	|		СформированныеРезервы.ВидЗапасов,
	|		СформированныеРезервы.НомерГТД,
	|		СформированныеРезервы.КорОрганизация,
	|		СформированныеРезервы.КорВидЗапасов,
	|		СформированныеРезервы.НалогообложениеНДС,
	|		СформированныеРезервы.Количество
	|	ИЗ
	|		ВТСформированныеРезервы КАК СформированныеРезервы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборыРезервовДляСторно КАК ОтборыРезервовДляСторно
	|			ПО СформированныеРезервы.АналитикаУчетаНоменклатуры = ОтборыРезервовДляСторно.АналитикаУчетаНоменклатуры
	|				И СформированныеРезервы.Организация = ОтборыРезервовДляСторно.Организация
	|				И СформированныеРезервы.ВидЗапасов = ОтборыРезервовДляСторно.ВидЗапасов
	|				И СформированныеРезервы.НомерГТД = ОтборыРезервовДляСторно.НомерГТД
	|				И (КОНЕЦПЕРИОДА(СформированныеРезервы.Период, МЕСЯЦ) >= ОтборыРезервовДляСторно.Период)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|			ПО СформированныеРезервы.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	ГДЕ
	|		СформированныеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И (КорВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска)
	|				ИЛИ &ПодтверждениеВыпуска)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, МЕСЯЦ),
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов,
	|	ВложенныйЗапрос.НалогообложениеНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВТТоварыОрганизацийИзменения.Период, МЕСЯЦ) КАК Период,
	|	ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТТоварыОрганизацийИзменения.Организация КАК Организация,
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов,
	|	ВТТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	СУММА(ВТТоварыОрганизацийИзменения.Количество) КАК Количество
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляСторноРезерва
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВТТоварыОрганизацийИзменения.Период, МЕСЯЦ),
	|	ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры,
	|	ВТТоварыОрганизацийИзменения.Организация,
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов,
	|	ВТТоварыОрганизацийИзменения.НомерГТД
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос.УстановитьПараметр("ПодтверждениеВыпуска", Ложь);
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") Тогда
		СформированныеРезервы = ДокументОбъект.ДополнительныеСвойства.ТаблицаРезервыТоваровОрганизаций.Скопировать();
	Иначе
		СформированныеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КонецЕсли;
	Запрос.УстановитьПараметр("СформированныеРезервы", СформированныеРезервы);
	
	Результаты = Запрос.ВыполнитьПакет();
	РезервыДляСторно = Результаты[Результаты.ВГраница() - 1].Выгрузить();
	РезервыДляСторно.Индексы.Добавить("АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД");
	ТоварыОрганизацийДляСторно = Результаты[Результаты.ВГраница()].Выгрузить();
	
	ТаблицаСторноДвижений = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД");
	Для Каждого СтрокаТоварыОрганизацийДляСторно Из ТоварыОрганизацийДляСторно Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоварыОрганизацийДляСторно);
		СтрокиРезервыДляСторно = РезервыДляСторно.НайтиСтроки(СтруктураПоиска);
		МожноОтсторнировать = СтрокаТоварыОрганизацийДляСторно.Количество;
		
		Для Каждого СтрокаРезервыДляСторно Из СтрокиРезервыДляСторно Цикл
			
			Если СтрокаРезервыДляСторно.Период < СтрокаТоварыОрганизацийДляСторно.Период Тогда
				Продолжить;
			КонецЕсли;
			
			Если МожноОтсторнировать = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоКСторнированию = Мин(МожноОтсторнировать, СтрокаРезервыДляСторно.Количество);
			
			НоваяСтрока = ТаблицаСторноДвижений.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезервыДляСторно);
			НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
			НоваяСтрока.Количество = -КоличествоКСторнированию;
			НоваяСтрока.Период = СтрокаРезервыДляСторно.Период;
			
			НоваяСтрока = ТаблицаСторноДвижений.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезервыДляСторно);
			НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
			НоваяСтрока.Организация = СтрокаРезервыДляСторно.КорОрганизация;
			НоваяСтрока.ВидЗапасов = СтрокаРезервыДляСторно.КорВидЗапасов;
			НоваяСтрока.КорОрганизация = СтрокаРезервыДляСторно.Организация;
			НоваяСтрока.КорВидЗапасов = СтрокаРезервыДляСторно.ВидЗапасов;;
			НоваяСтрока.Количество = -КоличествоКСторнированию;
			НоваяСтрока.Период = СтрокаРезервыДляСторно.Период;
			
			СтрокаРезервыДляСторно.Количество = СтрокаРезервыДляСторно.Количество - КоличествоКСторнированию;
			МожноОтсторнировать = МожноОтсторнировать - КоличествоКСторнированию;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТОтборыРезервовДляСторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСформированныеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСторноРезервовПредыдущихПериодов";
	Запрос.Выполнить();
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаСторноДвижений <> Неопределено Тогда
		ПараметрыЗаполненияВидовЗапасов.Вставить("ТаблицаСторноДвижений", ТаблицаСторноДвижений);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТСторноРезервов.ВидДвижения КАК ВидДвижения,
		|	ВТСторноРезервов.Период КАК Период,
		|	ВТСторноРезервов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВТСторноРезервов.Организация КАК Организация,
		|	ВТСторноРезервов.ВидЗапасов КАК ВидЗапасов,
		|	ВТСторноРезервов.НомерГТД КАК НомерГТД,
		|	ВТСторноРезервов.Количество КАК Количество,
		|	ВТСторноРезервов.КорОрганизация КАК КорОрганизация,
		|	ВТСторноРезервов.КорВидЗапасов КАК КорВидЗапасов,
		|	ВТСторноРезервов.НалогообложениеНДС КАК НалогообложениеНДС
		|ПОМЕСТИТЬ ВТСторноРезервов
		|ИЗ
		|	&ТаблицаСторноДвижений КАК ВТСторноРезервов";
		
		Запрос.УстановитьПараметр("ТаблицаСторноДвижений", ТаблицаСторноДвижений);
		Запрос.Выполнить();
	КонецЕсли;
		
КонецПроцедуры

Функция ТаблицаРезервыТоваровОрганизаций(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ПередЗаписьюДокумента)
	
	ТекстЗапроса = 	
	"ВЫБРАТЬ
	|	СформированныеРезервы.ВидДвижения КАК ВидДвижения,
	|	СформированныеРезервы.Период КАК Период,
	|	СформированныеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СформированныеРезервы.Организация КАК Организация,
	|	СформированныеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	СформированныеРезервы.НомерГТД КАК НомерГТД,
	|	СформированныеРезервы.Количество КАК Количество,
	|	СформированныеРезервы.КорОрганизация КАК КорОрганизация,
	|	СформированныеРезервы.КорВидЗапасов КАК КорВидЗапасов,
	|	СформированныеРезервы.НалогообложениеНДС КАК НалогообложениеНДС
	|ПОМЕСТИТЬ СформированныеРезервы
	|ИЗ
	|	&СформированныеРезервы КАК СформированныеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.ВидДвижения КАК ВидДвижения,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Количество < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСторно,
	|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов,
	|	ВложенныйЗапрос.НалогообложениеНДС КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ВТДвиженияОбщая
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения,
	|		ТаблицаНовыеРезервы.Период КАК Период,
	|		ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаНовыеРезервы.Организация КАК Организация,
	|		ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|		ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|		ТаблицаНовыеРезервы.Количество КАК Количество,
	|		ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
	|		ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов,
	|		ТаблицаНовыеРезервы.НалогообложениеНДС КАК НалогообложениеНДС
	|	ИЗ
	|		ВТНовыеРезервы КАК ТаблицаНовыеРезервы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаСторно.ВидДвижения,
	|		ТаблицаСторно.Период,
	|		ТаблицаСторно.АналитикаУчетаНоменклатуры,
	|		ТаблицаСторно.Организация,
	|		ТаблицаСторно.ВидЗапасов,
	|		ТаблицаСторно.НомерГТД,
	|		ТаблицаСторно.Количество,
	|		ТаблицаСторно.КорОрганизация,
	|		ТаблицаСторно.КорВидЗапасов,
	|		ТаблицаСторно.НалогообложениеНДС
	|	ИЗ
	|		ВТСторноРезервов КАК ТаблицаСторно
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РезервыПоОрганизациямДляКонтроля.ВидДвижения,
	|		РезервыПоОрганизациямДляКонтроля.Период,
	|		РезервыПоОрганизациямДляКонтроля.АналитикаУчетаНоменклатуры,
	|		РезервыПоОрганизациямДляКонтроля.Организация,
	|		РезервыПоОрганизациямДляКонтроля.ВидЗапасов,
	|		РезервыПоОрганизациямДляКонтроля.НомерГТД,
	|		РезервыПоОрганизациямДляКонтроля.Количество,
	|		РезервыПоОрганизациямДляКонтроля.КорОрганизация,
	|		РезервыПоОрганизациямДляКонтроля.КорВидЗапасов,
	|		РезервыПоОрганизациямДляКонтроля.НалогообложениеНДС
	|	ИЗ
	|		ВТРезервыПоОрганизациямДляКонтроля КАК РезервыПоОрганизациямДляКонтроля
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СформированныеРезервы.ВидДвижения,
	|		СформированныеРезервы.Период,
	|		СформированныеРезервы.АналитикаУчетаНоменклатуры,
	|		СформированныеРезервы.Организация,
	|		СформированныеРезервы.ВидЗапасов,
	|		СформированныеРезервы.НомерГТД,
	|		СформированныеРезервы.Количество,
	|		СформированныеРезервы.КорОрганизация,
	|		СформированныеРезервы.КорВидЗапасов,
	|		СформированныеРезервы.НалогообложениеНДС
	|	ИЗ
	|		СформированныеРезервы КАК СформированныеРезервы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.ВидДвижения,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.Период,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.АналитикаУчетаНоменклатуры,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.Организация,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.ВидЗапасов,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.НомерГТД,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.Количество,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.КорОрганизация,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.КорВидЗапасов,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.НалогообложениеНДС
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК ДвиженияРезервыТоварыОрганизацийПередЗаписью
	|	ГДЕ
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.Регистратор = &Ссылка
	|		И &ПрибавлятьДвиженияРезервыПередЗаписью) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.НалогообложениеНДС,
	|	ВложенныйЗапрос.КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов,
	|	ВложенныйЗапрос.ВидДвижения,
	|	ВложенныйЗапрос.Период,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Количество < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНовыеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСторноРезервов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРезервыПоОрганизациямДляКонтроля
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СформированныеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьСторно
	|ИЗ
	|	ВТДвиженияОбщая КАК ВТДвиженияОбщая
	|ГДЕ
	|	ВТДвиженияОбщая.ЭтоСторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвиженияОбщая.Период КАК Период,
	|	ВТДвиженияОбщая.ВидДвижения КАК ВидДвижения,
	|	ВТДвиженияОбщая.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТДвиженияОбщая.Организация КАК Организация,
	|	ВТДвиженияОбщая.ВидЗапасов КАК ВидЗапасов,
	|	ВТДвиженияОбщая.НомерГТД КАК НомерГТД,
	|	ВТДвиженияОбщая.КорОрганизация КАК КорОрганизация,
	|	ВТДвиженияОбщая.КорВидЗапасов КАК КорВидЗапасов,
	|	ВТДвиженияОбщая.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВТДвиженияОбщая.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ВТДвиженияОбщая.Количество < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСторно
	|ИЗ
	|	ВТДвиженияОбщая КАК ВТДвиженияОбщая";
	
	ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, "ВТНовыеРезервы, ВТСторноРезервов, ВТРезервыПоОрганизациямДляКонтроля");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") Тогда
		СформированныеРезервы = ДокументОбъект.ДополнительныеСвойства.ТаблицаРезервыТоваровОрганизаций.Скопировать();
	Иначе
		СформированныеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СформированныеРезервы", СформированныеРезервы);
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПрибавлятьДвиженияРезервыПередЗаписью", 
	 	// резервы записываются вместе с остальными регистрами
		Не ПараметрыЗаполненияВидовЗапасов.ДокументДелаетИПриходИРасход
		// резервы записываются отдельно после формирования таблица резервов в обработке проведения
		Или ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") И Не ПередЗаписьюДокумента);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатСторноЗаписи = МассивРезультатов[МассивРезультатов.ВГраница() - 1];
	РезультатТаблицаРезервы = МассивРезультатов[МассивРезультатов.ВГраница()];
	
	Если Не РезультатСторноЗаписи.Пустой() Тогда
		Возврат ВыполнитьСверткуТаблицыРезервов(МенеджерВременныхТаблиц, ДокументОбъект.Ссылка);
	Иначе
		Запрос.Текст = "УНИЧТОЖИТЬ ВТДвиженияОбщая";
		Запрос.Выполнить();
	КонецЕсли;
	
	Возврат РезультатТаблицаРезервы.Выгрузить();
	
КонецФункции

Функция ВыполнитьСверткуТаблицыРезервов(МенеджерВременныхТаблиц, Регистратор)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТДвиженияОбщая.Период,
	|	НАЧАЛОПЕРИОДА(ВТДвиженияОбщая.Период, МЕСЯЦ) КАК Месяц,
	|	ВТДвиженияОбщая.ВидДвижения,
	|	ВЫБОР
	|		КОГДА ВТДвиженияОбщая.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СлужебноеВидДвиженияПриход,
	|	&Регистратор КАК Регистратор,
	|	ВТДвиженияОбщая.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТДвиженияОбщая.Организация КАК Организация,
	|	ВТДвиженияОбщая.ВидЗапасов КАК ВидЗапасов,
	|	ВТДвиженияОбщая.НомерГТД КАК НомерГТД,
	|	СУММА(ВТДвиженияОбщая.Количество) КАК Количество,
	|	ВТДвиженияОбщая.ЭтоСторно КАК ЭтоСторно,
	|	ВТДвиженияОбщая.КорОрганизация КАК КорОрганизация,
	|	ВТДвиженияОбщая.КорВидЗапасов КАК КорВидЗапасов,
	|	ВТДвиженияОбщая.НалогообложениеНДС
	|ПОМЕСТИТЬ ВТДвиженияДляСвертки
	|ИЗ
	|	ВТДвиженияОбщая КАК ВТДвиженияОбщая
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДвиженияОбщая.Период,
	|	ВТДвиженияОбщая.НалогообложениеНДС,
	|	ВТДвиженияОбщая.КорВидЗапасов,
	|	ВТДвиженияОбщая.НомерГТД,
	|	ВТДвиженияОбщая.КорОрганизация,
	|	ВТДвиженияОбщая.АналитикаУчетаНоменклатуры,
	|	ВТДвиженияОбщая.Организация,
	|	ВТДвиженияОбщая.ВидЗапасов,
	|	ВТДвиженияОбщая.ЭтоСторно,
	|	ВТДвиженияОбщая.ВидДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СлужебноеВидДвиженияПриход,
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД,
	|	КорОрганизация,
	|	КорВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвиженияОбщая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	0 КАК НомерНабораПолей,
	|	ВТНаборыПолей.СлужебноеВидДвиженияПриход,
	|	ВТНаборыПолей.Организация,
	|	ВТНаборыПолей.АналитикаУчетаНоменклатуры,
	|	ВТНаборыПолей.ВидЗапасов,
	|	ВТНаборыПолей.НомерГТД,
	|	ВТНаборыПолей.КорОрганизация,
	|	ВТНаборыПолей.КорВидЗапасов
	|ПОМЕСТИТЬ ВТНаборыПолей
	|ИЗ
	|	ВТДвиженияДляСвертки КАК ВТНаборыПолей
	|ГДЕ
	|	ВТНаборыПолей.ЭтоСторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	0 КАК НомерНабораПолей,
	|	Т.Период КАК Период,
	|	Т.Регистратор КАК Регистратор,
	|	Т.НалогообложениеНДС КАК НалогообложениеНДС,
	|	Т.Количество КАК Количество,
	|	Т.Регистратор КАК РегистраторСторно
	|ПОМЕСТИТЬ ВТТаблицаДвижений
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаДвижений.НомерНабораПолей,
	|	ВТТаблицаДвижений.Период,
	|	ВТТаблицаДвижений.Регистратор,
	|	ВТТаблицаДвижений.НалогообложениеНДС,
	|	ВТТаблицаДвижений.Количество,
	|	ВТТаблицаДвижений.РегистраторСторно
	|ИЗ
	|	ВТТаблицаДвижений КАК ВТТаблицаДвижений";
	
	СтруктураДанныхСвертки = Новый Структура;
	СтруктураДанныхСвертки.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	СтруктураДанныхСвертки.Вставить("ТаблицаДвижений", 		   Запрос.Выполнить().Выгрузить());
	
	// Выполнение свертки записей набора
	РегистрыНакопления.РезервыТоваровОрганизаций.ВыполнитьВзаимозачетВТДвиженийПоРезервам(СтруктураДанныхСвертки);
	РегистрыНакопления.РезервыТоваровОрганизаций.ПеренестиРезультатСверткиВВТТаблицаДвижений(СтруктураДанныхСвертки);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.ВидДвижения КАК ВидДвижения,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов,
	|	ВложенныйЗапрос.НалогообложениеНДС КАК НалогообложениеНДС,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА СУММА(ВложенныйЗапрос.Количество) < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСторно
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДвижений.Период КАК Период,
	|		ВЫБОР
	|			КОГДА НаборыПолей.СлужебноеВидДвиженияПриход
	|				ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		КОНЕЦ КАК ВидДвижения,
	|		НаборыПолей.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		НаборыПолей.Организация КАК Организация,
	|		НаборыПолей.ВидЗапасов КАК ВидЗапасов,
	|		НаборыПолей.НомерГТД КАК НомерГТД,
	|		НаборыПолей.КорОрганизация КАК КорОрганизация,
	|		НаборыПолей.КорВидЗапасов КАК КорВидЗапасов,
	|		ТаблицаДвижений.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ТаблицаДвижений.Количество КАК Количество
	|	ИЗ
	|		ВТТаблицаДвижений КАК ТаблицаДвижений
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНаборыПолей КАК НаборыПолей
	|			ПО ТаблицаДвижений.НомерНабораПолей = НаборыПолей.НомерНабораПолей
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТДвиженияДляСвертки.Период,
	|		ВТДвиженияДляСвертки.ВидДвижения,
	|		ВТДвиженияДляСвертки.АналитикаУчетаНоменклатуры,
	|		ВТДвиженияДляСвертки.Организация,
	|		ВТДвиженияДляСвертки.ВидЗапасов,
	|		ВТДвиженияДляСвертки.НомерГТД,
	|		ВТДвиженияДляСвертки.КорОрганизация,
	|		ВТДвиженияДляСвертки.КорВидЗапасов,
	|		ВТДвиженияДляСвертки.НалогообложениеНДС,
	|		ВТДвиженияДляСвертки.Количество
	|	ИЗ
	|		ВТДвиженияДляСвертки КАК ВТДвиженияДляСвертки) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.КорОрганизация,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.КорВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.НалогообложениеНДС,
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.ВидДвижения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвиженияДляСвертки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНаборыПолей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаДвижений";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Процедура ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, ИменаТаблиц)
	
	МассивИмен = СтрРазделить(ИменаТаблиц, ",");
	
	ТекстыЗапроса = Новый Массив;
	
	Для Каждого СтрМас из МассивИмен Цикл
		СтрМас = СокрЛП(СтрМас);
		
		Если МенеджерВременныхТаблиц.Таблицы.Найти(СтрМас) = Неопределено Тогда
			ТекстЗапроса = 	
			"ВЫБРАТЬ
			|	НоваяТаблица.Период,
			|	НоваяТаблица.ВидДвижения,
			|	НоваяТаблица.АналитикаУчетаНоменклатуры,
			|	НоваяТаблица.Организация,
			|	НоваяТаблица.ВидЗапасов,
			|	НоваяТаблица.НомерГТД,
			|	НоваяТаблица.Количество,
			|	НоваяТаблица.КорОрганизация,
			|	НоваяТаблица.КорВидЗапасов,
			|	НоваяТаблица.НалогообложениеНДС
			|ПОМЕСТИТЬ ИмяТаблицы
			|ИЗ
			|	&ПустаяТаблица КАК НоваяТаблица";
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТаблицы", СтрМас);
			
			ТекстыЗапроса.Добавить(ТекстЗапроса);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТекстыЗапроса.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Разделитель = 
	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, Разделитель);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПустаяТаблица", РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки());
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура УстановитьДопСвойстваКонтролироватьОстаткиИФормироватьСторно(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов, МенеджерВременныхТаблиц)
	
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТТоварыОрганизацийИзменения.Период,
	|	ВТТоварыОрганизацийИзменения.Организация
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляКонтроляОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТТоварыОрганизацийИзменения.Период,
	|	ВТТоварыОрганизацийИзменения.Организация
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляСторноРезерва";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	НужноКонтролироватьОстатки = НЕ Результаты[0].Пустой();
	НужноФормироватьСторно     = НЕ Результаты[1].Пустой();
	
	ДополнительныеСвойства.Вставить("НужноКонтролироватьОстаткиТоваровОрганизаций", НужноКонтролироватьОстатки);
	ДополнительныеСвойства.Вставить("НужноФормироватьСторноПоРезервамТоваровОрганизаций", НужноФормироватьСторно);
	
КонецПроцедуры

Процедура СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ТекстЗапроса = "";
	
	Если УниверсальныеМеханизмыПартийИСебестоимости.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц, "ТаблицаРеквизитовВидовЗапасовПоУмолчанию") Тогда
		ТекстЗапроса =
		"УНИЧТОЖИТЬ ТаблицаРеквизитовВидовЗапасовПоУмолчанию
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВидыЗапасовПоУмолчанию.НомерСтроки		КАК НомерСтроки,
	|	ВидыЗапасовПоУмолчанию.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасовПоУмолчанию.Организация		КАК Организация,
	|	ВидыЗапасовПоУмолчанию.ВидЗапасов		КАК ВидЗапасов,
	|	ВидыЗапасовПоУмолчанию.НомерГТД			КАК НомерГТД,
	|	ВидыЗапасовПоУмолчанию.ВладелецТовара	КАК ВладелецТовара,
	|	ВидыЗапасовПоУмолчанию.Контрагент		КАК Контрагент,
	|	ВидыЗапасовПоУмолчанию.Договор			КАК Договор,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасов		КАК ТипЗапасов,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасовРезервы КАК ТипЗапасовРезервы
	|ПОМЕСТИТЬ ТаблицаРеквизитовВидовЗапасовПоУмолчанию
	|ИЗ
	|	&ТаблицаРеквизитовВидовЗапасовПоУмолчанию КАК ВидыЗапасовПоУмолчанию
	|";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ТаблицаРеквизитовВидовЗапасовПоУмолчанию", ПараметрыЗаполненияВидовЗапасов.ТаблицаРеквизитовВидовЗапасовПоУмолчанию);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, ДобавлятьАналитикиИзДвиженийПередЗаписью)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Отборы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Отборы.Номенклатура КАК Номенклатура,
	|	Отборы.Характеристика КАК Характеристика,
	|	Отборы.Серия КАК Серия,
	|	Отборы.Назначение КАК Назначение,
	|	Отборы.Склад КАК Склад,
	|	Отборы.Организация КАК Организация,
	|	Отборы.ВидЗапасов КАК ВидЗапасов,
	|	Отборы.НомерГТД КАК НомерГТД
	|
	|ПОМЕСТИТЬ ВтОтборыОстатковОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.НомерГТД КАК НомерГТД,
	|		КлючиАналитикиУчетаНоменклатуры.Номенклатура,
	|		КлючиАналитикиУчетаНоменклатуры.Характеристика,
	|		КлючиАналитикиУчетаНоменклатуры.Серия,
	|		КлючиАналитикиУчетаНоменклатуры.Назначение,
	|		КлючиАналитикиУчетаНоменклатуры.Склад КАК Склад,
	|		ВидыЗапасов.ДляОрганизации КАК Организация,
	|		ВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|	ИЗ
	|		ТаблицаТоваров КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ВидыЗапасов
	|			ПО ИСТИНА
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|			ПО СпрНоменклатура.Ссылка = Товары.Номенклатура
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|			ПО КлючиАналитикиУчетаНоменклатуры.Ссылка = Товары.АналитикаУчетаНоменклатуры
	|	ГДЕ
	|		СпрНоменклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		)
	|
	|	//%ТекстАналитикиИзДвиженийПередЗаписью%
	|
	|	) КАК Отборы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	Организация";
	
	Если ДобавлятьАналитикиИзДвиженийПередЗаписью Тогда
		
		ТекстАналитикиИзДвиженийПередЗаписью = "
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|";
		
		ТекстАналитикиИзДвиженийПередЗаписью = ТекстАналитикиИзДвиженийПередЗаписью + 
		"ВЫБРАТЬ
		|	ТоварыПередЗаписью.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТоварыПередЗаписью.НомерГТД КАК НомерГТД,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
		|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение,
		|	КлючиАналитикиУчетаНоменклатуры.Склад КАК Склад,
		|	ТоварыПередЗаписью.Организация КАК Организация,
		|	ТоварыПередЗаписью.ВидЗапасов КАК ВидЗапасов
		|ИЗ
		|	ДвиженияТоварыОрганизацийПередЗаписью КАК ТоварыПередЗаписью
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
		|		ПО ТоварыПередЗаписью.Организация = ДоступныеВидыЗапасов.ДляОрганизации
		|			И ТоварыПередЗаписью.ВидЗапасов = ДоступныеВидыЗапасов.ВидЗапасов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО ТоварыПередЗаписью.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстАналитикиИзДвиженийПередЗаписью%", ТекстАналитикиИзДвиженийПередЗаписью);
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьВтОтборыОстатковПоТаблицеИзменений(МенеджерВременныхТаблиц)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
	|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение,
	|	КлючиАналитикиУчетаНоменклатуры.Склад КАК Склад,
	|	ВидыЗапасов.ДляОрганизации КАК Организация,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ ВтОтборыОстатковОрганизаций
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ТоварыОрганизацийИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ВидыЗапасов
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО КлючиАналитикиУчетаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	СпрНоменклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	Организация";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// Метод заполняет в ТЧ ВидыЗапасов документов "Отчет по комиссии между организациями"
// и "Отчет по комиссии между организациями (о списании)" поля ВидЗапасовКомитента и НомерГТД.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором производится заполнение.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Используется ВТ ДоступныеВидыЗапасов.
//	ПараметрыЗаполненияВидовЗапасов - Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов
//
Процедура ДозаполнитьВидыЗапасовВОтчетахПоКомиссииИнтеркампани(ДокументОбъект,
	МенеджерВременныхТаблиц,
	Отказ,
	ПараметрыЗаполненияВидовЗапасов)
	
	Если ДокументОбъект.ВидыЗапасов.Найти(Справочники.ВидыЗапасов.ПустаяСсылка(), "ВидЗапасовКомитента") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаОстатков") <> Неопределено Тогда
		Запрос = Новый Запрос("УНИЧТОЖИТЬ ТаблицаОстатков");
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") Тогда
		ЭтоОтчетОПродажах = Истина;
	Иначе
		ЭтоОтчетОПродажах = Ложь;
	КонецЕсли;
	
	СформироватьВТТаблицаОстатков("ТоварыПереданныеНаКомиссию", ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);  
		
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Запасы.АналитикаУчетаНоменклатуры,
	|	Запасы.НомерГТД
	|ПОМЕСТИТЬ Запасы
	|ИЗ
	|	&ВидыЗапасов КАК Запасы
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Запасы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Запасы.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ОтборОстатков
	|ИЗ
	|	Запасы КАК Запасы
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаКомиссионера.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	Остатки.ВидЗапасов                  КАК ВидЗапасовКомитента,
	|	Остатки.НомерГТД                    КАК НомерГТД,
	|	ВЫБОР КОГДА Остатки.КоличествоОстаток < 0 
	|		ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ                               КАК Знак,
	|	ВЫБОР КОГДА Остатки.КоличествоОстаток < 0 
	|		ТОГДА 0 - Остатки.КоличествоОстаток
	|		ИНАЧЕ Остатки.КоличествоОстаток
	|	КОНЕЦ                               КАК Количество
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО Остатки.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|	ПО Аналитика.Номенклатура = АналитикаКомиссионера.Номенклатура
	|		И Аналитика.Характеристика = АналитикаКомиссионера.Характеристика
	|		И Аналитика.Серия = АналитикаКомиссионера.Серия
	|		И АналитикаКомиссионера.Склад = &Организация
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборОстатков КАК Отбор
	|	ПО АналитикаКомиссионера.КлючАналитики = Отбор.АналитикаУчетаНоменклатуры
	|		И Остатки.НомерГТД = Отбор.НомерГТД
	|ГДЕ
	|	НЕ Остатки.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Остатки.НомерГТД,
	|	Остатки.КоличествоОстаток ВОЗР
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("ВидыЗапасов", ДокументОбъект.ВидыЗапасов.Выгрузить());
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Временная таблица "Запасы" - МассивРезультатов[0]
	// Временная таблица "ОтборОстатков" - МассивРезультатов[1]
	ТаблицаОстатков = МассивРезультатов[2].Выгрузить();
	
	ДокументОбъект.ВидыЗапасов.Сортировать("АналитикаУчетаНоменклатуры, НомерГТД, Количество ВОЗР");
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, НомерГТД");
	Для Каждого СтрокаОстатка Из ТаблицаОстатков Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаОстатка);
		Для Каждого СтрокаЗапасов Из ДокументОбъект.ВидыЗапасов.НайтиСтроки(СтруктураПоиска) Цикл
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			Количество = ?(СтрокаЗапасов.Количество < 0, -СтрокаЗапасов.Количество, СтрокаЗапасов.Количество);
			Знак = ?(СтрокаЗапасов.Количество < 0, -1, 1);
			Если СтрокаОстатка.Количество >= Количество ИЛИ (СтрокаОстатка.Знак <> Знак) Тогда
				СтрокаЗапасов.ВидЗапасовКомитента = СтрокаОстатка.ВидЗапасовКомитента;
				Если СтрокаОстатка.Знак = Знак Тогда
					СтрокаОстатка.Количество = СтрокаОстатка.Количество - Количество;
				Иначе
					СтрокаОстатка.Количество = СтрокаОстатка.Количество + Количество;
				КонецЕсли;
				
			ИначеЕсли СтрокаОстатка.Количество < Количество Тогда
				НоваяСтрока = ДокументОбъект.ВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
				НоваяСтрока.ВидЗапасовКомитента = СтрокаОстатка.ВидЗапасовКомитента;
				НоваяСтрока.СуммаСНДС = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаСНДС / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
				НоваяСтрока.СуммаНДС = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаНДС / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
				
				Если ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаВознаграждения = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаВознаграждения / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
					НоваяСтрока.СуммаНДСВознаграждения = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаНДСВознаграждения / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
				КонецЕсли;
				
				НоваяСтрока.КоличествоУпаковок = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.КоличествоУпаковок / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
				НоваяСтрока.Количество = СтрокаОстатка.Количество * СтрокаОстатка.Знак;
				
				СтрокаЗапасов.СуммаСНДС = СтрокаЗапасов.СуммаСНДС - НоваяСтрока.СуммаСНДС;
				СтрокаЗапасов.СуммаНДС = СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
				
				Если ЭтоОтчетОПродажах Тогда
					СтрокаЗапасов.СуммаВознаграждения = СтрокаЗапасов.СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения;
					СтрокаЗапасов.СуммаНДСВознаграждения = СтрокаЗапасов.СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения;
				КонецЕсли;
				
				СтрокаЗапасов.КоличествоУпаковок = СтрокаЗапасов.КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
				СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
				
				СтрокаОстатка.Количество = 0;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ДокументОбъект.ВидыЗапасов.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ДокументОбъект.ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	СтрокиСПустымВидомЗапасовКомитента = ДокументОбъект.ВидыЗапасов.НайтиСтроки(Новый Структура("ВидЗапасовКомитента", Справочники.ВидыЗапасов.ПустаяСсылка()));
	Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения 
		И ЗначениеЗаполнено(СтрокиСПустымВидомЗапасовКомитента) Тогда
		
		Отказ = Истина;
		
		Для Каждого СтрокаТаблицы Из СтрокиСПустымВидомЗапасовКомитента Цикл
			
			Если СтрокаТаблицы.Количество <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'По комитенту %Комитент% не хватает %Количество% %ЕдиницаИзмерения% товара %ПредставлениеНоменклатуры%, реализованного комиссионером %Комиссионер%'"); 
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комитент%", ДокументОбъект.Организация);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комиссионер%", ДокументОбъект.Комиссионер);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%",
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.АналитикаУчетаНоменклатуры.Номенклатура, СтрокаТаблицы.АналитикаУчетаНоменклатуры.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СтрокаТаблицы.Количество);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СтрокаТаблицы.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			КонецЕсли;
			
			Если ЭтоОтчетОПродажах И СтрокаТаблицы.СуммаСНДС <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'Товар: %ПредставлениеНоменклатуры% Сумма продажи превышает сумму реализованного товара комиссионером на %Сумма% %Валюта%'"); 
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%",
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.АналитикаУчетаНоменклатуры.Номенклатура, СтрокаТаблицы.АналитикаУчетаНоменклатуры.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%", СтрокаТаблицы.СуммаСНДС);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", ДокументОбъект.Валюта);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет табличную часть "Виды запасов" документов "Отчет по комиссии между организациями" и "Отчет по комиссии между организациями о списании".
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - требуется временные таблицы:
//		ТаблицаТоваров, ТаблицаДанныхДокумента, ТаблицаВидыЗапасов, ТаблицаОстатков
//	ДополнительныеСвойства - Дополнительные свойства документа
//	ВидыЗапасов - ТабличнаяЧасть - Табличная часть "Виды запасов" документа
//	ТаблицаОшибок - ТаблицаЗначений - Таблица для отражения ошибок при заполнении видов запасов
//	Отказ - Булево - Признак отказа от записи документа
//  ЗначенияПоУмолчанию - Структура - Содержит в себе перечень необходимых полей для генерации вида запасов.
Процедура ЗаполнитьВидыЗапасовПоТаблицеОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов)
	
	ТаблицаОшибок          = ТаблицаОшибокЗаполненияВидовЗапасов();
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
	
	ТаблицаВидыЗапасов = ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].ВыгрузитьКолонки();
	
	ВидЗапасовПоУмолчанию = Неопределено;
	
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") Тогда
		ЭтоОтчетОПродажах = Истина;
	Иначе
		ЭтоОтчетОПродажах = Ложь;
	КонецЕсли;
	
	ПерезаполнитьВидыЗапасов = ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДополнительныеСвойства);
	Если Не ПерезаполнитьВидыЗапасов Тогда
		КонтролироватьОстаткиТоваровОрганизаций = ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизаций");
	Иначе
		КонтролироватьОстаткиТоваровОрганизаций = Ложь;
	КонецЕсли;
	
	СтруктураВидаЗапасовПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|Поставщик,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалогообложениеНДС,
		|НалогообложениеОрганизации,
		|Организация
		|");
	
	СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета		= Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.Поставщик					= ДокументОбъект.Организация;
	СтруктураВидаЗапасовПоУмолчанию.Контрагент					= Неопределено;
	СтруктураВидаЗапасовПоУмолчанию.Соглашение					= Неопределено;
	СтруктураВидаЗапасовПоУмолчанию.Договор						= Неопределено;
	СтруктураВидаЗапасовПоУмолчанию.Валюта						= ДокументОбъект.Валюта;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС			= ДокументОбъект.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеОрганизации	= ДокументОбъект.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.Организация					= ДокументОбъект.Организация;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Остатки.ВидЗапасов                 КАК ВидЗапасов,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.НомерГТД                   КАК НомерГТД,
	|	Остатки.ДатаСчетаФактуры           КАК ДатаСчетаФактурыКомиссионера,
	|	Остатки.Покупатель                 КАК Покупатель,
	|	Остатки.СчетФактура                КАК СчетФактураВыставленныйКомиссионера,
	|	Остатки.Знак                       КАК Знак,
	|	ВЫБОР КОГДА Остатки.Количество < 0
	|		ТОГДА 0 - Остатки.Количество
	|		ИНАЧЕ Остатки.Количество
	|	КОНЕЦ                              КАК Количество,
	|	ВЫБОР КОГДА Остатки.Количество < 0
	|		ТОГДА 0 - Остатки.СуммаВыручки
	|		ИНАЧЕ Остатки.СуммаВыручки
	|	КОНЕЦ                              КАК СуммаВыручки
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ДатаСчетаФактурыКомиссионера,
	|	Покупатель,
	|	Количество УБЫВ,
	|	Знак УБЫВ
	|;
	|//////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АналитикаУчетаНоменклатуры          КАК АналитикаУчетаНоменклатуры,
	|	Товары.Упаковка                            КАК Упаковка,
	|	Товары.ДатаСчетаФактурыКомиссионера        КАК ДатаСчетаФактурыКомиссионера,
	|	Товары.СчетФактураВыставленныйКомиссионера КАК СчетФактураВыставленныйКомиссионера,
	|	Товары.Покупатель                          КАК Покупатель,
	|	ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ                                      КАК Знак,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.Количество
	|		ИНАЧЕ Товары.Количество
	|	КОНЕЦ)                                     КАК Количество,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.КоличествоУпаковок
	|		ИНАЧЕ Товары.КоличествоУпаковок
	|	КОНЕЦ)                                     КАК КоличествоУпаковок,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаСНДС
	|		ИНАЧЕ Товары.СуммаСНДС
	|	КОНЕЦ)                                     КАК СуммаСНДС,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаВознаграждения
	|		ИНАЧЕ Товары.СуммаВознаграждения
	|	КОНЕЦ)                                     КАК СуммаВознаграждения,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаНДСВознаграждения
	|		ИНАЧЕ Товары.СуммаНДСВознаграждения
	|	КОНЕЦ)                                     КАК СуммаНДСВознаграждения,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаНДС
	|		ИНАЧЕ Товары.СуммаНДС
	|	КОНЕЦ)                                     КАК СуммаНДС,
	|	Товары.СтавкаНДС                           КАК СтавкаНДС,
	|	Товары.Склад                               КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ВЫБОР 
	|		КОГДА &ИспользоватьГруппыФинУчета
	|		ТОГДА ЕСТЬNULL(Товары.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                      КАК ГруппаФинансовогоУчета,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения       КАК ЕдиницаИзмерения,
	|	Аналитика.Номенклатура                        КАК Номенклатура,
	|	Аналитика.Серия                               КАК Серия
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Аналитика.КлючАналитики = Товары.АналитикаУчетаНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО 
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.Упаковка,
	|	Товары.ДатаСчетаФактурыКомиссионера,
	|	Товары.СчетФактураВыставленныйКомиссионера,
	|	Товары.Покупатель,
	|	Товары.СтавкаНДС,
	|	Товары.Склад,
	|	Товары.Назначение,
	|	ВЫБОР 
	|		КОГДА &ИспользоватьГруппыФинУчета
	|		ТОГДА ЕСТЬNULL(Товары.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения,
	|	ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	Аналитика.Номенклатура,
	|	Аналитика.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ДатаСчетаФактурыКомиссионера,
	|	Покупатель,
	|	Количество УБЫВ,
	|	Знак УБЫВ
	|");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Результат = Запрос.ВыполнитьПакет();
	Остатки = Результат[0].Выгрузить();
	ВыборкаТовары = Результат[1].Выбрать();
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, Покупатель, ДатаСчетаФактурыКомиссионера, Знак");
	Пока ВыборкаТовары.Следующий() Цикл
		Количество = ВыборкаТовары.Количество;
		СуммаСНДС = ВыборкаТовары.СуммаСНДС;
		СуммаНДС = ВыборкаТовары.СуммаНДС;
		СуммаВознаграждения = ВыборкаТовары.СуммаВознаграждения;
		СуммаНДСВознаграждения = ВыборкаТовары.СуммаНДСВознаграждения;
		КоличествоУпаковок = ВыборкаТовары.КоличествоУпаковок;

		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаТовары);
		Для Каждого СтрокаОстатка Из Остатки.НайтиСтроки(СтруктураПоиска) Цикл
			Если СтрокаОстатка.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОстатка, "ВидЗапасов, НомерГТД");
			Если Количество <= СтрокаОстатка.Количество Тогда
				Если СуммаСНДС <= СтрокаОстатка.СуммаВыручки ИЛИ СуммаСНДС = 0 ИЛИ НЕ ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаСНДС = СуммаСНДС * ВыборкаТовары.Знак;
					НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак;
				Иначе
					НоваяСтрока.СуммаСНДС = СтрокаОстатка.СуммаВыручки * СтрокаОстатка.Знак;
					НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак * СтрокаОстатка.СуммаВыручки / СуммаСНДС;
				КонецЕсли;
				НоваяСтрока.КоличествоУпаковок = КоличествоУпаковок * ВыборкаТовары.Знак;
				НоваяСтрока.Количество = Количество * ВыборкаТовары.Знак;
				Если ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаВознаграждения = СуммаВознаграждения * ВыборкаТовары.Знак;
					НоваяСтрока.СуммаНДСВознаграждения = СуммаНДСВознаграждения * ВыборкаТовары.Знак;
				КонецЕсли;
				СтрокаОстатка.Количество = СтрокаОстатка.Количество - Количество;
				СтрокаОстатка.СуммаВыручки = СтрокаОстатка.СуммаВыручки - НоваяСтрока.СуммаСНДС * СтрокаОстатка.Знак;
			Иначе
				НоваяСтрока.СуммаСНДС = СтрокаОстатка.СуммаВыручки * СтрокаОстатка.Знак;
				НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак * СтрокаОстатка.СуммаВыручки / СуммаСНДС;
				НоваяСтрока.КоличествоУпаковок = Окр(КоличествоУпаковок * СтрокаОстатка.Количество / Количество, 2, 1) * СтрокаОстатка.Знак;
				НоваяСтрока.Количество = СтрокаОстатка.Количество * СтрокаОстатка.Знак;
				Если ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаВознаграждения = Окр(СуммаВознаграждения * СтрокаОстатка.Количество / Количество, 2, 1) * СтрокаОстатка.Знак;
					НоваяСтрока.СуммаНДСВознаграждения = Окр(СуммаНДСВознаграждения * СтрокаОстатка.Количество / Количество, 2, 1) * СтрокаОстатка.Знак;
				КонецЕсли;
				СтрокаОстатка.Количество = 0;
			КонецЕсли;
			СуммаСНДС = СуммаСНДС - НоваяСтрока.СуммаСНДС * ВыборкаТовары.Знак;
			СуммаНДС = СуммаНДС - НоваяСтрока.СуммаНДС * ВыборкаТовары.Знак;
			КоличествоУпаковок = КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок * ВыборкаТовары.Знак;
			Количество = Количество - НоваяСтрока.Количество * ВыборкаТовары.Знак;
			Если ЭтоОтчетОПродажах Тогда
				СуммаВознаграждения = СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения * ВыборкаТовары.Знак;
				СуммаНДСВознаграждения = СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения * ВыборкаТовары.Знак;
			КонецЕсли;
			Если Количество = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Количество <> 0 Тогда // остатков не хватило, генерируем вид запасов - собственный.
			НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			НоваяСтрока.СуммаСНДС = СуммаСНДС * ВыборкаТовары.Знак;
			НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак;
			НоваяСтрока.КоличествоУпаковок = КоличествоУпаковок * ВыборкаТовары.Знак;
			НоваяСтрока.Количество = Количество * ВыборкаТовары.Знак;
			Если ЭтоОтчетОПродажах Тогда
				НоваяСтрока.СуммаВознаграждения = СуммаВознаграждения * ВыборкаТовары.Знак;
				НоваяСтрока.СуммаНДСВознаграждения = СуммаНДСВознаграждения * ВыборкаТовары.Знак;
			КонецЕсли;
			Если ВидЗапасовПоУмолчанию = Неопределено Тогда
				ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
					ДокументОбъект.Организация,
					Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями,
					СтруктураВидаЗапасовПоУмолчанию);
			КонецЕсли;
			НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
			
			ДополнительныеСвойства.Вставить("НедостаточноОстатковТоваровОрганизаций", Истина);
			ПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций;
			Если КонтролироватьОстаткиТоваровОрганизаций ИЛИ ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда // добавим в таблицу ошибок
				НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, ВыборкаТовары);
				НоваяСтрокаОшибок.Количество = Количество;
				НоваяСтрокаОшибок.Сумма = СуммаСНДС;
				НоваяСтрокаОшибок.ЕдиницаИзмерения	= ВыборкаТовары.ЕдиницаИзмерения;
				Если Не ПерезаполнитьВидыЗапасов ИЛИ НЕ ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ТаблицаОшибок.Количество() > 0 И ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
		ТекстСообщения = НСтр( "ru = 'Документ %Ссылка% проведен с выключенным контролем остатков товаров организаций.'", Метаданные.ОсновнойЯзык.КодЯзыка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ДокументОбъект.Ссылка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытияВыключенКонтрольОстатков(),
			УровеньЖурналаРегистрации.Предупреждение,
			,
			ДокументОбъект.Ссылка,
			ТекстСообщения);
	КонецЕсли;
	
	ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].Загрузить(ТаблицаВидыЗапасов);
	
	СообщитьОбОшибкахЗаполненияВидовЗапасовКомитентов(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов);
	
КонецПроцедуры

Процедура УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтборыОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОтборыОстатков.ВидЗапасов КАК ВидЗапасов,
	|	ОтборыОстатков.Организация КАК Организация
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтборыОстатков.ВидЗапасов КАК ВидЗапасов
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ОтборыОстатков.ВидЗапасов = ВидыЗапасов.Ссылка
	|ГДЕ
	|	(ВидыЗапасов.ЭтоДубль
	|			ИЛИ ВидыЗапасов.Устаревший)";
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РезультатЗапросаОтборОстатков 		  = РезультатЗапроса[0];
	РезультатЗапросаУстаревшиеВидыЗапасов = РезультатЗапроса[1];
	
	Блокировка = Новый БлокировкаДанных;
	
	Если ДокументОбъект.Движения.Найти("ТоварыОрганизаций") <> Неопределено Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыОрганизаций");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаОтборОстатков;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВидЗапасов", "ВидЗапасов");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
		
		Если ДокументОбъект.Движения.Найти("РезервыТоваровОрганизаций") = Неопределено Тогда
			ТекстИсключения = НСтр("ru = 'Ошибка в описании движений документа: документ является регистратором ТоварыОрганизаций и не является регистратором РезервыТоваровОрганизаций.'");
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
			
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РезервыТоваровОрганизаций");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаОтборОстатков;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВидЗапасов", "ВидЗапасов");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
		
		Если Не РезультатЗапросаУстаревшиеВидыЗапасов.Пустой() Тогда
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.УстаревшиеВидыЗапасовСОстатками");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапросаУстаревшиеВидыЗапасов;
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВидЗапасов", "ВидЗапасов");
		КонецЕсли;
		
	КонецЕсли;

	Если ДокументОбъект.Движения.Найти("ТоварыКОформлениюОтчетовКомитенту") <> Неопределено Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаОтборОстатков;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВидЗапасов", "ВидЗапасов");
	
	КонецЕсли;
	
	Если ДокументОбъект.Движения.Найти("ТоварыПереданныеПереработчику") <> Неопределено Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыПереданныеПереработчику");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаОтборОстатков;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВидЗапасов", "ВидЗапасов");
	
	КонецЕсли;
	
	Если ДокументОбъект.Движения.Найти("ТоварыПереданныеНаКомиссию") <> Неопределено Тогда
		
		ЗапросПоКомиссии = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтборыОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ОтборыОстатков.Организация КАК Организация,
		|	ОтборыОстатков.ВидЗапасов КАК ВидЗапасов
		|ИЗ
		|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АналитикаКомиссионера.КлючАналитики КАК АналитикаУчетаНоменклатуры,
		|	ОтборыОстатков.Организация КАК Организация,
		|	ОтборыОстатков.ВидЗапасов КАК ВидЗапасов
		|ИЗ
		|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
		|		ПО Ключи.Ссылка = ОтборыОстатков.АналитикаУчетаНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
		|		ПО АналитикаКомиссионера.Номенклатура = Ключи.Номенклатура
		|			И АналитикаКомиссионера.Характеристика = Ключи.Характеристика
		|			И АналитикаКомиссионера.Серия = Ключи.Серия
		|			И АналитикаКомиссионера.Склад = &Партнер
		|			И АналитикаКомиссионера.Назначение = Ключи.Назначение
		|");
		
		ЗапросПоКомиссии.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетПоКомиссииМеждуОрганизациями")
			ИЛИ ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетПоКомиссииМеждуОрганизациями") Тогда
			ЗапросПоКомиссии.УстановитьПараметр("Партнер", ДокументОбъект.Комиссионер);
		Иначе
			ЗапросПоКомиссии.УстановитьПараметр("Партнер", ДокументОбъект.Партнер);
		КонецЕсли;
		РезультатЗапросаПоКомиссии = ЗапросПоКомиссии.Выполнить();
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыПереданныеНаКомиссию");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаПоКомиссии;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВидЗапасов", "ВидЗапасов");
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, "Соглашение") Тогда
			ЭлементБлокировки.УстановитьЗначение("Соглашение", ДокументОбъект.Соглашение);
		КонецЕсли;
	КонецЕсли;
	
	Если ДокументОбъект.Движения.Найти("ТоварыУПартнеров") <> Неопределено Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОтборыОстатков.Номенклатура КАК Номенклатура,
			|	ОтборыОстатков.Характеристика КАК Характеристика,
			|	ОтборыОстатков.Серия КАК Серия,
			|	ОтборыОстатков.Назначение КАК Назначение,
			|	ОтборыОстатков.ВидЗапасов КАК ВидЗапасов
			|ИЗ
			|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
			|ГДЕ
			|	ОтборыОстатков.ВидЗапасов.ТипЗапасов В (
			|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварВПути), 
			|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке))
			|");
			
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		РезультатЗапросаТоварыУПартнеров = Запрос.Выполнить();
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыУПартнеров");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаТоварыУПартнеров;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Серия", "Серия");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Назначение", "Назначение");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВидЗапасов", "ВидЗапасов");
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, "Партнер") Тогда
			ЭлементБлокировки.УстановитьЗначение("Партнер", ДокументОбъект.Партнер);
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, "Контрагент") Тогда
			ЭлементБлокировки.УстановитьЗначение("Контрагент", ДокументОбъект.Контрагент);
		КонецЕсли;
		
	КонецЕсли;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ЗаполнитьВидыЗапасовРазныхПериодов(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ТаблицаТоваров.ДатаПоступления КАК ДатаПоступления,
	|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТоваров.Сделка КАК Сделка,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаТоваров.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ТаблицаТоваров.ГруппаПродукции КАК ГруппаПродукции,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов КАК ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваровПоПериодам
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваров";
	Запрос.Выполнить();
		
	ЗапросУничтоженияТаблиц = Новый Запрос;
	ЗапросУничтоженияТаблиц.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросУничтоженияТаблиц.Текст = "
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтПодобранныеВидыЗапасов
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтНовыеРезервы
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПодобранныеВидыЗапасов
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваров
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаВидыЗапасов
	|;
	|";
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.Колонки.Найти("Период") = Неопределено Тогда
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.Колонки.Добавить("Период",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	КонецЕсли;
	
	ДатаОстатков = ПараметрыЗаполненияВидовЗапасов.ПериодЗаполнения;
	ТаблицаОстатковТоваровОрганизаций(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, Истина, ДатаОстатков);
	
	ТаблицаВидыЗапасов = ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.СкопироватьКолонки();
	
	ТаблицаНовыеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы = ТаблицаНовыеРезервы.СкопироватьКолонки();
	
	ЗапросРазныхПериодов = ЗапросРазныхПериодов(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	Выборка = ЗапросРазныхПериодов.Выполнить().Выбрать();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ВидыЗапасов.Количество КАК Количество,
	|	&Организация КАК Организация
	|ПОМЕСТИТЬ ВтПодобранныеВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	НовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	НовыеРезервы.НомерГТД КАК НомерГТД,
	|	НовыеРезервы.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА НовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -НовыеРезервы.Количество
	|		ИНАЧЕ НовыеРезервы.Количество
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ВтНовыеРезервы
	|ИЗ
	|	&ТаблицаНовыеРезервы КАК НовыеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ПОМЕСТИТЬ ПодобранныеВидыЗапасов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВтПодобранныеВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ВтПодобранныеВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|		ВтПодобранныеВидыЗапасов.НомерГТД КАК НомерГТД,
	|		ВтПодобранныеВидыЗапасов.Организация КАК Организация,
	|		ВтПодобранныеВидыЗапасов.Количество КАК Количество
	|	ИЗ
	|		ВтПодобранныеВидыЗапасов КАК ВтПодобранныеВидыЗапасов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВтНовыеРезервы.АналитикаУчетаНоменклатуры,
	|		ВтНовыеРезервы.ВидЗапасов,
	|		ВтНовыеРезервы.НомерГТД,
	|		ВтНовыеРезервы.Организация,
	|		ВтНовыеРезервы.Количество
	|	ИЗ
	|		ВтНовыеРезервы КАК ВтНовыеРезервы) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоПериодам.Организация КАК Организация,
	|	ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиПоПериодам.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиПоПериодам.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(ОстаткиПоПериодам.КоличествоОстаток - ЕСТЬNULL(ВидыЗапасов.Количество, 0)) КАК КоличествоОстаток,
	|	ОстаткиПоПериодам.ДатаПоступления КАК ДатаПоступления,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ОстаткиПоПериодам.Номенклатура КАК Номенклатура,
	|	ОстаткиПоПериодам.Характеристика КАК Характеристика,
	|	ОстаткиПоПериодам.Серия КАК Серия,
	|	ОстаткиПоПериодам.Назначение КАК Назначение,
	|	ОстаткиПоПериодам.Склад КАК Склад,
	|	ОстаткиПоПериодам.ДокументРеализации КАК ДокументРеализации,
	|	ОстаткиПоПериодам.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ОстаткиПоПериодам.СуммаОстаток КАК СуммаОстаток,
	|	СУММА(ОстаткиПоПериодам.СчетчикПериодов) КАК СчетчикПериодов
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ТаблицаОстатковПоПериодам КАК ОстаткиПоПериодам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодобранныеВидыЗапасов КАК ВидыЗапасов
	|		ПО ОстаткиПоПериодам.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|			И ОстаткиПоПериодам.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|			И ОстаткиПоПериодам.НомерГТД = ВидыЗапасов.НомерГТД
	|			И ОстаткиПоПериодам.Организация = ВидыЗапасов.Организация
	|ГДЕ
	|	(ОстаткиПоПериодам.Период >= &ТекущийПериод
	|			ИЛИ ОстаткиПоПериодам.Период = ДАТАВРЕМЯ(1, 1, 1))
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПоПериодам.СуммаОстаток,
	|	ОстаткиПоПериодам.Характеристика,
	|	ОстаткиПоПериодам.Номенклатура,
	|	ОстаткиПоПериодам.НомерГТД,
	|	ОстаткиПоПериодам.СкладОтгрузки,
	|	ОстаткиПоПериодам.ВидЗапасов,
	|	ОстаткиПоПериодам.АналитикаУчетаНоменклатуры,
	|	ОстаткиПоПериодам.Организация,
	|	ОстаткиПоПериодам.РеализацияЗапасовДругойОрганизации,
	|	ОстаткиПоПериодам.ДокументРеализации,
	|	ОстаткиПоПериодам.Склад,
	|	ОстаткиПоПериодам.Серия,
	|	ОстаткиПоПериодам.Назначение,
	|	ОстаткиПоПериодам.ДатаПоступления
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ОстаткиПоПериодам.КоличествоОстаток - ЕСТЬNULL(ВидыЗапасов.Количество, 0)) > 0
	|	И СУММА(ОстаткиПоПериодам.СчетчикПериодов) >= &ВсегоПериодов 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ТаблицаТоваров.ДатаПоступления КАК ДатаПоступления,
	|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТоваров.Сделка КАК Сделка,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаТоваров.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ТаблицаТоваров.ГруппаПродукции КАК ГруппаПродукции,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов КАК ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваровПоПериодам КАК ТаблицаТоваров
	|ГДЕ
	|	КОНЕЦПЕРИОДА(ТаблицаТоваров.ДатаОтгрузки, МЕСЯЦ) = &ТекущийПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	ТаблицаВидыЗапасов.Назначение КАК Назначение,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.Сделка КАК Сделка,
	|	ТаблицаВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ТаблицаВидыЗапасов.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ТаблицаВидыЗапасовПоПериодам КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	КОНЕЦПЕРИОДА(ТаблицаВидыЗапасов.ДатаОтгрузки, МЕСЯЦ) = &ТекущийПериод";
	
	Запрос.УстановитьПараметр("Организация", ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		
		ВсегоПериодов = (Год(Выборка.Период) * 12 + Месяц(Выборка.Период))
			- (Год(ТекущаяДатаСеанса()) * 12 + Месяц(ТекущаяДатаСеанса())) + 1;
		Запрос.УстановитьПараметр("ТаблицаВидыЗапасов", 	ТаблицаВидыЗапасов);
		Запрос.УстановитьПараметр("ТаблицаНовыеРезервы", 	ТаблицаНовыеРезервы);
		Запрос.УстановитьПараметр("ТекущийПериод",      	Выборка.Период);
		Запрос.УстановитьПараметр("ВсегоПериодов",      	ВсегоПериодов);
		Запрос.Выполнить();
		
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.Очистить();
		ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы.Очистить();
		
		ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.ЗаполнитьЗначения(Выборка.Период, "Период");
		ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы.ЗаполнитьЗначения(Выборка.Период, "Период");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов, ТаблицаВидыЗапасов);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы, ТаблицаНовыеРезервы);
		
		ЗапросУничтоженияТаблиц.Выполнить();
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения,
	|	ТаблицаНовыеРезервы.Период КАК Период,
	|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыеРезервы.Организация КАК Организация,
	|	ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|	ТаблицаНовыеРезервы.Количество КАК Количество,
	|	ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
	|	ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов,
	|	ТаблицаНовыеРезервы.НалогообложениеНДС КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ВТНовыеРезервы
	|ИЗ
	|	&ТаблицаНовыеРезервы КАК ТаблицаНовыеРезервы";
	Запрос.УстановитьПараметр("ТаблицаНовыеРезервы", ТаблицаНовыеРезервы);
	Запрос.Выполнить();
	
	ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов = ТаблицаВидыЗапасов;
	
КонецПроцедуры

Функция ЗапросРазныхПериодов(МенеджерВременныхТаблиц, Знач ПараметрыЗаполненияВидовЗапасов)
	
	ЗапросПериодов = Новый Запрос;
	ЗапросПериодов.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТПериодыЗаполнения") = Неопределено Тогда
		
		ЗапросПериодов.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.Период КАК Период
		|ПОМЕСТИТЬ ВТПериодыЗаполнения
		|ИЗ
		|	ТекстВложенныйЗапрос КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.Период >= &ПериодЗаполнения";
		
		Если МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаТоваровПоПериодам") <> Неопределено Тогда
			
			ТекстВложенныйЗапрос =
			"ВЫБРАТЬ
			|	КОНЕЦПЕРИОДА(ТаблицаТоваровПоПериодам.ДатаОтгрузки, МЕСЯЦ) КАК Период
			|ИЗ
			|	ТаблицаТоваровПоПериодам КАК ТаблицаТоваровПоПериодам";
			
		Иначе
			
			ТекстВложенныйЗапрос =
			"ВЫБРАТЬ
			|	КОНЕЦПЕРИОДА(ТоварыОрганизацийИРезервыИзменения.Период, МЕСЯЦ) КАК Период
			|ИЗ
			|	ВТТоварыОрганизацийИзменения КАК ТоварыОрганизацийИРезервыИзменения";
			
		КонецЕсли;
		
		ЗапросПериодов.Текст = СтрЗаменить(ЗапросПериодов.Текст, "ТекстВложенныйЗапрос", "(" + ТекстВложенныйЗапрос + ")");
		
		ЗапросПериодов.Текст = ЗапросПериодов.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	ЗапросПериодов.Текст = ЗапросПериодов.Текст +
	"ВЫБРАТЬ
	|	ВТПериодыЗаполнения.Период КАК Период
	|ИЗ
	|	ВТПериодыЗаполнения КАК ВТПериодыЗаполнения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТПериодыЗаполнения.Период";
	
	ЗапросПериодов.УстановитьПараметр("ПериодЗаполнения", ПараметрыЗаполненияВидовЗапасов.ПериодЗаполнения);
	Возврат ЗапросПериодов;

КонецФункции

// Метод заполняет табличную часть "Виды запасов" документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - требуется временные таблицы:
//		ТаблицаТоваров, ТаблицаДанныхДокумента, ТаблицаВидыЗапасов, ТаблицаОстатков.
//	Отказ - Булево - Признак отказа от записи документа.
//	ПараметрыЗаполненияВидовЗапасов - Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов.
//
Процедура ЗаполнитьВидыЗапасовПоТаблицеОстатков(ДокументОбъект,
	МенеджерВременныхТаблиц,
	Отказ,
	ПараметрыЗаполненияВидовЗапасов)
	
	ТаблицаОшибок          = ТаблицаОшибокЗаполненияВидовЗапасов();
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
	
	ТаблицаВидыЗапасов = ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].ВыгрузитьКолонки();
		
	КонтролироватьИзменениеНомеровГТД = ДополнительныеСвойства.Свойство("КонтролироватьИзменениеНомеровГТД");
	Если КонтролироватьИзменениеНомеровГТД Тогда
		ТаблицаНомеровГТД = ТаблицаВидыЗапасов.Скопировать(, "АналитикаУчетаНоменклатуры, НомерГТД, Количество");
	КонецЕсли;
	
	ВидЗапасовПоУмолчанию = Неопределено;
	
	Запрос = ЗапросРаспределенияБезУчетаПриоритетовТаблицыТоваровНаТаблицуОстатков(МенеджерВременныхТаблиц, ДополнительныеСвойства, ПараметрыЗаполненияВидовЗапасов);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаДанныеДокумента = МассивРезультатов[1].Выбрать();
	ВыборкаТаблицаТоваров = МассивРезультатов[2].Выбрать();
	
	ВыборкаДанныеДокумента.Следующий();
	Организация = ВыборкаДанныеДокумента.Организация;
	ХозяйственнаяОперация = ВыборкаДанныеДокумента.ХозяйственнаяОперация;
	
	СтруктураДанныхСтроки = Новый Структура("
		|Склад,
		|АналитикаУчетаНоменклатурыОтгрузки,
		|Количество,
		|СуммаСНДС,
		|СтавкаНДС,
		|СуммаНДС,
		|СуммаВознаграждения,
		|СуммаНДСВознаграждения,
		|НедостаточноОстатковТоваровОрганизаций,
		|ВидЗапасовОтгрузки
		|");
	
	СтруктураВидаЗапасовПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|ВидЦены,
		|ВладелецТовара,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалогообложениеНДС,
		|ТипЗапасов,
		|НалогообложениеОрганизации
		|");
	
	СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета				= Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.ВидЦены								= Справочники.ВидыЦенПоставщиков.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.ВладелецТовара						= ВыборкаДанныеДокумента.Партнер;
	СтруктураВидаЗапасовПоУмолчанию.Контрагент							= ВыборкаДанныеДокумента.Контрагент;
	СтруктураВидаЗапасовПоУмолчанию.Соглашение							= ВыборкаДанныеДокумента.Соглашение;
	СтруктураВидаЗапасовПоУмолчанию.Договор								= ВыборкаДанныеДокумента.Договор;
	СтруктураВидаЗапасовПоУмолчанию.Валюта								= ВыборкаДанныеДокумента.Валюта;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС					= ВыборкаДанныеДокумента.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеОрганизации			= ВыборкаДанныеДокумента.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов							= ВыборкаДанныеДокумента.ТипЗапасов;
	
	РезультатЗапроса = МассивРезультатов[МассивРезультатов.ВГраница()];
	ВыборкаОстаткиПоСтрокам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию =
		ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(ПараметрыЗаполненияВидовЗапасов);
	
	ВидыЗапасовДляВозврата = Новый Соответствие;
	ВидыЗапасовПоНастройкамПередачи = Новый Соответствие;
	
	Пока ВыборкаОстаткиПоСтрокам.Следующий() Цикл
		
		КоличествоТовара			= ВыборкаОстаткиПоСтрокам.Количество;
		СуммаТовараСНДС				= ВыборкаОстаткиПоСтрокам.СуммаСНДС;
		СуммаНДСТовара				= ВыборкаОстаткиПоСтрокам.СуммаНДС;
		СуммаВознагражденияВсего	= ВыборкаОстаткиПоСтрокам.СуммаВознаграждения;
		СуммаНДСВознагражденияВсего	= ВыборкаОстаткиПоСтрокам.СуммаНДСВознаграждения;
		
		ЕстьНулевыеОстаткиТоваровОрганизаций = Ложь;
		
		// Детальные записи
		Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета") Тогда
				СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = Выборка.ГруппаФинансовогоУчета;
			Иначе
				СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = Неопределено;
			КонецЕсли;
			
			ВидЗапасовОтгрузки = Неопределено;
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
				ВидЗапасов =  Выборка.ВидЗапасов;
				ВидЗапасовОтгрузки = ?(ЗначениеЗаполнено(Выборка.ВидЗапасовОтгрузки), Выборка.ВидЗапасовОтгрузки, Выборка.ВидЗапасов);
			ИначеЕсли ЗначениеЗаполнено(Выборка.ВидЗапасовОтгрузки) Тогда
				Если Выборка.ОтгрузкаЗапасовДругойОрганизации Тогда
					ВидЗапасовОтгрузки = Выборка.ВидЗапасовОтгрузки;
				Иначе
					ВидЗапасовОтгрузки = ВидыЗапасовПоНастройкамПередачи.Получить(Выборка.ВидЗапасовОтгрузки);
					Если ВидЗапасовОтгрузки = Неопределено Тогда
						ВидЗапасовОтгрузки = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
							Выборка.ВидЗапасовОтгрузки,
							Организация,
							ВыборкаДанныеДокумента.НалогообложениеНДС);
						ВидыЗапасовПоНастройкамПередачи.Вставить(Выборка.ВидЗапасовОтгрузки, ВидЗапасовОтгрузки);
					КонецЕсли;
				КонецЕсли;
				ВидЗапасов = ВидыЗапасовДляВозврата.Получить(ВидЗапасовОтгрузки);
				Если ВидЗапасов = Неопределено Тогда
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДляВозвратаТоваровОтКлиента(
						ВидЗапасовОтгрузки, 
						Организация);
					ВидыЗапасовДляВозврата.Вставить(ВидЗапасовОтгрузки, ВидЗапасов);
				КонецЕсли;
			Иначе
				ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
			КонецЕсли;
			
			КоличествоОстаток	= Выборка.КоличествоОстаток;
			СуммаОстаток		= Выборка.СуммаОстаток;
			НеУказанНомерГТД	= Ложь;
			
			Если Выборка.НеУказанНомерГТД Тогда
				
				КоличествоОстаток	= 0;
				СуммаОстаток		= 0;
				НеУказанНомерГТД	= Выборка.НеУказанНомерГТД;
				
			ИначеЕсли (КоличествоТовара > 0 И КоличествоОстаток > 0)
			 ИЛИ (КоличествоТовара < 0 И КоличествоОстаток < 0) Тогда
				
				НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
				Если ЗначениеЗаполнено(ВидЗапасов) Тогда
					НоваяСтрока.ВидЗапасов = ВидЗапасов;
				Иначе
					ТекстИсключения = НСтр("ru = 'Ненулевое количество при пустом виде запасов.'");
					ВызватьИсключение ТекстИсключения;
				КонецЕсли;
				
				Если КоличествоТовара > 0 Тогда
					
					КоличествоОстаток = Макс(КоличествоОстаток, 0);
					Количество = Мин(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток = Макс(СуммаОстаток, 0);
						СуммаСНДС = ?(КоличествоОстаток = Количество, СуммаОстаток, Мин(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0, Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1), 0);
					КонецЕсли;
					
				Иначе
					
					КоличествоОстаток = Мин(КоличествоОстаток, 0);
					Количество = Макс(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток = Мин(СуммаОстаток, 0);
						СуммаСНДС = ?(КоличествоОстаток = Количество, СуммаОстаток, Макс(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0, Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1), 0);
					КонецЕсли;
					
				КонецЕсли;
				
				СтруктураДанныхСтроки.Количество				= Количество;
				СтруктураДанныхСтроки.СуммаСНДС					= СуммаСНДС;
				СтруктураДанныхСтроки.СуммаНДС					= ?(СуммаТовараСНДС <> 0, Окр(СуммаСНДС * СуммаНДСТовара / СуммаТовараСНДС, 2, 1), 0);
				СтруктураДанныхСтроки.СтавкаНДС					= Выборка.СтавкаНДС;
				СтруктураДанныхСтроки.СуммаВознаграждения		= ?(КоличествоТовара <> 0, Окр(Количество * СуммаВознагражденияВсего / КоличествоТовара, 2, 1), 0);
				СтруктураДанныхСтроки.СуммаНДСВознаграждения	= ?(КоличествоТовара <> 0, Окр(Количество * СуммаНДСВознагражденияВсего / КоличествоТовара, 2, 1), 0);
				СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций 
																= Ложь;
				СтруктураДанныхСтроки.АналитикаУчетаНоменклатурыОтгрузки 
																= Выборка.АналитикаУчетаНоменклатурыОтгрузки;
				СтруктураДанныхСтроки.ВидЗапасовОтгрузки 		= ВидЗапасовОтгрузки;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
				
				КоличествоТовара			= КоличествоТовара				- СтруктураДанныхСтроки.Количество;
				СуммаТовараСНДС				= СуммаТовараСНДС				- СтруктураДанныхСтроки.СуммаСНДС;
				СуммаНДСТовара				= СуммаНДСТовара				- СтруктураДанныхСтроки.СуммаНДС;
				СуммаВознагражденияВсего	= СуммаВознагражденияВсего		- СтруктураДанныхСтроки.СуммаВознаграждения;
				СуммаНДСВознагражденияВсего	= СуммаНДСВознагражденияВсего	- СтруктураДанныхСтроки.СуммаНДСВознаграждения;
				СуммаОстаток				= СуммаОстаток					- СтруктураДанныхСтроки.СуммаСНДС;
				
			КонецЕсли;
			
		КонецЦикла; // Выборка по остаткам
		
		ПроводитьБезКонтроляОстатковТоваровОрганизаций = 
			ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций ИЛИ НЕ Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить();
			
		Если КоличествоТовара <> 0 ИЛИ СуммаТовараСНДС <> 0 Тогда
			
			Если ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию
				ИЛИ ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
				
				Если Не ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке
					И ПараметрыЗаполненияВидовЗапасов.ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Количество() = 0 Тогда
					ТекстИсключения = НСтр("ru = 'Установлен флаг получения владельца товаров из таблицы
												|реквизитов видов запасов по умолчанию, но таблица не передана.'");
					ВызватьИсключение ТекстИсключения;
				КонецЕсли;
				
				ВыборкаТаблицаТоваров.Сбросить();
				ВидыЗапасовПоУмолчанию = Новый Соответствие();
				
				Если ВыборкаТаблицаТоваров.НайтиСледующий(Новый Структура("НомерСтроки", ВыборкаОстаткиПоСтрокам.НомерСтроки)) Тогда
					
					ГруппаФинансовогоУчета = ВыборкаТаблицаТоваров.ГруппаФинансовогоУчета;
					Если ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке Тогда
						ВидЗапасовПоУмолчанию = ВидыЗапасовПоУмолчанию[ГруппаФинансовогоУчета];
						Если ВидЗапасовПоУмолчанию = Неопределено Тогда
							СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = ГруппаФинансовогоУчета;
							СтруктураВидаЗапасовПоУмолчанию.ВидЦены = ВыборкаТаблицаТоваров.ВидЦены;
							ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
								Организация,
								ХозяйственнаяОперация,
								СтруктураВидаЗапасовПоУмолчанию);
							ВидыЗапасовПоУмолчанию.Вставить(ГруппаФинансовогоУчета, ВидЗапасовПоУмолчанию);
						КонецЕсли;
					Иначе
						СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = ГруппаФинансовогоУчета;
						
						СтруктураВидаЗапасовПоУмолчанию.ВладелецТовара	= ВыборкаТаблицаТоваров.ВладелецТовара;
						СтруктураВидаЗапасовПоУмолчанию.Контрагент		= ВыборкаТаблицаТоваров.Контрагент;
						СтруктураВидаЗапасовПоУмолчанию.Договор			= ВыборкаТаблицаТоваров.Договор;
						СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов		= ВыборкаТаблицаТоваров.ТипЗапасов;
						
						ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
							Организация,
							ХозяйственнаяОперация,
							СтруктураВидаЗапасовПоУмолчанию);
					КонецЕсли;
					
					НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТаблицаТоваров);
					НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
					
					Если ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков = "ТоварыОрганизацийКПередаче" Тогда
						НоваяСтрока.ВидЗапасовПолучателя = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
							ВидЗапасовПоУмолчанию,
							ДокументОбъект.ОрганизацияПолучатель,
							СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС,
							ДокументОбъект.Дата);
					КонецЕсли;
					
					СтруктураДанныхСтроки.Количество				= КоличествоТовара;
					СтруктураДанныхСтроки.СуммаСНДС					= СуммаТовараСНДС;
					СтруктураДанныхСтроки.СуммаНДС					= СуммаНДСТовара;
					СтруктураДанныхСтроки.СуммаВознаграждения		= 0;
					СтруктураДанныхСтроки.СуммаНДСВознаграждения	= 0;
					СтруктураДанныхСтроки.СтавкаНДС					= ВыборкаТаблицаТоваров.СтавкаНДС;
					СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций = Истина;
					СтруктураДанныхСтроки.АналитикаУчетаНоменклатурыОтгрузки = НоваяСтрока.АналитикаУчетаНоменклатуры;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
					
				КонецЕсли;
			КонецЕсли;
			Если Не ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию Тогда
				Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения Тогда
					
					Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
					Выборка.Следующий();
					
					НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, Выборка);
					
					НоваяСтрокаОшибок.Количество		= КоличествоТовара;
					НоваяСтрокаОшибок.Сумма				= СуммаТовараСНДС;
					НоваяСтрокаОшибок.ЕдиницаИзмерения	= Выборка.ЕдиницаИзмерения;
					НоваяСтрокаОшибок.НеУказанНомерГТД	= НеУказанНомерГТД;
					
				КонецЕсли;
				Если Не ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла; // Выборка по строкам документа
	
	Если ТаблицаОшибок.Количество() > 0 И ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
		ТекстСообщения = НСтр( "ru = 'Документ %Ссылка% проведен с выключенным контролем остатков товаров организаций.'", Метаданные.ОсновнойЯзык.КодЯзыка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ДокументОбъект.Ссылка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытияВыключенКонтрольОстатков(),
			УровеньЖурналаРегистрации.Предупреждение,
			,
			ДокументОбъект.Ссылка,
			ТекстСообщения);
	КонецЕсли;
	
	ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].Загрузить(ТаблицаВидыЗапасов);

	Если КонтролироватьИзменениеНомеровГТД Тогда
		
		ТаблицаНомеровГТД.Колонки.Добавить("НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаВидыЗапасов Цикл
			
			НоваяСтрока = ТаблицаНомеровГТД.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			НоваяСтрока.Количество = 0;
			НоваяСтрока.НовоеКоличество = СтрокаТаблицы.Количество;
			
		КонецЦикла;
		
		ТаблицаНомеровГТД.Свернуть("АналитикаУчетаНоменклатуры, НомерГТД", "Количество, НовоеКоличество");
		Для Каждого СтрокаТаблицы Из ТаблицаНомеровГТД Цикл
			Если СтрокаТаблицы.Количество <> СтрокаТаблицы.НовоеКоличество Тогда
				ДополнительныеСвойства.Вставить("ИзменилисьНомераГТД", Истина);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	СообщитьОбОшибкахЗаполненияВидовЗапасовПоТаблицеКОформлению(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов);
	
КонецПроцедуры

Функция ЗапросРаспределенияБезУчетаПриоритетовТаблицыТоваровНаТаблицуОстатков(МенеджерВременныхТаблиц, ДополнительныеСвойства, ПараметрыЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, Аналитика.КлючАналитики) КАК АналитикаОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Номенклатура, Аналитика.Номенклатура) КАК НоменклатураОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Характеристика, Аналитика.Характеристика) КАК ХарактеристикаОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Серия, Аналитика.Серия) КАК СерияОстатков,
	|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СпрНоменклатура.ПодакцизныйТовар КАК ЭтоПодакцизныйТовар,
	|	СпрНоменклатура.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
	|	ЕСТЬNULL(АналитикаКомиссионера.Склад, Аналитика.Склад) КАК СкладОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Назначение, Аналитика.Назначение) КАК НазначениеОстатков,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	Аналитика.Склад КАК Склад,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов КАК ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.ВидЦены КАК ВидЦены,
	|	Аналитика.Назначение КАК Назначение,
	|	&ТекстПоляДокументРеализации_ КАК ДокументРеализации,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	МАКСИМУМ(ТаблицаТоваров.СтавкаНДС) КАК СтавкаНДС,
	|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
	|	СУММА(ТаблицаТоваров.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ТаблицаТоваров.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаТоваров.СуммаВознаграждения) КАК СуммаВознаграждения,
	|	СУММА(ТаблицаТоваров.СуммаНДСВознаграждения) КАК СуммаНДСВознаграждения
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаТоваров.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО Аналитика.Номенклатура = СпрНоменклатура.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ИСТИНА
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|	ПО
	|		ТаблицаТоваров.Номенклатура = АналитикаКомиссионера.Номенклатура
	|		И ТаблицаТоваров.Характеристика = АналитикаКомиссионера.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаКомиссионера.Назначение
	|		И ТаблицаДанныхДокумента.Партнер = АналитикаКомиссионера.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссионера.Серия
	|		И (ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|			ИЛИ ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика))
	|	
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, Аналитика.КлючАналитики),
	|	СпрНоменклатура.ЕдиницаИзмерения,
	|	СпрНоменклатура.ПодакцизныйТовар,
	|	СпрНоменклатура.ВестиУчетПоГТД,
	|	ЕСТЬNULL(АналитикаКомиссионера.Номенклатура, Аналитика.Номенклатура),
	|	ЕСТЬNULL(АналитикаКомиссионера.Характеристика, Аналитика.Характеристика),
	|	ЕСТЬNULL(АналитикаКомиссионера.Серия, Аналитика.Серия),
	|	ЕСТЬNULL(АналитикаКомиссионера.Склад, Аналитика.Склад),
	|	ЕСТЬNULL(АналитикаКомиссионера.Назначение, Аналитика.Назначение),
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	Аналитика.Склад,
	|	ТаблицаТоваров.Склад,
	|	Аналитика.Назначение,
	|	&ТекстПоляДокументРеализации_,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД,
	|	ТаблицаТоваров.ВидЦены
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	ТаблицаДанныхДокумента.Дата КАК Период,
	|	ТаблицаДанныхДокумента.Партнер КАК Партнер,
	|	ТаблицаДанныхДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДанныхДокумента.Соглашение КАК Соглашение,
	|	ТаблицаДанныхДокумента.Договор КАК Договор,
	|	ТаблицаДанныхДокумента.Валюта КАК Валюта,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаДанныхДокумента.ТипЗапасов КАК ТипЗапасов
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасовПоУмолчанию.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасовРезервы КАК ТипЗапасовРезервы,
	|	ВидыЗапасовПоУмолчанию.Контрагент КАК Контрагент,
	|	ВидыЗапасовПоУмолчанию.Договор КАК Договор,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Серия КАК Серия,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаДокумента.ВидЦены КАК ВидЦены,
	|	ВЫБОР 
	|		КОГДА &ИспользоватьГруппыФинУчета
	|		ТОГДА ЕСТЬNULL(Аналитика.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаФинансовогоУчета
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаДокумента.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРеквизитовВидовЗапасовПоУмолчанию КАК ВидыЗапасовПоУмолчанию
	|	ПО ВидыЗапасовПоУмолчанию.НомерСтроки = ТаблицаДокумента.НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтроки,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры) КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную,
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	ВЫБОР КОГДА СУММА(ТаблицаВидыЗапасов.Количество) > 0 ТОГДА
	|		1
	|	ИНАЧЕ
	|		-1
	|	КОНЕЦ КАК Знак,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации
	|
	|ПОМЕСТИТЬ ВтВидыЗапасовСводно
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = АналитикаКомиссионера.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = АналитикаКомиссионера.Характеристика
	|		И ТаблицаДанныхДокумента.Партнер = АналитикаКомиссионера.Склад
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение = АналитикаКомиссионера.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссионера.Серия
	|		И ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры),
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.СкладОтгрузки,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную,
	|	ТаблицаВидыЗапасов.ДокументРеализации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	ВидЗапасовПолучателя,
	|	НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // ОСТАТКИ, УКАЗАННЫЕ В ДОКУМЕНТЕ
	|	ИСТИНА КАК ОстаткиДокумента,
	|
	|	Остатки.Организация КАК Организация,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Ключи.Номенклатура КАК Номенклатура,
	|	Ключи.Характеристика КАК Характеристика,
	|	Ключи.Серия КАК Серия,
	|	Ключи.Склад КАК Склад,
	|	Ключи.Назначение КАК Назначение,
	|	Остатки.Назначение КАК НазначениеОтгрузки,
	|	ВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	Остатки.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|	ВидыЗапасов.НомерГТД КАК НомерГТД,
	|	Остатки.ДатаПоступления КАК ДатаПоступления,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.ВидыЗапасовУказаныВручную И Не &ПерезаполнитьВидыЗапасов ТОГДА
	|		ВидыЗапасов.Количество
	|	КОГДА ВидыЗапасов.Знак * Остатки.КоличествоОстаток > ВидыЗапасов.Знак * ВидыЗапасов.Количество ТОГДА
	|		ВидыЗапасов.Количество
	|	ИНАЧЕ
	|		Остатки.КоличествоОстаток
	|	КОНЕЦ КАК КоличествоОстаток,
	|
	|	ВЫБОР КОГДА (ВидыЗапасов.Знак * Остатки.КоличествоОстаток > ВидыЗапасов.Знак * ВидыЗапасов.Количество)
	|	 И Остатки.КоличествоОстаток <> 0 ТОГДА
	|		ВидыЗапасов.Количество * Остатки.СуммаОстаток / Остатки.КоличествоОстаток
	|	ИНАЧЕ
	|		Остатки.СуммаОстаток
	|	КОНЕЦ КАК СуммаОстаток,
	|	ВидыЗапасов.ДокументРеализации КАК ДокументРеализации
	|
	|ПОМЕСТИТЬ ВтОстаткиБезГруппировки
	|ИЗ
	|	ВтВидыЗапасовСводно КАК ВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|	ПО
	|		Истина
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|	ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Ключи.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОстатков КАК Остатки
	|	ПО
	|		Остатки.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		И Остатки.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|		И Остатки.СкладОтгрузки = ВидыЗапасов.СкладОтгрузки
	|		И Остатки.НомерГТД = ВидыЗапасов.НомерГТД
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасов
	|	ПО
	|		ВидыЗапасов.ВидЗапасов = РеквизитыВидаЗапасов.Ссылка
	|
	|ГДЕ
	|	НЕ Остатки.ВидЗапасов ЕСТЬ NULL
	|	ИЛИ (ВидыЗапасов.ВидыЗапасовУказаныВручную И Не &ПерезаполнитьВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // ОСТАТКИ, НЕ УКАЗАННЫЕ В ДОКУМЕНТЕ
	|
	|	ЛОЖЬ КАК ОстаткиДокумента,
	|
	|	Остатки.Организация КАК Организация,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Ключи.Номенклатура,
	|	Ключи.Характеристика,
	|	Ключи.Серия,
	|	Ключи.Склад,
	|	Ключи.Назначение,
	|	Остатки.Назначение,
	|	Остатки.СкладОтгрузки КАК СкладОтгрузки,
	|
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	Остатки.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	Остатки.ДатаПоступления КАК ДатаПоступления,
	|
	|	Остатки.КоличествоОстаток - ЕСТЬNULL(ВидыЗапасов.Количество, 0) КАК КоличествоОстаток,
	|	ВЫБОР КОГДА Остатки.КоличествоОстаток <> 0 ТОГДА
	|		Остатки.СуммаОстаток
	|			- (ЕСТЬNULL(ВидыЗапасов.Количество, 0) * Остатки.СуммаОстаток / Остатки.КоличествоОстаток)
	|	КОГДА ЕСТЬNULL(ВидыЗапасов.Количество, 0) = 0 ТОГДА
	|		Остатки.СуммаОстаток
	|	ИНАЧЕ
	|		0 // Сумма остатка подобралась в строках с видом запасов
	|	КОНЕЦ КАК СуммаОстаток,
	|	Остатки.ДокументРеализации КАК ДокументРеализации
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|	ПО
	|		Истина
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|	ПО Остатки.АналитикаУчетаНоменклатуры = Ключи.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтВидыЗапасовСводно КАК ВидыЗапасов
	|	ПО
	|		Остатки.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		И Остатки.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|		И Остатки.СкладОтгрузки = ВидыЗапасов.СкладОтгрузки
	|		И Остатки.НомерГТД = ВидыЗапасов.НомерГТД
	|ГДЕ
	|	ВЫБОР КОГДА ВидыЗапасов.Количество ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	КОГДА ВидыЗапасов.Количество = 0 ТОГДА
	|		НЕ ВидыЗапасов.НомерСтроки = 99999
	|	КОГДА ВидыЗапасов.Знак * ВидыЗапасов.Количество > 0 ТОГДА
	|		ВидыЗапасов.Знак * Остатки.КоличествоОстаток
	|			- ВидыЗапасов.Знак * ВидыЗапасов.Количество > 0
	|	ИНАЧЕ
	|		ВидыЗапасов.Знак * Остатки.КоличествоОстаток
	|			- ВидыЗапасов.Знак * ВидыЗапасов.Количество < 0
	|	КОНЕЦ
	|;
	|/////////////////////////////////////////////////////////////////////////////
	// Сгруппируем остатки. Для каждой сгруппированной строки
	// определим использование данного остатка в текущем документе.
	// Необходимо для правильного получения СуммыСНДС из документа,
	// а не усредненной из остатков.
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВтОстаткиБезГруппировки.ОстаткиДокумента) КАК ОстаткиДокумента,
	|
	|	ВтОстаткиБезГруппировки.Организация КАК Организация,
	|	ВтОстаткиБезГруппировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтОстаткиБезГруппировки.Номенклатура КАК Номенклатура,
	|	ВтОстаткиБезГруппировки.Характеристика КАК Характеристика,
	|	ВтОстаткиБезГруппировки.Серия КАК Серия,
	|	ВтОстаткиБезГруппировки.Склад КАК Склад,
	|	ВтОстаткиБезГруппировки.Назначение КАК Назначение,
	|	ВтОстаткиБезГруппировки.НазначениеОтгрузки КАК НазначениеОтгрузки,
	|	ВтОстаткиБезГруппировки.СкладОтгрузки КАК СкладОтгрузки,
	|
	|	ВтОстаткиБезГруппировки.ВидЗапасов КАК ВидЗапасов,
	|	ВтОстаткиБезГруппировки.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	ВтОстаткиБезГруппировки.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|	ВтОстаткиБезГруппировки.НомерГТД КАК НомерГТД,
	|	ВтОстаткиБезГруппировки.ДатаПоступления КАК ДатаПоступления,
	|
	|	СУММА(ВтОстаткиБезГруппировки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ВтОстаткиБезГруппировки.СуммаОстаток) КАК СуммаОстаток,
	|
	|	ВтОстаткиБезГруппировки.ДокументРеализации КАК ДокументРеализации
	|
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	ВтОстаткиБезГруппировки КАК ВтОстаткиБезГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтОстаткиБезГруппировки.Организация,
	|	ВтОстаткиБезГруппировки.АналитикаУчетаНоменклатуры,
	|	ВтОстаткиБезГруппировки.Номенклатура,
	|	ВтОстаткиБезГруппировки.Характеристика,
	|	ВтОстаткиБезГруппировки.Серия,
	|	ВтОстаткиБезГруппировки.Склад,
	|	ВтОстаткиБезГруппировки.Назначение,
	|	ВтОстаткиБезГруппировки.НазначениеОтгрузки,
	|	ВтОстаткиБезГруппировки.СкладОтгрузки,
	|
	|	ВтОстаткиБезГруппировки.ВидЗапасов,
	|	ВтОстаткиБезГруппировки.ВидЗапасовПолучателя,
	|	ВтОстаткиБезГруппировки.ВидЗапасовОтгрузки,
	|	ВтОстаткиБезГруппировки.НомерГТД,
	|	ВтОстаткиБезГруппировки.ДатаПоступления,
	|	ВтОстаткиБезГруппировки.ДокументРеализации
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ЕСТЬNULL(КлючиТоваров.Назначение, Неопределено) КАК Назначение,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ЕСТЬNULL(ТаблицаДокумента.Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) КАК СырьевойТовар,
	|	ТаблицаДокумента.ЭтоПодакцизныйТовар КАК ЭтоПодакцизныйТовар,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаДокумента.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ТаблицаДанныхДокумента.Дата КАК ДатаДокумента,
	|
	|	ЕСТЬNULL(Остатки.ВидЗапасов, Неопределено) КАК ВидЗапасов,
	|	ЕСТЬNULL(Остатки.ВидЗапасовПолучателя, Неопределено) КАК ВидЗапасовПолучателя,
	|	ЕСТЬNULL(Остатки.ВидЗапасовОтгрузки, Неопределено) КАК ВидЗапасовОтгрузки,
	|	ЕСТЬNULL(РеквизитыВидаЗапасовОтгрузки.РеализацияЗапасовДругойОрганизации, ЛОЖЬ) КАК ОтгрузкаЗапасовДругойОрганизации,
	|	ЕСТЬNULL(Остатки.НомерГТД, Неопределено) КАК НомерГТД,
	|	ВЫБОР КОГДА ТаблицаДокумента.ВестиУчетПоГТД
	|		И &ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
	|		И (Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) ИЛИ Остатки.НомерГТД ЕСТЬ NULL)
	|		И НЕ (ЕСТЬNULL(РеквизитыВидаЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца), ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)))
	|	ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК НеУказанНомерГТД,
	|
	|	ЕСТЬNULL(Остатки.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) КАК ДатаПоступления,
	|	ЕСТЬNULL(Остатки.СкладОтгрузки, Неопределено) КАК СкладОтгрузки,
	|
	|	ЕСТЬNULL(Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(Остатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ЕСТЬNULL(АналитикаОтгрузки.КлючАналитики, ТаблицаДокумента.АналитикаУчетаНоменклатуры) КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|		И ТаблицаДокумента.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|	ТОГДА
	|		ТаблицаДокумента.ДокументРеализации
	|	ИНАЧЕ
	|		ЕСТЬNULL(Остатки.ДокументРеализации, Неопределено)
	|	КОНЕЦ КАК ДокументРеализации
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		Истина
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Аналитика.КлючАналитики = ТаблицаДокумента.АналитикаУчетаНоменклатуры
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтОстатки КАК Остатки
	|	ПО
	| 		ТаблицаДокумента.НоменклатураОстатков = Остатки.Номенклатура
	|		И ТаблицаДокумента.ХарактеристикаОстатков = Остатки.Характеристика
	|		И ТаблицаДокумента.СерияОстатков = Остатки.Серия
	|		И ТаблицаДокумента.СкладОстатков = Остатки.Склад
	|		И (ТаблицаДокумента.Назначение = Остатки.Назначение
	|			ИЛИ ТаблицаДанныхДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера), 
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента), 
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)))
	|		И (ТаблицаДокумента.НомерГТД = Остатки.НомерГТД
	|			ИЛИ ТаблицаДокумента.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ИЛИ Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ИЛИ &БезОтбораПоНомерамГТД)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|	ПО
	|		Ключи.Ссылка = Остатки.АналитикаУчетаНоменклатуры
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтгрузки
	|	ПО
	|		АналитикаОтгрузки.Номенклатура = Ключи.Номенклатура
	|		И АналитикаОтгрузки.Характеристика = Ключи.Характеристика
	|		И АналитикаОтгрузки.Серия = Ключи.Серия
	|		И АналитикаОтгрузки.Склад = Остатки.СкладОтгрузки
	|		И АналитикаОтгрузки.Назначение = Остатки.НазначениеОтгрузки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступления
	|	ПО
	|		ДатыПоступления.ВидЗапасов = Остатки.ВидЗапасов
	|		И ДатыПоступления.Номенклатура = Ключи.Номенклатура
	|		И ДатыПоступления.Характеристика = Ключи.Характеристика
	|		И ДатыПоступления.Серия = Ключи.Серия
	|		И ДатыПоступления.Назначение = Ключи.Назначение
	|		И ДатыПоступления.НомерГТД = Остатки.НомерГТД
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиТоваров
	|	ПО
	|		КлючиТоваров.Ссылка = ТаблицаДокумента.АналитикаУчетаНоменклатуры
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасов
	|	ПО
	|		РеквизитыВидаЗапасов.Ссылка = Остатки.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасовОтгрузки
	|	ПО
	|		РеквизитыВидаЗапасовОтгрузки.Ссылка = Остатки.ВидЗапасовОтгрузки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОстаткиДокумента Убыв,
	|	НомерСтроки Возр,
	|	ДатаПоступления Возр,
	|	ДатыПоступления.ДатаПоступления Возр
	|
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(СуммаСНДС),
	|	МАКСИМУМ(СтавкаНДС),
	|	МАКСИМУМ(СуммаНДС),
	|	МАКСИМУМ(СуммаВознаграждения),
	|	МАКСИМУМ(СуммаНДСВознаграждения),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	НомерСтроки";
	
	ТаблицаТоваров = МенеджерВременныхТаблиц.Таблицы["ТаблицаТоваров"];
	ЗаменитьОтстутствующиеВВТВТекстеЗапроса(ТаблицаТоваров,
											Запрос.Текст,
											"ДокументРеализации",
											"ТаблицаТоваров.ДокументРеализации",
											"Неопределено");
	
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетПоНалогообложению", ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Если ДополнительныеСвойства.Свойство("КонтролироватьНомераГТД") Тогда
		Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД", ДополнительныеСвойства.КонтролироватьНомераГТД);
	Иначе
		Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД", ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД"));
	КонецЕсли;
	Запрос.УстановитьПараметр("БезОтбораПоНомерамГТД", ПараметрыЗаполнения.БезОтбораПоНомерамГТД);
	
	ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДополнительныеСвойства, Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
	
КонецФункции

// Процедура формирует запрос по данным для заполнения видов запасов документа.
//
Функция ЗапросРаспределенияСУчетомПриоритетовТаблицыТоваровНаТаблицуОстатков(МенеджерВременныхТаблиц, ДополнительныеСвойства)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|			ТОГДА АналитикаВозвратОтКомиссионера.КлючАналитики
	|		КОГДА ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
	|			ТОГДА АналитикаВозвратОтПереработчика.КлючАналитики
	|		КОГДА ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	|			ТОГДА АналитикаВозвратОтКлиента.КлючАналитики
	|		ИНАЧЕ ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК АналитикаОстатков,
	|	ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ТаблицаТоваров.Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) КАК СырьевойТовар,
	|	ТаблицаТоваров.Номенклатура.ПодакцизныйТовар КАК ЭтоПодакцизныйТовар,
	|	ТаблицаТоваров.Номенклатура.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
	|	ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТоваров.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов КАК ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Заказ, НЕОПРЕДЕЛЕНО) КАК Заказ,
	|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
	|	&ТекстПоляВидЦены_ КАК ВидЦены,
	|	&ТекстПоляДокументРеализации_ КАК ДокументРеализации,
	|	&ТекстПоляСтавкаНДС_ КАК СтавкаНДС,
	|	&ТекстПоляСуммаСНДС_ КАК СуммаСНДС,
	|	&ТекстПоляСуммаНДС_ КАК СуммаНДС,
	|	&ТекстПоляСуммаВознаграждения_ КАК СуммаВознаграждения,
	|	&ТекстПоляСуммаНДСВознаграждения_ КАК СуммаНДСВознаграждения,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаДанныхДокумента.Дата КАК ДатаДокумента
	|
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаВозвратОтКомиссионера
	|		ПО (ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера))
	|			И ТаблицаТоваров.Номенклатура = АналитикаВозвратОтКомиссионера.Номенклатура
	|			И ТаблицаТоваров.Характеристика = АналитикаВозвратОтКомиссионера.Характеристика
	|			И (АналитикаВозвратОтКомиссионера.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И (АналитикаВозвратОтКомиссионера.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаВозвратОтПереработчика
	|		ПО (ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика))
	|			И ТаблицаТоваров.Номенклатура = АналитикаВозвратОтПереработчика.Номенклатура
	|			И ТаблицаТоваров.Характеристика = АналитикаВозвратОтПереработчика.Характеристика
	|			И (АналитикаВозвратОтПереработчика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И ТаблицаТоваров.Назначение = АналитикаВозвратОтПереработчика.Назначение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаВозвратОтКлиента
	|		ПО (ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента))
	|			И ТаблицаТоваров.Номенклатура = АналитикаВозвратОтКлиента.Номенклатура
	|			И ТаблицаТоваров.Характеристика = АналитикаВозвратОтКлиента.Характеристика
	|			И (ВЫБОР
	|				КОГДА ТаблицаТоваров.СтатусУказанияСерий = 14
	|					ТОГДА ТаблицаТоваров.Серия
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			КОНЕЦ = АналитикаВозвратОтКлиента.Серия)
	|			И ТаблицаТоваров.Назначение = АналитикаВозвратОтКлиента.Назначение
	|			И (АналитикаВозвратОтКлиента.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|			И ТаблицаТоваров.Склад = АналитикаВозвратОтКлиента.Склад
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|			ТОГДА АналитикаВозвратОтКомиссионера.КлючАналитики
	|		КОГДА ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
	|			ТОГДА АналитикаВозвратОтПереработчика.КлючАналитики
	|		КОГДА ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	|			ТОГДА АналитикаВозвратОтКлиента.КлючАналитики
	|		ИНАЧЕ ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|	КОНЕЦ,
	|	ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаТоваров.Номенклатура.ПодакцизныйТовар,
	|	ТаблицаТоваров.Номенклатура.ВестиУчетПоГТД,
	|	ЕСТЬNULL(ТаблицаТоваров.Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ),
	|	ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТоваров.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТоваров.Назначение,
	|	ТаблицаТоваров.Склад,
	|	&ТекстПоляВидЦены_,
	|	&ТекстПоляДокументРеализации_,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация,
	|	ТаблицаДанныхДокумента.Дата,
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Заказ, НЕОПРЕДЕЛЕНО),
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	ТаблицаДанныхДокумента.Дата КАК Период,
	|	ТаблицаДанныхДокумента.Партнер КАК ВладелецТовара,
	|	ТаблицаДанныхДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДанныхДокумента.Соглашение КАК Соглашение,
	|	ТаблицаДанныхДокумента.Договор КАК Договор,
	|	ТаблицаДанныхДокумента.Валюта КАК Валюта,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаДанныхДокумента.ТипЗапасов КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаФинансовогоУчета
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасовПоУмолчанию.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасовРезервы КАК ТипЗапасовРезервы,
	|	ВидыЗапасовПоУмолчанию.Контрагент КАК Контрагент,
	|	ВидыЗапасовПоУмолчанию.Договор КАК Договор,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.СырьевойТовар КАК СырьевойТовар,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Серия КАК Серия,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.ВидЦены КАК ВидЦены,
	|	ВЫБОР 
	|		КОГДА &ИспользоватьГруппыФинУчета
	|		ТОГДА ЕСТЬNULL(ТаблицаДокумента.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаФинансовогоУчета
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРеквизитовВидовЗапасовПоУмолчанию КАК ВидыЗапасовПоУмолчанию
	|	ПО ВидыЗапасовПоУмолчанию.НомерСтроки = ТаблицаДокумента.НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтроки,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры) КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Организация КАК Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара КАК ВладелецТовара,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС КАК НалогообложениеНДСДокумента,
	|	ТаблицаДанныхДокумента.Организация КАК ОрганизацияДокумента,
	|	ТаблицаДанныхДокумента.Дата КАК ДатаДокумента,
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество
	|
	|ПОМЕСТИТЬ ВтВидыЗапасовСводно
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ИСТИНА
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = АналитикаКомиссионера.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = АналитикаКомиссионера.Характеристика
	|		И ТаблицаДанныхДокумента.Партнер = АналитикаКомиссионера.Склад
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение = АналитикаКомиссионера.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссионера.Серия
	|		И ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры),
	|	ТаблицаВидыЗапасов.СкладОтгрузки,
	|	ТаблицаВидыЗапасов.ДокументРеализации,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС,
	|	ТаблицаДанныхДокумента.Организация,
	|	ТаблицаДанныхДокумента.Дата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	СкладОтгрузки,
	|	ДокументРеализации,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Остатки.Организация = РеквизитыДокумента.Организация
	|				И НЕ ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ВидыЗапасов.ВидЗапасов ЕСТЬ NULL
	|						ТОГДА 1
	|					ИНАЧЕ 2
	|				КОНЕЦ
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК Приоритет,
	|	Остатки.Организация КАК Организация,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.СкладОтгрузки КАК СкладОтгрузки,
	|	Остатки.ДокументРеализации КАК ДокументРеализации,
	|	Остатки.Номенклатура КАК Номенклатура,
	|	Остатки.Характеристика КАК Характеристика,
	|	Остатки.Серия КАК Серия,
	|	Остатки.Назначение КАК Назначение,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	Остатки.ВидЗапасов.Организация КАК ОрганизацияВидаЗапасов,
	|	Остатки.ВидЗапасов.НалогообложениеНДС КАК НалогообложениеНДСВидаЗапасов,
	|	Остатки.ВидЗапасов.ВладелецТовара КАК ВладелецТовара,
	|	РеквизитыДокумента.Организация КАК ОрганизацияОтгрузки,
	|	Остатки.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	Остатки.ДатаПоступления КАК ДатаПоступления,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА Остатки.КоличествоОстаток <> 0
	|			ТОГДА Остатки.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОстаток
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтВидыЗапасовСводно КАК ВидыЗапасов
	|		ПО Остатки.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|			И Остатки.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|			И Остатки.НомерГТД = ВидыЗапасов.НомерГТД
	|			И (Остатки.СкладОтгрузки = ВидыЗапасов.СкладОтгрузки
	|				ИЛИ ВидыЗапасов.СкладОтгрузки В (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|				ИЛИ Остатки.СкладОтгрузки В (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), НЕОПРЕДЕЛЕНО))
	|			И (Остатки.ДокументРеализации = ВидыЗапасов.ДокументРеализации
	|				ИЛИ ВидыЗапасов.ДокументРеализации В (ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|				ИЛИ Остатки.ДокументРеализации В (ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка), НЕОПРЕДЕЛЕНО))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО Остатки.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ВидыЗапасов.Организация,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.СкладОтгрузки,
	|	ВидыЗапасов.ДокументРеализации,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	Аналитика.Назначение,
	|	ВидыЗапасов.ВидЗапасов,
	|	СпрВидыЗапасов.ТипЗапасов,
	|	СпрВидыЗапасов.Организация,
	|	СпрВидыЗапасов.НалогообложениеНДС,
	|	СпрВидыЗапасов.ВладелецТовара,
	|	РеквизитыДокумента.Организация,
	|	СпрВидыЗапасов.РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.НомерГТД,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ВидыЗапасов.Количество,
	|	0
	|ИЗ
	|	ВтВидыЗапасовСводно КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО ВидыЗапасов.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|		ПО СпрВидыЗапасов.Организация = РеквизитыДокумента.Организация
	|ГДЕ
	|	ВидыЗапасов.ВидыЗапасовУказаныВручную = ИСТИНА
	|			И &ПроводитьБезКонтроляОстатковТоваровОрганизаций = ИСТИНА
	|		ИЛИ СпрВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Остатки.Приоритет, 0) КАК Приоритет,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Назначение КАК Назначение,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ТаблицаДокумента.СырьевойТовар КАК СырьевойТовар,
	|	ТаблицаДокумента.ЭтоПодакцизныйТовар КАК ЭтоПодакцизныйТовар,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Серия КАК Серия,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаДокумента.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ТаблицаДокумента.ДатаДокумента КАК ДатаДокумента,
	|
	|	ЕСТЬNULL(Остатки.ВидЗапасов, Неопределено) КАК ВидЗапасов,
	|	ЕСТЬNULL(Остатки.ВидЗапасов, Неопределено) КАК ВидЗапасовОтгрузки,
	|	ЕСТЬNULL(Остатки.ОрганизацияВидаЗапасов, Неопределено) КАК ОрганизацияОстатка,
	|	ЕСТЬNULL(Остатки.ВладелецТовара, Неопределено) КАК ВладелецТовара,
	|	ЕСТЬNULL(Остатки.ТипЗапасов, Неопределено) КАК ТипЗапасов,
	|	ЕСТЬNULL(Остатки.ОрганизацияОтгрузки, Неопределено) КАК ОрганизацияОтгрузки,
	|	ЕСТЬNULL(Остатки.РеализацияЗапасовДругойОрганизации, Ложь) КАК РеализацияЗапасовДругойОрганизации,
	|	ЕСТЬNULL(Остатки.НомерГТД, Неопределено) КАК НомерГТД,
	|
	|	ВЫБОР КОГДА ТаблицаДокумента.ВестиУчетПоГТД
	|		И &ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
	|		И (Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) ИЛИ Остатки.НомерГТД ЕСТЬ NULL)
	|	ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК НеУказанНомерГТД,
	|
	|	ЕСТЬNULL(Остатки.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) КАК ДатаПоступления,
	|	ЕСТЬNULL(Остатки.СкладОтгрузки, Неопределено) КАК СкладОтгрузки,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|		И ТаблицаДокумента.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|	ТОГДА
	|		ТаблицаДокумента.ДокументРеализации
	|	ИНАЧЕ
	|		ЕСТЬNULL(Остатки.ДокументРеализации, Неопределено)
	|	КОНЕЦ КАК ДокументРеализации,
	|	ЕСТЬNULL(ТаблицаДокумента.Заказ, Неопределено) КАК Заказ,
	|
	|	ЕСТЬNULL(Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(Остатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ЕСТЬNULL(АналитикаОтгрузки.КлючАналитики, ТаблицаДокумента.АналитикаУчетаНоменклатуры) КАК АналитикаУчетаНоменклатурыОтгрузки,
	|
	// данные для генерации нового вида запасов по интеркампани
	|	ЕСТЬNULL(Настройка.СпособПередачиТоваров, ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)) КАК НастройкаПередачи,
	|	ВЫБОР КОГДА НЕ Настройка.ОрганизацияВладелец ЕСТЬ NULL
	|		ТОГДА Настройка.ОрганизацияВладелец
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                           КАК НовыйВидЗапасовВладелецТовара,
	|	ВЫБОР КОГДА НЕ Настройка.Договор ЕСТЬ NULL
	|		ТОГДА Настройка.Договор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                           КАК НовыйВидЗапасовДоговор,
	|	ЕСТЬNULL(Настройка.Валюта, НЕОПРЕДЕЛЕНО)        КАК НовыйВидЗапасовВалюта,
	|	ВЫБОР КОГДА НЕ Настройка.ОрганизацияВладелец ЕСТЬ NULL
	|		ТОГДА Настройка.ОрганизацияВладелец
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                           КАК НовыйВидЗапасовКонтрагент,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(Настройка.СпособПередачиТоваров, ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|		И ЕСТЬNULL(Остатки.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                           КАК НовыйВидЗапасовЭтоСубкомиссия,
	|	ЕСТЬNULL(Остатки.НалогообложениеНДСВидаЗапасов,
	|		Неопределено)                               КАК НовыйВидЗапасовНалогообложениеКомитента,
	|	ВЫБОР КОГДА ЕСТЬNULL(Настройка.СпособПередачиТоваров, ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)) 
	|		= ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ                                           КАК НовыйВидЗапасовТипЗапасов,
	|	ТаблицаДокумента.НомерГТД = Остатки.НомерГТД 	КАК НомерГТДСовпадает
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтОстатки КАК Остатки
	|	ПО
	|		ТаблицаДокумента.АналитикаОстатков = Остатки.АналитикаУчетаНоменклатуры
	|		И (ТаблицаДокумента.ДокументРеализации = Остатки.ДокументРеализации
	|			ИЛИ (ТаблицаДокумента.ДокументРеализации = НЕОПРЕДЕЛЕНО И ТаблицаДокумента.ПодбиратьВидыЗапасов)
	|			ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|		)
	|		И (ТаблицаДокумента.НомерГТД = Остатки.НомерГТД
	|			ИЛИ ТаблицаДокумента.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ИЛИ Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|		)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтгрузки
	|	ПО
	|		АналитикаОтгрузки.Номенклатура = Остатки.Номенклатура
	|		И АналитикаОтгрузки.Характеристика = Остатки.Характеристика
	|		И АналитикаОтгрузки.Серия = Остатки.Серия
	|		И АналитикаОтгрузки.Склад = Остатки.СкладОтгрузки
	|		И АналитикаОтгрузки.Назначение = Остатки.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступления
	|	ПО
	|		ДатыПоступления.ВидЗапасов = Остатки.ВидЗапасов
	|		И ДатыПоступления.Номенклатура = Остатки.Номенклатура
	|		И ДатыПоступления.Характеристика = Остатки.Характеристика
	|		И ДатыПоступления.Серия = Остатки.Серия
	|		И ДатыПоступления.Назначение = Остатки.Назначение
	|		И ДатыПоступления.НомерГТД = Остатки.НомерГТД
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|	ПО
	|		Остатки.ТипЗапасов = Настройка.ТипЗапасов
	|		И Остатки.ОрганизацияВидаЗапасов = Настройка.ОрганизацияВладелец
	|		И Остатки.ОрганизацияОтгрузки = Настройка.ОрганизацияПродавец
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки ВОЗР,
	|	Приоритет ВОЗР,
	|	ТаблицаДокумента.НомерГТД = Остатки.НомерГТД УБЫВ,
	|	ДатаПоступления ВОЗР,
	|	ДатыПоступления.ДатаПоступления ВОЗР
	|
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(СуммаСНДС),
	|	МАКСИМУМ(СтавкаНДС),
	|	МАКСИМУМ(СуммаНДС),
	|	МАКСИМУМ(СуммаВознаграждения),
	|	МАКСИМУМ(СуммаНДСВознаграждения),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	НомерСтроки
	|
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДокумента
	|
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтВидыЗапасовСводно
	|
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОстатки";
	
#Область ЗаменаИспользованияНеобязательныхПолей	
	ТаблицаТоваров = МенеджерВременныхТаблиц.Таблицы["ТаблицаТоваров"];
	
	ЗаменитьОтстутствующиеВВТВТекстеЗапроса(ТаблицаТоваров,
											ТекстЗапроса,
											"ВидЦены",
											"ТаблицаТоваров.ВидЦены",
											"ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)");
	
	ЗаменитьОтстутствующиеВВТВТекстеЗапроса(ТаблицаТоваров,
											ТекстЗапроса,
											"ДокументРеализации",
											"ТаблицаТоваров.ДокументРеализации",
											"Неопределено");
											
	ЗаменитьОтстутствующиеВВТВТекстеЗапроса(ТаблицаТоваров,
											ТекстЗапроса,
											"СтавкаНДС",
											"МАКСИМУМ(ТаблицаТоваров.СтавкаНДС)",
											"ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)");
											
	ЗаменитьОтстутствующиеВВТВТекстеЗапроса(ТаблицаТоваров,
											ТекстЗапроса,
											"СуммаСНДС",
											"СУММА(ТаблицаТоваров.СуммаСНДС)",
											"0");
											
	ЗаменитьОтстутствующиеВВТВТекстеЗапроса(ТаблицаТоваров,
											ТекстЗапроса,
											"СуммаНДС",
											"СУММА(ТаблицаТоваров.СуммаНДС)",
											"0");
											
	ЗаменитьОтстутствующиеВВТВТекстеЗапроса(ТаблицаТоваров,
											ТекстЗапроса,
											"СуммаВознаграждения",
											"СУММА(ТаблицаТоваров.СуммаВознаграждения)",
											"0");
											
	ЗаменитьОтстутствующиеВВТВТекстеЗапроса(ТаблицаТоваров,
											ТекстЗапроса,
											"СуммаНДСВознаграждения",
											"СУММА(ТаблицаТоваров.СуммаНДСВознаграждения)",
											"0");
											
#КонецОбласти 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса; 
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетПоНалогообложению", ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Если ДополнительныеСвойства.Свойство("КонтролироватьНомераГТД") Тогда
		Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД", ДополнительныеСвойства.КонтролироватьНомераГТД);
	Иначе
		Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД", ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД"));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПроводитьБезКонтроляОстатковТоваровОрганизаций", 
		ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций 
			ИЛИ НЕ Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить());
	
	ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДополнительныеСвойства, Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
	
КонецФункции

Процедура ЗаменитьОтстутствующиеВВТВТекстеЗапроса(ВременнаяТаблица, ТекстЗапроса, ИмяПоля, ТекстВыражениеВыборки, ТекстЗначенияПоУмолчанию)
	
	Если ВременнаяТаблица.Колонки.Найти(ИмяПоля) <> Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстПоля" + ИмяПоля + "_",
			ТекстВыражениеВыборки);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстПоля" + ИмяПоля + "_",
			ТекстЗначенияПоУмолчанию);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПоСтрокеТоваров(Структура, СтрокаТоваров, ДанныеШапки)
	
	Если ЗначениеЗаполнено(СтрокаТоваров.НовыйВидЗапасовВладелецТовара) Тогда
		Структура.ВладелецТовара = СтрокаТоваров.НовыйВидЗапасовВладелецТовара;
		Структура.Контрагент     = СтрокаТоваров.НовыйВидЗапасовКонтрагент;
		Структура.Договор        = СтрокаТоваров.НовыйВидЗапасовДоговор;
		Структура.Валюта         = СтрокаТоваров.НовыйВидЗапасовВалюта;
		Структура.ТипЗапасов     = СтрокаТоваров.НовыйВидЗапасовТипЗапасов;
	Иначе
		ЗаполнитьЗначенияСвойств(Структура, ДанныеШапки);
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета") Тогда
		Структура.ГруппаФинансовогоУчета = СтрокаТоваров.ГруппаФинансовогоУчета;
	Иначе
		Структура.ГруппаФинансовогоУчета = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьРезервыПоОрганизациямДляКонтроля(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов)
	
	МассивОрганизаций = ОрганизацииДляКонтроляОстатков(МенеджерВременныхТаблиц);
	Если Не МассивОрганизаций.Количество() Тогда
		Возврат;
	КонецЕсли;
		
	ТаблицаРезервыПоОрганизациямДляКонтроля = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаОшибок = ТаблицаОшибокЗаполненияВидовЗапасов();
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	ЗапросДатыОстатков = Новый Запрос;
	ЗапросДатыОстатков.Текст = "
	|ВЫБРАТЬ
	|		МИНИМУМ(Движения.Период) КАК Период
	|	ИЗ
	|		ДвиженияТоварыОрганизацийПередЗаписью КАК Движения";
	
	ЗапросДатыОстатков.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
		ДатаДокумента = ПараметрыЗаполненияВидовЗапасов.ПериодЗаполнения;
	Иначе
		ДатаДокумента = ДокументОбъект.Дата;
	КонецЕсли;
	
	Результат = ЗапросДатыОстатков.Выполнить();
	ДатаДвижений = Результат.Выгрузить()[0].Период;
	Если ЗначениеЗаполнено(ДатаДвижений) Тогда
		ДатаОстатков = Мин(ДатаДвижений, ДатаДокумента);
	Иначе
		ДатаОстатков = ДатаДокумента;
	КонецЕсли;
	
	ЗапросРаспределенияРезервов = ЗапросРаспределенияРезервовПоТаблицеОстатков(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	ЗапросУничтожить = Новый Запрос();
	ЗапросУничтожить.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ДоступныеВидыЗапасовБылиИзменены = Ложь;
	Для Каждого Организация Из МассивОрганизаций Цикл
		
		Если ТипЗнч(ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация) = Тип("СправочникСсылка.Организации") Тогда
			ОрганизацииОтбора = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация);
		ИначеЕсли ТипЗнч(ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация) = Тип("Массив") Тогда
			ОрганизацииОтбора = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация;
		ИначеЕсли ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация = Неопределено Тогда
			ОрганизацииОтбора = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
		Иначе
			ОрганизацииОтбора = Новый Массив;
		КонецЕсли;
		
		Если ОрганизацииОтбора.Найти(Организация) = Неопределено Тогда
			ПараметрыЗаполненияПоОрганизации = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыЗаполненияВидовЗапасов);
			ПараметрыЗаполненияПоОрганизации.ОтборыВидовЗапасов.Организация = Организация;
			
			Если МенеджерВременныхТаблиц.Таблицы.Найти("ДоступныеВидыЗапасов") <> Неопределено Тогда
				ЗапросУничтожить.Текст = "УНИЧТОЖИТЬ ДоступныеВидыЗапасов";
				ЗапросУничтожить.Выполнить();
			КонецЕсли;
			
			Если МенеджерВременныхТаблиц.Таблицы.Найти("ВтОтборыОстатковОрганизаций") <> Неопределено Тогда
				ЗапросУничтожить.Текст = "УНИЧТОЖИТЬ ВтОтборыОстатковОрганизаций";
				ЗапросУничтожить.Выполнить();
			КонецЕсли;
			
			СформироватьВТДоступныеВидыЗапасов(
				ДокументОбъект, 
				МенеджерВременныхТаблиц, 
				ПараметрыЗаполненияПоОрганизации,
				"ДвиженияТоварыОрганизацийПередЗаписью");
				
			СформироватьВтОтборыОстатковПоТаблицеИзменений(МенеджерВременныхТаблиц);
			
			ДоступныеВидыЗапасовБылиИзменены = Истина;
		Иначе
			ПараметрыЗаполненияПоОрганизации = ПараметрыЗаполненияВидовЗапасов;
		КонецЕсли;
		
		СформироватьВТТаблицаОстатков(
			"ТоварыОрганизаций", 
			ДокументОбъект, 
			МенеджерВременныхТаблиц, 
			ПараметрыЗаполненияПоОрганизации, 
			Ложь,
			ДатаОстатков);
		
		Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
			
			РаспределитьНовыеРезервыПоТаблицеОстатковРазныхПериодов(
				ЗапросРаспределенияРезервов, 
				МенеджерВременныхТаблиц, 
				Организация, 
				ПараметрыЗаполненияПоОрганизации, 
				ТаблицаРезервыПоОрганизациямДляКонтроля, 
				ТаблицаОшибок);
			
		Иначе
			
			ЗапросРаспределенияРезервов.УстановитьПараметр("Период", ДатаДокумента);
			РаспределитьНовыеРезервыПоТаблицеОстатков(
				ЗапросРаспределенияРезервов, 
				Организация, 
				ПараметрыЗаполненияПоОрганизации, 
				ТаблицаРезервыПоОрганизациямДляКонтроля, 
				ТаблицаОшибок);
			
		КонецЕсли;
		
		Если ТаблицаОшибок.Количество() <> 0 Тогда
			СообщитьОбОшибкахКонтроляТоваровОрганизаций(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов);
			Если Не ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций И Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить() Тогда
				Отказ = Истина;
			КонецЕсли;
			Возврат;
		КонецЕсли;	
			
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТРезервыПоОрганизациямДляКонтроля") <> Неопределено Тогда
			Запрос.Текст = 
			"УНИЧТОЖИТЬ ВТРезервыПоОрганизациямДляКонтроля
			|;
			|";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ
		|	ВТРезервыПоОрганизациямДляКонтроля.ВидДвижения КАК ВидДвижения,
		|	ВТРезервыПоОрганизациямДляКонтроля.Период КАК Период,
		|	ВТРезервыПоОрганизациямДляКонтроля.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВТРезервыПоОрганизациямДляКонтроля.Организация КАК Организация,
		|	ВТРезервыПоОрганизациямДляКонтроля.ВидЗапасов КАК ВидЗапасов,
		|	ВТРезервыПоОрганизациямДляКонтроля.НомерГТД КАК НомерГТД,
		|	ВТРезервыПоОрганизациямДляКонтроля.Количество КАК Количество,
		|	ВТРезервыПоОрганизациямДляКонтроля.КорОрганизация КАК КорОрганизация,
		|	ВТРезервыПоОрганизациямДляКонтроля.КорВидЗапасов КАК КорВидЗапасов,
		|	ВТРезервыПоОрганизациямДляКонтроля.НалогообложениеНДС КАК НалогообложениеНДС
		|ПОМЕСТИТЬ ВТРезервыПоОрганизациямДляКонтроля
		|ИЗ
		|	&ТаблицаРезервыПоОрганизациямДляКонтроля КАК ВТРезервыПоОрганизациямДляКонтроля";
		
		Запрос.УстановитьПараметр("ТаблицаРезервыПоОрганизациямДляКонтроля", ТаблицаРезервыПоОрганизациямДляКонтроля);
		Запрос.Выполнить();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СообщитьОбОшибках

Функция ТаблицаОшибокЗаполненияВидовЗапасов()
	
	ТаблицаОшибок = Новый ТаблицаЗначений;
	ТаблицаОшибок.Колонки.Добавить("Номенклатура");
	ТаблицаОшибок.Колонки.Добавить("Характеристика");
	ТаблицаОшибок.Колонки.Добавить("Серия");
	ТаблицаОшибок.Колонки.Добавить("Склад");
	ТаблицаОшибок.Колонки.Добавить("Назначение");
	ТаблицаОшибок.Колонки.Добавить("Количество");
	ТаблицаОшибок.Колонки.Добавить("ЕдиницаИзмерения");
	ТаблицаОшибок.Колонки.Добавить("НеУказанНомерГТД");
	ТаблицаОшибок.Колонки.Добавить("Сумма");

	Возврат ТаблицаОшибок;
	
КонецФункции 

Процедура СообщитьОбОшибкахКонтроляТоваровОрганизаций(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов)
	
	Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения
		И ТаблицаОшибок.Количество() > 0 Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			ТекстСообщения = НСтр("ru = 'По организации %Организация% не хватает %Количество% %ЕдиницаИзмерения% товара %ПредставлениеНоменклатуры%, на складе %Склад% %КонтрольГТД% %НалогообложениеНДС%'"); 
			
			ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика,,СтрокаТаблицы.Серия, СтрокаТаблицы.Назначение);
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%" , ПредставлениеНоменклатуры);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%" , СтрокаТаблицы.Склад);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%" , СтрокаТаблицы.Назначение);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%" , СтрокаТаблицы.Количество);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%" , СтрокаТаблицы.ЕдиницаИзмерения);
			
			Если СтрокаТаблицы.НеУказанНомерГТД Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрольГТД%", НСтр("ru = 'с указанными номерами ГТД'"));
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрольГТД%", "");
			КонецЕсли;
			
			Если КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов) Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НалогообложениеНДС%", НСтр("ru = 'по налогообложению'") + " " + ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС);
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НалогообложениеНДС%", "");
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			
		КонецЦикла;
		
		Если КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов) Тогда
			НалогообложениеНДСОрганизации = Справочники.Организации.НалогообложениеНДС(ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов),
				Неопределено,
				ДокументОбъект.Дата);
				
			Если НалогообложениеНДСОрганизации <> ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС Тогда
				
				ТекстСообщения = НСтр("ru = 'Налогообложение документа отличается от налогообложения организации %НалогообложениеНДС%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НалогообложениеНДС%" , ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС); 	
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, "НалогообложениеНДС");
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура СообщитьОбОшибкахЗаполненияВидовЗапасовКомитентов(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов)
	
	Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения
		И ТаблицаОшибок.Количество() > 0 Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			Если СтрокаТаблицы.Количество <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'По комитенту %Комитент% не хватает %Количество% %ЕдиницаИзмерения% товара %ПредставлениеНоменклатуры%, реализованного комиссионером %Комиссионер%'"); 
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комитент%", ДокументОбъект.Организация);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комиссионер%", ДокументОбъект.Комиссионер);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%",
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СтрокаТаблицы.Количество);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СтрокаТаблицы.ЕдиницаИзмерения);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			КонецЕсли;
			
			Если СтрокаТаблицы.Сумма <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'Товар: %ПредставлениеНоменклатуры% Сумма продажи превышает сумму реализованного товара комиссионером на %Сумма% %Валюта%'"); 
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%",
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%", СтрокаТаблицы.Сумма);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", ДокументОбъект.Валюта);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахЗаполненияВидовЗапасовПоТаблицеКОформлению(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов)
	
	Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения
		И ТаблицаОшибок.Количество() > 0 Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			ТекстСообщения = НСтр("ru = 'По организации %Организация% не хватает к оформлению %Количество% %ЕдиницаИзмерения%%Сумма% товара: %ПредставлениеНоменклатуры%%Склад% %КонтрольГТД%'");
			
			ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика,,СтрокаТаблицы.Серия);
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%" , ПредставлениеНоменклатуры); 
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.Склад) Тогда
				МестоХраненияНаименование = "";
			ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.Партнеры") Тогда
				МестоХраненияНаименование = НСтр("ru = ', у партнера'");
			ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.Организации") Тогда
				МестоХраненияНаименование = НСтр("ru = ', у организации'");
			ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
				МестоХраненияНаименование = НСтр("ru = ', в подразделении'");
			Иначе
				МестоХраненияНаименование = НСтр("ru = ', на складе'");
			КонецЕсли;
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%" , СокрЛП(МестоХраненияНаименование + " " + СтрокаТаблицы.Склад));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%" , СтрокаТаблицы.Количество);
			СуммаТекст = "";
			Если ЗначениеЗаполнено(СтрокаТаблицы.Сумма) Тогда
				СуммаТекст = НСтр("ru = ' на сумму '") + Формат(СтрокаТаблицы.Сумма, "ЧДЦ=2");
			КонецЕсли;
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%" , СуммаТекст);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%" , СтрокаТаблицы.ЕдиницаИзмерения);
			
			Если СтрокаТаблицы.НеУказанНомерГТД Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрольГТД%", НСтр("ru = 'с указанными номерами ГТД'"));
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрольГТД%", "");
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			
		КонецЦикла;
		
		Если КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов) Тогда
			НалогообложениеНДСОрганизации = Справочники.Организации.НалогообложениеНДС(ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов),
																						Неопределено,
																						ДокументОбъект.Дата);
			Если НалогообложениеНДСОрганизации <> ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС Тогда
				
				ТекстСообщения = НСтр("ru = 'Налогообложение документа отличается от налогообложения организации %НалогообложениеНДС%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НалогообложениеНДС%" , ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС); 	
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, "НалогообложениеНДС");
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ВТТаблицаОстатков

// Метод возвращает ВТ ТаблицаОстатков, используется при заполнении видов запасов.
//
// Параметры:
//	ИмяТаблицыОстатков - Строка - Имя таблицы остатков, показывает по какому из регистров будут строиться остатки.
//	ДокументОбъект - ДокументОбъект - Документ, для которого формируется таблица остатков.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер, содержит Вт ДоступныеВидыЗапасов.
//	ПараметрыЗаполненияВидовЗапасов - Структура - Отборы остатков. См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//	ВычитатьДвиженияПоТоварамОрганизаций - Неопределено, Булево - Необходимость вычитания из текущих остатков старых движений документа.
//	ДатаОстатков - Неопределено, Дата - Дата, на которую формируются остатки. Как правило, на дату документа.
//
Процедура СформироватьВТТаблицаОстатков(ИмяТаблицыОстатков,
	ДокументОбъект,
	МенеджерВременныхТаблиц,
	ПараметрыЗаполненияВидовЗапасов,
	ВычитатьДвиженияПоТоварамОрганизаций = Неопределено,
	ДатаОстатков = Неопределено) Экспорт
	
	Если ДатаОстатков = Неопределено Тогда
		Если ДокументОбъект.Проведен Тогда
			ДатаОстатков = ДокументОбъект.Дата;
		Иначе
			ДатаОстатков = Мин(ДокументОбъект.Дата, ТекущаяДатаСеанса());
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяТаблицыОстатков = "ТоварыОрганизаций" Тогда
		Если ВычитатьДвиженияПоТоварамОрганизаций = Неопределено Тогда
			ТекстИсключения = НСтр("ru = 'Ошибка формирования таблицы остатков товаров организаций: не передан параметр ВычитатьДвиженияПоТоварамОрганизаций.'");
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		ТаблицаОстатковТоваровОрганизаций(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ВычитатьДвиженияПоТоварамОрганизаций, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "КомиссионныеТоварыИнтеркампани" Тогда
		ТаблицаОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыПереданныеНаКомиссию" Тогда
		ТаблицаОстатковТоваровПереданныхНаКомиссию(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов, МенеджерВременныхТаблиц, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыПереданныеПереработчику" Тогда
		ТаблицаОстатковТоваровПереданныхПереработчику(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов, МенеджерВременныхТаблиц, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "РеализованныеТовары" Тогда
		ТаблицаОстатковРеализованныхТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыКОформлениюОтчетовКомитенту" Тогда
		ТаблицаОстатковКОформлениюОтчетаКомитенту(ДокументОбъект, МенеджерВременныхТаблиц, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыКОформлениюОтчетовКомитентуОСписании" Тогда
		ТаблицаОстатковКОформлениюОтчетаКомитентуОСписании(ДокументОбъект, МенеджерВременныхТаблиц);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыСписанныеНаРасходы" Тогда
		ТаблицаОстатковСписанныхНаРасходыТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыОрганизацийКПередаче" Тогда
		ТаблицаОстатковТоваровКПередаче(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыОрганизацийКВозврату" Тогда
		ТаблицаОстатковТоваровКВозврату(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "ОтрицательныеОстаткиТоваровОрганизации" Тогда
		ТаблицаОтрицательныеОстаткиТоваровОрганизации(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыУПартнеровПоложительныйОстаток" Тогда
		ОтрицательныеОстатки = Ложь;
		ТаблицаОстатковТоваровУПартнеров(ДокументОбъект, МенеджерВременныхТаблиц, ОтрицательныеОстатки);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыУПартнеровОтрицательныйОстаток" Тогда
		ОтрицательныеОстатки = Истина;
		ТаблицаОстатковТоваровУПартнеров(ДокументОбъект, МенеджерВременныхТаблиц, ОтрицательныеОстатки);
		
	Иначе
		ТекстИсключения = НСтр("ru = 'Неизвестное имя таблицы остатков.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаОстатковТоваровОрганизаций(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ВычитатьДвиженияПоТоварамОрганизаций, ДатаОстатков)
	
	ДокументСсылка = ДокументОбъект.Ссылка;
	Организация    = ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов);
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Резервы.Период КАК Период,
	|	Резервы.Организация КАК Организация,
	|	Резервы.ВидДвижения КАК ВидДвижения,
	|	Резервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Резервы.ВидЗапасов КАК ВидЗапасов,
	|	Резервы.НомерГТД КАК НомерГТД,
	|	Резервы.Количество КАК Количество,
	|	Резервы.КорОрганизация КАК КорОрганизация,
	|	Резервы.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ СформированныеРезервы
	|ИЗ
	|	&СформированныеРезервы КАК Резервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(Движения.Период, МЕСЯЦ) КАК ПериодМесяц,
	|	КОНЕЦПЕРИОДА(Движения.Период, ДЕНЬ) КАК ПериодДень,
	|	Движения.Организация,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.НомерГТД,
	|	СУММА(Движения.Количество) КАК Количество
	|ПОМЕСТИТЬ ДвиженияДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Период КАК Период,
	|		Товары.Организация КАК Организация,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.НомерГТД КАК НомерГТД,
	|		ВЫБОР
	|			КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -Товары.Количество
	|			ИНАЧЕ Товары.Количество
	|		КОНЕЦ КАК Количество
	|	ИЗ
	|		ДвиженияТоварыОрганизацийПередЗаписью КАК Товары
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|		ПО ДоступныеВидыЗапасов.ДляОрганизации = Товары.Организация
	|			И ДоступныеВидыЗапасов.ВидЗапасов = Товары.ВидЗапасов
	|	ГДЕ
	|		&ВычитатьДвиженияПоТоварамОрганизаций
	|		И (НЕ &ЭтоРасходТоваровОрганизацийНаПроизводство
	|			ИЛИ Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Товары.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // Погашение резервов по схеме интеркампани, используется в документах передачи
	|		Резервы.Период,
	|		Резервы.Организация,
	|		Резервы.АналитикаУчетаНоменклатуры,
	|		Резервы.ВидЗапасов,
	|		Резервы.НомерГТД,
	|		ВЫБОР
	|			КОГДА Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -Резервы.Количество
	|			ИНАЧЕ Резервы.Количество
	|		КОНЕЦ	
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ОтборыОстатковОрганизаций
	|			ПО ОтборыОстатковОрганизаций.ВидЗапасов = Резервы.ВидЗапасов
	|				И ОтборыОстатковОрганизаций.Организация = Резервы.Организация // владелец товара
	|				И ОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры = Резервы.АналитикаУчетаНоменклатуры
	|	ГДЕ
	|		Резервы.КорВидЗапасов В (&КорВидыЗапасов) // продавец товара
	|		И (Резервы.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ИЛИ НЕ Резервы.ВидЗапасов В (&КорВидыЗапасов))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // Погашение резервов за счет выкупа у поклажедателя
	|		Резервы.Период,
	|		Резервы.Организация,
	|		Резервы.АналитикаУчетаНоменклатуры,
	|		Резервы.ВидЗапасов,
	|		Резервы.НомерГТД,
	|		-Резервы.Количество
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ОтборыОстатковОрганизаций
	|			ПО Резервы.АналитикаУчетаНоменклатуры = ОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры
	|				И Резервы.ВидЗапасов = ОтборыОстатковОрганизаций.ВидЗапасов
	|				И Резервы.Организация = ОтборыОстатковОрганизаций.Организация // владелец товара
	|				И Резервы.КорОрганизация = ОтборыОстатковОрганизаций.Организация // продавец товара
	|	
	|	ГДЕ
	|		Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Резервы.ВидЗапасов <> Резервы.КорВидЗапасов
	|		И &ЭтоВыкупТоваров
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Резервы.Период,
	|		Резервы.Организация,
	|		Резервы.АналитикаУчетаНоменклатуры,
	|		Резервы.ВидЗапасов,
	|		Резервы.НомерГТД,
	|		ВЫБОР
	|			КОГДА Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Резервы.Количество
	|			ИНАЧЕ -Резервы.Количество
	|		КОНЕЦ
	|	ИЗ
	|		СформированныеРезервы КАК Резервы
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|			ПО ДоступныеВидыЗапасов.ДляОрганизации = Резервы.Организация
	|				И ДоступныеВидыЗапасов.ВидЗапасов = Резервы.ВидЗапасов
	|	ГДЕ
	|		Резервы.ВидЗапасов В (&КорВидыЗапасов) // продавец товара
	|		И ВЫРАЗИТЬ(Резервы.ВидЗапасов КАК Справочник.ВидыЗапасов).ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ИЛИ НЕ Резервы.КорВидЗапасов В (&КорВидыЗапасов)
	|
	|	) КАК Движения
	|
	|СГРУППИРОВАТЬ ПО
	|	КОНЕЦПЕРИОДА(Движения.Период, МЕСЯЦ),
	|	КОНЕЦПЕРИОДА(Движения.Период, ДЕНЬ),
	|	Движения.Организация,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ДатыПоступленияТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления,
	|	ДатыПоступленияТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ДатыПоступленияТоваровОрганизаций.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ВТДатыПоступленияТоваровОрганизаций
	|ИЗ
	|	ВТОтборыОстатковОрганизаций КАК ВТОтборыОстатковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО ВТОтборыОстатковОрганизаций.Номенклатура = ДатыПоступленияТоваровОрганизаций.Номенклатура
	|			И ВТОтборыОстатковОрганизаций.Характеристика = ДатыПоступленияТоваровОрганизаций.Характеристика
	|			И ВТОтборыОстатковОрганизаций.Серия = ДатыПоступленияТоваровОрганизаций.Серия
	|			И ВТОтборыОстатковОрганизаций.Назначение = ДатыПоступленияТоваровОрганизаций.Назначение
	|			И ВТОтборыОстатковОрганизаций.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СгруппированныеОстатки.Период КАК Период,
	|	СгруппированныеОстатки.Организация КАК Организация,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов КАК ВидЗапасов,
	|	СгруппированныеОстатки.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(СгруппированныеОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(СгруппированныеОстатки.СчетчикПериодов) КАК СчетчикПериодов
	|ПОМЕСТИТЬ СгруппированныеОстатки
	|ИЗ
	|	ТекстЗапросаСгруппированныеОстатки КАК СгруппированныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Период,
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(СгруппированныеОстатки.КоличествоОстаток) <> 0 ИЛИ &ПериодЗаполнения <> ДАТАВРЕМЯ(1,1,1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД";
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапросаСгруппированныеОстатки = 
	"ВЫБРАТЬ
	|	&ДатаТекущихОстатков КАК Период,
	|	ОстаткиНаПоследнееДвижение.Организация КАК Организация,
	|	ОстаткиНаПоследнееДвижение.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиНаПоследнееДвижение.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиНаПоследнееДвижение.НомерГТД КАК НомерГТД,
	|	1 КАК СчетчикПериодов,
	|	СУММА(ОстаткиНаПоследнееДвижение.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.Организация КАК Организация,
	|		Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.Остатки(&ПериодТекущихОстатков
	|				,
	|					(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|						(ВЫБРАТЬ
	|							ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|							ТаблицаТоваров.Организация,
	|							ТаблицаТоваров.ВидЗапасов
	|						ИЗ
	|							ВТОтборыОстатковОрганизаций КАК ТаблицаТоваров)) КАК Остатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.Организация,
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов,
	|		Остатки.НомерГТД,
	|		Остатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций.Остатки(&ПериодТекущихОстатков
	|				,
	|					(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|						(ВЫБРАТЬ
	|							ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|							ТаблицаТоваров.Организация,
	|							ТаблицаТоваров.ВидЗапасов
	|						ИЗ
	|							ВТОтборыОстатковОрганизаций КАК ТаблицаТоваров)) КАК Остатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокумента.Организация,
	|		ДвиженияДокумента.АналитикаУчетаНоменклатуры,
	|		ДвиженияДокумента.ВидЗапасов,
	|		ДвиженияДокумента.НомерГТД,
	|		-ДвиженияДокумента.Количество
	|	ИЗ
	|		ДвиженияДокумента КАК ДвиженияДокумента
	|	ГДЕ
	|		(ДвиженияДокумента.ПериодМесяц >= &ПериодЗаполнения ИЛИ &ПериодЗаполнения = ДАТАВРЕМЯ(1,1,1))
	|	
	|	//%ТекстПриходуемыеВидыЗапасов%
	|
	|	) КАК ОстаткиНаПоследнееДвижение
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНаПоследнееДвижение.Организация,
	|	ОстаткиНаПоследнееДвижение.АналитикаУчетаНоменклатуры,
	|	ОстаткиНаПоследнееДвижение.ВидЗапасов,
	|	ОстаткиНаПоследнееДвижение.НомерГТД";
	
	ДатаПоследнегоДвижения = Неопределено;
	ДокументОбъект.ДополнительныеСвойства.Свойство("ОкончаниеПериодаПомощникаИсправленияОстатков", ДатаПоследнегоДвижения);
	Если ДатаПоследнегоДвижения = Неопределено Тогда 
		ДатаПоследнегоДвижения = ДатаПоследнегоДвижения();
	КонецЕсли;
	
	СчетчикПериодов = 1;
	
	// Если последние движения находятся в том же месяце, что и документ, то используем только текущие остатки,
	// иначе добавляем остатки на каждый месяц.
	Если КонецМесяца(ДатаПоследнегоДвижения) > КонецМесяца(ДатаОстатков) Тогда
		
		ТекстЗапросаСгруппированныеОстатки = ТекстЗапросаСгруппированныеОстатки + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
		
		// Движения последнего месяца уже включены в таблицу текущих остатков.
		ПредпоследнийМесяц = КонецМесяца(ДобавитьМесяц(ДатаПоследнегоДвижения, -1));
		
		// За последние три года возможна налоговая проверка.
		ТриГодаНазад = КонецМесяца(ДобавитьМесяц(ДатаПоследнегоДвижения, -36)); 
		
		Если ДатаОстатков < ТриГодаНазад Тогда
			ПервыйМесяц = ТриГодаНазад;
		Иначе
			ПервыйМесяц = КонецМесяца(ДатаОстатков);
		КонецЕсли;
		
		ДополнитьЗапросКонтролемОстатковНаКаждыйМесяц(Запрос, ТекстЗапросаСгруппированныеОстатки, ПервыйМесяц, ПредпоследнийМесяц, ПараметрыЗаполненияВидовЗапасов, СчетчикПериодов);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстЗапросаСгруппированныеОстатки", "(" + ТекстЗапросаСгруппированныеОстатки + ")");
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	СгруппированныеОстатки.Период КАК Период,
	|	СгруппированныеОстатки.Организация КАК Организация,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов КАК ВидЗапасов,
	|	СгруппированныеОстатки.НомерГТД КАК НомерГТД,
	|	ДатыПоступленияТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
	|	КлючиАналитикиУчетаНоменклатуры.Склад КАК Склад,
	|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА НЕ СгруппированныеОстатки.Организация В (&Организация)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РеализацияЗапасовДругойОрганизации,
	|	0 КАК СуммаОстаток,
	|	СгруппированныеОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	СгруппированныеОстатки.СчетчикПериодов КАК СчетчикПериодов
	|ПОМЕСТИТЬ ТекстТаблицаОстатков
	|ИЗ
	|	СгруппированныеОстатки КАК СгруппированныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО СгруппированныеОстатки.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|			И СгруппированныеОстатки.АналитикаУчетаНоменклатуры = ДатыПоступленияТоваровОрганизаций.АналитикаУчетаНоменклатуры
	|			И СгруппированныеОстатки.НомерГТД = ДатыПоступленияТоваровОрганизаций.НомерГТД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО СгруппированныеОстатки.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|ГДЕ
	|	СгруппированныеОстатки.СчетчикПериодов >= &ВсегоПериодов
	|	ИЛИ СгруппированныеОстатки.КоличествоОстаток < 0
	|	ИЛИ &ПодбиратьЗапасыРазныхПериодов";
	
	Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
		
		Если ПараметрыЗаполненияВидовЗапасов.ЕстьТаблицаПриходуемыхВидовЗапасов Тогда
			ТекстПриходуемыеВидыЗапасов = "
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ //Дополнительные виды запасов, приходуемые документом
			|	ТаблицаВидыЗапасов.Организация                КАК Организация,
			|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
			|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
			|	ТаблицаВидыЗапасов.Количество                 КАК Количество
			|ИЗ
			|	ПриходуемыеВидыЗапасов КАК ТаблицаВидыЗапасов
			|";
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстПриходуемыеВидыЗапасов%", ТекстПриходуемыеВидыЗапасов);
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстТаблицаОстатков", "ТаблицаОстатковПоПериодам");
		
		Запрос.УстановитьПараметр("ПериодЗаполнения", ДатаОстатков);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстТаблицаОстатков", "ТаблицаОстатков");
		Запрос.УстановитьПараметр("ПериодЗаполнения", Дата(1,1,1));
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаТоваровМеждуОрганизациями") Тогда
		Запрос.УстановитьПараметр("КорОрганизация", ПараметрыЗаполненияВидовЗапасов.ПриПодбореПоИнтеркампаниИсключатьОрганизации);
	Иначе
		Запрос.УстановитьПараметр("КорОрганизация", Справочники.Организации.ПустаяСсылка());
	КонецЕсли;
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") Тогда
		СформированныеРезервы = ДокументОбъект.ДополнительныеСвойства.ТаблицаРезервыТоваровОрганизаций.Скопировать();
	Иначе
		СформированныеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТСторноРезервов") <> Неопределено Тогда
		ЗапросСторно = Новый Запрос("ВЫБРАТЬ * ИЗ ВТСторноРезервов");
		ЗапросСторно.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(СформированныеРезервы, ЗапросСторно.Выполнить().Выгрузить());
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТРезервыПоОрганизациямДляКонтроля") <> Неопределено Тогда
		ЗапросРезервыДругихОрганизаций = Новый Запрос("ВЫБРАТЬ * ИЗ ВТРезервыПоОрганизациямДляКонтроля");
		ЗапросРезервыДругихОрганизаций.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(СформированныеРезервы, ЗапросРезервыДругихОрганизаций.Выполнить().Выгрузить());
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ДатаОстатков));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ДатаОстатков));
	Запрос.УстановитьПараметр("ГраницаМесяца", Новый Граница(КонецМесяца(ДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГраницаДня", Новый Граница(КонецДня(ДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаОстатков);
	Запрос.УстановитьПараметр("ВычитатьДвиженияПоТоварамОрганизаций", ВычитатьДвиженияПоТоварамОрганизаций);
	Запрос.УстановитьПараметр("СформированныеРезервы", СформированныеРезервы);
	Запрос.УстановитьПараметр("КорВидыЗапасов", ПараметрыЗаполненияВидовЗапасов.КорВидыЗапасов);
	Запрос.УстановитьПараметр("ЭтоВыкупТоваров", Ложь);
	Запрос.УстановитьПараметр("ДатаТекущихОстатков", 
		?(ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов, КонецМесяца(ТекущаяДатаСеанса()), Дата(1, 1, 1)));
	Запрос.УстановитьПараметр("ПодбиратьЗапасыРазныхПериодов", ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов);
	Запрос.УстановитьПараметр("ВсегоПериодов", СчетчикПериодов);
	Запрос.УстановитьПараметр("ЭтоРасходТоваровОрганизацийНаПроизводство", ПараметрыЗаполненияВидовЗапасов.ЭтоРасходТоваровОрганизацийНаПроизводство);
	
	ОкончаниеПериодаПомощникаИсправленияОстатков = Неопределено;
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("ОкончаниеПериодаПомощникаИсправленияОстатков", ОкончаниеПериодаПомощникаИсправленияОстатков) Тогда
		Запрос.УстановитьПараметр("ПериодТекущихОстатков", Новый Граница(ОкончаниеПериодаПомощникаИсправленияОстатков, ВидГраницы.Включая));
	Иначе
		Запрос.УстановитьПараметр("ПериодТекущихОстатков", Неопределено);
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"УНИЧТОЖИТЬ ДвиженияДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СформированныеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СгруппированныеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДатыПоступленияТоваровОрганизаций
	|";
	Запрос.Выполнить();

КонецПроцедуры

Процедура ТаблицаОстатковТоваровУПартнеров(ДокументОбъект, МенеджерВременныхТаблиц, ОтрицательныеОстатки)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтОтборыОстатковОрганизаций.Номенклатура               КАК Номенклатура,
	|	ВтОтборыОстатковОрганизаций.Характеристика             КАК Характеристика,
	|	ВтОтборыОстатковОрганизаций.Серия                      КАК Серия,
	
	|	(ВЫБОР КОГДА
	|		ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям, ЛОЖЬ)
	|		И (ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетСерийВНеотфактурованныхПоставкахТоваров, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетТоваровВПутиОтПоставщикаПоСериям, ЛОЖЬ))
	|		ТОГДА
	|			ВтОтборыОстатковОрганизаций.Серия
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ) КАК СерияДляОтбора,
	
	|	ВтОтборыОстатковОрганизаций.Назначение                 КАК Назначение,
	|	ВтОтборыОстатковОрганизаций.ВидЗапасов                 КАК ВидЗапасов,
	|	ВтОтборыОстатковОрганизаций.НомерГТД                   КАК НомерГТД,
	|	&Партнер                                               КАК Партнер,
	|	&Контрагент                                            КАК Контрагент,
	|	&Договор                                               КАК Договор
	|ПОМЕСТИТЬ ВТОтбор
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВтОтборыОстатковОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Назначение,
	|	ВидЗапасов,
	|	Партнер,
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыУПартнеровОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыУПартнеровОстатки.Характеристика КАК Характеристика,
	|	ТоварыУПартнеровОстатки.Серия КАК Серия,
	|	ТоварыУПартнеровОстатки.Назначение КАК Назначение,
	|	ТоварыУПартнеровОстатки.НомерГТД,
	|	ТоварыУПартнеровОстатки.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыУПартнеровОстатки.ПереданоОстаток
	|ПОМЕСТИТЬ ТоварыУПартнеровОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыУПартнеров.Остатки(
	|			,
	|			(Номенклатура, Характеристика, Серия, 
	|				Назначение, ВидЗапасов, Партнер, Контрагент, Договор, НомерГТД) В
	|				(ВЫБРАТЬ
	|					ВТОтбор.Номенклатура,
	|					ВТОтбор.Характеристика,
	|					ВТОтбор.СерияДляОтбора,
	|					ВТОтбор.Назначение,
	|					ВТОтбор.ВидЗапасов,
	|					ВТОтбор.Партнер,
	|					ВТОтбор.Контрагент,
	|					ВТОтбор.Договор,
	|					ВТОтбор.НомерГТД
	|				ИЗ
	|					ВТОтбор КАК ВТОтбор)) КАК ТоварыУПартнеровОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Назначение,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ВидЗапасов.Организация КАК Организация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.ВидЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовПолучателя,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовОтгрузки,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
	|	ВложенныйЗапрос.Назначение КАК Назначение,
	|	ВложенныйЗапрос.НомерГТД,
	|	СУММА(&ТекстПередано) КАК КоличествоОстаток,
	|	СУММА(0) КАК НаДатуКонтроля,
	|	СУММА(0) КАК НаДатуАктуальности,
	|	СУММА(0) КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТОтбор.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыУПартнеровОстатки.Номенклатура КАК Номенклатура,
	|		ТоварыУПартнеровОстатки.Характеристика КАК Характеристика,
	|		ТоварыУПартнеровОстатки.Серия КАК Серия,
	|		ТоварыУПартнеровОстатки.Назначение КАК Назначение,
	|		ТоварыУПартнеровОстатки.НомерГТД КАК НомерГТД,
	|		ТоварыУПартнеровОстатки.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыУПартнеровОстатки.ПереданоОстаток КАК Передано
	|	ИЗ
	|		ТоварыУПартнеровОстатки КАК ТоварыУПартнеровОстатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтбор КАК ВТОтбор
	|			ПО ТоварыУПартнеровОстатки.Номенклатура = ВТОтбор.Номенклатура
	|				И ТоварыУПартнеровОстатки.Характеристика = ВТОтбор.Характеристика
	|				И ТоварыУПартнеровОстатки.Серия = ВТОтбор.СерияДляОтбора
	|				И ТоварыУПартнеровОстатки.Назначение = ВТОтбор.Назначение
	|				И ТоварыУПартнеровОстатки.ВидЗапасов = ВТОтбор.ВидЗапасов
	|				И ТоварыУПартнеровОстатки.НомерГТД = ВТОтбор.НомерГТД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТОтбор.АналитикаУчетаНоменклатуры,
	|		ТоварыУПартнеров.Номенклатура,
	|		ТоварыУПартнеров.Характеристика,
	|		ТоварыУПартнеров.Серия,
	|		ТоварыУПартнеров.Назначение,
	|		ТоварыУПартнеров.НомерГТД,
	|		ТоварыУПартнеров.ВидЗапасов,
	|		ТоварыУПартнеров.Передано
	|	ИЗ
	|		РегистрНакопления.ТоварыУПартнеров КАК ТоварыУПартнеров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтбор КАК ВТОтбор
	|			ПО ТоварыУПартнеров.Номенклатура = ВТОтбор.Номенклатура
	|				И ТоварыУПартнеров.Характеристика = ВТОтбор.Характеристика
	|				И ТоварыУПартнеров.Серия = ВТОтбор.СерияДляОтбора
	|				И ТоварыУПартнеров.Назначение = ВТОтбор.Назначение
	|				И ТоварыУПартнеров.ВидЗапасов = ВТОтбор.ВидЗапасов
	|				И ТоварыУПартнеров.Партнер = ВТОтбор.Партнер
	|				И ТоварыУПартнеров.Контрагент = ВТОтбор.Контрагент
	|				И ТоварыУПартнеров.Договор = ВТОтбор.Договор
	|				И ТоварыУПартнеров.НомерГТД = ВТОтбор.НомерГТД
	|	ГДЕ
	|		ТоварыУПартнеров.Регистратор = &Регистратор) КАК ВложенныйЗапрос
	|ГДЕ
	|	&ТекстВариантОстатков
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.ВидЗапасов.Организация,
	|	ВложенныйЗапрос.ВидЗапасов.ВидЗапасовВладельца,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыУПартнеровОстатки";
	
	ТекстЗапроса = ТекстЗапроса + " 
	|;
	|//////////////////////////////
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"&ТекстВариантОстатков",
		?(ОтрицательныеОстатки, "Передано < 0", "Передано > 0"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"&ТекстПередано",
		?(ОтрицательныеОстатки, "-Передано", "Передано"));
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Партнер", ДокументОбъект.Партнер);
	Запрос.УстановитьПараметр("Договор", ДокументОбъект.Договор);
	Запрос.УстановитьПараметр("Контрагент", ДокументОбъект.Контрагент);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", ДокументОбъект.Ссылка);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков комиссионных товаров инеркампани.
//
Процедура ТаблицаОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(ДанныеСчетаФактуры.Дата, ТоварыКОформлению.ДатаСчетаФактуры), ДЕНЬ) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(ДанныеСчетаФактуры.Ссылка, ЕСТЬNULL(ДанныеСчетаФактурыОтчетаКомитенту.Ссылка, НЕОПРЕДЕЛЕНО)) КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ОтчетОРозничныхПродажах)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ДанныеРеализации.Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|			ТОГДА ПередачаТоваров.ОрганизацияПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА Возврат.Контрагент
	|		КОГДА ТоварыКОформлению.Покупатель = НЕОПРЕДЕЛЕНО
	|				ИЛИ ТоварыКОформлению.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		ИНАЧЕ ТоварыКОформлению.Покупатель
	|	КОНЕЦ КАК Покупатель,
	|	ВЫБОР
	|		КОГДА (ВЫБОР
	|					КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА ВЫБОР
	|								КОГДА &ЭтоОтчетОСписании
	|									ТОГДА ТоварыКОформлению.КоличествоСписано
	|								ИНАЧЕ ТоварыКОформлению.Количество
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|								ТОГДА 0
	|							КОГДА &ЭтоОтчетОСписании
	|								ТОГДА -ТоварыКОформлению.КоличествоСписано
	|							ИНАЧЕ -ТоварыКОформлению.Количество
	|						КОНЕЦ
	|				КОНЕЦ) >= 0
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК Знак,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ВЫБОР
	|						КОГДА &ЭтоОтчетОСписании
	|							ТОГДА ТоварыКОформлению.КоличествоСписано
	|						ИНАЧЕ ТоварыКОформлению.Количество
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|						ТОГДА 0
	|					КОГДА &ЭтоОтчетОСписании
	|						ТОГДА -ТоварыКОформлению.КоличествоСписано
	|					ИНАЧЕ -ТоварыКОформлению.Количество
	|				КОНЕЦ
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ТоварыКОформлению.СуммаВыручки
	|			ИНАЧЕ -ТоварыКОформлению.СуммаВыручки
	|		КОНЕЦ) КАК СуммаВыручки,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|					И &ЭтоОтчетОСписании
	|				ТОГДА ТоварыКОформлению.КоличествоСписано
	|			КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|				ТОГДА ТоварыКОформлению.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоВДокументе
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК Отборы
	|		ПО (Отборы.АналитикаУчетаНоменклатуры = ТоварыКОформлению.АналитикаУчетаНоменклатуры)
	|			И (Отборы.ВидЗапасов = ТоварыКОформлению.ВидЗапасов)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК Возврат
	|		ПО (Возврат.Ссылка = ТоварыКОформлению.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ДанныеСчетаФактуры
	|		ПО ТоварыКОформлению.ДокументРеализации = ДанныеСчетаФактуры.ДокументОснование
	|			И (ТоварыКОформлению.ДокументРеализации <> НЕОПРЕДЕЛЕНО)
	|			И (НЕ ДанныеСчетаФактуры.ПометкаУдаления)
	|			И (НЕ ТоварыКОформлению.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|				ИЛИ Возврат.ПокупательНеПлательщикНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ДанныеСчетаФактурыОтчетаКомитенту
	|		ПО ТоварыКОформлению.НомерСчетаФактуры = ДанныеСчетаФактурыОтчетаКомитенту.Номер
	|			И (ТоварыКОформлению.ДатаСчетаФактуры = НАЧАЛОПЕРИОДА(ДанныеСчетаФактурыОтчетаКомитенту.Дата, ДЕНЬ))
	|			И (ДанныеСчетаФактурыОтчетаКомитенту.Организация = &Организация)
	|			И ТоварыКОформлению.Покупатель = ДанныеСчетаФактурыОтчетаКомитенту.Контрагент
	|			И (НЕ ДанныеСчетаФактурыОтчетаКомитенту.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ДанныеРеализации
	|		ПО ТоварыКОформлению.ДокументРеализации = ДанныеРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваров
	|		ПО ТоварыКОформлению.ДокументРеализации = ПередачаТоваров.Ссылка
	|ГДЕ
	|	ТоварыКОформлению.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТоварыКОформлению.Активность
	|	И ТоварыКОформлению.Регистратор <> &ТекущийОтчет
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(ДанныеСчетаФактуры.Дата, ТоварыКОформлению.ДатаСчетаФактуры), ДЕНЬ),
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ОтчетОРозничныхПродажах)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ДанныеРеализации.Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|			ТОГДА ПередачаТоваров.ОрганизацияПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА Возврат.Контрагент
	|		КОГДА ТоварыКОформлению.Покупатель = НЕОПРЕДЕЛЕНО
	|				ИЛИ ТоварыКОформлению.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		ИНАЧЕ ТоварыКОформлению.Покупатель
	|	КОНЕЦ,
	|	ЕСТЬNULL(ДанныеСчетаФактуры.Ссылка, ЕСТЬNULL(ДанныеСчетаФактурыОтчетаКомитенту.Ссылка, НЕОПРЕДЕЛЕНО)),
	|	ТоварыКОформлению.АналитикаУчетаНоменклатуры,
	|	ТоварыКОформлению.ВидЗапасов,
	|	ТоварыКОформлению.НомерГТД,
	|	ВЫБОР
	|		КОГДА (ВЫБОР
	|					КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА ВЫБОР
	|								КОГДА &ЭтоОтчетОСписании
	|									ТОГДА ТоварыКОформлению.КоличествоСписано
	|								ИНАЧЕ ТоварыКОформлению.Количество
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|								ТОГДА 0
	|							КОГДА &ЭтоОтчетОСписании
	|								ТОГДА -ТоварыКОформлению.КоличествоСписано
	|							ИНАЧЕ -ТоварыКОформлению.Количество
	|						КОНЕЦ
	|				КОНЕЦ) >= 0
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ВЫБОР
	|						КОГДА &ЭтоОтчетОСписании
	|							ТОГДА ТоварыКОформлению.КоличествоСписано
	|						ИНАЧЕ ТоварыКОформлению.Количество
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|						ТОГДА 0
	|					КОГДА &ЭтоОтчетОСписании
	|						ТОГДА -ТоварыКОформлению.КоличествоСписано
	|					ИНАЧЕ -ТоварыКОформлению.Количество
	|				КОНЕЦ
	|		КОНЕЦ) <> 0";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Граница = Новый Граница(ДокументОбъект.КонецПериода, ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Граница", Граница);
	Запрос.УстановитьПараметр("НачалоПериода", ДокументОбъект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ДокументОбъект.КонецПериода));
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТекущийОтчет", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ЭтоОтчетОСписании", ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациямиОСписании"));
	
	Запрос.Выполнить();
КонецПроцедуры

// Процедура формирует таблицу остатков товаров, переданных на комиссию.
//
Процедура ТаблицаОстатковТоваровПереданныхНаКомиссию(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов, МенеджерВременныхТаблиц, ДатаОстатков) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.ДокументРеализации	
	|ПОМЕСТИТЬ Основания
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВтОтборПоНоменклатуре
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК Отборы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО Отборы.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВТОтборПоАналитикамПартнера
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Товары.Номенклатура = Аналитика.Номенклатура
	|		И Товары.Характеристика = Аналитика.Характеристика
	|		И Товары.Назначение = Аналитика.Назначение
	|		И Аналитика.Склад = &Партнер
	|		И Товары.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.НомерГТД,
	|	СУММА(Движения.Количество) КАК Количество
	|ПОМЕСТИТЬ ПереданныеТовары
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК Движения
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Основания КАК Основания
	|	ПО Основания.ДокументРеализации = Движения.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // Остатки товаров организации на конец месяца
	|	Остатки.Организация КАК Организация,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.Соглашение КАК Соглашение,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ НаКонецМесяца
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&ГраницаМесяца,
	|		Организация = &Организация
	|		И Соглашение = &Соглашение
	|		И АналитикаУчетаНоменклатуры В (
	|			ВЫБРАТЬ
	|				Отбор.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ВТОтборПоАналитикамПартнера КАК Отбор
	|			)
	|	) КАК Остатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Остатки.Организация,
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	Остатки.Соглашение,
	|	Остатки.ВидЗапасов,
	|	Остатки.НомерГТД,
	|	Остатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&ГраницаМесяца,
	|		Организация = &Организация
	|		И Соглашение = &Соглашение
	|		И (АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД) В (
	|			ВЫБРАТЬ
	|				АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД
	|			ИЗ
	|				ПереданныеТовары КАК ПереданныеТовары
	|			)
	|	) КАК Остатки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // Остатки товаров организации на дату актуальности
	|	Остатки.Организация КАК Организация,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.Соглашение КАК Соглашение,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток
	|
	|ПОМЕСТИТЬ НаДатуАктуальности
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(,
	|		Организация = &Организация
	|		И Соглашение = &Соглашение
	|		И АналитикаУчетаНоменклатуры В (
	|			ВЫБРАТЬ
	|				Отбор.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ВТОтборПоАналитикамПартнера КАК Отбор
	|			)
	|	) КАК Остатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Остатки.Организация,
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	Остатки.Соглашение,
	|	Остатки.ВидЗапасов,
	|	Остатки.НомерГТД,
	|	(ВЫБОР
	|		КОГДА ПереданныеТовары.Количество < Остатки.КоличествоОстаток ТОГДА ПереданныеТовары.Количество
	|		ИНАЧЕ Остатки.КоличествоОстаток КОНЕЦ) КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(,
	|		Организация = &Организация
	|		И Соглашение = &Соглашение
	|		И (АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД) В (
	|			ВЫБРАТЬ
	|				АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД
	|			ИЗ
	|				ПереданныеТовары КАК ПереданныеТовары
	|			)
	|	) КАК Остатки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПереданныеТовары КАК ПереданныеТовары
	|		ПО ПереданныеТовары.АналитикаУчетаНоменклатуры = Остатки.АналитикаУчетаНоменклатуры
	|		И ПереданныеТовары.ВидЗапасов = Остатки.ВидЗапасов
	|		И ПереданныеТовары.НомерГТД = Остатки.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	Соглашение,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	Аналитика.Склад КАК СкладОтгрузки,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВидыЗапасов.РеализацияЗапасовДругойОрганизации, ЛОЖЬ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|   ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	Аналитика.Назначение КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ТоварыОрганизаций.Знак,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, списанные документом Отчет комиссионера
	|		Движения.Организация КАК Организация,
	|		Движения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Движения.ВидЗапасов КАК ВидЗапасов,
	|		Движения.НомерГТД КАК НомерГТД,
	|		Движения.Количество КАК Количество,
	|		0 КАК Знак,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию КАК Движения
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			Движения.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			Движения.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И Движения.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И Движения.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И Движения.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И Движения.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	ГДЕ
	|		Движения.Период <= &КонецПериода
	|		И Движения.Регистратор = &Ссылка
	|		И Движения.Активность
	|		И Движения.Организация = &Организация
	|		И Аналитика.Склад = &Партнер
	|		И Движения.Соглашение = &Соглашение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, переданные и возвращенные между организациями
	|		Товары.Организация КАК Организация,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.НомерГТД КАК НомерГТД,
	|		(ВЫБОР КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -Товары.Количество
	|				ИНАЧЕ Товары.Количество
	|			КОНЕЦ) КАК Количество,
	|		(ВЫБОР КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -1
	|				ИНАЧЕ 1
	|		КОНЕЦ) КАК Знак,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию КАК Товары
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Товары.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|			ПО Товары.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И Товары.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И Товары.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И Товары.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И Товары.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|
	|	ГДЕ
	|		&ЭтоОтчетПоКомиссии
	|		И Товары.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Товары.Регистратор <> &Ссылка
	|		И Товары.Активность
	|		И Товары.Организация = &Организация
	|		И Аналитика.Склад = &Партнер
	|		И Товары.Соглашение = &Соглашение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, переданные на комисcию
	|		НаКонецМесяца.Организация КАК Организация,
	|		НаКонецМесяца.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		НаКонецМесяца.ВидЗапасов КАК ВидЗапасов,
	|		НаКонецМесяца.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА НаКонецМесяца.КоличествоОстаток >= ЕСТЬNULL(НаДатуАктуальности.КоличествоОстаток, 0) ТОГДА
	|			ЕСТЬNULL(НаДатуАктуальности.КоличествоОстаток, 0)
	|		ИНАЧЕ
	|			НаКонецМесяца.КоличествоОстаток
	|		КОНЕЦ КАК Количество,
	|		0 КАК Знак,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		НаКонецМесяца КАК НаКонецМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаДатуАктуальности КАК НаДатуАктуальности
	|			ПО НаДатуАктуальности.Организация = НаКонецМесяца.Организация
	|			И НаДатуАктуальности.АналитикаУчетаНоменклатуры = НаКонецМесяца.АналитикаУчетаНоменклатуры
	|			И НаДатуАктуальности.Соглашение = НаКонецМесяца.Соглашение
	|			И НаДатуАктуальности.ВидЗапасов = НаКонецМесяца.ВидЗапасов
	|			И НаДатуАктуальности.НомерГТД = НаКонецМесяца.НомерГТД
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО НаКонецМесяца.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И НаКонецМесяца.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И НаКонецМесяца.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И НаКонецМесяца.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И НаКонецМесяца.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Возвратная тара, списанная документом
	|		Движения.ВидЗапасов.Организация КАК Организация,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Движения.ВидЗапасов КАК ВидЗапасов,
	|		Движения.НомерГТД КАК НомерГТД,
	|		Движения.Количество КАК Количество,
	|		0 КАК Знак,
	|		Движения.ДокументПередачи.Дата КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара КАК Движения
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Движения.Номенклатура = Аналитика.Номенклатура
	|			И Движения.Характеристика = Аналитика.Характеристика
	|			И Движения.Партнер = Аналитика.Склад
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ГДЕ
	|		Движения.Регистратор = &Ссылка
	|		И Движения.Активность
	|		И Движения.ВидЗапасов.Организация = &Организация
	|		И Движения.Партнер = &Партнер
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Переданная возвратная тара
	|		Остатки.ВидЗапасов.Организация КАК Организация,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК Количество,
	|		0 КАК Знак,
	|		ДокументПередачи.Дата КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(&ГраницаМесяца,
	|			ВидЗапасов.Организация = &Организация
	|			И Партнер = &Партнер
	|			И (Номенклатура, Характеристика) В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВтОтборПоНоменклатуре.Номенклатура,
	|					ВтОтборПоНоменклатуре.Характеристика
	|				ИЗ
	|					ВтОтборПоНоменклатуре КАК ВтОтборПоНоменклатуре
	|				)
	|		) КАК Остатки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Остатки.Номенклатура = Аналитика.Номенклатура
	|			И Остатки.Характеристика = Аналитика.Характеристика
	|			И Остатки.Партнер = Аналитика.Склад
	|			И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|	) КАК ТоварыОрганизаций
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО ТоварыОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	Аналитика.Склад,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВидыЗапасов.РеализацияЗапасовДругойОрганизации, ЛОЖЬ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	Аналитика.Назначение,
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.Знак
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОтборПоНоменклатуре
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтборПоАналитикамПартнера
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НаКонецМесяца
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НаДатуАктуальности
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|";
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") 
		ИЛИ ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациямиОСписании") Тогда
		Запрос.УстановитьПараметр("Соглашение", Справочники.СоглашенияСКлиентами.ПустаяСсылка());
		Запрос.УстановитьПараметр("ЭтоОтчетПоКомиссии", Истина);
		Запрос.УстановитьПараметр("Партнер", ДокументОбъект.Комиссионер);
	Иначе
		Запрос.УстановитьПараметр("Соглашение", ДокументОбъект.Соглашение);
		Запрос.УстановитьПараметр("ЭтоОтчетПоКомиссии", Ложь);
		Запрос.УстановитьПараметр("Партнер", ДокументОбъект.Партнер);
	КонецЕсли;
	Запрос.УстановитьПараметр("ГраницаМесяца", Новый Граница(КонецМесяца(ДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаОстатков));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ДатаОстатков));
	Запрос.УстановитьПараметр("ЭтоОтчетПоКомиссии", ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями"));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков реализованных товаров.
//
Процедура ТаблицаОстатковРеализованныхТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата
	|ПОМЕСТИТЬ ДокументыРеализации
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО ИСТИНА
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументРеализации
	|
	|ГДЕ
	|	(ДанныеДокумента.ХозяйственнаяОперация = &ХозяйственнаяОперацияДокументаРеализации
	|	И ДанныеДокумента.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ))
	|	ИЛИ ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументРеализации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО ИСТИНА
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументРеализации
	|
	|ГДЕ
	|	&ХозяйственнаяОперацияДокументаРеализации = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВРозницу)
	|	И ДанныеДокумента.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ДокументыВозврата
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ДанныеДокумента.Организация = ТаблицаДанныхДокумента.Организация
	|		И ДанныеДокумента.Партнер = ТаблицаДанныхДокумента.Партнер
	|		И ДанныеДокумента.Контрагент = ТаблицаДанныхДокумента.Контрагент
	|		И (ДанныеДокумента.ДокументРеализации = ТаблицаДанныхДокумента.ДокументРеализации)
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка <> &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = &ХозяйственнаяОперацияДокументаВозврата
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.КорректировкаРеализации) ТОГДА
	|		Аналитика.Склад
	|	ИНАЧЕ
	|		&Склад
	|	КОНЕЦ КАК Склад, 
	|	
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.КорректировкаРеализации) ТОГДА
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры
	|	ИНАЧЕ
	|		ЕСТЬNULL(Аналитика.КлючАналитики, ТоварыОрганизаций.АналитикаУчетаНоменклатуры)
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры, 
	|
	|	ТоварыОрганизаций.СкладОтгрузки КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|
	|	АналитикаОтгрузки.Номенклатура КАК Номенклатура,
	|	АналитикаОтгрузки.Характеристика КАК Характеристика,
	|	АналитикаОтгрузки.Серия КАК Серия,
	|	ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ВидыЗапасов.Организация, НЕОПРЕДЕЛЕНО) = &Организация
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ТоварыОрганизаций.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|
	|	ЛОЖЬ КАК РеализацияЗапасовДругойОрганизации,
	|
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.КорректировкаРеализации)
	|		ИЛИ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ВозвратТоваровОтКлиента) ТОГДА
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение
	|	ИНАЧЕ 
	|		ЕСТЬNULL(Аналитика.КлючАналитики.Назначение, ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение)
	|	КОНЕЦ КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(
	|		РАЗНОСТЬДАТ(ТоварыОрганизаций.ДатаРеализации, &МаксимальнаяДата, ДЕНЬ)
	|	) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, отгруженные документом реализации
	|		ТоварыОрганизаций.Регистратор КАК ДокументРеализации,
	|		Аналитика.Склад КАК СкладОтгрузки,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ЕСТЬNULL(Резервы.КорВидЗапасов, ТоварыОрганизаций.ВидЗапасов) КАК ВидЗапасовВладельца,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ТоварыОрганизаций.Количество КАК Количество,
	|		ДокументыРеализации.Дата КАК ДатаРеализации
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ДокументыРеализации КАК ДокументыРеализации
	|		ПО
	|			ТоварыОрганизаций.Регистратор = ДокументыРеализации.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|		ПО
	|			ТоварыОрганизаций.Регистратор = Резервы.Регистратор
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Резервы.АналитикаУчетаНоменклатуры
	|			И ТоварыОрганизаций.Организация = Резервы.Организация
	|			И ТоварыОрганизаций.ВидЗапасов = Резервы.ВидЗапасов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО
	|			Резервы.КорОрганизация = Настройка.ОрганизацияВладелец
	|			И Резервы.КорВидЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = ТоварыОрганизаций.Организация
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И (&ВыкупТары И Аналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ИЛИ Не &ВыкупТары)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, возвращенные от клиентов
	|		ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|		ЕСТЬNULL(КорАналитика.Склад, Аналитика.Склад) КАК СкладОтгрузки,
	|		ЕСТЬNULL(КорАналитика.КлючАналитики, Аналитика.КлючАналитики) КАК АналитикаУчетаНоменклатуры,
	|		ЕСТЬNULL(Резервы.КорВидЗапасов, ТоварыОрганизаций.ВидЗапасов) КАК ВидЗапасов,
	|		ЕСТЬNULL(Резервы.КорВидЗапасов, ТоварыОрганизаций.ВидЗапасов) КАК ВидЗапасовВладельца,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			ТоварыОрганизаций.Количество
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ДокументыВозврата КАК ДокументыВозврата
	|		ПО
	|			ТоварыОрганизаций.Регистратор = ДокументыВозврата.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК КорАналитика
	|		ПО
	|			ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры = КорАналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|		ПО
	|			ТоварыОрганизаций.Регистратор = Резервы.Регистратор
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Резервы.АналитикаУчетаНоменклатуры
	|			И ТоварыОрганизаций.Организация = Резервы.Организация
	|			И ТоварыОрганизаций.ВидЗапасов = Резервы.ВидЗапасов
	|		
	|	ГДЕ
	|		НЕ (Аналитика.КлючАналитики ЕСТЬ NULL И КорАналитика.КлючАналитики ЕСТЬ NULL)
	|		И (&ВыкупТары И Аналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ИЛИ Не &ВыкупТары)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, с учетом корректировок
	|		ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|		Аналитика.Склад КАК СкладОтгрузки,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ЕСТЬNULL(Резервы.КорВидЗапасов, ТоварыОрганизаций.ВидЗапасов) КАК ВидЗапасовВладельца,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			ТоварыОрганизаций.Количество
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.КорректировкаРеализации КАК ДокументыКорректировки
	|		ПО
	|			ТоварыОрганизаций.Регистратор = ДокументыКорректировки.Ссылка
	|			И ДокументыКорректировки.Ссылка <> &Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ДокументыРеализации КАК ДокументыРеализации
	|		ПО
	|			ДокументыКорректировки.ДокументОснование = ДокументыРеализации.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|		ПО
	|			ТоварыОрганизаций.Регистратор = Резервы.Регистратор
	|			И ТоварыОрганизаций.Организация = Резервы.Организация
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Резервы.АналитикаУчетаНоменклатуры
	|			И ТоварыОрганизаций.ВидЗапасов = Резервы.ВидЗапасов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО
	|			Резервы.КорОрганизация = Настройка.ОрганизацияВладелец
	|			И Резервы.КорВидЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = ТоварыОрганизаций.Организация
	|	ГДЕ
	|		&ХозяйственнаяОперацияДокументаРеализации = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|		И (&ВыкупТары И Аналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ИЛИ Не &ВыкупТары)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, указанные в документе
	|		Неопределено КАК ДокументРеализации,
	|		ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|		ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасовВладельца,
	|		ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|		ТаблицаВидыЗапасов.Количество КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную
	|		И (Аналитика.Номенклатура, Аналитика.Характеристика) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			ГДЕ
	|				ТаблицаТоваров.ДокументРеализации = Неопределено
	|		)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Переданная возвратная тара
	|		Остатки.ДокументПередачи КАК ДокументРеализации,
	|		&Склад КАК СкладОтгрузки,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.ВидЗапасов КАК ВидЗапасовВладельца,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК Количество,
	|		Остатки.ДокументПередачи.Дата КАК ДатаРеализации
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(,
	|			&ВыкупТары
	|			И (Номенклатура, Характеристика, ДокументПередачи) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика,
	|				ТаблицаТоваров.ДокументРеализации
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|		) КАК Остатки
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			Аналитика.Номенклатура = Остатки.Номенклатура
	|			И Аналитика.Характеристика = Остатки.Характеристика
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И Аналитика.Склад = &Склад
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Переданная возвратная тара, списанная текущим документом
	|		Движения.ДокументПередачи КАК ДокументРеализации,
	|		&Склад КАК СкладОтгрузки,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Движения.ВидЗапасов КАК ВидЗапасов,
	|		Движения.ВидЗапасов КАК ВидЗапасовВладельца,
	|		Движения.НомерГТД КАК НомерГТД,
	|		Движения.Количество КАК Количество,
	|		Движения.ДокументПередачи.Дата КАК ДатаРеализации
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара КАК Движения
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			Аналитика.Номенклатура = Движения.Номенклатура
	|			И Аналитика.Характеристика = Движения.Характеристика
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И Аналитика.Склад = &Склад
	|	ГДЕ	
	|		Движения.Регистратор = &Ссылка
	|		И Движения.ВидЗапасов.Организация = &Организация
	|		И &ВыкупТары
	|	) КАК ТоварыОрганизаций
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтгрузки
	|	ПО
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры = АналитикаОтгрузки.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		АналитикаОтгрузки.Номенклатура = Аналитика.Номенклатура
	|		И АналитикаОтгрузки.Характеристика = Аналитика.Характеристика
	|		И АналитикаОтгрузки.Серия = Аналитика.Серия
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|		И &Склад = Аналитика.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО
	|		ТоварыОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.КорректировкаРеализации) ТОГДА
	|		Аналитика.Склад
	|	ИНАЧЕ
	|		&Склад
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.КорректировкаРеализации) ТОГДА
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры
	|	ИНАЧЕ
	|		ЕСТЬNULL(Аналитика.КлючАналитики, ТоварыОрганизаций.АналитикаУчетаНоменклатуры)
	|	КОНЕЦ,
	|	ТоварыОрганизаций.СкладОтгрузки,
	|	АналитикаОтгрузки.Номенклатура,
	|	АналитикаОтгрузки.Характеристика,
	|	АналитикаОтгрузки.Серия,
	|	ТоварыОрганизаций.ДокументРеализации,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ВидыЗапасов.Организация, НЕОПРЕДЕЛЕНО) = &Организация
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасовВладельца,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.КорректировкаРеализации)
	|		ИЛИ ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ВозвратТоваровОтКлиента) ТОГДА
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение
	|	ИНАЧЕ 
	|		ЕСТЬNULL(Аналитика.КлючАналитики.Назначение, ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение)
	|	КОНЕЦ,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|";
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровОтКлиента") 
			И ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВыкупВозвратнойТарыКлиентом") Тогда
		Запрос.УстановитьПараметр("Склад", Справочники.Склады.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидЗапасовПоУмолчанию", Справочники.ВидыЗапасов.ПустаяСсылка());
	Запрос.УстановитьПараметр("МаксимальнаяДата", Дата(2399, 1, 1));
	Запрос.УстановитьПараметр("ВыкупТары", (ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ВыкупВозвратнойТарыКлиентом")));
	
	ХозяйственнаяОперацияДокументаРеализации = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	Если ДокументОбъект.Метаданные().Реквизиты.Найти("ХозяйственнаяОперация") <> Неопределено Тогда
		Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
			ХозяйственнаяОперацияДокументаРеализации = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию
		ИначеЕсли ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
			ХозяйственнаяОперацияДокументаРеализации = Перечисления.ХозяйственныеОперации.РеализацияВРозницу
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияДокументаРеализации", ХозяйственнаяОперацияДокументаРеализации);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияДокументаВозврата", Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков товаров к оформлению отчетов комитенту.
//
Процедура ТаблицаОстатковКОформлениюОтчетаКомитенту(ДокументОбъект, МенеджерВременныхТаблиц, ДатаОстатков)
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	Неопределено КАК ВидЗапасовОтгрузки,
	|	Ложь КАК РеализацияЗапасовДругойОрганизации,
	|	Аналитика.Назначение КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.СуммаВыручки) КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, списанные документом
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			ТоварыКОформлению.КоличествоСписано
	|		ИНАЧЕ
	|			ТоварыКОформлению.Количество
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			0
	|		ИНАЧЕ
	|			ТоварыКОформлению.СуммаВыручки
	|		КОНЕЦ КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК Отборы
	|		ПО Отборы.ВидЗапасов = ТоварыКОформлению.ВидЗапасов
	|			И Отборы.АналитикаУчетаНоменклатуры = ТоварыКОформлению.АналитикаУчетаНоменклатуры
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	ГДЕ
	|		ТоварыКОформлению.Регистратор = &Ссылка
	|		И ТоварыКОформлению.ВидЗапасов.Организация = &Организация
	|		И ТоварыКОформлению.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Реализованные виды запасов
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			ТоварыКОформлению.КоличествоСписаноОстаток
	|		ИНАЧЕ
	|			ТоварыКОформлению.КоличествоОстаток
	|		КОНЕЦ КАК Количество,
	|
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			0
	|		ИНАЧЕ
	|			ТоварыКОформлению.СуммаВыручкиОстаток
	|		КОНЕЦ КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(&Дата,
	|			Валюта = &Валюта
	|			И (ВидЗапасов, АналитикаУчетаНоменклатуры) В (
	|				ВЫБРАТЬ
	|					Отборы.ВидЗапасов,
	|					Отборы.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ВтОтборыОстатковОрганизаций КАК Отборы
	|				)
	|		) КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Виды запасов, указанные в документе вручную.
	|		Запасы.ВидЗапасов.Организация КАК Организация,
	|		Запасы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Запасы.ВидЗапасов КАК ВидЗапасов,
	|		Запасы.НомерГТД КАК НомерГТД,
	|		Запасы.Количество КАК Количество,
	|		Запасы.СуммаСНДС КАК СуммаВыручки,
	|		ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК Запасы
	|	ГДЕ
	|		Запасы.ВидыЗапасовУказаныВручную
	|		И (Запасы.АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|
	|	) КАК ТоварыОрганизаций
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Назначение,
	|	Аналитика.Серия,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Валюта", ДокументОбъект.Валюта);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ЭтоОтчетКомитентуОСписании", ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетКомитентуОСписании"));
	Запрос.УстановитьПараметр("Дата", КонецДня(ДатаОстатков) + 1);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры 

Процедура ТаблицаОстатковКОформлениюОтчетаКомитентуОСписании(ДокументОбъект, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.СуммаВыручки) КАК СуммаОстаток,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, списанные документом
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ТоварыКОформлению.КоличествоСписано КАК Количество,
	|		0 КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	ГДЕ
	|		ТоварыКОформлению.Регистратор = &Ссылка
	|		И ТоварыКОформлению.ВидЗапасов.Организация = &Организация
	|		И ТоварыКОформлению.Активность
	|		И ТоварыКОформлению.ВидЗапасов В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Отборы.ВидЗапасов
	|			ИЗ
	|				ВтОтборыОстатковОрганизаций КАК Отборы
	|			)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Списанные виды запасов
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ТоварыКОформлению.КоличествоСписаноПриход - ТоварыКОформлению.КоличествоСписаноРасход КАК Количество,
	|		0 КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Обороты(&НачалоПериода, &КонецПериода, Период,
	|			Валюта = &Валюта
	|			И (АналитикаУчетаНоменклатуры, ВидЗапасов) В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Отборы.АналитикаУчетаНоменклатуры,
	|					Отборы.ВидЗапасов
	|				ИЗ
	|					ВтОтборыОстатковОрганизаций КАК Отборы
	|				)
	|		) КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Виды запасов, указанные в документе вручную.
	|		Запасы.ВидЗапасов.Организация КАК Организация,
	|		Запасы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Запасы.ВидЗапасов КАК ВидЗапасов,
	|		Запасы.НомерГТД КАК НомерГТД,
	|		Запасы.Количество КАК Количество,
	|		0 КАК СуммаВыручки,
	|		ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК Запасы
	|	ГДЕ
	|		Запасы.ВидыЗапасовУказаныВручную
	|		И (Запасы.АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|
	|	) КАК ТоварыОрганизаций
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Валюта", ДокументОбъект.Валюта);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", ?(ЗначениеЗаполнено(ДокументОбъект.НачалоПериода), ДокументОбъект.НачалоПериода, НачалоМесяца(ДокументОбъект.Дата)));
	Запрос.УстановитьПараметр("КонецПериода", ?(ЗначениеЗаполнено(ДокументОбъект.КонецПериода), КонецДня(ДокументОбъект.КонецПериода), КонецМесяца(ДокументОбъект.Дата)));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирование врем.табл. ТаблицаОстатков к передаче по интеркампани.
// Параметры:
//	Ссылка - ДокументСсылка.{ПередачаТоваровМеждуОрганизациями | ВозвратТоваровМеждуОрганизациями}
//	Владелец - СправочникСсылка.Организации, владелец передаваемого/возвращаемого запаса
//	Склад - склад подбора остатков в операции
//	Дата - дата подбора остатков
//	ВременныеТаблицы - менеджер временных таблиц для ТаблицаОстатков, должен содержать ВТ ДоступныеВидыЗапасов
//	ПоВсемВидамЗапасов - признак игнорирования доступных видов запасов
Процедура ТаблицаОстатковТоваровКПередаче(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КПередаче.Организация КАК Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	Аналитика.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасов,
	|	КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	КПередаче.ВидЗапасовПродавца КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления,
	|	Аналитика.Назначение КАК Назначение,
	|	КПередаче.НомерГТД КАК НомерГТД,
	|	СУММА(КПередаче.Количество) КАК КоличествоОстаток,
	|	0 КАК НаДатуКонтроля,
	|	0 КАК НаДатуАктуальности,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|		КПередаче.НомерГТД КАК НомерГТД,
	|		КПередаче.Количество КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче КАК КПередаче
	|	ГДЕ
	|		КПередаче.Регистратор = &Ссылка
	|		И КПередаче.ОрганизацияВладелец = &Владелец
	|		И КПередаче.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец,
	|		КПередаче.АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца,
	|		КПередаче.ВидЗапасовПродавца,
	|		КПередаче.НомерГТД,
	|		КПередаче.КоличествоОстаток,
	|		ДАТАВРЕМЯ(1, 1, 1)
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|				&Дата,
	|				(ОрганизацияВладелец, АналитикаУчетаНоменклатуры, ВидЗапасовПродавца) В
	|					(ВЫБРАТЬ
	|						ВидыЗапасов.Организация КАК ОрганизацияВладелец,
	|						ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|						ВидыЗапасов.ВидЗапасов КАК ВидЗапасовПродавца
	|					ИЗ
	|						ВтОтборыОстатковОрганизаций КАК ВидыЗапасов)) КАК КПередаче) КАК КПередаче
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО КПередаче.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	КПередаче.Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Назначение,
	|	Аналитика.Серия,
	|	Аналитика.Склад,
	|	КПередаче.ВидЗапасовПродавца,
	|	КПередаче.НомерГТД,
	|	КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца";
	
	ТекстЗапроса = ТекстЗапроса + " 
	|;
	|///////////////////////////////////////
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Владелец", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("Дата", ДатаОстатков + 1);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
КонецПроцедуры

// Формирование врем.табл. ТаблицаОстатков к возврату по интеркампани.
// Параметры:
//	Ссылка - ДокументСсылка.{ПередачаТоваровМеждуОрганизациями | ВозвратТоваровМеждуОрганизациями}
//	Владелец - СправочникСсылка.Организации, владелец передаваемого/возвращаемого запаса
//	Склад - склад подбора остатков в операции
//	Дата - дата подбора остатков
//	ВременныеТаблицы - менеджер временных таблиц для ТаблицаОстатков, должен содержать ВТ ДоступныеВидыЗапасов
//	ПоВсемВидамЗапасов - признак игнорирования доступных видов запасов
Процедура ТаблицаОстатковТоваровКВозврату(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КПередаче.Организация КАК Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	Аналитика.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	КПередаче.ВидЗапасов КАК ВидЗапасов,
	|	КПередаче.ВидЗапасовПолучателя КАК ВидЗапасовВладельца,
	|	КПередаче.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления,
	|	Аналитика.Назначение КАК Назначение,
	|	КПередаче.НомерГТД КАК НомерГТД,
	|	СУММА(КПередаче.Количество) КАК КоличествоОстаток,
	|	0 КАК НаДатуКонтроля,
	|	0 КАК НаДатуАктуальности,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасовПолучателя,
	|		КПередаче.НомерГТД КАК НомерГТД,
	|		КПередаче.Возвращено КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче КАК КПередаче
	|	ГДЕ
	|		КПередаче.Регистратор = &Ссылка
	|		И КПередаче.ОрганизацияВладелец = &Владелец
	|		И КПередаче.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасовПолучателя,
	|		КПередаче.НомерГТД,
	|		КПередаче.ВозвращеноОстаток,
	|		ДАТАВРЕМЯ(1, 1, 1)
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|			&Дата,
	|			(ОрганизацияВладелец, АналитикаУчетаНоменклатуры, ВидЗапасовПродавца) В
	|				(ВЫБРАТЬ
	|					&Владелец КАК ОрганизацияВладелец,
	|					ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|					ВидыЗапасов.ВидЗапасов КАК ВидЗапасовПродавца
	|				ИЗ
	|					ВтОтборыОстатковОрганизаций КАК ВидыЗапасов)
	|		) КАК КПередаче
	|
	|) КАК КПередаче
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО КПередаче.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	КПередаче.Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Назначение,
	|	Аналитика.Серия,
	|	Аналитика.Склад,
	|	КПередаче.ВидЗапасовПолучателя,
	|	КПередаче.НомерГТД,
	|	КПередаче.ВидЗапасов
	|";
	
	ТекстЗапроса = ТекстЗапроса + " 
	|;
	|///////////////////////////////////////
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Владелец", ДокументОбъект.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("Дата", ДатаОстатков + 1);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
КонецПроцедуры

// Формирование врем.табл. ТаблицаОстатков - таблица отрицательных остатков
// Параметры:
//	Ссылка - ДокументСсылка.{ПередачаТоваровМеждуОрганизациями | ВозвратТоваровМеждуОрганизациями}
//	Владелец - СправочникСсылка.Организации, владелец передаваемого/возвращаемого запаса
//	Склад - склад подбора остатков в операции
//	Дата - дата подбора остатков
//	ВременныеТаблицы - менеджер временных таблиц для ТаблицаОстатков, должен содержать ВТ ДоступныеВидыЗапасов
//	ПоВсемВидамЗапасов - признак игнорирования доступных видов запасов
Процедура ТаблицаОтрицательныеОстаткиТоваровОрганизации(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.Организация КАК Организация,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ВТАналитикаОстатковРезервов
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
	|			,
	|			(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|					(ВЫБРАТЬ
	|						ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|						ВидыЗапасов.Организация КАК Организация,
	|						ВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|					ИЗ
	|						ВтОтборыОстатковОрганизаций КАК ВидыЗапасов)
	|				И Организация = &Организация) КАК РезервыТоваровОрганизаций
	|ГДЕ
	|	РезервыТоваровОрганизаций.КоличествоОстаток < 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезервыТоваровОрганизаций.Организация КАК Организация,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.КорВидЗапасов КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	СУММА(ВЫБОР
	|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -РезервыТоваровОрганизаций.Количество
	|			ИНАЧЕ РезервыТоваровОрганизаций.Количество
	|		КОНЕЦ) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТОстаткиРезервовДляПодтвержденияВыпуска
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТАналитикаОстатковРезервов КАК АналитикаОстатковРезервов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|			ПО АналитикаОстатковРезервов.ВидЗапасов = ВидыЗапасов.Ссылка
	|				И (ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска))
	|		ПО РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры = АналитикаОстатковРезервов.АналитикаУчетаНоменклатуры
	|			И РезервыТоваровОрганизаций.Организация = АналитикаОстатковРезервов.Организация
	|			И РезервыТоваровОрганизаций.ВидЗапасов = АналитикаОстатковРезервов.ВидЗапасов
	|			И РезервыТоваровОрганизаций.НомерГТД = АналитикаОстатковРезервов.НомерГТД
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервыТоваровОрганизаций.Организация,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.ВидЗапасов,
	|	РезервыТоваровОрганизаций.КорВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	-СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТОстаткиТоваровОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыОрганизаций.Организация КАК Организация,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		-ТоварыОрганизаций.Количество КАК Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|			ПО (ВтОтборыОстатковОрганизаций.Организация = &Организация)
	|				И (ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры = ТоварыОрганизаций.АналитикаУчетаНоменклатуры)
	|				И (ВтОтборыОстатковОрганизаций.ВидЗапасов = ТоварыОрганизаций.ВидЗапасов)
	|	ГДЕ
	|		ТоварыОрганизаций.Регистратор = &Ссылка
	|		И ТоварыОрганизаций.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыОрганизаций.Организация,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД,
	|		ТоварыОрганизаций.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.Остатки(
	|				,
	|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|						(ВЫБРАТЬ
	|							ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|							ВидыЗапасов.Организация КАК Организация,
	|							ВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|						ИЗ
	|							ВтОтборыОстатковОрганизаций КАК ВидыЗапасов)
	|					И Организация = &Организация) КАК ТоварыОрганизаций
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РезервыТоваровОрганизаций.Организация,
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД,
	|		РезервыТоваровОрганизаций.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
	|				,
	|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|						(ВЫБРАТЬ
	|							ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|							ВидыЗапасов.Организация КАК Организация,
	|							ВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|						ИЗ
	|							ВтОтборыОстатковОрганизаций КАК ВидыЗапасов)
	|					И Организация = &Организация) КАК РезервыТоваровОрганизаций) КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыОрганизаций.Количество) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОстаткиРезервовДляПодтвержденияВыпуска.Организация КАК Организация,
	|	ВТОстаткиРезервовДляПодтвержденияВыпуска.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
	|	КлючиАналитикиУчетаНоменклатуры.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ВТОстаткиРезервовДляПодтвержденияВыпуска.ВидЗапасов КАК ВидЗапасов,
	|	ВТОстаткиРезервовДляПодтвержденияВыпуска.ВидЗапасов КАК ВидЗапасовВладельца,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
	|	ЛОЖЬ КАК РеализацияЗапасовДругойОрганизации,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
	|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение,
	|	ВТОстаткиРезервовДляПодтвержденияВыпуска.НомерГТД КАК НомерГТД,
	|	ВТОстаткиРезервовДляПодтвержденияВыпуска.КоличествоОстаток КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ВТОстаткиРезервовДляПодтвержденияВыпуска КАК ВТОстаткиРезервовДляПодтвержденияВыпуска
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ВТОстаткиРезервовДляПодтвержденияВыпуска.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОстаткиТоваровОрганизаций.Организация,
	|	ВТОстаткиТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия,
	|	КлючиАналитикиУчетаНоменклатуры.Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ВТОстаткиТоваровОрганизаций.ВидЗапасов,
	|	ВТОстаткиТоваровОрганизаций.ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	КлючиАналитикиУчетаНоменклатуры.Назначение,
	|	ВТОстаткиТоваровОрганизаций.НомерГТД,
	|	ВТОстаткиТоваровОрганизаций.КоличествоОстаток,
	|	0
	|ИЗ
	|	ВТОстаткиТоваровОрганизаций КАК ВТОстаткиТоваровОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ВТОстаткиТоваровОрганизаций.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВТОстаткиТоваровОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТАналитикаОстатковРезервов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОстаткиРезервовДляПодтвержденияВыпуска
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОстаткиТоваровОрганизаций";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Организация", ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков списанных на расходы товаров.
//
Процедура ТаблицаОстатковСписанныхНаРасходыТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
															
	ДокументСсылка = ДокументОбъект.Ссылка;
	Организация    = ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата
	|ПОМЕСТИТЬ ДокументыСписания
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК ДанныеДокумента
	|		ПО ТаблицаТоваров.ДокументРеализации = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Регистратор КАК ДокументРеализации,
	|	КлючиАналитики.Номенклатура КАК Номенклатура,
	|	КлючиАналитики.Характеристика КАК Характеристика,
	|	КлючиАналитики.Серия КАК Серия,
	|	КлючиАналитики.Склад КАК Склад,
	|	КлючиАналитики.Назначение КАК Назначение,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход)
	|			ТОГДА -ТоварыОрганизаций.Количество
	|		ИНАЧЕ ТоварыОрганизаций.Количество
	|	КОНЕЦ КАК Количество,
	|	ДокументыСписания.Дата КАК ДатаСписания
	|ПОМЕСТИТЬ ОстаткиСписанныхНаРасходТоваров
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыСписания КАК ДокументыСписания
	|		ПО ТоварыОрганизаций.Регистратор = ДокументыСписания.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.ДокументРеализации,
	|	КорКлючиАналитики.Номенклатура,
	|	КорКлючиАналитики.Характеристика,
	|	КорКлючиАналитики.Серия,
	|	КорКлючиАналитики.Склад,
	|	КорКлючиАналитики.Назначение,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход)
	|			ТОГДА -ТоварыОрганизаций.Количество
	|		ИНАЧЕ ТоварыОрганизаций.Количество
	|	КОНЕЦ,
	|	ДокументыСписания.Дата
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыСписания КАК ДокументыСписания
	|		ПО ТоварыОрганизаций.ДокументРеализации = ДокументыСписания.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорКлючиАналитики
	|		ПО ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры = КорКлючиАналитики.Ссылка
	|ГДЕ
	|	НЕ ТоварыОрганизаций.Регистратор В
	|				(ВЫБРАТЬ
	|					ДокументыСписания.Ссылка КАК Ссылка
	|				ИЗ
	|					ДокументыСписания КАК ДокументыСписания)
	|	И ТоварыОрганизаций.Регистратор <> &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Склад КАК СкладОтгрузки,
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.Серия КАК Серия,
	|	ТоварыОрганизаций.Назначение КАК Назначение,
	|	ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.Организация <> &Организация
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.Ссылка
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	ЛОЖЬ КАК РеализацияЗапасовДругойОрганизации,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(РАЗНОСТЬДАТ(ТоварыОрганизаций.ДатаСписания, &МаксимальнаяДата, ДЕНЬ)) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ОстаткиСписанныхНаРасходТоваров КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ТоварыОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТоварыОрганизаций.Номенклатура = Аналитика.Номенклатура
	|			И ТоварыОрганизаций.Характеристика = Аналитика.Характеристика
	|			И ТоварыОрганизаций.Серия = Аналитика.Серия
	|			И ТоварыОрганизаций.Склад = Аналитика.Склад
	|			И ТоварыОрганизаций.Назначение = Аналитика.Назначение
	|
	|СГРУППИРОВАТЬ ПО
	|	Аналитика.КлючАналитики,
	|	ТоварыОрганизаций.Склад,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.Серия,
	|	ТоварыОрганизаций.Назначение,
	|	ТоварыОрганизаций.ДокументРеализации,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.Организация <> &Организация
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.Ссылка
	|	КОНЕЦ,
	|	ТоварыОрганизаций.ВидЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыСписания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиСписанныхНаРасходТоваров");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("МаксимальнаяДата", Дата(2399, 1, 1));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры


// Метод возвращает таблицу остатков товаров, переданных переработчику.
//
Функция ТаблицаОстатковТоваровПереданныхПереработчику(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов, МенеджерВременныхТаблиц, ДатаОстатков)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ // Движения документа
	|	МАКСИМУМ(Товары.Период) КАК Период,
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ДвиженияДокумента
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеПереработчику КАК Товары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ВтОтборы
	|	ПО ВтОтборы.АналитикаУчетаНоменклатуры = Товары.АналитикаУчетаНоменклатуры
	|		И ВтОтборы.ВидЗапасов = Товары.ВидЗапасов
	|ГДЕ
	|	Товары.Регистратор = &Ссылка
	|	И Товары.Активность
	|	И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // Остатки товаров переданных переработчику на конец месяца
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ НаКонецМесяца
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеПереработчику.Остатки(&ГраницаМесяца,
	|		(АналитикаУчетаНоменклатуры, ВидЗапасов) В
	|			(ВЫБРАТЬ 
	|				Т.АналитикаУчетаНоменклатуры,
	|				Т.ВидЗапасов
	|			ИЗ
	|				ВтОтборыОстатковОрганизаций КАК Т)
	|	) КАК Остатки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ВидЗапасов.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	Товары.ВидЗапасов КАК ВидЗапасов,
	|	Товары.ВидЗапасов КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	Неопределено КАК ВидЗапасовОтгрузки,
	|	Ложь КАК РеализацияЗапасовДругойОрганизации,
	|	Аналитика.Назначение КАК Назначение,
	|	НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
	|	СУММА(Товары.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // Ранее списанные товары данным документом
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.Количество КАК Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеПереработчику КАК Товары
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК Отбор
	|		ПО Товары.АналитикаУчетаНоменклатуры = Отбор.АналитикаУчетаНоменклатуры
	|			И Товары.ВидЗапасов = Отбор.ВидЗапасов
	|	ГДЕ
	|		Товары.Период <= &Дата
	|		И Товары.Регистратор = &Ссылка
	|		И Товары.Активность
	|		И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Остатки товаров переданных переработчику
	|		НаКонецМесяца.ВидЗапасов КАК ВидЗапасов,
	|		НаКонецМесяца.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		НаКонецМесяца.КоличествоОстаток КАК Количество
	|	ИЗ
	|		НаКонецМесяца КАК НаКонецМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДвиженияДокумента КАК Движения
	|			ПО Движения.АналитикаУчетаНоменклатуры = НаКонецМесяца.АналитикаУчетаНоменклатуры
	|			И Движения.ВидЗапасов = НаКонецМесяца.ВидЗапасов
	|	) КАК Товары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Товары.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.ВидЗапасов.Организация,
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	Товары.ВидЗапасов,
	|	Аналитика.Назначение
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Дата", ДатаОстатков + 1);
	Запрос.УстановитьПараметр("ГраницаМесяца", Новый Граница(КонецМесяца(ДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГраницаДня", Новый Граница(КонецДня(ДатаОстатков), ВидГраницы.Включая));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ДополнитьЗапросКонтролемОстатковНаКаждыйМесяц(Запрос, ТекстЗапроса, НачальныйМесяц, КонечныйМесяц, ПараметрыЗаполненияВидовЗапасов, СчетчикПериодов)
	
	ТекстЗапросаНаМесяцШаблон = 
	"ВЫБРАТЬ
	|	&ТекстПериод КАК Период,
	|	ШаблонОстаткиНаМесяц.Организация КАК Организация,
	|	ШаблонОстаткиНаМесяц.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ШаблонОстаткиНаМесяц.ВидЗапасов КАК ВидЗапасов,
	|	ШаблонОстаткиНаМесяц.НомерГТД КАК НомерГТД,
	|	1 КАК СчетчикПериодов,
	|	СУММА(ШаблонОстаткиНаМесяц.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.Организация КАК Организация,
	|		Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.Остатки(&ШаблонГраницаНаМесяц
	|				,
	|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|					(ВЫБРАТЬ
	|						ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|						ТаблицаТоваров.Организация,
	|						ТаблицаТоваров.ВидЗапасов
	|					ИЗ
	|						ВТОтборыОстатковОрганизаций КАК ТаблицаТоваров)) КАК Остатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.Организация,
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов,
	|		Остатки.НомерГТД,
	|		Остатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций.Остатки(&ШаблонГраницаНаМесяц
	|				,
	|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|					(ВЫБРАТЬ
	|						ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|						ТаблицаТоваров.Организация,
	|						ТаблицаТоваров.ВидЗапасов
	|					ИЗ
	|						ВТОтборыОстатковОрганизаций КАК ТаблицаТоваров)) КАК Остатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокумента.Организация,
	|		ДвиженияДокумента.АналитикаУчетаНоменклатуры,
	|		ДвиженияДокумента.ВидЗапасов,
	|		ДвиженияДокумента.НомерГТД,
	|		-ДвиженияДокумента.Количество
	|	ИЗ
	|		ДвиженияДокумента КАК ДвиженияДокумента
	|	ГДЕ
	|		ДвиженияДокумента.ПериодМесяц <= &ШаблонКонецМесяца
	|		И (ДвиженияДокумента.ПериодМесяц >= &ПериодЗаполнения ИЛИ &ПериодЗаполнения = ДАТАВРЕМЯ(1,1,1))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТОтборы.Организация,
	|		ВТОтборы.АналитикаУчетаНоменклатуры,
	|		ВТОтборы.ВидЗапасов,
	|		ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка),
	|		0
	|	ИЗ
	|		ВТОтборыОстатковОрганизаций КАК ВТОтборы
	|	
	|	//%ТекстПриходуемыеВидыЗапасов%
	|	
	|	) КАК ШаблонОстаткиНаМесяц
	|
	|СГРУППИРОВАТЬ ПО
	|	ШаблонОстаткиНаМесяц.Организация,
	|	ШаблонОстаткиНаМесяц.АналитикаУчетаНоменклатуры,
	|	ШаблонОстаткиНаМесяц.ВидЗапасов,
	|	ШаблонОстаткиНаМесяц.НомерГТД";
	
	МассивТекстовЗапросовПоМесяцам = Новый Массив;
	
	ТекущийМесяц = НачальныйМесяц;
	Пока ТекущийМесяц <= КонечныйМесяц Цикл
		
		СчетчикПериодов = СчетчикПериодов + 1;
		
		// Текстовое представление каждого месяца, например: Июнь2016
		СтрокаТекущийМесяц = Формат(ТекущийМесяц, "ДФ=ММММггг");
		
		ТекстЗапросаНаТекущийМесяц = ТекстЗапросаНаМесяцШаблон;
		ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "ШаблонОстаткиНаМесяц", "Остатки" + СтрокаТекущийМесяц);
		ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "ШаблонГраницаНаМесяц", "Граница" + СтрокаТекущийМесяц);
		ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "ШаблонКонецМесяца", "Конец" + СтрокаТекущийМесяц);
		
		Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
			
			Если ПараметрыЗаполненияВидовЗапасов.ЕстьТаблицаПриходуемыхВидовЗапасов Тогда
				ТекстПриходуемыеВидыЗапасов = "
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ //Дополнительные виды запасов, приходуемые документом
				|	ТаблицаВидыЗапасов.Организация                КАК Организация,
				|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
				|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
				|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
				|	ТаблицаВидыЗапасов.Количество                 КАК Количество
				|ИЗ
				|	ПриходуемыеВидыЗапасов КАК ТаблицаВидыЗапасов
				|ГДЕ
				|	ТаблицаВидыЗапасов.Период <= &ТекстПериод
				|";
				
				ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "//%ТекстПриходуемыеВидыЗапасов%",
					ТекстПриходуемыеВидыЗапасов);
				
			КонецЕсли;
			
			ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "&ТекстПериод", "&Конец" + СтрокаТекущийМесяц);
			
		Иначе
			ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "&ТекстПериод", "ДАТАВРЕМЯ(1,1,1)");
		КонецЕсли;
		
		МассивТекстовЗапросовПоМесяцам.Добавить(ТекстЗапросаНаТекущийМесяц);
		
		Запрос.УстановитьПараметр("Граница" + СтрокаТекущийМесяц, Новый Граница(ТекущийМесяц, ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Конец" + СтрокаТекущийМесяц, ТекущийМесяц);
		
		ТекущийМесяц = КонецМесяца(КонецМесяца(ТекущийМесяц) + 1);
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса +
		СтрСоединить(МассивТекстовЗапросовПоМесяцам, "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|");
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольПроведенияПоТоварамОрганизаций

Функция ДатаПоследнегоДвижения()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТоварыОрганизаций.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Период;
	Иначе
		Возврат Дата('00010101');
	КонецЕсли;
	
КонецФункции

Функция ДатаАктуальныхОстатков()
	
	Возврат '30000101';
	
КонецФункции

Функция ДатаПервогоРезерва(ДатаПоУмолчанию)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РезервыТоваровОрганизаций.Период КАК Период
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Период;
	Иначе
		Возврат ДатаПоУмолчанию;
	КонецЕсли;
	
КонецФункции

Функция ИмяКонтроляВТОтборыКонтроляКорректностиДвижений()
	
	Возврат Врег("ВТОтборыКонтроляКорректностиДвижений");
	
КонецФункции

Функция ИмяКонтроляТоварыОрганизацийРезервыСводно()
	
	Возврат Врег("ТоварыОрганизацийРезервыСводно");
	
КонецФункции

#КонецОбласти

#Область Прочее

// Записывает движения документа в ИБ.
//
// Параметры:
//	МенеджерДвижений - РегистрНакопленияМенеджер - Регистр накопления, в который пишутся движения.
//	Таблица - ТаблицаЗначений - Таблица источник движений.
//	Ссылка - ДокументСсылка - Ссылка на документ.
//	ЗаполнятьЦиклом - Булево - Записи в набор загружаются или же заполняются циклом. По умолчанию, ложь.
//	УстановитьАктивность - Булево - Установка активности у записываемых записей. По умолчанию, истина.
//	ДопСвойства - Структура - См. ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения().
//
Процедура ЗаписатьДвиженияВБазу(МенеджерДвижений, Таблица, Ссылка, ЗаполнятьЦиклом = Ложь, УстановитьАктивность = Истина, ДопСвойства = Неопределено) Экспорт
	Набор = МенеджерДвижений.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(Ссылка);
	Набор.Прочитать();
	Если ДопСвойства <> Неопределено Тогда
		Для Каждого Свойство ИЗ ДопСвойства Цикл
			Набор.ДополнительныеСвойства.Вставить(Свойство.Ключ, Свойство.Значение);
		КонецЦикла;
	КонецЕсли;
	Если Набор.Количество() > 0 Или Таблица.Количество() > 0 Тогда
		Если ЗаполнятьЦиклом Тогда
			Для Каждого Строка Из Таблица Цикл
				Запись = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Строка);
			КонецЦикла;
		Иначе
			Набор.Загрузить(Таблица);
		КонецЕсли;
		Если УстановитьАктивность Тогда
			Набор.УстановитьАктивность(Истина);
		КонецЕсли;
		Набор.Записать();
	КонецЕсли;
КонецПроцедуры

Функция ОписаниеТаблицСОбязательнымиКолонками()
	
	ОписаниеТаблиц = Новый Структура;
	
	ОписаниеТаблиц.Вставить("ТаблицаТоваров", Новый Соответствие);
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("ПодбиратьВидыЗапасов", "ИСТИНА");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("СуммаВознаграждения", "0");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("СуммаНДСВознаграждения", "0");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("ВидЦены", "ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)");
	
	ОписаниеТаблиц.Вставить("ТаблицаВидыЗапасов", Новый Соответствие);
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("СкладОтгрузки", "ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)");
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("ВидыЗапасовУказаныВручную", "ЛОЖЬ");
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("ВидЗапасовПолучателя", "НЕОПРЕДЕЛЕНО");
	
	ОписаниеТаблиц.Вставить("ТаблицаВидыЗапасовПоПериодам", Новый Соответствие);
	ОписаниеТаблиц.ТаблицаВидыЗапасовПоПериодам.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаВидыЗапасовПоПериодам.Вставить("СкладОтгрузки", "ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)");
	ОписаниеТаблиц.ТаблицаВидыЗапасовПоПериодам.Вставить("ВидыЗапасовУказаныВручную", "ЛОЖЬ");
	
	ОписаниеТаблиц.Вставить("ИсходнаяТаблицаТоваров", Новый Соответствие);
	ОписаниеТаблиц.ИсходнаяТаблицаТоваров.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ИсходнаяТаблицаТоваров.Вставить("ГруппаПродукции", "ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)");
	ОписаниеТаблиц.ИсходнаяТаблицаТоваров.Вставить("ВидЦены", "ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)");
	
	Возврат ОписаниеТаблиц;

КонецФункции

// Служебная функция для просмотра содержимого регистра РезервыТоваровОрганизаций в отладчике.
// 
// Возвращаемое значение:
// ТаблицаЗначений  - содержимое регистра.
//
Функция ПоказатьРезервыТоваровОрганизаций() Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ * ИЗ РегистрНакопления.РезервыТоваровОрганизаций");
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

#КонецОбласти

#КонецОбласти
