
#Область ПрограммныйИнтерфейс

// Процедура вызывается из форм списков в момент получения магнитного кода.
// Выполняет поиск карты лояльности в базе данных и вызывает оповещение "СчитанаКартаЛояльности"
// для формы-владельца.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма.
//  Данные - Массив - Массив данных, полученный из считывателя магнитных карт.
//
Процедура ОбработатьДанныеСчитывателяМагнитныхКарт(Форма, Данные) Экспорт
	
	КартыЛояльности = КартыЛояльностиВызовСервера.НайтиКартыЛояльностиПоДаннымСоСчитывателяМагнитныхКарт(Данные);
	
	Если КартыЛояльности.ЗарегистрированныеКартыЛояльности.Количество() > 0 Тогда
		
		Если КартыЛояльности.ЗарегистрированныеКартыЛояльности.Количество() = 1 Тогда
			
			Оповестить(
				"СчитанаКартаЛояльности",
				Новый Структура("КартаЛояльности, ФормаВладелец", КартыЛояльности.ЗарегистрированныеКартыЛояльности[0].Ссылка, Форма.УникальныйИдентификатор),
				Неопределено);
			
		Иначе
			
			ОткрытьФорму(
				"Справочник.КартыЛояльности.Форма.СчитываниеКартыЛояльности",
				Новый Структура("КодКарты, ТипКода", Данные, ПредопределенноеЗначение("Перечисление.ТипыКодовКарт.МагнитныйКод")),
				Форма,
				Форма.УникальныйИдентификатор);
			
		КонецЕсли;
		
	ИначеЕсли КартыЛояльности.НеЗарегистрированныеКартыЛояльности.Количество() > 0 Тогда
		
		ОткрытьФорму(
			"Справочник.КартыЛояльности.Форма.СчитываниеКартыЛояльности",
			Новый Структура("КодКарты, ТипКода", Данные, ПредопределенноеЗначение("Перечисление.ТипыКодовКарт.МагнитныйКод")),
			Форма,
			Форма.УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается из форм списков в момент получения штрихкода.
// Выполняет поиск карты лояльности в базе данных и вызывает оповещение "СчитанаКартаЛояльности"
// для формы-владельца.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма.
//  Штрихкоды - Массив, Строка - Штрихкоды.
//
Процедура ОбработатьШтрихкоды(Форма, Штрихкоды) Экспорт
	
	Если ТипЗнч(Штрихкоды) = Тип("Массив") Тогда
		МассивШтрихкодов = Штрихкоды;
	Иначе
		МассивШтрихкодов = Новый Массив;
		МассивШтрихкодов.Добавить(Штрихкоды);
	КонецЕсли;
	
	Если МассивШтрихкодов.Количество() = 1 Тогда
		
		КартыЛояльности = КартыЛояльностиВызовСервера.НайтиКартыЛояльностиПоШтрихкоду(МассивШтрихкодов[0].Штрихкод);
		
		Если КартыЛояльности.ЗарегистрированныеКартыЛояльности.Количество() > 0 Тогда
			
			Если КартыЛояльности.ЗарегистрированныеКартыЛояльности.Количество() = 1 Тогда
				
				Оповестить(
					"СчитанаКартаЛояльности",
					Новый Структура("КартаЛояльности, ФормаВладелец", КартыЛояльности.ЗарегистрированныеКартыЛояльности[0].Ссылка, Форма.УникальныйИдентификатор),
					Неопределено);
				
			Иначе
				
				ОткрытьФорму(
					"Справочник.КартыЛояльности.Форма.СчитываниеКартыЛояльности",
					Новый Структура("КодКарты, ТипКода", МассивШтрихкодов[0].Штрихкод, ПредопределенноеЗначение("Перечисление.ТипыКодовКарт.Штрихкод")),
					Форма,
					Форма.УникальныйИдентификатор);
				
			КонецЕсли;
			
		ИначеЕсли КартыЛояльности.НеЗарегистрированныеКартыЛояльности.Количество() > 0 Тогда
			
			ОткрытьФорму(
				"Справочник.КартыЛояльности.Форма.СчитываниеКартыЛояльности",
				Новый Структура("КодКарты, ТипКода", МассивШтрихкодов[0].Штрихкод, ПредопределенноеЗначение("Перечисление.ТипыКодовКарт.Штрихкод")),
				Форма,
				Форма.УникальныйИдентификатор);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// При начале выбора карты лояльности
//
// Параметры:
//  Элемент - ЭлементФормы - Элемент формы.
//  СтандартнаяОбработка - Булево - Стандартная обработка.
//  Партнер - СправочникСсылка.Партнеры - Партнер.
//  ДатаДокумента - Дата - Дата документа.
//
Процедура НачалоВыбораКартыЛояльности(Элемент, СтандартнаяОбработка, Партнер, ДатаДокумента) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму(
		"Справочник.КартыЛояльности.Форма.ФормаВыбора",
		Новый Структура("ДатаДокумента, Партнер", ДатаДокумента, Партнер),
		Элемент);
	
КонецПроцедуры

#Область КомандыПечатиАнкеты

// Процедура выполняет печать анкеты в формате "Microsoft Word"
//
// Параметры:
//  ОписаниеКоманды - Структура - Описание команды.
//
Функция ПечатьАнкетыMicrosoftWord(ОписаниеКоманды) Экспорт
	
	Если ТипЗнч(ОписаниеКоманды) = Тип("Структура") Тогда
		СоставДокументов = ОписаниеКоманды.ОбъектыПечати; // массив
	Иначе
		СоставДокументов = Новый Массив;
		СоставДокументов.Добавить(ОписаниеКоманды);
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СоставДокументов", 	  СоставДокументов);
	ДополнительныеПараметры.Вставить("ИмяМакета", 			  "ПФ_DOC_Анкета");
	ДополнительныеПараметры.Вставить("ТипМакета", 			  "doc");
	
	Оповещение = Новый ОписаниеОповещения("ПечатьАнкетыУстановкаРасширенияРаботыСФайлами", ЭтотОбъект, ДополнительныеПараметры);
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Оповещение);
	
КонецФункции

// Процедура выполняет печать анкеты в формате "Open Office"
//
// Параметры:
//  ОписаниеКоманды - Структура - Описание команды.
//
Функция ПечатьАнкетыOpenOfficeOrgWriter(ОписаниеКоманды) Экспорт
	
	Если ТипЗнч(ОписаниеКоманды) = Тип("Структура") Тогда
		СоставДокументов = ОписаниеКоманды.ОбъектыПечати; // массив
	Иначе
		СоставДокументов = Новый Массив;
		СоставДокументов.Добавить(ОписаниеКоманды);
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СоставДокументов", 	  СоставДокументов);
	ДополнительныеПараметры.Вставить("ИмяМакета", 			  "ПФ_ODT_Анкета");
	ДополнительныеПараметры.Вставить("ТипМакета", 			  "odt");
	
	Оповещение = Новый ОписаниеОповещения("ПечатьАнкетыУстановкаРасширенияРаботыСФайлами", ЭтотОбъект, ДополнительныеПараметры);
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Оповещение);
	
КонецФункции

// Процедура выполняет печать анкеты в формате "MXL"
//
// Параметры:
//  ОписаниеКоманды - Структура - Описание команды.
//
Функция ПечатьАнкетыMXL(ПараметрКоманды) Экспорт
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Справочник.КартыЛояльности",
		"Анкета",
		ПараметрКоманды,
		Неопределено);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Окончание процедуры печати анкеты в форматах "Microsoft Word" и "Open Office".
//
// Параметры:
//  РасширениеПодключено - Булево - Расширешение для работы с файлами успешно подключено.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПечатьАнкетыУстановкаРасширенияРаботыСФайлами(РасширениеПодключено, ДополнительныеПараметры) Экспорт
	
	Состояние(НСтр("ru = 'Выполняется формирование печатных форм'"));
	
	СоставДокументов 	  = ДополнительныеПараметры.СоставДокументов;
	ИмяМакета 			  = ДополнительныеПараметры.ИмяМакета;
	ТипМакета 			  = ДополнительныеПараметры.ТипМакета;
	
	МакетИДанныеОбъекта   = УправлениеПечатьюВызовСервера.МакетыИДанныеОбъектовДляПечати("Справочник.КартыЛояльности",
		ИмяМакета,
		СоставДокументов);
	Секции 				  = МакетИДанныеОбъекта.Макеты.ОписаниеСекций;
	ДвоичныеДанныеМакетов = МакетИДанныеОбъекта.Макеты.ДвоичныеДанныеМакетов;
	
	Для Каждого Ссылка Из СоставДокументов Цикл
		
		ДанныеОбъекта = МакетИДанныеОбъекта.Данные[Ссылка][ИмяМакета];
		
		Попытка
			
			ПечатнаяФорма = УправлениеПечатьюКлиент.ИнициализироватьПечатнуюФорму(ТипМакета);
			Макет = УправлениеПечатьюКлиент.ИнициализироватьМакетОфисногоДокумента(ДвоичныеДанныеМакетов[ИмяМакета], ТипМакета);
			
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].Заголовок);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			
			Если ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Штриховая")
				ИЛИ ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Смешанная") Тогда
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].Штрихкод);
				УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
				УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			КонецЕсли;
			
			Если ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Магнитная")
				ИЛИ ДанныеОбъекта.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыКарт.Смешанная") Тогда
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].МагнитныйКод);
				УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
				УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			КонецЕсли;
			
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].Подвал);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			
			УправлениеПечатьюКлиент.ПоказатьДокумент(ПечатнаяФорма);
			
		Исключение
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма);
			УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
			
			Возврат;
			
		КонецПопытки;
		
		УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма, Ложь);
		УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
		
	КонецЦикла;
	
	Состояние(НСтр("ru = 'Формирование печатных форм завершено'"));
	
КонецПроцедуры

#КонецОбласти
