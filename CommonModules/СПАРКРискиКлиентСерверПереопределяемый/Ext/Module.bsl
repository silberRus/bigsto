////////////////////////////////////////////////////////////////////////////////
// Подсистема "СПАРКРиски".
// ОбщийМодуль.СПАРКРискиКлиентСерверПереопределяемый.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Определяет свойства контрагента в форме или подписках на события.
//
// Параметры:
//	КонтрагентОбъект - ДанныеФормыСтруктура, СправочникОбъект - данные контрагента;
//	Форма - УправляемаяФорма - форма, из которой вызывается обработчик.
//		Если вызывается вне формы, тогда значение Неопределено;
//	СвойстваКонтрагента - Структура - в параметре возвращаются свойства контрагента:
//		* ИНН - Строка - ИНН контрагента. Значение по умолчанию - пустая строка;
//		* ПодлежитПроверке - Булево - в параметре необходимо возвратить Истина, если контрагент
//			подлежит проверке в сервисе 1СПАРК Риски, Ложь - в противном случае.
//			Важно. Сервис 1СПАРК Риски предоставляет информацию только по не иностранным
//			юридическим лицам;
//			Значение по умолчанию - Ложь;
//		* СвояОрганизация - Булево - признак того, что контрагент является собственным.
//			Значение по умолчанию - Ложь.
//			Свойство может быть использовано для отбора данных в отчетах.
//
Процедура ПриОпределенииСвойствКонтрагентаВОбъекте(КонтрагентОбъект, Форма, СвойстваКонтрагента) Экспорт
	
	Если Форма <> Неопределено и Форма.ИмяФормы = "Справочник.Партнеры.Форма.ФормаЭлементаРеквизитыКонтрагента" Тогда
		СвойстваКонтрагента.ИНН = Форма.ИНН;
		СвойстваКонтрагента.ПодлежитПроверке = Форма.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо")
			И НЕ Форма.ОбособленноеПодразделение;
			
	Иначе
		СвойстваКонтрагента.ИНН = КонтрагентОбъект.ИНН;
		СвойстваКонтрагента.ПодлежитПроверке = КонтрагентОбъект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо")
			И НЕ КонтрагентОбъект.ОбособленноеПодразделение;
	КонецЕсли;
	
КонецПроцедуры

#Область ИндексыСПАРККонтрагента

// Выводит информацию об индексах СПАРК Риски в элемент управления.
// В случае, если информации нет в кэше, то инициируется фоновое задание.
// Если передан ИНН, то информация получается напрямую из веб-сервиса без фонового задания.
//
// Параметры:
//  РезультатИндексыКонтрагента - Структура - ключи описаны в СПАРКРискиКлиентСервер.НовыйДанныеИндексов();
//  КонтрагентОбъект            - Объект, Неопределено - заполняется в том случае, если форма - это форма элемента справочника, а не форма документа.
//  Контрагент                  - ОпределяемыйТип.КонтрагентБИП, Строка - Контрагент или ИНН контрагента;
//  Форма                       - УправляемаяФорма - форма, в которой необходимо вывести информацию об индексах СПАРК Риски.
//  ИспользованиеРазрешено      - Булево - признак разрешения использования функциональности;
//  Параметры                   - Структура - прочие параметры;
//  СтандартнаяОбработка        - Булево - если вернуть сюда Ложь, то стандартная обработка не будет происходить.
//
Процедура ОтобразитьИндексыСПАРК(
			РезультатИндексыКонтрагента,
			КонтрагентОбъект,
			Контрагент,
			Форма,
			ИспользованиеРазрешено,
			Параметры,
			СтандартнаяОбработка) Экспорт
	
	Если Не ИспользованиеРазрешено Тогда
		Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Ложь;
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	Если РезультатИндексыКонтрагента.ВидОшибки = 
		ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит") Тогда
		
		Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Истина;
		
	ИначеЕсли Не РезультатИндексыКонтрагента.ПодлежитПроверке Тогда
		
		Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Ложь;
		
		Возврат;
		
	Иначе
		
		Форма.Элементы.ГруппаИндексыСПАРКРиски.Видимость = Истина;
		
	КонецЕсли;
	
	ТипСтруктура = Тип("Структура");
	
	Если РезультатИндексыКонтрагента.ПодлежитПроверке <> Истина Тогда
		// НЕ юридических лиц (физлиц, иностранные организации и т.п.) - не выводим вообще.
		Форма.Элементы.ДекорацияИндексыСПАРКРиски.Видимость                 = Ложь;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Ложь;
		СтандартнаяОбработка = Ложь;
		Возврат;
	Иначе
		Форма.Элементы.ДекорацияИндексыСПАРКРиски.Видимость                 = Истина;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Истина;
	КонецЕсли;
	
	// В форме имена элементов управления и реквизита - фиксированные.
	// 1. В зависимости от того, загружены данные, или выполнятся фоновое задание, вывести или скрыть картинку ожидания.
	Если РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ЗапущеноФоновоеЗадание") Тогда
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Истина;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Подсказка = НСтр("ru='Выполняется получение данных из Интернет.'");
	ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОтменаФоновогоЗадания") Тогда
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Истина;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Картинка = БиблиотекаКартинок.Предупреждение;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Подсказка = НСтр("ru='Получение данных из Интернет отменено.'");
	ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОшибкаФоновогоЗадания") Тогда
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Истина;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Картинка = БиблиотекаКартинок.Предупреждение;
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Подсказка = НСтр("ru='Ошибка получения данных из Интернет.'");
	Иначе // Загрузка завершена или не осуществлялась.
		Форма.Элементы.КартинкаОжиданиеЗагрузкиИндексовСПАРКРиски.Видимость = Ложь;
	КонецЕсли;
	
	ЦветСтиляЦветОсобогоТекста = ОбщегоНазначенияВызовСервера.ЦветСтиля("ЦветОсобогоТекста");
	
	МассивСтрок = Новый Массив;
	
	ВариантОтображения = Неопределено;
	Если ТипЗнч(Параметры) = ТипСтруктура Тогда
		Если Параметры.Свойство("ВариантОтображения") Тогда
			ВариантОтображения = Параметры.ВариантОтображения;
		КонецЕсли;
	КонецЕсли;
	Если ВариантОтображения = "Однострочный" Тогда
		// Допустимое значение.
	ИначеЕсли ВариантОтображения = "Многострочный" Тогда
		// Допустимое значение.
	Иначе
		ВариантОтображения = "Многострочный"; // Значение по-умолчанию.
	КонецЕсли;
	
	Если ВариантОтображения = "Однострочный" Тогда
		#Область ВыводДанных_Однострочный
		// Если сервис не подключен, то выводится:
		// "1СПАРК Риски: оценка надежности контрагентов. _Подробнее_".
		// Если данные есть, то:
		// "Индекс должной осмотрительности: %1 (_%2 риск_)".
		// В случае других ошибок, вывести их.
		ЕстьОшибкаПодключения = Истина;
		Если РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ВнутренняяОшибкаСервиса") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ИнтернетПоддержкаНеПодключена") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ИспользованиеЗапрещено") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеизвестнаяОшибка") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеизвестныйИНН") Тогда
			ЕстьОшибкаПодключения = Ложь;
			МассивСтрок.Добавить(НСтр("ru='Нет информации о контрагенте'"));
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НекорректныйЗапрос") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НекорректныйИНН") Тогда
			ЕстьОшибкаПодключения = Ложь;
			МассивСтрок.Добавить(
			Новый ФорматированнаяСтрока(
			НСтр("ru='Нет информации о контрагенте'"),
			,
			ЦветСтиляЦветОсобогоТекста));
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.НеПодлежитПроверке") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ОшибкаПодключения") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ПревышеноКоличествоПопытокАутентификации") Тогда
		ИначеЕсли РезультатИндексыКонтрагента.ВидОшибки = ПредопределенноеЗначение("Перечисление.ВидыОшибокСПАРКРиски.ТребуетсяОплатаИлиПревышенЛимит") Тогда
		Иначе // Пустое поле - ошибок нет.
			ЕстьОшибкаПодключения = Ложь;
			ЕстьОшибкаПолученияДанных = Ложь;
			ЦветОшибки = ЦветСтиляЦветОсобогоТекста;
			Если РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ВКэшеНетДанных") Тогда
				ЕстьОшибкаПолученияДанных = Истина;
				Если РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ЗапущеноФоновоеЗадание") Тогда
					ТекстОшибки = НСтр("ru='Получение данных...'");
					ЦветОшибки = Неопределено;
				ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОтменаФоновогоЗадания") Тогда
					ТекстОшибки = НСтр("ru='Ошибка получения данных (слишком медленное соединение или отменено администратором)'");
				ИначеЕсли РезультатИндексыКонтрагента.СостояниеЗагрузкиДанных = ПредопределенноеЗначение("Перечисление.СостоянияЗагрузкиИндексовСПАРКРиски.ОшибкаФоновогоЗадания") Тогда
					ТекстОшибки = НСтр("ru='Ошибка получения данных'");
				Иначе // Загрузка завершена или не осуществлялась.
					ТекстОшибки = НСтр("ru='Ошибка получения данных (данные не получены)'");
				КонецЕсли;
			ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ВКэшеУстаревшиеДанные") Тогда
			ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.НеправильныйИНН") Тогда
				ЕстьОшибкаПолученияДанных = Истина;
				ТекстОшибки = НСтр("ru='Нет информации о контрагенте'");
			ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ПолученоИзКэша") Тогда
			ИначеЕсли РезультатИндексыКонтрагента.СостояниеВыводаДанных = ПредопределенноеЗначение("Перечисление.СостоянияВыводаИндексовСПАРКРиски.ПолученоИзФоновогоЗадания") Тогда
			Иначе
				ЕстьОшибкаПолученияДанных = Истина;
				ТекстОшибки = НСтр("ru='Неопределенная ошибка'");
			КонецЕсли;
			Если ЕстьОшибкаПолученияДанных = Истина Тогда
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ТекстОшибки, , ЦветОшибки));
			Иначе
				
				// Если контрагент не активен, вывести сообщение "Контрагент прекратил деятельность %ДатаСтатуса%".
				Если (РезультатИндексыКонтрагента.Активен <> Истина) Тогда
					МассивСтрок.Добавить(
					Новый ФорматированнаяСтрока(
					СтрШаблон(
					НСтр("ru='Контрагент прекратил деятельность %1'"),
					Формат(РезультатИндексыКонтрагента.ДатаСтатуса, "ДЛФ=D")),
					,
					ЦветСтиляЦветОсобогоТекста));
					МассивСтрок.Добавить(Символы.ПС);
				Иначе
					// Если есть событие, вывести его. В противном случае - индексы.
					Если НЕ ПустаяСтрока(РезультатИндексыКонтрагента.ТипСобытияНазвание) Тогда
						МассивСтрок.Добавить(
						Новый ФорматированнаяСтрока(
						СтрШаблон(
						НСтр("ru='%1 %2'"),
						РезультатИндексыКонтрагента.ТипСобытияНазвание,
						Формат(РезультатИндексыКонтрагента.ДатаСобытия, "ДЛФ=D")),
						,
						ЦветСтиляЦветОсобогоТекста));
						МассивСтрок.Добавить(Символы.ПС);
					Иначе
						Если (РезультатИндексыКонтрагента.ИндексДолжнойОсмотрительности >= 0)
							И (РезультатИндексыКонтрагента.ИндексДолжнойОсмотрительности <= 100) Тогда
							МассивСтрок.Добавить(
							Новый ФорматированнаяСтрока(
							НСтр("ru='Индекс должной осмотрительности:'")));
							МассивСтрок.Добавить(Символы.НПП);
							МассивСтрок.Добавить(
							Новый ФорматированнаяСтрока(
							СтрШаблон(
							НСтр("ru='%1 (%2)'"),
							РезультатИндексыКонтрагента.ИндексДолжнойОсмотрительности,
							НРег(РезультатИндексыКонтрагента.ИДОГрадация)),
							, // Шрифт
							СПАРКРискиКлиентСервер.ЦветИндекса(
							РезультатИндексыКонтрагента.ИндексДолжнойОсмотрительности,
							"ИндексДолжнойОсмотрительности"), // ЦветТекста
							, // ЦветФона
							)); // Ссылка
						Иначе
							МассивСтрок.Добавить(
							Новый ФорматированнаяСтрока(
							НСтр("ru='Нет информации о контрагенте'")));
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ЕстьОшибкаПодключения = Истина Тогда
			МассивСтрок.Добавить(
			Новый ФорматированнаяСтрока(
			НСтр("ru='1СПАРК Риски: оценка надежности контрагентов.'")));
			МассивСтрок.Добавить(
			Новый ФорматированнаяСтрока(
			НСтр("ru='Подробнее'"),
			,
			,
			,
			"SPARK:About"));
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		
		#КонецОбласти
		
	КонецЕсли;
	
	Результат = Новый ФорматированнаяСтрока(МассивСтрок);
	Форма.Элементы.ДекорацияИндексыСПАРКРиски.Заголовок = Результат;
	
	
КонецПроцедуры

// Возвращает информацию об индексах СПАРК Риски в виде структуры форматированных строк.
// В случае, если информации нет в кэше, то инициируется фоновое задание.
// Если передан ИНН, то информация получается напрямую из веб-сервиса без фонового задания.
//
// Параметры:
//  ПредставленияИндексов - Структура - сюда необходимо передать форматированные строки, если необходимо переопределение;
//  РезультатИндексыКонтрагента - Структура, Неопределено - результата выполнения функции ИндексыСПАРККонтрагента
//                                 (ключи описаны в СПАРКРискиКлиентСервер.НовыйДанныеИндексов()),
//                                 или Неопределено, если необходимо вызвать эту функцию;
//  Контрагент - ОпределяемыйТип.КонтрагентБИП, Строка - Контрагент или ИНН контрагента;
//  Форма      - УправляемаяФорма - форма, в которой необходимо вывести информацию об индексах СПАРК Риски;
//  СтандартнаяОбработка - Булево - если вернуть сюда Ложь, то стандартная обработка не будет происходить.
//
Процедура ПолучитьПредставленияИндексов(
			ПредставленияИндексов,
			РезультатИндексыКонтрагента,
			Контрагент,
			Форма,
			СтандартнаяОбработка) Экспорт

КонецПроцедуры

#КонецОбласти

#КонецОбласти
