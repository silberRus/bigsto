#Область ПрограммныйИнтерфейс

// Обработчик подписки на событие СТ_КлючПоискаОбъектПоискаПриЗаписи.
// 	Формирует ключ поиска и записывает его в СТ_КлючиПоиска
//
Процедура СТ_КлючПоискаОбъектПоискаПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СТ_ОбщегоНазначения.ОбновитьКлючПоискаДляОбъектов(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Источник.Ссылка),
		Отказ);
	
КонецПроцедуры
	
// Обработчик подписки на событие СТ_КлючПоискаАналогиПриЗаписи.
// 	Формирует ключ поиска и записывает его в СТ_КлючиПоиска
//
Процедура СТ_КлючПоискаАналогиПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	масОбъектов = Новый Массив;
	
	ОтборПоНоменклатуре = Источник.Отбор.Найти("Номенклатура");
	Если ОтборПоНоменклатуре = Неопределено Тогда
		
		Для каждого Запись Из Источник Цикл
			Если ЗначениеЗаполнено(Запись.Номенклатура) Тогда
				масОбъектов.Добавить(Запись.Номенклатура);	    		
			КонецЕсли; 	
		КонецЦикла;		
		
	Иначе
		
		Если ЗначениеЗаполнено(ОтборПоНоменклатуре.Значение) Тогда
			масОбъектов.Добавить(ОтборПоНоменклатуре.Значение);	
		КонецЕсли;	
	
	КонецЕсли; 
	
	 
	СТ_ОбщегоНазначения.ОбновитьКлючПоискаДляОбъектов(
		масОбъектов,
		Отказ);
		
	// При изменении аналогов номенклатуры необходимо повторно провести по ней выгрузку данных на сайт
	Для каждого ТоварСсылка Из масОбъектов Цикл
		ОбменССайтомСобытия.ОбменССайтомПриЗаписиОбъектаПриЗаписи(ТоварСсылка, Отказ);	
	КонецЦикла; 	
		
КонецПроцедуры	

// Обработчик подписки на событие СТ_СкидкиНаценкиПриЗаписи.
// 	Определяет, может ли являться записываемая скидка - скидкой по производителю
//
Процедура СТ_СкидкиНаценкиПриЗаписиПриЗаписи(Источник, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДействиеСкидокНаценок.Источник КАК Соглашение
		|ИЗ
		|	РегистрСведений.ДействиеСкидокНаценок КАК ДействиеСкидокНаценок
		|ГДЕ
		|	ДействиеСкидокНаценок.СкидкаНаценка = &СкидкаНаценка
		|	И ДействиеСкидокНаценок.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДействияСкидок.Действует)
		|	И ДействиеСкидокНаценок.Источник <> ЗНАЧЕНИЕ(Справочник.СоглашенияСКлиентами.ПустаяСсылка)
		|	И ДействиеСкидокНаценок.Источник ССЫЛКА Справочник.СоглашенияСКлиентами";
		
		
	Запрос.УстановитьПараметр("СкидкаНаценка", Источник.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСоглашенийПоСкидке = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаСоглашенийПоСкидке.Следующий() Цикл
		
		СТ_ОбщегоНазначения.ОбновитьСкидкиПоСоглашению(ВыборкаСоглашенийПоСкидке.Соглашение, Отказ);	
		
	КонецЦикла;			
	
КонецПроцедуры

Процедура СТ_ДействиеСкидокНаценокПриЗаписиПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.Количество() = 0 тогда
		Возврат;
	КонецЕсли;	
	
	Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Источник.Отбор, "Источник") тогда
		Соглашение = Источник.Отбор["Источник"].Значение;
	Иначе
		Возврат;
	КонецЕсли; 	
	
	СТ_ОбщегоНазначения.ОбновитьСкидкиПоСоглашению(Соглашение, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

 
 

#КонецОбласти