#Область ПрограммныйИнтерфейс

#Область ПроверкаКонтрагентов

// Определение по имени события обработки оповещения необходимости выполнить запуск проверки контрагентов.
//
// Параметры:
//  Форма							 - УправляемаяФорма - Форма документа, в котором возникло событие обработки оповещения.
//  ИмяСобытия						 - Строка - Имя события обработки оповещения.
//  Параметр						 - Произвольный - Параметр обработки оповещения.
//  Источник						 - Произвольный - Источник обработки оповещения.
//  ТребуетсяПроверкаКонтрагентов	 - Булево - Результат определения необходимости выполнять проверку контрагента по
//                                            наступлению события.
Процедура ОпределитьНеобходимостьПроверкиКонтрагентовВОбработкеОповещения(
		Форма, ИмяСобытия, Параметр, Источник, ТребуетсяПроверкаКонтрагентов) Экспорт
		
	// Определение объекта и ссылки.
	ОбъектИСсылкаПоФорме 	= ПроверкаКонтрагентовКлиентСервер.ОбъектИСсылкаПоФорме(Форма);
	ДокументСсылка 			= ОбъектИСсылкаПоФорме.Ссылка;
	
	ТипДокумента 	= ТипЗнч(ДокументСсылка);
	
	Если ИмяСобытия = "Запись_СчетФактураВыданный" 
		ИЛИ ИмяСобытия = "Запись_СчетФактураПолученныйНалоговыйАгент"
		ИЛИ ИмяСобытия = "Запись_СчетФактураПолученный" Тогда
		
		// Проверяем только если в документе счет-фактура находится в подвале.
		ТребуетсяПроверкаКонтрагентов = ПроверкаКонтрагентовКлиентСервер.ЭтоДокументСоСчетомФактуройВПодвале(Форма);
		
	ИначеЕсли ИмяСобытия = "Запись_Контрагенты" Тогда
		
		// При записи контрагента проверку делаем в любом случае.
		ТребуетсяПроверкаКонтрагентов = Истина;
		
	Иначе
		
		ТребуетсяПроверкаКонтрагентов = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

// Позволяет заменить стандартное предложение включить проверку контрагентов.
//
// Параметры:
//  СтандартнаяОбработка  - Булево - Истина, если нужно сохранить стандартное поведение.
//
Процедура ПредложитьВключитьПроверкуКонтрагентов(СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
