/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Механизм партионного учета версии 2.2
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Запуск расчета партий.
//
// Параметры:
//	ПараметрыЗапуска - Структура с ключами
//		Дата - Дата - период расчета
//		МассивОрганизаций - СправочникСсылка.Организации - рассчитывать только по указанной организации;
//			также будут пересчитаны партии по организациям, связанным по схеме Интеркампани с указанной
//					- Массив - массив организаций, по которым надо рассчитать партии, другие организации не рассчитываются
//		СхемаРасчета - ТаблицаЗначений - (см. УниверсальныеМеханизмыПартийИСебестоимости.СхемаРасчетаПартий)
//			уже построенная схема расчета может быть получена из модуля ПартионныйУчет
//		МестоВызоваРасчета - Строка - откуда вызван расчет, для протокола
//		ВыполняетсяЗакрытиеМесяца - Булево - признак вызова расчета из механизма закрытия месяца
//	ПараметрыРасчета - Структура - параметры расчета, сформированные в вызывающем механизме.
//	ПараметрыОтладки - Структура - предназначена для переопределения одноименных свойств структуры ПараметрыРасчета.
//		Подробнее см. пояснения в коде ИнициализироватьПараметрыРасчетаПартий() к параметру ПараметрыОтладки.
//
Процедура РассчитатьВсе(ПараметрыЗапуска, ПараметрыРасчета = Неопределено, ПараметрыОтладки = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВерсии22() Тогда
		// Расчет будет выполнен в версии 2.1
		ПартионныйУчет.РассчитатьВсе(ПараметрыЗапуска.Дата, ПараметрыЗапуска.МассивОрганизаций);
		Возврат;
	КонецЕсли;
	
	// Инициализируем параметры отладки.
	ИнициализироватьПараметрыОтладки(ПараметрыОтладки, ПараметрыЗапуска);
	
	// Проверим, закончено ли обновление ИБ
	УниверсальныеМеханизмыПартийИСебестоимости.ПроверитьБлокировкуДанныхПриОбновленииИБ(Ложь, Истина, ПараметрыОтладки);
	
	#Область СхемаРасчета

	// Определим по каким периодам и организациям требуется перерасчет
	Если ПараметрыЗапуска.Свойство("СхемаРасчета") Тогда
		
		СхемаРасчета = ПараметрыЗапуска.СхемаРасчета;
		
		Если ПараметрыЗапуска.Свойство("ВременныеТаблицы") Тогда
			ВременныеТаблицы = ПараметрыЗапуска.ВременныеТаблицы;
		Иначе
			ВременныеТаблицы = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьВТЗаданияДоРасчета(-1, Неопределено);
		КонецЕсли;
		
	Иначе
		НомерЗаданияДоРасчета = УниверсальныеМеханизмыПартийИСебестоимости.УвеличитьНомерЗаданияКРасчетуСебестоимости();
		
		НачатьТранзакцию();
		
		Попытка
			
			УниверсальныеМеханизмыПартийИСебестоимости.ЗаблокироватьРегистрЗаданий(НомерЗаданияДоРасчета);
			
			СхемаРасчета = УниверсальныеМеханизмыПартийИСебестоимости.СхемаРасчетаПартий(
				ПараметрыЗапуска.Дата,
				ПараметрыЗапуска.МассивОрганизаций);
				
			Если СхемаРасчета.Количество() > 0 Тогда
				ВременныеТаблицы = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьВТЗаданияДоРасчета(
					НомерЗаданияДоРасчета,
					СхемаРасчета[СхемаРасчета.Количество() - 1].Организации);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ВызватьИсключение ТекстОшибки;
		КонецПопытки;
		
	КонецЕсли;
	
	ВыполняетсяЗакрытиеМесяца = ПараметрыЗапуска.Свойство("ВыполняетсяЗакрытиеМесяца");
	
	ДатаПереходаНаПартионныйУчетВерсии22 = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ДатаПереходаНаПартионныйУчетВерсии22();
	
	Если СхемаРасчета.Количество() > 0 И НачалоМесяца(СхемаРасчета[0].Дата) < ДатаПереходаНаПартионныйУчетВерсии22 Тогда
		
		// Некоторые периоды надо рассчитать в версии 2.1
		Для Каждого СтрокаСхемыРасчета Из СхемаРасчета Цикл
			Если КонецМесяца(СтрокаСхемыРасчета.Дата) + 1 = ДатаПереходаНаПартионныйУчетВерсии22 // последний месяц до перехода на ПУ 2.2
			 ИЛИ СтрокаСхемыРасчета = СхемаРасчета[СхемаРасчета.Количество() - 1] Тогда // последняя строка схемы расчета
				Прервать; // нашли строку схемы, по которую надо рассчитать партии в версии 2.1
			КонецЕсли;
		КонецЦикла;
		
		// Вызов расчета партий в версии 2.1
		ПартионныйУчет.РассчитатьВсе(СтрокаСхемыРасчета.Дата, СтрокаСхемыРасчета.Организации);
		
		НомерЗаданияДоРасчета = УниверсальныеМеханизмыПартийИСебестоимости.УвеличитьНомерЗаданияКРасчетуСебестоимости();
	
		НачатьТранзакцию();
		
		Попытка
			
			УниверсальныеМеханизмыПартийИСебестоимости.ЗаблокироватьРегистрЗаданий(НомерЗаданияДоРасчета);
			
			// Обновим схему расчета
			СхемаРасчета = УниверсальныеМеханизмыПартийИСебестоимости.СхемаРасчетаПартий(
				ПараметрыЗапуска.Дата,
				ПараметрыЗапуска.МассивОрганизаций);
			
			Если СхемаРасчета.Количество() > 0 Тогда
				ВременныеТаблицы = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьВТЗаданияДоРасчета(
					НомерЗаданияДоРасчета,
					СхемаРасчета[СхемаРасчета.Количество() - 1].Организации);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ВызватьИсключение ТекстОшибки;
		КонецПопытки;
		
	КонецЕсли;
	
	Если СхемаРасчета.Количество() = 0 Тогда
		// Расчет не требуется
		Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'За период ""%1"" по ""%2"" расчет партий версии 2.2 не требуется.'"),
			ПротоколРасчетаПартийИСебестоимости.ПредставлениеПериодаРасчета(ПараметрыЗапуска.Дата),
			УниверсальныеМеханизмыПартийИСебестоимости.ПредставлениеОрганизаций(ПараметрыЗапуска.МассивОрганизаций, ", "));
		ЗаписьЖурналаРегистрации(
			УниверсальныеМеханизмыПартийИСебестоимости.ИмяСобытияЖурналаРегистрации(
				Новый Структура("ЗапущенРасчетПартий", Истина),
				НСтр("ru='Расчет не требуется'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())),
			УровеньЖурналаРегистрации.Информация,,,
			Комментарий);
		Возврат;
	ИначеЕсли НачалоМесяца(СхемаРасчета[0].Дата) < ДатаПереходаНаПартионныйУчетВерсии22 Тогда
		// Расчет невозможен - по каким-то причинам не выполнен пересчет периодов в версии 2.1
		Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'За период ""%1"" по ""%2"" расчет партий версии 2.2 невозможен - расчет партий версии 2.1 за предыдущие периоды выполнен с ошибками.'"),
			ПротоколРасчетаПартийИСебестоимости.ПредставлениеПериодаРасчета(ПараметрыЗапуска.Дата),
			УниверсальныеМеханизмыПартийИСебестоимости.ПредставлениеОрганизаций(ПараметрыЗапуска.МассивОрганизаций, ", "));
		ЗаписьЖурналаРегистрации(
			УниверсальныеМеханизмыПартийИСебестоимости.ИмяСобытияЖурналаРегистрации(
				Новый Структура("ЗапущенРасчетПартий", Истина),
				НСтр("ru='Расчет невозможен'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())),
			УровеньЖурналаРегистрации.Ошибка,,,
			Комментарий);
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	// Запомним состояние активности текущих итогов у обслуживаемых регистров
	СостояниеИтоговРегистров = УниверсальныеМеханизмыПартийИСебестоимости.СостояниеИтоговРегистров();
	
	Для Каждого СтрокаСхемыРасчета Из СхемаРасчета Цикл
		
		Если НЕ ВыполняетсяЗакрытиеМесяца Тогда
			// Выполним операции механизма закрытия месяца, вызываемые до расчета этапа, если расчет вызван не в рамках закрытия месяца.
			// При закрытии месяца эти действия выполнит сам механизм закрытия месяца.
			УниверсальныеМеханизмыПартийИСебестоимости.ВыполнитьОперацииЗакрытияМесяцаДляПодготовкиКРасчетуЭтапа(СтрокаСхемыРасчета);
		КонецЕсли;
		
		// Инициализируем параметры расчета
		ПараметрыЗапускаРасчетаПериода = ИнициализироватьПараметрыЗапускаРасчетаПериода(СтрокаСхемыРасчета);
		
		// Формирует временные таблицы:
		// - ВТПравилаЗаполненияПоляТипЗаписи (правила проверки первичных записей регистра себестоимости)
		// - ВТНалогообложениеОрганизацийПоУмолчанию (налогообложение организаций по умолчанию)
		// - ВТОтборАналитикаПоПартнерам (ключи аналитики партнеров с рассчитываемыми организациями)
		// - ВТСтоимостьПартийТоваров (расширенный аналог регистра сведений СтоимостьТоваров с полями партий; пока пустая)
		ИнициализироватьПараметрыРасчетаПартий(ПараметрыЗапускаРасчетаПериода, ПараметрыРасчета, ПараметрыОтладки);
		
		ПараметрыРасчета.Вставить("ИсходныеЗаданияКРасчетуСебестоимости", ВременныеТаблицы);
		
		// Этап 0 - подготовка к расчету
		// - исправляет некорректные исходные данные
		// - выполняет проверку данных
		ПодготовкаИсходныхДанныхКРасчету(ПараметрыРасчета);
		
		
		// Этап 8
		// Формирует движения по регистрам:
		// - СебестоимостьТоваров
		ЗаполнениеПартийВРегистреСебестоимостьТоваров(ПараметрыРасчета);
		
		// Этап 8а
		// Формирует движения по регистрам:
		// - ВыручкаИСебестоимостьПродаж
		ЗаполнениеПартийВРегистреВыручкаИСебестоимостьПродаж(ПараметрыРасчета);
		
		// Этап 9 (расчет предварительной стоимости)
		// Заполняет временные таблицы:
		// - ВТСтоимостьПартийТоваров
		// Формирует движения по регистрам:
		// - СтоимостьТоваров
		РасчетСебестоимостиТоваров(ПараметрыРасчета, СтрокаСхемыРасчета, Истина, ПараметрыОтладки);
		
		// Этап 10
		// Формирует движения по регистрам:
		// - ПартииПрочихРасходов
		// - СебестоимостьТоваров
		// - ДвиженияНоменклатураДоходыРасходы
		РаспределениеДопРасходовМеждуПартиямиИТоварами(ПараметрыРасчета);
		
		// Этап 10.1
		// Формирует движения по регистрам:
		// - СебестоимостьТоваров
		// - ВыручкаИСебестоимостьПродаж
		// - ПрочиеРасходы
		Если ПараметрыРасчета.ФО.РаспределениеДопРасходовПоВыбывшимТоварам Тогда
			СписаниеРасходовНаВыбытиеТоваровПрошлыхПериодов(ПараметрыРасчета);
		КонецЕсли;
		
		// Этап 10.2 (расчет предварительной стоимости с учетом доп. расходов)
		// Заполняет временные таблицы:
		// - ВТСтоимостьПартийТоваров
		// Формирует движения по регистрам:
		// - СтоимостьТоваров
		Если УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТКэшПартииПрочихРасходов") > 0 Тогда
			РасчетСебестоимостиТоваров(ПараметрыРасчета, СтрокаСхемыРасчета, Истина, ПараметрыОтладки);
		КонецЕсли;
		
		// Этап 11
		// Формирует движения по регистрам:
		// - ДетализацияПартийТоваровДляНДСиУСН
		ПодготовкаДанныхДляУчетаНДСиУСН(ПараметрыРасчета);
		
		// Этап 12
		// Формирует движения по регистрам:
		// - ПартииПрочихРасходов
		ПодготовкаДанныхДляПартийПрочихРасходов(ПараметрыРасчета);
		
		// Этап 13
		// Формирует документы РаспределениеНДС с движениями по регистрам:
		// - ПартииПрочихРасходов
		// - ПрочиеАктивыПассивы
		// - ПрочиеРасходы
		РаспределениеНДСПоВидамНалогообложения(ПараметрыРасчета);
		
		
		// Этап 17 (расчет фактической себестоимости)
		// Перезаполняет временные таблицы:
		// - ВТСтоимостьПартийТоваров
		// Формирует движения по регистрам:
		// - см. РасчетСебестоимости.ИсходящиеДанныеМеханизма()
		РасчетСебестоимостиТоваров(ПараметрыРасчета, СтрокаСхемыРасчета, Ложь, ПараметрыОтладки);
		
		// Записываем сформированные движения и завершаем расчет периода
		УниверсальныеМеханизмыПартийИСебестоимости.ЗаписатьСформированныеДвижения(
			ПараметрыРасчета,
			ПараметрыОтладки.ПротоколыРасчета);
		
		Если НЕ ВыполняетсяЗакрытиеМесяца Тогда
			// Выполним операции механизма закрытия месяца, вызываемые после расчета этапа, если расчет вызван не в рамках закрытия месяца.
			// При закрытии месяца эти действия выполнит сам механизм закрытия месяца.
			УниверсальныеМеханизмыПартийИСебестоимости.ВыполнитьОперацииЗакрытияМесяцаДляЗавершенияРасчетаЭтапа(СтрокаСхемыРасчета);
		КонецЕсли;
		
	КонецЦикла;
	
	// Вернем признак активности текущих итогов в состояние, которое было до начала расчета
	УниверсальныеМеханизмыПартийИСебестоимости.ВернутьСостояниеИтоговРегистров(СостояниеИтоговРегистров);
	
КонецПроцедуры

// Обертка для запуска расчета - выполняет расчет в Попытке - Исключении
// Параметры аналогичны процедуре РассчитатьВсе()
//
// Возвращаемое значение - Булево - признак успешного выполнения расчета.
//
Функция РассчитатьВсеВПопыткеИсключении(ПараметрыЗапуска, ПараметрыРасчета = Неопределено, ПараметрыОтладки = Неопределено) Экспорт
	
	Отказ = Ложь;
	
	Попытка
		РассчитатьВсе(ПараметрыЗапуска,	ПараметрыРасчета, ПараметрыОтладки);
	Исключение
		
		Если НЕ ЗначениеЗаполнено(ПараметрыРасчета) Тогда
			ПараметрыРасчета = УниверсальныеМеханизмыПартийИСебестоимости.ИнициализироватьОсновныеПараметрыРасчета(
				ПараметрыЗапуска.Дата,
				ПараметрыЗапуска.МассивОрганизаций,
				Истина,
				Истина);
		КонецЕсли;
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		УниверсальныеМеханизмыПартийИСебестоимости.ОбработатьИсключениеВызоваРассчитатьВсе(
			ПараметрыРасчета,
			ИнформацияОбОшибке,
			Отказ);
		
	КонецПопытки;
	
	Возврат НЕ Отказ;
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПереходНаВерсию241

// Вызывается при обновлении на версию ERP 2.4.1 и соответствующие ей версии КА и УТ.
// Является урезанным вариантом основной процедуры расчета:
// 	- выполняются только требуемые этапы
//	- нестандартно рассчитываются кэши остатков и оборотов
//	- нестандартно обрабатывает рассчитанные данные перед записью
//
// Параметры:
//	ПараметрыЗапуска - Структура с ключами
//		Дата - Дата - период расчета
//		МассивОрганизаций - Массив - массив организаций, по которым надо рассчитать партии
//		МестоВызоваРасчета - Строка - откуда вызван расчет, для протокола
//
Функция РассчитатьВсеВПопыткеИсключенииПриПереходеНаВерсию241(ПараметрыЗапуска) Экспорт
	
	Отказ = Ложь;
	
	Попытка
		РассчитатьВсеПриПереходеНаВерсию241(ПараметрыЗапуска);
	Исключение
		
		ПараметрыРасчета = УниверсальныеМеханизмыПартийИСебестоимости.ИнициализироватьОсновныеПараметрыРасчета(
			ПараметрыЗапуска.Дата,
			ПараметрыЗапуска.МассивОрганизаций,
			Истина,
			Истина);
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		УниверсальныеМеханизмыПартийИСебестоимости.ОбработатьИсключениеВызоваРассчитатьВсе(
			ПараметрыРасчета,
			ИнформацияОбОшибке,
			Отказ);
		
	КонецПопытки;
	
	Возврат НЕ Отказ;
	
КонецФункции

// Основная процедура расчета новых полей при обновлении.
//
Процедура РассчитатьВсеПриПереходеНаВерсию241(ПараметрыЗапуска) Экспорт
	Перем ПараметрыРасчета, ПараметрыОтладки;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Проверим возможность расчета - он требуется только для партионного учета версии 2.2.
	Если НЕ УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВерсии22()
	 ИЛИ НачалоМесяца(ПараметрыЗапуска.Дата) < УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ДатаПереходаНаПартионныйУчетВерсии22() Тогда
		Возврат;
	КонецЕсли;
	
	// Инициализируем параметры отладки.
	ИнициализироватьПараметрыОтладки(ПараметрыОтладки, ПараметрыЗапуска);
	
	// Подготовим схему для расчета одного периода.
	СхемаРасчета = УниверсальныеМеханизмыПартийИСебестоимости.ПустаяСхемаРасчетаПартий();
	
	УниверсальныеМеханизмыПартийИСебестоимости.ДобавитьСтрокуСхемыРасчетаПартий(
		СхемаРасчета,
		ПараметрыЗапуска.Дата,
		ПараметрыЗапуска.МассивОрганизаций,
		Истина);
		
	// Подготовим описание пересчитываемых регистров.
	ОписаниеПересчитываемыхРегистров = ОписаниеПересчитываемыхРегистровПриПереходеНаВерсию241();
	
	// Запомним состояние активности текущих итогов у обслуживаемых регистров
	СостояниеИтоговРегистров = УниверсальныеМеханизмыПартийИСебестоимости.СостояниеИтоговРегистров();
	
	Для Каждого СтрокаСхемыРасчета Из СхемаРасчета Цикл
		
		// Инициализируем параметры расчета.
		ПараметрыЗапускаРасчетаПериода = ИнициализироватьПараметрыЗапускаРасчетаПериода(СтрокаСхемыРасчета);
		ПараметрыЗапускаРасчетаПериода.Вставить("ВыполняетсяОбновлениеИБ", Истина);
		
		// Формирует временные таблицы:
		// - ВТПравилаЗаполненияПоляТипЗаписи (правила проверки первичных записей регистра себестоимости)
		// - ВТНалогообложениеОрганизацийПоУмолчанию (налогообложение организаций по умолчанию)
		// - ВТОтборАналитикаПоПартнерам (ключи аналитики партнеров с рассчитываемыми организациями)
		// - ВТСтоимостьПартийТоваров (расширенный аналог регистра сведений СтоимостьТоваров с полями партий; пока пустая)
		ИнициализироватьПараметрыРасчетаПартий(ПараметрыЗапускаРасчетаПериода, ПараметрыРасчета, ПараметрыОтладки);
		
		// Этап 0 - подготовка к расчету
		// - исправляет некорректные исходные данные
		// - выполняет проверку данных
		ПодготовкаИсходныхДанныхКРасчету(ПараметрыРасчета);
		
		// Загрузим из ИБ в кэш результаты расчета партий не пересчитываемых регистров и обновим их расчетные кэши.
		// На основании этих данных будут пересчитаны изменяемые регистры.
		ПодготовкаИсходныхДанныхКРасчетуПриПереходеНаВерсию241(ПараметрыРасчета, ОписаниеПересчитываемыхРегистров);
		
		// Этап 8а
		// Формирует движения по регистрам:
		// - ВыручкаИСебестоимостьПродаж
		ЗаполнениеПартийВРегистреВыручкаИСебестоимостьПродаж(ПараметрыРасчета);
		
		
		// Этап 17 (расчет фактической себестоимости)
		// Формирует движения по регистрам:
		// - см. выше, РегистрыДляПересчетаСебестоимости
		РасчетСебестоимостиТоваров(ПараметрыРасчета, СтрокаСхемыРасчета, Ложь, ПараметрыОтладки);
		
		// Подготовка данных к записи:
		// - скорректируем ВТКэш регистров:
		//		- из ВТКэш возьмем только пересчитываемые ресурсы
		//		- добавим к ним непересчитываемые ресурсы из ИБ
		//		- добавим к ним непересчитываемые записи из ИБ (если для регистра не выполняется расчет партий или себестоимости)
		// - удалим из коллекции Движения те регистры, которые не изменяются при обновлении ИБ
		// - после этого можно воспользоваться стандартным механизмом записи движений,
		//   в результате в ИБ будут записаны только измененные пересчитанные ресурсы
		ПодготовкаРасчетныхДанныхКЗаписиПриПереходеНаВерсию241(ПараметрыРасчета, ОписаниеПересчитываемыхРегистров);
		
		// Записываем сформированные движения и завершаем расчет периода
		УниверсальныеМеханизмыПартийИСебестоимости.ЗаписатьСформированныеДвижения(
			ПараметрыРасчета,
			ПараметрыОтладки.ПротоколыРасчета);
		
	КонецЦикла;
	
	// Вернем признак активности текущих итогов в состояние, которое было до начала расчета
	УниверсальныеМеханизмыПартийИСебестоимости.ВернутьСостояниеИтоговРегистров(СостояниеИтоговРегистров);
	
КонецПроцедуры

// Описание пересчитываемых полей регистров при обновлении.
//
Функция ОписаниеПересчитываемыхРегистровПриПереходеНаВерсию241()
	
	РегистрыДляПересчетаПартий = Новый Соответствие;
	РегистрыДляПересчетаПартий.Вставить(Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя, 
		Новый Структура); // все ресурсы
		
	РегистрыДляПересчетаСебестоимости = Новый Соответствие;
	РегистрыДляПересчетаСебестоимости.Вставить(Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя,
		Новый Структура); // все ресурсы
	РегистрыДляПересчетаСебестоимости.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя,
		Новый Структура); // все ресурсы
	РегистрыДляПересчетаСебестоимости.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя,
		Новый Структура); // все ресурсы
	
	ОписаниеПересчитываемыхРегистров = Новый Структура;
	ОписаниеПересчитываемыхРегистров.Вставить("РегистрыДляПересчетаПартий", 	   РегистрыДляПересчетаПартий);
	ОписаниеПересчитываемыхРегистров.Вставить("РегистрыДляПересчетаСебестоимости", РегистрыДляПересчетаСебестоимости);
	
	Возврат ОписаниеПересчитываемыхРегистров;
	
КонецФункции

// Нестандартная подготовка расчетных кэшей при обновлении.
//
Процедура ПодготовкаИсходныхДанныхКРасчетуПриПереходеНаВерсию241(ПараметрыРасчета, ОписаниеПересчитываемыхРегистров)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаИсходныхДанныхКРасчетуПриПереходеНаВерсию241");
	
	УниверсальныеМеханизмыПартийИСебестоимости.ВыполняетсяЗаполнениеПартийВРегистреСебестоимостьТоваров(ПараметрыРасчета, Ложь); // выполнено
	
	Для Каждого ОбслуживаемыйРегистр Из ИсходящиеДанныеМеханизма() Цикл
		
		ИмяРегистра = ОбслуживаемыйРегистр.Ключ.Имя;
		
		Если ОписаниеПересчитываемыхРегистров.РегистрыДляПересчетаПартий.Получить(ИмяРегистра) <> Неопределено Тогда
			Продолжить; // этот регистр будет пересчитан
		КонецЕсли;
		
		// Сформируем "правильный" ВТКэш.
		УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьРезультатыПрошлогоРасчета(
			ПараметрыРасчета,
		    ИмяРегистра,
			Ложь,
			,
			Истина);
			
		// Обновим расчетные кэши оборотов и конечных остатков.
		УниверсальныеМеханизмыПартийИСебестоимости.ОбновитьРасчетныеКэшиРегистра(
			ПараметрыРасчета,
			ИмяРегистра);
		
	КонецЦикла;
	
КонецПроцедуры

// Нестандартная подготовка расчетных данных к записи при обновлении.
//
Процедура ПодготовкаРасчетныхДанныхКЗаписиПриПереходеНаВерсию241(ПараметрыРасчета, ОписаниеПересчитываемыхРегистров)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаРасчетныхДанныхКЗаписиПриПереходеНаВерсию241");
	
	НепересчитываемыеРегистры = Новый Структура;
	
	Для Каждого КлючИЗначение Из ПараметрыРасчета.Движения Цикл
		
		ИмяРегистра 	 = КлючИЗначение.Ключ;
		ОписаниеРегистра = КлючИЗначение.Значение;
		
		РесурсыРасчетаПартий 		= ОписаниеПересчитываемыхРегистров.РегистрыДляПересчетаПартий.Получить(ИмяРегистра);
		РесурсыРасчетаСебестоимости = ОписаниеПересчитываемыхРегистров.РегистрыДляПересчетаСебестоимости.Получить(ИмяРегистра);
		
		Если РесурсыРасчетаПартий = Неопределено И РесурсыРасчетаСебестоимости = Неопределено Тогда
			НепересчитываемыеРегистры.Вставить(ИмяРегистра);
			Продолжить; // этот регистр не пересчитывается
	 	КонецЕсли;
		
		УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьРезультатыПересчетаЧастиРесурсов(
			ПараметрыРасчета,
			ИмяРегистра,
			РесурсыРасчетаПартий,
			РесурсыРасчетаСебестоимости);
		
	КонецЦикла;
	
	Для Каждого КлючИЗначение Из НепересчитываемыеРегистры Цикл
		ПараметрыРасчета.Движения.Удалить(КлючИЗначение.Ключ);
	КонецЦикла;

КонецПроцедуры

// Корректирует первичные движения документов по регистру ВыручкаИСебестоимостьПродаж при обновлении.
//
Процедура ЗаполнитьНовыеПоляРегистраВыручкаИСебестоимостьПродажПриПереходеНаВерсию241(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "ЗаполнитьНовыеПоляРегистраВыручкаИСебестоимостьПродажПриПереходеНаВерсию241");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ВыручкаИСебестоимостьПродаж"" КАК ИмяРегистра,
	|	Т.Регистратор КАК Ссылка,
	|	АналитикаПартнеров.Организация КАК Организация,
	|	1 КАК КодОшибки
	|ПОМЕСТИТЬ ВТРегистраторыСНекорректнымиДвижениями
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПартнеров
	|		ПО Т.АналитикаУчетаПоПартнерам = АналитикаПартнеров.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО Т.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО АналитикаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И АналитикаПартнеров.Организация В(&МассивОрганизаций)
	|	И НЕ Т.РасчетСебестоимости
	|	И СпрНоменклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)";
	
	РасшифровкаКодовОшибок = Новый Соответствие;
	РасшифровкаКодовОшибок.Вставить(1, НСтр("ru='Не заполнены новые поля регистра'"));
	
	УниверсальныеМеханизмыПартийИСебестоимости.ПерепровестиДокументыПоОтдельнымРегистрамНакопления(
		ПараметрыРасчета,
		Запрос,
		РасшифровкаКодовОшибок,
		НСтр("ru='переход на новую версию конфигурации'"));
	
КонецПроцедуры

#КонецОбласти

#Область ЭтапыРасчета

// Этап 0 - подготовка к расчету
//
Процедура ПодготовкаИсходныхДанныхКРасчету(ПараметрыРасчета)
	
	Если ПараметрыРасчета.ФормироватьНачальныеОстаткиПартий22 И НЕ ПараметрыРасчета.ВыполняетсяОбновлениеИБ Тогда
		// При расчете первого месяца на партионном учете версии 2.2
		// надо сформировать остатки себестоимости в разрезе партий на конец прошлого месяца.
		СформироватьНачальныеОстаткиПартийСебестоимостьТоваров(ПараметрыРасчета);
		// Аналогично для партий НДС и УСН.
		СформироватьНачальныеОстаткиПартийНДСиУСН(ПараметрыРасчета);
		// Аналогично для НДСУпр в регистре НДСПредъявленный.
		СформироватьНачальныеОстаткиНДСПредъявленный(ПараметрыРасчета);
	КонецЕсли;
	
	// При необходимости заполним служебного реквизита РасчетПартий:
	// если расчет текущего периода ранее был выполнен в партионном учете версии 2.1, то этот реквизит не заполнялся.
	Если НЕ ПараметрыРасчета.ВыполняетсяОбновлениеИБ
	 И ПроверитьНеобходимостьЗаполненияРеквизитаРасчетПартий(ПараметрыРасчета) Тогда 
	
			
		// ПартииПрочихРасходов
		ОписаниеРегистра    = ПараметрыРасчета.Движения[Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя];
		ТекстРасчетПартий   =
			"ВЫБОР КОГДА Т.РасчетПартий ТОГДА ИСТИНА
			|	КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|	 И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовУпр, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
			|		ТОГДА ИСТИНА
			|	КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|	 И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
			|		ТОГДА ИСТИНА
			|	КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 
			|	 И Т.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
			|	 И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
			|		ТОГДА ИСТИНА
			|	ИНАЧЕ ЛОЖЬ
			|КОНЕЦ";
		ТекстСоединения     =
			"ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
			|	ПО Т.СтатьяРасходов = СтатьиРасходов.Ссылка";
		ТекстУпорядочивание = "Т.Подразделение, Т.СтатьяРасходов, Т.АналитикаРасходов";
		ЗаполнитьРеквизитРасчетПартий(ПараметрыРасчета, ОписаниеРегистра, ТекстРасчетПартий, ТекстСоединения, ТекстУпорядочивание);
		
		// СебестоимостьТоваров
		ОписаниеРегистра    = ПараметрыРасчета.Движения[Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя];
		ТекстРасчетПартий   =
			"ВЫБОР КОГДА Т.РасчетПартий ТОГДА ИСТИНА
			|	КОГДА НЕ Т.РасчетСебестоимости
			|		И Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПустаяСсылка)
			// Прочие расходы на себестоимость товаров
			|		И ((Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|			И Т.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
			|			И Т.СтатьяРасходовСписания <> НЕОПРЕДЕЛЕНО
			|			И Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
			|			И (Т.Количество = 0 И Т.Стоимость = 0 И Т.СтоимостьБезНДС = 0)
			|			И (Т.ДопРасходы <> 0 ИЛИ Т.ДопРасходыБезНДС <> 0))
			|		 )
			|	ТОГДА ИСТИНА
			|	ИНАЧЕ ЛОЖЬ
			|КОНЕЦ";
		ТекстСоединения     = "";
		ТекстУпорядочивание = "Т.АналитикаУчетаНоменклатуры, Т.ВидЗапасов";
		ЗаполнитьРеквизитРасчетПартий(ПараметрыРасчета, ОписаниеРегистра, ТекстРасчетПартий, ТекстСоединения, ТекстУпорядочивание);
		
		// ДвиженияНоменклатураДоходыРасходы
		ОписаниеРегистра    = ПараметрыРасчета.Движения[Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя];
		ТекстРасчетПартий   =
			"ВЫБОР КОГДА Т.РасчетПартий ТОГДА ИСТИНА
			|	КОГДА НЕ Т.РасчетСебестоимости
			|		И Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость)
			|		И Т.ДокументДвижения <> НЕОПРЕДЕЛЕНО
			|		И Т.Количество = 0
			|	ТОГДА ИСТИНА
			|	ИНАЧЕ ЛОЖЬ
			|КОНЕЦ";
		ТекстСоединения     = "";
		ТекстУпорядочивание = "Т.АналитикаУчетаНоменклатуры, Т.ВидЗапасов";
		ЗаполнитьРеквизитРасчетПартий(ПараметрыРасчета, ОписаниеРегистра, ТекстРасчетПартий, ТекстСоединения, ТекстУпорядочивание);
		
	КонецЕсли;
	
	Если НЕ ПараметрыРасчета.ВыполняетсяОбновлениеИБ Тогда
		
		// Исправим проблемы в движениях и в самих документах в рассчитываемом периоде.
		ИсправитьПроблемыВДвиженияхИДокументах(ПараметрыРасчета);
		
		
		// Очистим данные партионного учета версии 2.1 в рассчитываемом периоде.
		ОчиститьНеиспользуемыеДанныеПартионногоУчетаВерсии21(ПараметрыРасчета);
		
		// Проверим корректность исходных данных для расчета.
		УниверсальныеМеханизмыПартийИСебестоимости.ПроверитьКорректностьИсходныхДанныхДоРасчета(ПараметрыРасчета);
		
	Иначе
		
		// Исправим первичные движения документов по регистру ВыручкаИСебестоимостьПродаж.
		ЗаполнитьНовыеПоляРегистраВыручкаИСебестоимостьПродажПриПереходеНаВерсию241(ПараметрыРасчета);
		
	КонецЕсли;
	
	// Обновим кэши регистров, данные которых были изменены в этой процедуре.
	УниверсальныеМеханизмыПартийИСебестоимости.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета, Истина);
	
КонецПроцедуры


// Этап 8 (Контекст: "ПартииСебестоимостиТоваров")
//
Процедура ЗаполнениеПартийВРегистреСебестоимостьТоваров(ПараметрыРасчета)
	
	// Заполним служебные параметры этого этапа (в других этапах не требуется).
	УниверсальныеМеханизмыПартийИСебестоимости.ВыполняетсяЗаполнениеПартийВРегистреСебестоимостьТоваров(ПараметрыРасчета, Истина);
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "ЗаполнениеПартийВРегистреСебестоимостьТоваров");
	
	// 1. Инициализация структуры данных для расчета
	//	- формирует структуру ПараметрыРасчета.РаспределениеПартий
	ИнициализироватьРаспределениеПартий(
		ПараметрыРасчета,
		ТаблицаДляРаспределенияПартийТоваров(ПараметрыРасчета),
		ОписаниеЦепочекПартийТоваров(ПараметрыРасчета),
		ОписаниеДвиженийПартийТоваров(ПараметрыРасчета),
		ОписаниеНезаписываемыхПартийТоваров(ПараметрыРасчета));
	
	// 2. Получение исходных данных для расчета
	// 	- формирует временную таблицу Данные
	ПолучитьДанныеДляПартийТоваров(ПараметрыРасчета);
	
	// 3. Получение цепочек из исходных данных
	// 	- формирует временные таблицы Источники и Приемники
	ПостроитьЦепочкиДвижений(ПараметрыРасчета);
	
	// 4. Заполнение партий в цепочках
	// 	- заполняет таблицу ПараметрыРасчета.РаспределениеПартий.РасчетныеПартии
	РассчитатьПартииПоЦепочкам(ПараметрыРасчета);
	
	// 5. Помещение данных в таблицу-приемник и очистка вспомогательных временных таблиц.
	// 	- формирует движения по регистру СебестоимостьТоваров
	ЗавершитьРаспределениеПартий(ПараметрыРасчета);
	
	// Заполним служебные параметры этого этапа (в других этапах не требуется).
	УниверсальныеМеханизмыПартийИСебестоимости.ВыполняетсяЗаполнениеПартийВРегистреСебестоимостьТоваров(ПараметрыРасчета, Ложь);
	
КонецПроцедуры

// Этап 8а (Контекст: "ПартииВыручкаИСебестоимостьПродаж")
//
Процедура ЗаполнениеПартийВРегистреВыручкаИСебестоимостьПродаж(ПараметрыРасчета)
	
	// Заполним служебные параметры этого этапа (в других этапах не требуется).
	УниверсальныеМеханизмыПартийИСебестоимости.ВыполняетсяЗаполнениеПартийВРегистреВыручкаИСебестоимостьПродаж(ПараметрыРасчета, Истина);
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "ЗаполнениеПартийВРегистреВыручкаИСебестоимостьПродаж");
	
	// 1. Инициализация структуры данных для расчета
	//	- формирует структуру ПараметрыРасчета.РаспределениеПартий
	ИнициализироватьРаспределениеПартий(
		ПараметрыРасчета,
		ТаблицаДляРаспределенияПартийВыручки(ПараметрыРасчета),
		ОписаниеЦепочекПартийВыручки(ПараметрыРасчета),
		ОписаниеДвиженийПартийВыручки(ПараметрыРасчета),
		ОписаниеНезаписываемыхПартийВыручки(ПараметрыРасчета));
	
	// 2. Получение исходных данных для расчета
	// 	- формирует временную таблицу Данные
	ПолучитьДанныеДляПартийВыручки(ПараметрыРасчета);
	
	// 3. Получение цепочек из исходных данных
	// 	- формирует временные таблицы Источники и Приемники
	ПостроитьЦепочкиДвижений(ПараметрыРасчета);
	
	// 4. Заполнение партий в цепочках
	// 	- заполняет таблицу ПараметрыРасчета.РаспределениеПартий.РасчетныеПартии
	РассчитатьПартииПоЦепочкам(ПараметрыРасчета);
	
	// 5. Помещение данных в таблицу-приемник и очистка вспомогательных временных таблиц.
	// 	- формирует движения по регистру ВыручкаИСебестоимостьПродаж
	ЗавершитьРаспределениеПартий(ПараметрыРасчета);
	
	// Заполним служебные параметры этого этапа (в других этапах не требуется).
	УниверсальныеМеханизмыПартийИСебестоимости.ВыполняетсяЗаполнениеПартийВРегистреВыручкаИСебестоимостьПродаж(ПараметрыРасчета, Ложь);
	
КонецПроцедуры

// Этап 9 и 17 (вызов механизма расчета себестоимости)
//
Процедура РасчетСебестоимостиТоваров(ПараметрыРасчета, СтрокаСхемыРасчета, ПредварительныйРасчет, ПараметрыОтладки)
	
	Если ПараметрыРасчета.Отладка.НеВыполнятьРасчетСебестоимости Тогда
		
		ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "РасчетСебестоимостиТоваров");
		
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			НСтр("ru='Расчет себестоимости пропущен для целей отладки.'"));
		
		Возврат;
		
	КонецЕсли;
	
	// Протокол тут не пишем - он ведется внутри расчета себестоимости, по его этапам
	
	ПараметрыЗапускаРасчетаСебестоимости = Новый Структура;
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("Дата", 					СтрокаСхемыРасчета.Дата);
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("ПредварительныйРасчет", 	ПредварительныйРасчет);
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("МассивОрганизаций", 		СтрокаСхемыРасчета.Организации);
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("РегламентноеЗадание", 	Ложь);
	ПараметрыЗапускаРасчетаСебестоимости.Вставить("МестоВызоваРасчета", 	"ПартионныйУчет22.РасчетСебестоимостиТоваров");
	
	СебестоимостьРассчитана = РасчетСебестоимости.РассчитатьВсеВПопыткеИсключении(
		ПараметрыЗапускаРасчетаСебестоимости,
		ПараметрыРасчета,
		ПараметрыОтладки);
	
	Если НЕ СебестоимостьРассчитана Тогда
		ВызватьИсключение УниверсальныеМеханизмыПартийИСебестоимости.ТекстОшибкиНекорректногоЗавершенияРасчетаСебестоимости();
	КонецЕсли;
	
КонецПроцедуры

// Этап 10 (Контекст: "ДопРасходы_ЗаказыПоставщикам", "ДопРасходы_ПартииПрочихРасходов", "ДопРасходы_ПриходПартийРасходов")
// ПУ 2.1: РассчитатьПартииПрочих(), области РасчетПриходыРасходовСебестоимость, РасчетЗаписейНоменклатураДоходыРасходы
Процедура РаспределениеДопРасходовМеждуПартиямиИТоварами(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "РаспределениеДопРасходовМеждуПартиямиИТоварами");
	
	ДанныеДляПартийПрочих = ПолучитьДанныеДляДопРасходов(ПараметрыРасчета);
	
	ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		ДанныеДляПартийПрочих.Количество());
	
	// Формирует движения по регистру ПартииПрочихРасходов
	СформироватьПартииПрочихРасходов(ПараметрыРасчета, ДанныеДляПартийПрочих);
	УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
	РасчетныеПриходыПартийРасходов = ПолучитьДанныеПриходовПартийРасходов(ПараметрыРасчета, ДанныеДляПартийПрочих);
	ДанныеДляПартийПрочих = Неопределено;
	
	ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		РасчетныеПриходыПартийРасходов.Количество());
	
	// Формирует движения по регистру СебестоимостьТоваров
	СформироватьДопРасходыВСебестоимостьТоваров(ПараметрыРасчета, РасчетныеПриходыПартийРасходов);
	УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
	// Формирует движения по регистру ПрочиеРасходы
	СформироватьДопРасходыВПрочиеРасходы(ПараметрыРасчета, РасчетныеПриходыПартийРасходов);
	УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
	// Формирует движения по регистру ПартииПрочихРасходов
	СформироватьДопРасходыВПартииПрочихРасходов(ПараметрыРасчета, РасчетныеПриходыПартийРасходов);
	УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
	// Формирует движения по регистру ДвиженияНоменклатураДоходыРасходы
	СформироватьДопРасходыВДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета);
	УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
КонецПроцедуры

// Этап 10.1 (Контекст: "СписаниеРасходовНаВыбытиеТоваров")
//
Процедура СписаниеРасходовНаВыбытиеТоваровПрошлыхПериодов(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "СписаниеРасходовНаВыбытиеТоваровПрошлыхПериодов");
	
	// 1. Инициализация структуры данных для расчета
	//	- формирует структуру ПараметрыРасчета.РаспределениеПартий
	ИнициализироватьТрансляциюПартий(
		ПараметрыРасчета,
		Неопределено,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя);
	
	// 2. Получение исходных данных для трансляции
	// 	- формирует временную таблицу Данные
	ПолучитьДанныеДляСписанияРасходовНаВыбытиеТоваровРегистрСебестоимость(ПараметрыРасчета);
	
	// 3. Помещение данных в таблицу-приемник и очистка вспомогательных временных таблиц.
	// 	- формирует движения по регистру СебестоимостьТоваров
	ЗавершитьРаспределениеПартий(ПараметрыРасчета);
	
	// 4. Инициализация структуры данных для расчета
	//	- формирует структуру ПараметрыРасчета.РаспределениеПартий
	ИнициализироватьТрансляциюПартий(
		ПараметрыРасчета,
		Неопределено,
		Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя);
	
	// 5. Получение исходных данных для трансляции
	// 	- формирует временную таблицу Данные
	ПолучитьДанныеДляСписанияРасходовНаВыбытиеТоваровРегистрВыручка(ПараметрыРасчета);
	
	// 6. Помещение данных в таблицу-приемник и очистка вспомогательных временных таблиц.
	// 	- формирует движения по регистру ВыручкаИСебестоимостьПродаж
	ЗавершитьРаспределениеПартий(ПараметрыРасчета);
	
	// 7. Инициализация структуры данных для расчета
	//	- формирует структуру ПараметрыРасчета.РаспределениеПартий
	ИнициализироватьТрансляциюПартий(
		ПараметрыРасчета,
		Неопределено,
		Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя);
	
	// 8. Получение исходных данных для трансляции
	// 	- формирует временную таблицу Данные
	ПолучитьДанныеДляСписанияРасходовНаВыбытиеТоваровРегистрПрочиеРасходы(ПараметрыРасчета);
	
	// 9. Помещение данных в таблицу-приемник и очистка вспомогательных временных таблиц.
	// 	- формирует движения по регистру ПрочиеРасходы
	ЗавершитьРаспределениеПартий(ПараметрыРасчета);
	
	// 10. Инициализация структуры данных для расчета
	//	- формирует структуру ПараметрыРасчета.РаспределениеПартий
	ИнициализироватьТрансляциюПартий(
		ПараметрыРасчета,
		Неопределено,
		Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя);
	
	// 11. Получение исходных данных для трансляции
	// 	- формирует временную таблицу Данные
	ПолучитьДанныеДляСписанияРасходовНаВыбытиеТоваровРегистрНоменклатураДоходыРасходы(ПараметрыРасчета);
	
	// 12. Помещение данных в таблицу-приемник и очистка вспомогательных временных таблиц.
	// 	- формирует движения по регистру ДвиженияНоменклатураДоходыРасходы
	ЗавершитьРаспределениеПартий(ПараметрыРасчета);
	
КонецПроцедуры

// Этап 11 (Контекст: "ПартииНДСиУСН")
//
Процедура ПодготовкаДанныхДляУчетаНДСиУСН(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляУчетаНДСиУСН");
	
	// 1. Инициализация структуры данных для расчета
	//	- формирует структуру ПараметрыРасчета.РаспределениеПартий
	ИнициализироватьРаспределениеПартий(
		ПараметрыРасчета,
		ТаблицаДляРаспределенияПартийНДС(ПараметрыРасчета),
		ОписаниеЦепочекПартийНДС(ПараметрыРасчета),
		ОписаниеДвиженийПартийНДС(ПараметрыРасчета),
		ОписаниеНезаписываемыхПартийНДС(ПараметрыРасчета));
		
	// 2. Получение исходных данных для расчета
	// 	- формирует временную таблицу Данные
	ПолучитьДанныеДляПартийНДС(ПараметрыРасчета);
	
	// 3. Получение цепочек из исходных данных
	// 	- формирует временные таблицы Источники и Приемники
	ПостроитьЦепочкиДвижений(ПараметрыРасчета);
	
	// 4. Заполнение партий в цепочках
	// 	- заполняет таблицу ПараметрыРасчета.РаспределениеПартий.РасчетныеПартии
	РассчитатьПартииПоЦепочкам(ПараметрыРасчета);
	
	// 5. Помещение данных в таблицу-приемник и очистка вспомогательных временных таблиц.
	// 	- формирует движения по регистру ДетализацияПартийТоваровДляНДСиУСН
	ЗавершитьРаспределениеПартий(ПараметрыРасчета);
	
КонецПроцедуры

// Этап 12 (Контекст: "ПартииПрочихРасходов")
//
Процедура ПодготовкаДанныхДляПартийПрочихРасходов(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляПартийПрочихРасходов");
	
	// 1. Инициализация структуры данных для расчета
	//	- формирует структуру ПараметрыРасчета.РаспределениеПартий
	ИнициализироватьТрансляциюПартий(
		ПараметрыРасчета,
		Неопределено,
		Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя);
	
	// 2. Получение исходных данных для трансляции
	// 	- формирует временную таблицу Данные
	ПолучитьДанныеДляПартийПрочихРасходов(ПараметрыРасчета);
	
	// 3. Помещение данных в таблицу-приемник и очистка вспомогательных временных таблиц.
	// 	- формирует движения по регистру ПартииПрочихРасходов
	ЗавершитьРаспределениеПартий(ПараметрыРасчета);
	
КонецПроцедуры

// Этап 13 (формирование документов РаспределениеНДС)
//
Процедура РаспределениеНДСПоВидамНалогообложения(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "РаспределениеНДСПоВидамНалогообложения");
	
	// Вызовем "внешнюю" логику перепроведения документов РаспределениеНДС.
	// При этом будут переформированы "первичные" движения этих документов.
	РезультатРаспределенияНДС = Документы.РаспределениеНДС.РаспределитьНДС(
		ПараметрыРасчета.РасчетныйПериод.НачалоПериода,
		ПараметрыРасчета.МассивОрганизаций,
		УниверсальныеМеханизмыПартийИСебестоимости.ИмяСобытияОшибкиДляЖурналаРегистрации(ПараметрыРасчета),
		ПараметрыРасчета.МенеджерВременныхТаблиц,
		Истина);
		
	Если ЗначениеЗаполнено(РезультатРаспределенияНДС.ТекстОшибки) Тогда
		
		ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Операция ""Распределение НДС"" не была выполнена по причине:
				|%1'"),
			РезультатРаспределенияНДС.ТекстОшибки);
			
		// В механизме закрытия месяца ошибка зарегистрирована из механизма распределения НДС.
		ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаРаспределенияНДС,
			ТекстДляПротокола);
		
	КонецЕсли;
		
	// Если документ РаспределениеНДС может делать движения по регистру,
	// обслуживаемому механизмом партионного учета и себестоимости,
	// то по этому регистру надо обновить расчетные кэши остатков и оборотов.
	// Иначе получится ситуация, что данные ИБ при проведении этих документов изменились,
	// а следующие этапы расчета "не увидят" этого во временных таблицах кэшей регистров.
	Если РезультатРаспределенияНДС.МассивДокументов.Количество() > 0 Тогда
		
		ВозможныеДвиженияДокументов = Метаданные.Документы.РаспределениеНДС.Движения;
		
		Для Каждого КлючИЗначение Из ПараметрыРасчета.Движения Цикл
			
			ОписаниеРегистра = КлючИЗначение.Значение;
			
			Если ВозможныеДвиженияДокументов.Содержит(ОписаниеРегистра.МетаданныеРегистра) Тогда
				ОписаниеРегистра.НадоОбновитьРасчетныйКэш = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыРасчета,
			УниверсальныеМеханизмыПартийИСебестоимости.КоличествоДвиженийДокументаПоРегистру(
				РезультатРаспределенияНДС.МассивДокументов,
				Метаданные.РегистрыНакопления.ПартииПрочихРасходов.ПолноеИмя()));
		
	КонецЕсли;
	
	УниверсальныеМеханизмыПартийИСебестоимости.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета, Истина);
	
	ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
		ПараметрыРасчета,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Обработано документов ""Распределение НДС"": %1'"),
			ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(
				РезультатРаспределенияНДС.МассивДокументов.Количество())));
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

// Инициализируем параметры отладки расчета.
//
Процедура ИнициализироватьПараметрыОтладки(ПараметрыОтладки, ПараметрыЗапуска)
	
	Если ПараметрыОтладки = Неопределено Тогда
		ПараметрыОтладки = Новый Структура;
	КонецЕсли;
	
	// Запомним протоколы рассчитанных периодов в этом массиве и вернем их в место вызова расчета.
	ПараметрыОтладки.Вставить("ПротоколыРасчета", Новый Массив);
	
	// Перенесем это справочное свойство в ПараметрыОтладки, для последующего вывода в протокол расчета.
	Если ПараметрыЗапуска.Свойство("МестоВызоваРасчета") Тогда
		ПараметрыОтладки.Вставить("МестоВызоваРасчета", ПараметрыЗапуска.МестоВызоваРасчета);
	КонецЕсли;
	
КонецПроцедуры

// Инициализирует параметры запуска расчета периода.
//
Функция ИнициализироватьПараметрыЗапускаРасчетаПериода(СтрокаСхемыРасчета)
	
	ПараметрыЗапускаРасчетаПериода = Новый Структура;
	ПараметрыЗапускаРасчетаПериода.Вставить("Дата", 			   СтрокаСхемыРасчета.Дата);
	ПараметрыЗапускаРасчетаПериода.Вставить("МассивОрганизаций",  СтрокаСхемыРасчета.Организации);
	ПараметрыЗапускаРасчетаПериода.Вставить("ИзмененоДокументов", СтрокаСхемыРасчета.ИзмененоДокументов);
	
	Возврат ПараметрыЗапускаРасчетаПериода;
	
КонецФункции

// Перед началом расчета заполняет все необходимые параметры и инициализирует все структуры данных, используемые алгоритма расчета.
// Внимание: если какая-то сущность используется более чем в одном этапе расчета, то ее стоит занести в ПараметрыРасчета.
//
Процедура ИнициализироватьПараметрыРасчетаПартий(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки = Неопределено)
	
	// Создадим контейнер всех параметров, используемых механизмом расчета партий
	ПараметрыИнициализации = Новый Структура;
	ПараметрыИнициализации.Вставить("Дата", 									 КонецМесяца(ПараметрыЗапуска.Дата));
	ПараметрыИнициализации.Вставить("МассивОрганизаций",   						 ПараметрыЗапуска.МассивОрганизаций);
	ПараметрыИнициализации.Вставить("ЗапущенРасчетПартий", 						 Истина);
	ПараметрыИнициализации.Вставить("ТолькоПредварительныйРасчетСебестоимости",  Ложь);
	ПараметрыИнициализации.Вставить("ЗапущеноРегламентнымЗаданием", 			 Ложь);
	
	Если ПараметрыЗапуска.Свойство("ВыполняетсяОбновлениеИБ") Тогда
		ПараметрыИнициализации.Вставить("ВыполняетсяОбновлениеИБ",   			 ПараметрыЗапуска.ВыполняетсяОбновлениеИБ);
	Иначе
		ПараметрыИнициализации.Вставить("ВыполняетсяОбновлениеИБ",   			 Ложь);
	КонецЕсли;
	
	Если ПараметрыЗапуска.Свойство("ИзмененоДокументов") Тогда
		ПараметрыИнициализации.Вставить("ИзмененоДокументов",   				 ПараметрыЗапуска.ИзмененоДокументов);
	Иначе
		ПараметрыИнициализации.Вставить("ИзмененоДокументов",   				 Неопределено);
	КонецЕсли;
	
	УниверсальныеМеханизмыПартийИСебестоимости.ИнициализироватьОбщиеПараметрыРасчета(
		ПараметрыИнициализации, ПараметрыРасчета, ПараметрыОтладки);
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЭтапа0_ПодготовкаКРасчету

// При расчете первого месяца в партионном учете версии 2.2 формирует начальные остатки партий в регистре себестоимости товаров.
//
Процедура СформироватьНачальныеОстаткиПартийСебестоимостьТоваров(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "СформироватьНачальныеОстаткиПартийСебестоимостьТоваров");
	
	ОписаниеРегистра = ПараметрыРасчета.Движения[Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя];
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.УстановитьПараметр("СторнироватьОстаткиСебестоимости",
		ПараметрыРасчета.НачальныеОстатки.ВзятьОстаткиСебестоимостиИзРегистровПартий);
	Запрос.УстановитьПараметр("РаспределятьРасхожденияВСуммах",
		ПараметрыРасчета.НачальныеОстатки.РаспределятьРасхожденияВСуммахПартийИСебестоимости);
	
	#Область ОчисткаПрошлыхОстатковПриИзменившейсяДатеПереходаНаПУ22
	
	// Допустим сдвиг даты перехода "назад".
	// Если дата перехода изменена, то очистим ранее сформированные движения переноса остатков.
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|ГДЕ
	|	Т.Организация В(&МассивОрганизаций)
	|	И Т.Период > &КонецПредыдущегоПериода
	|	И Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПереносДанных)
	|	И Т.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
	
		ЗаписатьДвиженияПоРегистру(
			ПараметрыРасчета,
			Выборка,
			ОписаниеРегистра.МенеджерРегистра);
			
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Очищено ранее сформированных движений переноса остатков у документов расчета себестоимости: %1'"),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Количество())));
		
		ОписаниеРегистра.НадоОбновитьРасчетныйКэш = Истина;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ВыборкаОстатков
	
	// Остатки партий для организаций с "ФИФО скользящая" получим из партионных регистров.
	// По остальным организациям партий нет - просто заполним в остатках новые измерения ВидДеятельностиНДС и АналитикаФинансовогоУчета.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументыВводаОстатков.Ссылка КАК Регистратор,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.Организация,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС,
	|	СУММА(Т.Знак * Т.Количество) 				КАК Количество,
	|	СУММА(Т.Знак * Т.Стоимость) 				КАК Стоимость,
	|	СУММА(Т.Знак * Т.СтоимостьБезНДС) 			КАК СтоимостьБезНДС,
	|	СУММА(Т.Знак * Т.СтоимостьЗабалансовая) 	КАК СтоимостьЗабалансовая,
	|	СУММА(Т.Знак * Т.ДопРасходы) 			КАК ДопРасходы,
	|	СУММА(Т.Знак * Т.ДопРасходыБезНДС) 	КАК ДопРасходыБезНДС,
	|	СУММА(Т.Знак * Т.СтоимостьРегл) 			КАК СтоимостьРегл,
	|	СУММА(Т.Знак * Т.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Т.Знак * Т.ДопРасходыРегл) 			КАК ДопРасходыРегл,
	|	СУММА(Т.Знак * Т.СтоимостьУпр) 				КАК СтоимостьУпр,
	|	СУММА(Т.Знак * Т.ДопРасходыУпр) 			КАК ДопРасходыУпр,
	|	СУММА(Т.Знак * Т.ПостояннаяРазница) 		КАК ПостояннаяРазница,
	|	СУММА(Т.Знак * Т.ВременнаяРазница) 			КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВТОстаткиСебестоимости
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Т.РазделУчета КАК РазделУчета,
	|		Т.ВидЗапасов КАК ВидЗапасов,
	|		Т.Организация КАК Организация,
	|		Т.Партия КАК Партия,
	|		Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|		Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|		1 КАК Знак,
	|		Т.КоличествоОстаток КАК Количество,
	|		Т.СтоимостьОстаток КАК Стоимость,
	|		Т.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансоваяОстаток КАК СтоимостьЗабалансовая,
	|		Т.ДопРасходыОстаток КАК ДопРасходы,
	|		Т.ДопРасходыБезНДСОстаток КАК ДопРасходыБезНДС,
	|		Т.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРеглОстаток КАК СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРеглОстаток КАК ДопРасходыРегл,
	|		Т.СтоимостьУпрОстаток КАК СтоимостьУпр,
	|		Т.ДопРасходыУпрОстаток КАК ДопРасходыУпр,
	|		Т.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|		Т.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаКонецПредыдущегоПериода,
	|			Организация В (&МассивОрганизаций)) КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.РазделУчета,
	|		Т.ВидЗапасов,
	|		Т.Организация,
	|		Т.Партия,
	|		Т.АналитикаУчетаПартий,
	|		Т.АналитикаФинансовогоУчета,
	|		Т.ВидДеятельностиНДС,
	|		ВЫБОР КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ,
	|		Т.Количество,
	|		Т.Стоимость,
	|		Т.СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая,
	|		Т.ДопРасходы,
	|		Т.ДопРасходыБезНДС,
	|		Т.СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРегл,
	|		Т.СтоимостьУпр,
	|		Т.ДопРасходыУпр,
	|		Т.ПостояннаяРазница,
	|		Т.ВременнаяРазница
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Т
	|	ГДЕ
	|		Т.Период < &НачалоПериода
	|		И Т.Активность
	|		И Т.Организация В(&МассивОрганизаций)
	|		И Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПереносДанных)
	|	) КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыВводаОстатков
	|	ПО Т.Организация = ДокументыВводаОстатков.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.Организация,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС,
	|	ДокументыВводаОстатков.Ссылка
	|
	|ИМЕЮЩИЕ
	|		СУММА(Т.Знак * Т.Количество) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.Стоимость) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьБезНДС) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьЗабалансовая) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ДопРасходы) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ДопРасходыБезНДС) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьРегл) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьЗабалансоваяРегл) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ДопРасходыРегл) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьУпр) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ДопРасходыУпр) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ПостояннаяРазница) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ВременнаяРазница) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.ДокументПоступления,
	|	Т.АналитикаУчетаПартий,
	|	Т.КоличествоОстаток,
	|	Т.СтоимостьОстаток,
	|	Т.СтоимостьБезНДСОстаток,
	|	Т.ПостояннаяРазницаОстаток,
	|	Т.ВременнаяРазницаОстаток,
	|	ВЫБОР
	|		КОГДА Т.АналитикаУчетаПартий.НалогообложениеНДС В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		   ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			 ТОГДА Т.СтоимостьРеглОстаток + Т.НДСРеглОстаток
	|		ИНАЧЕ Т.СтоимостьРеглОстаток
	|	КОНЕЦ КАК СтоимостьРеглОстаток
	|ПОМЕСТИТЬ ВТОстаткиПартииТоваровОрганизаций
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&ГраницаКонецПредыдущегоПериода,
	|		Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.ДокументПоступления,
	|	Т.АналитикаУчетаПартий,
	|	Т.КоличествоОстаток,
	|	Т.СтоимостьОстаток,
	|	Т.СтоимостьБезНДСОстаток,
	|	Т.ПостояннаяРазницаОстаток,
	|	Т.ВременнаяРазницаОстаток,
	|	ВЫБОР
	|		КОГДА Т.АналитикаУчетаПартий.НалогообложениеНДС В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		   ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			 ТОГДА Т.СтоимостьРеглОстаток + Т.НДСРеглОстаток
	|		ИНАЧЕ Т.СтоимостьРеглОстаток
	|	КОНЕЦ КАК СтоимостьРеглОстаток
	|ПОМЕСТИТЬ ВТОстаткиПартииТоваровПереданныеНаКомиссию
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&ГраницаКонецПредыдущегоПериода,
	|		Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.ДокументПоступления,
	|	Т.СтатьяРасходов,
	|	Т.СтоимостьОстаток,
	|	Т.СтоимостьБезНДСОстаток,
	|	Т.СтоимостьРеглОстаток,
	|	Т.ПостояннаяРазницаОстаток,
	|	Т.ВременнаяРазницаОстаток,
	|	ВЫБОР
	|		КОГДА Т.АналитикаУчетаПартий.НалогообложениеНДС В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		   ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			 ТОГДА Т.СтоимостьРеглОстаток + Т.НДСРеглОстаток
	|		ИНАЧЕ Т.СтоимостьРеглОстаток
	|	КОНЕЦ КАК СтоимостьРеглОстаток
	|ПОМЕСТИТЬ ВТОстаткиПартииРасходовНаСебестоимостьТоваров
	|ИЗ
	|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров.Остатки(&ГраницаКонецПредыдущегоПериода,
	|		Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.АналитикаУчетаПродукции,
	|	Т.ДокументВыпуска,
	|	Т.КоличествоОстаток,
	|	Т.СтоимостьОстаток,
	|	Т.СтоимостьБезНДСОстаток,
	|	Т.ПостояннаяРазницаОстаток,
	|	Т.ВременнаяРазницаОстаток,
	|	ВЫБОР
	|		КОГДА Т.АналитикаУчетаПартий.НалогообложениеНДС В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		   ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			 ТОГДА Т.СтоимостьРеглОстаток + Т.НДСРеглОстаток
	|		ИНАЧЕ Т.СтоимостьРеглОстаток
	|	КОНЕЦ КАК СтоимостьРеглОстаток
	|ПОМЕСТИТЬ ВТОстаткиПартииЗатратНаВыпуск
	|ИЗ
	|	РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(&ГраницаКонецПредыдущегоПериода,
	|		Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|		И АналитикаУчетаПродукции <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.ДокументПоступления,
	|	Т.АналитикаУчетаПартий,
	|	Т.КоличествоОстаток,
	|	Т.СтоимостьОстаток,
	|	Т.СтоимостьБезНДСОстаток,
	|	Т.ПостояннаяРазницаОстаток,
	|	Т.ВременнаяРазницаОстаток,
	|	ВЫБОР
	|		КОГДА Т.АналитикаУчетаПартий.НалогообложениеНДС В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		   ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			 ТОГДА Т.СтоимостьРеглОстаток + Т.НДСРеглОстаток
	|		ИНАЧЕ Т.СтоимостьРеглОстаток
	|	КОНЕЦ КАК СтоимостьРеглОстаток
	|ПОМЕСТИТЬ ВТОстаткиПартииПроизводственныхЗатрат
	|ИЗ
	|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&ГраницаКонецПредыдущегоПериода,
	|		Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.РазделУчета 					КАК РазделУчета,
	|	Т.Организация 					КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов 					КАК ВидЗапасов,
	|	ВЫБОР КОГДА Т.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|		ТОГДА Т.ДокументПоступления
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ							КАК Партия,
	|	ВЫБОР КОГДА Т.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|		ТОГДА Т.АналитикаУчетаПартий
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|	КОНЕЦ							КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА Т.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|		ТОГДА Т.ВидЦенности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|	КОНЕЦ							КАК ВидЦенности,
	|	СУММА(Т.Количество) 			КАК Количество,
	|	СУММА(Т.Стоимость) 				КАК Стоимость,
	|	СУММА(Т.СтоимостьБезНДС) 		КАК СтоимостьБезНДС,
	|	СУММА(Т.ПостояннаяРазница) 		КАК ПостояннаяРазница,
	|	СУММА(Т.ВременнаяРазница) 		КАК ВременнаяРазница,
	|	СУММА(Т.СтоимостьРегл) 			КАК СтоимостьРегл,
	|	СУММА(Т.ДопРасходыРегл) 		КАК ДопРасходыРегл,
	|	СУММА(Т.ДопРасходы) 		КАК ДопРасходы,
	|	СУММА(Т.ДопРасходыБезНДС) КАК ДопРасходыБезНДС
	|ПОМЕСТИТЬ ВТОстаткиПартийПредварительная
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА Т.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|			КОГДА Т.ВидЗапасов.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца), ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ КАК РазделУчета,
	|		Т.Организация КАК Организация,
	|		Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов КАК ВидЗапасов,
	|		Т.ДокументПоступления КАК ДокументПоступления,
	|		Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|		Т.КоличествоОстаток КАК Количество,
	|		Т.СтоимостьОстаток КАК Стоимость,
	|		Т.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|		Т.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|		Т.ВременнаяРазницаОстаток КАК ВременнаяРазница,
	|		Т.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|		0 КАК ДопРасходыРегл,
	|		0 КАК ДопРасходы,
	|		0 КАК ДопРасходыБезНДС
	|	ИЗ
	|		ВТОстаткиПартииТоваровОрганизаций КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию),
	|		Т.Организация,
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов,
	|		Т.ДокументПоступления,
	|		Т.АналитикаУчетаПартий,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|		Т.КоличествоОстаток,
	|		Т.СтоимостьОстаток,
	|		Т.СтоимостьБезНДСОстаток,
	|		Т.ПостояннаяРазницаОстаток,
	|		Т.ВременнаяРазницаОстаток,
	|		Т.СтоимостьРеглОстаток,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ВТОстаткиПартииТоваровПереданныеНаКомиссию КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА Т.АналитикаУчетаНоменклатуры.Склад ССЫЛКА Справочник.Склады
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОГДА Т.АналитикаУчетаНоменклатуры.Склад ССЫЛКА Справочник.СтруктураПредприятия
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		Т.Организация,
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов,
	|		Т.ДокументПоступления,
	|		(ВЫБОР
	|			КОГДА НЕ ПартииТоваров.АналитикаУчетаПартий ЕСТЬ NULL ТОГДА ПартииТоваров.АналитикаУчетаПартий
	|			КОГДА НЕ ПартииПроизводства.АналитикаУчетаПартий ЕСТЬ NULL ТОГДА ПартииПроизводства.АналитикаУчетаПартий
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КОНЕЦ) КАК АналитикаУчетаПартий,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|		0,
	|		0,
	|		0,
	|		Т.ПостояннаяРазницаОстаток,
	|		Т.ВременнаяРазницаОстаток,
	|		0,
	|		Т.СтоимостьРеглОстаток,
	|		Т.СтоимостьОстаток,
	|		Т.СтоимостьБезНДСОстаток
	|	ИЗ
	|		ВТОстаткиПартииРасходовНаСебестоимостьТоваров КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПартииТоваровОрганизаций КАК ПартииТоваров
	|			ПО Т.Организация = ПартииТоваров.Организация
	|			И Т.АналитикаУчетаНоменклатуры = ПартииТоваров.АналитикаУчетаНоменклатуры
	|			И Т.ВидЗапасов = ПартииТоваров.ВидЗапасов
	|			И Т.ДокументПоступления = ПартииТоваров.ДокументПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПартииПроизводственныхЗатрат КАК ПартииПроизводства
	|			ПО Т.Организация = ПартииПроизводства.Организация
	|			И Т.АналитикаУчетаНоменклатуры = ПартииПроизводства.АналитикаУчетаНоменклатуры
	|			И Т.ВидЗапасов = ПартииПроизводства.ВидЗапасов
	|			И Т.ДокументПоступления = ПартииПроизводства.ДокументПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО АналитикаНоменклатуры.КлючАналитики = Т.АналитикаУчетаНоменклатуры
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА Т.АналитикаУчетаПродукции.Склад ССЫЛКА Справочник.Склады
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОГДА Т.АналитикаУчетаПродукции.Склад ССЫЛКА Справочник.СтруктураПредприятия
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		Т.Организация,
	|		Т.АналитикаУчетаПродукции,
	|		ЕСТЬNULL(ПартииТоваров.ВидЗапасов, ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)),
	|		Т.ДокументВыпуска,
	|		ЕСТЬNULL(ПартииТоваров.АналитикаУчетаПартий, ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)),
	|		ВЫБОР КОГДА АналитикаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) 
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) 
	|		КОНЕЦ,
	|		0 КАК КоличествоОстаток,
	|		Т.СтоимостьОстаток,
	|		Т.СтоимостьБезНДСОстаток,
	|		Т.ПостояннаяРазницаОстаток,
	|		Т.ВременнаяРазницаОстаток,
	|		Т.СтоимостьРеглОстаток,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ВТОстаткиПартииЗатратНаВыпуск КАК Т
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПартииТоваровОрганизаций КАК ПартииТоваров
	|			ПО Т.Организация = ПартииТоваров.Организация
	|				И Т.АналитикаУчетаПродукции = ПартииТоваров.АналитикаУчетаНоменклатуры
	|				И Т.ДокументВыпуска = ПартииТоваров.ДокументПоступления
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО АналитикаНоменклатуры.КлючАналитики = Т.АналитикаУчетаПродукции
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА Т.АналитикаУчетаНоменклатуры.Склад ССЫЛКА Справочник.Партнеры
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОНЕЦ,
	|		Т.Организация,
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов,
	|		Т.ДокументПоступления,
	|		Т.АналитикаУчетаПартий,
	|		ВЫБОР КОГДА АналитикаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) 
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) 
	|		КОНЕЦ,
	|		Т.КоличествоОстаток,
	|		Т.СтоимостьОстаток,
	|		Т.СтоимостьБезНДСОстаток,
	|		Т.ПостояннаяРазницаОстаток,
	|		Т.ВременнаяРазницаОстаток,
	|		Т.СтоимостьРеглОстаток,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ВТОстаткиПартииПроизводственныхЗатрат КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО АналитикаНоменклатуры.КлючАналитики = Т.АналитикаУчетаНоменклатуры
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.РазделУчета,
	|		Т.Организация,
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов,
	|		Т.Партия,
	|		Т.АналитикаУчетаПартий,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка) КАК ВидЦенности,
	|		Т.Количество,
	|		Т.Стоимость + Т.СтоимостьЗабалансовая,
	|		Т.СтоимостьБезНДС,
	|		Т.ПостояннаяРазница,
	|		Т.ВременнаяРазница,
	|		Т.СтоимостьРегл + Т.СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРегл,
	|		Т.ДопРасходы,
	|		Т.ДопРасходыБезНДС
	|	ИЗ
	|		ВТОстаткиСебестоимости КАК Т
	|	ГДЕ
	|		НЕ Т.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|	) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.РазделУчета,
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	ВЫБОР КОГДА Т.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|		ТОГДА Т.ДокументПоступления
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Т.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|		ТОГДА Т.АналитикаУчетаПартий
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Т.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|		ТОГДА Т.ВидЦенности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(Т.Количество) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПартий
	|";
	
	#КонецОбласти
	
	Запрос.Выполнить(); // формируем ВТОстаткиСебестоимости, ВТОстаткиПартийПредварительная
	
	СформироватьАналитикиПартийСВидомЦенности(ПараметрыРасчета); // формируем ВТАналитикиПартийСВидомЦенности
	
	#Область КорректировкаРасхожденийВСуммах
	
	// В силу различных причин может получиться так, что суммы остатков в регистрах партий и в регистре себестоимости
	// по некоторым сочетаниям (РазделУчета, Организация, АналитикаУчетаНоменклатуры, ВидЗапасов) могут отличаться,
	// при том, что количество по ним будет одинаково.
	// Для того, чтобы в регистре себестоимости не остались суммы без количества (без партий),
	// надо распределить эти суммы по партиям, пропорционально количеству.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументыВводаОстатков.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Т.РазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Т.РазделУчета
	|		КОГДА НЕ ОстаткиКомиссии.Организация ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|	КОНЕЦ КАК РазделУчета,
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|		ТОГДА Т.ВидЗапасов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗапасов,
	|	Т.Партия,
	|	ЕСТЬNULL(АналитикиПартий.АналитикаУчетаПартийСВидомЦенности, Т.АналитикаУчетаПартий) КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА Аналитика.ГруппаПродукции ЕСТЬ NULL 
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА Аналитика.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА Аналитика.ГруппаПродукции
	|		КОГДА Аналитика.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки)
	|			ТОГДА Аналитика.УстарелоСделка
	|		КОГДА Аналитика.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения)
	|			ТОГДА Аналитика.УстарелоПодразделение
	|		КОГДА Аналитика.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера)
	|			ТОГДА Аналитика.УстарелоМенеджер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ Т.АналитикаУчетаПартий.НалогообложениеНДС ЕСТЬ NULL И Т.АналитикаУчетаПартий.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Т.АналитикаУчетаПартий.НалогообложениеНДС
	|		КОГДА НЕ Аналитика.НалогообложениеНДС ЕСТЬ NULL И Аналитика.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Аналитика.НалогообложениеНДС
	|		КОГДА ЕСТЬNULL(ПримененияЕНВД.РозничнаяТорговляОблагаетсяЕНВД, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|		КОГДА НЕ СпрУчетнаяПолитикаУСН.Ссылка ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	Т.Количество,
	|	(ВЫБОР
	|		КОГДА Т.РазделУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)) ТОГДА 0
	|		ИНАЧЕ Т.Стоимость КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА Т.РазделУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)) ТОГДА 0
	|		ИНАЧЕ Т.СтоимостьБезНДС КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР
	|		КОГДА Т.РазделУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)) ТОГДА Т.Стоимость
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьЗабалансовая,
	|	Т.ДопРасходы,
	|	Т.ДопРасходыБезНДС,
	|	(ВЫБОР
	|		КОГДА Т.РазделУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)) ТОГДА 0
	|		ИНАЧЕ Т.СтоимостьРегл КОНЕЦ) КАК СтоимостьРегл,
	|	(ВЫБОР
	|		КОГДА Т.РазделУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)) ТОГДА Т.СтоимостьРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
	|	Т.ДопРасходыРегл,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница
	|ПОМЕСТИТЬ ВТОстаткиПартий
	|ИЗ
	|	ВТОстаткиПартийПредварительная КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПартииТоваровПереданныеНаКомиссию КАК ОстаткиКомиссии
	|		ПО (Т.РазделУчета = НЕОПРЕДЕЛЕНО)
	|			И Т.Организация = ОстаткиКомиссии.Организация
	|			И Т.АналитикаУчетаНоменклатуры = ОстаткиКомиссии.АналитикаУчетаНоменклатуры
	|			И Т.ВидЗапасов = ОстаткиКомиссии.ВидЗапасов
	|			И Т.Партия = ОстаткиКомиссии.ДокументПоступления
	|			И Т.АналитикаУчетаПартий = ОстаткиКомиссии.АналитикаУчетаПартий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК Аналитика
	|		ПО Т.ВидЗапасов = Аналитика.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТАналитикиПартийСВидомЦенности КАК АналитикиПартий
	|		ПО Т.АналитикаУчетаПартий = АналитикиПартий.АналитикаУчетаПартий
	|			И Т.ВидЦенности = АналитикиПартий.ВидЦенности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыВводаОстатков
	|		ПО Т.Организация = ДокументыВводаОстатков.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПримененияЕНВД.СрезПоследних(&КонецПредыдущегоПериода, Организация В (&МассивОрганизаций)) КАК ПримененияЕНВД
	|		ПО Т.Организация = ПримененияЕНВД.Организация
	|			И Т.АналитикаУчетаНоменклатуры.Склад = ПримененияЕНВД.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&КонецПредыдущегоПериода, Организация В (&МассивОрганизаций)) КАК РегУчетнаяПолитика
	|		ПО Т.Организация = РегУчетнаяПолитика.Организация
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК СпрУчетнаяПолитикаУСН
	|			ПО РегУчетнаяПолитика.УчетнаяПолитика = СпрУчетнаяПолитикаУСН.Ссылка
	|				И СпрУчетнаяПолитикаУСН.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РазделУчета,
	|	ВидЗапасов,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.АналитикаУчетаНоменклатуры,
	|	СУММА(Т.КоличествоИзПартий)					КАК КоличествоИзПартий,
	|	СУММА(Т.Знак * Т.Стоимость) 				КАК Стоимость,
	|	СУММА(Т.Знак * Т.СтоимостьБезНДС) 			КАК СтоимостьБезНДС,
	|	СУММА(Т.Знак * Т.СтоимостьЗабалансовая) 	КАК СтоимостьЗабалансовая,
	|	СУММА(Т.Знак * Т.ДопРасходы) 			КАК ДопРасходы,
	|	СУММА(Т.Знак * Т.ДопРасходыБезНДС) 	КАК ДопРасходыБезНДС,
	|	СУММА(Т.Знак * Т.СтоимостьРегл) 			КАК СтоимостьРегл,
	|	СУММА(Т.Знак * Т.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Т.Знак * Т.ДопРасходыРегл) 			КАК ДопРасходыРегл,
	|	СУММА(Т.Знак * Т.ПостояннаяРазница) 		КАК ПостояннаяРазница,
	|	СУММА(Т.Знак * Т.ВременнаяРазница) 			КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВТОстаткиСуммБезКоличества
	|ИЗ
	|	(ВЫБРАТЬ
	|		1 КАК Знак,
	|		Т.Организация,
	|		Т.РазделУчета,
	|		Т.ВидЗапасов,
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.Количество 					КАК КоличествоИзСебестоимости,
	|		0 								КАК КоличествоИзПартий,
	|		Т.Стоимость 					КАК Стоимость,
	|		Т.СтоимостьБезНДС 				КАК СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая 		КАК СтоимостьЗабалансовая,
	|		Т.ДопРасходы 				КАК ДопРасходы,
	|		Т.ДопРасходыБезНДС 		КАК ДопРасходыБезНДС,
	|		Т.СтоимостьРегл 				КАК СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл 	КАК СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРегл 				КАК ДопРасходыРегл,
	|		Т.ПостояннаяРазница 			КАК ПостояннаяРазница,
	|		Т.ВременнаяРазница 				КАК ВременнаяРазница
	|	ИЗ
	|		ВТОстаткиСебестоимости КАК Т
	|	ГДЕ
	|		НЕ &СторнироватьОстаткиСебестоимости И &РаспределятьРасхожденияВСуммах
	|		И Т.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		-1 КАК Знак,
	|		Т.Организация,
	|		Т.РазделУчета,
	|		Т.ВидЗапасов,
	|		Т.АналитикаУчетаНоменклатуры,
	|		0 									  КАК КоличествоИзСебестоимости,
	|		Т.Количество						  КАК КоличествоИзПартий,
	|		Т.Стоимость 						  КАК Стоимость,
	|		Т.СтоимостьБезНДС 					  КАК СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая 			  КАК СтоимостьЗабалансовая,
	|		Т.ДопРасходы 				      КАК ДопРасходы,
	|		Т.ДопРасходыБезНДС 			  КАК ДопРасходыБезНДС,
	|		Т.СтоимостьРегл + Т.ДопРасходыРегл 	  КАК СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл 		  КАК СтоимостьЗабалансоваяРегл,
	|		0 									  КАК ДопРасходыРегл,
	|		Т.ПостояннаяРазница 				  КАК ПостояннаяРазница,
	|		Т.ВременнаяРазница 				  	  КАК ВременнаяРазница
	|	ИЗ
	|		ВТОстаткиПартий КАК Т
	|	ГДЕ
	|		НЕ &СторнироватьОстаткиСебестоимости И &РаспределятьРасхожденияВСуммах
	|		И Т.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|	) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	СУММА(Т.КоличествоИзСебестоимости) = СУММА(Т.КоличествоИзПартий)
	|	И СУММА(Т.КоличествоИзПартий) <> 0
	|	И (СУММА(Т.Знак * Т.Стоимость) <> 0
	|		ИЛИ СУММА(Т.Знак * Т.СтоимостьБезНДС) <> 0
	|		ИЛИ СУММА(Т.Знак * Т.СтоимостьЗабалансовая) <> 0
	|		ИЛИ СУММА(Т.Знак * Т.ДопРасходы) <> 0
	|		ИЛИ СУММА(Т.Знак * Т.ДопРасходыБезНДС) <> 0
	|		ИЛИ СУММА(Т.Знак * Т.СтоимостьРегл) <> 0
	|		ИЛИ СУММА(Т.Знак * Т.СтоимостьЗабалансоваяРегл) <> 0
	|		ИЛИ СУММА(Т.Знак * Т.ДопРасходыРегл) <> 0
	|		ИЛИ СУММА(Т.Знак * Т.ПостояннаяРазница) <> 0
	|		ИЛИ СУММА(Т.Знак * Т.ВременнаяРазница) <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РазделУчета,
	|	ВидЗапасов,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор КАК Регистратор,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Партия КАК Партия,
	|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ВЫРАЗИТЬ(Т.Количество / ОстаткиСумм.КоличествоИзПартий КАК ЧИСЛО (23,10)) 							    		 КАК Коэффициент,
	|	ВЫРАЗИТЬ(ОстаткиСумм.Стоимость * Т.Количество / ОстаткиСумм.КоличествоИзПартий КАК ЧИСЛО (15,2)) 				 КАК Стоимость,
	|	ВЫРАЗИТЬ(ОстаткиСумм.СтоимостьБезНДС * Т.Количество / ОстаткиСумм.КоличествоИзПартий КАК ЧИСЛО (15,2)) 			 КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ОстаткиСумм.СтоимостьЗабалансовая * Т.Количество / ОстаткиСумм.КоличествоИзПартий КАК ЧИСЛО (15,2)) 	 КАК СтоимостьЗабалансовая,
	|	ВЫРАЗИТЬ(ОстаткиСумм.ДопРасходы * Т.Количество / ОстаткиСумм.КоличествоИзПартий КАК ЧИСЛО (15,2)) 		 КАК ДопРасходы,
	|	ВЫРАЗИТЬ(ОстаткиСумм.ДопРасходыБезНДС * Т.Количество / ОстаткиСумм.КоличествоИзПартий КАК ЧИСЛО (15,2)) 	 КАК ДопРасходыБезНДС,
	|	ВЫРАЗИТЬ(ОстаткиСумм.СтоимостьРегл * Т.Количество / ОстаткиСумм.КоличествоИзПартий КАК ЧИСЛО (15,2)) 			 КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(ОстаткиСумм.СтоимостьЗабалансоваяРегл * Т.Количество / ОстаткиСумм.КоличествоИзПартий КАК ЧИСЛО (15,2)) КАК СтоимостьЗабалансоваяРегл,
	|	ВЫРАЗИТЬ(ОстаткиСумм.ДопРасходыРегл * Т.Количество / ОстаткиСумм.КоличествоИзПартий КАК ЧИСЛО (15,2)) 			 КАК ДопРасходыРегл,
	|	ВЫРАЗИТЬ(ОстаткиСумм.ПостояннаяРазница * Т.Количество / ОстаткиСумм.КоличествоИзПартий КАК ЧИСЛО (15,2)) 		 КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ОстаткиСумм.ВременнаяРазница * Т.Количество / ОстаткиСумм.КоличествоИзПартий КАК ЧИСЛО (15,2)) 		 КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВТКорректировкаПартий
	|ИЗ
	|	ВТОстаткиПартий КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОстаткиСуммБезКоличества КАК ОстаткиСумм
	|	ПО Т.Организация = ОстаткиСумм.Организация
	|		И Т.РазделУчета = ОстаткиСумм.РазделУчета
	|		И Т.ВидЗапасов = ОстаткиСумм.ВидЗапасов
	|		И Т.АналитикаУчетаНоменклатуры = ОстаткиСумм.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	НЕ &СторнироватьОстаткиСебестоимости И &РаспределятьРасхожденияВСуммах
	|	И Т.Количество <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РазделУчета,
	|	ВидЗапасов,
	|	АналитикаУчетаНоменклатуры
	|";
	
	#КонецОбласти
	
	Запрос.Выполнить(); // формируем ВТКорректировкаПартий 
	
	#Область КорректировкаЗависшихКопеек
	
	// Для каждого сочетания (РазделУчета, Организация, АналитикаУчетаНоменклатуры, ВидЗапасов) из ВТЗависшиеКопейки
	// найдем единственное сочетание (Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС) из ВТКорректировкаПартий,
	// на которое и спишем "копейки", образовавшиеся в результате округления при корректировке расхождений в остатках партий и себестоимости. 
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Организация,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.АналитикаУчетаНоменклатуры,
	|	СУММА(Т.КоличествоИзПартий)					КАК КоличествоИзПартий,
	|	СУММА(Т.Знак * Т.Стоимость) 				КАК Стоимость,
	|	СУММА(Т.Знак * Т.СтоимостьБезНДС) 			КАК СтоимостьБезНДС,
	|	СУММА(Т.Знак * Т.СтоимостьЗабалансовая) 	КАК СтоимостьЗабалансовая,
	|	СУММА(Т.Знак * Т.ДопРасходы) 			КАК ДопРасходы,
	|	СУММА(Т.Знак * Т.ДопРасходыБезНДС) 	КАК ДопРасходыБезНДС,
	|	СУММА(Т.Знак * Т.СтоимостьРегл) 			КАК СтоимостьРегл,
	|	СУММА(Т.Знак * Т.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Т.Знак * Т.ДопРасходыРегл) 			КАК ДопРасходыРегл,
	|	СУММА(Т.Знак * Т.ПостояннаяРазница) 		КАК ПостояннаяРазница,
	|	СУММА(Т.Знак * Т.ВременнаяРазница) 			КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВТЗависшиеКопейки
	|ИЗ
	|	(ВЫБРАТЬ
	|		1 КАК Знак,
	|		Т.Организация,
	|		Т.РазделУчета,
	|		Т.ВидЗапасов,
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.КоличествоИзПартий			КАК КоличествоИзПартий,
	|		Т.Стоимость 					КАК Стоимость,
	|		Т.СтоимостьБезНДС 				КАК СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая 		КАК СтоимостьЗабалансовая,
	|		Т.ДопРасходы 				КАК ДопРасходы,
	|		Т.ДопРасходыБезНДС 		КАК ДопРасходыБезНДС,
	|		Т.СтоимостьРегл 				КАК СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл 	КАК СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРегл 				КАК ДопРасходыРегл,
	|		Т.ПостояннаяРазница 			КАК ПостояннаяРазница,
	|		Т.ВременнаяРазница 				КАК ВременнаяРазница
	|	ИЗ
	|		ВТОстаткиСуммБезКоличества КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		-1 КАК Знак,
	|		Т.Организация,
	|		Т.РазделУчета,
	|		Т.ВидЗапасов,
	|		Т.АналитикаУчетаНоменклатуры,
	|		0								КАК КоличествоИзПартий,
	|		Т.Стоимость 					КАК Стоимость,
	|		Т.СтоимостьБезНДС 				КАК СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая 		КАК СтоимостьЗабалансовая,
	|		Т.ДопРасходы 				КАК ДопРасходы,
	|		Т.ДопРасходыБезНДС 		КАК ДопРасходыБезНДС,
	|		Т.СтоимостьРегл 				КАК СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл 	КАК СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРегл 				КАК ДопРасходыРегл,
	|		Т.ПостояннаяРазница 			КАК ПостояннаяРазница,
	|		Т.ВременнаяРазница 				КАК ВременнаяРазница
	|	ИЗ
	|		ВТКорректировкаПартий КАК Т
	|	) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|		СУММА(Т.Знак * Т.Стоимость) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьБезНДС) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьЗабалансовая) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ДопРасходы) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ДопРасходыБезНДС) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьРегл) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьЗабалансоваяРегл) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ДопРасходыРегл) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ПостояннаяРазница) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ВременнаяРазница) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РазделУчета,
	|	ВидЗапасов,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор КАК Регистратор,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Партия КАК Партия,
	|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Т.Коэффициент КАК Коэффициент,
	|	ЗависшиеКопейки.Стоимость КАК Стоимость,
	|	ЗависшиеКопейки.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	ЗависшиеКопейки.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	ЗависшиеКопейки.ДопРасходы КАК ДопРасходы,
	|	ЗависшиеКопейки.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	ЗависшиеКопейки.СтоимостьРегл КАК СтоимостьРегл,
	|	ЗависшиеКопейки.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	ЗависшиеКопейки.ДопРасходыРегл КАК ДопРасходыРегл,
	|	ЗависшиеКопейки.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ЗависшиеКопейки.ВременнаяРазница КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВТПартииДляСписанияКопеек
	|ИЗ
	|	ВТКорректировкаПартий КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗависшиеКопейки КАК ЗависшиеКопейки
	|	ПО Т.Организация = ЗависшиеКопейки.Организация
	|		И Т.РазделУчета = ЗависшиеКопейки.РазделУчета
	|		И Т.ВидЗапасов = ЗависшиеКопейки.ВидЗапасов
	|		И Т.АналитикаУчетаНоменклатуры = ЗависшиеКопейки.АналитикаУчетаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РазделУчета,
	|	ВидЗапасов,
	|	АналитикаУчетаНоменклатуры,
	|	Коэффициент,
	|	Партия,
	|	АналитикаУчетаПартий,
	|	АналитикаФинансовогоУчета,
	|	ВидДеятельностиНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор КАК Регистратор,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Партия КАК Партия,
	|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Т.Коэффициент КАК Коэффициент,
	|	Т.Стоимость КАК Стоимость,
	|	Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	Т.ДопРасходы КАК ДопРасходы,
	|	Т.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	Т.СтоимостьРегл КАК СтоимостьРегл,
	|	Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	Т.ДопРасходыРегл КАК ДопРасходыРегл,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ВременнаяРазница КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВТКорректировкаКопеек
	|ИЗ
	|	ВТПартииДляСписанияКопеек КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПартииДляСписанияКопеек КАК Т2
	|	ПО Т.Организация = Т2.Организация
	|		И Т.РазделУчета = Т2.РазделУчета
	|		И Т.ВидЗапасов = Т2.ВидЗапасов
	|		И Т.АналитикаУчетаНоменклатуры = Т2.АналитикаУчетаНоменклатуры
	|		И ((Т.Коэффициент < Т2.Коэффициент)
	|			ИЛИ (Т.Коэффициент = Т2.Коэффициент И Т.Партия < Т2.Партия)
	|			ИЛИ (Т.Коэффициент = Т2.Коэффициент И Т.Партия = Т2.Партия И Т.АналитикаУчетаПартий < Т2.АналитикаУчетаПартий)
	|			ИЛИ (Т.Коэффициент = Т2.Коэффициент И Т.Партия = Т2.Партия И Т.АналитикаУчетаПартий = Т2.АналитикаУчетаПартий
	|					И Т.АналитикаФинансовогоУчета < Т2.АналитикаФинансовогоУчета)
	|			ИЛИ (Т.Коэффициент = Т2.Коэффициент И Т.Партия = Т2.Партия И Т.АналитикаУчетаПартий = Т2.АналитикаУчетаПартий
	|					И Т.АналитикаФинансовогоУчета = Т2.АналитикаФинансовогоУчета И Т.ВидДеятельностиНДС < Т2.ВидДеятельностиНДС))
	|ГДЕ
	|	Т2.Регистратор ЕСТЬ NULL
	|";
	
	#КонецОбласти
	
	Запрос.Выполнить(); // формируем ВТКорректировкаКопеек
	
	#Область ФормированиеДвижений
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Регистратор 						КАК Регистратор,
	|	Т.РазделУчета 						КАК РазделУчета,
	|	Т.Организация 						КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры 		КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов 						КАК ВидЗапасов,
	|	Т.Партия 							КАК Партия,
	|	Т.АналитикаУчетаПартий 				КАК АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета 		КАК АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС 				КАК ВидДеятельностиНДС,
	|	СУММА(Т.Количество) 				КАК Количество,
	|	СУММА(Т.Стоимость) 					КАК Стоимость,
	|	СУММА(Т.СтоимостьБезНДС) 			КАК СтоимостьБезНДС,
	|	СУММА(Т.СтоимостьЗабалансовая) 		КАК СтоимостьЗабалансовая,
	|	СУММА(Т.ДопРасходы) 				КАК ДопРасходы,
	|	СУММА(Т.ДопРасходыБезНДС) 			КАК ДопРасходыБезНДС,
	|	СУММА(Т.СтоимостьРегл) 				КАК СтоимостьРегл,
	|	СУММА(Т.СтоимостьЗабалансоваяРегл) 	КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Т.ДопРасходыРегл) 			КАК ДопРасходыРегл,
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА СУММА(Т.СтоимостьБезНДС)
	|		ИНАЧЕ 0
	|	КОНЕЦ 								КАК СтоимостьУпр,
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА СУММА(Т.ДопРасходыБезНДС)
	|		ИНАЧЕ 0
	|	КОНЕЦ 								КАК ДопРасходыУпр,
	|	СУММА(Т.ПостояннаяРазница) 			КАК ПостояннаяРазница,
	|	СУММА(Т.ВременнаяРазница) 			КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВТОстаткиПартийСкорректированные
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.Регистратор КАК Регистратор,
	|		Т.РазделУчета КАК РазделУчета,
	|		Т.Организация КАК Организация,
	|		Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов КАК ВидЗапасов,
	|		Т.Партия КАК Партия,
	|		Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|		Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|		0 КАК Количество,
	|		Т.Стоимость КАК Стоимость,
	|		Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|		Т.ДопРасходы КАК ДопРасходы,
	|		Т.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|		Т.СтоимостьРегл КАК СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРегл КАК ДопРасходыРегл,
	|		Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|		Т.ВременнаяРазница КАК ВременнаяРазница
	|	ИЗ
	|		ВТКорректировкаПартий КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Регистратор КАК Регистратор,
	|		Т.РазделУчета КАК РазделУчета,
	|		Т.Организация КАК Организация,
	|		Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов КАК ВидЗапасов,
	|		Т.Партия КАК Партия,
	|		Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|		Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|		0 КАК Количество,
	|		Т.Стоимость КАК Стоимость,
	|		Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|		Т.ДопРасходы КАК ДопРасходы,
	|		Т.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|		Т.СтоимостьРегл КАК СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРегл КАК ДопРасходыРегл,
	|		Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|		Т.ВременнаяРазница КАК ВременнаяРазница
	|	ИЗ
	|		ВТКорректировкаКопеек КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Регистратор КАК Регистратор,
	|		Т.РазделУчета КАК РазделУчета,
	|		Т.Организация КАК Организация,
	|		Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов КАК ВидЗапасов,
	|		Т.Партия КАК Партия,
	|		Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|		Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|		Т.Количество КАК Количество,
	|		Т.Стоимость КАК Стоимость,
	|		Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|		Т.ДопРасходы КАК ДопРасходы,
	|		Т.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|		Т.СтоимостьРегл КАК СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРегл КАК ДопРасходыРегл,
	|		Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|		Т.ВременнаяРазница КАК ВременнаяРазница
	|	ИЗ
	|		ВТОстаткиПартий КАК Т
	|) КАК Т
	|ГДЕ
	|	Т.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.РазделУчета,
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТИзменившиесяДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		1 КАК Знак,
	|		Т.Регистратор КАК Регистратор,
	|		Т.РазделУчета КАК РазделУчета,
	|		Т.Организация КАК Организация,
	|		Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов КАК ВидЗапасов,
	|		Т.Партия КАК Партия,
	|		Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|		Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|		Т.Количество КАК Количество,
	|		Т.Стоимость КАК Стоимость,
	|		Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|		Т.ДопРасходы КАК ДопРасходы,
	|		Т.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|		Т.СтоимостьРегл КАК СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРегл КАК ДопРасходыРегл,
	|		Т.СтоимостьУпр КАК СтоимостьУпр,
	|		Т.ДопРасходыУпр КАК ДопРасходыУпр,
	|		Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|		Т.ВременнаяРазница КАК ВременнаяРазница
	|	ИЗ
	|		ВТОстаткиПартийСкорректированные КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		-1 КАК Знак,
	|		Т.Регистратор КАК Регистратор,
	|		Т.РазделУчета КАК РазделУчета,
	|		Т.Организация КАК Организация,
	|		Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов КАК ВидЗапасов,
	|		НЕОПРЕДЕЛЕНО КАК Партия,
	|		ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|		НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|		Т.Количество КАК Количество,
	|		Т.Стоимость КАК Стоимость,
	|		Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|		Т.ДопРасходы КАК ДопРасходы,
	|		Т.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|		Т.СтоимостьРегл + Т.ДопРасходыРегл КАК СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|		0 КАК ДопРасходыРегл,
	|		0 КАК СтоимостьУпр,
	|		0 КАК ДопРасходыУпр,
	|		Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|		Т.ВременнаяРазница КАК ВременнаяРазница
	|	ИЗ
	|		ВТОстаткиПартийСкорректированные КАК Т
	|	ГДЕ
	|		НЕ &СторнироватьОстаткиСебестоимости
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		-1 КАК Знак,
	|		Т.Регистратор КАК Регистратор,
	|		Т.РазделУчета КАК РазделУчета,
	|		Т.Организация КАК Организация,
	|		Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов КАК ВидЗапасов,
	|		Т.Партия КАК Партия,
	|		Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|		Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|		Т.Количество КАК Количество,
	|		Т.Стоимость КАК Стоимость,
	|		Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|		Т.ДопРасходы КАК ДопРасходы,
	|		Т.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|		Т.СтоимостьРегл КАК СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРегл КАК ДопРасходыРегл,
	|		Т.СтоимостьУпр КАК СтоимостьУпр,
	|		Т.ДопРасходыУпр КАК ДопРасходыУпр,
	|		Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|		Т.ВременнаяРазница КАК ВременнаяРазница
	|	ИЗ
	|		ВТОстаткиСебестоимости КАК Т
	|	ГДЕ
	|		&СторнироватьОстаткиСебестоимости
	|		И Т.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК Знак,
	|		Т.Регистратор,
	|		Т.РазделУчета,
	|		Т.Организация,
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов,
	|		Т.Партия,
	|		Т.АналитикаУчетаПартий,
	|		Т.АналитикаФинансовогоУчета,
	|		Т.ВидДеятельностиНДС,
	|		Т.Количество,
	|		Т.Стоимость,
	|		Т.СтоимостьБезНДС,
	|		Т.СтоимостьЗабалансовая,
	|		Т.ДопРасходы,
	|		Т.ДопРасходыБезНДС,
	|		Т.СтоимостьРегл,
	|		Т.СтоимостьЗабалансоваяРегл,
	|		Т.ДопРасходыРегл,
	|		Т.СтоимостьУпр,
	|		Т.ДопРасходыУпр,
	|		Т.ПостояннаяРазница,
	|		Т.ВременнаяРазница
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыВводаОстатков
	|			ПО Т.Регистратор = ДокументыВводаОстатков.Ссылка
	|	ГДЕ
	|		Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПереносДанных)
	|		И Т.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|	) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.РазделУчета,
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС
	|
	|ИМЕЮЩИЕ
	|		СУММА(Т.Знак * Т.Количество) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.Стоимость) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьБезНДС) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьЗабалансовая) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ДопРасходы) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ДопРасходыБезНДС) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьРегл) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьЗабалансоваяРегл) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ДопРасходыРегл) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.СтоимостьУпр) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ДопРасходыУпр) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ПостояннаяРазница) <> 0
	|	ИЛИ СУММА(Т.Знак * Т.ВременнаяРазница) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор КАК Регистратор,
	|	&КонецПредыдущегоПериода КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Партия КАК Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС,
	|	Т.Количество,
	|	Т.Стоимость,
	|	Т.СтоимостьБезНДС,
	|	Т.СтоимостьЗабалансовая,
	|	Т.ДопРасходы,
	|	Т.ДопРасходыБезНДС,
	|	Т.СтоимостьРегл,
	|	Т.СтоимостьЗабалансоваяРегл,
	|	Т.ДопРасходыРегл,
	|	Т.СтоимостьУпр,
	|	Т.ДопРасходыУпр,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница,
	|	ЛОЖЬ 												   КАК РасчетСебестоимости,
	|	ИСТИНА 												   КАК РасчетПартий,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПереносДанных) КАК ТипЗаписи,
	|	Т.Регистратор 										   КАК ДокументИсточник
	|ИЗ
	|	ВТОстаткиПартийСкорректированные КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИзменившиесяДокументы КАК ВТИзменившиесяДокументы
	|		ПО Т.Регистратор = ВТИзменившиесяДокументы.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Регистратор,
	|	&КонецПредыдущегоПериода,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	Т.РазделУчета,
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка),
	|	Т.Количество,
	|	Т.Стоимость,
	|	Т.СтоимостьБезНДС,
	|	Т.СтоимостьЗабалансовая,
	|	Т.ДопРасходы,
	|	Т.ДопРасходыБезНДС,
	|	Т.СтоимостьРегл + Т.ДопРасходыРегл КАК СтоимостьРегл,
	|	Т.СтоимостьЗабалансоваяРегл,
	|	0 КАК ДопРасходыРегл,
	|	0 КАК СтоимостьУпр,
	|	0 КАК ДопРасходыУпр,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница,
	|	ЛОЖЬ 												   КАК РасчетСебестоимости,
	|	ИСТИНА 												   КАК РасчетПартий,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПереносДанных) КАК ТипЗаписи,
	|	Т.Регистратор 										   КАК ДокументИсточник
	|ИЗ
	|	ВТОстаткиПартийСкорректированные КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИзменившиесяДокументы КАК ВТИзменившиесяДокументы
	|		ПО Т.Регистратор = ВТИзменившиесяДокументы.Регистратор
	|ГДЕ
	|	НЕ &СторнироватьОстаткиСебестоимости
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Регистратор КАК Регистратор,
	|	&КонецПредыдущегоПериода КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Партия КАК Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС,
	|	-Т.Количество,
	|	-Т.Стоимость,
	|	-Т.СтоимостьБезНДС,
	|	-Т.СтоимостьЗабалансовая,
	|	-Т.ДопРасходы,
	|	-Т.ДопРасходыБезНДС,
	|	-Т.СтоимостьРегл,
	|	-Т.СтоимостьЗабалансоваяРегл,
	|	-Т.ДопРасходыРегл,
	|	-Т.СтоимостьУпр,
	|	-Т.ДопРасходыУпр,
	|	-Т.ПостояннаяРазница,
	|	-Т.ВременнаяРазница,
	|	ЛОЖЬ 												   КАК РасчетСебестоимости,
	|	ИСТИНА 												   КАК РасчетПартий,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПереносДанных) КАК ТипЗаписи,
	|	Т.Регистратор 										   КАК ДокументИсточник
	|ИЗ
	|	ВТОстаткиСебестоимости КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИзменившиесяДокументы КАК ВТИзменившиесяДокументы
	|		ПО Т.Регистратор = ВТИзменившиесяДокументы.Регистратор
	|ГДЕ
	|	&СторнироватьОстаткиСебестоимости
	|	И Т.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	РазделУчета,
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	ВидДвижения,
	|	Партия";
	
	#КонецОбласти
	
	РезультатЗапроса = Запрос.Выполнить(); // сформированные движения по переносу остатков
	
	#Область ЗаписьДвижений
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		// Запишем В ИБ движения, формирующие начальные остатки партий себестоимости версии 2.2
		ЗаписатьДвиженияПоРегистру(
			ПараметрыРасчета,
			Выборка,
			ОписаниеРегистра.МенеджерРегистра);
			
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Сформировано движений начальных остатков партий себестоимости: %1'"),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Количество())));
	
		ОписаниеРегистра.НадоОбновитьРасчетныйКэш = Истина;
		
	ИначеЕсли УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТОстаткиПартийСкорректированные") = 0 Тогда
		
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			НСтр("ru='Нет начальных остатков партий для переноса в регистр себестоимости.'"));
		
	Иначе
		
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			НСтр("ru='Начальные остатки партий в регистре себестоимости корректны, изменение не требуется.'"));
		
	КонецЕсли;
	
	// Очистим движения документов, по которым раньше были, а теперь нет остатков партий себестоимости.
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТИзменившиесяДокументы.Регистратор
	|ИЗ
	|	ВТИзменившиесяДокументы КАК ВТИзменившиесяДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Т.Регистратор КАК Регистратор
	|			ИЗ
	|				ВТОстаткиПартийСкорректированные КАК Т
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Т.Регистратор
	|			ИЗ
	|				ВТОстаткиСебестоимости КАК Т
	|			ГДЕ
	|				&СторнироватьОстаткиСебестоимости
	|			) КАК ДокументыСОстатками
	|		ПО ВТИзменившиесяДокументы.Регистратор = ДокументыСОстатками.Регистратор
	|ГДЕ
	|	ДокументыСОстатками.Регистратор ЕСТЬ NULL ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
	
		ЗаписатьДвиженияПоРегистру(
			ПараметрыРасчета,
			Выборка,
			ОписаниеРегистра.МенеджерРегистра);
			
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Очищено ранее сформированных движений переноса остатков у документов расчета себестоимости: %1'"),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Количество())));
		
		ОписаниеРегистра.НадоОбновитьРасчетныйКэш = Истина;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОшибкиВОстатках
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СебестоимостьТоваров"" КАК ИмяРегистра,
	|	Т.Организация КАК Организация
	|ИЗ
	|	ВТОстаткиСебестоимости КАК Т
	|ГДЕ
	|	Т.АналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ПартииТоваровОрганизаций"" КАК ИмяРегистра,
	|	Т.Организация КАК Организация
	|ИЗ
	|	ВТОстаткиПартииТоваровОрганизаций КАК Т
	|ГДЕ
	|	Т.АналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ПартииТоваровПереданныеНаКомиссию"" КАК ИмяРегистра,
	|	Т.Организация КАК Организация
	|ИЗ
	|	ВТОстаткиПартииТоваровПереданныеНаКомиссию КАК Т
	|ГДЕ
	|	Т.АналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ПартииПроизводственныхЗатрат"" КАК ИмяРегистра,
	|	Т.Организация КАК Организация
	|ИЗ
	|	ВТОстаткиПартииПроизводственныхЗатрат КАК Т
	|ГДЕ
	|	Т.АналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ПартииРасходовНаСебестоимостьТоваров"" КАК ИмяРегистра,
	|	Т.Организация КАК Организация
	|ИЗ
	|	ВТОстаткиПартииРасходовНаСебестоимостьТоваров КАК Т
	|ГДЕ
	|	Т.АналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='В регистре накопления ""%1"" по организации ""%2"" на начало периода %3 есть остатки по пустой аналитике учета номенклатуры.'"),
			Выборка.ИмяРегистра,
			ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Организация),
			ПротоколРасчетаПартийИСебестоимости.ПредставлениеПериодаРасчета(ПараметрыРасчета));
		
		ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВНачальныхОстаткахПУ22,
			ТекстДляПротокола);
			
		УниверсальныеМеханизмыПартийИСебестоимости.ЗарегистрироватьПроблемуВыполненияРасчета(
			ПараметрыРасчета,
			Выборка.Организация,
			НСтр("ru='При переходе на партионный учет версии 2.2 диагностированы ошибки'"),
			ТекстДляПротокола);
		
	КонецЦикла;
	
	#КонецОбласти
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТОстаткиПартииТоваровОрганизаций, ВТОстаткиПартииТоваровПереданныеНаКомиссию, ВТОстаткиПартииПроизводственныхЗатрат,
		|ВТОстаткиПартииЗатратНаВыпуск, ВТОстаткиПартииРасходовНаСебестоимостьТоваров,
		|ВТАналитикиПартийСВидомЦенности, ВТОстаткиПартийПредварительная,
		|ВТОстаткиПартий, ВТИзменившиесяДокументы, ВТОстаткиСебестоимости,
		|ВТОстаткиСуммБезКоличества, ВТКорректировкаПартий, ВТОстаткиПартийСкорректированные, ВТЗависшиеКопейки,
		|ВТПартииДляСписанияКопеек, ВТКорректировкаКопеек");
		
КонецПроцедуры

// При расчете первого месяца в партионном учете версии 2.2 формирует начальные остатки партий НДС и УСН.
//
Процедура СформироватьНачальныеОстаткиПартийНДСиУСН(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "СформироватьНачальныеОстаткиПартийНДСиУСН");
	
	ОписаниеРегистра = ПараметрыРасчета.Движения[Метаданные.РегистрыНакопления.ДетализацияПартийТоваровДляНДСиУСН.Имя];
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	#Область ОчисткаПрошлыхОстатковПриИзменившейсяДатеПереходаНаПУ22
	
	// Допустим сдвиг даты перехода "назад".
	// Если дата перехода изменена, то очистим ранее сформированные движения переноса остатков.
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН КАК Т
	|ГДЕ
	|	Т.Организация В(&МассивОрганизаций)
	|	И Т.Период > &КонецПредыдущегоПериода
	|	И Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПереносДанных)
	|	И Т.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
	
		ЗаписатьДвиженияПоРегистру(
			ПараметрыРасчета,
			Выборка,
			ОписаниеРегистра.МенеджерРегистра);
			
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Очищено ранее сформированных движений переноса остатков у документов расчета себестоимости: %1'"),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Количество())));
		
		ОписаниеРегистра.НадоОбновитьРасчетныйКэш = Истина;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ВыборкаОстатков
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.ДокументПоступления,
	|	Т.АналитикаУчетаПартий,
	|	Т.КоличествоОстаток КАК Количество,
	|	Т.СтоимостьРеглОстаток КАК СтоимостьБезНДС,
	|	Т.НДСРеглОстаток КАК НДС
	|ПОМЕСТИТЬ ВТОстаткиПартииТоваровОрганизаций
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&ГраницаКонецПредыдущегоПериода, Организация В (&МассивОрганизаций)
	|		И НЕ ВидЗапасов.ТипЗапасов В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар),
	|			 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|			 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.ДокументПоступления,
	|	Т.АналитикаУчетаПартий,
	|	Т.КоличествоОстаток КАК Количество,
	|	Т.СтоимостьРеглОстаток КАК СтоимостьБезНДС,
	|	Т.НДСРеглОстаток КАК НДС
	|ПОМЕСТИТЬ ВТОстаткиПартииТоваровПереданныеНаКомиссию
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&ГраницаКонецПредыдущегоПериода, Организация В (&МассивОрганизаций)) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.ДокументПоступления,
	|	Т.АналитикаУчетаПартий,
	|	Т.КоличествоОстаток КАК Количество,
	|	Т.СтоимостьРеглОстаток КАК СтоимостьБезНДС,
	|	Т.НДСРеглОстаток КАК НДС
	|ПОМЕСТИТЬ ВТОстаткиПартииПроизводственныхЗатрат
	|ИЗ
	|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&ГраницаКонецПредыдущегоПериода, Организация В (&МассивОрганизаций)) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.ДокументПоступления,
	|	Т.ДокументПоступленияРасходов,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаУчетаПартий,
	|	0 КАК Количество,
	|	Т.СтоимостьРеглОстаток КАК СтоимостьБезНДС,
	|	Т.НДСРеглОстаток КАК НДС
	|ПОМЕСТИТЬ ВТОстаткиПартииРасходовНаСебестоимостьТоваров
	|ИЗ
	|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров.Остатки(&ГраницаКонецПредыдущегоПериода, Организация В (&МассивОрганизаций)) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.АналитикаУчетаПродукции,
	|	Т.ДокументВыпуска,
	|	Т.ДокументПоступления,
	|	Т.АналитикаУчетаПартий,
	|	0 КАК Количество,
	|	Т.СтоимостьРеглОстаток КАК СтоимостьБезНДС,
	|	Т.НДСРеглОстаток КАК НДС
	|ПОМЕСТИТЬ ВТОстаткиПартииЗатратНаВыпуск
	|ИЗ
	|	РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(&ГраницаКонецПредыдущегоПериода,	Организация В (&МассивОрганизаций)
	|		И АналитикаУчетаПродукции <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.РазделУчета 				 КАК РазделУчета,
	|	Т.Организация 				 КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов 				 КАК ВидЗапасов,
	|	Т.ДокументПоступления 		 КАК Партия,
	|	Т.АналитикаУчетаПартий 		 КАК АналитикаУчетаПартий,
	|	Т.ВидЦенности 				 КАК ВидЦенности,
	|	СУММА(Т.Количество) 		 КАК Количество,
	|	СУММА(Т.СтоимостьБезНДС) 	 КАК СтоимостьБезНДС,
	|	СУММА(Т.НДС) 				 КАК НДС,
	|	ВЫБОР КОГДА &ВалютыУпрИРеглУчетаСовпадают И &УправленческийУчетОрганизаций
	|		ТОГДА СУММА(Т.НДС)
	|		ИНАЧЕ 0
	|	  КОНЕЦ 				 	 КАК НДСУпр
	|ПОМЕСТИТЬ ВТОстаткиПартийПредварительная
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|		Т.Организация КАК Организация,
	|		Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов КАК ВидЗапасов,
	|		Т.ДокументПоступления КАК ДокументПоступления,
	|		Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|		Т.Количество КАК Количество,
	|		Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|		Т.НДС КАК НДС
	|	ИЗ
	|		ВТОстаткиПартииТоваровОрганизаций КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию),
	|		Т.Организация,
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов,
	|		Т.ДокументПоступления,
	|		Т.АналитикаУчетаПартий,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары),
	|		Т.Количество,
	|		Т.СтоимостьБезНДС,
	|		Т.НДС
	|	ИЗ
	|		ВТОстаткиПартииТоваровПереданныеНаКомиссию КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА Т.АналитикаУчетаНоменклатуры.Склад ССЫЛКА Справочник.Партнеры
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОНЕЦ,
	|		Т.Организация,
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов,
	|		Т.ДокументПоступления,
	|		Т.АналитикаУчетаПартий,
	|		ВЫБОР КОГДА АналитикаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) 
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) 
	|		КОНЕЦ,
	|		Т.Количество,
	|		Т.СтоимостьБезНДС,
	|		Т.НДС
	|	ИЗ
	|		ВТОстаткиПартииПроизводственныхЗатрат КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО АналитикаНоменклатуры.КлючАналитики = Т.АналитикаУчетаНоменклатуры
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА Т.АналитикаУчетаНоменклатуры.Склад ССЫЛКА Справочник.Склады
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОГДА Т.АналитикаУчетаНоменклатуры.Склад ССЫЛКА Справочник.СтруктураПредприятия
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		Т.Организация,
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов,
	|		Т.ДокументПоступленияРасходов,
	|		Т.АналитикаУчетаПартий,
	|		ВЫБОР 
	|			КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL 
	|				ТОГДА СтатьиРасходов.ВидЦенностиНДС
	|			КОГДА АналитикаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		КОНЕЦ,
	|		Т.Количество,
	|		Т.СтоимостьБезНДС,
	|		Т.НДС
	|	ИЗ
	|		ВТОстаткиПартииРасходовНаСебестоимостьТоваров КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО АналитикаНоменклатуры.КлючАналитики = Т.АналитикаУчетаНоменклатуры
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|			ПО Т.СтатьяРасходов = СтатьиРасходов.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА Т.АналитикаУчетаПродукции.Склад ССЫЛКА Справочник.Склады
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОГДА Т.АналитикаУчетаПродукции.Склад ССЫЛКА Справочник.СтруктураПредприятия
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		Т.Организация,
	|		Т.АналитикаУчетаПродукции,
	|		ЕСТЬNULL(ПартииТоваров.ВидЗапасов, ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)),
	|		Т.ДокументПоступления,
	|		Т.АналитикаУчетаПартий,
	|		ВЫБОР КОГДА АналитикаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) 
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) 
	|		КОНЕЦ,
	|		Т.Количество,
	|		Т.СтоимостьБезНДС,
	|		Т.НДС
	|	ИЗ
	|		ВТОстаткиПартииЗатратНаВыпуск КАК Т
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПартииТоваровОрганизаций КАК ПартииТоваров
	|			ПО Т.Организация = ПартииТоваров.Организация
	|				И Т.АналитикаУчетаПродукции = ПартииТоваров.АналитикаУчетаНоменклатуры
	|				И Т.ДокументВыпуска = ПартииТоваров.ДокументПоступления
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО АналитикаНоменклатуры.КлючАналитики = Т.АналитикаУчетаПродукции
	|	
	|	) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.РазделУчета,
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.ДокументПоступления,
	|	Т.АналитикаУчетаПартий,
	|	Т.ВидЦенности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПартий";
	
	#КонецОбласти
	
	Запрос.Выполнить(); // формируем ВТОстаткиПартийПредварительная
	
	СформироватьАналитикиПартийСВидомЦенности(ПараметрыРасчета); // формируем ВТАналитикиПартийСВидомЦенности
	
	#Область ФормированиеДвижений
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументыВводаОстатков.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Т.РазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Т.РазделУчета
	|		КОГДА НЕ ОстаткиКомиссии.Организация ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|	КОНЕЦ КАК РазделУчета,
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|		ТОГДА Т.ВидЗапасов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВЫБОР КОГДА Т.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|		ТОГДА Т.Партия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Партия,
	|	Т.Партия КАК ДокументПоступления,
	|	ЕСТЬNULL(АналитикиПартий.АналитикаУчетаПартийСВидомЦенности, Т.АналитикаУчетаПартий) КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА Аналитика.ГруппаПродукции ЕСТЬ NULL 
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА Аналитика.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА Аналитика.ГруппаПродукции
	|		КОГДА Аналитика.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки)
	|			ТОГДА Аналитика.УстарелоСделка
	|		КОГДА Аналитика.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения)
	|			ТОГДА Аналитика.УстарелоПодразделение
	|		КОГДА Аналитика.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера)
	|			ТОГДА Аналитика.УстарелоМенеджер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ Т.АналитикаУчетаПартий.НалогообложениеНДС ЕСТЬ NULL И Т.АналитикаУчетаПартий.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Т.АналитикаУчетаПартий.НалогообложениеНДС
	|		КОГДА НЕ Аналитика.НалогообложениеНДС ЕСТЬ NULL И Аналитика.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Аналитика.НалогообложениеНДС
	|		КОГДА ЕСТЬNULL(ПримененияЕНВД.РозничнаяТорговляОблагаетсяЕНВД, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|		КОГДА НЕ СпрУчетнаяПолитикаУСН.Ссылка ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	Т.Количество,
	|	Т.СтоимостьБезНДС,
	|	Т.НДС,
	|	Т.НДСУпр,
	|	ИСТИНА КАК РасчетПартий,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПереносДанных) КАК ТипЗаписи,
	|	ДокументыВводаОстатков.Ссылка КАК ДокументИсточник
	|ПОМЕСТИТЬ ВТОстаткиПартий
	|ИЗ
	|	ВТОстаткиПартийПредварительная КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПартииТоваровПереданныеНаКомиссию КАК ОстаткиКомиссии
	|		ПО (Т.РазделУчета = НЕОПРЕДЕЛЕНО)
	|			И Т.Организация = ОстаткиКомиссии.Организация
	|			И Т.АналитикаУчетаНоменклатуры = ОстаткиКомиссии.АналитикаУчетаНоменклатуры
	|			И Т.ВидЗапасов = ОстаткиКомиссии.ВидЗапасов
	|			И Т.Партия = ОстаткиКомиссии.ДокументПоступления
	|			И Т.АналитикаУчетаПартий = ОстаткиКомиссии.АналитикаУчетаПартий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК Аналитика
	|		ПО Т.ВидЗапасов = Аналитика.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТАналитикиПартийСВидомЦенности КАК АналитикиПартий
	|		ПО Т.АналитикаУчетаПартий = АналитикиПартий.АналитикаУчетаПартий
	|			И Т.ВидЦенности = АналитикиПартий.ВидЦенности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыВводаОстатков
	|		ПО Т.Организация = ДокументыВводаОстатков.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПримененияЕНВД.СрезПоследних(&КонецПредыдущегоПериода, Организация В (&МассивОрганизаций)) КАК ПримененияЕНВД
	|		ПО Т.Организация = ПримененияЕНВД.Организация
	|			И Т.АналитикаУчетаНоменклатуры.Склад = ПримененияЕНВД.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&КонецПредыдущегоПериода, Организация В (&МассивОрганизаций)) КАК РегУчетнаяПолитика
	|		ПО Т.Организация = РегУчетнаяПолитика.Организация
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК СпрУчетнаяПолитикаУСН
	|			ПО РегУчетнаяПолитика.УчетнаяПолитика = СпрУчетнаяПолитикаУСН.Ссылка
	|				И СпрУчетнаяПолитикаУСН.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
	|ГДЕ
	|	Т.Партия <> НЕОПРЕДЕЛЕНО
	|	И ЕСТЬNULL(АналитикиПартий.АналитикаУчетаПартийСВидомЦенности, Т.АналитикаУчетаПартий) <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|	И (Т.Количество <> 0 ИЛИ Т.НДС <> 0 ИЛИ Т.НДСУпр <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТИзменившиесяДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.Регистратор КАК Регистратор,
	|		Т.РазделУчета КАК РазделУчета,
	|		Т.Организация КАК Организация,
	|		Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов КАК ВидЗапасов,
	|		Т.Партия КАК Партия,
	|		Т.ДокументПоступления КАК ДокументПоступления,
	|		Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|		Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|		Т.Количество КАК Количество,
	|		Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|		Т.НДС КАК НДС,
	|		Т.НДСУпр КАК НДСУпр,
	|		Т.РасчетПартий КАК РасчетПартий,
	|		Т.ТипЗаписи КАК ТипЗаписи,
	|		Т.ДокументИсточник КАК ДокументИсточник
	|	ИЗ
	|		ВТОстаткиПартий КАК Т
	|	ГДЕ
	|		Т.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Регистратор,
	|		Т.РазделУчета,
	|		Т.Организация,
	|		Т.АналитикаУчетаНоменклатуры,
	|		Т.ВидЗапасов,
	|		Т.Партия,
	|		Т.ДокументПоступления,
	|		Т.АналитикаУчетаПартий,
	|		Т.АналитикаФинансовогоУчета,
	|		Т.ВидДеятельностиНДС,
	|		-Т.Количество,
	|		-Т.СтоимостьБезНДС,
	|		-Т.НДС,
	|		-Т.НДСУпр,
	|		Т.РасчетПартий,
	|		Т.ТипЗаписи,
	|		Т.ДокументИсточник
	|	ИЗ
	|		РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыВводаОстатков
	|			ПО Т.Регистратор = ДокументыВводаОстатков.Ссылка
	|	ГДЕ
	|		Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПереносДанных)
	|		И Т.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.РазделУчета,
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.Партия,
	|	Т.ДокументПоступления,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС,
	|	Т.РасчетПартий,
	|	Т.ТипЗаписи,
	|	Т.ДокументИсточник
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Т.Количество) <> 0
	|		ИЛИ СУММА(Т.СтоимостьБезНДС) <> 0
	|		ИЛИ СУММА(Т.НДС) <> 0
	|		ИЛИ СУММА(Т.НДСУпр) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор КАК Регистратор,
	|	&КонецПредыдущегоПериода КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Партия КАК Партия,
	|	Т.ДокументПоступления,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС,
	|	Т.РасчетПартий,
	|	Т.ТипЗаписи,
	|	Т.ДокументИсточник,
	|	СУММА(Т.Количество) КАК Количество,
	|	СУММА(Т.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	СУММА(Т.НДС) КАК НДС,
	|	СУММА(Т.НДСУпр) КАК НДСУпр
	|ИЗ
	|	ВТОстаткиПартий КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИзменившиесяДокументы КАК ИзменившиесяДокументы
	|		ПО Т.Регистратор = ИзменившиесяДокументы.Регистратор
	|ГДЕ
	|	Т.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.РазделУчета,
	|	Т.Организация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.Партия,
	|	Т.ДокументПоступления,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС,
	|	Т.РасчетПартий,
	|	Т.ТипЗаписи,
	|	Т.ДокументИсточник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	РазделУчета,
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	Партия";
	
	#КонецОбласти
	
	РезультатЗапроса = Запрос.Выполнить(); // сформированные движения по переносу остатков
	
	#Область ЗаписьДвижений
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		// Запишем В ИБ движения, формирующие начальные остатки партий НДС версии 2.2
		ЗаписатьДвиженияПоРегистру(
			ПараметрыРасчета,
			Выборка,
			ОписаниеРегистра.МенеджерРегистра);
			
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Сформировано движений начальных остатков партий НДС: %1'"),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Количество())));
		
		ОписаниеРегистра.НадоОбновитьРасчетныйКэш = Истина;
		
	ИначеЕсли УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТОстаткиПартий") = 0 Тогда
		
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			НСтр("ru='Нет начальных остатков партий НДС.'"));
		
	Иначе
		
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			НСтр("ru='Начальные остатки партий НДС корректны, изменение не требуется.'"));
		
	КонецЕсли;
	
	// Очистим движения документов, по которым раньше были, а теперь нет остатков партий НДС
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИзменившиесяДокументы.Регистратор
	|ИЗ
	|	ВТИзменившиесяДокументы КАК ИзменившиесяДокументы
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПартий КАК ДокументыСОстатками
	|		ПО ИзменившиесяДокументы.Регистратор = ДокументыСОстатками.Регистратор
	|ГДЕ
	|	ДокументыСОстатками.Регистратор ЕСТЬ NULL ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
	
		ЗаписатьДвиженияПоРегистру(
			ПараметрыРасчета,
			Выборка,
			ОписаниеРегистра.МенеджерРегистра);
			
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Очищено ранее сформированных движений переноса остатков у документов расчета себестоимости: %1'"),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Количество())));
		
		ОписаниеРегистра.НадоОбновитьРасчетныйКэш = Истина;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОшибкиВОстатках
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ПартииТоваровОрганизаций"" КАК ИмяРегистра,
	|	Т.Организация КАК Организация
	|ИЗ
	|	ВТОстаткиПартииТоваровОрганизаций КАК Т
	|ГДЕ
	|	Т.АналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ПартииТоваровПереданныеНаКомиссию"" КАК ИмяРегистра,
	|	Т.Организация КАК Организация
	|ИЗ
	|	ВТОстаткиПартииТоваровПереданныеНаКомиссию КАК Т
	|ГДЕ
	|	Т.АналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ПартииПроизводственныхЗатрат"" КАК ИмяРегистра,
	|	Т.Организация КАК Организация
	|ИЗ
	|	ВТОстаткиПартииПроизводственныхЗатрат КАК Т
	|ГДЕ
	|	Т.АналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ПартииРасходовНаСебестоимостьТоваров"" КАК ИмяРегистра,
	|	Т.Организация КАК Организация
	|ИЗ
	|	ВТОстаткиПартииРасходовНаСебестоимостьТоваров КАК Т
	|ГДЕ
	|	Т.АналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='В регистре накопления ""%1"" по организации ""%2"" на начало периода %3 есть остатки по пустой аналитике учета номенклатуры.'"),
			Выборка.ИмяРегистра,
			ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Организация),
			ПротоколРасчетаПартийИСебестоимости.ПредставлениеПериодаРасчета(ПараметрыРасчета));
		
		ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВНачальныхОстаткахПУ22,
			ТекстДляПротокола);
		
		УниверсальныеМеханизмыПартийИСебестоимости.ЗарегистрироватьПроблемуВыполненияРасчета(
			ПараметрыРасчета,
			Выборка.Организация,
			НСтр("ru='При переходе на партионный учет версии 2.2 диагностированы ошибки'"),
			ТекстДляПротокола);
		
	КонецЦикла;
	
	#КонецОбласти
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТОстаткиПартииТоваровОрганизаций, ВТОстаткиПартииТоваровПереданныеНаКомиссию, ВТОстаткиПартииПроизводственныхЗатрат,
		|ВТОстаткиПартииЗатратНаВыпуск, ВТОстаткиПартииРасходовНаСебестоимостьТоваров,
		|ВТАналитикиПартийСВидомЦенности, ВТОстаткиПартийПредварительная, ВТОстаткиПартий, ВТИзменившиесяДокументы");
	
КонецПроцедуры

// Заполняет вид ценности в ключах аналитики учета партий и создает временную таблицу ВТАналитикиПартийСВидомЦенности.
//
Процедура СформироватьАналитикиПартийСВидомЦенности(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.АналитикаУчетаПартий,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаФинансовогоУчета,
	|	Ключи.Поставщик,
	|	Ключи.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	Ключи.СтавкаНДС,
	|	Т.ВидЦенности,
	|	0 КАК КодСтроки
	|ПОМЕСТИТЬ ВТРеквизитыНовыхКлючейАналитикиУчетаПартий
	|ИЗ
	|	ВТОстаткиПартийПредварительная КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПартий КАК Ключи
	|		ПО Т.АналитикаУчетаПартий = Ключи.Ссылка
	|ГДЕ
	|	Ключи.ВидЦенности <> Т.ВидЦенности
	|	ИЛИ Ключи.ГруппаФинансовогоУчета <> ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	ИЛИ Ключи.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&НачалоПериода КАК Дата,
	|	Т.ГруппаФинансовогоУчета,
	|	Т.Поставщик,
	|	Т.Контрагент,
	|	Т.НалогообложениеНДС,
	|	Т.СтавкаНДС,
	|	Т.ВидЦенности,
	|	Т.КодСтроки
	|ИЗ
	|	ВТРеквизитыНовыхКлючейАналитикиУчетаПартий КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
	|		ПО Т.ГруппаФинансовогоУчета = АналитикаПартий.ГруппаФинансовогоУчета
	|		 И Т.Поставщик 				= АналитикаПартий.Поставщик
	|		 И Т.Контрагент 			= АналитикаПартий.Контрагент
	|		 И Т.НалогообложениеНДС 	= АналитикаПартий.НалогообложениеНДС
	|		 И Т.СтавкаНДС 				= АналитикаПартий.СтавкаНДС
	|		 И Т.ВидЦенности 			= АналитикаПартий.ВидЦенности
	|		 И Т.КодСтроки 				= АналитикаПартий.КодСтроки
	|ГДЕ
	|	ЕСТЬNULL(АналитикаПартий.КлючАналитики, ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка))
	|		= ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|";
	
	Выборка = Запрос.Выполнить().Выбрать(); // получим аналитики учета партий с некорректным видом ценности
	Пока Выборка.Следующий() Цикл
		
		// Вид ценности в ключе аналитики, по которому есть остатки "старых" партий (из партионных регистров),
		// по всей видимости будет не заполнен.
		// В то же время, при формировании остатков "новых" партий (в регистре себестоимости),
		// мы знаем к какому именно виду ценности относятся эти остатки.
		// Поэтому, если вид ценности в ключе аналитики "старых" остатков не совпадает с видом ценности "новых" остатков,
		// то ключ аналитики "новых" остатков нельзя брать из "старых" остатков - его надо заменить.
		// Аналогичная ситуация и с реквизитами "ГруппаФинансовогоУчета" и "НалогообложениеНДС" - они должны быть пустыми,
		// но в "старых" ключах они скорее всего будут заполнены.
		// При этом, подходящий ключ для "новых" остатков уже может существовать в ИБ:
		// - до выполнения этого кода (при закрытии месяца) в ИБ добавлялись/изменялись документы
		// - при проведении этих документов формировались ключи аналитики с заполненным видом ценности
		// - эти ключи могут оказаться подходящими для "новых" остатков
		// Создадим только ключи, отсутствующие в ИБ на текущий момент.
		НовыйКлючАналитики = Справочники.КлючиАналитикиУчетаПартий.ПолучитьКлючАналитики(Выборка, Ложь);
		
	КонецЦикла;
	
	// Теперь в регистре (и в справочнике) ключей есть все необходимые ключи для "новых" остатков.
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.АналитикаУчетаПартий,
	|	Т.ВидЦенности,
	|	АналитикаПартий.КлючАналитики КАК АналитикаУчетаПартийСВидомЦенности
	|ПОМЕСТИТЬ ВТАналитикиПартийСВидомЦенности
	|ИЗ
	|	ВТРеквизитыНовыхКлючейАналитикиУчетаПартий КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
	|		ПО Т.ГруппаФинансовогоУчета = АналитикаПартий.ГруппаФинансовогоУчета
	|		 И Т.Поставщик 				= АналитикаПартий.Поставщик
	|		 И Т.Контрагент 			= АналитикаПартий.Контрагент
	|		 И Т.НалогообложениеНДС 	= АналитикаПартий.НалогообложениеНДС
	|		 И Т.СтавкаНДС 				= АналитикаПартий.СтавкаНДС
	|		 И Т.ВидЦенности 			= АналитикаПартий.ВидЦенности
	|		 И Т.КодСтроки 				= АналитикаПартий.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРеквизитыНовыхКлючейАналитикиУчетаПартий
	|";
	
	Запрос.Выполнить(); // формируем ВТАналитикиПартийСВидомЦенности
	
КонецПроцедуры

// При расчете первого месяца в партионном учете версии 2.2 формирует начальные остатки НДСУпр в регистре НДСПредъявленный.
//
Процедура СформироватьНачальныеОстаткиНДСПредъявленный(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "СформироватьНачальныеОстаткиНДСПредъявленный");
	
	ОписаниеРегистра = ПараметрыРасчета.Движения[Метаданные.РегистрыНакопления.НДСПредъявленный.Имя];
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Организация,
	|	Т.СчетФактура,
	|	Т.Поставщик,
	|	Т.ВидЦенности,
	|	Т.СтавкаНДС,
	|	Т.ВидДеятельностиНДС,
	|	Т.ИсправленныйСчетФактура,
	|	Т.РеализацияЭкспорт,
	|	Т.НДСОстаток КАК НДСУпр
	|ПОМЕСТИТЬ ВТОстаткиНДСПредъявленный
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(&ГраницаКонецПредыдущегоПериода,
	|		Организация В (&МассивОрганизаций) И &ВалютыУпрИРеглУчетаСовпадают И &УправленческийУчетОрганизаций) КАК Т
	|ГДЕ
	|	Т.НДСОстаток <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор,
	|	Т.Организация
	|ПОМЕСТИТЬ ВТИзменившиесяДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументыВводаОстатков.Ссылка КАК Регистратор,
	|		Т.Организация,
	|		Т.СчетФактура,
	|		Т.Поставщик,
	|		Т.ВидЦенности,
	|		Т.СтавкаНДС,
	|		Т.ВидДеятельностиНДС,
	|		Т.ИсправленныйСчетФактура,
	|		Т.РеализацияЭкспорт,
	|		Т.НДСУпр
	|	ИЗ
	|		ВТОстаткиНДСПредъявленный КАК Т
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыВводаОстатков
	|			ПО Т.Организация = ДокументыВводаОстатков.Организация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Регистратор,
	|		Т.Организация,
	|		Т.СчетФактура,
	|		Т.Поставщик,
	|		Т.ВидЦенности,
	|		Т.СтавкаНДС,
	|		Т.ВидДеятельностиНДС,
	|		Т.ИсправленныйСчетФактура,
	|		Т.РеализацияЭкспорт,
	|		-Т.НДСУпр
	|	ИЗ
	|		РегистрНакопления.НДСПредъявленный КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыВводаОстатков
	|			ПО Т.Регистратор = ДокументыВводаОстатков.Ссылка
	|	ГДЕ
	|		Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.Организация,
	|	Т.СчетФактура,
	|	Т.Поставщик,
	|	Т.ВидЦенности,
	|	Т.СтавкаНДС,
	|	Т.ВидДеятельностиНДС,
	|	Т.ИсправленныйСчетФактура,
	|	Т.РеализацияЭкспорт
	|
	|ИМЕЮЩИЕ
	|	СУММА(Т.НДСУпр) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзменившиесяДокументы.Регистратор КАК Регистратор,
	|	&КонецПредыдущегоПериода КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Т.Организация,
	|	Т.СчетФактура,
	|	Т.Поставщик,
	|	Т.ВидЦенности,
	|	Т.СтавкаНДС,
	|	Т.ВидДеятельностиНДС,
	|	Т.ИсправленныйСчетФактура,
	|	Т.РеализацияЭкспорт,
	|	СУММА(Т.НДСУпр) КАК НДСУпр
	|ИЗ
	|	ВТОстаткиНДСПредъявленный КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИзменившиесяДокументы КАК ИзменившиесяДокументы
	|		ПО Т.Организация = ИзменившиесяДокументы.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзменившиесяДокументы.Регистратор,
	|	Т.Организация,
	|	Т.СчетФактура,
	|	Т.Поставщик,
	|	Т.ВидЦенности,
	|	Т.СтавкаНДС,
	|	Т.ВидДеятельностиНДС,
	|	Т.ИсправленныйСчетФактура,
	|	Т.РеализацияЭкспорт
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	Поставщик,
	|	СчетФактура";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		// Запишем В ИБ движения, формирующие начальные остатки НДСУпр в регистре НДСПредъявленный
		ЗаписатьДвиженияПоРегистру(
			ПараметрыРасчета,
			Выборка,
			ОписаниеРегистра.МенеджерРегистра);
			
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Сформировано движений начальных остатков НДСУпр в регистре НДСПредъявленный: %1'"),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Количество())));
		
	КонецЕсли;
	
	// Очистим движения документов, по которым раньше были, а теперь нет остатков НДСУпр
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИзменившиесяДокументы.Регистратор
	|ИЗ
	|	ВТИзменившиесяДокументы КАК ИзменившиесяДокументы
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиНДСПредъявленный КАК ДокументыСОстатками
	|		ПО ИзменившиесяДокументы.Организация = ДокументыСОстатками.Организация
	|ГДЕ
	|	ДокументыСОстатками.Организация ЕСТЬ NULL ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
	
		ЗаписатьДвиженияПоРегистру(
			ПараметрыРасчета,
			Выборка,
			ОписаниеРегистра.МенеджерРегистра);
			
	КонецЕсли;
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТОстаткиНДСПредъявленный, ВТИзменившиесяДокументы");
	
КонецПроцедуры


// Проверяет, был ли выполнен расчет текущего периода в партионном учете версии 2.2.
// Если был выполнен, то значит выполнялись процедуры
//	- ОчиститьНеиспользуемыеДанныеПартионногоУчетаВерсии21()
//	- ИсправитьПроблемыВДвиженияхИДокументах() (в части корректировки полей партионного учета версии 2.2)
// и в регистрах нет устаревших и некорректных движений.
//
Функция ПроверитьНеобходимостьЗаполненияРеквизитаРасчетПартий(ПараметрыРасчета)
	
	// Проверим наличие движений по партионным регистрам версии 2.1
	ШаблонТекстаЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	""%1"" КАК РегистрСоСтарымиДвижениями
	|ИЗ
	|	%1 КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В(&МассивОрганизаций)
	|	И НЕ Т.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
	|";
	
	ТекстЗапроса = "";
	
	Для Каждого МетаданныеРегистра Из НеиспользуемыеДанныеМеханизмаВерсии21() Цикл
		ТекстЗапроса = ТекстЗапроса
			+ ?(ТекстЗапроса = "", "", ТекстОбъединениеЗапросов())
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаЗапроса, МетаданныеРегистра.Ключ.ПолноеИмя());
	КонецЦикла;
	
	// Проверим наличие первичных движений себестоимости с незаполненным типом записи
	ТекстЗапроса = ТекстЗапроса
	+ ТекстОбъединениеЗапросов() + "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	""%1"" КАК РегистрСоСтарымиДвижениями
	|ИЗ
	|	%1 КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В(&МассивОрганизаций)
	|	И НЕ Т.РасчетСебестоимости
	|	И Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПустаяСсылка)
	|	И НЕ Т.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|";
	ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.ПолноеИмя());
	
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой(); // есть "старые" движения - расчет в версии 2.2 еще не выполнялся
	
КонецФункции

// Заполняет реквизит РасчетПартий, если период был рассчитан в партионном учете версии 2.1.
//
Процедура ЗаполнитьРеквизитРасчетПартий(ПараметрыРасчета, ОписаниеРегистра,
			ТекстРасчетПартий, ТекстСоединения, ТекстУпорядочивание)
	
	// В регистре могут быть движения с некорректно незаполненным полем РасчетПартий.
	// Такие движения будут, если месяц был рассчитан ранее в партионном учете версии 2.1
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "ЗаполнитьРеквизитРасчетПартий" + ОписаниеРегистра.ИмяРегистра);
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	// Получим перечень регистраторов с некорректными движениями
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыСНекорректнымиДвижениями
	|ИЗ
	|	%1 КАК Т
	|		%2
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В(&МассивОрганизаций)
	|	И НЕ Т.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|	И %3 <> Т.РасчетПартий";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Запрос.Текст,
	    ОписаниеРегистра.ПолноеИмяРегистра,
		ТекстСоединения,
		ТекстРасчетПартий); 
		
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "ВТРегистраторыСНекорректнымиДвижениями");
	Запрос.Выполнить();
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
	Если УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТРегистраторыСНекорректнымиДвижениями") > 0 Тогда
		
		// Выберем движения, правильно заполним служебный реквизит и перезапишем эти движения в ИБ
		Запрос.Текст =
		"ВЫБРАТЬ
		|	%1
		|ИЗ
		|	%2 КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторыСНекорректнымиДвижениями КАК Регистраторы
		|		ПО Т.Регистратор = Регистраторы.Регистратор
		|		%3
		|
		|УПОРЯДОЧИТЬ ПО
		|	%4";
		
		// Подставим шаблоны в текст запроса
		ПоляОсновнойТаблицыРегистра = СтрЗаменить(ОписаниеРегистра.ПоляОсновнойТаблицыРегистра, "%1", "Т.");
		ПоляОсновнойТаблицыРегистра = СтрЗаменить(ПоляОсновнойТаблицыРегистра, "Т.РасчетПартий", ТекстРасчетПартий + " КАК РасчетПартий");
		
		ПоляУпорядочивания = "Т.Регистратор, Т.РасчетПартий, Т.Период"
			+ ?(ОписаниеРегистра.ЕстьОрганизация, 		  ", Т.Организация", "")
			+ ?(ОписаниеРегистра.ЕстьАналитикаПартнеров,  ", Т.АналитикаУчетаПоПартнерам", "")
			+ ?(ОписаниеРегистра.ЕстьСвойствоВидДвижения, ", Т.ВидДвижения", "")
			+ ?(ПустаяСтрока(ТекстУпорядочивание), "", ", ") + ТекстУпорядочивание;
		
		Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Запрос.Текст,
			ПоляОсновнойТаблицыРегистра,
			ОписаниеРегистра.ПолноеИмяРегистра,
			ТекстСоединения,
			ПоляУпорядочивания); 
			
		// Перезапишем движения с правильно заполненным служебным реквизитом
		ЗаписатьДвиженияПоРегистру(
			ПараметрыРасчета,
			Запрос,
			ОписаниеРегистра.МенеджерРегистра);
		
		ОписаниеРегистра.НадоОбновитьРасчетныйКэш = Истина;
		
	КонецЕсли;
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВТРегистраторыСНекорректнымиДвижениями");
	
КонецПроцедуры

// Исправляет проблемы в движениях документов и в самих документах в рассчитываемом периоде.
//
// Есть ошибки, которые "портят" исходные данные для расчета,
// но для исправления их последствий не пишется обработчик обновления.
// Например, из-за какой-то старой ошибки в каких-то случаях движения документа были некорректны.
// - если для исправления этой ошибки написать обработчик обновления,
// то он изменит данные прошлых, "закрытых" периодов, из-за чего эти периоды перестанут быть "закрытыми".
// Придется повторно закрывать эти периоды, из-за чего в них может измениться себестоимость и, как следствие, регламентированная отчетность.
// Это плохо, т.к. по этим периодам отчетность уже может быть сдана.
// - с другой стороны, в тех периодах, которые пользователь будет пересчитывать, эту ошибку в движениях надо бы исправить,
// чтобы в этих пересчитанных периодах себестоимость основывалась на правильных исходных данных.
//
// Для исправления таких ошибок и предназначена данная процедура.
// По сути, она является аналогом обработчика обновления, исправляющего движения документов в периоде, указанном пользователем.
//
// Также эта процедура используется для корректировки движений периода при его перерасчете в партионном учете версии 2.2.
//
Процедура ИсправитьПроблемыВДвиженияхИДокументах(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "ИсправитьПроблемыВДвиженияхИДокументах");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	#Область ПоляПартионногоУчетаВерсии22
	
	// Проверим в первичных движениях документов корректность заполнения полей:
	// Партия, КорПартия, ТипЗаписи, аналитика учета партий, вид деятельности НДС.
	// Если поля заполнены некорректно, то, видимо, документ был проведен до перехода на партионный учет версии 2.2 -
	// надо перепровести документ по регистру, содержащему некорректные движения.
	// Если после перепроведения документа поля все равно заполнены некорректно, значит ошибка кроется
	// в процедурах формирования движений документа или в макете описания движений (для регистра себестоимости товаров).
	
	// Подготовим вспомогательные данные.
	ОписаниеЦепочек 		= ОписаниеЦепочекПартийТоваров(ПараметрыРасчета);
	ИспользуемыеТипыЗаписей = ИспользуемыеТипыЗаписейВЦепочках(ОписаниеЦепочек);
	
	Запрос.УстановитьПараметр("ИспользуемыеТипыЗаписей", ИспользуемыеТипыЗаписей);
	
	// Подготовим запрос для формирования ВТРегистраторыСНекорректнымиДвижениями.
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.ВидДвижения				 КАК ВидДвижения,
	|	Т.Регистратор 				 КАК Регистратор,
	|	Т.Организация 				 КАК Организация,
	|	Т.КорОрганизация 			 КАК КорОрганизация,
	|	Т.Партия 	  				 КАК Партия,
	|	Т.КорПартия 	  			 КАК КорПартия,
	|	Т.ХозяйственнаяОперация 	 КАК ХозяйственнаяОперация,
	|	Т.ТипЗаписи					 КАК ТипЗаписи,
	|	Т.АналитикаУчетаПартий		 КАК АналитикаУчетаПартий,
	|	Т.КорАналитикаУчетаПартий	 КАК КорАналитикаУчетаПартий,
	|	Т.РазделУчета				 КАК РазделУчета,
	|	Т.КорРазделУчета			 КАК КорРазделУчета,
	|	Т.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	Т.КорАналитикаУчетаНоменклатуры	КАК КорАналитикаУчетаНоменклатуры,
	|	Т.КорАналитикаФинансовогоУчета	КАК КорАналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС		 КАК ВидДеятельностиНДС,
	|	Т.ДокументИсточник			 КАК ДокументИсточник,
	|	ВЫБОР КОГДА Т.Количество > 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 						 КАК ПоложительноеКоличество
	|ПОМЕСТИТЬ ВТДвиженияСебестоимостьТоваров
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В(&МассивОрганизаций)
	|	И НЕ Т.РасчетПартий
	|	И НЕ Т.РасчетСебестоимости
	|	И НЕ Т.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
	|	И НЕ Т.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор 			 КАК Регистратор,
	|	Т.Организация 			 КАК Организация,
	|	Т.АналитикаУчетаПартий	 КАК АналитикаУчетаПартий,
	|	Т.ВидДеятельностиНДС	 КАК ВидДеятельностиНДС
	|ПОМЕСТИТЬ ВТДвиженияПартииПрочихРасходов
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В(&МассивОрганизаций)
	|	И НЕ Т.РасчетПартий
	|	И НЕ Т.Регистратор ССЫЛКА Документ.РаспределениеНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВозвратыТоваровНаДругойСклад
	|ИЗ
	|	ВТДвиженияСебестоимостьТоваров КАК Т
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Т.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|	И Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратНаДругойСклад)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор КАК Регистратор
	|ИЗ
	|	ВТДвиженияСебестоимостьТоваров КАК Т
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Т.Регистратор) = ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|	И Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратНаДругойСклад)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.ИмяРегистра КАК ИмяРегистра,
	|	Т.Ссылка 	  КАК Ссылка,
	|	Т.Организация КАК Организация,
	|	Т.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Т.КодОшибки   КАК КодОшибки
	|ПОМЕСТИТЬ ВТРегистраторыСНекорректнымиДвижениями
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""СебестоимостьТоваров"" КАК ИмяРегистра,
	|		Т.Регистратор КАК Ссылка,
	|		Т.Организация КАК Организация,
	|		Т.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ВЫБОР
	|			КОГДА Правила.ПустоеЗначениеРегистратора ЕСТЬ NULL 
	|				ТОГДА 1
	|			КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ВЫБОР
	|						КОГДА Т.ТипЗаписи В
	|							(ВЫБРАТЬ
	|								ТипыЗаписей.ТипЗаписиПриход
	|							 ИЗ
	|								ВТПравилаЗаполненияПоляТипЗаписи КАК ТипыЗаписей
	|							 ГДЕ
	|								ТИПЗНАЧЕНИЯ(Т.Регистратор) = ТИПЗНАЧЕНИЯ(ТипыЗаписей.ПустоеЗначениеРегистратора)
	|								И (ТипыЗаписей.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|									ИЛИ Т.ХозяйственнаяОперация = ТипыЗаписей.ХозяйственнаяОперация)
	|								И (ТипыЗаписей.ПоложительноеКоличество = НЕОПРЕДЕЛЕНО
	|									ИЛИ Т.ПоложительноеКоличество = ТипыЗаписей.ПоложительноеКоличество))
	|							ТОГДА 0
	|						ИНАЧЕ 2
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|						КОГДА Т.ТипЗаписи В
	|							(ВЫБРАТЬ
	|								ТипыЗаписей.ТипЗаписиРасход
	|							 ИЗ
	|								ВТПравилаЗаполненияПоляТипЗаписи КАК ТипыЗаписей
	|							 ГДЕ
	|								ТИПЗНАЧЕНИЯ(Т.Регистратор) = ТИПЗНАЧЕНИЯ(ТипыЗаписей.ПустоеЗначениеРегистратора)
	|								И (ТипыЗаписей.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|									ИЛИ Т.ХозяйственнаяОперация = ТипыЗаписей.ХозяйственнаяОперация)
	|								И (ТипыЗаписей.ПоложительноеКоличество = НЕОПРЕДЕЛЕНО
	|									ИЛИ Т.ПоложительноеКоличество = ТипыЗаписей.ПоложительноеКоличество))
	|						ТОГДА 0
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		КОНЕЦ КАК КодОшибки
	|	ИЗ
	|		ВТДвиженияСебестоимостьТоваров КАК Т
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПравилаЗаполненияПоляТипЗаписи КАК Правила
	|			ПО ТИПЗНАЧЕНИЯ(Т.Регистратор) = ТИПЗНАЧЕНИЯ(Правила.ПустоеЗначениеРегистратора)
	|				И (Правила.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|					ИЛИ Т.ХозяйственнаяОперация = Правила.ХозяйственнаяОперация)
	|				И (Правила.ПоложительноеКоличество = НЕОПРЕДЕЛЕНО
	|					ИЛИ Т.ПоложительноеКоличество = Правила.ПоложительноеКоличество)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""СебестоимостьТоваров"",
	|		Т.Регистратор,
	|		Т.Организация,
	|		Т.ХозяйственнаяОперация,
	|		ВЫБОР
	|			КОГДА Т.Организация В (&ОрганизацииСФИФОСкользящая) И Т.Партия = НЕОПРЕДЕЛЕНО
	|				ТОГДА 4
	|			КОГДА НЕ (Т.Организация В (&ОрганизацииСФИФОСкользящая)) И Т.Партия <> НЕОПРЕДЕЛЕНО
	|			  И Т.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|			  И Т.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
	|			  И Т.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
	|				ТОГДА 5
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТДвиженияСебестоимостьТоваров КАК Т
	|	ГДЕ
	|		Т.ТипЗаписи В (&ТипыЗаписейПервичныхПартий)
	|		ИЛИ Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""СебестоимостьТоваров"",
	|		Т.Регистратор,
	|		Т.Организация,
	|		Т.ХозяйственнаяОперация,
	|		ВЫБОР
	// Проверка кор. партии в расходных движениях при заполненной кор. организации (схема Интеркампани)
	|			КОГДА Т.Организация В (&ОрганизацииСФИФОСкользящая)
	|				И Т.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И НЕ Т.КорОрганизация В (&ОрганизацииСФИФОСкользящая)
	|				И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА
	|					ВЫБОР
	|						КОГДА Т.КорПартия = НЕОПРЕДЕЛЕНО
	|							ТОГДА 0
	|						ИНАЧЕ 5
	|					КОНЕЦ
	|			КОГДА НЕ Т.Организация В (&ОрганизацииСФИФОСкользящая)
	|				И Т.КорОрганизация В (&ОрганизацииСФИФОСкользящая)
	|				И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Т.КорРазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|				ТОГДА
	|					ВЫБОР
	|						КОГДА Т.КорПартия = Т.Регистратор
	|							ТОГДА 0
	|						ИНАЧЕ 6
	|					КОНЕЦ
	// Проверка кор. партии в расходных движениях без кор. организации (изменение документа партии внутри одной организации)
	|			КОГДА Т.Организация В (&ОрганизацииСФИФОСкользящая)
	|				И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НЕ Т.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка))
	|				И НЕ ЕСТЬNULL(Правила.КорПартияВРасходе, ЛОЖЬ)
	|				И (
	// при списании на партии производства кор. партия заполняется регистратором
	|					(
	|							(ЕСТЬNULL(Правила.КорПартияВРасходе, ЛОЖЬ)
	|								И Т.КорПартия <> Т.Регистратор
	|							ИЛИ НЕ ЕСТЬNULL(Правила.КорПартияВРасходе, ЛОЖЬ)
	|								И Т.КорПартия = Т.Регистратор)
	|					)
	|				)
	|				ТОГДА 6
	|			КОГДА НЕ Т.Организация В (&ОрганизацииСФИФОСкользящая)
	|				И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Т.КорПартия = Т.Регистратор
	|				И НЕ Т.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
	|				ТОГДА 5
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТДвиженияСебестоимостьТоваров КАК Т
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПравилаЗаполненияПоляТипЗаписи КАК Правила
	|			ПО ТИПЗНАЧЕНИЯ(Т.Регистратор) = ТИПЗНАЧЕНИЯ(Правила.ПустоеЗначениеРегистратора)
	|				И (Правила.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|					ИЛИ Т.ХозяйственнаяОперация = Правила.ХозяйственнаяОперация)
	|				И (Правила.ПоложительноеКоличество = НЕОПРЕДЕЛЕНО
	|					ИЛИ Т.ПоложительноеКоличество = Правила.ПоложительноеКоличество)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""СебестоимостьТоваров"",
	|		Т.Регистратор,
	|		Т.Организация,
	|		Т.ХозяйственнаяОперация,
	|		7
	|	ИЗ
	|		ВТДвиженияСебестоимостьТоваров КАК Т
	|	ГДЕ
	|		НЕ (Т.ТипЗаписи В (&ИспользуемыеТипыЗаписей))
	|		И НЕ (Т.ТипЗаписи В (&НепересчитываемыеТипыЗаписей))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""СебестоимостьТоваров"",
	|		Т.Регистратор,
	|		Т.Организация,
	|		Т.ХозяйственнаяОперация,
	|		8
	|	ИЗ
	|		ВТДвиженияСебестоимостьТоваров КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПартий КАК Аналитики
	|			ПО Т.АналитикаУчетаПартий = Аналитики.Ссылка
	|	ГДЕ
	|		Аналитики.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""СебестоимостьТоваров"",
	|		Т.Регистратор,
	|		Т.Организация,
	|		Т.ХозяйственнаяОперация,
	|		9
	|	ИЗ
	|		ВТДвиженияСебестоимостьТоваров КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПартий КАК Аналитики
	|			ПО Т.КорАналитикаУчетаПартий = Аналитики.Ссылка
	|	ГДЕ
	|		Аналитики.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""ПартииПрочихРасходов"",
	|		Т.Регистратор,
	|		Т.Организация,
	|		НЕОПРЕДЕЛЕНО,
	|		8
	|	ИЗ
	|		ВТДвиженияПартииПрочихРасходов КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПартий КАК Аналитики
	|			ПО Т.АналитикаУчетаПартий = Аналитики.Ссылка
	|	ГДЕ
	|		Аналитики.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""ПартииПрочихРасходов"",
	|		Т.Регистратор,
	|		Т.Организация,
	|		НЕОПРЕДЕЛЕНО,
	|		10
	|	ИЗ
	|		ВТДвиженияПартииПрочихРасходов КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПартий КАК Аналитики
	|			ПО Т.АналитикаУчетаПартий = Аналитики.Ссылка
	|	ГДЕ
	|		Т.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""СебестоимостьТоваров"",
	|		Т.Регистратор,
	|		Т.Организация,
	|		Т.ХозяйственнаяОперация,
	|		12
	|	ИЗ
	|		ВТДвиженияСебестоимостьТоваров КАК Т
	|	ГДЕ
	|		Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|		И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Т.КорАналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""СебестоимостьТоваров"",
	|		Возвраты.Регистратор,
	|		Т.Организация,
	|		Т.ХозяйственнаяОперация,
	|		13
	|	ИЗ
	|		ВозвратыТоваровНаДругойСклад КАК Возвраты
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДвиженияСебестоимостьТоваров КАК Т
	|			ПО Т.Регистратор = Возвраты.Регистратор
	|			И Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СторноВозвратНаДругойСклад)
	|	ГДЕ
	|		Т.Регистратор ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""СебестоимостьТоваров"",
	|		Т.Регистратор,
	|		Т.Организация,
	|		НЕОПРЕДЕЛЕНО,
	|		14
	|	ИЗ
	|		ВТДвиженияСебестоимостьТоваров КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Сборка
	|			ПО Сборка.Ссылка = Т.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт КАК Декларация
	|			ПО Декларация.Ссылка = Т.Регистратор
	|	ГДЕ
	|		Т.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И (НЕ Сборка.СборкаПодДеятельность ЕСТЬ NULL
	|			И Сборка.СборкаПодДеятельность <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ИЛИ НЕ Декларация.Ссылка ЕСТЬ NULL)
	|
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		""СебестоимостьТоваров"",
	|		Т.Регистратор,
	|		Т.Организация,
	|		Т.ХозяйственнаяОперация,
	|		ВЫБОР
	|			КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И Правила.ДокументИсточникВПриходе И Т.ДокументИсточник = НЕОПРЕДЕЛЕНО
	|			  ТОГДА 17
	|			КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Правила.ДокументИсточникВРасходе И Т.ДокументИсточник = НЕОПРЕДЕЛЕНО
	|			  ТОГДА 18
	|			  ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТДвиженияСебестоимостьТоваров КАК Т
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПравилаЗаполненияПоляТипЗаписи КАК Правила
	|			ПО ТИПЗНАЧЕНИЯ(Т.Регистратор) = ТИПЗНАЧЕНИЯ(Правила.ПустоеЗначениеРегистратора)
	|				И (Правила.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|					ИЛИ Т.ХозяйственнаяОперация = Правила.ХозяйственнаяОперация)
	|				И (Правила.ПоложительноеКоличество = НЕОПРЕДЕЛЕНО
	|					ИЛИ Т.ПоложительноеКоличество = Правила.ПоложительноеКоличество)
	|	ГДЕ
	|		ВЫБОР
	|			КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И Правила.ДокументИсточникВПриходе И Т.ДокументИсточник = НЕОПРЕДЕЛЕНО
	|			  ТОГДА 17
	|			КОГДА Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Правила.ДокументИсточникВРасходе И Т.ДокументИсточник = НЕОПРЕДЕЛЕНО
	|			  ТОГДА 18
	|			  ИНАЧЕ 0
	|		КОНЕЦ <> 0
	|	) КАК Т
	|
	|ГДЕ
	|	Т.КодОшибки <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвиженияСебестоимостьТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвиженияПартииПрочихРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВозвратыТоваровНаДругойСклад
	|";
	
	// Сформируем описание возможных кодов ошибок в движениях.
	РасшифровкаКодовОшибок = Новый Соответствие;
	РасшифровкаКодовОшибок.Вставить(1, НСтр("ru='Для движения не найдено соответствующее ему правило заполнения типа записи'"));
	РасшифровкаКодовОшибок.Вставить(2, НСтр("ru='Тип записи приходного движения не соответствует правилу'"));
	РасшифровкаКодовОшибок.Вставить(3, НСтр("ru='Тип записи расходного движения не соответствует правилу'"));
	РасшифровкаКодовОшибок.Вставить(4, НСтр("ru='Для организаций с методом оценки ""ФИФО (скользящая)"" не заполнена первичная партия'"));
	РасшифровкаКодовОшибок.Вставить(5, НСтр("ru='Для организаций с методом оценки, отличным от ""ФИФО (скользящая)"", заполнена первичная партия или кор. партия'"));
	РасшифровкаКодовОшибок.Вставить(6, НСтр("ru='Для организаций с методом оценки ""ФИФО (скользящая)"" некорректно заполнена кор. партия в расходном движении'"));
	РасшифровкаКодовОшибок.Вставить(7, НСтр("ru='Тип записи, указанный в движении, не используется при распределении партий'"));
	РасшифровкаКодовОшибок.Вставить(8, НСтр("ru='Аналитика учета партий не содержит вида ценности'"));
	РасшифровкаКодовОшибок.Вставить(9, НСтр("ru='Кор. аналитика учета партий не содержит вида ценности'"));
	РасшифровкаКодовОшибок.Вставить(10, НСтр("ru='Не заполнен вид деятельности НДС при заполненной аналитике учета партий'"));
	РасшифровкаКодовОшибок.Вставить(11, НСтр("ru='Для аналитики учета партий выпуска изделий не заполнен код строки (продукции)'"));
	РасшифровкаКодовОшибок.Вставить(12, НСтр("ru='Не заполнена кор. аналитика учета номенклатуры для операции ""Реализация (товары в пути)""'"));
	РасшифровкаКодовОшибок.Вставить(13, НСтр("ru='Для документов возврата товаров от клиента/организации на склад, отличный от склада реализации, используются неправильные хозяйственные операции и типы записей'"));
	РасшифровкаКодовОшибок.Вставить(14, НСтр("ru='Не заполнен вид деятельности НДС у приходных движений, сформированных документами ""Сборка (разборка) товаров"", ""Таможенная декларация на импорт""'"));
	РасшифровкаКодовОшибок.Вставить(17, НСтр("ru='Заполнение документа-источника в приходном движении не соответствует правилу.'"));
	РасшифровкаКодовОшибок.Вставить(18, НСтр("ru='Заполнение документа-источника в расходном движении не соответствует правилу.'"));
	
	ДополнительныеПоля = Новый Структура("ХозяйственнаяОперация", НСтр("ru = 'операция'"));
	
	УниверсальныеМеханизмыПартийИСебестоимости.ПерепровестиДокументыПоОтдельнымРегистрамНакопления(
		ПараметрыРасчета,
		Запрос,
		РасшифровкаКодовОшибок,
		НСтр("ru='переход на партионный учет версии 2.2'"),
		ДополнительныеПоля);
	
	#КонецОбласти
	

	#Область ВыручкаИСебестоимостьПродаж
	
	// Исправление некорректных движений в регистре "Выручка и себестоимость продаж".
	РасшифровкаКодовОшибок = Новый Соответствие;
	РасшифровкаКодовОшибок.Вставить(1, НСтр("ru='Дублирование расчетной себестоимости в первичных движениях'"));
	
	Запрос.Текст = ПартионныйУчет.ТекстЗапросаДокументыСДублямиДвиженийПоВыручкеИСебестоимостиПродаж();
	
	УниверсальныеМеханизмыПартийИСебестоимости.ПерепровестиДокументыПоОтдельнымРегистрамНакопления(
		ПараметрыРасчета,
		Запрос,
		РасшифровкаКодовОшибок,
		НСтр("ru='ошибка 00-00071689'"));
	
	#КонецОбласти
	
	#Область НекорректнаяАналитикаФинансовогоУчета
	
	// Исправление некорректной пустой аналитики финансового учета в регистре "Себестоимость товаров".
	РасшифровкаКодовОшибок = Новый Соответствие;
	РасшифровкаКодовОшибок.Вставить(1, НСтр("ru='Пустая аналитика финансового учет в первичных движениях имеет значение отличное от НЕОПРЕДЕЛЕНО'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СебестоимостьТоваров"" КАК ИмяРегистра,
	|	Т.Регистратор 			 КАК Ссылка,
	|	Т.Организация 			 КАК Организация,
	|	1 						 КАК КодОшибки
	|ПОМЕСТИТЬ ВТРегистраторыСНекорректнымиДвижениями
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И НЕ Т.РасчетПартий
	|	И НЕ Т.РасчетСебестоимости
	|	И Т.АналитикаФинансовогоУчета В
	|		(ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка),
	|		 ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка),
	|		 ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка),
	|		 ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка))";
	
	УниверсальныеМеханизмыПартийИСебестоимости.ПерепровестиДокументыПоОтдельнымРегистрамНакопления(
		ПараметрыРасчета,
		Запрос,
		РасшифровкаКодовОшибок,
		НСтр("ru='ошибка 00-00098117'"));
	
	#КонецОбласти
	
	#Область ЗаполненКорВидЗапасов
	
	// Исправление заполненных реквизитов "КорВидЗапасов" в регистре "Себестоимость товаров".
	РасшифровкаКодовОшибок = Новый Соответствие;
	РасшифровкаКодовОшибок.Вставить(1, НСтр("ru='Заполнен реквизит ""Кор вид запасов"" при отключенном обособленном учете себестоимости по видам запасов.'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СебестоимостьТоваров"" КАК ИмяРегистра,
	|	Т.Регистратор 			 КАК Ссылка,
	|	Т.Организация 			 КАК Организация,
	|	1 						 КАК КодОшибки
	|ПОМЕСТИТЬ ВТРегистраторыСНекорректнымиДвижениями
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|ГДЕ
	|	НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|	И Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И НЕ Т.РасчетПартий
	|	И НЕ Т.РасчетСебестоимости
	|	И Т.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|	И Т.КорВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|";
	
	УниверсальныеМеханизмыПартийИСебестоимости.ПерепровестиДокументыПоОтдельнымРегистрамНакопления(
		ПараметрыРасчета,
		Запрос,
		РасшифровкаКодовОшибок,
		НСтр("ru='ошибка 00-00109617'"));
	
	#КонецОбласти
	
	#Область СуммыВДвижениях
	
	// Проверка соответствия заполненности суммы упр./регл. значениям функциональных опций.
	РасшифровкаКодовОшибок = Новый Соответствие;
	РасшифровкаКодовОшибок.Вставить(1, НСтр("ru='Заполнение упр. сумм в движениях не соответствует значению функциональной опции ""ВестиУправленческийУчетОрганизаций""'"));
	РасшифровкаКодовОшибок.Вставить(2, НСтр("ru='Заполнение регл. сумм в движениях не соответствует значению функциональной опции ""ИспользоватьУчетПрочихДоходовРасходовРегл""'"));
	
	#Область ИсключаемыеТипыДокументов
	
	ТипыРегистраторов = Новый Массив;
	
	Запрос.УстановитьПараметр("ТипыДокументовОСиНМА", ТипыРегистраторов);
	
	ТипыРегистраторов = Новый Массив;
	ТипыРегистраторов.Добавить(Тип("ДокументСсылка.РаспределениеНДС"));
	ТипыРегистраторов.Добавить(Тип("ДокументСсылка.РаспределениеДоходовИРасходовПоНаправлениямДеятельности"));
	ТипыРегистраторов.Добавить(Тип("ДокументСсылка.РаспределениеРасходовБудущихПериодов"));
	ТипыРегистраторов.Добавить(Тип("ДокументСсылка.РасчетКурсовыхРазниц"));
	ТипыРегистраторов.Добавить(Тип("ДокументСсылка.ПрочиеДоходыРасходы"));
	
	Запрос.УстановитьПараметр("ТипыРегламентныхДокументов", ТипыРегистраторов);
	
	#КонецОбласти
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СебестоимостьТоваров"" КАК ИмяРегистра,
	|	Т.Регистратор 			 КАК Ссылка,
	|	Т.Организация 			 КАК Организация,
	|	1 						 КАК КодОшибки
	|ПОМЕСТИТЬ ВТРегистраторыСНекорректнымиДвижениями
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И НЕ Т.РасчетПартий
	|	И НЕ Т.РасчетСебестоимости
	|	И Т.ТипЗаписи В (&НепересчитываемыеТипыЗаписей)
	|	И (Т.Стоимость <> 0	ИЛИ Т.ДопРасходы <> 0 ИЛИ Т.Трудозатраты <> 0
	|		ИЛИ Т.ПостатейныеПостоянныеСНДС <> 0 ИЛИ Т.ПостатейныеПеременныеСНДС <> 0)
	|	И НЕ Т.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|	И ((&УправленческийУчетОрганизаций
	|		И Т.СтоимостьУпр = 0 И Т.ДопРасходыУпр = 0 И Т.ТрудозатратыУпр = 0
	|		И Т.ПостатейныеПостоянныеУпр = 0 И Т.ПостатейныеПеременныеУпр = 0)
	|	ИЛИ (НЕ &УправленческийУчетОрганизаций
	|		И (Т.СтоимостьУпр <> 0 ИЛИ Т.ДопРасходыУпр <> 0 ИЛИ Т.ТрудозатратыУпр <> 0
	|		ИЛИ Т.ПостатейныеПостоянныеУпр <> 0 ИЛИ Т.ПостатейныеПеременныеУпр <> 0)))
	|	И НЕ (Т.СтоимостьБезНДС = 0	И Т.ДопРасходы <> 0 И Т.ДопРасходыУпр = 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ПрочиеДоходы"" 		 КАК ИмяРегистра,
	|	Т.Регистратор 			 КАК Ссылка,
	|	Т.Организация 			 КАК Организация,
	|	ВЫБОР
	|		КОГДА Т.Сумма <> 0
	|			И Т.СуммаРегл = 0
	|			И &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			И НЕ ТИПЗНАЧЕНИЯ(Т.Регистратор) В (&ТипыДокументовОСиНМА)
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ					 КАК КодОшибки
	|ИЗ
	|	РегистрНакопления.ПрочиеДоходы КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И НЕ Т.РасчетСебестоимости
	|	И НЕ ТИПЗНАЧЕНИЯ(Т.Регистратор) В (&ТипыРегламентныхДокументов)
	|	И ((&УправленческийУчетОрганизаций
	|			И Т.СуммаУпр = 0
	|			И Т.Сумма <> 0
	|			И НЕ ТИПЗНАЧЕНИЯ(Т.Регистратор) В (&ТипыДокументовОСиНМА))
	|		ИЛИ (НЕ &УправленческийУчетОрганизаций
	|			И Т.СуммаУпр <> 0)
	|		ИЛИ (Т.Сумма <> 0
	|			И Т.СуммаРегл = 0
	|			И &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			И НЕ ТИПЗНАЧЕНИЯ(Т.Регистратор) В (&ТипыДокументовОСиНМА)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ПрочиеРасходы"" 		 КАК ИмяРегистра,
	|	Т.Регистратор 			 КАК Ссылка,
	|	Т.Организация 			 КАК Организация,
	|	1 						 КАК КодОшибки
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И НЕ Т.РасчетПартий
	|	И НЕ Т.РасчетСебестоимости
	|	И НЕ ТИПЗНАЧЕНИЯ(Т.Регистратор) В (&ТипыРегламентныхДокументов)
	|	И ((&УправленческийУчетОрганизаций И Т.СуммаУпр = 0 И Т.Сумма <> 0
	|			И НЕ ТИПЗНАЧЕНИЯ(Т.Регистратор) В (&ТипыДокументовОСиНМА))
	|		ИЛИ (НЕ &УправленческийУчетОрганизаций И Т.СуммаУпр <> 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ПартииПрочихРасходов"" КАК ИмяРегистра,
	|	Т.Регистратор 			 КАК Ссылка,
	|	Т.Организация 			 КАК Организация,
	|	1 						 КАК КодОшибки
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И НЕ Т.РасчетПартий
	|	И НЕ ТИПЗНАЧЕНИЯ(Т.Регистратор) В (&ТипыРегламентныхДокументов)
	|	И ((&УправленческийУчетОрганизаций И Т.Стоимость <> 0 И Т.НДСРегл <> 0 И Т.НДСУпр = 0
	|			И НЕ ТИПЗНАЧЕНИЯ(Т.Регистратор) В (&ТипыДокументовОСиНМА))
	|		ИЛИ (НЕ &УправленческийУчетОрганизаций И Т.НДСУпр <> 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ВыручкаИСебестоимостьПродаж"" КАК ИмяРегистра,
	|	Т.Регистратор 			        КАК Ссылка,
	|	Аналитика.Организация 			КАК Организация,
	|	1 						        КАК КодОшибки
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК Аналитика
	|		ПО Аналитика.Ссылка = Т.АналитикаУчетаПоПартнерам
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Аналитика.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И НЕ Т.РасчетПартий
	|	И НЕ Т.РасчетСебестоимости
	|	И НЕ ТИПЗНАЧЕНИЯ(Т.Регистратор) В (&ТипыРегламентныхДокументов)
	|	И ((&УправленческийУчетОрганизаций И Т.Стоимость <> 0 И Т.СтоимостьУпр = 0)
	|		ИЛИ (НЕ &УправленческийУчетОрганизаций И Т.СтоимостьУпр <> 0))
	|";
	
	УниверсальныеМеханизмыПартийИСебестоимости.ПерепровестиДокументыПоОтдельнымРегистрамНакопления(
		ПараметрыРасчета,
		Запрос,
		РасшифровкаКодовОшибок,
		НСтр("ru='некорректное заполнение сумм упр. учета'"));
	
	#КонецОбласти
	
	#Область НДСПредъявленный
	
	// Исправление некорректного НДСУпр в регистре НДСПредъявленный.
	РасшифровкаКодовОшибок = Новый Соответствие;
	РасшифровкаКодовОшибок.Вставить(1, НСтр("ru='Различается заполненность ресурсов НДС (упр.) и НДС (регл.) в регистре НДСПредъявленный'"));
	РасшифровкаКодовОшибок.Вставить(2, НСтр("ru='При отключенном управленческом учете заполнен ресурс НДС (упр.) в регистре НДСПредъявленный'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""НДСПредъявленный"" 	 КАК ИмяРегистра,
	|	Т.Регистратор 			 КАК Ссылка,
	|	Т.Организация 			 КАК Организация,
	|	1 						 КАК КодОшибки
	|ПОМЕСТИТЬ ВТРегистраторыСНекорректнымиДвижениями
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И НЕ Т.РегламентнаяОперация
	|	И &УправленческийУчетОрганизаций
	|	И ((Т.НДС = 0 И Т.НДСУпр <> 0) ИЛИ (Т.НДС <> 0 И Т.НДСУпр = 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""НДСПредъявленный"" 	 КАК ИмяРегистра,
	|	Т.Регистратор 			 КАК Ссылка,
	|	Т.Организация 			 КАК Организация,
	|	2 						 КАК КодОшибки
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И НЕ Т.РегламентнаяОперация
	|	И НЕ &УправленческийУчетОрганизаций
	|	И Т.НДСУпр <> 0";
	
	УниверсальныеМеханизмыПартийИСебестоимости.ПерепровестиДокументыПоОтдельнымРегистрамНакопления(
		ПараметрыРасчета,
		Запрос,
		РасшифровкаКодовОшибок,
		НСтр("ru='некорректное заполнение НДС (упр.)'"));
	
	#КонецОбласти
	
КонецПроцедуры


// При расчете в партионном учете версии 2.2 очищает начальные остатки и движения партионного учета версии 2.1.
//
Процедура ОчиститьНеиспользуемыеДанныеПартионногоУчетаВерсии21(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоЭтапаРасчета(ПараметрыРасчета, "ОчиститьНеиспользуемыеДанныеПартионногоУчетаВерсии21");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	// Очистим остатки партионных регистров версии 2.1, которые больше не используются в партионном учете версии 2.2.
	Если ПараметрыРасчета.ФормироватьНачальныеОстаткиПартий22 Тогда
		
		ШаблонТекстаЗапроса =
		"ВЫБРАТЬ
		|	ДокументыВводаОстатков.Ссылка КАК Регистратор,
		|	%2,
		|	%5
		|ПОМЕСТИТЬ ВТОстаткиПартий
		|ИЗ
		|	РегистрНакопления.%1.Остатки(&ГраницаКонецПредыдущегоПериода, Организация В (&МассивОрганизаций)) КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыВводаОстатков
		|		ПО Т.Организация = ДокументыВводаОстатков.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.Регистратор
		|ПОМЕСТИТЬ ВТИзменившиесяДокументы
		|ИЗ
		|	(ВЫБРАТЬ
		|		Т.Регистратор КАК Регистратор,
		|		%2,
		|		%3
		|	ИЗ
		|		ВТОстаткиПартий КАК Т
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Т.Регистратор,
		|		%2,
		|		%4
		|	ИЗ
		|		РегистрНакопления.%1 КАК Т
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыВводаОстатков
		|			ПО Т.Регистратор = ДокументыВводаОстатков.Ссылка
		|	ГДЕ
		|		Т.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров) КАК Т
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Регистратор,
		|	%2
		|
		|ИМЕЮЩИЕ
		|	%6
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&НачалоПериода КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Т.Регистратор КАК Регистратор,
		|	%2,
		|	%3
		|ИЗ
		|	ВТОстаткиПартий КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИзменившиесяДокументы КАК ВТИзменившиесяДокументы
		|		ПО Т.Регистратор = ВТИзменившиесяДокументы.Регистратор
		|
		|УПОРЯДОЧИТЬ ПО
		|	Т.Регистратор,
		|	%2
		|";
		
		Для Каждого КлючИЗначение Из НеиспользуемыеДанныеМеханизмаВерсии21() Цикл
			
			// Сформируем текст запроса для выборки остатков
			МетаданныеРегистра = КлючИЗначение.Ключ;
			ИмяРегистра = МетаданныеРегистра.Имя; // %1
			
			ТекстИзмеренияРегистра = "";
			ТекстРесурсыРегистра = "";
			ТекстРесурсыРегистраСМинусом = "";
			ТекстОстаткиРесурсовРегистра = "";
			ТекстОтборРесурсыРегистра = "";
			
			Для Каждого ПолеРегистра Из МетаданныеРегистра.Измерения Цикл
				ТекстИзмеренияРегистра = ТекстИзмеренияРегистра + ?(ТекстИзмеренияРегистра = "", "", ",
					|	") + "Т." + ПолеРегистра.Имя;
			КонецЦикла;
			
			Для Каждого ПолеРегистра Из МетаданныеРегистра.Ресурсы Цикл
				ТекстРесурсыРегистра = ТекстРесурсыРегистра + ?(ТекстРесурсыРегистра = "", "", ",
					|	") + "Т." + ПолеРегистра.Имя;
				ТекстРесурсыРегистраСМинусом = ТекстРесурсыРегистраСМинусом + ?(ТекстРесурсыРегистраСМинусом = "", "", ",
					|	") + "-Т." + ПолеРегистра.Имя;
				ТекстОстаткиРесурсовРегистра = ТекстОстаткиРесурсовРегистра + ?(ТекстОстаткиРесурсовРегистра = "", "", ",
					|	") + "Т." + ПолеРегистра.Имя + "Остаток КАК " + ПолеРегистра.Имя;
				ТекстОтборРесурсыРегистра = ТекстОтборРесурсыРегистра + ?(ТекстОтборРесурсыРегистра = "", "", "
					|	ИЛИ ") + "СУММА(Т." + ПолеРегистра.Имя + ") <> 0";
			КонецЦикла;

			Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаЗапроса,
				ИмяРегистра, // 1
				ТекстИзмеренияРегистра, // 2
				ТекстРесурсыРегистра, // 3
				ТекстРесурсыРегистраСМинусом, // 4
				ТекстОстаткиРесурсовРегистра, // 5
				ТекстОтборРесурсыРегистра); // 6
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Если НЕ РезультатЗапроса.Пустой() Тогда
				
				// Очистим остатки регистра
				Выборка = РезультатЗапроса.Выбрать();
				
				ЗаписатьДвиженияПоРегистру(
					ПараметрыРасчета,
					Выборка,
					РегистрыНакопления[ИмяРегистра]);
				
				ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
					ПараметрыРасчета,
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Сформировано движений сторнирования остатков по регистру %1: %2'"),
						ИмяРегистра,
						ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Количество())));
				
			КонецЕсли;
			
			УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
				"ВТОстаткиПартий, ВТИзменившиесяДокументы");
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Очистим движения партионных регистров версии 2.1, которые больше не используются в партионном учете версии 2.2.
	ШаблонТекстаЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор
	|ИЗ
	|	РегистрНакопления.%1 КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В(&МассивОрганизаций)
	|	И ((&НачалоПериода = &ДатаПереходаНаПартионныйУчетВерсии22
	|		И НЕ Т.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров)
	|	  ИЛИ (&НачалоПериода > &ДатаПереходаНаПартионныйУчетВерсии22))";
	
	Для Каждого КлючИЗначение Из НеиспользуемыеДанныеМеханизмаВерсии21() Цикл
		
		ИмяРегистра = КлючИЗначение.Ключ.Имя;
		
		Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаЗапроса, ИмяРегистра);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() > 0 Тогда
			
			// Очистим движения
			ЗаписатьДвиженияПоРегистру(
				ПараметрыРасчета,
				Выборка,
				РегистрыНакопления[ИмяРегистра]);
			
			ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
				ПараметрыРасчета,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Очищено устаревших движений по регистру %1: %2'"),
					ИмяРегистра,
					ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Количество())));
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область ПроцедурыЭтапа8_ЗаполнениеПартийВРегистреСебестоимостьТоваров

// Инициализация данных

Функция ПоляПотребленийПартииТоваров(ПараметрыРасчета)
	
	Возврат "АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета";
	
КонецФункции

Функция ОписаниеЦепочекПартийТоваров(ПараметрыРасчета)
	
	// Важно: особенности использования типов записи в движениях, формируемых именно этим этапом.
	// Если на данном этапе сформирована запись с типом записи, используемым в макете регистра себестоимости,
	// (см. УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ЭтоТолькоРасчетныйТипЗаписи())
	// то считается, что это "первичная" запись, в которой просто дозаполнены поля партионной идентификации.
	//	- признак "РасчетПартий" для такой записи устанавливается в значение Ложь.
	// Если сформирована запись с любым другим типом записи, то считается что это "расчетная" запись.
	//	- признак "РасчетПартий" для такой записи устанавливается в значение Истина.
	// Также можно "принудительно" установить РасчетПартий в значение Истина - с помощью поля запроса ЭтоТочноРасчетноеДвижение.
	
	ОписаниеЦепочек = Новый Соответствие;
	ПоляПотреблений	= ПоляПотребленийПартииТоваров(ПараметрыРасчета);
	
	// Потребление <- (Остаток, Партия, Перемещение, ПеремещениеОбособленно, Сторно, ВозвратПрошлыхПериодов, ПеремещениеУпр)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.Потребление, 		ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.Остаток,				ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.Партия,				ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.Перемещение, 		ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.Сторно, 				ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.ВозвратПрошлыхПериодов, ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно, ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.ПеремещениеУпр,      ПоляПотреблений);	
		
	// ПотреблениеАвто <- (Остаток, Партия, Перемещение, ПеремещениеОбособленно, Сторно)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ПотреблениеАвто, 		ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		Перечисления.ТипыЗаписейПартий.Остаток,				ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		Перечисления.ТипыЗаписейПартий.Партия,				ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		Перечисления.ТипыЗаписейПартий.Перемещение, 		ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		Перечисления.ТипыЗаписейПартий.Сторно, 				ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно, ПоляПотреблений);
		
	// КорректировкаПриобретения <- (Остаток, Партия)	
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.КорректировкаПриобретения, ПоляПотреблений + ", Партия");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.КорректировкаПриобретения,
		Перечисления.ТипыЗаписейПартий.Остаток, 				 ПоляПотреблений + ", Партия");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.КорректировкаПриобретения,
		Перечисления.ТипыЗаписейПартий.Партия, 				 	 ПоляПотреблений + ", Партия");	
		
	// ДопРасходыБезПартии <- (Импорт)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ДопРасходыБезПартии,	ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ДопРасходыБезПартии,
		Перечисления.ТипыЗаписейПартий.Импорт, 				ПоляПотреблений);
	
	// ДопРасходыСПартией <- (Импорт)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ДопРасходыСПартией,	ПоляПотреблений + ", ДокументИсточник");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ДопРасходыСПартией,
		Перечисления.ТипыЗаписейПартий.Импорт, 				ПоляПотреблений + ", Регистратор");
	
	// Сторно <- (Потребление, ПотреблениеАвто)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.Сторно, 				"ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Сторно,
		Перечисления.ТипыЗаписейПартий.Потребление, 		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Сторно,
		Перечисления.ТипыЗаписейПартий.ПотреблениеАвто, 		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
		
	// СторноВозвратНаДругойСклад <- (Потребление, ПотреблениеАвто)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад,	"ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад,
		Перечисления.ТипыЗаписейПартий.Потребление, 				"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад,
		Перечисления.ТипыЗаписейПартий.ПотреблениеАвто, 			"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
		
	// ВозвратНаДругойСклад <- (СторноВозвратНаДругойСклад)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ВозвратНаДругойСклад,		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ВозвратНаДругойСклад,
		Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад,	"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	
	// Перемещение <- (Потребление, ПотреблениеПроизводство, ПотреблениеАвто, ВозвратНаДругойСклад)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.Перемещение, 			"Регистратор, РазделУчета, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Перемещение,
		Перечисления.ТипыЗаписейПартий.Потребление, 			"Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Перемещение,
		Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство, "Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Перемещение,
		Перечисления.ТипыЗаписейПартий.ПотреблениеАвто, 		"Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Перемещение,
		Перечисления.ТипыЗаписейПартий.ВозвратНаДругойСклад, 	"Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, Организация");
		
	// ПеремещениеОбособленно <- (Потребление, ПотреблениеПроизводство, ПотреблениеАвто, ВозвратНаДругойСклад)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно, 	"Регистратор, РазделУчета, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно,
		Перечисления.ТипыЗаписейПартий.Потребление, 			"Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, КорОрганизация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно,
		Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство, "Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, КорОрганизация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно,
		Перечисления.ТипыЗаписейПартий.ПотреблениеАвто, 		"Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, КорОрганизация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно,
		Перечисления.ТипыЗаписейПартий.ВозвратНаДругойСклад, 	"Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, КорОрганизация");
		
	// ПеремещениеАвто <- (Потребление, ПотреблениеПроизводство, ПотреблениеАвто, Распределение)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ПеремещениеАвто, 		"Регистратор, РазделУчета, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеАвто,
		Перечисления.ТипыЗаписейПартий.Потребление, 			"Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеАвто,
		Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство, "Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеАвто,
		Перечисления.ТипыЗаписейПартий.ПотреблениеАвто, 		"Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеАвто,
		Перечисления.ТипыЗаписейПартий.Распределение, 			"Регистратор, КорРазделУчета, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
		
	// ПеремещениеУпр <- (Потребление)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ПеремещениеУпр, 	"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеУпр,
		Перечисления.ТипыЗаписейПартий.Потребление, 	"Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, КорОрганизация");		
	
	// Распределение <- (Перемещение, ПеремещениеОбособленно, Остаток, Партия)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.Распределение, 		"АналитикаУчетаНоменклатуры, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Распределение,
		Перечисления.ТипыЗаписейПартий.Перемещение, 		"АналитикаУчетаНоменклатуры, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Распределение,
		Перечисления.ТипыЗаписейПартий.Остаток,				"АналитикаУчетаНоменклатуры, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Распределение,
		Перечисления.ТипыЗаписейПартий.Партия,				"АналитикаУчетаНоменклатуры, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Распределение,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно, "АналитикаУчетаНоменклатуры, Организация");
		
	// СписанияНаВыпуск <- (Перемещение, ПеремещениеОбособленно, ПеремещениеАвто, Партия, Остаток, ОстатокНЗП)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск, 	"АналитикаУчетаНоменклатуры, Организация, ЗаказНаПроизводство");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		Перечисления.ТипыЗаписейПартий.Перемещение, 		"АналитикаУчетаНоменклатуры, Организация, ЗаказНаПроизводство");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		Перечисления.ТипыЗаписейПартий.ПеремещениеАвто, 	"АналитикаУчетаНоменклатуры, Организация, ЗаказНаПроизводство");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		Перечисления.ТипыЗаписейПартий.Партия,				"АналитикаУчетаНоменклатуры, Организация, ЗаказНаПроизводство");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		Перечисления.ТипыЗаписейПартий.ОстатокНЗП,			"АналитикаУчетаНоменклатуры, Организация, ЗаказНаПроизводство");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		Перечисления.ТипыЗаписейПартий.Остаток,				"АналитикаУчетаНоменклатуры, Организация, ЗаказНаПроизводство");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно, "АналитикаУчетаНоменклатуры, Организация, ЗаказНаПроизводство");
		
	// Выпуск <- (СписанияНаВыпуск, Трудозатраты)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.Выпуск, 				"Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Выпуск,
		Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск, 	"Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Выпуск,
		Перечисления.ТипыЗаписейПартий.Трудозатраты, 		"Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");	
		
	// ПотреблениеПроизводство <- (Партия, Перемещение, ПеремещениеОбособленно, Остаток)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство, "АналитикаУчетаНоменклатуры, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство,
		Перечисления.ТипыЗаписейПартий.Партия, 				"АналитикаУчетаНоменклатуры, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство,
		Перечисления.ТипыЗаписейПартий.Перемещение, 		"АналитикаУчетаНоменклатуры, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство,
		Перечисления.ТипыЗаписейПартий.Остаток,				"АналитикаУчетаНоменклатуры, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно, "АналитикаУчетаНоменклатуры, Организация");
		
	// СписаниеНаРасходы <- (Партия)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.СписаниеНаРасходы,	"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписаниеНаРасходы,
		Перечисления.ТипыЗаписейПартий.Партия, 				"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
		
	// ВозвратПрошлыхПериодов <- (Прошлое)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ВозвратПрошлыхПериодов, "ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ВозвратПрошлыхПериодов,
		Перечисления.ТипыЗаписейПартий.Прошлое, 				"ДокументИсточник, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	
	// Дополнение <- (<без источников - для формирования записей по данным запроса>)
	ДобавитьОписаниеДополнения(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Дополнение);
	
	Возврат ОписаниеЦепочек;
	
КонецФункции

Функция ОписаниеДвиженийПартийТоваров(ПараметрыРасчета)
	
	КолонкиТаблицыРаспределения = ТаблицаДляРаспределенияПартийТоваров(ПараметрыРасчета).Колонки;
	
	ОписаниеДвижений = ОписаниеДвижений(
		"ПартииСебестоимостиТоваров", // Контекст
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя, // ИмяРегистра
		ПереченьПолей(КолонкиТаблицыРаспределения), // ПоляРасчета
		ПоляПотребленийПартииТоваров(ПараметрыРасчета), // КлючиСравнения
		"Знаменатель, Количество, Стоимость, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС,
			|СтоимостьРегл, ПостояннаяРазница, ВременнаяРазница,
			|СтоимостьЗабалансовая, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
			|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС,
			|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр,
			|СтоимостьЗабалансоваяРегл, ДопРасходыРегл, ТрудозатратыРегл,
			|ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл", // Показатели
		"Количество", // БазисПрихода
		"Количество", // БазисРасхода
		"ДокументИсточник", // КлючРасхода
		"Период", // ПолеПорядка
		"Партия, ВидДеятельностиНДС, АналитикаФинансовогоУчета", // ПоляСортировки
		Истина); // СортировкаПоУсловию
		
	ОписаниеДвижений.Вставить("ЕстьСторно", Истина);
	
	Возврат ОписаниеДвижений;
	
КонецФункции

Функция ОписаниеНезаписываемыхПартийТоваров(ПараметрыРасчета)
	
	НезаписываемыеТипыЗаписей = Новый Соответствие;
	Для Каждого ТекЭлемент Из ПараметрыРасчета.НепересчитываемыеТипыЗаписей Цикл
		НезаписываемыеТипыЗаписей.Вставить(ТекЭлемент, Истина);
	КонецЦикла;
	
	НезаписываемыеТипыЗаписей.Вставить(Перечисления.ТипыЗаписейПартий.Импорт, Истина);
	НезаписываемыеТипыЗаписей.Вставить(Перечисления.ТипыЗаписейПартий.Прошлое, Истина);
	НезаписываемыеТипыЗаписей.Вставить(Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск, Истина);
	НезаписываемыеТипыЗаписей.Вставить(Перечисления.ТипыЗаписейПартий.Трудозатраты, Истина);
	
	НезаписываемыеРазделы = Новый Соответствие;
	НезаписываемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка(), Истина);
	
	Возврат ОписаниеНезаписываемыхДанных(Истина, НезаписываемыеТипыЗаписей, НезаписываемыеРазделы);
	
КонецФункции

Функция ТаблицаДляРаспределенияПартийТоваров(ПараметрыРасчета)
	
	Возврат ТаблицаДляРаспределенияПартий(ПараметрыРасчета,	ТекстОписаниеДанныхДляПартийТоваров());
	
КонецФункции

// Выборка данных

Процедура ПолучитьДанныеДляПартийТоваров(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ""
		// подготовка временных таблиц
		+ ТекстИнициализацияПартийТоваров() // вт АналитикаДавальца, Декларации, ПрошлыеРеализации, ПродукцияДавальца, ЕстьДекларации, Выпуски
		+ ТекстРазделениеЗапросов()
		// выборка данных
		+ ТекстОписаниеДанныхДляПартийТоваров() // вт Данные
		+ ТекстОбъединениеЗапросов() + ТекстНачальныеОстаткиНЗП()
		+ ТекстОбъединениеЗапросов() + ТекстНачальныеОстаткиПартийТоваров()
		+ ТекстОбъединениеЗапросов() + ТекстТекущиеОборотыПартийТоваров()
		+ ТекстОбъединениеЗапросов() + ТекстНачальныеОстаткиЗакупокПоИмпорту()
		+ ТекстОбъединениеЗапросов() + ТекстТекущиеЗакупкиПоИмпорту()
		+ ТекстОбъединениеЗапросов() + ТекстТекущиеДопРасходыБезПартииКРаспределению() // использует Декларации
		+ ТекстОбъединениеЗапросов() + ТекстТекущиеДопРасходыСПартиейКРаспределению() // использует Декларации
		+ ТекстОбъединениеЗапросов() + ТекстРеализацииПрошлыхМесяцев() // использует ПрошлыеРеализации 
		+ ТекстОбъединениеЗапросов() + ТекстРеализацииПрошлыхМесяцев_ПУ21() // использует ПрошлыеРеализации 
		+ "";
	
	ВыбиратьДанныеДляРасчетаВоВременнуюТаблицу(Запрос);
	
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "Данные");
	
	Запрос.Выполнить();
	
	// Нумерация строк ВТ Данные
	ПараметрыНумерации = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		"АналитикаУчетаНоменклатуры", // разделитель
		"Знаменатель, Количество,
			|Стоимость, СтоимостьБезНДС, СтоимостьЗабалансовая, ДопРасходы, ДопРасходыБезНДС, Трудозатраты,
			|ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
			|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС,
			|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр,
			|СтоимостьРегл, СтоимостьЗабалансоваяРегл, ПостояннаяРазница, ВременнаяРазница,
			|ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл", // ресурсы
		"Номенклатура УБЫВ, Приоритет ВОЗР, Период, Организация, ВидЗапасов,
			|Партия, АналитикаУчетаПартий, Регистратор, ВидДвижения УБЫВ"); // порядок
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"Данные");
		
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"АналитикаДавальца, Декларации, ПрошлыеРеализации, ОстаткиИмпорт, ЕстьДекларации,
		|НеотфактурованныеПоставки, ВтТоварыКОформлениюТаможенныхДеклараций
		|");
	
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... описания данных

Функция ТекстОписаниеДанныхДляПартийТоваров() Экспорт
	Возврат 
		"ВЫБРАТЬ ПЕРВЫЕ 0 // 76 ПОЛЕЙ
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(80)) 					КАК ЗапросИсточник,
		|	Т.ТипЗаписи										КАК ТипЗаписи,
		|	ЛОЖЬ											КАК ЭтоТочноРасчетноеДвижение,
		|	ЛОЖЬ											КАК Сторно,
		|	0 												КАК Приоритет,
		|	0 												КАК Знаменатель,
		|	ЛОЖЬ 											КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)  КАК Номенклатура,
		|	Т.АналитикаУчетаПартий.НалогообложениеНДС 		КАК НалогообложениеПартии,
		|	Т.Период										КАК Период,
		|	Т.Период										КАК ПериодПоступления,
		|	Т.Регистратор									КАК Регистратор,
		|	Т.ВидДвижения 									КАК ВидДвижения,
		|
		|	Т.АналитикаУчетаНоменклатуры,
		|	Т.РазделУчета,
		|	Т.ВидЗапасов,
		|	Т.Организация,
		|	Т.Партия,
		|	Т.Партия КАК ЗаказНаПроизводство,
		|	Т.АналитикаУчетаПартий,
		|	Т.АналитикаФинансовогоУчета,
		|	Т.ВидДеятельностиНДС,
		|
		|	Т.Количество,
		|	Т.Стоимость,
		|	Т.СтоимостьБезНДС,
		|	Т.СтоимостьЗабалансовая,
		|	Т.СтоимостьУпр,
		|	Т.ДопРасходыУпр,
		|	Т.ПостатейныеПеременныеСНДС,
		|	Т.ПостатейныеПеременныеБезНДС,
		|	Т.ТрудозатратыУпр,
		|	Т.ПостатейныеПостоянныеУпр,
		|	Т.ПостатейныеПеременныеУпр,
		|	Т.ДопРасходы,
		|	Т.ДопРасходыБезНДС,
		|	Т.Трудозатраты,
		|	Т.ПостатейныеПостоянныеСНДС,
		|	Т.ПостатейныеПостоянныеБезНДС,
		|	Т.СтоимостьРегл,
		|	Т.СтоимостьЗабалансоваяРегл,
		|	Т.ПостояннаяРазница,
		|	Т.ВременнаяРазница,
		|	Т.ДопРасходыРегл,
		|	Т.ТрудозатратыРегл,
		|	Т.ПостатейныеПостоянныеРегл,
		|	Т.ПостатейныеПеременныеРегл,
		|
		|	Т.ХозяйственнаяОперация,
		|	Т.КорАналитикаУчетаНоменклатуры,
		|	Т.КорРазделУчета,
		|	Т.КорВидЗапасов,
		|	Т.КорОрганизация,
		|	Т.КорСтоимость,
		|	Т.АналитикаУчетаПоПартнерам,
		|	Т.ЗаказКлиента,
		|	Т.Подразделение,
		|	Т.АналитикаРасходов,
		|	Т.СтатьяРасходовСписания,
		|	Т.СтатьяДоходов,
		|	Т.АналитикаДоходов,
		|	Т.ПериодПродажи,
		|	Т.СтатьяАктивовПассивов,
		|	Т.АналитикаАктивовПассивов,
		|	Т.ДокументДвижения,
		|	Т.ИдентификаторСтроки,
		|	Т.ГруппаПродукции,
		|	Т.КорПартия,
		|	Т.КорАналитикаУчетаПартий,
		|	Т.КорАналитикаФинансовогоУчета,
		|	Т.КорВидДеятельностиНДС,
		|	Т.НДСУпр,
		|	Т.НДСРегл,
		|	Т.СтатьяКалькуляции,
		|	Т.ДокументИсточник,
		|	Т.АналитикаУчетаПартийПроизводства,
		|	Т.КорНаправлениеДеятельности,
		|	Т.КодСтроки
		|//ВоВременнуюТаблицу
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК Т
		|";
КонецФункции

// ... формирования временные таблиц

Функция ТекстИнициализацияПартийТоваров() // вт АналитикаДавальца, Декларации, ПрошлыеРеализации, ПродукцияДавальца, ЕстьДекларации, Выпуски, НеотфактурованныеПоставки
	Возврат "
		|ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК АналитикаУчетаПоПартнерам
		|ПОМЕСТИТЬ АналитикаДавальца
		|
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Ссылка,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА Строки.ВидЗапасов
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КОНЕЦ) КАК ВидЗапасов,
		|	СУММА(Строки.Количество) КАК Количество
		|ПОМЕСТИТЬ
		|	Декларации
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ДД.Ссылка,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА Строки.ВидЗапасов
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КОНЕЦ)
		|;
		|ВЫБРАТЬ
		|	ДД.Ссылка,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	Строки.ДокументПоступления,
		|	(ВЫБОР
		|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА Строки.ВидЗапасов
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КОНЕЦ) КАК ВидЗапасов,
		|	СУММА(Строки.Количество) КАК Количество
		|ПОМЕСТИТЬ
		|	ДекларацииПоПоступлениям
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И Строки.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Ссылка,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	Строки.ДокументПоступления,
		|	(ВЫБОР
		|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА Строки.ВидЗапасов
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КОНЕЦ)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументИсточник КАК ДокументРеализации,
		|	ДД.ДокументИсточник КАК ДокументИсточник,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК ВидЗапасов
		|ПОМЕСТИТЬ
		|	ПрошлыеРеализации
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
		|	И ДД.Количество > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КорректировкаРеализации.Ссылка КАК ДокументРеализации,
		|	КорректировкаРеализации.ДокументОснование КАК ДокументИсточник,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК ВидЗапасов
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|		ПО КорректировкаРеализации.ДокументОснование = ДД.ДокументИсточник
		|			И НЕ КорректировкаРеализации.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
		|	И ДД.Количество > 0
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ИСТИНА КАК ДокументПоступленияЗаполнен
		|ПОМЕСТИТЬ ВтТоварыКОформлениюТаможенныхДеклараций
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюТаможенныхДеклараций КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ДД.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Остатки.Партия КАК Партия,
		|	НАЧАЛОПЕРИОДА(Импорт.Дата, МЕСЯЦ) КАК Дата
		|ПОМЕСТИТЬ ОстаткиИмпорт
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаКонецПредыдущегоПериода,
		|		Организация В (&МассивОрганизаций)
		|	) КАК Остатки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Импорт
		|		ПО Импорт.Ссылка = Остатки.Партия
		|		И Импорт.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
		|ИНДЕКСИРОВАТЬ ПО
		|	Партия
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Партия КАК Партия,
		|	МАКСИМУМ(ДД.Дата) КАК Дата
		|ПОМЕСТИТЬ ЕстьДекларации
		|ИЗ
		|	(ВЫБРАТЬ
		|		Партии.Партия КАК Партия,
		|		МАКСИМУМ(Декларации.Дата) КАК Дата
		|	ИЗ
		|		Документ.ТаможеннаяДекларацияИмпорт КАК Декларации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Партии
		|			ПО Партии.Регистратор = Декларации.Ссылка
		|	ГДЕ
		|		Декларации.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|		И Декларации.Проведен
		|		И Партии.ТипЗаписи В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией))
		|	СГРУППИРОВАТЬ ПО
		|		Партии.Партия
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Остатки.Партия КАК Партия,
		|		МАКСИМУМ(Декларации.Дата) КАК Дата
		|	ИЗ
		|		ОстаткиИмпорт КАК Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Партии
		|			ПО Партии.Партия = Остатки.Партия
		|			И Партии.Период МЕЖДУ Остатки.Дата И &НачалоПериода
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт КАК Декларации
		|			ПО Партии.Регистратор = Декларации.Ссылка
		|	ГДЕ
		|		Партии.ТипЗаписи В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией))
		|	СГРУППИРОВАТЬ ПО
		|		Остатки.Партия
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Партии.ДокументПоступления КАК Партия,
		|		МАКСИМУМ(Декларации.Дата) КАК Дата
		|	ИЗ
		|		Документ.ТаможеннаяДекларацияИмпорт КАК Декларации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Партии
		|			ПО Партии.Ссылка = Декларации.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
		|			ПО Партии.Ссылка = СебестоимостьТоваров.Регистратор
		|			И Партии.ДокументПоступления = СебестоимостьТоваров.Партия
		|			И СебестоимостьТоваров.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией))
		|	ГДЕ
		|		Декларации.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|		И СебестоимостьТоваров.Регистратор ЕСТЬ NULL
		|		И НЕ Партии.ДокументПоступления = ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
		|		И Декларации.Проведен
		|	СГРУППИРОВАТЬ ПО
		|		Партии.ДокументПоступления
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Остатки.Партия КАК Партия,
		|		МАКСИМУМ(Декларации.Дата) КАК Дата
		|	ИЗ
		|		ОстаткиИмпорт КАК Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Партии
		|			ПО Партии.ДокументПоступления = Остатки.Партия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт КАК Декларации
		|			ПО Партии.Ссылка = Декларации.Ссылка
		|			И Декларации.Дата МЕЖДУ Остатки.Дата И &НачалоПериода
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
		|			ПО Партии.Ссылка = СебестоимостьТоваров.Регистратор
		|			И Партии.ДокументПоступления = СебестоимостьТоваров.Партия
		|			И СебестоимостьТоваров.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией))
		|	ГДЕ
		|		СебестоимостьТоваров.Регистратор ЕСТЬ NULL
		|		И НЕ Партии.ДокументПоступления = ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
		|		И Декларации.Проведен
		|	СГРУППИРОВАТЬ ПО
		|		Остатки.Партия
		|	) КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Партия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партия
		|
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Регистратор КАК Партия,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК ВидЗапасов,
		|	ДД.РазделУчета КАК РазделУчета,
		|	МАКСИМУМ(ДД.КорАналитикаУчетаНоменклатуры) КАК КорАналитикаУчетаНоменклатуры,
		|	МАКСИМУМ(ДД.КорВидЗапасов) КАК КорВидЗапасов,
		|	МАКСИМУМ(ДД.КорРазделУчета) КАК КорРазделУчета
		|	
		|ПОМЕСТИТЬ НеотфактурованныеПоставки
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаКонецПредыдущегоПериода,
		|		Организация В (&МассивОрганизаций)
		|		И РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
		|	) КАК Остатки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК ДД
		|		ПО ДД.Регистратор = Остатки.Партия
		|		И ДД.Период < &НачалоПериода
		|		И ДД.АналитикаУчетаНоменклатуры = Остатки.АналитикаУчетаНоменклатуры
		|		И ДД.ВидЗапасов = Остатки.ВидЗапасов
		|		И ДД.РазделУчета = Остатки.РазделУчета
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета
		|ИНДЕКСИРОВАТЬ ПО
		|	Партия,
		|	АналитикаУчетаНоменклатуры,
		|	ВидЗапасов,
		|	РазделУчета
		|";

КонецФункции

// ... выборки данных

Функция ТекстНачальныеОстаткиПартийТоваров() // использует ЕстьДекларации, НеотфактурованныеПоставки
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстНачальныеОстаткиПартийТоваров"" 			 КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Остаток) КАК ТипЗаписи,
		|	ЛОЖЬ											 КАК ЭтоТочноРасчетноеДвижение,
		|	(ВЫБОР
		|		КОГДА Т.КоличествоОстаток < 0 ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ)							 КАК Сторно,
		|	0 												 КАК Приоритет,
		|	0 												 КАК Знаменатель,
		|	ИСТИНА 											 КАК РасчетЗавершен,
		|	Т.АналитикаУчетаНоменклатуры.Номенклатура 		 КАК Номенклатура,
		|	Т.АналитикаУчетаПартий.НалогообложениеНДС 		 КАК НалогообложениеПартии,
		|
		|	ЕСТЬNULL(ЕстьДекларации.Дата,
		|		ЕСТЬNULL(Периодика.ДатаРегистратора,
		|			&КонецПредыдущегоПериода))				 КАК Период,
		|	ЕСТЬNULL(ЕстьДекларации.Дата,
		|		ЕСТЬNULL(Периодика.ДатаРегистратора,
		|			&КонецПредыдущегоПериода))				 КАК ПериодПоступления,
		|	Т.Партия										 КАК Регистратор,
		|	НЕОПРЕДЕЛЕНО 			 	 					 КАК ВидДвижения,
		|	Т.АналитикаУчетаНоменклатуры 					 КАК АналитикаУчетаНоменклатуры,
		|	Т.РазделУчета				 					 КАК РазделУчета,
		|	Т.ВидЗапасов				 					 КАК ВидЗапасов,
		|	Т.Организация				 					 КАК Организация,
		|	Т.Партия					 					 КАК Партия,
		|	НЕОПРЕДЕЛЕНО									 КАК ЗаказНаПроизводство,
		|	Т.АналитикаУчетаПартий		 					 КАК АналитикаУчетаПартий,
		|	Т.АналитикаФинансовогоУчета  					 КАК АналитикаФинансовогоУчета,
		|	Т.ВидДеятельностиНДС		 					 КАК ВидДеятельностиНДС,
		|
		|	Т.КоличествоОстаток 							 КАК Количество,
		|	Т.СтоимостьОстаток 								 КАК Стоимость,
		|	Т.СтоимостьБезНДСОстаток 						 КАК СтоимостьБезНДС,
		|	Т.СтоимостьЗабалансоваяОстаток 					 КАК СтоимостьЗабалансовая,
		|	Т.СтоимостьУпрОстаток 							 КАК СтоимостьУпр,
		|	Т.ДопРасходыУпрОстаток 							 КАК ДопРасходыУпр,
		|	Т.ПостатейныеПеременныеСНДСОстаток 				 КАК ПостатейныеПеременныеСНДС,
		|	Т.ПостатейныеПеременныеБезНДСОстаток 			 КАК ПостатейныеПеременныеБезНДС,
		|	Т.ТрудозатратыУпрОстаток 						 КАК ТрудозатратыУпр,
		|	Т.ПостатейныеПостоянныеУпрОстаток 				 КАК ПостатейныеПостоянныеУпр,
		|	Т.ПостатейныеПеременныеУпрОстаток 				 КАК ПостатейныеПеременныеУпр,
		|	Т.ДопРасходыОстаток 						 	 КАК ДопРасходы,
		|	Т.ДопРасходыБезНДСОстаток 				 		 КАК ДопРасходыБезНДС,
		|	Т.ТрудозатратыОстаток 							 КАК Трудозатраты,
		|	Т.ПостатейныеПостоянныеСНДСОстаток 				 КАК ПостатейныеПостоянныеСНДС,
		|	Т.ПостатейныеПостоянныеБезНДСОстаток 			 КАК ПостатейныеПостоянныеБезНДС,
		|	Т.СтоимостьРеглОстаток 							 КАК СтоимостьРегл,
		|	Т.СтоимостьЗабалансоваяРеглОстаток 				 КАК СтоимостьЗабалансоваяРегл,
		|	Т.ПостояннаяРазницаОстаток 						 КАК ПостояннаяРазница,
		|	Т.ВременнаяРазницаОстаток 						 КАК ВременнаяРазница,
		|	Т.ДопРасходыРеглОстаток 						 КАК ДопРасходыРегл,
		|	Т.ТрудозатратыРеглОстаток 						 КАК ТрудозатратыРегл,
		|	Т.ПостатейныеПостоянныеРеглОстаток 				 КАК ПостатейныеПостоянныеРегл,
		|	Т.ПостатейныеПеременныеРеглОстаток 			     КАК ПостатейныеПеременныеРегл,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 				КАК ХозяйственнаяОперация,
		|	ЕСТЬNULL(НеотфактурованныеПоставки.КорАналитикаУчетаНоменклатуры,
		|		ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка))	КАК КорАналитикаУчетаНоменклатуры,
		|	ЕСТЬNULL(НеотфактурованныеПоставки.КорРазделУчета,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)) КАК КорРазделУчета,
		|	ЕСТЬNULL(НеотфактурованныеПоставки.КорВидЗапасов,
		|		ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))						КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 							КАК КорОрганизация,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК КорСтоимость,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) 		КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО 															КАК ЗаказКлиента,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 					КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 			КАК СтатьяРасходовСписания,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) 			КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаДоходов,
		|	ДАТАВРЕМЯ(1, 1, 1) 														КАК ПериодПродажи,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка) 	КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО 															КАК ДокументДвижения,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(36)) 											КАК ИдентификаторСтроки,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО 															КАК КорПартия,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) 			КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО 															КАК КорАналитикаФинансовогоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) 				КАК КорВидДеятельностиНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК НДСУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК НДСРегл,
		|	НЕОПРЕДЕЛЕНО															КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО															КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО															КАК АналитикаУчетаПартийПроизводства,
		|	НЕОПРЕДЕЛЕНО															КАК КорНаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО															КАК КодСтроки
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаКонецПредыдущегоПериода,	Организация В (&МассивОрганизаций)) КАК Т
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Импорт
		|		ПО Импорт.Ссылка = Т.Партия
		|		И Импорт.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
		|	ЛЕВОЕ СОЕДИНЕНИЕ ЕстьДекларации КАК ЕстьДекларации
		|		ПО ЕстьДекларации.Партия = Т.Партия
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК Периодика
		|		ПО Периодика.Организация = Т.Организация
		|		И Периодика.Документ = Т.Партия
		|	ЛЕВОЕ СОЕДИНЕНИЕ НеотфактурованныеПоставки КАК НеотфактурованныеПоставки
		|		ПО НеотфактурованныеПоставки.Партия = Т.Партия
		|		И НеотфактурованныеПоставки.АналитикаУчетаНоменклатуры = Т.АналитикаУчетаНоменклатуры
		|		И НеотфактурованныеПоставки.ВидЗапасов = Т.ВидЗапасов
		|		И НеотфактурованныеПоставки.РазделУчета = Т.РазделУчета
		|ГДЕ
		|	НЕ (НЕ Импорт.Ссылка ЕСТЬ NULL И ЕстьДекларации.Партия ЕСТЬ NULL)
		|	И НЕ (Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|		)
		|";
КонецФункции

Функция ТекстНачальныеОстаткиНЗП()
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстНачальныеОстаткиНЗП"" 			 		 КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОстатокНЗП) КАК ТипЗаписи,
		|	ЛОЖЬ											 КАК ЭтоТочноРасчетноеДвижение,
		|	(ВЫБОР
		|		КОГДА Т.КоличествоОстаток < 0 ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ)							 КАК Сторно,
		|	0 												 КАК Приоритет,
		|	0 												 КАК Знаменатель,
		|	ИСТИНА 											 КАК РасчетЗавершен,
		|	Т.АналитикаУчетаНоменклатуры.Номенклатура 		 КАК Номенклатура,
		|	Т.АналитикаУчетаПартий.НалогообложениеНДС 		 КАК НалогообложениеПартии,
		|
		|	ЕСТЬNULL(Периодика.ДатаРегистратора,
		|			&КонецПредыдущегоПериода)				 КАК Период,
		|	ЕСТЬNULL(Периодика.ДатаРегистратора,
		|			&КонецПредыдущегоПериода)				 КАК ПериодПоступления,
		|	Т.Партия										 КАК Регистратор,
		|	НЕОПРЕДЕЛЕНО 			 	 					 КАК ВидДвижения,
		|	Т.АналитикаУчетаНоменклатуры 					 КАК АналитикаУчетаНоменклатуры,
		|	Т.РазделУчета				 					 КАК РазделУчета,
		|	Т.ВидЗапасов				 					 КАК ВидЗапасов,
		|	Т.Организация				 					 КАК Организация,
		|	Т.Партия					 					 КАК Партия,
		|	Т.Партия 										 КАК ЗаказНаПроизводство,
		|	Т.АналитикаУчетаПартий		 					 КАК АналитикаУчетаПартий,
		|	Т.АналитикаФинансовогоУчета  					 КАК АналитикаФинансовогоУчета,
		|	Т.ВидДеятельностиНДС		 					 КАК ВидДеятельностиНДС,
		|
		|	Т.КоличествоОстаток 							 КАК Количество,
		|	Т.СтоимостьОстаток 								 КАК Стоимость,
		|	Т.СтоимостьБезНДСОстаток 						 КАК СтоимостьБезНДС,
		|	Т.СтоимостьЗабалансоваяОстаток 					 КАК СтоимостьЗабалансовая,
		|	Т.СтоимостьУпрОстаток 							 КАК СтоимостьУпр,
		|	Т.ДопРасходыУпрОстаток 							 КАК ДопРасходыУпр,
		|	Т.ПостатейныеПеременныеСНДСОстаток 				 КАК ПостатейныеПеременныеСНДС,
		|	Т.ПостатейныеПеременныеБезНДСОстаток 			 КАК ПостатейныеПеременныеБезНДС,
		|	Т.ТрудозатратыУпрОстаток 						 КАК ТрудозатратыУпр,
		|	Т.ПостатейныеПостоянныеУпрОстаток 				 КАК ПостатейныеПостоянныеУпр,
		|	Т.ПостатейныеПеременныеУпрОстаток 				 КАК ПостатейныеПеременныеУпр,
		|	Т.ДопРасходыОстаток 						 	 КАК ДопРасходы,
		|	Т.ДопРасходыБезНДСОстаток 				 		 КАК ДопРасходыБезНДС,
		|	Т.ТрудозатратыОстаток 							 КАК Трудозатраты,
		|	Т.ПостатейныеПостоянныеСНДСОстаток 				 КАК ПостатейныеПостоянныеСНДС,
		|	Т.ПостатейныеПостоянныеБезНДСОстаток 			 КАК ПостатейныеПостоянныеБезНДС,
		|	Т.СтоимостьРеглОстаток 							 КАК СтоимостьРегл,
		|	Т.СтоимостьЗабалансоваяРеглОстаток 				 КАК СтоимостьЗабалансоваяРегл,
		|	Т.ПостояннаяРазницаОстаток 						 КАК ПостояннаяРазница,
		|	Т.ВременнаяРазницаОстаток 						 КАК ВременнаяРазница,
		|	Т.ДопРасходыРеглОстаток 						 КАК ДопРасходыРегл,
		|	Т.ТрудозатратыРеглОстаток 						 КАК ТрудозатратыРегл,
		|	Т.ПостатейныеПостоянныеРеглОстаток 				 КАК ПостатейныеПостоянныеРегл,
		|	Т.ПостатейныеПеременныеРеглОстаток 			     КАК ПостатейныеПеременныеРегл,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 				КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)		КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) 	КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)							КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 							КАК КорОрганизация,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК КорСтоимость,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) 		КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО 															КАК ЗаказКлиента,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 					КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 			КАК СтатьяРасходовСписания,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) 			КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаДоходов,
		|	ДАТАВРЕМЯ(1, 1, 1) 														КАК ПериодПродажи,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка) 	КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО 															КАК ДокументДвижения,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(36)) 											КАК ИдентификаторСтроки,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО 															КАК КорПартия,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) 			КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО 															КАК КорАналитикаФинансовогоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) 				КАК КорВидДеятельностиНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК НДСУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК НДСРегл,
		|	НЕОПРЕДЕЛЕНО															КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО															КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО															КАК АналитикаУчетаПартийПроизводства,
		|	НЕОПРЕДЕЛЕНО															КАК КорНаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО															КАК КодСтроки
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаКонецПредыдущегоПериода,	Организация В (&МассивОрганизаций)) КАК Т
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК Периодика
		|		ПО Периодика.Организация = Т.Организация
		|		И Периодика.Документ = Т.Партия
		|ГДЕ
		|	Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|";
КонецФункции

Функция ТекстТекущиеОборотыПартийТоваров() // использует ЕстьДекларации
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстТекущиеОборотыПартийТоваров"" 						КАК ЗапросИсточник,
		|	Т.ТипЗаписи 												КАК ТипЗаписи,
		|	ЛОЖЬ														КАК ЭтоТочноРасчетноеДвижение,
		|	(ВЫБОР
		|		КОГДА Т.Количество < 0 ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ)										КАК Сторно,
		|	(ВЫБОР
		|		КОГДА НЕ Т.СлужебноеВидДвиженияПриход И Т.Регистратор ССЫЛКА Документ.КорректировкаВидаДеятельностиНДС ТОГДА 15
		|		КОГДА Т.СлужебноеВидДвиженияПриход И Т.ТипЗаписи В (&НепересчитываемыеТипыЗаписей) ТОГДА 10
		|		ИНАЧЕ 90 КОНЕЦ)											КАК Приоритет,
		|	0 															КАК Знаменатель,
		|	ВЫБОР КОГДА Т.ТипЗаписи В (&НепересчитываемыеТипыЗаписей)
		|		ИЛИ Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
		|		ИЛИ Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|		ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ 														КАК РасчетЗавершен,
		|	Аналитика.Номенклатура										КАК Номенклатура,
		|	ВЫБОР КОГДА (Т.ТипЗаписи В (&НепересчитываемыеТипыЗаписей) И Т.Организация В (&ОрганизацииСФИФОСкользящая))
		|		ИЛИ Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|		ТОГДА Т.АналитикаУчетаПартий.НалогообложениеНДС
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ 														КАК НалогообложениеПартии,
		|
		|	Т.Период КАК Период,
		|	ВЫБОР КОГДА Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|		ТОГДА &НачалоПериода
		|		ИНАЧЕ ЕСТЬNULL(ЕстьДекларации.Дата, Т.Период)
		|	КОНЕЦ КАК ПериодПоступления,
		|	Т.Регистратор,
		|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
		|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	Т.АналитикаУчетаНоменклатуры,
		|	Т.РазделУчета,
		|	Т.ВидЗапасов,
		|	Т.Организация,
		|	ВЫБОР КОГДА (Т.ТипЗаписи В (&НепересчитываемыеТипыЗаписей)
		|				И Т.Организация В (&ОрганизацииСФИФОСкользящая))
		|		ИЛИ Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|		ИЛИ Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|		ИЛИ Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
		|		ИЛИ Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
		|		ИЛИ Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
		|			ТОГДА Т.Партия
		|		КОГДА ВозвратыТоваровПоставщику.ДокументПоступления ЕСТЬ НЕ NULL
		|				И Т.Организация В (&ОрганизацииСФИФОСкользящая)
		|			ТОГДА ВозвратыТоваровПоставщику.ДокументПоступления
		|		КОГДА КорректировкаНДС.ДокументПоступления ЕСТЬ НЕ NULL
		|				И Т.Организация В (&ОрганизацииСФИФОСкользящая)
		|			ТОГДА КорректировкаНДС.ДокументПоступления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	ВЫБОР КОГДА (Т.ТипЗаписи В (&НепересчитываемыеТипыЗаписей)
		|				И Т.Организация В (&ОрганизацииСФИФОСкользящая))
		|		ИЛИ Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|		ИЛИ Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
		|		ИЛИ Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
		|		ИЛИ Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
		|		ТОГДА Т.АналитикаУчетаПартий
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК АналитикаУчетаПартий,
		|	ВЫБОР
		|		КОГДА Т.ТипЗаписи В (&НепересчитываемыеТипыЗаписей)
		|			ИЛИ Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|			ИЛИ Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)
		|			ИЛИ Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПеремещениеОбособленно)
		|			ИЛИ Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
		|			ТОГДА Т.АналитикаФинансовогоУчета
		|		КОГДА НЕ Т.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА Т.ГруппаПродукции
		|		ИНАЧЕ Т.КорАналитикаФинансовогоУчета
		|	КОНЕЦ КАК АналитикаФинансовогоУчета,
		|	ВЫБОР
		|		КОГДА Т.ТипЗаписи В (&НепересчитываемыеТипыЗаписей)
		|		 ИЛИ Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|			ТОГДА Т.ВидДеятельностиНДС
		|		КОГДА НЕ КорректировкаНДС.НалогообложениеНДС ЕСТЬ NULL И НЕ Т.СлужебноеВидДвиженияПриход
		|			ТОГДА КорректировкаНДС.НалогообложениеНДС
		|		КОГДА НЕ Перемещение.ПеремещениеПодДеятельность ЕСТЬ NULL И НЕ Т.СлужебноеВидДвиженияПриход
		|			ТОГДА
		|				ВЫБОР КОГДА Перемещение.ПеремещениеПодДеятельность <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|					ТОГДА Перемещение.ПеремещениеПодДеятельность
		|					ИНАЧЕ НалогообложениеОрганизаций.НалогообложениеНДС
		|				КОНЕЦ
		|		КОГДА Т.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА НалогообложениеОрганизаций.НалогообложениеНДС
		|		ИНАЧЕ Т.КорВидДеятельностиНДС
		|	КОНЕЦ КАК ВидДеятельностиНДС,
		|
		|	Т.Количество,
		|	Т.Стоимость,
		|	Т.СтоимостьБезНДС,
		|	Т.СтоимостьЗабалансовая,
		|	Т.СтоимостьУпр,
		|	Т.ДопРасходыУпр,
		|	Т.ПостатейныеПеременныеСНДС,
		|	Т.ПостатейныеПеременныеБезНДС,
		|	Т.ТрудозатратыУпр,
		|	Т.ПостатейныеПостоянныеУпр,
		|	Т.ПостатейныеПеременныеУпр,
		|	Т.ДопРасходы,
		|	Т.ДопРасходыБезНДС,
		|	Т.Трудозатраты,
		|	Т.ПостатейныеПостоянныеСНДС,
		|	Т.ПостатейныеПостоянныеБезНДС,
		|	Т.СтоимостьРегл,
		|	Т.СтоимостьЗабалансоваяРегл,
		|	Т.ПостояннаяРазница,
		|	Т.ВременнаяРазница,
		|	Т.ДопРасходыРегл,
		|	Т.ТрудозатратыРегл,
		|	Т.ПостатейныеПостоянныеРегл,
		|	Т.ПостатейныеПеременныеРегл,
		|
		|	Т.ХозяйственнаяОперация,
		|	Т.КорАналитикаУчетаНоменклатуры,
		|	Т.КорРазделУчета,
		|	Т.КорВидЗапасов,
		|	Т.КорОрганизация,
		|	Т.КорСтоимость,
		|	Т.АналитикаУчетаПоПартнерам,
		|	Т.ЗаказКлиента,
		|	Т.Подразделение,
		|	Т.АналитикаРасходов,
		|	Т.СтатьяРасходовСписания,
		|	Т.СтатьяДоходов,
		|	Т.АналитикаДоходов,
		|	Т.ПериодПродажи,
		|	Т.СтатьяАктивовПассивов,
		|	Т.АналитикаАктивовПассивов,
		|	Т.ДокументДвижения,
		|	Т.ИдентификаторСтроки,
		|	Т.ГруппаПродукции,
		|	ВЫБОР КОГДА Т.КорРазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|			И Т.КорПартия <> Т.Регистратор
		|		ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Т.КорПартия
		|	КОНЕЦ КАК КорПартия,
		|	ВЫБОР КОГДА Т.КорРазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|			И Т.КорПартия <> Т.Регистратор
		|		ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Т.КорАналитикаУчетаПартий
		|	КОНЕЦ КАК КорАналитикаУчетаПартий,
		|	ВЫБОР
		|		КОГДА НЕ Т.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
		|			И (ТИПЗНАЧЕНИЯ(ЕСТЬNULL(КорАналитика.Склад, НЕОПРЕДЕЛЕНО)) = ТИП(Справочник.СтруктураПредприятия)
		|				ИЛИ ЕСТЬNULL(КорСклады.ЦеховаяКладовая, ЛОЖЬ))
		|			ТОГДА Т.ГруппаПродукции
		|		ИНАЧЕ Т.КорАналитикаФинансовогоУчета
		|	КОНЕЦ КАК КорАналитикаФинансовогоУчета,
		|	ВЫБОР
		|		КОГДА НЕ Перемещение.ПеремещениеПодДеятельность ЕСТЬ NULL И НЕ Т.СлужебноеВидДвиженияПриход
		|			ТОГДА Перемещение.ПеремещениеПодДеятельность
		|		КОГДА Т.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|		 И НЕ Т.СлужебноеВидДвиженияПриход
		|			ТОГДА НалогообложениеОрганизаций.НалогообложениеНДС
		|		ИНАЧЕ Т.КорВидДеятельностиНДС
		|	КОНЕЦ КАК КорВидДеятельностиНДС,
		|	Т.НДСУпр,
		|	Т.НДСРегл,
		|	Т.СтатьяКалькуляции,
		|	ВЫБОР
		|		КОГДА Т.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
		|			ТОГДА Т.ДокументИсточник
		|		КОГДА НЕ Т.ТипЗаписи В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СторноВозвратНаДругойСклад),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение))
		|		ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Т.ДокументИсточник
		|	КОНЕЦ КАК ДокументИсточник,
		|	Т.АналитикаУчетаПартийПроизводства,
		|	Т.КорНаправлениеДеятельности,
		|	Т.КодСтроки
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Т
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = Т.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитика
		|		ПО КорАналитика.Ссылка = Т.КорАналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК КорСклады
		|		ПО КорАналитика.Склад = КорСклады.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыКОформлениюТаможенныхДеклараций КАК ТоварыКОформлению
		|		ПО ТоварыКОформлению.Регистратор = Т.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Импорт
		|		ПО Импорт.Ссылка = Т.Регистратор
		|		И Импорт.Ссылка = ТоварыКОформлению.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ ЕстьДекларации КАК ЕстьДекларации
		|		ПО ЕстьДекларации.Партия = Т.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаВидаДеятельностиНДС КАК КорректировкаНДС
		|		ПО КорректировкаНДС.Ссылка = Т.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК Перемещение
		|		ПО Перемещение.Ссылка = Т.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.ВидыЗапасов КАК ВозвратыТоваровПоставщику
		|		ПО ВозвратыТоваровПоставщику.Ссылка = Т.Регистратор
		|		И Т.ИдентификаторСтроки = ВозвратыТоваровПоставщику.ИдентификаторСтроки
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНалогообложениеОрганизацийПоУмолчанию КАК НалогообложениеОрганизаций
		|		ПО Т.Организация = НалогообложениеОрганизаций.Организация
		|ГДЕ
		|	(Т.Количество <> 0 ИЛИ Т.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение))
		|	И (НЕ (НЕ Импорт.Ссылка ЕСТЬ NULL
		|			И ЕстьДекларации.Партия ЕСТЬ NULL)
		|		И Т.Организация В (&ОрганизацииСФИФОСкользящая)
		|		ИЛИ НЕ Т.Организация В (&ОрганизацииСФИФОСкользящая))
		|";
КонецФункции


Функция ТекстНачальныеОстаткиЗакупокПоИмпорту()
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстНачальныеОстаткиЗакупокПоИмпорту"" 	  	КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Импорт) КАК ТипЗаписи,
		|	ЛОЖЬ											КАК ЭтоТочноРасчетноеДвижение,
		|	ЛОЖЬ											КАК Сторно,
		|	0 										  		КАК Приоритет,
		|	0								  				КАК Знаменатель,
		|	ИСТИНА 											КАК РасчетЗавершен,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура 		КАК Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС 		КАК НалогообложениеПартии,
		|
		|	&КонецПредыдущегоПериода 	 					КАК Период,
		|	&КонецПредыдущегоПериода 	 					КАК ПериодПоступления,
		|	ДД.Партия 				 	 					КАК Регистратор,
		|	НЕОПРЕДЕЛЕНО 			 	 					КАК ВидДвижения,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Партия,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	ДД.КоличествоОстаток КАК Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьЗабалансовая,
		|	0 КАК СтоимостьУпр,
		|	0 КАК ДопРасходыУпр,
		|	0 КАК ПостатейныеПеременныеСНДС,
		|	0 КАК ПостатейныеПеременныеБезНДС,
		|	0 КАК ТрудозатратыУпр,
		|	0 КАК ПостатейныеПостоянныеУпр,
		|	0 КАК ПостатейныеПеременныеУпр,
		|	0 КАК ДопРасходы,
		|	0 КАК ДопРасходыБезНДС,
		|	0 КАК Трудозатраты,
		|	0 КАК ПостатейныеПостоянныеСНДС,
		|	0 КАК ПостатейныеПостоянныеБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК СтоимостьЗабалансоваяРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ТрудозатратыРегл,
		|	0 КАК ПостатейныеПостоянныеРегл,
		|	0 КАК ПостатейныеПеременныеРегл,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 				КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) 		КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) 	КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) 							КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 							КАК КорОрганизация,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК КорСтоимость,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) 		КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО 															КАК ЗаказКлиента,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 					КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 			КАК СтатьяРасходовСписания,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) 			КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаДоходов,
		|	ДАТАВРЕМЯ(1, 1, 1) 														КАК ПериодПродажи,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка) 	КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО 															КАК ДокументДвижения,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(36)) 											КАК ИдентификаторСтроки,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО 															КАК КорПартия,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) 			КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО 															КАК КорАналитикаФинансовогоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) 				КАК КорВидДеятельностиНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК НДСУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК НДСРегл,
		|	НЕОПРЕДЕЛЕНО															КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО 															КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО КАК КорНаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаКонецПредыдущегоПериода,	Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Поступление
		|		ПО Поступление.Ссылка = ДД.Партия
		|ГДЕ
		|	Поступление.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
		|";
КонецФункции

Функция ТекстТекущиеЗакупкиПоИмпорту()
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстТекущиеЗакупкиПоИмпорту"" 	  				 		 КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Импорт) 			 КАК ТипЗаписи,
		|	ЛОЖЬ														 КАК ЭтоТочноРасчетноеДвижение,
		|	ЛОЖЬ														 КАК Сторно,
		|	10 										  					 КАК Приоритет,
		|	0								  							 КАК Знаменатель,
		|	ИСТИНА 														 КАК РасчетЗавершен,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура 					 КАК Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС 					 КАК НалогообложениеПартии,
		|
		|	ДД.Период,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Регистратор,
		|	НЕОПРЕДЕЛЕНО КАК ВидДвижения,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Партия,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	ДД.Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьЗабалансовая,
		|	0 КАК СтоимостьУпр,
		|	0 КАК ДопРасходыУпр,
		|	0 КАК ПостатейныеПеременныеСНДС,
		|	0 КАК ПостатейныеПеременныеБезНДС,
		|	0 КАК ТрудозатратыУпр,
		|	0 КАК ПостатейныеПостоянныеУпр,
		|	0 КАК ПостатейныеПеременныеУпр,
		|	0 КАК ДопРасходы,
		|	0 КАК ДопРасходыБезНДС,
		|	0 КАК Трудозатраты,
		|	0 КАК ПостатейныеПостоянныеСНДС,
		|	0 КАК ПостатейныеПостоянныеБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК СтоимостьЗабалансоваяРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ТрудозатратыРегл,
		|	0 КАК ПостатейныеПостоянныеРегл,
		|	0 КАК ПостатейныеПеременныеРегл,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорРазделУчета,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорСтоимость,
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.ЗаказКлиента,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.СтатьяДоходов,
		|	ДД.АналитикаДоходов,
		|	ДД.ПериодПродажи,
		|	ДД.СтатьяАктивовПассивов,
		|	ДД.АналитикаАктивовПассивов,
		|	ДД.ДокументДвижения,
		|	ДД.ИдентификаторСтроки,
		|	ДД.ГруппаПродукции,
		|	ДД.КорПартия,
		|	ДД.КорАналитикаУчетаПартий,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.НДСУпр,
		|	ДД.НДСРегл,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО,
		|	ДД.КорНаправлениеДеятельности,
		|	ДД.КодСтроки
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|	И ДД.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|";
КонецФункции

Функция ТекстТекущиеДопРасходыБезПартииКРаспределению() // Использует Декларации
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстТекущиеДопРасходыКРаспределению"" 	  				КАК ЗапросИсточник,
		|	ДД.ТипЗаписи 							  					КАК ТипЗаписи,
		|	ЛОЖЬ														КАК ЭтоТочноРасчетноеДвижение,
		|	ЛОЖЬ														КАК Сторно,
		|	10 										  					КАК Приоритет,
		|	МАКСИМУМ(Декларации.Количество)			  					КАК Знаменатель,
		|	ЛОЖЬ 														КАК РасчетЗавершен,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура 					КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО 												КАК НалогообложениеПартии,
		|
		|	ДД.Период,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Регистратор,
		|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход
		|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|
		|	0 КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьЗабалансовая) КАК СтоимостьЗабалансовая,
		|	СУММА(ДД.СтоимостьУпр) КАК СтоимостьУпр,
		|	СУММА(ДД.ДопРасходыУпр) КАК ДопРасходыУпр,
		|	СУММА(ДД.ПостатейныеПеременныеСНДС) КАК ПостатейныеПеременныеСНДС,
		|	СУММА(ДД.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС,
		|	СУММА(ДД.ТрудозатратыУпр) КАК ТрудозатратыУпр,
		|	СУММА(ДД.ПостатейныеПостоянныеУпр) КАК ПостатейныеПостоянныеУпр,
		|	СУММА(ДД.ПостатейныеПеременныеУпр) КАК ПостатейныеПеременныеУпр,
		|	СУММА(ДД.ДопРасходы) КАК ДопРасходы,
		|	СУММА(ДД.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
		|	СУММА(ДД.Трудозатраты) КАК Трудозатраты,
		|	СУММА(ДД.ПостатейныеПостоянныеСНДС) КАК ПостатейныеПостоянныеСНДС,
		|	СУММА(ДД.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	СУММА(ДД.ДопРасходыРегл) КАК ДопРасходыРегл,
		|	СУММА(ДД.ТрудозатратыРегл) КАК ТрудозатратыРегл,
		|	СУММА(ДД.ПостатейныеПостоянныеРегл) КАК ПостатейныеПостоянныеРегл,
		|	СУММА(ДД.ПостатейныеПеременныеРегл) КАК ПостатейныеПеременныеРегл,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорРазделУчета,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорСтоимость,
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.ЗаказКлиента,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.СтатьяДоходов,
		|	ДД.АналитикаДоходов,
		|	ДД.ПериодПродажи,
		|	ДД.СтатьяАктивовПассивов,
		|	ДД.АналитикаАктивовПассивов,
		|	ДД.ДокументДвижения,
		|	ДД.ИдентификаторСтроки,
		|	ДД.ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорПартия,
		|	ДД.КорАналитикаУчетаПартий,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС,
		|	СУММА(ДД.НДСУпр) КАК НДСУпр,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	ДД.СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО,
		|	ДД.КорНаправлениеДеятельности,
		|	ДД.КодСтроки
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Декларации КАК Декларации
		|		ПО Декларации.Ссылка = ДД.Регистратор
		|		И Декларации.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Декларации.ВидЗапасов = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ТипЗаписи,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход
		|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорРазделУчета,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорСтоимость,
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.ЗаказКлиента,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.СтатьяДоходов,
		|	ДД.АналитикаДоходов,
		|	ДД.ПериодПродажи,
		|	ДД.СтатьяАктивовПассивов,
		|	ДД.АналитикаАктивовПассивов,
		|	ДД.ДокументДвижения,
		|	ДД.ИдентификаторСтроки,
		|	ДД.КодСтроки,
		|	ДД.ГруппаПродукции,
		|	ДД.КорАналитикаУчетаПартий,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.КорНаправлениеДеятельности,
		|	ДД.СтатьяКалькуляции
		|";
КонецФункции

Функция ТекстТекущиеДопРасходыСПартиейКРаспределению() // Использует Декларации
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстТекущиеДопРасходыКРаспределению"" 	  				КАК ЗапросИсточник,
		|	ДД.ТипЗаписи 							  					КАК ТипЗаписи,
		|	ЛОЖЬ														КАК ЭтоТочноРасчетноеДвижение,
		|	ЛОЖЬ														КАК Сторно,
		|	10 										  					КАК Приоритет,
		|	МАКСИМУМ(Декларации.Количество)			  					КАК Знаменатель,
		|	ЛОЖЬ 														КАК РасчетЗавершен,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура 					КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО 												КАК НалогообложениеПартии,
		|
		|	ДД.Период,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Регистратор,
		|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход
		|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|
		|	0 КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьЗабалансовая) КАК СтоимостьЗабалансовая,
		|	СУММА(ДД.СтоимостьУпр) КАК СтоимостьУпр,
		|	СУММА(ДД.ДопРасходыУпр) КАК ДопРасходыУпр,
		|	СУММА(ДД.ПостатейныеПеременныеСНДС) КАК ПостатейныеПеременныеСНДС,
		|	СУММА(ДД.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС,
		|	СУММА(ДД.ТрудозатратыУпр) КАК ТрудозатратыУпр,
		|	СУММА(ДД.ПостатейныеПостоянныеУпр) КАК ПостатейныеПостоянныеУпр,
		|	СУММА(ДД.ПостатейныеПеременныеУпр) КАК ПостатейныеПеременныеУпр,
		|	СУММА(ДД.ДопРасходы) КАК ДопРасходы,
		|	СУММА(ДД.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
		|	СУММА(ДД.Трудозатраты) КАК Трудозатраты,
		|	СУММА(ДД.ПостатейныеПостоянныеСНДС) КАК ПостатейныеПостоянныеСНДС,
		|	СУММА(ДД.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	СУММА(ДД.ДопРасходыРегл) КАК ДопРасходыРегл,
		|	СУММА(ДД.ТрудозатратыРегл) КАК ТрудозатратыРегл,
		|	СУММА(ДД.ПостатейныеПостоянныеРегл) КАК ПостатейныеПостоянныеРегл,
		|	СУММА(ДД.ПостатейныеПеременныеРегл) КАК ПостатейныеПеременныеРегл,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорРазделУчета,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорСтоимость,
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.ЗаказКлиента,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.СтатьяДоходов,
		|	ДД.АналитикаДоходов,
		|	ДД.ПериодПродажи,
		|	ДД.СтатьяАктивовПассивов,
		|	ДД.АналитикаАктивовПассивов,
		|	ДД.ДокументДвижения,
		|	ДД.ИдентификаторСтроки,
		|	ДД.ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорПартия,
		|	ДД.КорАналитикаУчетаПартий,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС,
		|	СУММА(ДД.НДСУпр) КАК НДСУпр,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ДокументИсточник КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО,
		|	ДД.КорНаправлениеДеятельности,
		|	ДД.КодСтроки
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДекларацииПоПоступлениям КАК Декларации
		|		ПО Декларации.Ссылка = ДД.Регистратор
		|		И Декларации.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Декларации.ВидЗапасов = ДД.ВидЗапасов
		|		И Декларации.ДокументПоступления = ДД.ДокументИсточник
		|ГДЕ
		|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ТипЗаписи,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход
		|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорРазделУчета,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорСтоимость,
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.ЗаказКлиента,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.СтатьяДоходов,
		|	ДД.АналитикаДоходов,
		|	ДД.ПериодПродажи,
		|	ДД.СтатьяАктивовПассивов,
		|	ДД.АналитикаАктивовПассивов,
		|	ДД.ДокументДвижения,
		|	ДД.ИдентификаторСтроки,
		|	ДД.КодСтроки,
		|	ДД.ГруппаПродукции,
		|	ДД.КорАналитикаУчетаПартий,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.КорНаправлениеДеятельности,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ДокументИсточник
		|";
КонецФункции

Функция ТекстРеализацииПрошлыхМесяцев() // использует ПрошлыеРеализации 
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстРеализацииПрошлыхМесяцев"" 	  			 КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Прошлое) КАК ТипЗаписи,
		|	ЛОЖЬ											 КАК ЭтоТочноРасчетноеДвижение,
		|	ЛОЖЬ											 КАК Сторно,
		|	0 										  		 КАК Приоритет,
		|	0								  				 КАК Знаменатель,
		|	ИСТИНА 											 КАК РасчетЗавершен,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура 		 КАК Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС 		 КАК НалогообложениеПартии,
		|
		|	ДД.Период,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Регистратор,
		|	ДД.ВидДвижения,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Партия,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА ДД.ВидДеятельностиНДС
		|		ИНАЧЕ ДД.КорВидДеятельностиНДС КОНЕЦ) КАК ВидДеятельностиНДС,
		|
		|	СУММА(ДД.Количество) КАК Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьЗабалансовая,
		|	0 КАК СтоимостьУпр,
		|	0 КАК ДопРасходыУпр,
		|	0 КАК ПостатейныеПеременныеСНДС,
		|	0 КАК ПостатейныеПеременныеБезНДС,
		|	0 КАК ТрудозатратыУпр,
		|	0 КАК ПостатейныеПостоянныеУпр,
		|	0 КАК ПостатейныеПеременныеУпр,
		|	0 КАК ДопРасходы,
		|	0 КАК ДопРасходыБезНДС,
		|	0 КАК Трудозатраты,
		|	0 КАК ПостатейныеПостоянныеСНДС,
		|	0 КАК ПостатейныеПостоянныеБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК СтоимостьЗабалансоваяРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ТрудозатратыРегл,
		|	0 КАК ПостатейныеПостоянныеРегл,
		|	0 КАК ПостатейныеПеременныеРегл,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 				КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) 		КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) 	КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) 							КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 							КАК КорОрганизация,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК КорСтоимость,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) 		КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО 															КАК ЗаказКлиента,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 					КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 			КАК СтатьяРасходовСписания,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) 			КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаДоходов,
		|	ДАТАВРЕМЯ(1, 1, 1) 														КАК ПериодПродажи,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка) 	КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО 															КАК ДокументДвижения,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(36)) 											КАК ИдентификаторСтроки,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО 															КАК КорПартия,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) 			КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО 															КАК КорАналитикаФинансовогоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) 				КАК КорВидДеятельностиНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК НДСУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК НДСРегл,
		|	НЕОПРЕДЕЛЕНО															КАК СтатьяКалькуляции,
		|	Прошлые.ДокументИсточник												КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО КАК КорНаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРеализации КАК Прошлые
		|		ПО ДД.Регистратор = Прошлые.ДокументРеализации
		|		И ДД.АналитикаУчетаНоменклатуры = Прошлые.АналитикаУчетаНоменклатуры
		|		И ДД.ВидЗапасов = Прошлые.ВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Регистратор = ДД.Регистратор
		|		И Партии.Период = ДД.Период
		|		И ДД.Организация В (&ОрганизацииСФИФОСкользящая)
		|ГДЕ
		|	ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.РасчетСебестоимости
		|	И Партии.Регистратор ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ВидДвижения,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА ДД.ВидДеятельностиНДС
		|		ИНАЧЕ ДД.КорВидДеятельностиНДС КОНЕЦ),
		|	Прошлые.ДокументИсточник
		|";
КонецФункции

Функция ТекстРеализацииПрошлыхМесяцев_ПУ21() // использует ПрошлыеРеализации 
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстРеализацииПрошлыхМесяцев_ПУ21"" 	  		 КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Прошлое) КАК ТипЗаписи,
		|	ЛОЖЬ											 КАК ЭтоТочноРасчетноеДвижение,
		|	ЛОЖЬ											 КАК Сторно,
		|	0 										  		 КАК Приоритет,
		|	0								  				 КАК Знаменатель,
		|	ИСТИНА 											 КАК РасчетЗавершен,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура 		 КАК Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС 		 КАК НалогообложениеПартии,
		|
		|	ДД.Период,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Регистратор,
		|	ДД.ВидДвижения,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	Партии.ДокументПоступления КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	ЕСТЬNULL(НоваяАналитикаПартий.КлючАналитики, Партии.АналитикаУчетаПартий) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
		|	(ВЫБОР
		|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА Партии.АналитикаУчетаПартий.НалогообложениеНДС
		|		ИНАЧЕ Партии.НалогообложениеНДС КОНЕЦ) КАК ВидДеятельностиНДС,
		|
		|	СУММА(Партии.Количество) КАК Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьЗабалансовая,
		|	0 КАК СтоимостьУпр,
		|	0 КАК ДопРасходыУпр,
		|	0 КАК ПостатейныеПеременныеСНДС,
		|	0 КАК ПостатейныеПеременныеБезНДС,
		|	0 КАК ТрудозатратыУпр,
		|	0 КАК ПостатейныеПостоянныеУпр,
		|	0 КАК ПостатейныеПеременныеУпр,
		|	0 КАК ДопРасходы,
		|	0 КАК ДопРасходыБезНДС,
		|	0 КАК Трудозатраты,
		|	0 КАК ПостатейныеПостоянныеСНДС,
		|	0 КАК ПостатейныеПостоянныеБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК СтоимостьЗабалансоваяРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ТрудозатратыРегл,
		|	0 КАК ПостатейныеПостоянныеРегл,
		|	0 КАК ПостатейныеПеременныеРегл,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 				КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) 		КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) 	КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) 							КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 							КАК КорОрганизация,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК КорСтоимость,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) 		КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО 															КАК ЗаказКлиента,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 					КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 			КАК СтатьяРасходовСписания,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) 			КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаДоходов,
		|	ДАТАВРЕМЯ(1, 1, 1) 														КАК ПериодПродажи,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка) 	КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО 															КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО 															КАК ДокументДвижения,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(36)) 											КАК ИдентификаторСтроки,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО 															КАК КорПартия,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) 			КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО 															КАК КорАналитикаФинансовогоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) 				КАК КорВидДеятельностиНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК НДСУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15,2)) 											КАК НДСРегл,
		|	НЕОПРЕДЕЛЕНО															КАК СтатьяКалькуляции,
		|	Прошлые.ДокументИсточник												КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО КАК КорНаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРеализации КАК Прошлые
		|		ПО ДД.Регистратор = Прошлые.ДокументРеализации
		|		И ДД.АналитикаУчетаНоменклатуры = Прошлые.АналитикаУчетаНоменклатуры
		|		И ДД.ВидЗапасов = Прошлые.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Регистратор = ДД.Регистратор
		|		И Партии.Период = ДД.Период
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И (Партии.ВидЗапасов = ДД.ВидЗапасов
		|			ИЛИ НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПартий КАК АналитикаПартий
		|		ПО АналитикаПартий.Ссылка = Партии.АналитикаУчетаПартий
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК НоваяАналитикаПартий
		|		ПО НоваяАналитикаПартий.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
		|		 И НоваяАналитикаПартий.Поставщик = АналитикаПартий.Поставщик
		|		 И НоваяАналитикаПартий.Контрагент = АналитикаПартий.Контрагент
		|		 И НоваяАналитикаПартий.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|		 И НоваяАналитикаПартий.СтавкаНДС = АналитикаПартий.СтавкаНДС
		|		 И НоваяАналитикаПартий.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
		|		 И НоваяАналитикаПартий.КодСтроки = АналитикаПартий.КодСтроки
		|ГДЕ
		|	ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.РасчетСебестоимости
		|	И ДД.Организация В (&ОрганизацииСФИФОСкользящая)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ВидДвижения,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	Партии.ДокументПоступления,
		|	ЕСТЬNULL(НоваяАналитикаПартий.КлючАналитики, Партии.АналитикаУчетаПартий),
		|	(ВЫБОР
		|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА Партии.АналитикаУчетаПартий.НалогообложениеНДС
		|		ИНАЧЕ Партии.НалогообложениеНДС КОНЕЦ),
		|	Прошлые.ДокументИсточник
		|";
КонецФункции


// Заполнение расчетной партии

Процедура ЗаполнитьРасчетнуюПартиюСебестоимостиТоваров(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход)
	
	Если (Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск
			ИЛИ Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Распределение)
	 И Не ЗначениеЗаполнено(Расход.ЗаказНаПроизводство)
	 И ЗначениеЗаполнено(Расход.РазделУчета)
	 И Расход.РазделУчета <> Приход.РазделУчета Тогда
		Возврат;
	
	ИначеЕсли Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.КорректировкаПриобретения
	 И ТипЗнч(Приход.Регистратор) <> Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		Возврат;
	ИначеЕсли ЗначениеЗаполнено(Расход.Регистратор)
		И Расход.Регистратор = Приход.ДокументИсточник
		И Не Расход.Регистратор = Приход.Регистратор Тогда
		Возврат;
	КонецЕсли;
	
	СуммовыеРесурсы = Новый Структура(
	"Стоимость, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС,
	|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр,
	|СтоимостьРегл, ПостояннаяРазница, ВременнаяРазница,
	|СтоимостьЗабалансовая, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
	|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС,
	|НДСРегл, НДСУпр,
	|СтоимостьЗабалансоваяРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл");
	
	// Заполняем расчетную партию по расходной партии-основании
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	//	Заполняем партионную идентификацию в расчетной партии
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход, "Партия, АналитикаУчетаПартий, НалогообложениеПартии, АналитикаФинансовогоУчета");
	
	Если РасчетнаяПартия.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
	 И РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход
	 И ПараметрыРасчета.ОрганизацииСФИФОСкользящая.Найти(РасчетнаяПартия.Организация) <> Неопределено Тогда
		РасчетнаяПартия.Партия = РасчетнаяПартия.Регистратор;
		РасчетнаяПартия.АналитикаУчетаПартий = Неопределено;
	ИначеЕсли РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход
	 И ЗначениеЗаполнено(РасчетнаяПартия.Партия)
	 И РасчетнаяПартия.РазделУчета <> Перечисления.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути
	 И РасчетнаяПартия.РазделУчета <> Перечисления.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки
	 И РасчетнаяПартия.ТипЗаписи <> Перечисления.ТипыЗаписейПартий.ДопРасходыСПартией
	 И РасчетнаяПартия.ТипЗаписи <> Перечисления.ТипыЗаписейПартий.ДопРасходыБезПартии
	 И ПараметрыРасчета.ОрганизацииСФИФОСкользящая.Найти(РасчетнаяПартия.Организация) = Неопределено Тогда
		РасчетнаяПартия.Партия = Неопределено;
		РасчетнаяПартия.АналитикаУчетаПартий = Неопределено;
	КонецЕсли;
	
	Если РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Выпуск Тогда
		РасчетнаяПартия.ДокументИсточник = Приход.ДокументИсточник;
	Иначе
		РасчетнаяПартия.ДокументИсточник = Приход.Регистратор;
	КонецЕсли;
	
	Если РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск Тогда
		РасчетнаяПартия.Сторно = Ложь;
		РасчетнаяПартия.АналитикаУчетаПоПартнерам = Приход.АналитикаУчетаПоПартнерам;
	КонецЕсли;
	
	Если РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Выпуск Тогда
		РасчетнаяПартия.ВидДвижения = Приход.ВидДвижения;
		РасчетнаяПартия.АналитикаУчетаПоПартнерам = Приход.АналитикаУчетаПоПартнерам;
	КонецЕсли;
	
	Если РасчетнаяПартия.ТипЗаписи <> Перечисления.ТипыЗаписейПартий.Перемещение
		И РасчетнаяПартия.ТипЗаписи <> Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно
		И РасчетнаяПартия.ТипЗаписи <> Перечисления.ТипыЗаписейПартий.ПеремещениеАвто Тогда
		РасчетнаяПартия.ВидДеятельностиНДС = Приход.ВидДеятельностиНДС;
	Иначе
		Если ЗначениеЗаполнено(Приход.КорАналитикаФинансовогоУчета) Тогда
			РасчетнаяПартия.АналитикаФинансовогоУчета = Приход.КорАналитикаФинансовогоУчета;
		Иначе
			РасчетнаяПартия.АналитикаФинансовогоУчета = Расход.АналитикаФинансовогоУчета;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.АналитикаФинансовогоУчета)
			И РасчетнаяПартия.АналитикаФинансовогоУчета <> Неопределено Тогда
			РасчетнаяПартия.АналитикаФинансовогоУчета = Неопределено;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.КорАналитикаФинансовогоУчета)
			И РасчетнаяПартия.КорАналитикаФинансовогоУчета <> Неопределено Тогда
			РасчетнаяПартия.КорАналитикаФинансовогоУчета = Неопределено;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Приход.КорВидДеятельностиНДС) Тогда
			РасчетнаяПартия.ВидДеятельностиНДС = Приход.КорВидДеятельностиНДС;
		Иначе
			РасчетнаяПартия.ВидДеятельностиНДС = Приход.ВидДеятельностиНДС;
		КонецЕсли;
	КонецЕсли;
	
	Если РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Расход
		И Не ЗначениеЗаполнено(РасчетнаяПартия.КорВидДеятельностиНДС) Тогда
		РасчетнаяПартия.КорВидДеятельностиНДС = Приход.ВидДеятельностиНДС;
	КонецЕсли;
	
	
	
	Если (ЗначениеЗаполнено(РасчетнаяПартия.КорРазделУчета)
		  ИЛИ (РасчетнаяПартия.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет
			   И РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Расход))
	 И РасчетнаяПартия.ТипЗаписи <> Перечисления.ТипыЗаписейПартий.Выпуск
	 И РасчетнаяПартия.КорПартия <> РасчетнаяПартия.Регистратор Тогда
	 
		// Сработает для расходных движений документа, удовлетворяющего следующим условиям:
		// - документ формирует движения и по приходу и по расходу
		// - его приходное движение не является "партиеобразующим"
		// Пример такого документа - перемещение товаров между складами.
		Если (ПараметрыРасчета.ОрганизацииСФИФОСкользящая.Найти(РасчетнаяПартия.Организация) = Неопределено
				И РасчетнаяПартия.КорРазделУчета <> Перечисления.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		 ИЛИ (ЗначениеЗаполнено(РасчетнаяПартия.КорОрганизация)
			  И ПараметрыРасчета.ОрганизацииСФИФОСкользящая.Найти(РасчетнаяПартия.КорОрганизация) = Неопределено) Тогда
			РасчетнаяПартия.КорПартия 				= Неопределено;
			РасчетнаяПартия.КорАналитикаУчетаПартий = Неопределено;
		Иначе
			РасчетнаяПартия.КорПартия 				= Приход.Партия;
			РасчетнаяПартия.КорАналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.КорВидЗапасов) Тогда
			РасчетнаяПартия.КорВидЗапасов = Приход.ВидЗапасов;
		КонецЕсли;
		
	КонецЕсли;
	
	// Расчетная партия заполняется на наибольшее общее вычитаемое
	Если Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходыБезПартии
		ИЛИ Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходыСПартией Тогда
		КоличествоСписания = Мин(Расход.Знаменатель, Приход.Количество);
		ПриходБазис = ?(Приход.Количество <> 0, КоличествоСписания / Приход.Количество, 0);
		РасходБазис = ?(Расход.Знаменатель <> 0, КоличествоСписания / Расход.Знаменатель, 0);
	ИначеЕсли Приход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск Тогда
		КоличествоСписания = Мин(Приход.Знаменатель, Расход.Количество);
		ПриходБазис = ?(Приход.Знаменатель <> 0, КоличествоСписания / Приход.Знаменатель, 0);
		РасходБазис = ?(Расход.Количество <> 0, КоличествоСписания / Расход.Количество, 0);
	Иначе
		КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
		ПриходБазис = ?(Приход.Количество <> 0, КоличествоСписания / Приход.Количество, 0);
		РасходБазис = ?(Расход.Количество <> 0, КоличествоСписания / Расход.Количество, 0);
	КонецЕсли;
	
	// Заполняем показатели расчетной партии
	Если Приход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Трудозатраты Тогда
		РасчетнаяПартия.Количество = 0;	
	ИначеЕсли Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходыБезПартии
		ИЛИ Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходыСПартией Тогда
		РасчетнаяПартия.Количество = 0;
	ИначеЕсли Приход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск Тогда
		РасчетнаяПартия.Количество = Окр(ПриходБазис * Приход.Количество, 3);
	Иначе
		РасчетнаяПартия.Количество = Окр(КоличествоСписания, 3);
	КонецЕсли;
	
	Если Приход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Трудозатраты Тогда
		Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
			РасчетнаяПартия[ИмяРесурса.Ключ] = Приход[ИмяРесурса.Ключ];
		КонецЦикла;
	Иначе
		Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
			РасчетнаяПартия[ИмяРесурса.Ключ] = Окр(РасходБазис * РасчетнаяПартия[ИмяРесурса.Ключ], 2);
		КонецЦикла;
	КонецЕсли;
	
	// Корректируем базу расчета в расходе
	Если РасчетнаяПартия.ТипЗаписи <> Перечисления.ТипыЗаписейПартий.Выпуск Тогда
	
		Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
		Если Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходыБезПартии
			ИЛИ Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходыСПартией Тогда
			Расход.Знаменатель = Расход.Знаменатель - КоличествоСписания;
		КонецЕсли;
		
		Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
			Расход[ИмяРесурса.Ключ] = Расход[ИмяРесурса.Ключ] - РасчетнаяПартия[ИмяРесурса.Ключ];
		КонецЦикла;
		
	КонецЕсли;
	
	// Корректируем базу расчета в приходе
	Если НЕ (Приход.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет
			И Приход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Потребление) Тогда
		
		Если Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходыБезПартии
			 ИЛИ Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходыСПартией Тогда
			Приход.Количество = Приход.Количество - КоличествоСписания;
		Иначе
			Приход.Количество = Приход.Количество - РасчетнаяПартия.Количество;
		КонецЕсли;
		
		Если Приход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Трудозатраты Тогда
			Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
				Приход[ИмяРесурса.Ключ] = Приход[ИмяРесурса.Ключ] - РасчетнаяПартия[ИмяРесурса.Ключ];
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.РазделУчета) Тогда
		РасчетнаяПартия.РазделУчета = Приход.РазделУчета;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.ВидЗапасов) И ЗначениеЗаполнено(Приход.ВидЗапасов) Тогда
		РасчетнаяПартия.ВидЗапасов = Приход.ВидЗапасов;
	КонецЕсли;
	
	Если РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Выпуск Тогда
		Если Приход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Трудозатраты Тогда
			РасчетнаяПартия.РазделУчета = Расход.КорРазделУчета;
			РасчетнаяПартия.ВидЗапасов = Расход.КорВидЗапасов;
			РасчетнаяПартия.АналитикаУчетаНоменклатуры = Расход.КорАналитикаУчетаНоменклатуры;
			РасчетнаяПартия.Партия = Расход.КорПартия;
			РасчетнаяПартия.АналитикаУчетаПартий = Расход.КорАналитикаУчетаПартий;
			РасчетнаяПартия.АналитикаФинансовогоУчета = Расход.КорАналитикаФинансовогоУчета;
			РасчетнаяПартия.ВидДеятельностиНДС = Расход.КорВидДеятельностиНДС;
			РасчетнаяПартия.КорВидЗапасов = Неопределено;
			РасчетнаяПартия.КорАналитикаУчетаНоменклатуры = Неопределено;
			РасчетнаяПартия.КорАналитикаФинансовогоУчета = Неопределено;
			РасчетнаяПартия.КорРазделУчета = Неопределено;
			РасчетнаяПартия.АналитикаУчетаПартийПроизводства = Неопределено;
			РасчетнаяПартия.ДокументДвижения = Приход.ДокументДвижения;
			РасчетнаяПартия.ГруппаПродукции = Приход.ГруппаПродукции;
		Иначе
			РасчетнаяПартия.АналитикаУчетаНоменклатуры = Приход.АналитикаУчетаНоменклатуры;
			РасчетнаяПартия.Партия = Приход.Партия;
			РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
		КонецЕсли;
		РасчетнаяПартия.Подразделение = Приход.Подразделение;
		РасчетнаяПартия.СтатьяКалькуляции = Приход.СтатьяКалькуляции;
		РасчетнаяПартия.ИдентификаторСтроки = Приход.ИдентификаторСтроки;
		РасчетнаяПартия.КодСтроки = Приход.КодСтроки;
	КонецЕсли;
	
	Если РасчетнаяПартия.ТипЗаписи <> Перечисления.ТипыЗаписейПартий.Выпуск Тогда
		Если РасчетнаяПартия.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство
			ИЛИ РасчетнаяПартия.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты Тогда
			Если Приход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку Тогда
				РасчетнаяПартия.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку;
			ИначеЕсли Приход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение Тогда
				РасчетнаяПартия.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.КорАналитикаУчетаНоменклатуры)
			И (РасчетнаяПартия.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку
				ИЛИ РасчетнаяПартия.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение) Тогда
			РасчетнаяПартия.КорРазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка();
		ИначеЕсли ЗначениеЗаполнено(РасчетнаяПартия.КорАналитикаУчетаНоменклатуры)
			И Не РасчетнаяПартия.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзПроизводства
			И (РасчетнаяПартия.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку
				ИЛИ РасчетнаяПартия.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение) Тогда
			РасчетнаяПартия.КорРазделУчета = РасчетнаяПартия.РазделУчета;
		КонецЕсли;
	КонецЕсли;
	
	// По результатам партионной идентификации определяем завершенность расчета
	РасчетнаяПартия.РасчетЗавершен = Приход.РасчетЗавершен;
	
	// Отклонения в стоимости товаров
	Если Расход.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки
	 ИЛИ Расход.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки Тогда
	 
		Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
			СуммовыеРесурсы[ИмяРесурса.Ключ] = Окр(ПриходБазис * Приход[ИмяРесурса.Ключ], 2);
			Приход[ИмяРесурса.Ключ] = Приход[ИмяРесурса.Ключ] - СуммовыеРесурсы[ИмяРесурса.Ключ];
		КонецЦикла;
		
		// Отклонения между фактической и договорной стоимостью.
		Отклонения = ДобавитьРасчетнуюПартию(ПараметрыРасчета);
		ЗаполнитьЗначенияСвойств(Отклонения, РасчетнаяПартия);
		
		Отклонения.ВидДвижения = ВидДвиженияНакопления.Расход;
		Отклонения.Количество  = 0;
		Отклонения.ТипЗаписи   = Перечисления.ТипыЗаписейПартий.ОтклонениеВСтоимости;
		
		Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
			Отклонения[ИмяРесурса.Ключ] = РасчетнаяПартия[ИмяРесурса.Ключ] - СуммовыеРесурсы[ИмяРесурса.Ключ];
		КонецЦикла;
		
		// Отклонения отражаем как доп. расходы.
		Если ЗначениеЗаполнено(Приход.КорРазделУчета) Тогда
			
			ОтклоненияНаСклад = ДобавитьРасчетнуюПартию(ПараметрыРасчета);
			ЗаполнитьЗначенияСвойств(ОтклоненияНаСклад, Отклонения,
				"Период, Регистратор, ВидЗапасов, Организация, АналитикаФинансовогоУчета, ВидДеятельностиНДС, ХозяйственнаяОперация, ДокументИсточник,
				|НДСРегл, НДСУпр, РасчетЗавершен");
			
			Если ПараметрыРасчета.ОрганизацииСФИФОСкользящая.Найти(Отклонения.Организация) <> Неопределено Тогда
				ОтклоненияНаСклад.Партия 				 = Отклонения.Партия;
				ОтклоненияНаСклад.АналитикаУчетаПартий   = Отклонения.АналитикаУчетаПартий;
			КонецЕсли;
			
			ОтклоненияНаСклад.АналитикаУчетаНоменклатуры = Приход.КорАналитикаУчетаНоменклатуры;
			ОтклоненияНаСклад.РазделУчета 				 = Приход.КорРазделУчета;
			ОтклоненияНаСклад.ВидЗапасов 				 = Приход.КорВидЗапасов;
			ОтклоненияНаСклад.ТипЗаписи 				 = Перечисления.ТипыЗаписейПартий.ОтклонениеВСтоимости;
			ОтклоненияНаСклад.ДопРасходы 				 = Отклонения.Стоимость;
			ОтклоненияНаСклад.ДопРасходыБезНДС 			 = Отклонения.СтоимостьБезНДС;
			ОтклоненияНаСклад.ДопРасходыУпр 			 = Отклонения.СтоимостьУпр;
			ОтклоненияНаСклад.ДопРасходыРегл 			 = Отклонения.СтоимостьРегл;
			ОтклоненияНаСклад.АналитикаРасходов 		 = Приход.Партия;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЭтапа8а_ЗаполнениеПартийВРегистреВыручкаИСебестоимостьПродаж

// Инициализация данных

Функция ПоляПотребленийПартииВыручки(ПараметрыРасчета)
	
	Возврат "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета, АналитикаУчетаПоПартнерам, ЗаказКлиента";
	
КонецФункции

Функция ОписаниеЦепочекПартийВыручки(ПараметрыРасчета)
	
	ОписаниеЦепочек = Новый Соответствие;
	ПоляПотреблений	= ПоляПотребленийПартииВыручки(ПараметрыРасчета);
	
	// Потребление <- (Партия)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.Потребление, ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.Партия,		ПоляПотреблений);
	
	// Дополнение <- (<без источников - для формирования записей по данным запроса>)
	ДобавитьОписаниеДополнения(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Дополнение);
	
	Возврат ОписаниеЦепочек;
	
КонецФункции

Функция ОписаниеДвиженийПартийВыручки(ПараметрыРасчета)
	
	КолонкиТаблицыРаспределения = ТаблицаДляРаспределенияПартийВыручки(ПараметрыРасчета).Колонки;
	
	ОписаниеДвижений = ОписаниеДвижений(
		"ПартииВыручкаИСебестоимостьПродаж", // Контекст
		Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя, // ИмяРегистра
		ПереченьПолей(КолонкиТаблицыРаспределения), // ПоляРасчета
		ПоляПотребленийПартииВыручки(ПараметрыРасчета), // КлючиСравнения
		"Количество, Стоимость, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС,
		    |СуммаВыручки, СуммаВыручкиБезНДС, СуммаВыручкиРегл, СуммаВыручкиСНДСРегл, СуммаРучнойСкидки, СуммаАвтоматическойСкидки,
			|СтоимостьРегл, ПостояннаяРазница, ВременнаяРазница,
			|СтоимостьЗабалансовая, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
			|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС,
			|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр,
			|СтоимостьЗабалансоваяРегл, ДопРасходыРегл, ТрудозатратыРегл,
			|ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл,
			|СуммаВВалютеВзаиморасчетов, СуммаБезНДСВВалютеВзаиморасчетов, СуммаВВалютеДокумента, СуммаБезНДСВВалютеДокумента", // Показатели
		"Количество", // БазисПрихода
		"Количество", // БазисРасхода
		"", // КлючРасхода
		"Регистратор", // ПолеПорядка
		"ВидДеятельностиНДС, АналитикаФинансовогоУчета", // ПоляСортировки
		Истина); // СортировкаПоУсловию
		
	Возврат ОписаниеДвижений;
	
КонецФункции

Функция ОписаниеНезаписываемыхПартийВыручки(ПараметрыРасчета)
	
	НезаписываемыеТипыЗаписей = Новый Соответствие;
	НезаписываемыеТипыЗаписей.Вставить(Перечисления.ТипыЗаписейПартий.Партия, Истина);
	
	НезаписываемыеРазделы = Новый Соответствие;
	
	Возврат ОписаниеНезаписываемыхДанных(Истина, НезаписываемыеТипыЗаписей, НезаписываемыеРазделы);
	
КонецФункции

Функция ТаблицаДляРаспределенияПартийВыручки(ПараметрыРасчета)
	
	Возврат ТаблицаДляРаспределенияПартий(ПараметрыРасчета,	ТекстОписаниеДанныхПартийВыручки());
	
КонецФункции

// Выборка данных

Процедура ПолучитьДанныеДляПартийВыручки(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ""
		// выборка данных
		+ ТекстОписаниеДанныхПартийВыручки() // вт Данные
		+ ТекстОбъединениеЗапросов() + ТекстПартииДляВыручки()
		+ ТекстОбъединениеЗапросов() + ТекстВыручкаБезПартий()
		+ ТекстОбъединениеЗапросов() + ТекстВыручкаСохраняемыеДвижения()
		+ "";
	
	ВыбиратьДанныеДляРасчетаВоВременнуюТаблицу(Запрос);
	
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "Данные");
	
	Запрос.Выполнить();
	
	// Нумерация строк ВТ Данные
	ПараметрыНумерации = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		"АналитикаУчетаНоменклатуры", // разделитель
		ПараметрыРасчета.РаспределениеПартий.ОписаниеДвижений.Показатели, // ресурсы
		ПоляПотребленийПартииВыручки(ПараметрыРасчета)); // порядок
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"Данные");
	
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... описания данных

Функция ТекстОписаниеДанныхПартийВыручки()
	Возврат 
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(80)) 						  КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПустаяСсылка) КАК ТипЗаписи,
		|	ЛОЖЬ 												  КАК РасчетЗавершен,
		|	Т.Период											  КАК Период,
		|	Т.Регистратор										  КАК Регистратор,
		|
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)		  КАК Организация,
		|   Т.АналитикаУчетаНоменклатуры,
		|   Т.ЗаказКлиента,
		|   Т.АналитикаУчетаПоПартнерам,
		|   Т.Подразделение,
		|   Т.ТипЗапасов,
		|   Т.ВидЗапасов,
		|   Т.РазделУчета,
		|   Т.Партия,
		|   Т.АналитикаУчетаПартий,
		|   Т.АналитикаФинансовогоУчета,
		|   Т.ВидДеятельностиНДС,
		|   Т.Менеджер,
		|   Т.Склад,
		|   Т.Соглашение,
		|   Т.Договор,
		|   Т.ХозяйственнаяОперация,
		|   Т.АналитикаУчетаНаборов,
		|   Т.НаправлениеДеятельностиКонтрагента,
		|   Т.НаправлениеДеятельностиНоменклатуры,
		|
		|   Т.Количество,
		|   Т.СуммаВыручки,
		|   Т.СуммаВыручкиБезНДС,
		|   Т.Стоимость,
		|   Т.СтоимостьБезНДС,
		|   Т.ДопРасходы,
		|   Т.ДопРасходыБезНДС,
		|   Т.СтоимостьРегл,
		|   Т.СуммаВыручкиРегл,
		|   Т.ПостояннаяРазница,
		|   Т.ВременнаяРазница,
		|   Т.СуммаВыручкиСНДСРегл,
		|   Т.СуммаРучнойСкидки,
		|   Т.СуммаАвтоматическойСкидки,
		|   Т.СтоимостьЗабалансовая,
		|   Т.Трудозатраты,
		|   Т.ПостатейныеПостоянныеСНДС,
		|   Т.ПостатейныеПеременныеСНДС,
		|   Т.ПостатейныеПостоянныеБезНДС,
		|   Т.ПостатейныеПеременныеБезНДС,
		|   Т.СтоимостьЗабалансоваяРегл,
		|   Т.ДопРасходыРегл,
		|   Т.ТрудозатратыРегл,
		|   Т.ПостатейныеПостоянныеРегл,
		|   Т.ПостатейныеПеременныеРегл,
		|   Т.СтоимостьУпр,
		|   Т.ДопРасходыУпр,
		|   Т.ТрудозатратыУпр,
		|   Т.ПостатейныеПостоянныеУпр,
		|   Т.ПостатейныеПеременныеУпр,
		|
		|   Т.НалогообложениеНДС,
		|   Т.ВалютаВзаиморасчетов,
		|   Т.СуммаВВалютеВзаиморасчетов,
		|   Т.СуммаБезНДСВВалютеВзаиморасчетов,
		|   Т.ВалютаДокумента,
		|   Т.СуммаВВалютеДокумента,
		|   Т.СуммаБезНДСВВалютеДокумента,
		|   Т.ИсточникГФУНоменклатуры,
		|   Т.ИсточникГФУРасчетов,
		|   Т.ДокументДвижения
		|//ВоВременнуюТаблицу
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК Т
		|";
КонецФункции

// ... формирования временные таблиц

// ... выборки данных

Функция ТекстПартииДляВыручки()
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстПартииДляВыручки"" 						  	  КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)  	  КАК ТипЗаписи,
		|	ИСТИНА 												  КАК РасчетЗавершен,
		|	Т.Период											  КАК Период,
		|	Т.Регистратор										  КАК Регистратор,
		|
		|   Т.Организация,
		|   Т.АналитикаУчетаНоменклатуры,
		|   Т.ЗаказКлиента,
		|   Т.АналитикаУчетаПоПартнерам,
		|   НЕОПРЕДЕЛЕНО КАК Подразделение,
		|   НЕОПРЕДЕЛЕНО КАК ТипЗапасов,
		|   Т.ВидЗапасов,
		|   Т.РазделУчета,
		|   Т.Партия,
		|   Т.АналитикаУчетаПартий,
		|   Т.АналитикаФинансовогоУчета,
		|   Т.ВидДеятельностиНДС,
		|   НЕОПРЕДЕЛЕНО КАК Менеджер,
		|   НЕОПРЕДЕЛЕНО КАК Склад,
		|   НЕОПРЕДЕЛЕНО КАК Соглашение,
		|   НЕОПРЕДЕЛЕНО КАК Договор,
		|   НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|   НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНаборов,
		|   НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКонтрагента,
		|   НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиНоменклатуры,
		|
		|   Т.Количество,
		|   0 КАК СуммаВыручки,
		|   0 КАК СуммаВыручкиБезНДС,
		|   0 КАК Стоимость,
		|   0 КАК СтоимостьБезНДС,
		|   0 КАК ДопРасходы,
		|   0 КАК ДопРасходыБезНДС,
		|   0 КАК СтоимостьРегл,
		|   0 КАК СуммаВыручкиРегл,
		|   0 КАК ПостояннаяРазница,
		|   0 КАК ВременнаяРазница,
		|   0 КАК СуммаВыручкиСНДСРегл,
		|   0 КАК СуммаРучнойСкидки,
		|   0 КАК СуммаАвтоматическойСкидки,
		|   0 КАК СтоимостьЗабалансовая,
		|   0 КАК Трудозатраты,
		|   0 КАК ПостатейныеПостоянныеСНДС,
		|   0 КАК ПостатейныеПеременныеСНДС,
		|   0 КАК ПостатейныеПостоянныеБезНДС,
		|   0 КАК ПостатейныеПеременныеБезНДС,
		|   0 КАК СтоимостьЗабалансоваяРегл,
		|   0 КАК ДопРасходыРегл,
		|   0 КАК ТрудозатратыРегл,
		|   0 КАК ПостатейныеПостоянныеРегл,
		|   0 КАК ПостатейныеПеременныеРегл,
		|   0 КАК СтоимостьУпр,
		|   0 КАК ДопРасходыУпр,
		|   0 КАК ТрудозатратыУпр,
		|   0 КАК ПостатейныеПостоянныеУпр,
		|   0 КАК ПостатейныеПеременныеУпр,
		|
		|   НЕОПРЕДЕЛЕНО КАК НалогообложениеНДС,
		|   НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
		|   0 КАК СуммаВВалютеВзаиморасчетов,
		|   0 КАК СуммаБезНДСВВалютеВзаиморасчетов,
		|   НЕОПРЕДЕЛЕНО КАК ВалютаДокумента,
		|   0 КАК СуммаВВалютеДокумента,
		|   0 КАК СуммаБезНДСВВалютеДокумента,
		|   НЕОПРЕДЕЛЕНО КАК ИсточникГФУНоменклатуры,
		|   НЕОПРЕДЕЛЕНО КАК ИсточникГФУРасчетов,
		|   НЕОПРЕДЕЛЕНО КАК ДокументДвижения
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Т
		|ГДЕ
		|	Т.Количество <> 0
		|";
КонецФункции

Функция ТекстВыручкаБезПартий()
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстВыручкаБезПартий"" 						  	  КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)  КАК ТипЗаписи,
		|	ЛОЖЬ 												  КАК РасчетЗавершен,
		|	Т.Период											  КАК Период,
		|	Т.Регистратор										  КАК Регистратор,
		|
		|	АналитикаПартнеров.Организация 						  КАК Организация,
		|   Т.АналитикаУчетаНоменклатуры,
		|   Т.ЗаказКлиента,
		|   Т.АналитикаУчетаПоПартнерам,
		|   Т.Подразделение,
		|   Т.ТипЗапасов,
		|   Т.ВидЗапасов,
		|   Т.РазделУчета,
		|   НЕОПРЕДЕЛЕНО КАК Партия,
		|   НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|   НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
		|   НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
		|   Т.Менеджер,
		|   Т.Склад,
		|   Т.Соглашение,
		|   Т.Договор,
		|   Т.ХозяйственнаяОперация,
		|   Т.АналитикаУчетаНаборов,
		|   Т.НаправлениеДеятельностиКонтрагента,
		|   Т.НаправлениеДеятельностиНоменклатуры,
		|
		|   Т.Количество,
		|   Т.СуммаВыручки,
		|   Т.СуммаВыручкиБезНДС,
		|   Т.Стоимость,
		|   Т.СтоимостьБезНДС,
		|   Т.ДопРасходы,
		|   Т.ДопРасходыБезНДС,
		|   Т.СтоимостьРегл,
		|   Т.СуммаВыручкиРегл,
		|   Т.ПостояннаяРазница,
		|   Т.ВременнаяРазница,
		|   Т.СуммаВыручкиСНДСРегл,
		|   Т.СуммаРучнойСкидки,
		|   Т.СуммаАвтоматическойСкидки,
		|   Т.СтоимостьЗабалансовая,
		|   Т.Трудозатраты,
		|   Т.ПостатейныеПостоянныеСНДС,
		|   Т.ПостатейныеПеременныеСНДС,
		|   Т.ПостатейныеПостоянныеБезНДС,
		|   Т.ПостатейныеПеременныеБезНДС,
		|   Т.СтоимостьЗабалансоваяРегл,
		|   Т.ДопРасходыРегл,
		|   Т.ТрудозатратыРегл,
		|   Т.ПостатейныеПостоянныеРегл,
		|   Т.ПостатейныеПеременныеРегл,
		|   Т.СтоимостьУпр,
		|   Т.ДопРасходыУпр,
		|   Т.ТрудозатратыУпр,
		|   Т.ПостатейныеПостоянныеУпр,
		|   Т.ПостатейныеПеременныеУпр,
		|
		|   Т.НалогообложениеНДС,
		|   Т.ВалютаВзаиморасчетов,
		|   Т.СуммаВВалютеВзаиморасчетов,
		|   Т.СуммаБезНДСВВалютеВзаиморасчетов,
		|   Т.ВалютаДокумента,
		|   Т.СуммаВВалютеДокумента,
		|   Т.СуммаБезНДСВВалютеДокумента,
		|   Т.ИсточникГФУНоменклатуры,
		|   Т.ИсточникГФУРасчетов,
		|   Т.ДокументДвижения
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборАналитикаПоПартнерам КАК АналитикаПартнеров
		|			ПО Т.АналитикаУчетаПоПартнерам = АналитикаПартнеров.КлючАналитики
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|				ПО АналитикаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
		|			ПО Т.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
		|ГДЕ
		|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И НЕ Т.Регистратор ССЫЛКА Документ.ВводОстатков
		|	И СпрНоменклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|	И Т.Активность
		|	И НЕ Т.РасчетПартий
		|	И НЕ Т.РасчетСебестоимости
		|";
КонецФункции

Функция ТекстВыручкаСохраняемыеДвижения()
	Возврат 
		"ВЫБРАТЬ
		|	""ТекстВыручкаСохраняемыеДвижения"" 				  КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)   КАК ТипЗаписи,
		|	ИСТИНА 												  КАК РасчетЗавершен,
		|	Т.Период											  КАК Период,
		|	Т.Регистратор										  КАК Регистратор,
		|
		|	АналитикаПартнеров.Организация 						  КАК Организация,
		|   Т.АналитикаУчетаНоменклатуры,
		|   Т.ЗаказКлиента,
		|   Т.АналитикаУчетаПоПартнерам,
		|   Т.Подразделение,
		|   Т.ТипЗапасов,
		|   Т.ВидЗапасов,
		|   Т.РазделУчета,
		|   Т.Партия,
		|   Т.АналитикаУчетаПартий,
		|   Т.АналитикаФинансовогоУчета,
		|   Т.ВидДеятельностиНДС,
		|   Т.Менеджер,
		|   Т.Склад,
		|   Т.Соглашение,
		|   Т.Договор,
		|   Т.ХозяйственнаяОперация,
		|   Т.АналитикаУчетаНаборов,
		|   Т.НаправлениеДеятельностиКонтрагента,
		|   Т.НаправлениеДеятельностиНоменклатуры,
		|
		|   Т.Количество,
		|   Т.СуммаВыручки,
		|   Т.СуммаВыручкиБезНДС,
		|   Т.Стоимость,
		|   Т.СтоимостьБезНДС,
		|   Т.ДопРасходы,
		|   Т.ДопРасходыБезНДС,
		|   Т.СтоимостьРегл,
		|   Т.СуммаВыручкиРегл,
		|   Т.ПостояннаяРазница,
		|   Т.ВременнаяРазница,
		|   Т.СуммаВыручкиСНДСРегл,
		|   Т.СуммаРучнойСкидки,
		|   Т.СуммаАвтоматическойСкидки,
		|   Т.СтоимостьЗабалансовая,
		|   Т.Трудозатраты,
		|   Т.ПостатейныеПостоянныеСНДС,
		|   Т.ПостатейныеПеременныеСНДС,
		|   Т.ПостатейныеПостоянныеБезНДС,
		|   Т.ПостатейныеПеременныеБезНДС,
		|   Т.СтоимостьЗабалансоваяРегл,
		|   Т.ДопРасходыРегл,
		|   Т.ТрудозатратыРегл,
		|   Т.ПостатейныеПостоянныеРегл,
		|   Т.ПостатейныеПеременныеРегл,
		|   Т.СтоимостьУпр,
		|   Т.ДопРасходыУпр,
		|   Т.ТрудозатратыУпр,
		|   Т.ПостатейныеПостоянныеУпр,
		|   Т.ПостатейныеПеременныеУпр,
		|
		|   Т.НалогообложениеНДС,
		|   Т.ВалютаВзаиморасчетов,
		|   Т.СуммаВВалютеВзаиморасчетов,
		|   Т.СуммаБезНДСВВалютеВзаиморасчетов,
		|   Т.ВалютаДокумента,
		|   Т.СуммаВВалютеДокумента,
		|   Т.СуммаБезНДСВВалютеДокумента,
		|   Т.ИсточникГФУНоменклатуры,
		|   Т.ИсточникГФУРасчетов,
		|   Т.ДокументДвижения
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборАналитикаПоПартнерам КАК АналитикаПартнеров
		|			ПО Т.АналитикаУчетаПоПартнерам = АналитикаПартнеров.КлючАналитики
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|				ПО АналитикаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
		|			ПО Т.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
		|ГДЕ
		|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И (СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|		ИЛИ Т.Регистратор ССЫЛКА Документ.ВводОстатков)
		|	И Т.Активность
		|	И НЕ Т.РасчетПартий
		|	И НЕ Т.РасчетСебестоимости
		|";
КонецФункции

// Заполнение расчетной партии

Процедура ЗаполнитьРасчетнуюПартиюВыручкиИСебестоимостьПродаж(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход)
	
	КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
	
	Если КоличествоСписания = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СуммовыеРесурсы = Новый Структура(
	"Стоимость, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС,
    |СуммаВыручки, СуммаВыручкиБезНДС, СуммаВыручкиРегл, СуммаВыручкиСНДСРегл, СуммаРучнойСкидки, СуммаАвтоматическойСкидки,
	|СтоимостьРегл, ПостояннаяРазница, ВременнаяРазница,
	|СтоимостьЗабалансовая, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
	|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС,
	|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр,
	|СтоимостьЗабалансоваяРегл, ДопРасходыРегл, ТрудозатратыРегл,
	|ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл,
	|СуммаВВалютеВзаиморасчетов, СуммаБезНДСВВалютеВзаиморасчетов, СуммаВВалютеДокумента, СуммаБезНДСВВалютеДокумента");
	
	// Заполняем расчетную партию по расходной партии-основании
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	//	Заполняем партионную идентификацию в расчетной партии
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход, "Партия, АналитикаУчетаПартий, ВидДеятельностиНДС, АналитикаФинансовогоУчета");
	
	// Расчетная партия заполняется на наибольшее общее вычитаемое
	РасходБазис = ?(Расход.Количество <> 0, КоличествоСписания / Расход.Количество, 0);
	
	// Заполняем показатели расчетной партии
	РасчетнаяПартия.Количество = КоличествоСписания;
	
	Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
		РасчетнаяПартия[ИмяРесурса.Ключ] = Окр(РасходБазис * РасчетнаяПартия[ИмяРесурса.Ключ], 2);
		Расход[ИмяРесурса.Ключ] = Расход[ИмяРесурса.Ключ] - РасчетнаяПартия[ИмяРесурса.Ключ];
	КонецЦикла;
	
	// Корректируем базу расчета в приходе и расходе
	Приход.Количество = Приход.Количество - РасчетнаяПартия.Количество;
	Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
	
	РасчетнаяПартия.РасчетЗавершен = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЭтапа10_РаспределениеДопРасходовМеждуПартиямиИТоварами

// Выборка данных и формирование движений

Функция ПолучитьДанныеДляДопРасходов(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	// Определяем базу распределения прочих расходов на заказы поставщикам и заказы перемещений,
	// т.е. распределяем выполненные строки заказов на поступления партий - указываем заказ в партии.
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор, Номенклатура, Характеристика, Склад, Приоритет
		|";
	
	Запрос.Текст = ""
		// подготовка временных таблиц
		+ ТекстНачальныеОстаткиПартийПрочихРасходов() // вт НачальныеОстаткиРасходов
		+ ТекстРазделениеЗапросов() + ТекстТаможенныеДекларацииИПоступления() // вт Декларации, КоличествоДеклараций
		+ ТекстРазделениеЗапросов() + ТекстАналитикиРасходовВсе() // вт АналитикиРасходовВсе
		+ ТекстРазделениеЗапросов()	+ ТекстЗаказыИзАналитикРасходов() // вт ЗаказыИзАналитикРасходов, ПоступленияИзАналитикРасходов, ПоступленияИЗаказыИзАналитикРасходов
		+ ТекстРазделениеЗапросов()
		// выборка данных
		+ ТекстПоступившиеЗаказы()
		+ ТекстОбъединениеЗапросов() + ТекстПриходыПоступленийПоЗаказамСебестоимости()
		+ ТекстСортировка;
	
	ДанныеРасчетаЗаказов = Запрос.Выполнить().Выгрузить();
	
	РасчетныеПартииПоЗаказам = Новый ТаблицаЗначений;
	ПоляРасчетаЗаказов = СкопироватьКолонки(ДанныеРасчетаЗаказов.Колонки, РасчетныеПартииПоЗаказам.Колонки);
	
	КонтекстДвижений = ОписаниеДвижений(
		"ДопРасходы_ЗаказыПоставщикам", // Контекст
		"", // ИмяРегистра
		ПоляРасчетаЗаказов, // ПоляРасчета
		"Номенклатура, Регистратор, Характеристика, Назначение, Склад", // КлючиСравнения
		"Количество, Стоимость", // Показатели
		"Количество", // БазисПрихода
		"Количество", // БазисРасхода
		"Заказ", // КлючРасхода
		"Период"); // ПолеПорядка
	
	// Заполнение таблицы РасчетныеПартииПоЗаказам
	РаспределитьПриходыНаРасходы(ПараметрыРасчета, КонтекстДвижений, ДанныеРасчетаЗаказов, РасчетныеПартииПоЗаказам);
	ДанныеРасчетаЗаказов = Неопределено;
	
	// Получаем данные для расчета списания партий прочих расходов и прихода партий расходов на с/с товаров
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Организация, Приоритет, ВидДвижения, Период, Регистратор";

	Запрос.Текст = ""
		// подготовка временных таблиц
		+ ТекстПартииПоЗаказам() // вт ПартииПоЗаказам
		+ ТекстРазделениеЗапросов()	+ ТекстРегистраторыПрочих() // вт РегистраторыПрочих
		+ ТекстРазделениеЗапросов()	+ ТекстПериодыПартийПрочих() // вт ПериодыПартийПрочих
		+ ТекстРазделениеЗапросов()	+ ТекстАналитикиРасходовПрошлыеПоступления() // вт АналитикиРасходовПрошлыеПоступления
		+ ТекстРазделениеЗапросов()	+ ТекстАналитикиПрошлыхПоступленийТоваров() // вт АналитикиПрошлыхПоступлений
		+ ТекстРазделениеЗапросов()	+ ТекстПрошлыеВыбытияТоваров() // вт ПрошлыеВыбытияТоваров
		+ ТекстРазделениеЗапросов()	+ ТекстПрошлыеПоступления() // вт ПрошлыеПоступления
		+ ТекстРазделениеЗапросов()	+ ОстаткиПрошлыхПоступлений() // вт ОстаткиПрошлыхПоступлений
		+ ТекстРазделениеЗапросов()
		// выборка данных
		+ ТекстОписаниеДанныхДляПартийПрочих()
		+ ТекстОбъединениеЗапросов() + ТекстОстаткиПартийПрочих()
		+ ТекстОбъединениеЗапросов() + ТекстПриходыПартийПрочих()
		+ ТекстОбъединениеЗапросов() + ТекстБазисОстаткиСебестоимость()
		+ ТекстОбъединениеЗапросов() + ТекстБазисПриходыСебестоимость()
		+ ТекстОбъединениеЗапросов() + ТекстБазисПеремещенияПоСкладуСебестоимость()
		+ ТекстОбъединениеЗапросов() + ТекстБазисКорректировкиПоступлений()
		+ ТекстОбъединениеЗапросов() + ТекстБазисПередачиТоваровСебестоимость()
		+ ТекстОбъединениеЗапросов() + ТекстБазисПеремещенияПоступленияСебестоимость()
		+ ТекстОбъединениеЗапросов() + ТекстБазисПрошлыеПриходыТоваровСебестоимость()
		+ ТекстОбъединениеЗапросов() + ТекстБазисЗаказы()
		+ ТекстОбъединениеЗапросов() + ТекстБазисУслуги()
		+ ТекстОбъединениеЗапросов() + ТекстБазисПартииПрочихРасходов()
		+ ТекстОбъединениеЗапросов() + ТекстБазисПрочиеАктивыПассивы()
		+ ТекстОбъединениеЗапросов() + ТекстБазисПрошлыеВыбытияТоваров() // использует АналитикиПрошлыхПоступлений
		+ ТекстСортировка;
		
	Запрос.УстановитьПараметр("РасчетныеПартииПоЗаказам", РасчетныеПартииПоЗаказам);
	
	ДанныеДляРасчета = Запрос.Выполнить().Выгрузить();
	РасчетныеПартииПоЗаказам = Неопределено;
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"НачальныеОстаткиРасходов, АналитикиРасходовВсе, ЗаказыИзАналитикРасходов, ПоступленияИзАналитикРасходов,
		|Декларации, КоличествоДеклараций, ОстаткиПоступленийПоЗаказам, АналитикиРасходовПрошлыеПоступления,
		|ПоступленияИЗаказыИзАналитикРасходов, ПартииПоЗаказам, РегистраторыПрочих, ПериодыПартийПрочих,
		|АналитикиПрошлыхПоступлений, ПрошлыеВыбытияТоваров, ПрошлыеВыбытияТоваровПоНоменклатуре,
		|ПрошлыеПоступления, ОстаткиПрошлыхПоступлений");
	
	Возврат ДанныеДляРасчета;
	
КонецФункции

Функция СформироватьПартииПрочихРасходов(ПараметрыРасчета, ДанныеДляРасчета)
	
	Контекст 	= "ДопРасходы_ПартииПрочихРасходов";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя;
	
	// Шаг 0: Свертка исходных данных
	ПоляСуммирования = "Базис, Количество, Вес, Объем, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница";
	Исключения = "ЗапросИсточник";
	ПоляГруппировки = ПереченьПолей(ДанныеДляРасчета.Колонки, ПоляСуммирования + ", " + Исключения);
	ДанныеДляРасчета.Свернуть(ПоляГруппировки, ПоляСуммирования);
	
	// Кэшируем получение пустых ссылок - на множественных итерациях есть выигрыш.
	ПустыеСсылки = Новый Соответствие;
	ПропорциональноКоличеству = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству;
	ПропорциональноСебестоимости = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноСебестоимости;
	ПропорциональноВесу = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноВесу;
	ПропорциональноОбъему = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноОбъему;
	
	// Шаг 1: Рассчитываем базу распределения для каждого прихода прочих расходов с учетом налогообложения партии распределения.
	УзлыДвижений = Новый Соответствие; // [Организация, [АналитикаРасходов, [ИндексСтроки, [НалогообложениеНДС, Базис]]]]
	Ключи = Новый Массив(4); // {Организация, АналитикаРасходов, ИндексСтроки, НалогообложениеНДС}
	
	// Расчет базы по для каждой строки прихода по налогообложению каждого расхода.
	Для Каждого Движение Из ДанныеДляРасчета Цикл
		
		Ключи[0] = Движение.Организация;
		Ключи[1] = Неопределено;
		Ключи[2] = ДанныеДляРасчета.Индекс(Движение);
		Ключи[3] = Движение.НалогообложениеНДС;
		
		// Накапливаем приход партий прочих расходов для распределения по налогообложению.
		Если ЗначениеЗаполнено(Движение.СтатьяРасходов) Тогда
			Ключи[1] = Движение.АналитикаРаспределения;
			ДобавитьУзелИндекса(УзлыДвижений, Ключи, Неопределено);
			Продолжить;
		КонецЕсли;
		
		// Возвраты добавляются как положительный базис.
		Количество = ?(Движение.Количество < 0, -Движение.Количество, Движение.Количество);
		Стоимость  = ?(Движение.Стоимость < 0, -Движение.Стоимость, Движение.Стоимость);
		Вес = ?(Движение.Вес < 0., -Движение.Вес, Движение.Вес);
		Объем = ?(Движение.Объем < 0., -Движение.Объем, Движение.Объем);
		
		// Непосредственно расчет базисов по налогообложению.
		Аналитики = УзелИндекса(УзлыДвижений, Ключи);
		Если Аналитики = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Значение Из АналитикиОбсчетаПартийПрочих(Движение, ПустыеСсылки) Цикл
			ИндексыСтрок = Аналитики[Значение];
			Если ИндексыСтрок = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Для Каждого ИндексСтроки Из ИндексыСтрок Цикл
				Приход = ДанныеДляРасчета[ИндексСтроки.Ключ];
				Если Приход.ПравилоРаспределения = ПропорциональноКоличеству Тогда
					Базис = Количество;
				ИначеЕсли Приход.ПравилоРаспределения = ПропорциональноВесу Тогда
					Базис = Вес;
				ИначеЕсли Приход.ПравилоРаспределения = ПропорциональноОбъему Тогда
					Базис = Объем;	
				ИначеЕсли Приход.ПравилоРаспределения = ПропорциональноСебестоимости Тогда
					Базис = Стоимость;
				Иначе
					Продолжить;
				КонецЕсли;
				Приход.Базис = Приход.Базис + Базис;
				// Увеличим базу по налогообложению (Ключи[3]).
				Налоги = ИндексСтроки.Значение;
				ОписаниеБазы = ?(Налоги[Ключи[3]] = Неопределено, Новый Структура("Базис", 0), Налоги[Ключи[3]]);
				ОписаниеБазы.Базис = ОписаниеБазы.Базис + Базис;
				Налоги.Вставить(Ключи[3], ОписаниеБазы);
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
	// Шаг 2: создаем буфер накопления рассчитанных партий.
	РасчетныеПартии = Новый ТаблицаЗначений;
	СкопироватьКолонки(ДанныеДляРасчета.Колонки, РасчетныеПартии.Колонки);
	
	// Шаг 3: Создаем расчетные партии расходов по каждому накопленному налогообложению.
	Для Каждого Организация Из УзлыДвижений Цикл
		Для Каждого Аналитика Из Организация.Значение Цикл
			Для Каждого ИндексСтроки Из Аналитика.Значение Цикл
				Движение = ДанныеДляРасчета[ИндексСтроки.Ключ];
				Если Движение.Базис = 0 Тогда
					Продолжить;
				КонецЕсли;
				Для Каждого РаспределениеБазиса Из ИндексСтроки.Значение Цикл
					Если РаспределениеБазиса.Значение = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					РасчетнаяПартия = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию(ПараметрыРасчета, Контекст, РасчетнаяПартия, Движение, РаспределениеБазиса);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	// Шаг 4: Удаляем измененные записи ДанныеДляРасчета (партии, остатки) - они теперь лишние.
	МинимальныйИндекс = 1 - ДанныеДляРасчета.Количество();
	Для Индекс = МинимальныйИндекс По 0 Цикл
		Движение = ДанныеДляРасчета[-Индекс];
		Если УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ЭтоНепересчитываемыйТипЗаписи(Движение.ТипЗаписи) Тогда
			ДанныеДляРасчета.Удалить(-Индекс);
		КонецЕсли;
	КонецЦикла;
	
	// Шаг 5: Копируем рассчитанные партии с указанием налогообложения в ДанныеДляРасчета.
	// (эти движения понадобятся для формирования прихода в партии расходов на себестоимость)
	Для Каждого РасчетнаяПартия Из РасчетныеПартии Цикл
		
		Если УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ЭтоНепересчитываемыйТипЗаписи(РасчетнаяПартия.ТипЗаписи) Тогда
			Продолжить;
		КонецЕсли;
		
		Если РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Потребление Тогда
			Движение = ДанныеДляРасчета.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, РасчетнаяПартия);
			
			Движение.ТипЗаписи   = Перечисления.ТипыЗаписейПартий.Остаток;
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		КонецЕсли;
		
		// Сформируем движение по регистру ПартииПрочихРасходов.
		ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, РасчетнаяПартия);
		
	КонецЦикла;
	
	Возврат РасчетныеПартии;
	
КонецФункции

Функция ПолучитьДанныеПриходовПартийРасходов(ПараметрыРасчета, ДанныеДляРасчета)
	
	// кэшируем получение пустых ссылок - на множественных итерациях есть выигрыш
	ПустыеСсылки = Новый Соответствие;
	ПравилаРаспределения = Новый Массив(4);
	ПравилаРаспределения[0] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству;
	ПравилаРаспределения[1] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноСебестоимости;
	ПравилаРаспределения[2] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноВесу;
	ПравилаРаспределения[3] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноОбъему;
	
	// Шаг 1: Строим сопоставление приходов с базисом и расходов, по которым базис рассчитан
	ДанныеДляРасчета.Сортировать("Организация, НалогообложениеНДС, Приоритет, Период, Регистратор, АналитикаУчетаНоменклатуры", Новый СравнениеЗначений);
	УзлыДвижений = Новый Соответствие;
	Ключи = Новый Массив(6); // {Организация, НалогообложениеНДС, ПравилоРаспределения, АналитикаРасходов, ДокументПоступленияРасходов, НомерСтроки}
	
	// формирование упорядоченных массивов строк таблицы ДанныеДляРасчета
	Для Каждого Движение Из ДанныеДляРасчета Цикл
		
		Ключи[0] = Движение.Организация;
		Ключи[1] = Движение.НалогообложениеНДС;
		Ключи[2] = Движение.ПравилоРаспределения;
		Ключи[3] = Неопределено;
		Ключи[4] = Неопределено;
		Ключи[5] = Неопределено;
		
		// накапливаем приход партий прочих расходов для дальнейшего сопоставления
		Если ЗначениеЗаполнено(Движение.СтатьяРасходов) Тогда
			Ключи[3] = Движение.АналитикаРаспределения;
			Ключи[4] = Движение.ДокументПоступленияРасходов;
			Ключи[5] = ДанныеДляРасчета.Индекс(Движение);
			Движения = УзелИндекса(УзлыДвижений, Ключи);
			Если Движения = Неопределено Тогда
				Движения = ДобавитьУзелИндекса(УзлыДвижений, Ключи, Новый Массив);
			КонецЕсли;
			Движения.Добавить(Движение);
			Продолжить;
		КонецЕсли;
		
		// непосредственно вставка строки расхода в сопоставления по каждой аналитике
		Для Каждого Правило Из ПравилаРаспределения Цикл
			Ключи[2] = Правило;
			Аналитики = УзелИндекса(УзлыДвижений, Ключи);
			Если Аналитики = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			// Аналитики содержат соответствие, в ключах которого значение аналитики расхода,
			// в значениях - соответствие между документом поступления расхода и движениями относящимися к этому расходу
			Для Каждого Значение Из АналитикиОбсчетаПартийПрочих(Движение, ПустыеСсылки) Цикл
				ПоступленияРасходов = Аналитики[Значение];
				Если ПоступленияРасходов = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				Для Каждого ПоступлениеРасхода Из ПоступленияРасходов Цикл
					Для Каждого НомерСтроки Из  ПоступлениеРасхода.Значение Цикл
						НомерСтроки.Значение.Добавить(Движение);
					КонецЦикла
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
	// Шаг 2: создаем буфер накопления рассчитанных партий
	РасчетныеПартии = Новый ТаблицаЗначений;
	ПоляРасчета = СкопироватьКолонки(ДанныеДляРасчета.Колонки, РасчетныеПартии.Колонки);
	
	// Шаг 3: распределяем каждый массив строк в аналитиках
	КонтекстДвижений = ОписаниеДвижений(
		"ДопРасходы_ПриходПартийРасходов",
		"",
		ПоляРасчета,
		"Организация",
		"Базис, Количество, Вес, Объем, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, НДСУпр, ПостояннаяРазница, ВременнаяРазница",
		"Базис",
		"<БАЗИС_РАСХОДА>",
		"ДокументРеализации",
		"Период");
	
	Для Каждого Организации Из УзлыДвижений Цикл
		Для Каждого Налогообложения Из Организации.Значение Цикл
			Для Каждого Правила Из Налогообложения.Значение Цикл
				
				Если Правила.Ключ = ПравилаРаспределения[0] Тогда
					КонтекстДвижений.БазисРасхода = "Количество";
				ИначеЕсли Правила.Ключ = ПравилаРаспределения[2] Тогда
					КонтекстДвижений.БазисРасхода = "Вес";
				ИначеЕсли Правила.Ключ = ПравилаРаспределения[3] Тогда
					КонтекстДвижений.БазисРасхода = "Объем";	
				Иначе
					КонтекстДвижений.БазисРасхода = "Стоимость";
				КонецЕсли;
				
				Для Каждого Аналитики Из Правила.Значение Цикл
					Для Каждого ПоступлениеРасхода Из Аналитики.Значение Цикл
						Для Каждого НомерСтроки Из ПоступлениеРасхода.Значение Цикл
							РаспределитьПриходыНаРасходы(ПараметрыРасчета, КонтекстДвижений, НомерСтроки.Значение, РасчетныеПартии);
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	// Шаг 4: Сортировка партий для дальнейшей записи
	РасчетныеПартии.Сортировать("Регистратор, ВидДвижения, Период, АналитикаУчетаНоменклатуры", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
	
КонецФункции

Процедура СформироватьДопРасходыВСебестоимостьТоваров(ПараметрыРасчета, РасчетныеПриходыПартийРасходов)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	
	// Шаг 1: Получаем аналитики учета по партнерам
	АналитикиПартнеров = Новый Соответствие;
	Поступления = Новый Массив;
	
	Для Каждого Движение Из РасчетныеПриходыПартийРасходов Цикл
		// аналитики учета по партнерам для дальнейшего заполнения по документам поступлений
		Если АналитикиПартнеров[Движение.ДокументПоступления] = Неопределено Тогда
			Поступления.Добавить(Движение.ДокументПоступления);
			АналитикиПартнеров.Вставить(Движение.ДокументПоступления, Неопределено);
		КонецЕсли;
	КонецЦикла;
	
	// заполняем аналитики учета по партнерам по документам поступлений товаров
	ЗапросАналитик = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(ЗапросАналитик, ПараметрыРасчета); 
	
	ЗапросАналитик.Текст = ТекстАналитикиПартнеров();
	ЗапросАналитик.УстановитьПараметр("Поступления", Поступления);
	
	ВыборкаАналитик = ЗапросАналитик.Выполнить().Выбрать();
	Пока ВыборкаАналитик.Следующий() Цикл
		АналитикиПартнеров[ВыборкаАналитик.ДокументПоступления] = ВыборкаАналитик.АналитикаУчетаПоПартнерам;
	КонецЦикла;
	
	// Шаг 2: Формируем движения по регистру СебестоимостьТоваров
	Для Каждого Движение Из РасчетныеПриходыПартийРасходов Цикл
		
		Если НЕ ЗначениеЗаполнено(Движение.СтатьяРасходов)
		 ИЛИ ЗначениеЗаполнено(Движение.ВариантРаздельногоУчетаНДС) Тогда
			Продолжить;
		КонецЕсли;
		
		РасчетнаяПартия = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, Движение,
			"Период, Регистратор, АналитикаУчетаНоменклатуры, Организация, РазделУчета, Подразделение, АналитикаРасходов,
			|Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, КорАналитикаУчетаПартий");
		
		РасчетнаяПартия.ВидДеятельностиНДС 			= Движение.НалогообложениеНДС;
		РасчетнаяПартия.КорВидДеятельностиНДС 		= Движение.ВидДеятельностиНДС;
		РасчетнаяПартия.ВидДвижения 				= ВидДвиженияНакопления.Приход;
		РасчетнаяПартия.ВидЗапасов 					= ?(ПараметрыРасчета.ФО.УчитыватьСебестоимостьТоваровПоВидамЗапасов, Движение.ВидЗапасов, Неопределено);
		
		РасчетнаяПартия.АналитикаУчетаПоПартнерам 	= АналитикиПартнеров[Движение.ДокументПоступления];
		РасчетнаяПартия.СтатьяРасходовСписания 		= Движение.СтатьяРасходов;
		РасчетнаяПартия.КорНаправлениеДеятельности	= Движение.НаправлениеДеятельности;
		РасчетнаяПартия.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		
		Если ЗначениеЗаполнено(Движение.РасчетныйПериод) Тогда
			РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходы;
		Иначе
			РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам;
		КонецЕсли;
		
		РасчетнаяПартия.ДокументДвижения 			= Движение.Регистратор;
		РасчетнаяПартия.ДокументИсточник 			= Движение.ДокументПоступления;
		
		РасчетнаяПартия.ДопРасходы 					= Движение.Стоимость;
		РасчетнаяПартия.ДопРасходыБезНДС 			= Движение.СтоимостьБезНДС;
		
		Если РасчетнаяПартия.ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
		 ИЛИ РасчетнаяПартия.ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
			РасчетнаяПартия.ДопРасходыРегл 			= Движение.СтоимостьРегл + Движение.НДСРегл;
			РасчетнаяПартия.ДопРасходыУпр 			= ?(ПараметрыРасчета.УправленческийУчетОрганизаций, Движение.СтоимостьБезНДС + Движение.НДСУпр, 0);
		Иначе
			РасчетнаяПартия.ДопРасходыРегл 			= Движение.СтоимостьРегл;
			РасчетнаяПартия.ДопРасходыУпр 			= ?(ПараметрыРасчета.УправленческийУчетОрганизаций, Движение.СтоимостьБезНДС, 0);
		КонецЕсли;
		
		РасчетнаяПартия.НДСРегл 					= Движение.НДСРегл;
		РасчетнаяПартия.НДСУпр 						= Движение.НДСУпр;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДопРасходыВПрочиеРасходы(ПараметрыРасчета, РасчетныеПриходыПартийРасходов)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	// Шаг 1: Формируем движения по регистру ПрочиеРасходы
	Для Каждого Движение Из РасчетныеПриходыПартийРасходов Цикл
		
		Если НЕ ЗначениеЗаполнено(Движение.СтатьяРасходов)
		 ИЛИ НЕ ЗначениеЗаполнено(Движение.ВариантРаздельногоУчетаНДС)
		 ИЛИ НЕ ЗначениеЗаполнено(Движение.СтатьяОтраженияРасходов)
		 ИЛИ Движение.ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.Распределение Тогда
			Продолжить;
		КонецЕсли;
		
		РасчетнаяПартия = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, Движение,
			"Период, Регистратор, Организация, НаправлениеДеятельности");
		
		РасчетнаяПартия.ВидДвижения 			= ВидДвиженияНакопления.Приход;
		РасчетнаяПартия.Подразделение 			= Движение.ПодразделениеРасходов;
		РасчетнаяПартия.СтатьяРасходов 			= Движение.СтатьяОтраженияРасходов;
		РасчетнаяПартия.АналитикаРасходов 		= Движение.АналитикаОтраженияРасходов;
		РасчетнаяПартия.ХозяйственнаяОперация 	= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		
		РасчетнаяПартия.ДокументДвижения 		= Движение.Регистратор;
		
		Если Движение.КорВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
		 ИЛИ Движение.КорВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
			РасчетнаяПартия.СуммаРегл 			= Движение.НДСРегл;
			РасчетнаяПартия.СуммаУпр 			= ?(ПараметрыРасчета.УправленческийУчетОрганизаций, Движение.НДСУпр, 0);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДопРасходыВПартииПрочихРасходов(ПараметрыРасчета, РасчетныеПриходыПартийРасходов)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя;
	
	// Шаг 1: Формируем движения по регистру ПартииПрочихРасходов
	Для Каждого Движение Из РасчетныеПриходыПартийРасходов Цикл
		
		Если НЕ ЗначениеЗаполнено(Движение.СтатьяРасходов)
		 ИЛИ НЕ ЗначениеЗаполнено(Движение.ВариантРаздельногоУчетаНДС)
		 ИЛИ Движение.ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента Тогда
			Продолжить;
		КонецЕсли;
		
		РасчетнаяПартия = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, Движение,
			"Период, Регистратор, Организация, ДокументПоступленияРасходов, 
			|НаправлениеДеятельности, ВидДеятельностиНДС, 
			|СтоимостьРегл, НДСРегл, НДСУпр");
		
		РасчетнаяПартия.ВидДвижения 			= ВидДвиженияНакопления.Приход;
		РасчетнаяПартия.Подразделение 			= Движение.ПодразделениеРасходов;
		РасчетнаяПартия.СтатьяРасходов 			= Движение.СтатьяОтраженияРасходов;
		РасчетнаяПартия.АналитикаРасходов 		= Движение.АналитикаОтраженияРасходов;
		РасчетнаяПартия.АналитикаУчетаПартий 	= Движение.КорАналитикаУчетаПартий;
		РасчетнаяПартия.ХозяйственнаяОперация 	= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДопРасходыВДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя;
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ""
		// подготовка временных таблиц
		+ ТекстРегистраторыДляНоменклатураДоходыРасходы() // вт РегистраторыДопРасходы
		+ ТекстРазделениеЗапросов()
		// выборка данных
		+ ТекстОписаниеДанныхДляНоменклатураДоходыРасходы()
		+ ТекстОбъединениеЗапросов() + ТекстНоменклатураДоходыРасходыИзСебестоимости();
	
	УниверсальныеМеханизмыПартийИСебестоимости.СформироватьДвиженияПоРегиструПоДаннымЗапроса(
		ПараметрыРасчета,
		ИмяРегистра,
		Запрос);
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета, "РегистраторыДопРасходы");
	
КонецПроцедуры

// Тексты запросов

// ... для таблицы РасчетныеПартииПоЗаказам в ПолучитьДанныеДляДопРасходов()

Функция ТекстНачальныеОстаткиПартийПрочихРасходов()
	Возврат
		"ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.СтатьяРасходов,
		|	Статьи.ПравилоРаспределенияНаСебестоимость КАК ПравилоРаспределенияНаСебестоимость,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.НаправлениеДеятельности,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидДеятельностиНДС,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.СтоимостьОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьОстаток,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.СтоимостьБезНДСОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДСОстаток,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.СтоимостьРеглОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРеглОстаток,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.НДСРеглОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК НДСРеглОстаток,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.НДСУпрОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК НДСУпрОстаток,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.ПостояннаяРазницаОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК ПостояннаяРазницаОстаток,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.ВременнаяРазницаОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК ВременнаяРазницаОстаток
		|ПОМЕСТИТЬ НачальныеОстаткиРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов.Остатки(&ГраницаНачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|ГДЕ
		|	Статьи.ВариантРаспределенияРасходовУпр
		|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|	ИЛИ Статьи.ВариантРаспределенияРасходовРегл
		|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.Организация,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстТаможенныеДекларацииИПоступления() // вт Декларации, КоличествоДеклараций
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Партия КАК Ссылка,
		|	Партии.ДокументПоступления КАК Поступление
		|ПОМЕСТИТЬ
		|	Декларации
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Регистратор = ДД.Партия
		|		И Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
		|		И Партии.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
		|ГДЕ
		|	ДД.Партия ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|	И Партии.Период < &ДатаПереходаНаПартионныйУчетВерсии22
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|ИНДЕКСИРОВАТЬ ПО
		|	Поступление
		|;
		|ВЫБРАТЬ
		|	ДД.Поступление,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.Ссылка) КАК Количество
		|ПОМЕСТИТЬ
		|	КоличествоДеклараций
		|ИЗ
		|	Декларации КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Поступление
		|ИНДЕКСИРОВАТЬ ПО
		|	Поступление
		|";
КонецФункции

Функция ТекстАналитикиРасходовВсе()
	Возврат
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Ключи.Организация,
		|	Ключи.СтатьяРасходов,
		|	Ключи.АналитикаРасходов,
		|	Ключи.НаправлениеДеятельности
		|ПОМЕСТИТЬ АналитикиРасходовВсе
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов) КАК АналитикаРасходов,
		|		ДД.НаправлениеДеятельности
		|	ИЗ
		|		НачальныеОстаткиРасходов КАК ДД
		|		ЛЕВОЕ СОЕДИНЕНИЕ Декларации КАК Декларации
		|			ПО Декларации.Поступление = ДД.АналитикаРасходов
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов) КАК АналитикаРасходов,
		|		ДД.НаправлениеДеятельности
		|	ИЗ
		|		ВТКэшРасчетныеОборотыПартииПрочихРасходов КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Декларации КАК Декларации
		|			ПО Декларации.Поступление = ДД.АналитикаРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК Корректировка
		|			ПО Корректировка.Ссылка = ДД.Регистратор
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетФактура
		|			ПО СчетФактура.Ссылка = ДД.Регистратор
		|	ГДЕ
		|		ДД.СлужебноеВидДвиженияПриход
		|		И (Статьи.ВариантРаспределенияРасходовУпр
		|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ИЛИ Статьи.ВариантРаспределенияРасходовРегл
		|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
		|		И ДД.ДокументПоступленияРасходов В (
		|			ДД.Регистратор,
		|			СчетФактура.СчетФактураОснование,
		|			Корректировка.ДокументОснование)
		|	) КАК Ключи
		|";
КонецФункции

Функция ТекстЗаказыИзАналитикРасходов() // ВТ ЗаказыИзАналитикРасходов, ПоступленияИзАналитикРасходов, ПоступленияИЗаказыИзАналитикРасходов, ОстаткиПоступленийПоЗаказам 
	Возврат
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДатаПоступления,
		|	ДД.Поступление,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.Назначение,
		|	ДД.Склад,
		|	ДД.Количество
		|ПОМЕСТИТЬ ЗаказыИзАналитикРасходов
		|ИЗ (
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказПоставщику КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		ТоварыДокумента.Назначение,
		|		(ВЫБОР
		|			КОГДА Заказ.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути))
		|				ТОГДА Заказ.Партнер
		|			ИНАЧЕ ДД.Склад КОНЕЦ) КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыПоставщикам КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказПоставщику
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ТоварыДокумента
		|			ПО ТоварыДокумента.Ссылка = ДД.ЗаказПоставщику
		|			И ТоварыДокумента.КодСтроки = ДД.КодСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ДД.ЗаказПоставщику
		|			И КлючиРасходов.НаправлениеДеятельности = 
		|				ЕСТЬNULL(ТоварыДокумента.Назначение.НаправлениеДеятельности,
		|					ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|	ГДЕ
		|		ДД.Период <= &КонецПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказПоставщику КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		ТоварыДокумента.Назначение,
		|		(ВЫБОР
		|			КОГДА Заказ.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути))
		|				ТОГДА Заказ.Партнер
		|			ИНАЧЕ ДД.Склад КОНЕЦ) КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыПоставщикам КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказПоставщику
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ТоварыДокумента
		|			ПО ДД.ЗаказПоставщику = ТоварыДокумента.Ссылка
		|			И ДД.КодСтроки = ТоварыДокумента.КодСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|			И КлючиРасходов.Организация = Заказ.Организация
		|			И КлючиРасходов.НаправлениеДеятельности = 
		|				ЕСТЬNULL(ТоварыДокумента.Назначение.НаправлениеДеятельности,
		|					ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		// Расходы по заказам на перемещение
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаПеремещение КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		ТоварыДокумента.Назначение,
		|		Заказ.СкладПолучатель КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаПеремещение КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаПеремещение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ТоварыДокумента
		|			ПО ДД.ЗаказНаПеремещение = ТоварыДокумента.Ссылка
		|			И ДД.КодСтроки = ТоварыДокумента.КодСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ДД.ЗаказНаПеремещение
		|			И КлючиРасходов.НаправлениеДеятельности = 
		|				ЕСТЬNULL(ТоварыДокумента.Назначение.НаправлениеДеятельности,
		|					ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|	ГДЕ
		|		ДД.Период <= &КонецПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаПеремещение КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		ТоварыДокумента.Назначение,
		|		Заказ.СкладПолучатель КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаПеремещение КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаПеремещение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ТоварыДокумента
		|			ПО ДД.ЗаказНаПеремещение = ТоварыДокумента.Ссылка
		|			И ДД.КодСтроки = ТоварыДокумента.КодСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
		|			И КлючиРасходов.Организация = Заказ.Организация
		|			И КлючиРасходов.НаправлениеДеятельности = 
		|				ЕСТЬNULL(ТоварыДокумента.Назначение.НаправлениеДеятельности,
		|					ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		// Расходы по заказам на сборку
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаСборку КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		(ВЫБОР
		|			КОГДА Заказ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
		|				ТОГДА Заказ.Назначение
		|			ИНАЧЕ ЗаказТовары.Назначение КОНЕЦ) КАК Назначение,
		|		Заказ.Склад КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаСборку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку.Товары КАК ЗаказТовары
		|			ПО ЗаказТовары.Ссылка = ДД.ЗаказНаСборку
		|			И ЗаказТовары.КодСтроки = ДД.КодСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ДД.ЗаказНаСборку
		|			И КлючиРасходов.НаправлениеДеятельности = 
		|			(ВЫБОР
		|				КОГДА Заказ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
		|					ТОГДА Заказ.Назначение
		|				ИНАЧЕ ЗаказТовары.Назначение КОНЕЦ)
		|	ГДЕ
		|		ДД.Период <= &КонецПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И ДД.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаСборку КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		(ВЫБОР
		|			КОГДА Заказ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
		|				ТОГДА Заказ.Назначение
		|			ИНАЧЕ ЗаказТовары.Назначение КОНЕЦ) КАК Назначение,
		|		Заказ.Склад КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаСборку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку.Товары КАК ЗаказТовары
		|			ПО ЗаказТовары.Ссылка = ДД.ЗаказНаСборку
		|			И ЗаказТовары.КодСтроки = ДД.КодСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|			И КлючиРасходов.Организация = Заказ.Организация
		|			И КлючиРасходов.НаправлениеДеятельности = 
		|			(ВЫБОР
		|				КОГДА Заказ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
		|					ТОГДА Заказ.Назначение
		|				ИНАЧЕ ЗаказТовары.Назначение КОНЕЦ)
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И ДД.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
		|) КАК ДД
		|;
		|////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Заказы.ДатаПоступления,
		|	Заказы.Поступление,
		|	Заказы.Номенклатура,
		|	Заказы.Характеристика,
		|	Заказы.Назначение,
		|	Заказы.Склад
		|ПОМЕСТИТЬ ПоступленияИзАналитикРасходов
		|ИЗ
		|	ЗаказыИзАналитикРасходов КАК Заказы
		|ГДЕ
		|	Заказы.ДатаПоступления < &КонецПериода
		|;
		|////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Заказы.Поступление КАК Поступление,
		|	Заказы.Заказ КАК Заказ
		|ПОМЕСТИТЬ ПоступленияИЗаказыИзАналитикРасходов
		|ИЗ
		|	ЗаказыИзАналитикРасходов КАК Заказы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Поступление,
		|	Заказ
		|;
		|////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС
		|ПОМЕСТИТЬ ОстаткиПоступленийПоЗаказам
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаНачалоПериода, Организация В (&МассивОрганизаций)
		|		И РазделУчета В (
		|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
		|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
		|		И (АналитикаУчетаНоменклатуры.Номенклатура, АналитикаУчетаНоменклатуры.Характеристика, АналитикаУчетаНоменклатуры.Назначение, АналитикаУчетаНоменклатуры.Склад) В (
		|			ВЫБРАТЬ
		|				Заказы.Номенклатура,
		|				Заказы.Характеристика,
		|				Заказы.Назначение,
		|				Заказы.Склад
		|			ИЗ
		|				ЗаказыИзАналитикРасходов КАК Заказы
		|			ГДЕ
		|				Заказы.ДатаПоступления < &НачалоПериода
		|			)
		|	) КАК ДД
		|";
КонецФункции

Функция ТекстПоступившиеЗаказы()
	Возврат
		"ВЫБРАТЬ
		|	""ТекстПоступившиеЗаказы"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Остаток) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.ДатаПоступления КАК Период,
		|	ДД.Поступление КАК Регистратор,
		|	ДД.Поступление КАК ДокументПоступления,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.Назначение,
		|	ДД.Склад,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК Партия,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
		|	ДД.Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница
		|ИЗ
		|	ЗаказыИзАналитикРасходов КАК ДД
		|";
КонецФункции

Функция ТекстПриходыПоступленийПоЗаказамСебестоимости()
	Возврат
		"ВЫБРАТЬ
		|	""ТекстПриходыПоступленийПоЗаказамСебестоимости"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Поступления.ДатаПоступления КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Назначение,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоступленияИзАналитикРасходов КАК Поступления
		|		ПО Поступления.Поступление = ДД.Регистратор
		|		И Поступления.Номенклатура = АналитикиТоваров.Номенклатура
		|		И Поступления.Характеристика = АналитикиТоваров.Характеристика
		|		И Поступления.Назначение = АналитикиТоваров.Назначение
		|		И Поступления.Склад = АналитикиТоваров.Склад
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПоступленийПоЗаказам КАК Остатки
		|		ПО Остатки.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Остатки.РазделУчета = ДД.РазделУчета
		|		И Остатки.ВидЗапасов = ДД.ВидЗапасов
		|		И Остатки.Организация = ДД.Организация
		|		И Остатки.Партия = ДД.Партия
		|		И Остатки.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
		|		И Остатки.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И Остатки.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	Поступления.ДатаПоступления,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Назначение,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""ТекстПриходыПоступленийПоЗаказамСебестоимости"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Поступления.ДатаПоступления КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Назначение,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоступленияИзАналитикРасходов КАК Поступления
		|		ПО Поступления.Поступление = ДД.Регистратор
		|		И Поступления.Номенклатура = АналитикиТоваров.Номенклатура
		|		И Поступления.Характеристика = АналитикиТоваров.Характеристика
		|		И Поступления.Назначение = АналитикиТоваров.Назначение
		|		И Поступления.Склад = АналитикиТоваров.Склад
		|СГРУППИРОВАТЬ ПО
		|	Поступления.ДатаПоступления,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Назначение,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС
		|";
КонецФункции

// ... для результата ПолучитьДанныеДляДопРасходов()

Функция ТекстОписаниеДанныхДляПартийПрочих()
	Возврат
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(80)) 													КАК ЗапросИсточник,
		|	0 																				КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПустаяСсылка) 							КАК ТипЗаписи,
		|	ЛОЖЬ 																			КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 											КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) 													КАК Период,
		|	НЕОПРЕДЕЛЕНО 																	КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 									КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) 				КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 									КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) 										КАК Склад,
		|	НЕОПРЕДЕЛЕНО 																	КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) 									КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) 					КАК АналитикаУчетаПартий,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) 						КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО 																	КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 					КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 							КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО 																	КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО 																	КАК АналитикаРаспределения,
		|	0 																				КАК Базис,
		|	0 																				КАК Количество,
		|	0 																				КАК Вес,
		|	0 																				КАК Объем,
		|	0 																				КАК Стоимость,
		|	0 																				КАК СтоимостьБезНДС,
		|	0 																				КАК СтоимостьРегл,
		|	0 																				КАК НДСРегл,
		|	0 																				КАК НДСУпр,
		|	0 																				КАК ПостояннаяРазница,
		|	0 																				КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) 						КАК ВидДеятельностиНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) 						КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 						КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 							КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО 																	КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО 																	КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 					КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка)					КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО 																	КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) 	КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) 			КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО 																	КАК Партия,
		|	НЕОПРЕДЕЛЕНО 																	КАК АналитикаФинансовогоУчета,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) 					КАК КорАналитикаУчетаПартий,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) 						КАК КорВидДеятельностиНДС,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) 													КАК РасчетныйПериод
		|//ВоВременнуюТаблицу
		|";
КонецФункции

Функция ТекстПартииПоЗаказам() // вт ПартииПоЗаказам
	Возврат
		"ВЫБРАТЬ
		|	ДД.Приоритет,
		|	ДД.ТипЗаписи,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.Регистратор,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.НДСУпр,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница
		|ПОМЕСТИТЬ ПартииПоЗаказам
		|ИЗ
		|	&РасчетныеПартииПоЗаказам КАК ДД
		|";
КонецФункции

Функция ТекстРегистраторыПрочих() // вт РегистраторыПрочих
	Возврат
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Ключи.Регистратор
		|ПОМЕСТИТЬ РегистраторыПрочих
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.ДокументПоступленияРасходов КАК Регистратор
		|	ИЗ
		|		НачальныеОстаткиРасходов КАК ДД
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.ДокументПоступленияРасходов КАК Регистратор
		|	ИЗ
		|		ВТКэшРасчетныеОборотыПартииПрочихРасходов КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|	ГДЕ
		|		ДД.ДокументПоступленияРасходов = ДД.Регистратор
		|		И ДД.СлужебноеВидДвиженияПриход
		|		И (Статьи.ВариантРаспределенияРасходовУпр =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ИЛИ  Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
		|	) КАК Ключи
		|";
КонецФункции

Функция ТекстПериодыПартийПрочих() // вт ПериодыПартийПрочих
	Возврат
		"ВЫБРАТЬ
		|	ДД.Регистратор КАК ДокументПоступленияРасходов,
		|	ДД.Организация,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	МАКСИМУМ(ДД.Период) КАК Период
		|ПОМЕСТИТЬ ПериодыПартийПрочих
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|		ПО КлючиРасходов.Организация = ДД.Организация
		|		И КлючиРасходов.СтатьяРасходов = ДД.СтатьяРасходов
		|		И КлючиРасходов.АналитикаРасходов = ДД.АналитикаРасходов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК Корректировка
		|		ПО Корректировка.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетФактура
		|		ПО СчетФактура.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументПоступленияРасходов В (
		|		ДД.Регистратор,
		|		СчетФактура.СчетФактураОснование,
		|		Корректировка.ДокументОснование)
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстАналитикиРасходовПрошлыеПоступления() // вт АналитикиРасходовПрошлыеПоступления
	
	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КлючиРасходов.Организация КАК Организация,
		|	КлючиРасходов.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	КлючиРасходов.АналитикаРасходов
		|ПОМЕСТИТЬ АналитикиРасходовПрошлыеПоступления
		|ИЗ
		|	АналитикиРасходовВсе КАК КлючиРасходов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК Реестр
		|		ПО Реестр.Ссылка = КлючиРасходов.АналитикаРасходов
		|ГДЕ 
		|	Реестр.ДатаДокументаИБ < &НачалоПериода
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	НаправлениеДеятельности,
		|	АналитикаРасходов
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстАналитикиПрошлыхПоступленийТоваров() // вт АналитикиПрошлыхПоступлений, АналитикиПрошлыхПоступленийБезПартий
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	АналитикиТоваров.КлючАналитики КАК АналитикаУчетаНоменклатуры,
		|	ВЫБОР
		|		КОГДА ДД.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
		|			ТОГДА ДД.Партия
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Партия,
		|	ВЫБОР
		|		КОГДА ДД.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
		|			ТОГДА ДД.АналитикаУчетаПартий
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|	КОНЕЦ КАК АналитикаУчетаПартий,
		|	НАЧАЛОПЕРИОДА(ДД.Период, МЕСЯЦ) КАК ПериодПоступления,
		|	СУММА(ДД.Количество) КАК Количество
		|
		|ПОМЕСТИТЬ АналитикиПрошлыхПоступлений
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.Номенклатура = Аналитика.Номенклатура
		|		И АналитикиТоваров.Характеристика = Аналитика.Характеристика
		|		И АналитикиТоваров.Серия = Аналитика.Серия
		|		И АналитикиТоваров.Назначение = Аналитика.Назначение
		|		// Склад не учитываем. Соединяемся с аналитиками по всем складам
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО Склады.Ссылка = АналитикиТоваров.Склад
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|ГДЕ
		|	&РаспределениеДопРасходовПоВыбывшимТоварам
		|	И ДД.Период МЕЖДУ &ДатаПереходаНаПартионныйУчетВерсии22 И &КонецПредыдущегоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|	И (ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИЛИ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
		|		ИЛИ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		И (СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ИЛИ ЕСТЬNULL(Склады.ЦеховаяКладовая, ЛОЖЬ)))
		|	И (ДД.Организация,
		|		ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|		ДД.Регистратор) В
		|	(
		|		ВЫБРАТЬ
		|			КлючиРасходов.Организация,
		|			(ВЫБОР
		|				КОГДА КлючиРасходов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|					ТОГДА ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|						ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|				ИНАЧЕ КлючиРасходов.НаправлениеДеятельности КОНЕЦ) КАК НаправлениеДеятельности,
		|			КлючиРасходов.АналитикаРасходов
		|		ИЗ
		|			АналитикиРасходовПрошлыеПоступления КАК КлючиРасходов
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	АналитикиТоваров.КлючАналитики,
		|	ВЫБОР
		|		КОГДА ДД.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
		|			ТОГДА ДД.Партия
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДД.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
		|			ТОГДА ДД.АналитикаУчетаПартий
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|	КОНЕЦ,
		|	НАЧАЛОПЕРИОДА(ДД.Период, МЕСЯЦ)
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	Партия,
		|	АналитикаУчетаПартий
		|;
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СУММА(ДД.Количество) КАК Количество
		|ПОМЕСТИТЬ АналитикиПрошлыхПоступленийБезПартий
		|ИЗ
		|	АналитикиПрошлыхПоступлений КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры
		|ИМЕЮЩИЕ
		|	СУММА(ДД.Количество) > 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстПрошлыеВыбытияТоваров() // вт ПрошлыеВыбытияТоваров
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ПрошлыеПоступления.Регистратор КАК Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета КАК РазделУчета,
		|	ДД.ВидЗапасов КАК ВидЗапасов,
		|	ДД.Организация КАК Организация,
		|	ДД.Партия КАК Партия,
		|	ДД.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|
		|	ВЫРАЗИТЬ(СУММА(ДД.Количество
		|		* ЕСТЬNULL(ПрошлыеПоступления.Количество / ПрошлыеПоступленияБезПартий.Количество, 1)) КАК ЧИСЛО(15,3)) КАК Количество,
		|	ВЫРАЗИТЬ(СУММА(ДД.Стоимость
		|		* ЕСТЬNULL(ПрошлыеПоступления.Количество / ПрошлыеПоступленияБезПартий.Количество, 1)) КАК ЧИСЛО(15,2)) КАК Стоимость,
		|	ВЫРАЗИТЬ(СУММА(ДД.СтоимостьБезНДС
		|		 * ЕСТЬNULL(ПрошлыеПоступления.Количество / ПрошлыеПоступленияБезПартий.Количество, 1)) КАК ЧИСЛО(15,2)) КАК СтоимостьБезНДС,
		|	ВЫРАЗИТЬ(СУММА(ДД.СтоимостьУпр
		|		* ЕСТЬNULL(ПрошлыеПоступления.Количество / ПрошлыеПоступленияБезПартий.Количество, 1)) КАК ЧИСЛО(15,2)) КАК СтоимостьУпр,
		|	ВЫРАЗИТЬ(СУММА(ДД.СтоимостьРегл
		|		* ЕСТЬNULL(ПрошлыеПоступления.Количество / ПрошлыеПоступленияБезПартий.Количество, 1)) КАК ЧИСЛО(15,2)) КАК СтоимостьРегл,
		|	ВЫРАЗИТЬ(СУММА(ДД.ПостояннаяРазница
		|		* ЕСТЬNULL(ПрошлыеПоступления.Количество / ПрошлыеПоступленияБезПартий.Количество, 1)) КАК ЧИСЛО(15,2)) КАК ПостояннаяРазница,
		|	ВЫРАЗИТЬ(СУММА(ДД.ВременнаяРазница
		|		* ЕСТЬNULL(ПрошлыеПоступления.Количество / ПрошлыеПоступленияБезПартий.Количество, 1)) КАК ЧИСЛО(15,2)) КАК ВременнаяРазница
		|ПОМЕСТИТЬ ПрошлыеВыбытияТоваров
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиПрошлыхПоступлений КАК ПрошлыеПоступления
		|		ПО ПрошлыеПоступления.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И ПрошлыеПоступления.Организация = ДД.Организация
		|		И ПрошлыеПоступления.Партия = ДД.Партия
		|		И ПрошлыеПоступления.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
		|	ЛЕВОЕ СОЕДИНЕНИЕ АналитикиПрошлыхПоступленийБезПартий КАК ПрошлыеПоступленияБезПартий
		|		ПО ПрошлыеПоступленияБезПартий.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И ПрошлыеПоступленияБезПартий.Организация = ДД.Организация
		|ГДЕ
		|	&РаспределениеДопРасходовПоВыбывшимТоварам
		|	И ДД.Период МЕЖДУ ПрошлыеПоступления.ПериодПоступления И &КонецПредыдущегоПериода
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
		|	И ДД.Активность
		|
		|СГРУППИРОВАТЬ ПО
		|	ПрошлыеПоступления.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация КАК Организация,
		|	ДД.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|
		|	АналитикиТоваровВыбытия.Номенклатура КАК Номенклатура,
		|	АналитикиТоваровВыбытия.Характеристика КАК Характеристика,
		|	АналитикиТоваровВыбытия.Серия КАК Серия,
		|	АналитикиТоваровВыбытия.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьУпр) КАК СтоимостьУпр,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
		|ПОМЕСТИТЬ ПрошлыеВыбытияТоваровПоНоменклатуре
		|ИЗ
		|	ПрошлыеВыбытияТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваровВыбытия
		|		ПО АналитикиТоваровВыбытия.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	АналитикиТоваровВыбытия.Номенклатура,
		|	АналитикиТоваровВыбытия.Характеристика,
		|	АналитикиТоваровВыбытия.Серия,
		|	АналитикиТоваровВыбытия.СтатьяКалькуляции
		|
		|";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстПрошлыеПоступления() // вт ПрошлыеПоступления
	Возврат 
		"ВЫБРАТЬ
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.АналитикаФинансовогоУчета,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
		|	
		|ПОМЕСТИТЬ ПрошлыеПоступления
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Период >= &ДатаПереходаНаПартионныйУчетВерсии22
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ((ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|			ИЛИ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|				И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|		И ДД.Партия = НЕОПРЕДЕЛЕНО
		|		ИЛИ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
		|			И НЕ ДД.Организация В (&ОрганизацииСФИФОСкользящая))
		|	И (ДД.Организация,
		|		АналитикиТоваров.Номенклатура,
		|		АналитикиТоваров.Склад,
		|		ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|		ДД.Регистратор) В
		|	(
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация,
		|			АналитикиТоваров.Номенклатура,
		|			АналитикиТоваров.Склад,
		|			(ВЫБОР
		|				КОГДА КлючиРасходов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|					ТОГДА ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|						ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|				ИНАЧЕ КлючиРасходов.НаправлениеДеятельности КОНЕЦ) КАК НаправлениеДеятельности,
		|			ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Поступление
		|				ПО Поступление.Регистратор = КлючиРасходов.АналитикаРасходов
		|		ГДЕ
		|			КлючиРасходов.АналитикаРасходов = ДД.Регистратор
		|			И Поступление.Период < &НачалоПериода
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета
		|";
КонецФункции

Функция ОстаткиПрошлыхПоступлений() // вт ОстаткиПрошлыхПоступлений
	Возврат
		"ВЫБРАТЬ
		|	Остатки.АналитикаУчетаНоменклатуры,
		|	Остатки.РазделУчета,
		|	Остатки.ВидЗапасов,
		|	Остатки.Организация,
		|	Остатки.Партия,
		|	Остатки.АналитикаУчетаПартий,
		|	Остатки.АналитикаФинансовогоУчета,
		|	Остатки.ВидДеятельностиНДС
		|ПОМЕСТИТЬ ОстаткиПрошлыхПоступлений
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаНачалоПериода, 
		|		(АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация, 
		|			Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС
		|		) В (
		|		ВЫБРАТЬ
		|			 Партии.АналитикаУчетаНоменклатуры,
		|			 Партии.РазделУчета,
		|			 Партии.ВидЗапасов,
		|			 Партии.Организация,
		|			 Партии.Партия,
		|			 Партии.АналитикаУчетаПартий,
		|			 Партии.АналитикаФинансовогоУчета,
		|			 Партии.ВидДеятельностиНДС
		|		ИЗ
		|			ПрошлыеПоступления КАК Партии
		|		)
		|	) КАК Остатки
		|ГДЕ
		|	Остатки.КоличествоОстаток > 0
		|";
КонецФункции

Функция ТекстОстаткиПартийПрочих()
	Возврат
		"ВЫБРАТЬ
		|	""ТекстОстаткиПартийПрочих"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Остаток) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	Периоды.Период,
		|	ДД.ДокументПоступленияРасходов КАК Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаРасходов КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	0 КАК Количество,
		|	0 КАК Вес,
		|	0 КАК Объем,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.НДСУпрОстаток КАК НДСУпр,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка) КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
		|	ДД.ПравилоРаспределенияНаСебестоимость КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	&НачалоПериода КАК РасчетныйПериод
		|ИЗ
		|	НачальныеОстаткиРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыПартийПрочих КАК Периоды
		|		ПО Периоды.ДокументПоступленияРасходов = ДД.ДокументПоступленияРасходов
		|		И Периоды.Организация = ДД.Организация
		|		И Периоды.СтатьяРасходов = ДД.СтатьяРасходов
		|		И Периоды.АналитикаРасходов = ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстПриходыПартийПрочих()
	Возврат
		"ВЫБРАТЬ
		|	""ТекстПриходыПартийПрочих"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ВЫБОР
		|		КОГДА ДД.СлужебноеВидДвиженияПриход
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов) КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	0 КАК Количество,
		|	0 КАК Вес,
		|	0 КАК Объем,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.Стоимость / ЕСТЬNULL(Знаменатели.Количество, 1)
		|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.СтоимостьБезНДС / ЕСТЬNULL(Знаменатели.Количество, 1)
		|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.СтоимостьРегл / ЕСТЬNULL(Знаменатели.Количество, 1)
		|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.НДСРегл / ЕСТЬNULL(Знаменатели.Количество, 1)
		|		ИНАЧЕ 0 КОНЕЦ) КАК НДСРегл,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.НДСУпр / ЕСТЬNULL(Знаменатели.Количество, 1)
		|		ИНАЧЕ 0 КОНЕЦ) КАК НДСУпр,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.ПостояннаяРазница / ЕСТЬNULL(Знаменатели.Количество, 1)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ПостояннаяРазница,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ТОГДА ДД.ВременнаяРазница / ЕСТЬNULL(Знаменатели.Количество, 1)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ВременнаяРазница,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ДД.ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка) КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
		|	Статьи.ПравилоРаспределенияНаСебестоимость КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	ВТКэшРасчетныеОборотыПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Декларации КАК Декларации
		|		ПО Декларации.Поступление = ДД.АналитикаРасходов
		|	ЛЕВОЕ СОЕДИНЕНИЕ КоличествоДеклараций КАК Знаменатели
		|		ПО Знаменатели.Поступление = ДД.АналитикаРасходов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК Корректировка
		|		ПО Корректировка.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетФактура
		|		ПО СчетФактура.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.СлужебноеВидДвиженияПриход
		|	И (Статьи.ВариантРаспределенияРасходовУпр =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|		ИЛИ Статьи.ВариантРаспределенияРасходовРегл =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
		|	И ДД.ДокументПоступленияРасходов В (
		|		ДД.Регистратор,
		|		СчетФактура.СчетФактураОснование,
		|		Корректировка.ДокументОснование)
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ДД.СлужебноеВидДвиженияПриход
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов),
		|	ДД.ВидДеятельностиНДС,
		|	ДД.НалогообложениеНДС,
		|	ДД.ДокументРеализации,
		|	ДД.СтатьяОтраженияРасходов,
		|	Статьи.ПравилоРаспределенияНаСебестоимость
		|";
КонецФункции

Функция ТекстБазисОстаткиСебестоимость()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	""ТекстБазисОстаткиСебестоимость"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЕСТЬNULL(Приобретение.Дата, &НачалоПериода) КАК Период,
		|	ЕСТЬNULL(Приобретение.Ссылка, ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)) КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ЕСТЬNULL(Приобретение.Ссылка, НЕОПРЕДЕЛЕНО) КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,7)) * ДД.КоличествоОстаток КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,7)) * ДД.КоличествоОстаток КАК Объем,
		|	(ВЫБОР
		|		КОГДА ДД.СтоимостьОстаток <> 0 ТОГДА ДД.СтоимостьОстаток
		|		ИНАЧЕ ДД.ТрудозатратыОстаток + ДД.ПостатейныеПостоянныеСНДСОстаток + ДД.ПостатейныеПеременныеСНДСОстаток КОНЕЦ) КАК Стоимость,
		|	(ВЫБОР
		|		КОГДА ДД.СтоимостьБезНДСОстаток <> 0 ТОГДА ДД.СтоимостьБезНДСОстаток
		|		ИНАЧЕ ДД.ТрудозатратыОстаток + ДД.ПостатейныеПостоянныеБезНДСОстаток + ДД.ПостатейныеПеременныеБезНДСОстаток КОНЕЦ) КАК СтоимостьБезНДС,
		|	(ВЫБОР
		|		КОГДА ДД.СтоимостьРеглОстаток <> 0 ТОГДА ДД.СтоимостьРеглОстаток
		|		ИНАЧЕ ДД.ТрудозатратыРеглОстаток + ДД.ПостатейныеПостоянныеРеглОстаток + ДД.ПостатейныеПеременныеРеглОстаток КОНЕЦ) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.ВидДеятельностиНДС КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка) КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Партия КАК Партия,
		|	ДД.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	ЕСТЬNULL(Приобретение.Дата, &НачалоПериода) КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаНачалоПериода, Организация В (&МассивОрганизаций)
		|		И РазделУчета В (
		|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
		|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути),
		|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
		|	) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Приобретение
		|		ПО Приобретение.Ссылка = ДД.Партия
		|ГДЕ
		|	(ВЫБОР
		|		КОГДА ДД.СтоимостьОстаток <> 0 ТОГДА ДД.СтоимостьОстаток
		|		КОГДА (ДД.ТрудозатратыОстаток + ДД.ПостатейныеПостоянныеСНДСОстаток + ДД.ПостатейныеПеременныеСНДСОстаток) <> 0
		|			ТОГДА ДД.ТрудозатратыОстаток + ДД.ПостатейныеПостоянныеСНДСОстаток + ДД.ПостатейныеПеременныеСНДСОстаток
		|		ИНАЧЕ ДД.КоличествоОстаток КОНЕЦ) > 0
		|	И (ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИЛИ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
		|		ИЛИ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|			И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|	И НЕ (ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|			И ТИПЗНАЧЕНИЯ(АналитикиТоваров.Склад) = ТИП(Справочник.Партнеры))
		|	И (ДД.Организация,
		|			АналитикиТоваров.Номенклатура,
		|			АналитикиТоваров.Склад,
		|			ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|				ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|			ДД.Партия) В
		|		(
		|			ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				КлючиРасходов.Организация,
		|				АналитикиТоваров.Номенклатура,
		|				АналитикиТоваров.Склад,
		|				(ВЫБОР
		|					КОГДА КлючиРасходов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|						ТОГДА ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|							ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|					ИНАЧЕ КлючиРасходов.НаправлениеДеятельности КОНЕЦ) КАК НаправлениеДеятельности,
		|				ДД.Партия
		|			ИЗ
		|				АналитикиРасходовВсе КАК КлючиРасходов
		|			ГДЕ
		|				КлючиРасходов.АналитикаРасходов В (
		|					АналитикиТоваров.Номенклатура,
		|					ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|					АналитикиТоваров.Склад,
		|					ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|					)
		|				ИЛИ (ДД.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
		|					И КлючиРасходов.АналитикаРасходов = ДД.Партия)
		|		)
		|";
	
	Возврат ПодставитьШаблоныВесаИОбъемаВТекстЗапроса(ТекстЗапроса);
	
КонецФункции

Функция ТекстБазисПриходыСебестоимость()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	""ТекстБазисПриходыСебестоимость"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Объем,
		|	СУММА(ВЫБОР
		|		КОГДА ДД.Стоимость <> 0 ТОГДА ДД.Стоимость
		|		ИНАЧЕ ВЫРАЗИТЬ(ДД.Количество
		|			* (ЕСТЬNULL(Цены.Стоимость, 0) + ЕСТЬNULL(Цены.СтоимостьДопРасходы, 0)) КАК ЧИСЛО(15,2)) КОНЕЦ) КАК Стоимость,
		|	СУММА(ВЫБОР
		|		КОГДА ДД.СтоимостьБезНДС <> 0 ТОГДА ДД.СтоимостьБезНДС
		|		ИНАЧЕ ВЫРАЗИТЬ(ДД.Количество
		|			* (ЕСТЬNULL(Цены.СтоимостьБезНДС, 0) + ЕСТЬNULL(Цены.СтоимостьДопРасходыБезНДС, 0)) КАК ЧИСЛО(15,2)) КОНЕЦ) КАК СтоимостьБезНДС,
		|	СУММА(ВЫБОР
		|		КОГДА ДД.СтоимостьРегл <> 0 ТОГДА ДД.СтоимостьРегл
		|		ИНАЧЕ ВЫРАЗИТЬ(ДД.Количество
		|			* (ЕСТЬNULL(Цены.СтоимостьРегл, 0) + ЕСТЬNULL(Цены.ДопРасходыРегл, 0)) КАК ЧИСЛО(15,2)) КОНЕЦ) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.ВидДеятельностиНДС КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка) КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Партия КАК Партия,
		|	ДД.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО СпрСклады.Ссылка = АналитикиТоваров.Склад
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК Цены
		|		ПО Цены.Организация = ДД.Организация
		|		И Цены.Период = НАЧАЛОПЕРИОДА(ДД.Период, МЕСЯЦ)
		|		И Цены.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Цены.ВидЗапасов = ДД.ВидЗапасов
		|		И Цены.РазделУчета = ДД.РазделУчета
		|		И Цены.Партия = ДД.Партия
		|		И Цены.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
		|		И Цены.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И Цены.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|ГДЕ
		|	ДД.СлужебноеВидДвиженияПриход
		|	И (ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|		)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
		|	И (ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИЛИ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
		|		ИЛИ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		И (СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ИЛИ ЕСТЬNULL(СпрСклады.ЦеховаяКладовая, ЛОЖЬ)
		|			))
		|	И НЕ (ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|			И ТИПЗНАЧЕНИЯ(АналитикиТоваров.Склад) = ТИП(Справочник.Партнеры))
		|	И (ДД.Организация,
		|		АналитикиТоваров.Номенклатура,
		|		АналитикиТоваров.Склад,
		|		ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|		ДД.Регистратор) В
		|	(
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация,
		|			АналитикиТоваров.Номенклатура,
		|			АналитикиТоваров.Склад,
		|			(ВЫБОР
		|				КОГДА КлючиРасходов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|					ТОГДА ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|						ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|				ИНАЧЕ КлючиРасходов.НаправлениеДеятельности КОНЕЦ) КАК НаправлениеДеятельности,
		|			ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.Регистратор)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.СборкаТоваров.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета
		|";
	
	Возврат ПодставитьШаблоныВесаИОбъемаВТекстЗапроса(ТекстЗапроса);
	
КонецФункции

Функция ТекстБазисПеремещенияПоСкладуСебестоимость()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	""ТекстБазисПеремещенияПоСкладуСебестоимость"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Объем,
		|	СУММА(ВЫБОР
		|		КОГДА ДД.Стоимость <> 0 ТОГДА ДД.Стоимость
		|		ИНАЧЕ ВЫРАЗИТЬ(ДД.Количество
		|			* (ЕСТЬNULL(Цены.Стоимость, 0) + ЕСТЬNULL(Цены.СтоимостьДопРасходы, 0)) КАК ЧИСЛО(15,2)) КОНЕЦ) КАК Стоимость,
		|	СУММА(ВЫБОР
		|		КОГДА ДД.СтоимостьБезНДС <> 0 ТОГДА ДД.СтоимостьБезНДС
		|		ИНАЧЕ ВЫРАЗИТЬ(ДД.Количество
		|			* (ЕСТЬNULL(Цены.СтоимостьБезНДС, 0) + ЕСТЬNULL(Цены.СтоимостьДопРасходыБезНДС, 0)) КАК ЧИСЛО(15,2)) КОНЕЦ) КАК СтоимостьБезНДС,
		|	СУММА(ВЫБОР
		|		КОГДА ДД.СтоимостьРегл <> 0 ТОГДА ДД.СтоимостьРегл
		|		ИНАЧЕ ВЫРАЗИТЬ(ДД.Количество
		|			* (ЕСТЬNULL(Цены.СтоимостьРегл, 0) + ЕСТЬNULL(Цены.ДопРасходыРегл, 0)) КАК ЧИСЛО(15,2)) КОНЕЦ) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.ВидДеятельностиНДС КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка) КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Партия КАК Партия,
		|	ДД.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО СпрСклады.Ссылка = АналитикиТоваров.Склад
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК Цены
		|		ПО Цены.Организация = ДД.Организация
		|		И Цены.Период = НАЧАЛОПЕРИОДА(ДД.Период, МЕСЯЦ)
		|		И Цены.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Цены.ВидЗапасов = ДД.ВидЗапасов
		|		И Цены.РазделУчета = ДД.РазделУчета
		|		И Цены.Партия = ДД.Партия
		|		И Цены.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
		|		И Цены.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И Цены.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|ГДЕ
		|	ДД.СлужебноеВидДвиженияПриход
		|	И ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ПеремещениеТоваров)
		|	И (ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИЛИ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		И ЕСТЬNULL(СпрСклады.ЦеховаяКладовая, ЛОЖЬ))
		|	И (ДД.Организация,
		|		АналитикиТоваров.Номенклатура,
		|		АналитикиТоваров.Склад,
		|		ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|		ДД.Регистратор) В
		|	(
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация,
		|			АналитикиТоваров.Номенклатура,
		|			АналитикиТоваров.Склад,
		|			(ВЫБОР
		|				КОГДА КлючиРасходов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|					ТОГДА ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|						ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|				ИНАЧЕ КлючиРасходов.НаправлениеДеятельности КОНЕЦ) КАК НаправлениеДеятельности,
		|			ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов = АналитикиТоваров.Склад
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета
		|";
	
	Возврат ПодставитьШаблоныВесаИОбъемаВТекстЗапроса(ТекстЗапроса);
	
КонецФункции

Функция ТекстБазисКорректировкиПоступлений()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	""ТекстБазисПриходыСебестоимость"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Поступление.Дата КАК Период,
		|	КорректировкиПриобретения.ДокументОснование КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	КорректировкиПриобретения.ДокументОснование КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Объем,
		|	СУММА(ВЫБОР
		|		КОГДА ДД.Стоимость <> 0 ТОГДА ДД.Стоимость
		|		ИНАЧЕ ВЫРАЗИТЬ(ДД.Количество
		|			* (ЕСТЬNULL(Цены.Стоимость, 0) + ЕСТЬNULL(Цены.СтоимостьДопРасходы, 0)) КАК ЧИСЛО(15,2)) КОНЕЦ) КАК Стоимость,
		|	СУММА(ВЫБОР
		|		КОГДА ДД.СтоимостьБезНДС <> 0 ТОГДА ДД.СтоимостьБезНДС
		|		ИНАЧЕ ВЫРАЗИТЬ(ДД.Количество
		|			* (ЕСТЬNULL(Цены.СтоимостьБезНДС, 0) + ЕСТЬNULL(Цены.СтоимостьДопРасходыБезНДС, 0)) КАК ЧИСЛО(15,2)) КОНЕЦ) КАК СтоимостьБезНДС,
		|	СУММА(ВЫБОР
		|		КОГДА ДД.СтоимостьРегл <> 0 ТОГДА ДД.СтоимостьРегл
		|		ИНАЧЕ ВЫРАЗИТЬ(ДД.Количество
		|			* (ЕСТЬNULL(Цены.СтоимостьРегл, 0) + ЕСТЬNULL(Цены.ДопРасходыРегл, 0)) КАК ЧИСЛО(15,2)) КОНЕЦ) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.ВидДеятельностиНДС КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка) КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Партия КАК Партия,
		|	ДД.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	Поступление.Дата КАК РасчетныйПериод
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкиПриобретения
		|		ПО КорректировкиПриобретения.Ссылка = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК Поступление
		|		ПО Поступление.Ссылка = КорректировкиПриобретения.ДокументОснование
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО СпрСклады.Ссылка = АналитикиТоваров.Склад
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК Цены
		|		ПО Цены.Организация = ДД.Организация
		|		И Цены.Период = НАЧАЛОПЕРИОДА(ДД.Период, МЕСЯЦ)
		|		И Цены.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Цены.ВидЗапасов = ДД.ВидЗапасов
		|		И Цены.РазделУчета = ДД.РазделУчета
		|		И Цены.Партия = ДД.Партия
		|		И Цены.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
		|		И Цены.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И Цены.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|ГДЕ
		|	ДД.СлужебноеВидДвиженияПриход
		|	И ДД.ТипЗаписи В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения))
		|	И (ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИЛИ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		И (СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ИЛИ ЕСТЬNULL(СпрСклады.ЦеховаяКладовая, ЛОЖЬ)))
		|	И (ДД.Организация,
		|		АналитикиТоваров.Номенклатура,
		|		АналитикиТоваров.Склад,
		|		ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|		КорректировкиПриобретения.ДокументОснование) В
		|	(
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация,
		|			АналитикиТоваров.Номенклатура,
		|			АналитикиТоваров.Склад,
		|			(ВЫБОР
		|				КОГДА КлючиРасходов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|					ТОГДА ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|						ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|				ИНАЧЕ КлючиРасходов.НаправлениеДеятельности КОНЕЦ) КАК НаправлениеДеятельности,
		|			КорректировкиПриобретения.ДокументОснование
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				КорректировкиПриобретения.ДокументОснование)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(КорректировкиПриобретения.ДокументОснование) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.СборкаТоваров.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	Поступление.Дата,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.ВидЗапасов,
		|	ДД.Регистратор,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	КорректировкиПриобретения.ДокументОснование
		|";
	
	Возврат ПодставитьШаблоныВесаИОбъемаВТекстЗапроса(ТекстЗапроса);
	
КонецФункции

Функция ТекстБазисПередачиТоваровСебестоимость()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	""ТекстБазисПередачиТоваровСебестоимость"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.КорОрганизация КАК Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.КорВидЗапасов КАК ВидЗапасов,
		|	ДД.КорАналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Объем,
		|	СУММА(ВЫРАЗИТЬ(ДД.Количество * ЕСТЬNULL(Цены.Стоимость, 0) КАК ЧИСЛО(15,2))) КАК Стоимость,
		|	СУММА(ВЫРАЗИТЬ(ДД.Количество * ЕСТЬNULL(Цены.СтоимостьБезНДС, 0) КАК ЧИСЛО(15,2))) КАК СтоимостьБезНДС,
		|	СУММА(ВЫРАЗИТЬ(ДД.Количество * ЕСТЬNULL(Цены.СтоимостьРегл, 0) КАК ЧИСЛО(15,2))) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ДД.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.КорВидДеятельностиНДС КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка) КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.КорРазделУчета КАК РазделУчета,
		|	ДД.КорПартия КАК Партия,
		|	ДД.КорАналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.КорАналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО СпрСклады.Ссылка = АналитикиТоваров.Склад
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК Цены
		|		ПО Цены.Организация = ДД.Организация
		|		И Цены.Период = НАЧАЛОПЕРИОДА(ДД.Период, МЕСЯЦ)
		|		И Цены.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Цены.ВидЗапасов = ДД.ВидЗапасов
		|		И Цены.РазделУчета = ДД.РазделУчета
		|		И Цены.Партия = ДД.Партия
		|		И Цены.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
		|		И Цены.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И Цены.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|ГДЕ
		|	НЕ ДД.СлужебноеВидДвиженияПриход
		|	И ДД.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
		|	И (ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИЛИ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		И (СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ИЛИ ЕСТЬNULL(СпрСклады.ЦеховаяКладовая, ЛОЖЬ)
		|			))
		|	И (ДД.КорОрганизация,
		|		АналитикиТоваров.Номенклатура,
		|		АналитикиТоваров.Склад,
		|		ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|		ДД.Регистратор) В
		|	(
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация,
		|			АналитикиТоваров.Номенклатура,
		|			АналитикиТоваров.Склад,
		|			(ВЫБОР
		|				КОГДА КлючиРасходов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|					ТОГДА ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|						ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|				ИНАЧЕ КлючиРасходов.НаправлениеДеятельности КОНЕЦ) КАК НаправлениеДеятельности,
		|			ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.Регистратор)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.КорОрганизация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.КорВидЗапасов,
		|	ДД.КорРазделУчета,
		|	ДД.КорАналитикаУчетаПартий,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета
		|";
	
	Возврат ПодставитьШаблоныВесаИОбъемаВТекстЗапроса(ТекстЗапроса);
	
КонецФункции

Функция ТекстБазисПеремещенияПоступленияСебестоимость()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	""ТекстБазисПеремещенияСебестоимость"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Объем,
		|	СУММА(ВЫРАЗИТЬ(ДД.Количество * ЕСТЬNULL(Цены.Стоимость, 0) КАК ЧИСЛО(15,2))) КАК Стоимость,
		|	СУММА(ВЫРАЗИТЬ(ДД.Количество * ЕСТЬNULL(Цены.СтоимостьБезНДС, 0) КАК ЧИСЛО(15,2))) КАК СтоимостьБезНДС,
		|	СУММА(ВЫРАЗИТЬ(ДД.Количество * ЕСТЬNULL(Цены.СтоимостьРегл, 0) КАК ЧИСЛО(15,2))) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.ВидДеятельностиНДС КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка) КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Партия КАК Партия,
		|	ДД.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК Цены
		|		ПО Цены.Организация = ДД.Организация
		|		И Цены.Период = НАЧАЛОПЕРИОДА(ДД.Период, МЕСЯЦ)
		|		И Цены.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Цены.ВидЗапасов = ДД.ВидЗапасов
		|		И Цены.РазделУчета = ДД.РазделУчета
		|		И Цены.Партия = ДД.Партия
		|		И Цены.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
		|		И Цены.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И Цены.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|ГДЕ
		|	ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Период >= &ДатаПереходаНаПартионныйУчетВерсии22
		|	И (ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ПеремещениеТоваров)
		|		ИЛИ ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ПоступлениеТоваров)
		|			И НЕ ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки))
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
		|	И (ДД.Организация,
		|		ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|		ДД.Регистратор) В
		|	(
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация,
		|			(ВЫБОР
		|				КОГДА КлючиРасходов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|					ТОГДА ЕСТЬNULL(АналитикиТоваров.Назначение.НаправлениеДеятельности,
		|						ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
		|				ИНАЧЕ КлючиРасходов.НаправлениеДеятельности КОНЕЦ) КАК НаправлениеДеятельности,
		|			ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				ДД.Регистратор,
		|				ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваров.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета
		|";
	
	Возврат ПодставитьШаблоныВесаИОбъемаВТекстЗапроса(ТекстЗапроса);
	
КонецФункции

Функция ТекстБазисПрошлыеПриходыТоваровСебестоимость()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	""ТекстБазисПрошлыеПриходыТоваровСебестоимость"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	(ДД.Количество - ЕСТЬNULL(ПрошлыеВыбытияТоваров.Количество, 0)) КАК Количество,
		|	(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,7)) * ДД.Количество - ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,7)) * ЕСТЬNULL(ПрошлыеВыбытияТоваров.Количество, 0)) КАК Вес,
		|	(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,7)) * ДД.Количество - ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,7)) * ЕСТЬNULL(ПрошлыеВыбытияТоваров.Количество, 0)) КАК Объем,
		|	(ДД.Стоимость - ЕСТЬNULL(ПрошлыеВыбытияТоваров.Стоимость, 0)) КАК Стоимость,
		|	(ДД.СтоимостьБезНДС - ЕСТЬNULL(ПрошлыеВыбытияТоваров.СтоимостьБезНДС, 0)) КАК СтоимостьБезНДС,
		|	(ДД.СтоимостьРегл - ЕСТЬNULL(ПрошлыеВыбытияТоваров.СтоимостьРегл, 0)) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	(ДД.ПостояннаяРазница - ЕСТЬNULL(ПрошлыеВыбытияТоваров.ПостояннаяРазница, 0)) КАК ПостояннаяРазница,
		|	(ДД.ВременнаяРазница - ЕСТЬNULL(ПрошлыеВыбытияТоваров.ВременнаяРазница, 0)) КАК ВременнаяРазница,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.ВидДеятельностиНДС КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка) КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Партия КАК Партия,
		|	ДД.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	ПрошлыеПоступления КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПрошлыхПоступлений КАК Остатки
		|		ПО Остатки.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Остатки.РазделУчета = ДД.РазделУчета
		|		И Остатки.ВидЗапасов = ДД.ВидЗапасов
		|		И Остатки.Организация = ДД.Организация
		|		И Остатки.Партия = ДД.Партия
		|		И Остатки.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
		|		И Остатки.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И Остатки.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПрошлыеВыбытияТоваровПоНоменклатуре КАК ПрошлыеВыбытияТоваров
		|		ПО ПрошлыеВыбытияТоваров.Регистратор = ДД.Регистратор
		|		И ПрошлыеВыбытияТоваров.Организация = ДД.Организация
		|		И ПрошлыеВыбытияТоваров.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И ПрошлыеВыбытияТоваров.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|		И АналитикиТоваров.Номенклатура = ПрошлыеВыбытияТоваров.Номенклатура
		|		И АналитикиТоваров.Характеристика = ПрошлыеВыбытияТоваров.Характеристика
		|		И АналитикиТоваров.Серия = ПрошлыеВыбытияТоваров.Серия
		|		И АналитикиТоваров.СтатьяКалькуляции = ПрошлыеВыбытияТоваров.СтатьяКалькуляции
		|ГДЕ
		|	(ДД.Количество - ЕСТЬNULL(ПрошлыеВыбытияТоваров.Количество, 0)) > 0
		|";
	
	Возврат ПодставитьШаблоныВесаИОбъемаВТекстЗапроса(ТекстЗапроса);
	
КонецФункции

Функция ТекстБазисЗаказы()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	""ТекстБазисЗаказы"" КАК ЗапросИсточник,
		|	ДД.Приоритет,
		|	ДД.ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Заказ КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.НДСУпр) КАК НДСУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.ВидДеятельностиНДС КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	(ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.Заказ) = ТИП(Документ.ЗаказНаПеремещение) ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка) КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	(ВЫБОР КОГДА ДД.Период < &НачалоПериода ТОГДА &НачалоПериода ИНАЧЕ ДД.Период КОНЕЦ) КАК РасчетныйПериод
		|ИЗ
		|	ПартииПоЗаказам КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоступленияИЗаказыИзАналитикРасходов КАК Заказы
		|		ПО Заказы.Поступление = ДД.Регистратор
		|		И Заказы.Заказ = ДД.Заказ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|ГДЕ
		|	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) В (&СобственныеТипыЗапасов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Приоритет,
		|	ДД.ТипЗаписи,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	(ВЫБОР КОГДА ДД.Период < &НачалоПериода ТОГДА &НачалоПериода ИНАЧЕ ДД.Период КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.Заказ) = ТИП(Документ.ЗаказНаПеремещение) ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)
		|";
	
	Возврат ПодставитьШаблоныВесаИОбъемаВТекстЗапроса(ТекстЗапроса);
	
КонецФункции

Функция ТекстБазисУслуги()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстБазисУслуги"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.Регистратор КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	1 КАК Количество,
		|	0 КАК Вес,
		|	0 КАК Объем,
		|	СУММА(ДД.Сумма) КАК Стоимость,
		|	СУММА(ДД.Сумма) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СуммаРегл) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЕСТЬNULL(ПоступлениеТоваров.ЗакупкаПодДеятельность, ПоступлениеУслуг.ЗакупкаПодДеятельность) КАК ВидДеятельностиНДС,
		|	ЕСТЬNULL(ПоступлениеТоваров.ЗакупкаПодДеятельность, ПоступлениеУслуг.ЗакупкаПодДеятельность) КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ДД.Подразделение КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.СтатьяРасходов КАК СтатьяОтраженияРасходов,
		|	ДД.СтатьяРасходов.ВариантРаздельногоУчетаНДС КАК ВариантРаздельногоУчетаНДС,
		|	ДД.АналитикаРасходов КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПоступлениеТоваров
		|		ПО ПоступлениеТоваров.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеУслугПрочихАктивов КАК ПоступлениеУслуг
		|		ПО ПоступлениеУслуг.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период <= &КонецПериода
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (ДД.Регистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг 
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов)
		|	И (ПоступлениеТоваров.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
		|		ИЛИ ПоступлениеУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС))
		|	И (ДД.Организация, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов = ДД.Регистратор
		|		)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.СтатьяРасходов,
		|	ДД.СтатьяРасходов.ВариантРаздельногоУчетаНДС,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(ПоступлениеТоваров.ЗакупкаПодДеятельность, ПоступлениеУслуг.ЗакупкаПодДеятельность)
		|";
КонецФункции

Функция ТекстБазисПартииПрочихРасходов()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстБазисПартииПрочихРасходов"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.Регистратор КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	1 КАК Количество,
		|	0 КАК Вес,
		|	0 КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЕСТЬNULL(ПоступлениеТоваров.ЗакупкаПодДеятельность, ПоступлениеУслуг.ЗакупкаПодДеятельность) КАК ВидДеятельностиНДС,
		|	ЕСТЬNULL(ПоступлениеТоваров.ЗакупкаПодДеятельность, ПоступлениеУслуг.ЗакупкаПодДеятельность) КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ДД.Подразделение КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяОтраженияРасходов,
		|	ДД.СтатьяРасходов.ВариантРаздельногоУчетаНДС КАК ВариантРаздельногоУчетаНДС,
		|	ДД.АналитикаРасходов КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПоступлениеТоваров
		|		ПО ПоступлениеТоваров.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеУслугПрочихАктивов КАК ПоступлениеУслуг
		|		ПО ПоступлениеУслуг.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период <= &КонецПериода
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|	И (ДД.Регистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг 
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов)
		|	И (ПоступлениеТоваров.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
		|		ИЛИ ПоступлениеУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС))
		|	И (ДД.Организация, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов = ДД.Регистратор
		|		)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.СтатьяРасходов,
		|	ДД.СтатьяРасходов.ВариантРаздельногоУчетаНДС,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(ПоступлениеТоваров.ЗакупкаПодДеятельность, ПоступлениеУслуг.ЗакупкаПодДеятельность)
		|";
КонецФункции

Функция ТекстБазисПрочиеАктивыПассивы()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстБазисПрочиеАктивыПассивы"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.Регистратор КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	1 КАК Количество,
		|	0 КАК Вес,
		|	0 КАК Объем,
		|	СУММА(ДД.Сумма) КАК Стоимость,
		|	СУММА(ДД.Сумма) КАК СтоимостьБезНДС,
		|	СУММА(ДД.Сумма) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЕСТЬNULL(ПоступлениеТоваров.ЗакупкаПодДеятельность, ПоступлениеУслуг.ЗакупкаПодДеятельность) КАК ВидДеятельностиНДС,
		|	ЕСТЬNULL(ПоступлениеТоваров.ЗакупкаПодДеятельность, ПоступлениеУслуг.ЗакупкаПодДеятельность) КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ДД.Подразделение КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.Статья КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента) КАК ВариантРаздельногоУчетаНДС,
		|	ДД.Аналитика КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПрочиеАктивыПассивы КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПоступлениеТоваров
		|		ПО ПоступлениеТоваров.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеУслугПрочихАктивов КАК ПоступлениеУслуг
		|		ПО ПоступлениеУслуг.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период <= &КонецПериода
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ВидИсточника = ЗНАЧЕНИЕ(Перечисление.ВидыИсточниковУправленческогоБаланса.ПустаяСсылка)
		|	И (ДД.Регистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг 
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов)
		|	И (ПоступлениеТоваров.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
		|		ИЛИ ПоступлениеУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС))
		|	И (ДД.Организация, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов = ДД.Регистратор
		|		)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.Статья,
		|	ДД.Аналитика,
		|	ЕСТЬNULL(ПоступлениеТоваров.ЗакупкаПодДеятельность, ПоступлениеУслуг.ЗакупкаПодДеятельность)
		|";
КонецФункции

Функция ТекстБазисПрошлыеВыбытияТоваров() // использует ПрошлыеВыбытияТоваров
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	""ТекстБазисПрошлыеВыбытияТоваров"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1,1,1) КАК Период,
		|	ВЫБОР
		|		КОГДА ДД.Партия = НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0 КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,7)) * ДД.Количество) КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.ВидДеятельностиНДС КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка) КАК ВариантРаздельногоУчетаНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Партия КАК Партия,
		|	ДД.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	ДАТАВРЕМЯ(1,1,1) КАК РасчетныйПериод
		|ИЗ
		|	ПрошлыеВыбытияТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО АналитикиТоваров.Склад = Склады.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ДД.Партия = НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета
		|";
	
	Возврат ПодставитьШаблоныВесаИОбъемаВТекстЗапроса(ТекстЗапроса);
	
КонецФункции

// ... для СформироватьДопРасходыВСебестоимостьТоваров()

Функция ТекстАналитикиПартнеров()
	Возврат
		"ВЫБРАТЬ
		|	ДД.Регистратор КАК ДокументПоступления,
		|	МИНИМУМ(ДД.АналитикаУчетаПоПартнерам) КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.СлужебноеВидДвиженияПриход
		|	И ДД.Количество > 0
		|	И ДД.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
		|	И ДД.Регистратор В (&Поступления)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор
		|";
КонецФункции

// ... для СформироватьДопРасходыВДвиженияНоменклатураДоходыРасходы()

Функция ТекстРегистраторыДляНоменклатураДоходыРасходы() // вт РегистраторыДопРасходы
	Возврат
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор
		|ПОМЕСТИТЬ РегистраторыДопРасходы
		|ИЗ
		|	ВТКэшРасчетныеОборотыПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Партии
		|		ПО Партии.Период = ДД.Период
		|		И Партии.Регистратор = ДД.Регистратор
		|ГДЕ
		|	НЕ ДД.СлужебноеВидДвиженияПриход
		|	И Партии.СлужебноеВидДвиженияПриход
		|ИНДЕКСИРОВАТЬ ПО
		|	ДД.Регистратор
		|";
КонецФункции

Функция ТекстОписаниеДанныхДляНоменклатураДоходыРасходы()
	Возврат
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(80)) 			  						  КАК ЗапросИсточник,
		|	0 																  КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПустаяСсылка) 			  КАК ТипЗаписи,
		|	ЛОЖЬ 															  КАК РасчетЗавершен,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) 									  КАК Период,
		|	НЕОПРЕДЕЛЕНО 													  КАК Регистратор,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 		  КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 					  КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 			  КАК Подразделение,
		|
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)		  КАК НаправлениеДеятельностиНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) 						  КАК Склад,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) 				  КАК ТипЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) 					  КАК ВидЗапасов,
		|
		|	НЕОПРЕДЕЛЕНО 													  КАК СтатьяДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО 													  КАК АналитикаРасходов,
		|
		|	0 													  			  КАК Количество,
		|	0 													  			  КАК Стоимость,
		|	0 													  			  КАК СтоимостьБезНДС,
		|	0 													  			  КАК СтоимостьРегл,
		|	0 													  			  КАК СтоимостьУпр,
		|
		|	НЕОПРЕДЕЛЕНО 													  КАК ИсточникГФУНоменклатуры,
		|	НЕОПРЕДЕЛЕНО 													  КАК ДокументДвижения
		|//ВоВременнуюТаблицу
		|";
КонецФункции

Функция ТекстНоменклатураДоходыРасходыИзСебестоимости()
	Возврат
		"ВЫБРАТЬ
		|	""ТекстНоменклатураДоходыРасходыИзСебестоимости"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.Период,
		|	ДД.Регистратор,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость),
		|	ДД.Организация,
		|	ДД.Подразделение,
		|
		|	Аналитика.Назначение.НаправлениеДеятельности,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Аналитика.Склад,
		|	ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов,
		|	ДД.ВидЗапасов,
		|
		|	ДД.СтатьяРасходовСписания КАК СтатьяДоходовРасходов,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов,
		|
		|	0 								 КАК Количество,
		|	СУММА(ДД.ДопРасходы) 		 	 КАК ДопРасходы,
		|	СУММА(ДД.ДопРасходыБезНДС) 		 КАК ДопРасходыБезНДС,
		|	СУММА(ДД.ДопРасходыРегл) 		 КАК ДопРасходыРегл,
		|	СУММА(ДД.ДопРасходыУпр) 		 КАК ДопРасходыУпр,
		|
		|	ДД.ВидЗапасов КАК ИсточникГФУНоменклатуры,
		|	ДД.Регистратор КАК ДокументДвижения
		|
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистраторыДопРасходы КАК Регистраторы
		|		ПО Регистраторы.Регистратор = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Количество = 0
		|	И (ДД.ДопРасходы <> 0 ИЛИ ДД.ДопРасходыБезНДС <> 0 ИЛИ ДД.ДопРасходыРегл <> 0 ИЛИ ДД.ДопРасходыУпр <> 0)
		|	И НЕ ДД.ХозяйственнаяОперация В
		|			(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка),
		|			 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ДополнительныеРасходыБезПартии),
		|			 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ДополнительныеРасходыСПартией))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	Аналитика.Назначение.НаправлениеДеятельности,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Аналитика.Склад,
		|	ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)),
		|	ДД.ВидЗапасов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

// Заполнение расчетной партии

Процедура ЗаполнитьРасчетнуюПартиюЗаказВПриходе(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход)
	
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	РасчетнаяПартия.РасчетЗавершен = Истина;
	
	Если Приход = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СуммовыеРесурсы = Новый Структура("Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница, НДСУпр");

	// расчетная партия заполняется на наибольшее общее вычитаемое
	КоличествоСписания = Мин(Приход.Количество, Расход.Количество);
	
	// заполняем показатели расчетной партии
	Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
		РасчетнаяПартия[ИмяРесурса.Ключ] = Окр(КоличествоСписания * Расход[ИмяРесурса.Ключ] / Расход.Количество, 2);
	КонецЦикла;
	РасчетнаяПартия.Количество = КоличествоСписания;
	
	// корректируем базу расчета в расходе
	Если Расход <> РасчетнаяПартия Тогда
		Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
			Расход[ИмяРесурса.Ключ] = Расход[ИмяРесурса.Ключ] - РасчетнаяПартия[ИмяРесурса.Ключ];
		КонецЦикла;
		Расход.Количество = Расход.Количество - КоличествоСписания;
	КонецЕсли;
	
	// корректируем базу расчета в приходе
	Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
		Приход[ИмяРесурса.Ключ] = Приход[ИмяРесурса.Ключ] - Окр(КоличествоСписания * Приход[ИмяРесурса.Ключ] / Приход.Количество, 2);
	КонецЦикла;
	Приход.Количество = Приход.Количество - КоличествоСписания;
	
	// Заполняем партионную идентификацию в расчетной партии
	РасчетнаяПартия.Заказ = Приход.Заказ;
	
КонецПроцедуры

Процедура ЗаполнитьРасчетнуюПартиюПрочихРасходов(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход)
	
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	Если Приход = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Потребление;
	РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Расход;
	РасчетнаяПартия.Период = Макс(Расход.Период, Расход.РасчетныйПериод);
	
	Если Расход.Базис = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СуммовыеРесурсы = Новый Структура("Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница, НДСУпр");
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	БазисСписания = Мин(Приход.Значение.Базис, Расход.Базис);
	
	// заполняем показатели расчетной партии
	Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
		РасчетнаяПартия[ИмяРесурса.Ключ] = Окр(БазисСписания * Расход[ИмяРесурса.Ключ] / Расход.Базис, 2);
	КонецЦикла;
	РасчетнаяПартия.Базис = БазисСписания;
	
	// корректируем базу расчета в расходе
	Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
		Расход[ИмяРесурса.Ключ] = Расход[ИмяРесурса.Ключ] - РасчетнаяПартия[ИмяРесурса.Ключ];
	КонецЦикла;
	Расход.Базис = Расход.Базис - БазисСписания;
	
	// корректируем базу расчета в приходе
	Приход.Значение.Базис = Приход.Значение.Базис - БазисСписания;
	
	// Заполняем партионную идентификацию в расчетной партии
	Если ТипЗнч(Приход.Ключ) = Тип("ПеречислениеСсылка.ТипыНалогообложенияНДС") Тогда
		РасчетнаяПартия.НалогообложениеНДС = Приход.Ключ;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРасчетнуюПартиюПриходПартииРасходов(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход)
	
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	Если Приход = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	Если Приход.ПравилоРаспределения = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству Тогда
		Расход.Базис = Расход.Количество;
	ИначеЕсли Приход.ПравилоРаспределения = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноВесу Тогда
		Расход.Базис = Расход.Вес;
	ИначеЕсли Приход.ПравилоРаспределения = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноОбъему Тогда
		Расход.Базис = Расход.Объем;
	Иначе
		Расход.Базис = Расход.Стоимость;
	КонецЕсли;
	
	БазисСписания = Мин(Приход.Базис, Расход.Базис);
	
	СуммовыеРесурсы = Новый Структура("Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница, НДСУпр");
	
	// заполняем показатели расчетной партии
	Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
		РасчетнаяПартия[ИмяРесурса.Ключ] = Окр(БазисСписания * Приход[ИмяРесурса.Ключ] / Приход.Базис, 2);
	КонецЦикла;
	
	РасчетнаяПартия.Количество = Окр(БазисСписания * Расход.Количество / Расход.Базис, 3);
	РасчетнаяПартия.Вес 	   = Окр(БазисСписания * Расход.Вес / Расход.Базис, 7);
	РасчетнаяПартия.Объем 	   = Окр(БазисСписания * Расход.Объем / Расход.Базис, 7);
	РасчетнаяПартия.Базис 	   = БазисСписания;
	
	// корректируем базу расчета в приходе
	Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
		Приход[ИмяРесурса.Ключ] = Приход[ИмяРесурса.Ключ] - РасчетнаяПартия[ИмяРесурса.Ключ];
	КонецЦикла;
	
	Приход.Базис = Приход.Базис - БазисСписания;
	
	// корректируем базу расчета в расходе
	Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
		Расход[ИмяРесурса.Ключ] = Расход[ИмяРесурса.Ключ] - Окр(БазисСписания * Расход[ИмяРесурса.Ключ] / Расход.Базис, 2);
	КонецЦикла;
	
	Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
	Расход.Вес 		  = Расход.Вес - РасчетнаяПартия.Вес;
	Расход.Объем 	  = Расход.Объем - РасчетнаяПартия.Объем;
	Расход.Базис 	  = Расход.Базис - БазисСписания;
	
	// Заполняем партионную идентификацию в расчетной партии
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход,
		"ВидДвижения, Период, Регистратор, ДокументПоступленияРасходов, СтатьяРасходов, ХозяйственнаяОперация,
		|Подразделение, ПравилоРаспределения, НаправлениеДеятельности");
		
	Если ЗначениеЗаполнено(Приход.АналитикаРасходов) Тогда
		РасчетнаяПартия.АналитикаРасходов = Приход.АналитикаРасходов;
	КонецЕсли;
	
	РасчетнаяПартия.ВидДеятельностиНДС = Приход.ВидДеятельностиНДС;
	РасчетнаяПартия.КорВидДеятельностиНДС = Приход.НалогообложениеНДС;
	
	РасчетнаяПартия.КорАналитикаУчетаПартий  = Приход.АналитикаУчетаПартий;
	РасчетнаяПартия.ТипЗаписи 				 = Перечисления.ТипыЗаписейПартий.Партия;
	
	РасчетнаяПартия.РасчетЗавершен = Истина;
	
КонецПроцедуры

// Вспомогательные

Функция СкопироватьКолонки(КолонкиИсточника, КолонкиПриемника)
	
	ПоляИсточника = "";
	
	Для Каждого Колонка Из КолонкиИсточника Цикл
		КолонкиПриемника.Добавить(Колонка.Имя, Колонка.ТипЗначения);
		ПоляИсточника = ПоляИсточника + ?(ЗначениеЗаполнено(ПоляИсточника), ", ", "") + Колонка.Имя;
	КонецЦикла;
	
	Возврат ПоляИсточника;
	
КонецФункции

Функция УзелИндекса(Индекс, КлючиИндекса)
	УзелИндекса = Индекс;
	Счетчик = 0;
	Пока Счетчик <= КлючиИндекса.ВГраница() И КлючиИндекса[Счетчик] <> Неопределено Цикл
		УзелИндекса = УзелИндекса[КлючиИндекса[Счетчик]];
		Если УзелИндекса = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		Счетчик = Счетчик + 1;
	КонецЦикла;
	Возврат УзелИндекса;
КонецФункции

Функция ДобавитьУзелИндекса(Индекс, КлючиИндекса, Значение)
	ВГраница = КлючиИндекса.ВГраница();
	Если ВГраница < 0 Или КлючиИндекса[0] = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	УзелИндекса = Индекс;
	Счетчик = 0;
	Пока Счетчик < ВГраница Цикл
		ПодузелИндекса = УзелИндекса[КлючиИндекса[Счетчик]];
		Если ПодузелИндекса = Неопределено Тогда
			ПодузелИндекса = Новый Соответствие;
			УзелИндекса.Вставить(КлючиИндекса[Счетчик], ПодузелИндекса);
		КонецЕсли;
		УзелИндекса = ПодузелИндекса;
		Счетчик = Счетчик + 1;
		Если КлючиИндекса[Счетчик] = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЦикла;
	УзелИндекса.Вставить(КлючиИндекса[Счетчик], Значение);
	Возврат Значение;
КонецФункции

Функция АналитикиОбсчетаПартийПрочих(Движение, ПустыеСсылки)
	Результат = Новый Массив;
	Результат.Добавить(Движение.Номенклатура);
	Если Движение.Номенклатура <> Неопределено Тогда
		Результат.Добавить(ПустаяСсылка(Движение.Номенклатура, ПустыеСсылки));
	КонецЕсли;
	Результат.Добавить(Движение.Склад);
	Если Движение.Склад <> Неопределено Тогда
		Результат.Добавить(ПустаяСсылка(Движение.Склад, ПустыеСсылки));
	КонецЕсли;
	Результат.Добавить(Движение.Регистратор);
	Если Не ЗначениеЗаполнено(Движение.Регистратор) Тогда
		Результат.Добавить(Движение.Партия);
	КонецЕсли;
	Если Движение.Регистратор <> Неопределено Тогда
		Результат.Добавить(ПустаяСсылка(Движение.Регистратор, ПустыеСсылки));
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ПустаяСсылка(Ссылка, КэшСсылок)
	Результат = КэшСсылок[ТипЗнч(Ссылка)];
	Если Результат = Неопределено Тогда
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
		Если МенеджерОбъекта = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		Результат = МенеджерОбъекта.ПустаяСсылка();
		КэшСсылок.Вставить(ТипЗнч(Ссылка), Результат);
	КонецЕсли;
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа10_1_СписаниеРасходовНаВыбытиеТоваровПрошлыхПериодов

// Выборка данных

Процедура ПолучитьДанныеДляСписанияРасходовНаВыбытиеТоваровРегистрСебестоимость(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ""
		+ ТекстРаспределениеРасходовНаВыбытиеТоваровПрошлыхПериодов() // результаты распределения в ВТ РаспределениеРасходов
		+ ТекстРазделениеЗапросов()
		// выборка данных
		+ ТекстОписаниеДанныхДляСписанияРасходовНаВыбытиеТоваровРегистрСебестоимость()
		+ ТекстОбъединениеЗапросов() + ТекстСписанияРасходовНаВыбытиеТоваровРегистрСебестоимость()
		+ ТекстОбъединениеЗапросов() + ТекстОприходованиеРасходовНаОстаткиТоваровРегистрСебестоимость();
	
	ВыбиратьДанныеДляРасчетаВоВременнуюТаблицу(Запрос);
	
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "Данные");
	
	Запрос.Выполнить();
	
	// Нумерация строк не требуется, т.к. распределение выполняться не будет.
	
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ПолучитьДанныеДляСписанияРасходовНаВыбытиеТоваровРегистрВыручка(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ""
		// выборка данных
		+ ТекстОписаниеДанныхДляСписанияРасходовНаВыбытиеТоваровРегистрВыручка()
		+ ТекстОбъединениеЗапросов() + ТекстСписанияРасходовНаВыбытиеТоваровРегистрВыручка(); // результаты распределения в ВТ РаспределениеРасходов
	
	ВыбиратьДанныеДляРасчетаВоВременнуюТаблицу(Запрос);
	
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "Данные");
	
	Запрос.Выполнить();
	
	// Нумерация строк не требуется, т.к. распределение выполняться не будет.
	
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ПолучитьДанныеДляСписанияРасходовНаВыбытиеТоваровРегистрПрочиеРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ""
		// выборка данных
		+ ТекстОписаниеДанныхДляСписанияРасходовНаВыбытиеТоваровРегистрПрочиеРасходы()
		+ ТекстОбъединениеЗапросов() + ТекстСписанияРасходовНаВыбытиеТоваровРегистрПрочиеРасходы(); // результаты распределения в ВТ РаспределениеРасходов
	
	ВыбиратьДанныеДляРасчетаВоВременнуюТаблицу(Запрос);
	
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "Данные");
	
	Запрос.Выполнить();
	
	// Нумерация строк не требуется, т.к. распределение выполняться не будет.
	
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ПолучитьДанныеДляСписанияРасходовНаВыбытиеТоваровРегистрНоменклатураДоходыРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ""
		// выборка данных
		+ ТекстОписаниеДанныхДляСписанияРасходовНаВыбытиеТоваровРегистрНоменклатураДоходыРасходы()
		+ ТекстОбъединениеЗапросов() + ТекстСписанияРасходовНаВыбытиеТоваровРегистрНоменклатураДоходыРасходы(); // результаты распределения в ВТ РаспределениеРасходов
	
	ВыбиратьДанныеДляРасчетаВоВременнуюТаблицу(Запрос);
	
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "Данные");
	
	Запрос.Выполнить();
	
	// Нумерация строк не требуется, т.к. распределение выполняться не будет.
	
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"АналитикиПрошлыхПоступлений, ОстаткиТоваров, ПрошлыеВыбытияТоваров,
		|ПрошлыеВыбытияТоваровДетальные, РасходыДляСписанияНаВыбытиеТоваров, БазаДляРаспределенияРасходов,
		|РаспределениеРасходовСПогрешностямиОкругления, ЗависшиеКопейки,ВозможныеВыбытияДляСписанияЗависшихКопеек,
		|НаправленияВыбытияДляСписанияЗависшихКопеек, РаспределениеРасходов");
	
КонецПроцедуры

// Тексты запросов

Функция ТекстРаспределениеРасходовНаВыбытиеТоваровПрошлыхПериодов() // ВТ РаспределениеРасходов - общая для регистров себестоимости, выручки, прочих расходов
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ДД.ТипЗаписи,
	|	ДД.АналитикаРасходов КАК ДокументДвижения,
	|
	|	ДД.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	Аналитика.Назначение,
	|	Аналитика.СтатьяКалькуляции,
	|
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(
	|		ВЫБОР КОГДА Реестр.ДатаДокументаИБ ЕСТЬ NULL ИЛИ Реестр.ДатаДокументаИБ < &ДатаПереходаНаПартионныйУчетВерсии22
	|			ТОГДА &ДатаПереходаНаПартионныйУчетВерсии22
	|			ИНАЧЕ Реестр.ДатаДокументаИБ
	|		КОНЕЦ, МЕСЯЦ)) КАК ПериодПоступления,
	|
	|	СУММА(ДД.ДопРасходы) КАК ДопРасходы,
	|	СУММА(ДД.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
	|	СУММА(ДД.ДопРасходыРегл) КАК ДопРасходыРегл,
	|	СУММА(ДД.ДопРасходыУпр) КАК ДопРасходыУпр,
	|	СУММА(ДД.НДСРегл) КАК НДСРегл,
	|	СУММА(ДД.НДСУпр) КАК НДСУпр,
	|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ РасходыДляСписанияНаВыбытиеТоваров
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО Склады.Ссылка = Аналитика.Склад
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК Реестр
	|		ПО Реестр.Ссылка = ДД.АналитикаРасходов
	|ГДЕ
	|	&РаспределениеДопРасходовПоВыбывшимТоварам
	|	И ДД.СлужебноеВидДвиженияПриход
	|	И ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	И ДД.ТипЗаписи В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости), 
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ДД.ТипЗаписи,
	|	ДД.АналитикаРасходов,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	Аналитика.Назначение,
	|	Аналитика.СтатьяКалькуляции,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	АналитикиТоваров.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	АналитикиТоваров.Номенклатура,
	|	АналитикиТоваров.Характеристика,
	|	АналитикиТоваров.Серия,
	|	АналитикиТоваров.Назначение,
	|	АналитикиТоваров.СтатьяКалькуляции,
	|
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|
	|	МИНИМУМ(ДД.ПериодПоступления) КАК ПериодПоступления
	|
	|ПОМЕСТИТЬ АналитикиПрошлыхПоступлений
	|ИЗ
	|	РасходыДляСписанияНаВыбытиеТоваров КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
	// При подборе аналитик номенклатуры склад не учитываем - соединяемся с аналитиками по всем складам.
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
	|		ПО АналитикиТоваров.Номенклатура = Аналитика.Номенклатура
	|		И АналитикиТоваров.Характеристика = Аналитика.Характеристика
	|		И АналитикиТоваров.Серия = Аналитика.Серия
	|		И АналитикиТоваров.Назначение = Аналитика.Назначение
	|		И АналитикиТоваров.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО Склады.Ссылка = АналитикиТоваров.Склад
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикиТоваров.КлючАналитики,
	|	АналитикиТоваров.Номенклатура,
	|	АналитикиТоваров.Характеристика,
	|	АналитикиТоваров.Серия,
	|	АналитикиТоваров.Назначение,
	|	АналитикиТоваров.СтатьяКалькуляции,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	РазделУчета,
	|	ВидЗапасов,
	|	Организация,
	|	Партия,
	|	АналитикаУчетаПартий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|
	|	ДД.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ ОстаткиТоваров
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(
	|		&ГраницаКонецПредыдущегоПериода,
	|		(АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация, Партия, АналитикаУчетаПартий) В
	|			(ВЫБРАТЬ
	|				Т.АналитикаУчетаНоменклатуры, Т.РазделУчета, Т.ВидЗапасов, Т.Организация, Т.Партия, Т.АналитикаУчетаПартий
	|			 ИЗ
	|				АналитикиПрошлыхПоступлений КАК Т)
	|	) КАК ДД
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.МоментВремени,
	|	ДД.НомерСтроки,
	|
	|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитики.Номенклатура,
	|	Аналитики.Характеристика,
	|	Аналитики.Серия,
	|	Аналитики.Назначение,
	|	Аналитики.СтатьяКалькуляции,
	|
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|
	|	ДД.КорВидДеятельностиНДС,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ЗаказКлиента,
	|	ДД.Подразделение,
	|	ДД.АналитикаРасходов,
	|	ДД.СтатьяРасходовСписания,
	|	ДД.ХозяйственнаяОперация,
	|
	|	СУММА(ДД.Количество) КАК Количество
	|
	|ПОМЕСТИТЬ ПрошлыеВыбытияТоваров
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиПрошлыхПоступлений КАК Аналитики
	|		ПО Аналитики.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
	|		И Аналитики.РазделУчета = ДД.РазделУчета
	|		И Аналитики.ВидЗапасов = ДД.ВидЗапасов
	|		И Аналитики.Организация = ДД.Организация
	|		И Аналитики.Партия = ДД.Партия
	|		И Аналитики.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
	|ГДЕ
	|	ДД.Период МЕЖДУ Аналитики.ПериодПоступления И &КонецПредыдущегоПериода
	|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НЕ (ДД.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|			И ДД.КорРазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|	И ДД.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.МоментВремени,
	|	ДД.НомерСтроки,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	Аналитики.Номенклатура,
	|	Аналитики.Характеристика,
	|	Аналитики.Серия,
	|	Аналитики.Назначение,
	|	Аналитики.СтатьяКалькуляции,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.КорВидДеятельностиНДС,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ЗаказКлиента,
	|	ДД.Подразделение,
	|	ДД.АналитикаРасходов,
	|	ДД.СтатьяРасходовСписания,
	|	ДД.ХозяйственнаяОперация
	|ИМЕЮЩИЕ
	|	СУММА(ДД.Количество) > 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоОстатки,
	|	ВЫБОР КОГДА Выручка.Регистратор ЕСТЬ NULL
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоПродажа,
	|
	|	ДД.Регистратор,
	|	ЕСТЬNULL(Выручка.МоментВремени, ДД.МоментВремени) КАК МоментВремени,
	|	ЕСТЬNULL(Выручка.НомерСтроки, ДД.НомерСтроки) КАК НомерСтроки,
	|
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	ДД.Номенклатура,
	|	ДД.Характеристика,
	|	ДД.Серия,
	|	ДД.Назначение,
	|	ДД.СтатьяКалькуляции,
	|
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаФинансовогоУчета,
	|	ДД.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ЗаказКлиента,
	|	ДД.Подразделение,
	|	ВЫБОР КОГДА Выручка.Регистратор ЕСТЬ NULL И СтатьиРасходов.Ссылка ЕСТЬ NULL
	|		ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ВыбытияТоваровВПрошлыхПериодах)
	|		ИНАЧЕ ДД.СтатьяРасходовСписания
	|	КОНЕЦ КАК СтатьяРасходовСписания,
	|	ВЫБОР КОГДА Выручка.Регистратор ЕСТЬ NULL И СтатьиРасходов.Ссылка ЕСТЬ NULL
	|		ТОГДА ДД.Номенклатура
	|		ИНАЧЕ ДД.АналитикаРасходов
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ДД.ХозяйственнаяОперация,
	|
	|	ЕСТЬNULL(Выручка.Менеджер, НЕОПРЕДЕЛЕНО) КАК Менеджер,
	|	ЕСТЬNULL(Выручка.Склад, НЕОПРЕДЕЛЕНО) КАК Склад,
	|	ЕСТЬNULL(Выручка.Соглашение, НЕОПРЕДЕЛЕНО) КАК Соглашение,
	|	ЕСТЬNULL(Выручка.Договор, НЕОПРЕДЕЛЕНО) КАК Договор,
	|	ЕСТЬNULL(Выручка.ТипЗапасов, НЕОПРЕДЕЛЕНО) КАК ТипЗапасов,
	|	ЕСТЬNULL(Выручка.ИсточникГФУНоменклатуры, НЕОПРЕДЕЛЕНО) КАК ИсточникГФУНоменклатуры,
	|	ЕСТЬNULL(Выручка.ИсточникГФУРасчетов, НЕОПРЕДЕЛЕНО) КАК ИсточникГФУРасчетов,
	|
	|	СУММА(ЕСТЬNULL(Выручка.Количество, ДД.Количество)) КАК Количество
	|
	|ПОМЕСТИТЬ ПрошлыеВыбытияТоваровДетальные
	|ИЗ
	|	ПрошлыеВыбытияТоваров КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК Выручка
	|		ПО ДД.Регистратор = Выручка.Регистратор
	|		И ДД.АналитикаУчетаНоменклатуры = Выручка.АналитикаУчетаНоменклатуры
	|		И ДД.РазделУчета = Выручка.РазделУчета
	|		И ДД.ВидЗапасов = Выручка.ВидЗапасов
	|		И ДД.Партия = Выручка.Партия
	|		И ДД.АналитикаУчетаПартий = Выручка.АналитикаУчетаПартий
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОтборАналитикаПоПартнерам КАК Отбор
	|		ПО Выручка.АналитикаУчетаПоПартнерам = Отбор.КлючАналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО ДД.СтатьяРасходовСписания = СтатьиРасходов.Ссылка
	|ГДЕ
	|	Выручка.Регистратор ЕСТЬ NULL
	|	ИЛИ НЕ Отбор.КлючАналитики ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА Выручка.Регистратор ЕСТЬ NULL
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ДД.Регистратор,
	|	ЕСТЬNULL(Выручка.МоментВремени, ДД.МоментВремени),
	|	ЕСТЬNULL(Выручка.НомерСтроки, ДД.НомерСтроки),
	|	ДД.Номенклатура,
	|	ДД.Характеристика,
	|	ДД.Серия,
	|	ДД.Назначение,
	|	ДД.СтатьяКалькуляции,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.КорВидДеятельностиНДС,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ЗаказКлиента,
	|	ДД.Подразделение,
	|	ВЫБОР КОГДА Выручка.Регистратор ЕСТЬ NULL И СтатьиРасходов.Ссылка ЕСТЬ NULL
	|		ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ВыбытияТоваровВПрошлыхПериодах)
	|		ИНАЧЕ ДД.СтатьяРасходовСписания
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Выручка.Регистратор ЕСТЬ NULL И СтатьиРасходов.Ссылка ЕСТЬ NULL
	|		ТОГДА ДД.Номенклатура
	|		ИНАЧЕ ДД.АналитикаРасходов
	|	КОНЕЦ,
	|	ДД.ХозяйственнаяОперация,
	|	ЕСТЬNULL(Выручка.Менеджер, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(Выручка.Склад, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(Выручка.Соглашение, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(Выручка.Договор, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(Выручка.ТипЗапасов, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(Выручка.ИсточникГФУНоменклатуры, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(Выручка.ИсточникГФУРасчетов, НЕОПРЕДЕЛЕНО)
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(Выручка.Количество, ДД.Количество)) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА КАК ЭтоОстатки,
	|	ЛОЖЬ   КАК ЭтоПродажа,
	|
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	МоментыВремениОстатков.МоментВремени КАК МоментВремени,
	|	0 КАК НомерСтроки,
	|
	|	ДД.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	Аналитика.Назначение,
	|	Аналитика.СтатьяКалькуляции,
	|
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО КАК Менеджер,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК ТипЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУРасчетов,
	|
	|	ДД.Количество
	|
	|ИЗ
	|	ОстаткиТоваров КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК МоментыВремениОстатков
	|		ПО ДД.Организация = МоментыВремениОстатков.Организация
	|ГДЕ
	|	ДД.Количество > 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ДД.ТипЗаписи,
	|	ДД.ДокументДвижения,
	|
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.Номенклатура,
	|	ДД.Характеристика,
	|	ДД.Серия,
	|	ДД.Назначение,
	|	ДД.СтатьяКалькуляции,
	|
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|
	|	ДД.ДопРасходы,
	|	ДД.ДопРасходыБезНДС,
	|	ДД.ДопРасходыРегл,
	|	ДД.ДопРасходыУпр,
	|	ДД.НДСРегл,
	|	ДД.НДСУпр,
	|	ДД.ПостояннаяРазница,
	|	ДД.ВременнаяРазница,
	|	
	|	СУММА(ПрошлыеВыбытия.Количество) КАК Количество
	|
	|ПОМЕСТИТЬ БазаДляРаспределенияРасходов
	|ИЗ
	|	РасходыДляСписанияНаВыбытиеТоваров КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеВыбытияТоваровДетальные КАК ПрошлыеВыбытия
	|		ПО ПрошлыеВыбытия.Номенклатура = ДД.Номенклатура
	|		И ПрошлыеВыбытия.Характеристика = ДД.Характеристика
	|		И ПрошлыеВыбытия.Серия = ДД.Серия
	|		И ПрошлыеВыбытия.Назначение = ДД.Назначение
	|		И ПрошлыеВыбытия.СтатьяКалькуляции = ДД.СтатьяКалькуляции
	|		И ПрошлыеВыбытия.РазделУчета = ДД.РазделУчета
	|		И ПрошлыеВыбытия.ВидЗапасов = ДД.ВидЗапасов
	|		И ПрошлыеВыбытия.Организация = ДД.Организация
	|		И ПрошлыеВыбытия.Партия = ДД.Партия
	|		И ПрошлыеВыбытия.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
	|ГДЕ
	|	(ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам) И НЕ ПрошлыеВыбытия.ЭтоОстатки)
	|	ИЛИ ДД.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ДД.ТипЗаписи,
	|	ДД.ДокументДвижения,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.Номенклатура,
	|	ДД.Характеристика,
	|	ДД.Серия,
	|	ДД.Назначение,
	|	ДД.СтатьяКалькуляции,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.ДопРасходы,
	|	ДД.ДопРасходыБезНДС,
	|	ДД.ДопРасходыРегл,
	|	ДД.ДопРасходыУпр,
	|	ДД.НДСРегл,
	|	ДД.НДСУпр,
	|	ДД.ПостояннаяРазница,
	|	ДД.ВременнаяРазница
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПрошлыеВыбытия.Количество) > 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ПрошлыеВыбытия.ЭтоПродажа,
	|	ПрошлыеВыбытия.ЭтоОстатки,
	|
	|	ПрошлыеВыбытия.Количество,
	|	ПрошлыеВыбытия.МоментВремени,
	|	ПрошлыеВыбытия.НомерСтроки,
	|
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ДД.ТипЗаписи,
	|	ДД.ДокументДвижения,
	|
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|
	|	ПрошлыеВыбытия.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ПрошлыеВыбытия.АналитикаФинансовогоУчета КАК КорАналитикаФинансовогоУчета,
	|	ПрошлыеВыбытия.ВидДеятельностиНДС КАК КорВидДеятельностиНДС,
	|
	|	ПрошлыеВыбытия.АналитикаУчетаПоПартнерам,
	|	ПрошлыеВыбытия.ЗаказКлиента,
	|	ПрошлыеВыбытия.Подразделение,
	|	ПрошлыеВыбытия.АналитикаРасходов,
	|	ПрошлыеВыбытия.СтатьяРасходовСписания,
	|	ПрошлыеВыбытия.ХозяйственнаяОперация,
	|
	|	ПрошлыеВыбытия.Менеджер,
	|	ПрошлыеВыбытия.Склад,
	|	ПрошлыеВыбытия.Соглашение,
	|	ПрошлыеВыбытия.Договор,
	|	ПрошлыеВыбытия.ТипЗапасов,
	|	ПрошлыеВыбытия.ИсточникГФУНоменклатуры,
	|	ПрошлыеВыбытия.ИсточникГФУРасчетов,
	|
	|	ВЫРАЗИТЬ(ДД.ДопРасходы * ПрошлыеВыбытия.Количество / ДД.Количество КАК ЧИСЛО (15,2)) КАК ДопРасходы,
	|	ВЫРАЗИТЬ(ДД.ДопРасходыБезНДС * ПрошлыеВыбытия.Количество / ДД.Количество КАК ЧИСЛО (15,2)) КАК ДопРасходыБезНДС,
	|	ВЫРАЗИТЬ(ДД.ДопРасходыРегл * ПрошлыеВыбытия.Количество / ДД.Количество КАК ЧИСЛО (15,2)) КАК ДопРасходыРегл,
	|	ВЫРАЗИТЬ(ДД.ДопРасходыУпр * ПрошлыеВыбытия.Количество / ДД.Количество КАК ЧИСЛО (15,2)) КАК ДопРасходыУпр,
	|	ВЫРАЗИТЬ(ДД.НДСРегл * ПрошлыеВыбытия.Количество / ДД.Количество КАК ЧИСЛО (15,2)) КАК НДСРегл,
	|	ВЫРАЗИТЬ(ДД.НДСУпр * ПрошлыеВыбытия.Количество / ДД.Количество КАК ЧИСЛО (15,2)) КАК НДСУпр,
	|	ВЫРАЗИТЬ(ДД.ПостояннаяРазница * ПрошлыеВыбытия.Количество / ДД.Количество КАК ЧИСЛО (15,2)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ДД.ВременнаяРазница * ПрошлыеВыбытия.Количество / ДД.Количество КАК ЧИСЛО (15,2)) КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ РаспределениеРасходовСПогрешностямиОкругления
	|ИЗ
	|	БазаДляРаспределенияРасходов КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеВыбытияТоваровДетальные КАК ПрошлыеВыбытия
	|		ПО ПрошлыеВыбытия.Номенклатура = ДД.Номенклатура
	|		И ПрошлыеВыбытия.Характеристика = ДД.Характеристика
	|		И ПрошлыеВыбытия.Серия = ДД.Серия
	|		И ПрошлыеВыбытия.Назначение = ДД.Назначение
	|		И ПрошлыеВыбытия.СтатьяКалькуляции = ДД.СтатьяКалькуляции
	|		И ПрошлыеВыбытия.РазделУчета = ДД.РазделУчета
	|		И ПрошлыеВыбытия.ВидЗапасов = ДД.ВидЗапасов
	|		И ПрошлыеВыбытия.Организация = ДД.Организация
	|		И ПрошлыеВыбытия.Партия = ДД.Партия
	|		И ПрошлыеВыбытия.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
	|ГДЕ
	|	(ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам) И НЕ ПрошлыеВыбытия.ЭтоОстатки)
	|	ИЛИ ДД.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ДД.ТипЗаписи,
	|	ДД.ДокументДвижения,
	|
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|
	|	База.ДопРасходы - СУММА(ДД.ДопРасходы) КАК ДопРасходы,
	|	База.ДопРасходыБезНДС - СУММА(ДД.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
	|	База.ДопРасходыРегл - СУММА(ДД.ДопРасходыРегл) КАК ДопРасходыРегл,
	|	База.ДопРасходыУпр - СУММА(ДД.ДопРасходыУпр) КАК ДопРасходыУпр,
	|	База.НДСРегл - СУММА(ДД.НДСРегл) КАК НДСРегл,
	|	База.НДСУпр - СУММА(ДД.НДСУпр) КАК НДСУпр,
	|	База.ПостояннаяРазница - СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	База.ВременнаяРазница - СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ ЗависшиеКопейки
	|ИЗ
	|	РаспределениеРасходовСПогрешностямиОкругления КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ БазаДляРаспределенияРасходов КАК База
	|	ПО ДД.Регистратор = База.Регистратор
	|		И ДД.Период = База.Период
	|		И ДД.ТипЗаписи = База.ТипЗаписи
	|		И ДД.ДокументДвижения = База.ДокументДвижения
	|		И ДД.АналитикаУчетаНоменклатуры = База.АналитикаУчетаНоменклатуры
	|		И ДД.РазделУчета = База.РазделУчета
	|		И ДД.ВидЗапасов = База.ВидЗапасов
	|		И ДД.Организация = База.Организация
	|		И ДД.Партия = База.Партия
	|		И ДД.АналитикаУчетаПартий = База.АналитикаУчетаПартий
	|		И ДД.АналитикаФинансовогоУчета = База.АналитикаФинансовогоУчета
	|		И ДД.ВидДеятельностиНДС = База.ВидДеятельностиНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ДД.ТипЗаписи,
	|	ДД.ДокументДвижения,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|	База.ДопРасходы,
	|	База.ДопРасходыБезНДС,
	|	База.ДопРасходыРегл,
	|	База.ДопРасходыУпр,
	|	База.НДСРегл,
	|	База.НДСУпр,
	|	База.ПостояннаяРазница,
	|	База.ВременнаяРазница
	|
	|ИМЕЮЩИЕ
	|		СУММА(ДД.ДопРасходы) 		- База.ДопРасходы <> 0
	|	ИЛИ СУММА(ДД.ДопРасходыБезНДС) 	- База.ДопРасходыБезНДС <> 0
	|	ИЛИ СУММА(ДД.ДопРасходыРегл) 	- База.ДопРасходыРегл <> 0
	|	ИЛИ СУММА(ДД.ДопРасходыУпр) 	- База.ДопРасходыУпр <> 0
	|	ИЛИ СУММА(ДД.НДСРегл) 			- База.НДСРегл <> 0
	|	ИЛИ СУММА(ДД.НДСУпр) 			- База.НДСУпр <> 0
	|	ИЛИ СУММА(ДД.ПостояннаяРазница) - База.ПостояннаяРазница <> 0
	|	ИЛИ СУММА(ДД.ВременнаяРазница) 	- База.ВременнаяРазница <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НаправленияВыбытия.ЭтоПродажа,
	|	НаправленияВыбытия.ЭтоОстатки,
	|
	|	НаправленияВыбытия.Количество,
	|	НаправленияВыбытия.МоментВремени,
	|	НаправленияВыбытия.НомерСтроки,
	|
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ДД.ТипЗаписи,
	|	ДД.ДокументДвижения,
	|
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|
	|	НаправленияВыбытия.КорАналитикаУчетаНоменклатуры,
	|	НаправленияВыбытия.КорАналитикаФинансовогоУчета,
	|	НаправленияВыбытия.КорВидДеятельностиНДС,
	|
	|	НаправленияВыбытия.АналитикаУчетаПоПартнерам,
	|	НаправленияВыбытия.ЗаказКлиента,
	|	НаправленияВыбытия.Подразделение,
	|	НаправленияВыбытия.АналитикаРасходов,
	|	НаправленияВыбытия.СтатьяРасходовСписания,
	|	НаправленияВыбытия.ХозяйственнаяОперация,
	|
	|	НаправленияВыбытия.Менеджер,
	|	НаправленияВыбытия.Склад,
	|	НаправленияВыбытия.Соглашение,
	|	НаправленияВыбытия.Договор,
	|	НаправленияВыбытия.ТипЗапасов,
	|	НаправленияВыбытия.ИсточникГФУНоменклатуры,
	|	НаправленияВыбытия.ИсточникГФУРасчетов
	|
	|ПОМЕСТИТЬ ВозможныеВыбытияДляСписанияЗависшихКопеек
	|ИЗ
	|	ЗависшиеКопейки КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспределениеРасходовСПогрешностямиОкругления КАК НаправленияВыбытия
	|		ПО НаправленияВыбытия.Регистратор = ДД.Регистратор
	|		И НаправленияВыбытия.Период = ДД.Период
	|		И НаправленияВыбытия.ТипЗаписи = ДД.ТипЗаписи
	|		И НаправленияВыбытия.ДокументДвижения = ДД.ДокументДвижения
	|		И НаправленияВыбытия.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
	|		И НаправленияВыбытия.РазделУчета = ДД.РазделУчета
	|		И НаправленияВыбытия.ВидЗапасов = ДД.ВидЗапасов
	|		И НаправленияВыбытия.Организация = ДД.Организация
	|		И НаправленияВыбытия.Партия = ДД.Партия
	|		И НаправленияВыбытия.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
	|		И НаправленияВыбытия.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
	|		И НаправленияВыбытия.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДД.ЭтоПродажа,
	|	ДД.ЭтоОстатки,
	|
	|	ДД.Количество,
	|	ДД.МоментВремени,
	|	ДД.НомерСтроки,
	|
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ДД.ТипЗаписи,
	|	ДД.ДокументДвижения,
	|
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|
	|	ДД.КорАналитикаУчетаНоменклатуры,
	|	ДД.КорАналитикаФинансовогоУчета,
	|	ДД.КорВидДеятельностиНДС,
	|
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ЗаказКлиента,
	|	ДД.Подразделение,
	|	ДД.АналитикаРасходов,
	|	ДД.СтатьяРасходовСписания,
	|	ДД.ХозяйственнаяОперация,
	|
	|	ДД.Менеджер,
	|	ДД.Склад,
	|	ДД.Соглашение,
	|	ДД.Договор,
	|	ДД.ТипЗапасов,
	|	ДД.ИсточникГФУНоменклатуры,
	|	ДД.ИсточникГФУРасчетов
	|
	|ПОМЕСТИТЬ НаправленияВыбытияДляСписанияЗависшихКопеек
	|ИЗ
	|	ВозможныеВыбытияДляСписанияЗависшихКопеек КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВозможныеВыбытияДляСписанияЗависшихКопеек КАК ДД2
	|		ПО ДД.Регистратор = ДД2.Регистратор
	|		И ДД.Период = ДД2.Период
	|		И ДД.ТипЗаписи = ДД2.ТипЗаписи
	|		И ДД.ДокументДвижения = ДД2.ДокументДвижения
	|		И ДД.АналитикаУчетаНоменклатуры = ДД2.АналитикаУчетаНоменклатуры
	|		И ДД.РазделУчета = ДД2.РазделУчета
	|		И ДД.ВидЗапасов = ДД2.ВидЗапасов
	|		И ДД.Организация = ДД2.Организация
	|		И ДД.Партия = ДД2.Партия
	|		И ДД.АналитикаУчетаПартий = ДД2.АналитикаУчетаПартий
	|		И ДД.АналитикаФинансовогоУчета = ДД2.АналитикаФинансовогоУчета
	|		И ДД.ВидДеятельностиНДС = ДД2.ВидДеятельностиНДС
	|		И ((ДД.Количество < ДД2.Количество)
	|			 ИЛИ (ДД.Количество = ДД2.Количество И ДД.МоментВремени > ДД2.МоментВремени)
	|		 	 ИЛИ (ДД.Количество = ДД2.Количество И ДД.МоментВремени = ДД2.МоментВремени И ДД.НомерСтроки > ДД2.НомерСтроки)
	|		 	 ИЛИ (ДД.Количество = ДД2.Количество И ДД.МоментВремени = ДД2.МоментВремени И ДД.НомерСтроки = ДД2.НомерСтроки
	|				    И ДД.КорАналитикаУчетаНоменклатуры > ДД2.КорАналитикаУчетаНоменклатуры)
	|		 	 ИЛИ (ДД.Количество = ДД2.Количество И ДД.МоментВремени = ДД2.МоментВремени И ДД.НомерСтроки = ДД2.НомерСтроки
	|				    И ДД.КорАналитикаУчетаНоменклатуры = ДД2.КорАналитикаУчетаНоменклатуры И ДД.КорАналитикаФинансовогоУчета > ДД2.КорАналитикаФинансовогоУчета)
	|		 	 ИЛИ (ДД.Количество = ДД2.Количество И ДД.МоментВремени = ДД2.МоментВремени И ДД.НомерСтроки = ДД2.НомерСтроки
	|				    И ДД.КорАналитикаУчетаНоменклатуры = ДД2.КорАналитикаУчетаНоменклатуры И ДД.КорАналитикаФинансовогоУчета = ДД2.КорАналитикаФинансовогоУчета И ДД.КорВидДеятельностиНДС > ДД2.КорВидДеятельностиНДС)
	|			)
	|ГДЕ
	|	ДД2.Регистратор ЕСТЬ NULL
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДД.ЭтоПродажа,
	|	ДД.ЭтоОстатки,
	|
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ДД.ТипЗаписи,
	|	ДД.ДокументДвижения,
	|
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|
	|	ДД.КорАналитикаУчетаНоменклатуры,
	|	ДД.КорАналитикаФинансовогоУчета,
	|	ДД.КорВидДеятельностиНДС,
	|
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ЗаказКлиента,
	|	ДД.Подразделение,
	|	ДД.АналитикаРасходов,
	|	ДД.СтатьяРасходовСписания,
	|	ДД.ХозяйственнаяОперация,
	|
	|	ДД.Менеджер,
	|	ДД.Склад,
	|	ДД.Соглашение,
	|	ДД.Договор,
	|	ДД.ТипЗапасов,
	|	ДД.ИсточникГФУНоменклатуры,
	|	ДД.ИсточникГФУРасчетов,
	|
	|	СУММА(ДД.ДопРасходы) КАК ДопРасходы,
	|	СУММА(ДД.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
	|	СУММА(ДД.ДопРасходыРегл) КАК ДопРасходыРегл,
	|	СУММА(ДД.ДопРасходыУпр) КАК ДопРасходыУпр,
	|	СУММА(ДД.НДСРегл) КАК НДСРегл,
	|	СУММА(ДД.НДСУпр) КАК НДСУпр,
	|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ РаспределениеРасходов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДД.ЭтоПродажа,
	|		ДД.ЭтоОстатки,
	|
	|		ДД.Регистратор,
	|		ДД.Период,
	|		ДД.ТипЗаписи,
	|		ДД.ДокументДвижения,
	|
	|		ДД.АналитикаУчетаНоменклатуры,
	|		ДД.РазделУчета,
	|		ДД.ВидЗапасов,
	|		ДД.Организация,
	|		ДД.Партия,
	|		ДД.АналитикаУчетаПартий,
	|		ДД.АналитикаФинансовогоУчета,
	|		ДД.ВидДеятельностиНДС,
	|		
	|		ДД.КорАналитикаУчетаНоменклатуры,
	|		ДД.КорАналитикаФинансовогоУчета,
	|		ДД.КорВидДеятельностиНДС,
	|		
	|		ДД.АналитикаУчетаПоПартнерам,
	|		ДД.ЗаказКлиента,
	|		ДД.Подразделение,
	|		ДД.АналитикаРасходов,
	|		ДД.СтатьяРасходовСписания,
	|		ДД.ХозяйственнаяОперация,
	|
	|		ДД.Менеджер,
	|		ДД.Склад,
	|		ДД.Соглашение,
	|		ДД.Договор,
	|		ДД.ТипЗапасов,
	|		ДД.ИсточникГФУНоменклатуры,
	|		ДД.ИсточникГФУРасчетов,
	|
	|		ДД.ДопРасходы,
	|		ДД.ДопРасходыБезНДС,
	|		ДД.ДопРасходыРегл,
	|		ДД.ДопРасходыУпр,
	|		ДД.НДСРегл,
	|		ДД.НДСУпр,
	|		ДД.ПостояннаяРазница,
	|		ДД.ВременнаяРазница
	|	ИЗ
	|		РаспределениеРасходовСПогрешностямиОкругления КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НаправленияВыбытия.ЭтоПродажа,
	|		НаправленияВыбытия.ЭтоОстатки,
	|
	|		ДД.Регистратор,
	|		ДД.Период,
	|		ДД.ТипЗаписи,
	|		ДД.ДокументДвижения,
	|
	|		ДД.АналитикаУчетаНоменклатуры,
	|		ДД.РазделУчета,
	|		ДД.ВидЗапасов,
	|		ДД.Организация,
	|		ДД.Партия,
	|		ДД.АналитикаУчетаПартий,
	|		ДД.АналитикаФинансовогоУчета,
	|		ДД.ВидДеятельностиНДС,
	|		
	|		НаправленияВыбытия.КорАналитикаУчетаНоменклатуры,
	|		НаправленияВыбытия.КорАналитикаФинансовогоУчета,
	|		НаправленияВыбытия.КорВидДеятельностиНДС,
	|		
	|		НаправленияВыбытия.АналитикаУчетаПоПартнерам,
	|		НаправленияВыбытия.ЗаказКлиента,
	|		НаправленияВыбытия.Подразделение,
	|		НаправленияВыбытия.АналитикаРасходов,
	|		НаправленияВыбытия.СтатьяРасходовСписания,
	|		НаправленияВыбытия.ХозяйственнаяОперация,
	|
	|		НаправленияВыбытия.Менеджер,
	|		НаправленияВыбытия.Склад,
	|		НаправленияВыбытия.Соглашение,
	|		НаправленияВыбытия.Договор,
	|		НаправленияВыбытия.ТипЗапасов,
	|		НаправленияВыбытия.ИсточникГФУНоменклатуры,
	|		НаправленияВыбытия.ИсточникГФУРасчетов,
	|
	|		ДД.ДопРасходы,
	|		ДД.ДопРасходыБезНДС,
	|		ДД.ДопРасходыРегл,
	|		ДД.ДопРасходыУпр,
	|		ДД.НДСРегл,
	|		ДД.НДСУпр,
	|		ДД.ПостояннаяРазница,
	|		ДД.ВременнаяРазница
	|
	|	ИЗ
	|		ЗависшиеКопейки КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаправленияВыбытияДляСписанияЗависшихКопеек КАК НаправленияВыбытия
	|			ПО НаправленияВыбытия.Регистратор = ДД.Регистратор
	|			И НаправленияВыбытия.Период = ДД.Период
	|			И НаправленияВыбытия.ТипЗаписи = ДД.ТипЗаписи
	|			И НаправленияВыбытия.ДокументДвижения = ДД.ДокументДвижения
	|			И НаправленияВыбытия.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
	|			И НаправленияВыбытия.РазделУчета = ДД.РазделУчета
	|			И НаправленияВыбытия.ВидЗапасов = ДД.ВидЗапасов
	|			И НаправленияВыбытия.Организация = ДД.Организация
	|			И НаправленияВыбытия.Партия = ДД.Партия
	|			И НаправленияВыбытия.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
	|			И НаправленияВыбытия.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
	|			И НаправленияВыбытия.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
	|	) КАК ДД
	|
	|ГДЕ
	|	НЕ (ДД.ЭтоОстатки
	|		И ДД.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
	|		И ДД.АналитикаФинансовогоУчета = ДД.КорАналитикаФинансовогоУчета
	|		И ДД.ВидДеятельностиНДС = ДД.КорВидДеятельностиНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.ЭтоПродажа,
	|	ДД.ЭтоОстатки,
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ДД.ТипЗаписи,
	|	ДД.ДокументДвижения,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.КорАналитикаУчетаНоменклатуры,
	|	ДД.КорАналитикаФинансовогоУчета,
	|	ДД.КорВидДеятельностиНДС,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ЗаказКлиента,
	|	ДД.Подразделение,
	|	ДД.АналитикаРасходов,
	|	ДД.СтатьяРасходовСписания,
	|	ДД.ХозяйственнаяОперация,
	|	ДД.Менеджер,
	|	ДД.Склад,
	|	ДД.Соглашение,
	|	ДД.Договор,
	|	ДД.ТипЗапасов,
	|	ДД.ИсточникГФУНоменклатуры,
	|	ДД.ИсточникГФУРасчетов
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... описания данных

Функция ТекстОписаниеДанныхДляСписанияРасходовНаВыбытиеТоваровРегистрСебестоимость()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(80)) КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ТипЗаписи,
		|	ДД.ДокументДвижения,
		|
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.ХозяйственнаяОперация,
		|
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС,
		|
		|	0 КАК ДопРасходы,
		|	0 КАК ДопРасходыБезНДС,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ДопРасходыУпр,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница
		|//ВоВременнуюТаблицу
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|";
КонецФункции

Функция ТекстОписаниеДанныхДляСписанияРасходовНаВыбытиеТоваровРегистрВыручка()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(80)) КАК ЗапросИсточник,
		|
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ДокументДвижения,
		|
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.ЗаказКлиента,
		|	ДД.Подразделение,
		|	ДД.ХозяйственнаяОперация,
		|
		|	ДД.Менеджер,
		|	ДД.Склад,
		|	ДД.Соглашение,
		|	ДД.Договор,
		|	ДД.ТипЗапасов,
		|	ДД.ИсточникГФУНоменклатуры,
		|	ДД.ИсточникГФУРасчетов,
		|
		|	0 КАК ДопРасходы,
		|	0 КАК ДопРасходыБезНДС,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ДопРасходыУпр,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница
		|//ВоВременнуюТаблицу
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДД
		|";
КонецФункции

Функция ТекстОписаниеДанныхДляСписанияРасходовНаВыбытиеТоваровРегистрПрочиеРасходы()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(80)) КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ДокументДвижения,
		|
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.НаправлениеДеятельности,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|
		|	0 КАК Сумма,
		|	0 КАК СуммаБезНДС,
		|	0 КАК СуммаРегл,
		|	0 КАК СуммаУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница
		|//ВоВременнуюТаблицу
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы КАК ДД
		|";
КонецФункции

Функция ТекстОписаниеДанныхДляСписанияРасходовНаВыбытиеТоваровРегистрНоменклатураДоходыРасходы()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(80)) КАК ЗапросИсточник,
		|
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ДокументДвижения,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.НаправлениеДеятельностиНоменклатуры,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.Склад,
		|	ДД.ТипЗапасов,
		|	ДД.ВидЗапасов,
		|	ДД.СтатьяДоходовРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ИсточникГФУНоменклатуры,
		|
		|	0 КАК ДопРасходы,
		|	0 КАК ДопРасходыБезНДС,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ДопРасходыУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница
		|//ВоВременнуюТаблицу
		|ИЗ
		|	РегистрНакопления.ДвиженияНоменклатураДоходыРасходы КАК ДД
		|";
КонецФункции

// ... выборки данных

Функция ТекстСписанияРасходовНаВыбытиеТоваровРегистрСебестоимость()
	Возврат "
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(""ТекстСписанияРасходовНаВыбытиеТоваровРегистрСебестоимость"" КАК СТРОКА(80)) КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ТипЗаписи,
		|	ДД.ДокументДвижения,
		|
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.ХозяйственнаяОперация,
		|
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС,
		|
		|	СУММА(ДД.ДопРасходы) КАК ДопРасходы,
		|	СУММА(ДД.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
		|	СУММА(ДД.ДопРасходыРегл) КАК ДопРасходыРегл,
		|	СУММА(ДД.ДопРасходыУпр) КАК ДопРасходыУпр,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.НДСУпр) КАК НДСУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
		|ИЗ
		|	РаспределениеРасходов КАК ДД
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ТипЗаписи,
		|	ДД.ДокументДвижения,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС
		|";
КонецФункции

Функция ТекстОприходованиеРасходовНаОстаткиТоваровРегистрСебестоимость()
	Возврат "
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(""ТекстОприходованиеРасходовНаОстаткиТоваровРегистрСебестоимость"" КАК СТРОКА(80)) КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ТипЗаписи,
		|	ДД.ДокументДвижения,
		|
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.КорАналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.ХозяйственнаяОперация,
		|
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|
		|	СУММА(ДД.ДопРасходы) КАК ДопРасходы,
		|	СУММА(ДД.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
		|	СУММА(ДД.ДопРасходыРегл) КАК ДопРасходыРегл,
		|	СУММА(ДД.ДопРасходыУпр) КАК ДопРасходыУпр,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.НДСУпр) КАК НДСУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
		|ИЗ
		|	РаспределениеРасходов КАК ДД
		|ГДЕ
		|	ДД.ЭтоОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ТипЗаписи,
		|	ДД.ДокументДвижения,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС
		|";
КонецФункции

Функция ТекстСписанияРасходовНаВыбытиеТоваровРегистрВыручка()
	Возврат "
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(""ТекстСписанияРасходовНаВыбытиеТоваровРегистрВыручка"" КАК СТРОКА(80)) КАК ЗапросИсточник,
		|
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ДокументДвижения,
		|
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.ЗаказКлиента,
		|	ДД.Подразделение,
		|	ДД.ХозяйственнаяОперация,
		|
		|	ДД.Менеджер,
		|	ДД.Склад,
		|	ДД.Соглашение,
		|	ДД.Договор,
		|	ДД.ТипЗапасов,
		|	ДД.ИсточникГФУНоменклатуры,
		|	ДД.ИсточникГФУРасчетов,
		|
		|	СУММА(ДД.ДопРасходы) КАК ДопРасходы,
		|	СУММА(ДД.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
		|	СУММА(ДД.ДопРасходыРегл) КАК ДопРасходыРегл,
		|	СУММА(ДД.ДопРасходыУпр) КАК ДопРасходыУпр,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.НДСУпр) КАК НДСУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
		|ИЗ
		|	РаспределениеРасходов КАК ДД
		|ГДЕ
		|	ДД.ЭтоПродажа
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ДокументДвижения,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.ЗаказКлиента,
		|	ДД.Подразделение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.Менеджер,
		|	ДД.Склад,
		|	ДД.Соглашение,
		|	ДД.Договор,
		|	ДД.ТипЗапасов,
		|	ДД.ИсточникГФУНоменклатуры,
		|	ДД.ИсточникГФУРасчетов
		|";
КонецФункции

Функция ТекстСписанияРасходовНаВыбытиеТоваровРегистрПрочиеРасходы()
	Возврат "
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(""ТекстСписанияРасходовНаВыбытиеТоваровРегистрПрочиеРасходы"" КАК СТРОКА(80)) КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ДокументДвижения,
		|
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ЕСТЬNULL(СпрНазначения.НаправлениеДеятельности,
		|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|
		|	СУММА(ДД.ДопРасходы) КАК Сумма,
		|	СУММА(ДД.ДопРасходыБезНДС) КАК СуммаБезНДС,
		|	СУММА(ДД.ДопРасходыРегл) КАК СуммаРегл,
		|	СУММА(ДД.ДопРасходыУпр) КАК СуммаУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
		|ИЗ
		|	РаспределениеРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|		ПО ДД.СтатьяРасходовСписания = СтатьиРасходов.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СпрАналитикаНоменклатуры
		|		ПО ДД.АналитикаУчетаНоменклатуры = СпрАналитикаНоменклатуры.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
		|		ПО СпрАналитикаНоменклатуры.Назначение = СпрНазначения.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ДокументДвижения,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ЕСТЬNULL(СпрНазначения.НаправлениеДеятельности,
		|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстСписанияРасходовНаВыбытиеТоваровРегистрНоменклатураДоходыРасходы()
	Возврат "
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(""ТекстСписанияРасходовНаВыбытиеТоваровРегистрНоменклатураДоходыРасходы"" КАК СТРОКА(80)) КАК ЗапросИсточник,
		|
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ДокументДвижения,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ЕСТЬNULL(СпрНазначения.НаправлениеДеятельности,
		|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиНоменклатуры,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрАналитикаНоменклатуры.Склад,
		|	ДД.ТипЗапасов,
		|	ДД.ВидЗапасов,
		|	ДД.СтатьяРасходовСписания КАК СтатьяДоходовРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ИсточникГФУНоменклатуры,
		|
		|	СУММА(ДД.ДопРасходы) КАК ДопРасходы,
		|	СУММА(ДД.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
		|	СУММА(ДД.ДопРасходыРегл) КАК ДопРасходыРегл,
		|	СУММА(ДД.ДопРасходыУпр) КАК ДопРасходыУпр,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница
		|
		|ИЗ
		|	РаспределениеРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|		ПО ДД.СтатьяРасходовСписания = СтатьиРасходов.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СпрАналитикаНоменклатуры
		|		ПО ДД.АналитикаУчетаНоменклатуры = СпрАналитикаНоменклатуры.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
		|		ПО СпрАналитикаНоменклатуры.Назначение = СпрНазначения.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.Период,
		|	ДД.ДокументДвижения,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ЕСТЬNULL(СпрНазначения.НаправлениеДеятельности,
		|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрАналитикаНоменклатуры.Склад,
		|	ДД.ТипЗапасов,
		|	ДД.ВидЗапасов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ИсточникГФУНоменклатуры
		|";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа11_РасчетПартийНДС

// Инициализация данных

Функция ПоляПотребленийПартииНДС(ПараметрыРасчета)
	
	Возврат "Партия, АналитикаУчетаНоменклатуры, Организация, РазделУчета, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС";
	
КонецФункции

Функция ОписаниеЦепочекПартийНДС(ПараметрыРасчета)
	
	ОписаниеЦепочек = Новый Соответствие;
	ПоляПотреблений	= ПоляПотребленийПартииНДС(ПараметрыРасчета);
	
	// Потребление <- (Остаток, Партия, ДопРасходы, ДопРасходыБезПартии, ДопРасходыСПартией, КорректировкаПриобретенияПрошлогоПериода, Перемещение, ПеремещениеОбособленно, Сторно, Выпуск)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.Потребление, ПоляПотреблений + ", ДокументИсточник");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.Остаток,		ПоляПотреблений + ", Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.Партия,		ПоляПотреблений + ", Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.ДопРасходы,	ПоляПотреблений + ", ДокументИсточник");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.ДопРасходыБезПартии,	ПоляПотреблений + ", ДокументИсточник");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.ДопРасходыСПартией,	ПоляПотреблений + ", ДокументИсточник");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.ОтклонениеВСтоимости, ПоляПотреблений + ", ДокументИсточник");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода, ПоляПотреблений + ", ДокументИсточник");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.КорректировкаСтоимости, ПоляПотреблений + ", ДокументИсточник");	
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.Перемещение, ПоляПотреблений + ", Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно, ПоляПотреблений + ", Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.Сторно, 		ПоляПотреблений + ", Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Потребление,
		Перечисления.ТипыЗаписейПартий.Выпуск, 		ПоляПотреблений + ", Регистратор");
		
	// ПотреблениеАвто <- (Остаток, Партия, Перемещение, ПеремещениеОбособленно, Сторно)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ПотреблениеАвто, 		ПоляПотреблений + ", ДокументИсточник");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		Перечисления.ТипыЗаписейПартий.Остаток,				ПоляПотреблений + ", Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		Перечисления.ТипыЗаписейПартий.Партия,				ПоляПотреблений + ", Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		Перечисления.ТипыЗаписейПартий.Перемещение, 		ПоляПотреблений + ", Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно, 		ПоляПотреблений + ", Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		Перечисления.ТипыЗаписейПартий.Сторно, 				ПоляПотреблений + ", Регистратор");
		
	// КорректировкаПриобретения <- (Остаток, Партия)	
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.КорректировкаПриобретения, ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.КорректировкаПриобретения,
		Перечисления.ТипыЗаписейПартий.Остаток, 				 ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.КорректировкаПриобретения,
		Перечисления.ТипыЗаписейПартий.Партия, 				 	 ПоляПотреблений);
		
	// Сторно <- (Потребление, ПотреблениеАвто, Прошлое)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.Сторно, 		"ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, Партия");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Сторно,
		Перечисления.ТипыЗаписейПартий.Потребление, "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Партия");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Сторно,
		Перечисления.ТипыЗаписейПартий.ПотреблениеАвто, "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Партия");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Сторно,
		Перечисления.ТипыЗаписейПартий.Прошлое, 	"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Партия");
		
	// СторноВозвратНаДругойСклад <- (Потребление, ПотреблениеАвто, Прошлое)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад,	"ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, Партия");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад,
		Перечисления.ТипыЗаписейПартий.Потребление,					"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Партия");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад,
		Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,				"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Партия");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад,
		Перечисления.ТипыЗаписейПартий.Прошлое,						"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Партия");
		
	// ВозвратНаДругойСклад <- (СторноВозвратНаДругойСклад)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ВозвратНаДругойСклад,
		"Регистратор, Партия, АналитикаУчетаНоменклатуры, Организация, РазделУчета, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ВозвратНаДругойСклад,
		Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад,
		"Регистратор, Партия, АналитикаУчетаНоменклатуры, Организация, РазделУчета, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС");
		
	// Распределение <- (Перемещение, ПеремещениеОбособленно, Остаток, Партия, Выпуск)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.Распределение,
		"АналитикаУчетаНоменклатуры, Организация, РазделУчета, Партия, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС, ДокументИсточник");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Распределение,
		Перечисления.ТипыЗаписейПартий.Перемещение,
		"АналитикаУчетаНоменклатуры, Организация, РазделУчета, Партия, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС, Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Распределение,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно,
		"АналитикаУчетаНоменклатуры, Организация, РазделУчета, Партия, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС, Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Распределение,
		Перечисления.ТипыЗаписейПартий.Остаток,
		"АналитикаУчетаНоменклатуры, Организация, РазделУчета, Партия, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС, Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Распределение,
		Перечисления.ТипыЗаписейПартий.Партия,
		"АналитикаУчетаНоменклатуры, Организация, РазделУчета, Партия, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС, Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Распределение,
		Перечисления.ТипыЗаписейПартий.Выпуск,
		"АналитикаУчетаНоменклатуры, Организация, РазделУчета, Партия, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС, Регистратор");	
	
	// Перемещение <- (Потребление, ПотреблениеАвто, ПотреблениеПроизводство, ВозвратНаДругойСклад)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.Перемещение,
		"ДокументИсточник, Партия, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Перемещение,
		Перечисления.ТипыЗаписейПартий.Потребление,
		"Регистратор, КорПартия, КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Перемещение,
		Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		"Регистратор, КорПартия, КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Перемещение,
		Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство,
		"Регистратор, КорПартия, КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Перемещение,
		Перечисления.ТипыЗаписейПартий.ВозвратНаДругойСклад,
		"Регистратор, КорПартия, КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС, Организация");
		
	// ПеремещениеОбособленно <- (Потребление)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно,
		"ДокументИсточник, Партия, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС, Организация");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно,
		Перечисления.ТипыЗаписейПартий.Потребление,
		"Регистратор, КорПартия, КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС, КорОрганизация");
		
	// ПеремещениеАвто <- (Потребление, ПотреблениеПроизводство, ПотреблениеАвто, Распределение)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ПеремещениеАвто,
		"ДокументИсточник, Партия, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеАвто,
		Перечисления.ТипыЗаписейПартий.Потребление,
		"Регистратор, КорПартия, КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеАвто,
		Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство,
		"Регистратор, КорПартия, КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеАвто,
		Перечисления.ТипыЗаписейПартий.ПотреблениеАвто,
		"Регистратор, КорПартия, КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеАвто,
		Перечисления.ТипыЗаписейПартий.Распределение,
		"Регистратор, КорПартия, КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС");
		
	// СписанияНаВыпуск <- (Перемещение, ПеремещениеОбособленно, ПеремещениеАвто, Партия, Остаток)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск, ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		Перечисления.ТипыЗаписейПартий.Перемещение, ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно, ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		Перечисления.ТипыЗаписейПартий.ПеремещениеАвто, ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		Перечисления.ТипыЗаписейПартий.Партия, ПоляПотреблений);
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		Перечисления.ТипыЗаписейПартий.Остаток, ПоляПотреблений);
		
	// Выпуск <- (СписанияНаВыпуск)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.Выпуск,
		"Регистратор, Партия, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, АналитикаФинансовогоУчета, ВидДеятельностиНДС");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Выпуск,
		Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск,
		"Регистратор, КорПартия, КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС");
	// Также эта связь используется в ТекстДвиженияСебестоимостиТоваров()
		
	// ПотреблениеПроизводство <- (Перемещение, ПеремещениеОбособленно, Остаток)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство, "АналитикаУчетаНоменклатуры, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство,
		Перечисления.ТипыЗаписейПартий.Перемещение, 		"АналитикаУчетаНоменклатуры, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство,
		Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно, "АналитикаУчетаНоменклатуры, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПотреблениеПроизводство,
		Перечисления.ТипыЗаписейПартий.Остаток,				"АналитикаУчетаНоменклатуры, Организация, РазделУчета");
		
	// СписаниеНаРасходы <- (Партия, Выпуск)
	ДобавитьОписаниеПриемника(ОписаниеЦепочек,
		Перечисления.ТипыЗаписейПартий.СписаниеНаРасходы, ПоляПотреблений + ", ДокументИсточник");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписаниеНаРасходы,
		Перечисления.ТипыЗаписейПартий.Партия, ПоляПотреблений + ", Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.СписаниеНаРасходы,
		Перечисления.ТипыЗаписейПартий.Выпуск, ПоляПотреблений + ", Регистратор");
		
	// Дополнение, ОтклонениеВСтоимости, РаспределениеПоВыбывшимТоварам, ПеремещениеУпр <- (<без источников - для формирования записей по данным запроса>)
	ДобавитьОписаниеДополнения(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.Дополнение);
	ДобавитьОписаниеДополнения(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ОтклонениеВСтоимости);
	ДобавитьОписаниеДополнения(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам);
	ДобавитьОписаниеДополнения(ОписаниеЦепочек, Перечисления.ТипыЗаписейПартий.ПеремещениеУпр);
	
	Возврат ОписаниеЦепочек;
	
КонецФункции

Функция ОписаниеДвиженийПартийНДС(ПараметрыРасчета)
	
	КолонкиТаблицыРаспределения = ТаблицаДляРаспределенияПартийНДС(ПараметрыРасчета).Колонки;
	
	ОписаниеДвижений = ОписаниеДвижений(
		"ПартииНДСиУСН", // Контекст
		Метаданные.РегистрыНакопления.ДетализацияПартийТоваровДляНДСиУСН.Имя, // ИмяРегистра
		ПереченьПолей(КолонкиТаблицыРаспределения), // ПоляРасчета
		ПоляПотребленийПартииТоваров(ПараметрыРасчета), // КлючиСравнения
		"Знаменатель, Количество, СтоимостьБезНДС, НДС, НДСУпр", // Показатели
		"Знаменатель", // БазисПрихода
		"Знаменатель", // БазисРасхода
		"ДокументИсточник", // КлючРасхода
		"Период", // ПолеПорядка
		"Партия", // ПоляСортировки
		Истина); // СортировкаПоУсловию
		
	ОписаниеДвижений.Вставить("ПоляСуммирования", "Количество, СтоимостьБезНДС, НДС, НДСУпр");
	ОписаниеДвижений.Вставить("ПоляГруппировки", ПереченьПолей(КолонкиТаблицыРаспределения, ОписаниеДвижений.ПоляСуммирования));
	ОписаниеДвижений.Вставить("ЕстьСторно", Истина);
	
	Возврат ОписаниеДвижений;
	
КонецФункции

Функция ОписаниеНезаписываемыхПартийНДС(ПараметрыРасчета)
	
	НезаписываемыеТипыЗаписей = Новый Соответствие;
	НезаписываемыеТипыЗаписей.Вставить(Перечисления.ТипыЗаписейПартий.Остаток, Истина);
	НезаписываемыеТипыЗаписей.Вставить(Перечисления.ТипыЗаписейПартий.Прошлое, Истина);
	
	НезаписываемыеРазделы = Новый Соответствие;
	НезаписываемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка(), Истина);
	
	НезаписываемыеРегистраторы = Новый Соответствие;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВводОстатковВерсии24") Тогда
		НезаписываемыеРегистраторы.Вставить(Метаданные.Документы.ВводОстатков.Имя, Истина);
	КонецЕсли;
	
	Возврат ОписаниеНезаписываемыхДанных(Ложь, НезаписываемыеТипыЗаписей, НезаписываемыеРазделы, НезаписываемыеРегистраторы);
	
КонецФункции

Функция ТаблицаДляРаспределенияПартийНДС(ПараметрыРасчета)
	
	Возврат ТаблицаДляРаспределенияПартий(ПараметрыРасчета,	ТекстОписаниеДанныхДляПартийНДСиУСН());
	
КонецФункции

// Выборка данных

Процедура ПолучитьДанныеДляПартийНДС(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ""
		// подготовка временных таблиц
		+ ТекстИнициализацияПартийНДС() // вт ПриходыТоваров, СписаниеОтклоненийВСтоимости, ОстаткиТоваров, ПрошлыеРеализацииПартийНДС, ПриходыТоваровНДС, ДвиженияСебестоимостиНДС
		+ ТекстРазделениеЗапросов()
		// выборка данных
		+ ТекстОписаниеДанныхДляПартийНДСиУСН() //вт Данные
		+ ТекстОбъединениеЗапросов() + ТекстНачальныеОстаткиПартийНДС() // использует ОстаткиТоваров
		+ ТекстОбъединениеЗапросов() + ТекстПриходыСебестоимостиТоваров() // использует ПриходыТоваровНДС
		+ ТекстОбъединениеЗапросов() + ТекстДвиженияСебестоимостиТоваров()
		+ ТекстОбъединениеЗапросов() + ТекстДвиженияСебестоимостиТоваровСборка()
		+ ТекстОбъединениеЗапросов() + ТекстВозвратыПрошлыхПериодов()
		+ ТекстОбъединениеЗапросов() + ТекстРеализацииПрошлыхМесяцевПартииНДС() // использует ПрошлыеРеализации
		+ ТекстОбъединениеЗапросов() + ТекстРеализацииПрошлыхМесяцевПартииНДС21(); // использует ПрошлыеРеализации
	
	ВыбиратьДанныеДляРасчетаВоВременнуюТаблицу(Запрос);
	
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "Данные");
	
	Запрос.Выполнить();
	
	// Нумерация строк ВТ Данные
	ПараметрыНумерации = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		"АналитикаУчетаНоменклатуры", // разделитель
		"Знаменатель, Количество, СтоимостьБезНДС, НДС, НДСУпр", // ресурсы
		"АналитикаУчетаНоменклатуры, Период, Приоритет ВОЗР, РазделУчета, Организация, АналитикаУчетаНоменклатуры, Партия, Регистратор"); // порядок
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"Данные");
	
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ПриходыТоваров, ПриходыСборокТоваров, СписаниеОтклоненийВСтоимости, ОстаткиТоваров, ПрошлыеРеализацииПартийНДС, ПриходыТоваровНДС, ДвиженияСебестоимостиНДС");
	
КонецПроцедуры

// Тексты запросов

// ... описания данных

Функция ТекстОписаниеДанныхДляПартийНДСиУСН()
	Возврат
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(80)) 					КАК ЗапросИсточник,
		|	ДД.ТипЗаписи 									КАК ТипЗаписи,
		|	ЛОЖЬ											КАК Сторно,
		|	0 												КАК Приоритет,
		|	0 												КАК Знаменатель,
		|	ЛОЖЬ 											КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 	КАК Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС 		КАК НалогообложениеПартии,
		|	
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступления,
		|
		|	ДД.Количество,
		|	ДД.СтоимостьБезНДС,
		|	ДД.НДС,
		|	ДД.НДСУпр,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.РазделУчета КАК КорРазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.Организация КАК КорОрганизация,
		|	ДД.Партия КАК КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.СтатьяРасходовАктивов,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивов,
		|	ДД.ДокументИсточник,
		|	ДД.СтатьяСписанияНДС,
		|	ДД.АналитикаСписанияНДС
		|//ВоВременнуюТаблицу
		|ИЗ
		|	РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН КАК ДД
		|";
КонецФункции

// ... формирования временные таблиц

Функция ТекстИнициализацияПартийНДС() // вт ПриходыТоваров, СписаниеОтклоненийВСтоимости, ОстаткиТоваров, ПрошлыеРеализацииПартийНДС, ПриходыТоваровНДС, ДвиженияСебестоимостиНДС
	Возврат
		"ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	СУММА(ДД.Количество) КАК Количество
		|ПОМЕСТИТЬ ПриходыТоваров
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Количество > 0
		|	И ДД.СлужебноеВидДвиженияПриход
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.Регистратор,
		|	СУММА(ДД.Количество) КАК Количество
		|ПОМЕСТИТЬ ПриходыСборокТоваров
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Количество > 0
		|	И ДД.СлужебноеВидДвиженияПриход
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.Регистратор
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	СУММА(ДД.ДопРасходыРегл)	КАК ДопРасходыРегл,
		|	СУММА(ДД.НДСРегл)			КАК НДСРегл,
		|	СУММА(ДД.НДСУпр)			КАК НДСУпр
		|ПОМЕСТИТЬ СписаниеОтклоненийВСтоимости
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости)
		|	И НЕ ДД.СлужебноеВидДвиженияПриход
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.КоличествоОстаток КАК Количество
		|ПОМЕСТИТЬ ОстаткиТоваров
		|ИЗ
		|	РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН.Остатки(&ГраницаКонецПредыдущегоПериода,
		|		Организация В (&МассивОрганизаций)) КАК ДД
		|ГДЕ
		|	ДД.КоличествоОстаток > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.ДокументИсточник,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ВЫБОР
		|		КОГДА ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА ДД.ВидДеятельностиНДС
		|		ИНАЧЕ ДД.КорВидДеятельностиНДС
		|	КОНЕЦ КАК ВидДеятельностиНДС,
		|	СУММА(ДД.Количество) КАК Количество
		|ПОМЕСТИТЬ ПрошлыеРеализацииПартийНДС
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
		|	И ДД.Количество <> 0
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументИсточник,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ВЫБОР
		|		КОГДА ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА ДД.ВидДеятельностиНДС
		|		ИНАЧЕ ДД.КорВидДеятельностиНДС
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	(ВЫБОР
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|		КОГДА НЕ ДД.СлужебноеВидДвиженияПриход
		|			И ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|		ИНАЧЕ ДД.ТипЗаписи КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
		|	
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход
		|		 ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	(ВЫБОР
		|		КОГДА ДД.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам))
		|		И ДД.СлужебноеВидДвиженияПриход
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		КОГДА ДД.АналитикаУчетаПартий = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) И ДД.Количество = 0
		|		 И ДД.КорАналитикаУчетаПартий <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		ИНАЧЕ ДД.АналитикаУчетаПартий КОНЕЦ) КАК АналитикаУчетаПартий,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.ВидКорректировки ЕСТЬ NULL
		|		 И Корректировка.ВидКорректировки <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
		|			ТОГДА Корректировка.ДокументОснование
		|		КОГДА НЕ СчетФактура.Исправление ЕСТЬ NULL И СчетФактура.Исправление
		|			ТОГДА СчетФактура.СчетФактураОснование
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ) КАК ДокументПоступления,
		|
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.СтоимостьРегл + ДД.ДопРасходыРегл
		|		+ ВЫБОР
		|			КОГДА ДД.ВидДеятельностиНДС В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
		|				ТОГДА -ДД.НДСРегл
		|			ИНАЧЕ 0
		|	КОНЕЦ - ЕСТЬNULL(СписаниеОтклонений.ДопРасходыРегл, 0)) КАК СтоимостьБезНДС,
		|	СУММА(ДД.НДСРегл - ЕСТЬNULL(СписаниеОтклонений.НДСРегл, 0)) КАК НДС,
		|	СУММА(ВЫБОР
		|		КОГДА &УправленческийУчетОрганизаций
		|			ТОГДА ДД.НДСУпр - ЕСТЬNULL(СписаниеОтклонений.НДСУпр, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК НДСУпр,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.КорРазделУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	(ВЫБОР
		|		КОГДА ДД.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		 И ДД.СтатьяРасходовСписания <> НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.СтатьяРасходовСписания
		|		КОГДА ДД.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
		|			ТОГДА ДД.СтатьяАктивовПассивов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СтатьяРасходовАктивов,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивовПассивов КАК АналитикаАктивов,
		|	(ВЫБОР
		|		КОГДА ДД.Партия <> НЕОПРЕДЕЛЕНО
		|		 И ДД.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости))
		|			ТОГДА ДД.Партия
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ) КАК ДокументИсточник
		|ПОМЕСТИТЬ ПриходыТоваровНДС
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаРасчетов
		|		ПО АналитикаРасчетов.Ссылка = ДД.АналитикаУчетаПоПартнерам
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
		|		ПО Договоры.Ссылка = АналитикаРасчетов.Договор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК Корректировка
		|		ПО Корректировка.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетФактура
		|		ПО СчетФактура.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ СписаниеОтклоненийВСтоимости КАК СписаниеОтклонений
		|		ПО СписаниеОтклонений.Организация = ДД.Организация
		|		И СписаниеОтклонений.РазделУчета = ДД.РазделУчета
		|		И СписаниеОтклонений.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И СписаниеОтклонений.ВидЗапасов = ДД.ВидЗапасов
		|		И СписаниеОтклонений.Партия = ДД.Партия
		|		И СписаниеОтклонений.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И СписаниеОтклонений.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|		И ДД.СлужебноеВидДвиженияПриход
		|ГДЕ
		|	(ДД.СлужебноеВидДвиженияПриход
		|		ИЛИ ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости)
		|		ИЛИ ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)
		|		ИЛИ ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|	И (ДД.НДСРегл <> 0
		|		ИЛИ ДД.НДСУпр <> 0
		|		ИЛИ ДД.Организация В (&ОрганизацииНаУСН)
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.СборкаТоваров
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПорчаТоваров
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПересортицаТоваров
		|		ИЛИ ЕСТЬNULL(Договоры.УчетАгентскогоНДС, ЛОЖЬ)
		|		ИЛИ ДД.ХозяйственнаяОперация В (
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))
		|		ИЛИ ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ПоступлениеТоваров)
		|		)
		|	И ДД.ТипЗаписи В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаСтоимости),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение))
		|	И ДД.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|	И (ДД.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|		)
		|	И ДД.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
		|	И (ВЫБОР
		|		КОГДА ДД.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам))
		|		И ДД.СлужебноеВидДвиженияПриход
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		КОГДА ДД.АналитикаУчетаПартий = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) И ДД.Количество = 0
		|		 И ДД.КорАналитикаУчетаПартий <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		ИНАЧЕ ДД.АналитикаУчетаПартий КОНЕЦ) <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|	И НЕ (&ИспользоватьВводОстатковВерсии24 И ДД.Регистратор ССЫЛКА Документ.ВводОстатков)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|		КОГДА НЕ ДД.СлужебноеВидДвиженияПриход
		|			И ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|		ИНАЧЕ ДД.ТипЗаписи КОНЕЦ),
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход
		|		 ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	(ВЫБОР
		|		КОГДА ДД.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам))
		|		И ДД.СлужебноеВидДвиженияПриход
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		КОГДА ДД.АналитикаУчетаПартий = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) И ДД.Количество = 0
		|		 И ДД.КорАналитикаУчетаПартий <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		ИНАЧЕ ДД.АналитикаУчетаПартий КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.ВидКорректировки ЕСТЬ NULL
		|		 И Корректировка.ВидКорректировки <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
		|			ТОГДА Корректировка.ДокументОснование
		|		КОГДА НЕ СчетФактура.Исправление ЕСТЬ NULL И СчетФактура.Исправление
		|			ТОГДА СчетФактура.СчетФактураОснование
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ),
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.КорРазделУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	(ВЫБОР
		|		КОГДА ДД.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		 И ДД.СтатьяРасходовСписания <> НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.СтатьяРасходовСписания
		|		КОГДА ДД.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
		|			ТОГДА ДД.СтатьяАктивовПассивов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивовПассивов,
		|	(ВЫБОР
		|		КОГДА ДД.Партия <> НЕОПРЕДЕЛЕНО
		|		 И ДД.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости))
		|			ТОГДА ДД.Партия
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
		|	
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	(ВЫБОР
		|		КОГДА ДД.АналитикаУчетаПартий = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		ИНАЧЕ ДД.АналитикаУчетаПартий КОНЕЦ) КАК АналитикаУчетаПартий,
		|	ДД.Регистратор КАК ДокументПоступления,
		|
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(СписаниеОтклонений.ДопРасходыРегл
		|		+ ВЫБОР
		|			КОГДА ДД.ВидДеятельностиНДС В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
		|				ТОГДА -СписаниеОтклонений.НДСРегл
		|			ИНАЧЕ 0
		|	КОНЕЦ) КАК СтоимостьБезНДС,
		|	СУММА(СписаниеОтклонений.НДСРегл) КАК НДС,
		|	СУММА(ВЫБОР
		|		КОГДА &УправленческийУчетОрганизаций
		|			ТОГДА СписаниеОтклонений.НДСУпр
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК НДСУпр,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.КорРазделУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовАктивов,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивовПассивов КАК АналитикаАктивов,
		|	(ВЫБОР
		|		КОГДА ДД.Партия <> НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.Партия
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ) КАК ДокументИсточник
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписаниеОтклоненийВСтоимости КАК СписаниеОтклонений
		|		ПО СписаниеОтклонений.Организация = ДД.Организация
		|		И СписаниеОтклонений.РазделУчета = ДД.РазделУчета
		|		И СписаниеОтклонений.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И СписаниеОтклонений.ВидЗапасов = ДД.ВидЗапасов
		|		И СписаниеОтклонений.Партия = ДД.Партия
		|		И СписаниеОтклонений.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И СписаниеОтклонений.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|		И ДД.СлужебноеВидДвиженияПриход
		|ГДЕ
		|	ДД.СлужебноеВидДвиженияПриход
		|	И ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости)
		|	И ДД.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|	И ДД.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
		|	И (ВЫБОР
		|		КОГДА ДД.АналитикаУчетаПартий = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		ИНАЧЕ ДД.АналитикаУчетаПартий КОНЕЦ) <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	(ВЫБОР
		|		КОГДА ДД.АналитикаУчетаПартий = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаПартий
		|		ИНАЧЕ ДД.АналитикаУчетаПартий КОНЕЦ),
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.КорРазделУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивовПассивов,
		|	(ВЫБОР
		|		КОГДА ДД.Партия <> НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.Партия
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДД.ТипЗаписи,
		|	ЛОЖЬ КАК Сторно,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
		|	
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход
		|		 ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступления,
		|
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.НДС) КАК НДС,
		|	СУММА(ДД.НДСУпр) КАК НДСУпр,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорВидДеятельностиНДС,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	НЕОПРЕДЕЛЕНО КАК КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовАктивов,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивов КАК АналитикаАктивов,
		|	ДД.Регистратор КАК ДокументИсточник
		|ИЗ
		|	ВТКэшРасчетныеОборотыДетализацияПартийТоваровДляНДСиУСН КАК ДД
		|ГДЕ
		|	&ИспользоватьВводОстатковВерсии24
		|	И ДД.Регистратор ССЫЛКА Документ.ВводОстатков
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.ТипЗаписи,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход
		|		 ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступления,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Выпуск)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Выпуск) И НЕ ДД.СлужебноеВидДвиженияПриход
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) И НЕ ДД.СлужебноеВидДвиженияПриход
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение) И НЕ ДД.СлужебноеВидДвиженияПриход
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение) И НЕ ДД.СлужебноеВидДвиженияПриход
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение) И ДД.СлужебноеВидДвиженияПриход
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПеремещениеАвто)
		|
		|		ИНАЧЕ ДД.ТипЗаписи
		|	КОНЕЦ КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК Сторно,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход
		|		 ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	СУММА(ДД.Количество) КАК Количество,
		|
		|	ДД.ХозяйственнаяОперация,
		|	(ВЫБОР
		|		КОГДА НЕ Передача.Ссылка ЕСТЬ NULL И НЕ ДД.СлужебноеВидДвиженияПриход
		|			ТОГДА Передача.НалогообложениеНДС
		|		ИНАЧЕ ДД.КорВидДеятельностиНДС КОНЕЦ) КАК КорВидДеятельностиНДС,
		|	ДД.КорРазделУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	(ВЫБОР
		|		КОГДА ДД.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		 И ДД.СтатьяРасходовСписания <> НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.СтатьяРасходовСписания
		|		КОГДА ДД.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
		|			ТОГДА ДД.СтатьяАктивовПассивов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СтатьяРасходовАктивов,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивовПассивов КАК АналитикаАктивов,
		|	(ВЫБОР
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика)
		|			ТОГДА ДД.Регистратор
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)
		|		 И ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.Регистратор
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
		|		 И ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.Регистратор
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение) И НЕ ДД.СлужебноеВидДвиженияПриход
		|		 И ДД.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
		|		 И ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.Регистратор
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ) КАК ДокументИсточник
		|ПОМЕСТИТЬ ДвиженияСебестоимостиНДС
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передача
		|		ПО Передача.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Количество <> 0
		|	И ДД.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
		|	И (НЕ ДД.ТипЗаписи В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов))
		|	)
		|	И НЕ (ДД.Регистратор ССЫЛКА Документ.ПорчаТоваров И ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение))
		|	И НЕ (ДД.Регистратор ССЫЛКА Документ.ПересортицаТоваров И ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение))
		|	И НЕ (ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) И ДД.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Выпуск)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Выпуск) И НЕ ДД.СлужебноеВидДвиженияПриход
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) И НЕ ДД.СлужебноеВидДвиженияПриход
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение) И НЕ ДД.СлужебноеВидДвиженияПриход
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение) И НЕ ДД.СлужебноеВидДвиженияПриход
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение) И ДД.СлужебноеВидДвиженияПриход
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПеремещениеАвто)
		|
		|		ИНАЧЕ ДД.ТипЗаписи
		|	КОНЕЦ, // ТипЗаписи
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ), // Сторно
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура,
		|	
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход
		|		 ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ, // ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	ДД.ХозяйственнаяОперация,
		|	(ВЫБОР
		|		КОГДА НЕ Передача.Ссылка ЕСТЬ NULL И НЕ ДД.СлужебноеВидДвиженияПриход
		|			ТОГДА Передача.НалогообложениеНДС
		|		ИНАЧЕ ДД.КорВидДеятельностиНДС КОНЕЦ), // КорВидДеятельностиНДС
		|	ДД.КорРазделУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	(ВЫБОР
		|		КОГДА ДД.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		 И ДД.СтатьяРасходовСписания <> НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.СтатьяРасходовСписания
		|		КОГДА ДД.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
		|			ТОГДА ДД.СтатьяАктивовПассивов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ), // СтатьяРасходовАктивов
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивовПассивов,
		|	(ВЫБОР
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика)
		|			ТОГДА ДД.Регистратор
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)
		|		 И ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.Регистратор
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
		|		 И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
		|		 И ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.Регистратор
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение) И НЕ ДД.СлужебноеВидДвиженияПриход
		|		 И ДД.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
		|		 И ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО
		|			ТОГДА ДД.Регистратор
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ) // ДокументИсточник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор
		|";
КонецФункции

// ... выборки данных

Функция ТекстНачальныеОстаткиПартийНДС() // использует ОстаткиТоваров
	Возврат
		"ВЫБРАТЬ
		|	""ТекстНачальныеОстаткиПартийНДС"" КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Остаток) КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(Остатки.Количество, ДД.КоличествоОстаток) < 0 ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ)							 КАК Сторно,
		|	0 КАК Приоритет,
		|	ЕСТЬNULL(Остатки.Количество, ДД.КоличествоОстаток) КАК Знаменатель,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура 	КАК Номенклатура,
		|	ДД.АналитикаУчетаПартий.НалогообложениеНДС 	КАК НалогообложениеПартии,
		|	
		|	ЕСТЬNULL(ПериодикаПартии.ДатаРегистратора,
		|		ЕСТЬNULL(ПериодикаПоступления.ДатаРегистратора,
		|			&КонецПредыдущегоПериода)) КАК Период,
		|	(ВЫБОР
		|		КОГДА ДД.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			ТОГДА ДД.Партия
		|		ИНАЧЕ ДД.Партия КОНЕЦ) КАК Регистратор,
		|	НЕОПРЕДЕЛЕНО КАК ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступления,
		|
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.НДСОстаток КАК НДС,
		|	ДД.НДСУпрОстаток КАК НДСУпр,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК КорОрганизация,
		|	НЕОПРЕДЕЛЕНО КАК КорПартия,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаФинансовогоУчета,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовАктивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяСписанияНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС
		|ИЗ
		|	РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН.Остатки(&ГраницаКонецПредыдущегоПериода,
		|		Организация В (&МассивОрганизаций)) КАК ДД
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиТоваров КАК Остатки
		|		ПО Остатки.Организация = ДД.Организация
		|		И Остатки.РазделУчета = ДД.РазделУчета
		|		И Остатки.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Остатки.ВидЗапасов = ДД.ВидЗапасов
		|		И Остатки.Партия = ДД.Партия
		|		И Остатки.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И Остатки.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ПериодикаПартии
		|		ПО ПериодикаПартии.Организация = ДД.Организация
		|		И ПериодикаПартии.Документ = ДД.Партия
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ПериодикаПоступления
		|		ПО ПериодикаПоступления.Организация = ДД.Организация
		|		И ПериодикаПоступления.Документ = ДД.ДокументПоступления
		|";
КонецФункции

Функция ТекстПриходыСебестоимостиТоваров() // использует ПриходыТоваровНДС
	Возврат
		"ВЫБРАТЬ
		|	""ТекстПриходыСебестоимостиТоваров"" КАК ЗапросИсточник,
		|	ДД.ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА НЕ Приходы.Количество ЕСТЬ NULL И Приходы.Количество < 0 ТОГДА ИСТИНА
		|		КОГДА НЕ Остатки.Количество ЕСТЬ NULL И Остатки.Количество < 0 ТОГДА ИСТИНА
		|		КОГДА ДД.Количество < 0 ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК Сторно,
		|	0 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА НЕ Приходы.Количество ЕСТЬ NULL ТОГДА Приходы.Количество
		|		КОГДА НЕ Остатки.Количество ЕСТЬ NULL ТОГДА Остатки.Количество
		|		ИНАЧЕ ДД.Количество КОНЕЦ) КАК Знаменатель,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.Номенклатура,
		|	ДД.НалогообложениеПартии,
		|	
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступления,
		|
		|	ДД.Количество,
		|	ДД.СтоимостьБезНДС,
		|	ДД.НДС,
		|	ДД.НДСУпр,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.КорРазделУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.СтатьяРасходовАктивов,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивов,
		|	ДД.ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяСписанияНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС
		|ИЗ
		|	ПриходыТоваровНДС КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиТоваров КАК Остатки
		|		ПО ДД.ТипЗаписи В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаСтоимости),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости))
		|		И ДД.Количество = 0
		|		И Остатки.Организация = ДД.Организация
		|		И Остатки.РазделУчета = ДД.РазделУчета
		|		И Остатки.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Остатки.ВидЗапасов = ДД.ВидЗапасов
		|		И Остатки.Партия = ДД.Партия
		|		И Остатки.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И Остатки.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПриходыТоваров КАК Приходы
		|		ПО ДД.ТипЗаписи В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаСтоимости),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости))
		|		И ДД.Количество = 0
		|		И Приходы.Организация = ДД.Организация
		|		И Приходы.РазделУчета = ДД.РазделУчета
		|		И Приходы.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Приходы.ВидЗапасов = ДД.ВидЗапасов
		|		И Приходы.Партия = ДД.Партия
		|		И Приходы.АналитикаФинансовогоУчета = ДД.АналитикаФинансовогоУчета
		|		И Приходы.ВидДеятельностиНДС = ДД.ВидДеятельностиНДС
		|ГДЕ
		|	НЕ (ДД.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
		|		И ДД.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости)))
		|";
КонецФункции

Функция ТекстДвиженияСебестоимостиТоваров()
	Возврат
		"ВЫБРАТЬ
		|	""ТекстДвиженияСебестоимостиТоваров"" КАК ЗапросИсточник,
		|	ДД.ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|		 И Выпуски.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Выпуск)
		|			ТОГДА ЛОЖЬ
		|			ИНАЧЕ ДД.Сторно
		|		КОНЕЦ) КАК Сторно,
		|	0 КАК Приоритет,
		|	СУММА(ВЫБОР
		|			КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|			 И Выпуски.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Выпуск)
		|				ТОГДА Выпуски.Знаменатель
		|			КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|			 И РаботыДляДавальца.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Выпуск)
		|				ТОГДА РаботыДляДавальца.Знаменатель
		|			ИНАЧЕ ДД.Знаменатель
		|		КОНЕЦ) КАК Знаменатель,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК НалогообложениеПартии,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК НДС,
		|	0 КАК НДСУпр,
		|	ДД.ХозяйственнаяОперация,
		|	(ВЫБОР
		|		КОГДА РаботыДляДавальца.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		 И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА РаботыДляДавальца.ВидДеятельностиНДС
		|		ИНАЧЕ ДД.КорВидДеятельностиНДС КОНЕЦ) КАК КорВидДеятельностиНДС,
		|	(ВЫБОР
		|		КОГДА РаботыДляДавальца.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		 И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА РаботыДляДавальца.РазделУчета
		|		ИНАЧЕ ДД.КорРазделУчета КОНЕЦ) КАК КорРазделУчета,
		|	(ВЫБОР
		|		КОГДА РаботыДляДавальца.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		 И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА РаботыДляДавальца.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.КорАналитикаУчетаНоменклатуры КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА РаботыДляДавальца.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		 И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА РаботыДляДавальца.ВидЗапасов
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ) КАК КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорПартия,
		|	(ВЫБОР
		|		КОГДА РаботыДляДавальца.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		 И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА РаботыДляДавальца.АналитикаФинансовогоУчета
		|		ИНАЧЕ ДД.КорАналитикаФинансовогоУчета КОНЕЦ) КАК КорАналитикаФинансовогоУчета,
		|	ДД.СтатьяРасходовАктивов,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивов,
		|	ДД.ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяСписанияНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС
		|ИЗ
		|	ДвиженияСебестоимостиНДС КАК ДД
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДвиженияСебестоимостиНДС КАК Выпуски
		|		ПО ДД.Регистратор = Выпуски.Регистратор
		|			И ДД.КорПартия = Выпуски.Партия
		|			И ДД.КорАналитикаУчетаНоменклатуры = Выпуски.АналитикаУчетаНоменклатуры
		|			И ДД.КорРазделУчета = Выпуски.РазделУчета
		|			И ДД.КорВидЗапасов = Выпуски.ВидЗапасов
		|			И ДД.КорАналитикаФинансовогоУчета = Выпуски.АналитикаФинансовогоУчета
		|			И ДД.КорВидДеятельностиНДС = Выпуски.ВидДеятельностиНДС
		|			И (ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск))
		|			И (Выпуски.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Выпуск))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДвиженияСебестоимостиНДС КАК РаботыДляДавальца
		|		ПО ДД.Регистратор = РаботыДляДавальца.Регистратор
		|			И ДД.КорПартия = РаботыДляДавальца.Партия
		|			И ДД.КорАналитикаУчетаНоменклатуры = РаботыДляДавальца.КорАналитикаУчетаНоменклатуры
		|			И ДД.КорВидЗапасов = РаботыДляДавальца.КорВидЗапасов
		|			И (ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск))
		|			И (РаботыДляДавальца.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Выпуск))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
		|		 И Выпуски.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Выпуск)
		|			ТОГДА ЛОЖЬ
		|			ИНАЧЕ ДД.Сторно
		|		КОНЕЦ),
		|	ДД.Номенклатура,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|	ДД.ХозяйственнаяОперация,
		|	(ВЫБОР
		|		КОГДА РаботыДляДавальца.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		 И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА РаботыДляДавальца.ВидДеятельностиНДС
		|		ИНАЧЕ ДД.КорВидДеятельностиНДС КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА РаботыДляДавальца.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		 И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА РаботыДляДавальца.РазделУчета
		|		ИНАЧЕ ДД.КорРазделУчета КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА РаботыДляДавальца.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		 И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА РаботыДляДавальца.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.КорАналитикаУчетаНоменклатуры КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА РаботыДляДавальца.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		 И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА РаботыДляДавальца.ВидЗапасов
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ),
		|	ДД.КорОрганизация,
		|	ДД.КорПартия,
		|	(ВЫБОР
		|		КОГДА РаботыДляДавальца.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		 И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА РаботыДляДавальца.АналитикаФинансовогоУчета
		|		ИНАЧЕ ДД.КорАналитикаФинансовогоУчета КОНЕЦ),
		|	ДД.СтатьяРасходовАктивов,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивов,
		|	ДД.ДокументИсточник";
КонецФункции

Функция ТекстДвиженияСебестоимостиТоваровСборка()
	Возврат
		"ВЫБРАТЬ
		|	""ТекстДвиженияСебестоимостиТоваровСборка"" КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК Сторно,
		|	0 КАК Приоритет,
		|	МАКСИМУМ(Приходы.Количество) КАК Знаменатель,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.КорАналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК НалогообложениеПартии,
		|	
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Организация,
		|	ДД.КорРазделУчета КАК РазделУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК ВидЗапасов,
		|	ДД.КорПартия КАК Партия,
		|	ДД.КорАналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|
		|	СУММА(ДД.Количество) КАК Количество,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК НДС,
		|	0 КАК НДСУпр,
		|
		|	ДД.ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	НЕОПРЕДЕЛЕНО КАК КорПартия,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовАктивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяСписанияНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПриходыСборокТоваров КАК Приходы
		|		ПО Приходы.Организация = ДД.Организация
		|		И Приходы.РазделУчета = ДД.КорРазделУчета
		|		И Приходы.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Приходы.Партия = ДД.КорПартия
		|		И Приходы.АналитикаФинансовогоУчета = ДД.КорАналитикаФинансовогоУчета
		|		И Приходы.ВидДеятельностиНДС = ДД.КорВидДеятельностиНДС
		|		И Приходы.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Количество <> 0
		|	И ДД.Регистратор ССЫЛКА Документ.СборкаТоваров
		|	И ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ),
		|	ДД.КорАналитикаУчетаНоменклатуры.Номенклатура,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорРазделУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

Функция ТекстВозвратыПрошлыхПериодов()
	Возврат
		"ВЫБРАТЬ
		|	""ТекстВозвратыПрошлыхПериодов"" КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно) КАК ТипЗаписи,
		|	ИСТИНА КАК Сторно,
		|	0 КАК Приоритет,
		|	-ДД.Количество КАК Знаменатель,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК НалогообложениеПартии,
		|	
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС,
		|
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|
		|	-ДД.Количество,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК НДС,
		|	0 КАК НДСУпр,
		|
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорВидДеятельностиНДС,
		|	ДД.РазделУчета КАК КорРазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.Организация КАК КорОрганизация,
		|	ДД.Партия КАК КорПартия,
		|	ДД.КорАналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовАктивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивов,
		|	ДД.ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяСписанияНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Количество <> 0
		|	И ДД.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|	И ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
		|";
КонецФункции

Функция ТекстРеализацииПрошлыхМесяцевПартииНДС() // использует ПрошлыеРеализации 
	Возврат
		"ВЫБРАТЬ
		|	""ТекстРеализацииПрошлыхМесяцевПартииНДС"" КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Прошлое) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно,
		|	0 КАК Приоритет,
		|	ДД.Знаменатель 								КАК Знаменатель,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.АналитикаУчетаНоменклатуры.Номенклатура 	КАК Номенклатура,
		|	ДД.КорВидДеятельностиНДС 					КАК НалогообложениеПартии,
		|	
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Организация,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Партия,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступления,
		|
		|	ДД.Количество,
		|	ДД.СтоимостьБезНДС,
		|	ДД.НДС,
		|	ДД.НДСУпр,
		|
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	НЕОПРЕДЕЛЕНО КАК КорПартия,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовАктивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяСписанияНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС
		|ИЗ
		|	РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРеализацииПартийНДС КАК Прошлые
		|		ПО ДД.Регистратор = Прошлые.ДокументИсточник
		|		И ДД.Организация = Прошлые.Организация
		|		И ДД.РазделУчета = Прошлые.РазделУчета
		|		И ДД.АналитикаУчетаНоменклатуры = Прошлые.АналитикаУчетаНоменклатуры
		|		И ДД.ВидЗапасов = Прошлые.ВидЗапасов
		|		И ДД.Партия = Прошлые.Партия
		|		И ДД.АналитикаФинансовогоУчета = Прошлые.АналитикаФинансовогоУчета
		|		И ДД.КорВидДеятельностиНДС = Прошлые.ВидДеятельностиНДС
		|ГДЕ
		|	ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ (ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)
		|		И ДД.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением))
		|";
КонецФункции

Функция ТекстРеализацииПрошлыхМесяцевПартииНДС21() // использует ПрошлыеРеализации 
	Возврат
		"ВЫБРАТЬ
		|	""ТекстРеализацииПрошлыхМесяцевПартииНДС21"" КАК ЗапросИсточник,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Прошлое) КАК ТипЗаписи,
		|	ЛОЖЬ КАК Сторно,
		|	0 КАК Приоритет,
		|	Прошлые.Количество							КАК Знаменатель,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.Номенклатура								КАК Номенклатура,
		|	ДД.НалогообложениеНДС						КАК НалогообложениеПартии,
		|	
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Организация,
		|	Прошлые.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	Прошлые.Партия,
		|	Прошлые.АналитикаФинансовогоУчета,
		|	ДД.НалогообложениеНДС КАК ВидДеятельностиНДС,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступления,
		|
		|	ДД.Количество,
		|	ДД.СтоимостьБезНДС,
		|	ДД.НДСРегл,
		|	0 КАК НДСУпр,
		|
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорВидДеятельностиНДС,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	НЕОПРЕДЕЛЕНО КАК КорПартия,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовАктивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяСписанияНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРеализацииПартийНДС КАК Прошлые
		|		ПО ДД.Регистратор = Прошлые.ДокументИсточник
		|		И ДД.Организация = Прошлые.Организация
		|		И ДД.АналитикаУчетаНоменклатуры = Прошлые.АналитикаУчетаНоменклатуры
		|		И ДД.ВидЗапасов = Прошлые.ВидЗапасов
		|		И (ДД.ДокументПоступления = Прошлые.Партия
		|			ИЛИ Прошлые.Партия = НЕОПРЕДЕЛЕНО)
		|ГДЕ
		|	ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|";
КонецФункции

// Заполнение расчетной партии

Процедура ЗаполнитьРасчетнуюПартиюНДС(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход)
	
	Если Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск
	 И Расход.ДокументИсточник <> Приход.Регистратор Тогда
		Возврат;
	КонецЕсли;
	
	СуммовыеРесурсы = Новый Структура("СтоимостьБезНДС, НДС, НДСУпр");
	
	// Заполняем расчетную партию по расходной партии-основании
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	//	Заполняем партионную идентификацию в расчетной партии
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход, "ДокументПоступления, АналитикаУчетаПартий, НалогообложениеПартии");
	РасчетнаяПартия.ДокументИсточник = Приход.Регистратор;
	
	КорректироватьБазуВРасходе = Ложь;
	
	// Расчетная партия заполняется на наибольшее общее вычитаемое
	Если (РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Перемещение
	 	  И ТипЗнч(РасчетнаяПартия.Регистратор) = Тип("ДокументСсылка.СборкаТоваров"))
	 ИЛИ РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Выпуск
	 ИЛИ РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск Тогда
		КоличествоСписания = Мин(Расход.Количество, Приход.Знаменатель);
		ПриходБазис = ?(Приход.Знаменатель <> 0, КоличествоСписания / Приход.Знаменатель, 0);
	ИначеЕсли Приход.Количество <> 0 Тогда
		КорректироватьБазуВРасходе = Истина;
		КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
		ПриходБазис = ?(Приход.Количество <> 0, КоличествоСписания / Приход.Количество, 0);
	Иначе
		КоличествоСписания = Мин(Расход.Знаменатель, Приход.Знаменатель);
		ПриходБазис = ?(Приход.Знаменатель <> 0, КоличествоСписания / Приход.Знаменатель, 0);
	КонецЕсли;
	
	// Заполняем показатели расчетной партии
	Если РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Выпуск Тогда
		РасчетнаяПартия.Количество = 0;
	ИначеЕсли РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Перемещение
	 И ТипЗнч(РасчетнаяПартия.Регистратор) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		РасчетнаяПартия.Количество = 0;
	ИначеЕсли РасчетнаяПартия.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СписанияНаВыпуск Тогда
		РасчетнаяПартия.Количество = Окр(ПриходБазис * Приход.Количество, 3);
	Иначе
		РасчетнаяПартия.Количество = Мин(Расход.Количество, Приход.Количество);
	КонецЕсли;
	
	Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
		РасчетнаяПартия[ИмяРесурса.Ключ] = Окр(ПриходБазис * Приход[ИмяРесурса.Ключ], 2);
	КонецЦикла;
	
	// Корректируем базу расчета в приходе
	Если НЕ (Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Перемещение
	 И Расход.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет) Тогда
	 
	 	Если КорректироватьБазуВРасходе Тогда
			Приход.Знаменатель = Приход.Знаменатель - Мин(Расход.Знаменатель, Приход.Знаменатель);
		Иначе 
	    	Приход.Знаменатель = Приход.Знаменатель - КоличествоСписания;
		КонецЕсли;
		
		Приход.Количество = Приход.Количество - РасчетнаяПартия.Количество;
		
		Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
			Приход[ИмяРесурса.Ключ] = Приход[ИмяРесурса.Ключ] - РасчетнаяПартия[ИмяРесурса.Ключ];
		КонецЦикла;
	 	
	КонецЕсли;
	
	// Корректируем базу расчета в расходе
	Если КорректироватьБазуВРасходе Тогда
		
		Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
		
		Для Каждого ИмяРесурса Из СуммовыеРесурсы Цикл
			Расход[ИмяРесурса.Ключ] = Расход[ИмяРесурса.Ключ] - РасчетнаяПартия[ИмяРесурса.Ключ];
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьСтатьюИАналитикуСписанияНДС(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход);
	
	// По результатам партионной идентификации определяем завершенность расчета
	РасчетнаяПартия.РасчетЗавершен = Приход.РасчетЗавершен;
	
КонецПроцедуры

Процедура ЗаполнитьСтатьюИАналитикуСписанияНДС(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход)
	
	Период = НачалоМесяца(РасчетнаяПартия.Период);
	
	ВариантУчетаНДС = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ВариантУчетаНДСОрганизацииПриИзмененииВидаДеятельности(
		РасчетнаяПартия.Организация, Период);
	
	Если ВариантУчетаНДС = Перечисления.ВариантыУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую.ВключатьВСтоимость Тогда
		Возврат;
	КонецЕсли;
	
	Если УчетНДСУТ.ВозможноСписаниеНДС(РасчетнаяПартия.ВидДеятельностиНДС, РасчетнаяПартия.КорВидДеятельностиНДС)
	 ИЛИ (РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход
	  И УчетНДСУТ.ВозможноСписаниеНДС(Приход.ВидДеятельностиНДС, Приход.КорВидДеятельностиНДС)) Тогда
	
		Если ВариантУчетаНДС = Перечисления.ВариантыУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую.ВключатьВСтоимостьИлиРасходыВЗависимостиОтПериода Тогда
			
			Если ЗначениеЗаполнено(РасчетнаяПартия.ДокументПоступления) Тогда
				ДатаПартии = НачалоМесяца(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетнаяПартия.ДокументПоступления, "Дата"));
			Иначе
				ДатаПартии = Дата(1,1,1);
			КонецЕсли;
			
			Если ДатаПартии = Период Тогда
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		Если УчетНДСУТ.ВозможноСписаниеНДС(РасчетнаяПартия.ВидДеятельностиНДС, РасчетнаяПартия.КорВидДеятельностиНДС) Тогда
			
			ПараметрыСписанияНДС = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПараметрыСписанияНДСОрганизации(
				РасчетнаяПартия.Организация, Период);
			
			Если РасчетнаяПартия.КорВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
				РасчетнаяПартия.СтатьяСписанияНДС 	 = ПараметрыСписанияНДС.СтатьяСписанияПродажаНеОблагаетсяНДС;
				РасчетнаяПартия.АналитикаСписанияНДС = ПараметрыСписанияНДС.АналитикаСписанияПродажаНеОблагаетсяНДС;
			Иначе
				РасчетнаяПартия.СтатьяСписанияНДС 	 = ПараметрыСписанияНДС.СтатьяСписанияПродажаОблагаетсяЕНВД;
				РасчетнаяПартия.АналитикаСписанияНДС = ПараметрыСписанияНДС.АналитикаСписанияПродажаОблагаетсяЕНВД;
			КонецЕсли;
			
		Иначе
			
			РасчетнаяПартия.НДС = 0;
			РасчетнаяПартия.НДСУпр = 0;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЭтапа12_ПодготовкаДанныхДляПартийПрочихРасходов

// Выборка данных

Процедура ПолучитьДанныеДляПартийПрочихРасходов(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ""
		+ ТекстИнициализацияПартийНДС() // вт ПриходыТоваров, ОстаткиТоваров, ПрошлыеРеализацииПартийНДС, ПриходыТоваровНДС, ДвиженияСебестоимостиНДС
		+ ТекстРазделениеЗапросов()
		// выборка данных
		+ ТекстОписаниеДанныхДляПартийПрочихРасходов() //вт Данные
		+ ТекстОбъединениеЗапросов() + ТекстПоступленияПартийПрочихРасходовИзПартийНДС()
		+ ТекстОбъединениеЗапросов() + ТекстПоступленияПартийПрочихРасходовИзПриходовСебестоимости(); // использует ПриходыТоваровНДС
	
	ВыбиратьДанныеДляРасчетаВоВременнуюТаблицу(Запрос);
	
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "Данные");
	
	Запрос.Выполнить();
	
	// Нумерация строк не требуется, т.к. распределение выполняться не будет.
	
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ПриходыТоваров, ОстаткиТоваров, ПрошлыеРеализацииПартийНДС, ПриходыТоваровНДС, ДвиженияСебестоимостиНДС, СписаниеОтклоненийВСтоимости");
	
КонецПроцедуры

// Тексты запросов

// ... описания данных

Функция ТекстОписаниеДанныхДляПартийПрочихРасходов()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(80)) КАК ЗапросИсточник,
		|	0 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПустаяСсылка) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивовПассивов,
		|	ДД.ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК НДСУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС
		|//ВоВременнуюТаблицу
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|";
КонецФункции

// ... выборки данных

Функция ТекстПоступленияПартийПрочихРасходовИзПартийНДС()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПоступленияПартийПрочихРасходовИзПартийНДС"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	ВЫБОР
		|		КОГДА НЕ Потребление.Подразделение ЕСТЬ NULL
		|			ТОГДА Потребление.Подразделение
		|		КОГДА НЕ Сторно.Подразделение ЕСТЬ NULL
		|			ТОГДА Сторно.Подразделение
		|		КОГДА Аналитика.Склад ССЫЛКА Справочник.СтруктураПредприятия
		|			ТОГДА Аналитика.Склад
		|		ИНАЧЕ ЕСТЬNULL(Склады.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|	КОНЕЦ КАК Подразделение,
		|	ДД.СтатьяРасходовАктивов КАК СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивов КАК АналитикаАктивовПассивов,
		|	ДД.ДокументПоступления КАК ДокументПоступленияРасходов,
		|	ДД.АналитикаУчетаПартий,
		|	ЕСТЬNULL(Потребление.НаправлениеДеятельности,
		|		ЕСТЬNULL(Назначения.НаправлениеДеятельности,
		|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))) КАК НаправлениеДеятельности,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
		|			ТОГДА ДД.КорВидДеятельностиНДС
		|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|		 И Статья.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС) ТОГДА
		|			(ВЫБОР
		|				КОГДА Статья.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента)
		|				 И ДД.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|					ТОГДА ДД.КорВидДеятельностиНДС
		|				КОГДА Статья.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента)
		|				 И ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|					ТОГДА ДД.ВидДеятельностиНДС
		|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию) КОНЕЦ)
		|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|		 И Статья.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
		|		КОГДА ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА ДД.ВидДеятельностиНДС
		|		ИНАЧЕ ДД.КорВидДеятельностиНДС КОНЕЦ) КАК ВидДеятельностиНДС,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьРегл,
		|	СУММА(ДД.НДС) КАК НДСРегл,
		|	СУММА(ДД.НДСУпр) КАК НДСУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
		|			ТОГДА ДД.КорВидДеятельностиНДС
		|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|		 И Статья.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС) ТОГДА
		|			(ВЫБОР
		|				КОГДА Статья.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента)
		|				 И ДД.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|					ТОГДА ДД.КорВидДеятельностиНДС
		|				КОГДА Статья.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента)
		|				 И ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|					ТОГДА ДД.ВидДеятельностиНДС
		|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию) КОНЕЦ)
		|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|		 И Статья.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
		|		КОГДА ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА ДД.ВидДеятельностиНДС
		|		ИНАЧЕ ДД.КорВидДеятельностиНДС КОНЕЦ) КАК НалогообложениеНДС
		|ИЗ
		|	ВТКэшРасчетныеОборотыДетализацияПартийТоваровДляНДСиУСН КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО Аналитика.Склад = Склады.Ссылка
		|			ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО Назначения.Ссылка = Аналитика.Назначение
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Потребление
		|		ПО Потребление.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК Сторно
		|		ПО Сторно.Ссылка = ДД.Регистратор
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|		ПО Статья.Ссылка = ДД.СтатьяРасходовАктивов
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьяАктивов
		|		ПО СтатьяАктивов.Ссылка = ДД.СтатьяРасходовАктивов
		|ГДЕ
		|	НЕ ДД.СлужебноеВидДвиженияПриход
		|	И (Статья.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
		|		ИЛИ Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|			И Статья.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС)
		|		ИЛИ ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
		|		ИЛИ НЕ СтатьяАктивов.Ссылка ЕСТЬ NULL
		|			И ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
		|	И (ДД.НДС <> 0 ИЛИ ДД.НДСУпр <> 0)
		|	И ДД.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ВЫБОР
		|		КОГДА НЕ Потребление.Подразделение ЕСТЬ NULL
		|			ТОГДА Потребление.Подразделение
		|		КОГДА НЕ Сторно.Подразделение ЕСТЬ NULL
		|			ТОГДА Сторно.Подразделение
		|		КОГДА Аналитика.Склад ССЫЛКА Справочник.СтруктураПредприятия
		|			ТОГДА Аналитика.Склад
		|		ИНАЧЕ ЕСТЬNULL(Склады.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|	КОНЕЦ,
		|	ДД.СтатьяРасходовАктивов,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаАктивов,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ЕСТЬNULL(Потребление.НаправлениеДеятельности,
		|		ЕСТЬNULL(Назначения.НаправлениеДеятельности,
		|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))),
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
		|			ТОГДА ДД.КорВидДеятельностиНДС
		|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|		 И Статья.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС) ТОГДА
		|			(ВЫБОР
		|				КОГДА Статья.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента)
		|				 И ДД.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|					ТОГДА ДД.КорВидДеятельностиНДС
		|				КОГДА Статья.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента)
		|				 И ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|					ТОГДА ДД.ВидДеятельностиНДС
		|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию) КОНЕЦ)
		|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|		 И Статья.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
		|		КОГДА ДД.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА ДД.ВидДеятельностиНДС
		|		ИНАЧЕ ДД.КорВидДеятельностиНДС КОНЕЦ),
		|	ДД.ВидДеятельностиНДС
		|";
КонецФункции

Функция ТекстПоступленияПартийПрочихРасходовИзПриходовСебестоимости()// использует ПриходыТоваровНДС
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПоступленияПартийПрочихРасходовИзПриходовСебестоимости"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	ВЫБОР
		|		КОГДА НЕ Потребление.Подразделение ЕСТЬ NULL
		|			ТОГДА Потребление.Подразделение
		|		КОГДА НЕ СторноТоваров.Подразделение ЕСТЬ NULL
		|			ТОГДА СторноТоваров.Подразделение
		|		КОГДА Аналитика.Склад ССЫЛКА Справочник.СтруктураПредприятия
		|			ТОГДА Аналитика.Склад
		|		ИНАЧЕ ЕСТЬNULL(Склады.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|	КОНЕЦ КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	ДД.ДокументПоступления КАК ДокументПоступленияРасходов,
		|	ДД.АналитикаУчетаПартий,
		|	ЕСТЬNULL(Потребление.НаправлениеДеятельности,
		|		ЕСТЬNULL(Назначения.НаправлениеДеятельности,
		|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))) КАК НаправлениеДеятельности,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидДеятельностиНДС,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	ДД.СтоимостьБезНДС КАК СтоимостьРегл,
		|	ДД.НДС КАК НДСРегл,
		|	ДД.НДСУпр КАК НДСУпр,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС
		|ИЗ
		|	ПриходыТоваровНДС КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО Аналитика.Склад = Склады.Ссылка
		|			ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО Назначения.Ссылка = Аналитика.Назначение
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Потребление
		|		ПО Потребление.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК СторноТоваров
		|		ПО СторноТоваров.Ссылка = ДД.Регистратор
		|
		|ГДЕ
		|	ДД.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
		|	И ДД.ТипЗаписи В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии))
		|";
КонецФункции

#КонецОбласти


#Область ПроцедурыЭтапов_Общие


#Область ВспомогательныеПроцедуры

Функция ПереченьПолей(КоллекцияКолонок, Исключения = "")
	
	ИсключаемыеПоля = Новый Структура(Исключения);
	ПереченьПолей = "";
	
	Для Каждого Колонка Из КоллекцияКолонок Цикл
		Если НЕ ИсключаемыеПоля.Свойство(Колонка.Имя) Тогда
			ПереченьПолей = ПереченьПолей + ?(ЗначениеЗаполнено(ПереченьПолей), ", ", "") + Колонка.Имя;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПереченьПолей;
	
КонецФункции

Процедура ВыбиратьДанныеДляРасчетаВоВременнуюТаблицу(Запрос, УсловиеОтбораДляОтладки = "")
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ВоВременнуюТаблицу", "ПОМЕСТИТЬ Данные");
	
	Если ЗначениеЗаполнено(УсловиеОтбораДляОтладки) Тогда
		
		// Иногда для упрощения отладки достаточно выбрать только часть данных.
		// Например, только данные по одной позиции номенклатуры.
		// В этом случае во второй параметр надо передать строку условий отбора "ГДЕ", например
		//   Т.АналитикаУчетаНоменклатуры.Номенклатура.Код = ""12345678""
		// Следует помнить, что рассчитанные таким образом неполные данные записывать в ИБ не следует,
		// т.к. это вызовет очистку всех остальных данных, не попавших в отбор "ГДЕ".
		
		Запрос.Текст = Запрос.Текст + "
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ Данные_Временная
		|ИЗ
		|	Данные КАК Т
		|ГДЕ
		|	" + УсловиеОтбораДляОтладки + "
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Данные
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	Данные_Временная КАК Т
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Данные_Временная";
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПодставитьШаблоныВесаИОбъемаВТекстЗапроса(ТекстЗапроса)
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Вес", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("СпрНоменклатура.ЕдиницаИзмерения", "СпрНоменклатура", Ложь));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Объем", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("СпрНоменклатура.ЕдиницаИзмерения", "СпрНоменклатура", Ложь));
		
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ПроцедурыЭтапов_Контекстные

// Используется для всех вызовов заполнения расчетной партии.
//
Процедура ЗаполнитьРасчетнуюПартию(ПараметрыРасчета, Контекст, РасчетнаяПартия, Расход, Приход)
	
	Если Ложь Тогда // для удобства расстановки тэгов ниже по тексту
		
	ИначеЕсли Контекст = "ПартииСебестоимостиТоваров" Тогда
		// Этап 8
		ЗаполнитьРасчетнуюПартиюСебестоимостиТоваров(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход);
	ИначеЕсли Контекст = "ПартииВыручкаИСебестоимостьПродаж" Тогда
		// Этап 8а
		ЗаполнитьРасчетнуюПартиюВыручкиИСебестоимостьПродаж(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход);
	ИначеЕсли Контекст = "ДопРасходы_ЗаказыПоставщикам" Тогда
		// Этап 10
		ЗаполнитьРасчетнуюПартиюЗаказВПриходе(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход);
	ИначеЕсли Контекст = "ДопРасходы_ПартииПрочихРасходов" Тогда
		// Этап 10
		ЗаполнитьРасчетнуюПартиюПрочихРасходов(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход);
	ИначеЕсли Контекст = "ДопРасходы_ПриходПартийРасходов" Тогда
		// Этап 10
		ЗаполнитьРасчетнуюПартиюПриходПартииРасходов(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход);
	ИначеЕсли Контекст = "ПартииНДСиУСН" Тогда
		// Этап 11
		ЗаполнитьРасчетнуюПартиюНДС(ПараметрыРасчета, РасчетнаяПартия, Расход, Приход);
	Иначе
		
		ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Для контекста %1 не предусмотрено заполнение полей расчетной партии'"),
			Контекст);
		
		ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаРаспределенияПартий,
			ТекстДляПротокола);
		
		ВызватьИсключение УниверсальныеМеханизмыПартийИСебестоимости.ТекстИсключениеДляРегистрацииПроблемы(ТекстДляПротокола);
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти


#Область РаспределениеПартийПоЦепочкам

#Область ИнициализацияИЗавершение

Процедура ИнициализироватьРаспределениеПартий(ПараметрыРасчета, ТаблицаДляРаспределенияПартий,
			ОписаниеЦепочек, ОписаниеДвижений, НезаписываемыеДанные)
	
	ПараметрыРасчета.Вставить("РаспределениеПартий", Новый Структура);
	
	ПараметрыРасчета.РаспределениеПартий.Вставить("РасчетныеПартии", 	   ТаблицаДляРаспределенияПартий);
	ПараметрыРасчета.РаспределениеПартий.Вставить("ОписаниеЦепочек", 	   ОписаниеЦепочек);
	ПараметрыРасчета.РаспределениеПартий.Вставить("ОписаниеДвижений", 	   ОписаниеДвижений);
	ПараметрыРасчета.РаспределениеПартий.Вставить("НезаписываемыеДанные",  НезаписываемыеДанные);
	ПараметрыРасчета.РаспределениеПартий.Вставить("ЕстьПереполнениеСтека", Ложь);
	
	// Настройки сохранения промежуточных данных расчета.
	ПараметрыРасчета.РаспределениеПартий.Вставить("ВыгружатьДанные", 	   Ложь);
	
	Если НРег(ПараметрыРасчета.ПредставлениеЭтапа) = НРег(ПараметрыРасчета.ВыгрузкаДанныхРасчета.ЭтапПартионногоУчета22ДляВыгрузкиВФайлы) Тогда
		
		ИмяКаталога = СокрЛП(ПараметрыРасчета.ВыгрузкаДанныхРасчета.КаталогДляСохраненияДанныхРасчетаПартий);
		
		Если НЕ ЗначениеЗаполнено(ИмяКаталога) Тогда
			Возврат; // выгрузка данных не требуется
		КонецЕсли;
		
		ИмяКаталога = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяКаталога);
		Каталог     = Новый Файл(ИмяКаталога);
		
		Если НЕ Каталог.Существует() ИЛИ НЕ Каталог.ЭтоКаталог() Тогда
			
			СтрокаПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не найден каталог для сохранения данных расчета партий: ""%1""'"),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(ИмяКаталога));
			
			ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
			
			Возврат; // каталог для выгрузки не найден
			
		КонецЕсли;
		
		ПараметрыРасчета.РаспределениеПартий.Вставить("ВыгружатьДанные", 	   Истина);
		ПараметрыРасчета.РаспределениеПартий.Вставить("ВыгрузкаДанныхРасчета", Новый Структура);
		
		ПараметрыРасчета.РаспределениеПартий.ВыгрузкаДанныхРасчета.Вставить("ИмяКаталога", ИмяКаталога);
		
		Попытка
			УдалитьФайлы(ИмяКаталога, "*.mxl");
		Исключение
		КонецПопытки;
		
		ПараметрыРасчета.РаспределениеПартий.ВыгрузкаДанныхРасчета.Вставить("Данные", 			ИмяКаталога + "Данные.mxl");
		ПараметрыРасчета.РаспределениеПартий.ВыгрузкаДанныхРасчета.Вставить("Источники", 		ИмяКаталога + "Источники.mxl");
		ПараметрыРасчета.РаспределениеПартий.ВыгрузкаДанныхРасчета.Вставить("Приемники", 		ИмяКаталога + "Приемники.mxl");
		ПараметрыРасчета.РаспределениеПартий.ВыгрузкаДанныхРасчета.Вставить("РасчетныеПартии", 	ИмяКаталога + "РасчетныеПартии.mxl");
		
	КонецЕсли;
	
КонецПроцедуры


Функция ОписаниеЦепочки(ОписаниеЦепочек, ТипЗаписи)
	
	Если ОписаниеЦепочек[ТипЗаписи] = Неопределено Тогда
		ОписаниеЦепочек.Вставить(
			ТипЗаписи,
			Новый Структура(
				"ПоляСвязи, ТипыПриемников, ТипыИсточников",
				Новый Массив, Новый Соответствие, Новый Соответствие));
	КонецЕсли;
	
	Возврат ОписаниеЦепочек[ТипЗаписи];
	
КонецФункции

Процедура ДобавитьОписаниеПриемника(ОписаниеЦепочек, Приемник, ПоляПриемника)
	
	Для Каждого ОписаниеПоля Из Новый Структура(ПоляПриемника) Цикл
		ОписаниеЦепочки(ОписаниеЦепочек, Приемник).ПоляСвязи.Добавить(ОписаниеПоля.Ключ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьОписаниеИсточника(ОписаниеЦепочек, Приемник, Источник, ПоляИсточника)
	
	ПоляСвязи = Новый Массив;
	Для Каждого ОписаниеПоля Из Новый Структура(ПоляИсточника) Цикл
		ПоляСвязи.Добавить(ОписаниеПоля.Ключ);
	КонецЦикла;
	
	ОписаниеЦепочки(ОписаниеЦепочек, Источник).ТипыПриемников.Вставить(Приемник, ПоляСвязи);
	ОписаниеЦепочки(ОписаниеЦепочек, Приемник).ТипыИсточников.Вставить(Источник, ПоляСвязи);
	
КонецПроцедуры

// Используется в случае, когда тип записи не имеет источников.
// Т.е. такой тип записи получается не распределением другого типа записей,
// а просто формируется по данным выборки (аналог типа записи "Дополнение" в партионном учете версии 2.1).
//
Процедура ДобавитьОписаниеДополнения(ОписаниеЦепочек, Приемник)
	
	ДобавитьОписаниеПриемника(ОписаниеЦепочек, Приемник, "Регистратор");
	ДобавитьОписаниеИсточника(ОписаниеЦепочек, Приемник, "", "Регистратор"); // псевдоисточник
	
КонецПроцедуры

Функция ОписаниеДвижений(Контекст, ИмяРегистра, ПоляРасчета, КлючиСравнения, Показатели,
						 БазисПрихода, БазисРасхода, КлючРасхода, ПолеПорядка, ПоляСортировки = "", СортировкаПоУсловию = "")
	
	Результат = Новый Структура;
	
	Результат.Вставить("Контекст", 			  		Контекст);
	Результат.Вставить("ИмяРегистра", 		  		ИмяРегистра);
	Результат.Вставить("ПоляРасчета", 		 	 	ПоляРасчета);
	Результат.Вставить("КлючиСравнения", 	  		КлючиСравнения);
	Результат.Вставить("Показатели", 		  		Показатели);
	Результат.Вставить("БазисПрихода", 		  		БазисПрихода);
	Результат.Вставить("БазисРасхода", 		  		БазисРасхода);
	Результат.Вставить("КлючРасхода", 		  		КлючРасхода);
	Результат.Вставить("ПолеПорядка", 		  		ПолеПорядка);
	Результат.Вставить("ПоляСортировки", 	  		ПоляСортировки);
	Результат.Вставить("СортировкаПоУсловию", 		СортировкаПоУсловию);
	
	Результат.Вставить("ИмяВременнойТаблицы", 		"");
	Результат.Вставить("ПоляИндексирования", 		"");
	Результат.Вставить("РаспределениеНеТребуется",  Ложь);
	
	Возврат Результат;
	
КонецФункции


Функция ОписаниеНезаписываемыхДанных(ЗаписыватьНезавершенные, НезаписываемыеТипыЗаписей = Неопределено,
			НезаписываемыеРазделы = Неопределено, НезаписываемыеРегистраторы = Неопределено)
	
	НезаписываемыеДанные = Новый Структура;
	НезаписываемыеДанные.Вставить("ЗаписыватьНезавершенные", 	ЗаписыватьНезавершенные);
	НезаписываемыеДанные.Вставить("НезаписываемыеТипыЗаписей", 	?(НезаписываемыеТипыЗаписей = Неопределено, Новый Соответствие, НезаписываемыеТипыЗаписей));
	НезаписываемыеДанные.Вставить("НезаписываемыеРегистраторы", ?(НезаписываемыеРегистраторы = Неопределено, Новый Соответствие, НезаписываемыеРегистраторы));
	НезаписываемыеДанные.Вставить("НезаписываемыеРазделы", 		?(НезаписываемыеРазделы = Неопределено, Новый Соответствие, НезаписываемыеРазделы));
	
	// Движения документа корректировки регистров не изменяем
	НезаписываемыеДанные.НезаписываемыеРегистраторы.Вставить(Метаданные.Документы.КорректировкаРегистров.Имя, Истина);
	
	Возврат НезаписываемыеДанные;
	
КонецФункции


Функция ТаблицаДляРаспределенияПартий(ПараметрыРасчета, ТекстОписаниеДанных, ДобавлятьКолонкуНумерации = Истина)
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = ТекстОписаниеДанных;
	
	Таблица = Запрос.Выполнить().Выгрузить().СкопироватьКолонки(); // создадим пустую таблицу
	
	// Уберем тип Null из описания типов колонок.
	Для Каждого ТекущаяКолонка Из Таблица.СкопироватьКолонки().Колонки Цикл
		
		Если ТекущаяКолонка.ТипЗначения.СодержитТип(Тип("Null")) Тогда
			
			Таблица.Колонки.Удалить(ТекущаяКолонка.Имя); // удалим колонку
			
			Таблица.Колонки.Добавить(
				ТекущаяКолонка.Имя,
				Новый ОписаниеТипов(ТекущаяКолонка.ТипЗначения,, "Null"),
				ТекущаяКолонка.Заголовок,
				ТекущаяКолонка.Ширина); // добавим аналогичную без типа значения Null
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДобавлятьКолонкуНумерации Тогда
		УниверсальныеМеханизмыПартийИСебестоимости.ДобавитьКолонкуДляНумерацииСтрок(Таблица);
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

Процедура ЗавершитьРаспределениеПартий(ПараметрыРасчета, ОкончаниеЭтапа = Истина)
	
	Если ОкончаниеЭтапа Тогда
		УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	Иначе
		УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьРаспределенныеПартии(ПараметрыРасчета);
	КонецЕсли;
	
	Если УниверсальныеМеханизмыПартийИСебестоимости.ВременнаяТаблицаСуществует(ПараметрыРасчета, "Источники") Тогда
		
		ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыРасчета,
			УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "Источники"));
			
	Иначе // это этап трансляции партий
		
		ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыРасчета,
			УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "Данные"));
		
	КонецЕсли;
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"Данные, Источники, Приемники, ОписаниеПодграфов");
	
КонецПроцедуры

#КонецОбласти

#Область ПостроениеЦепочек

Процедура ПостроитьЦепочкиДвижений(ПараметрыРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "Источники");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	// Проверим, что типы записей в описании цепочек соответствуют выбранным данным.
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.ТипЗаписи 	 КАК ТипЗаписи,
	|	Т.ЗапросИсточник КАК ЗапросИсточник,
	|	Т.Организация    КАК Организация,
	|	Т.Регистратор    КАК Регистратор
	|ИЗ
	|	Данные КАК Т
	|ГДЕ
	|	НЕ Т.ТипЗаписи В (&ДопустимыеТипыЗаписей)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипЗаписи,
	|	ЗапросИсточник,
	|	Организация,
	|	Регистратор";
	
	ДопустимыеТипыЗаписей = ИспользуемыеТипыЗаписейВЦепочках(ПараметрыРасчета.РаспределениеПартий.ОписаниеЦепочек,,, Ложь);
	Запрос.УстановитьПараметр("ДопустимыеТипыЗаписей", ДопустимыеТипыЗаписей);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаРаспределенияПартий,
			ПротоколРасчетаПартийИСебестоимости.СлужебныйСимвол_БезНумерации()
				+ НСтр("ru='В выбранных данных есть типы записей, отсутствующие в описании цепочек. Эти записи не будут обработаны.'"));
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Тип записи: %1, источник: ""%2"", организация ""%3"", регистратор: %4'"),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.ТипЗаписи),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.ЗапросИсточник),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Организация),
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.Регистратор));
			
			ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаРаспределенияПартий,
				ТекстДляПротокола);
			
			УниверсальныеМеханизмыПартийИСебестоимости.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыРасчета,
				Выборка.Организация,
				НСтр("ru='При формировании движений по партиям диагностированы ошибки'"),
				ТекстДляПротокола,
				Выборка.Регистратор);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Проверим, что непересчитываемые типы записей не являются приемниками.
	ТипыЗаписейПриемников = ИспользуемыеТипыЗаписейВЦепочках(ПараметрыРасчета.РаспределениеПартий.ОписаниеЦепочек,, Ложь, Ложь);
	ЕстьНепересчитываемыеТипыЗаписейВПриемниках = Ложь;
	
	Для Каждого ТекущийТипЗаписи Из ТипыЗаписейПриемников Цикл
		
		Если УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ЭтоНепересчитываемыйТипЗаписи(ТекущийТипЗаписи) Тогда
			
			ТекстДляПротокола = НСтр("ru='В описании цепочек в качестве приемников не могут использоваться непересчитываемые типы записей'");
			
			Если НЕ ЕстьНепересчитываемыеТипыЗаписейВПриемниках Тогда
				ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
					ПараметрыРасчета,
					Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаРаспределенияПартий,
					ПротоколРасчетаПартийИСебестоимости.СлужебныйСимвол_БезНумерации() + ТекстДляПротокола);
			КонецЕсли;
			
			ЕстьНепересчитываемыеТипыЗаписейВПриемниках = Истина;
			
			ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаРаспределенияПартий,
				ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(ТекущийТипЗаписи));
				
			УниверсальныеМеханизмыПартийИСебестоимости.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыРасчета,
				,
				НСтр("ru='При формировании движений по партиям диагностированы ошибки'"),
				ТекстДляПротокола + ": " + ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(ТекущийТипЗаписи));
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Сформируем текст запроса для построения цепочек
	ШаблонЗапроса = "
	|ВЫБРАТЬ
	|	Приемники.К КАК Приемник,
	|	Источники.К КАК Источник
	|ПОМЕСТИТЬ %Результат
	|ИЗ
	|	Данные КАК Приемники
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные КАК Источники
	|		ПО %Условия
	|ГДЕ
	|	Приемники.К <> Источники.К
	|	И Приемники.ТипЗаписи = &ТипПриемника
	|	И Источники.ТипЗаписи = &ТипИсточника
	|;
	|";
	
	ТекстЗапроса = "";
	ВременныеТаблицы = Новый Массив;
	НомерТаблицы = 0;
	
	Для Каждого Описание Из ПараметрыРасчета.РаспределениеПартий.ОписаниеЦепочек Цикл
		
		ПоляПриемника = Описание.Значение.ПоляСвязи;
		Если ПоляПриемника.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ОписаниеИсточника Из Описание.Значение.ТипыИсточников Цикл
			
			ПоляИсточника = ОписаниеИсточника.Значение;
			Если ПоляИсточника.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НомерПоля = -1;
			Для Каждого ПолеПриемника Из ПоляПриемника Цикл
				НомерПоля = НомерПоля + 1;
				Если НомерПоля = 0 Тогда
					Условия = "Приемники." + ПолеПриемника + " = " + "Источники." + ПоляИсточника[НомерПоля];
				Иначе
					Условия = Условия + Символы.ПС + " И " + "Приемники." + ПолеПриемника + " = " + "Источники." + ПоляИсточника[НомерПоля];
				КонецЕсли;
			КонецЦикла;
			
			НомерТаблицы = НомерТаблицы + 1;
			ИмяТаблицы   = "ВТЦепочки" + Формат(НомерТаблицы, "ЧГ=");
			ВременныеТаблицы.Добавить(ИмяТаблицы);
			
			ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "%Результат", ИмяТаблицы);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,  "%Условия",   Условия);
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
			Запрос.УстановитьПараметр("ТипПриемника", Описание.Ключ);
			Запрос.УстановитьПараметр("ТипИсточника", ОписаниеИсточника.Ключ);
			Запрос.Выполнить();
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	-1 КАК Приемник,
	|	-1 КАК Источник
	|ПОМЕСТИТЬ
	|	Цепочки
	|";
	
	ШаблонЗапроса = "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ДД.Приемник,
	|	ДД.Источник
	|ИЗ
	|	%ИмяТаблицы КАК ДД
	|";
	
	Для Каждого ИмяТаблицы Из ВременныеТаблицы Цикл
		ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ШаблонЗапроса, "%ИмяТаблицы", ИмяТаблицы);
	КонецЦикла;
	
	Для Каждого ИмяТаблицы Из ВременныеТаблицы Цикл
		ТекстЗапроса = ТекстЗапроса + "; УНИЧТОЖИТЬ " + ИмяТаблицы;
	КонецЦикла;
	
	// Выполним подготовленный запрос.
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	// Разобьем временную таблицу Цепочки на таблицы источников и приемников для каждого узла.
	// Поля доп. упорядочивания для ФИФО (Период и Регистратор) пока не заполняются - будут заполнены при оптимизации цепочек.
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Приемник КАК Ключ,
	|	ДД.Источник КАК Источник,
	|	0 			КАК Порядок
	|ПОМЕСТИТЬ Источники
	|ИЗ
	|	Цепочки КАК ДД
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Источник КАК Ключ,
	|	ДД.Приемник КАК Приемник,
	|	0 			КАК Порядок
	|ПОМЕСТИТЬ Приемники
	|ИЗ
	|	Цепочки КАК ДД
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Цепочки
	|";
	
	Запрос.Выполнить();
	
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
	ОптимизироватьНумерациюВЦепочках(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ОптимизироватьНумерациюВЦепочках(ПараметрыРасчета)
	
	РазмерТаблицыДанных = УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "Данные");
	
	Если РазмерТаблицыДанных = 0 Тогда
		Возврат;
	КонецЕсли;
	
	РазмерТаблицыСвязей = УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "Источники");
	
	Запрос = Новый Запрос;
	ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.УстановитьПараметр("РазмерТаблицыДанных", РазмерТаблицыДанных);
	Запрос.УстановитьПараметр("РазмерТаблицыСвязей", РазмерТаблицыСвязей);
	Запрос.УстановитьПараметр("КоличествоСтрокВТЗ",  ПараметрыРасчета.ОграниченияВыборки.КоличествоСтрокВТЗ);
	
	Если ПараметрыРасчета.Отладка.НеВыполнятьОптимизациюЦепочек Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	0 							КАК НомерЗаданияРасчета,
		|	0 							КАК НомерПодграфа,
		|	0 							КАК КоличествоВолн,
		|	&РазмерТаблицыСвязей 		КАК КоличествоСвязей,
		|	&РазмерТаблицыДанных 		КАК КоличествоУзлов,
		|	&РазмерТаблицыДанных
		|	  + &РазмерТаблицыСвязей	КАК ВесПодграфа,
		|	0 							КАК МинимальныйНомерУзла,
		|	&РазмерТаблицыДанных - 1 	КАК МаксимальныйНомерУзла,
		|	0 							КАК МаксимумПриемниковУзла,
		|	0 							КАК МаксимумИсточниковУзла
		|ПОМЕСТИТЬ ОписаниеПодграфов";
		
		Запрос.Выполнить(); // создание ОписаниеПодграфов
		
		ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(
			ПараметрыРасчета,
			НСтр("ru='Оптимизация нумерации узлов графа перед расчетом партий по цепочкам пропущена для целей отладки.'"));
		
		Возврат;
		
	КонецЕсли;
	
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(ПараметрыРасчета, "ВТНовыеНомераУзлов");
	
	#Область Инициализация
	
	КолонкиТаблицыДанных = ПараметрыРасчета.РаспределениеПартий.РасчетныеПартии.Колонки;
	
	ЕстьПериодПоступленияВДанных = (КолонкиТаблицыДанных.Найти("ПериодПоступления") <> Неопределено);
	ЕстьПериодВДанных 	   		 = (КолонкиТаблицыДанных.Найти("Период") <> Неопределено);
	ЕстьРегистраторВДанных	 	 = (КолонкиТаблицыДанных.Найти("Регистратор") <> Неопределено);
	
	ИменаКолонокТаблицыДанные = "";
	Для Каждого ТекущаяКолонка Из КолонкиТаблицыДанных Цикл
		
		ИмяКолонки = ?(ТекущаяКолонка.Имя = "К", "НовыеНомера.НовыйНомерУзла КАК К", "Т." + ТекущаяКолонка.Имя);
		
		ИменаКолонокТаблицыДанные = ИменаКолонокТаблицыДанные + ?(ИменаКолонокТаблицыДанные = "", "", ",
			|	") + ИмяКолонки;
		
	КонецЦикла;
	
	#КонецОбласти
	
	#Область Упорядочивание
	
	// Подготовим данные для упорядочивания записей.
	// Упорядочивание выполняется по полям ПериодПоступления, Период, Регистратор
	// Упорядочивание используется для сортировки узлов одной волны подграфа и для сортировки источников и приемников узла.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.К КАК НомерУзла,
	|	%1 КАК ПериодПоступления,
	|	%2 КАК Период,
	|	%3 КАК Регистратор
	|ПОМЕСТИТЬ ВТДанныеДляУпорядочивания
	|ИЗ
	|	Данные КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодПоступления,
	|	Период,
	|	Регистратор";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Запрос.Текст,
		?(ЕстьПериодПоступленияВДанных, "ЕСТЬNULL(Т.ПериодПоступления, ДАТАВРЕМЯ(1,1,1))", "ДАТАВРЕМЯ(1,1,1)"),
		?(ЕстьПериодВДанных, "ЕСТЬNULL(Т.Период, ДАТАВРЕМЯ(1,1,1))", "ДАТАВРЕМЯ(1,1,1)"),
		?(ЕстьРегистраторВДанных, "ЕСТЬNULL(Т.Регистратор, НЕОПРЕДЕЛЕНО)", "ДАТАВРЕМЯ(1,1,1)"));
	
	Запрос.Выполнить(); // создание ВТДанныеДляУпорядочивания
	
	ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТДанныеДляУпорядочивания"));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	%1 КАК ЗначениеРазделителя,
	|	Т.ПериодПоступления КАК ПериодПоступления,
	|	Т.Период КАК Период,
	|	Т.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТПоляУпорядочивания
	|ИЗ
	|	ВТДанныеДляУпорядочивания КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодПоступления,
	|	Период,
	|	Регистратор";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Запрос.Текст,
		?(ЕстьПериодПоступленияВДанных,
			"НАЧАЛОПЕРИОДА(Т.ПериодПоступления, ДЕНЬ)",
			?(ЕстьПериодВДанных,
				"НАЧАЛОПЕРИОДА(Т.Период, ДЕНЬ)",
				"1")));
	
	Запрос.Выполнить(); // создание ВТПоляУпорядочивания
	
	ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТПоляУпорядочивания"));
	
	ПараметрыНумерации = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		"ЗначениеРазделителя", // разделитель
		"", // ресурсы
		"ПериодПоступления, Период, Регистратор", // порядок
		"Порядок", // номер
		"ПериодПоступления, Период, Регистратор", // индекс
		"", // накопление
		Ложь); // не подбирать разделитель
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"ВТПоляУпорядочивания");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НомерУзла 			   КАК НомерУзла,
	|	ПоляУпорядочивания.Порядок КАК Порядок
	|ПОМЕСТИТЬ ВТПорядокУзлов
	|ИЗ
	|	ВТДанныеДляУпорядочивания КАК Т
	|   ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоляУпорядочивания КАК ПоляУпорядочивания
	|		ПО Т.ПериодПоступления = ПоляУпорядочивания.ПериодПоступления
	|		 И Т.Период = ПоляУпорядочивания.Период
	|		 И Т.Регистратор = ПоляУпорядочивания.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла";
	
	Запрос.Выполнить(); // создание ВТПорядокУзлов
	
	ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТПорядокУзлов"));
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТДанныеДляУпорядочивания, ВТПоляУпорядочивания");
		
	#КонецОбласти
	
	#Область РазбиениеГрафаНаПодграфы
	
	// Выполним разбиение исходного графа данных на несвязанные между собой подграфы.
	// Каждый найденный подграф будет пронумерован от 0 до (количество подграфов - 1) в порядку убывания количества дуг в подграфе.
	// Т.е. подграф с номером 0 будет самым большим, а последние подграфы будут тривиальными (содержат по одному узлу).
	//
	// Разбиение выполняем следующим образов:
	// - для начала каждой вершине присваиваем номер подграфа, равный номеру самой вершины
	// - для каждой вершины i определяем номера подграфов всех ее источников и приемников
	// - если минимальный номер подграфов связанных вершин меньше, чем номер подграфа самой вершины i,
	//	 то присваиваем вершине i этот минимальный номер подграфа
	// - повторяем в цикле действия 2 и 3 до тех пор, пока на очередной итерации ни у одной вершины не изменится номер ее подграфа.
	// Т.е. минимальный номер вершины в каждом подграфе как бы начинает "расползаться" по этому подграфу - от этой вершины
	// сначала "переходит" на смежные вершины, потом на их смежные вершины и т.д, пока не "займет" весь подграф.
	// В результате каждый подграф будет иметь свой уникальный номер, равный номеру минимальной вершины, входящий в него.
	// Затем сделаем сквозную нумерацию этих подграфов (как написано выше).
	// Например, есть исходный граф ((4-2-1-7) (6) (5-3)):
	// - найдем в нем три подграфа с условными номерами 1, 6 и 3
	// - затем присвоим им номера 0, 2 и 1 соответственно
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.К КАК НомерУзла,
	|	Т.К КАК НомерПодграфа
	|ПОМЕСТИТЬ ВТУзлыПодграфов
	|ИЗ
	|	Данные КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Ключ КАК НомерУзла,
	|	Т.Источник КАК СвязанныйУзел,
	|	ИСТИНА КАК ЭтоИсточник
	|ПОМЕСТИТЬ ВТСвязиУзлов
	|ИЗ
	|	Источники КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Ключ,
	|	Т.Приемник,
	|	ЛОЖЬ
	|ИЗ
	|	Приемники КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СвязанныйУзел,
	|	ЭтоИсточник";
	
	Запрос.Выполнить(); // создание ВТУзлыПодграфов и ВТСвязиУзлов
	
	ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		РазмерТаблицыДанных + 2*РазмерТаблицыСвязей);
	
	ЕстьИзменения = Истина;
	КоличествоИтерацийПоискаПодграфов = 0;
	
	Пока ЕстьИзменения Цикл
		
		ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыРасчета,
			2*РазмерТаблицыДанных);
		
		КоличествоИтерацийПоискаПодграфов = КоличествоИтерацийПоискаПодграфов + 1;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СвязиУзлов.НомерУзла КАК НомерУзла,
		|	МИНИМУМ(Т.НомерПодграфа) КАК НомерПодграфа
		|ПОМЕСТИТЬ ВТПодграфыСвязанныхУзлов
		|ИЗ
		|	ВТУзлыПодграфов КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСвязиУзлов КАК СвязиУзлов
		|		ПО Т.НомерУзла = СвязиУзлов.СвязанныйУзел
		|
		|СГРУППИРОВАТЬ ПО
		|	СвязиУзлов.НомерУзла
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.НомерУзла КАК НомерУзла,
		|	ПодграфыСвязанныхУзлов.НомерПодграфа КАК НомерПодграфа
		|ПОМЕСТИТЬ ВТИзмененныеПодграфы
		|ИЗ
		|	ВТУзлыПодграфов КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодграфыСвязанныхУзлов КАК ПодграфыСвязанныхУзлов
		|		ПО Т.НомерУзла = ПодграфыСвязанныхУзлов.НомерУзла
		|ГДЕ
		|	ПодграфыСвязанныхУзлов.НомерПодграфа < Т.НомерПодграфа
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПодграфыСвязанныхУзлов";
		
		Запрос.Выполнить(); // создание ВТИзмененныеПодграфы
		
		ЕстьИзменения = (УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТИзмененныеПодграфы") > 0);
		
		Если ЕстьИзменения Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Т.НомерУзла,
			|	ВЫБОР КОГДА ИзмененныеПодграфы.НомерУзла ЕСТЬ NULL 
			|		ТОГДА Т.НомерПодграфа
			|		ИНАЧЕ ИзмененныеПодграфы.НомерПодграфа
			|	КОНЕЦ КАК НомерПодграфа
			|ПОМЕСТИТЬ ВТНовыеУзлыПодграфов
			|ИЗ
			|	ВТУзлыПодграфов КАК Т
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИзмененныеПодграфы КАК ИзмененныеПодграфы
			|		ПО Т.НомерУзла = ИзмененныеПодграфы.НомерУзла
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТУзлыПодграфов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Т.НомерУзла,
			|	Т.НомерПодграфа
			|ПОМЕСТИТЬ ВТУзлыПодграфов
			|ИЗ
			|	ВТНовыеУзлыПодграфов КАК Т
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	НомерУзла
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНовыеУзлыПодграфов";
			
			Запрос.Выполнить(); // обновление ВТУзлыПодграфов
			
		КонецЕсли;
		
		УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВТИзмененныеПодграфы");
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НомерПодграфа КАК НомерПодграфа,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Т.НомерУзла) КАК КоличествоУзлов,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР КОГДА СвязиУзлов.СвязанныйУзел ЕСТЬ NULL ТОГДА 0 ИНАЧЕ 1 КОНЕЦ КАК ЧИСЛО(15,0))) КАК КоличествоСвязей,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР КОГДА СвязиУзлов.СвязанныйУзел ЕСТЬ NULL ТОГДА 0 ИНАЧЕ 1 КОНЕЦ КАК ЧИСЛО(15,0))) КАК ЗначениеРазделителя
	|ПОМЕСТИТЬ ВТПодграфы
	|ИЗ
	|	ВТУзлыПодграфов КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСвязиУзлов КАК СвязиУзлов
	|		ПО Т.НомерУзла = СвязиУзлов.СвязанныйУзел
	|			И СвязиУзлов.ЭтоИсточник = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.НомерПодграфа";
	
	Запрос.Выполнить(); // создание ВТПодграфы
	
	ПараметрыНумерации = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		"", // разделитель
		"", // ресурсы
		"КоличествоСвязей УБЫВ, КоличествоУзлов УБЫВ, НомерПодграфа", // порядок
		"НовыйНомерПодграфа", // номер
		"НомерПодграфа", // индекс
		"ЗначениеРазделителя"); // накопление
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"ВТПодграфы");
	
	#КонецОбласти
	
	#Область ВолновойОбходГрафа
	
	// Для того, чтобы пронумеровать вершины графа от начальных (не имеющих входов) до конечных (не имеющих выходов),
	// необходимо для каждой вершины определить ее "удаленность" от начальной вершины.
	// Вершины с меньшей "удаленностью" от начальных должны иметь меньшие номера чем вершины с большей "удаленность".
	// Т.е. цепочки графа должен иметь вид 1->2->3->4, а не 2->4->1->3.
	// При соблюдении этого условию механизм расчета партий по цепочкам будет работать наиболее оптимальным образом.
	//
	// Для расчета удаленности вершин используем волновой метод:
	// - начальным вершинам присваиваем номер волны 1
	// - вершинам, в которые есть путь из начальных вершин - номер волны 2
	// - и т.д., пока не достигнем конечных вершин.
	// Если после этого останутся вершины, которым не присвоен номер волны,
	// значит эти вершины образуют цикл, в который нет пути из начальных вершин.
	// Обрабатываем такие циклы следующим образом:
	// - выбираем произвольную вершину, принадлежащую этому циклу
	// - присваиваем ей очередной номер волны N и от нее продолжаем обход оставшихся вершин
	// В результате всем вершинам исходного графа будет присвоен некий номер волны.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НомерУзла КАК НомерУзла,
	|	Т.КоличествоПриемников КАК КоличествоПриемников,
	|	Т.КоличествоИсточников КАК КоличествоИсточников,
	|	ВЫБОР
	|		КОГДА Т.КоличествоПриемников = 0 И Т.КоличествоИсточников = 0
	|			ТОГДА &РазмерТаблицыДанных
	|		КОГДА Т.КоличествоИсточников = 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НомерВолны
	|ПОМЕСТИТЬ ВТОписаниеУзлов
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.НомерУзла КАК НомерУзла,
	|		СУММА(Т.КоличествоПриемников) КАК КоличествоПриемников,
	|		СУММА(Т.КоличествоИсточников) КАК КоличествоИсточников
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Т.НомерУзла КАК НомерУзла,
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Приемники.Приемник) КАК КоличествоПриемников,
	|			0 КАК КоличествоИсточников
	|		ИЗ
	|			ВТУзлыПодграфов КАК Т
	|				ЛЕВОЕ СОЕДИНЕНИЕ Приемники КАК Приемники
	|				ПО Т.НомерУзла = Приемники.Ключ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Т.НомерУзла
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Т.НомерУзла,
	|			0,
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Источники.Источник)
	|		ИЗ
	|			ВТУзлыПодграфов КАК Т
	|				ЛЕВОЕ СОЕДИНЕНИЕ Источники КАК Источники
	|				ПО Т.НомерУзла = Источники.Ключ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Т.НомерУзла) КАК Т
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Т.НомерУзла) КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла";
	
	Запрос.Выполнить(); // создание ВТОписаниеУзлов
	
	ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		2*РазмерТаблицыДанных);
	
	ЕстьИзменения 	    = Истина;
	НомерВолны    	    = 1;
	НомерВолныДляЦиклов = 0;
	
	Пока ЕстьИзменения Цикл
		
		ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыРасчета,
			2*РазмерТаблицыДанных);
		
		НомерВолны = НомерВолны + 1;
		Запрос.УстановитьПараметр("НомерВолны", НомерВолны);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Приемники.Приемник КАК НомерУзла
		|ПОМЕСТИТЬ ВТИзменениеОписанияУзлов
		|ИЗ
		|	ВТОписаниеУзлов КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Приемники КАК Приемники
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОписаниеУзлов КАК ОписаниеУзловПриемников
		|			ПО Приемники.Приемник = ОписаниеУзловПриемников.НомерУзла
		|				И (ОписаниеУзловПриемников.НомерВолны = 0)
		|		ПО Т.НомерУзла = Приемники.Ключ
		|ГДЕ
		|	Т.НомерВолны = &НомерВолны - 1
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла";
		
		Запрос.Выполнить(); // создание ВТИзменениеОписанияУзлов
		
		ЕстьИзменения = (УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТИзменениеОписанияУзлов") > 0);
		
		Если НЕ ЕстьИзменения Тогда
			
			// Может получиться, что некоторые узла обойти не удалось - эти узлы могут располагаться в циклах, в которые нет пути из начальных вершин ( с номером волны = 1).
			// В этом случае из цикла берем вершину с минимальным номером и минимальным количеством исходящих дуг и продолжаем обход из нее.
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК КоличествоУзловВЦиклах
			|ИЗ
			|	ВТОписаниеУзлов КАК Т
			|ГДЕ
			|	Т.НомерВолны = 0
			|";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЕстьИзменения = (Выборка.КоличествоУзловВЦиклах > 0); // если Ложь, то обход графа полностью завершен
				
			Если ЕстьИзменения Тогда
				
				НомерВолныДляЦиклов = ?(ЗначениеЗаполнено(НомерВолныДляЦиклов), НомерВолныДляЦиклов, НомерВолны);
				
				Запрос.Текст =
				"ВЫБРАТЬ
				|	Т.НомерПодграфа КАК НомерПодграфа,
				|	Т.НомерУзла,
				|	ОписаниеУзлов.КоличествоПриемников КАК КоличествоПриемников
				|ПОМЕСТИТЬ ВТУзлыДляОбхода
				|ИЗ
				|	ВТУзлыПодграфов КАК Т
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОписаниеУзлов КАК ОписаниеУзлов
				|		ПО Т.НомерУзла = ОписаниеУзлов.НомерУзла
				|ГДЕ
				|	ОписаниеУзлов.НомерВолны = 0
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	НомерПодграфа,
				|	КоличествоПриемников
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Т.НомерПодграфа КАК НомерПодграфа,
				|	МИНИМУМ(Т.КоличествоПриемников) КАК КоличествоПриемников
				|ПОМЕСТИТЬ ВТПодграфыДляОбхода
				|ИЗ
				|	ВТУзлыДляОбхода КАК Т
				|
				|СГРУППИРОВАТЬ ПО
				|	Т.НомерПодграфа
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	НомерПодграфа,
				|	КоличествоПриемников
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТИзменениеОписанияУзлов
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТУзлыДляОбхода.НомерПодграфа,
				|	МИНИМУМ(ВТУзлыДляОбхода.НомерУзла) КАК НомерУзла
				|ПОМЕСТИТЬ ВТИзменениеОписанияУзлов
				|ИЗ
				|	ВТУзлыДляОбхода КАК ВТУзлыДляОбхода
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодграфыДляОбхода КАК ВТПодграфыДляОбхода
				|		ПО ВТУзлыДляОбхода.НомерПодграфа = ВТПодграфыДляОбхода.НомерПодграфа
				|			И ВТУзлыДляОбхода.КоличествоПриемников = ВТПодграфыДляОбхода.КоличествоПриемников
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТУзлыДляОбхода.НомерПодграфа
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	НомерУзла";
				
				Запрос.Выполнить(); // создание ВТИзменениеОписанияУзлов
				
				УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВТУзлыДляОбхода, ВТПодграфыДляОбхода");
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЕстьИзменения Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Т.НомерУзла,
			|	Т.КоличествоПриемников,
			|	Т.КоличествоИсточников,
			|	ВЫБОР КОГДА ИзменениеОписанияУзлов.НомерУзла ЕСТЬ NULL 
			|		ТОГДА Т.НомерВолны
			|		ИНАЧЕ &НомерВолны
			|	КОНЕЦ КАК НомерВолны
			|ПОМЕСТИТЬ ВТНовоеОписаниеУзлов
			|ИЗ
			|	ВТОписаниеУзлов КАК Т
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИзменениеОписанияУзлов КАК ИзменениеОписанияУзлов
			|		ПО Т.НомерУзла = ИзменениеОписанияУзлов.НомерУзла
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТОписаниеУзлов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Т.НомерУзла,
			|	Т.КоличествоПриемников,
			|	Т.КоличествоИсточников,
			|	Т.НомерВолны
			|ПОМЕСТИТЬ ВТОписаниеУзлов
			|ИЗ
			|	ВТНовоеОписаниеУзлов КАК Т
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	НомерУзла
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНовоеОписаниеУзлов";
			
			Запрос.Выполнить(); // обновление ВТОписаниеУзлов
			
		КонецЕсли;
		
		УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВТИзменениеОписанияУзлов");
			
	КонецЦикла;
	
	#КонецОбласти
	
	#Область РасчетНовыхНомеровУзлов
	
	// Рассчитаем новые номера вершин исходного графа:
	// - упорядочим все вершины
	// - обойдем получившийся результат и последовательно пронумеруем вершины от 0 до (количество вершин - 1)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Подграфы.ЗначениеРазделителя / &КоличествоСтрокВТЗ КАК ЧИСЛО(15,0)) КАК ЗначениеРазделителя,
	|	Подграфы.НомерПодграфа 			КАК НомерПодграфа,
	|	Подграфы.НовыйНомерПодграфа 	КАК НовыйНомерПодграфа,
	|	Т.НомерВолны 					КАК НомерВолны,
	|	Т.НомерУзла 					КАК НомерУзла,
	|	Т.НомерУзла 					КАК НовыйНомерУзла,
	|	ПорядокУзлов.Порядок 			КАК Порядок
	|ПОМЕСТИТЬ ВТНовыеНомераУзлов
	|ИЗ
	|	ВТОписаниеУзлов КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУзлыПодграфов КАК УзлыПодграфов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодграфы КАК Подграфы
	|			ПО УзлыПодграфов.НомерПодграфа = Подграфы.НомерПодграфа
	|		ПО Т.НомерУзла = УзлыПодграфов.НомерУзла
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПорядокУзлов КАК ПорядокУзлов
	|		ПО Т.НомерУзла = ПорядокУзлов.НомерУзла";
	
	Запрос.Выполнить(); // создание ВТНовыеНомераУзлов
	
	ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		РазмерТаблицыДанных);
	
	ПараметрыНумерации = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		"ЗначениеРазделителя", // разделитель
		"", // ресурсы
		"НовыйНомерПодграфа, НомерВолны, Порядок, НомерУзла", // порядок
		"НовыйНомерУзла", // номер
		"НомерУзла", // индекс
		"", // накопление
		Ложь); // не подбирать разделитель
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"ВТНовыеНомераУзлов");
		
	#КонецОбласти
	
	#Область ИзменениеНумерацииВТаблицах
	
	// Заменим старые номера вершин на новые в служебных временных таблицах Данные, Источники, Приемники.
	// В таблицах Источники и Приемники заполним поле Порядок.
	// Это поле относятся к колонкам "Источник" и "Приемник" и предназначено для их сортировки по ФИФО.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НомерУзла 			 КАК Ключ,
	|	Т.СвязанныйУзел 		 КАК Источник,
	|	ПорядокУзлов.Порядок 	 КАК Порядок
	|ПОМЕСТИТЬ Источники_Временная
	|ИЗ
	|	ВТСвязиУзлов КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПорядокУзлов КАК ПорядокУзлов
	|		ПО Т.СвязанныйУзел = ПорядокУзлов.НомерУзла
	|			И Т.ЭтоИсточник = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Источники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеНомераКлючей.НовыйНомерУзла 	 КАК Ключ,
	|	НовыеНомераИсточников.НовыйНомерУзла КАК Источник,
	|	Т.Порядок 				 			 КАК Порядок
	|ПОМЕСТИТЬ Источники
	|ИЗ
	|	Источники_Временная КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыеНомераУзлов КАК НовыеНомераКлючей
	|		ПО Т.Ключ = НовыеНомераКлючей.НомерУзла
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыеНомераУзлов КАК НовыеНомераИсточников
	|		ПО Т.Источник = НовыеНомераИсточников.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Источники_Временная";
	
	Запрос.Выполнить(); // обновление Источники
	
	ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		2*РазмерТаблицыСвязей);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НомерУзла 			 КАК Ключ,
	|	Т.СвязанныйУзел 		 КАК Приемник,
	|	ПорядокУзлов.Порядок 	 КАК Порядок
	|ПОМЕСТИТЬ Приемники_Временная
	|ИЗ
	|	ВТСвязиУзлов КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПорядокУзлов КАК ПорядокУзлов
	|		ПО Т.СвязанныйУзел = ПорядокУзлов.НомерУзла
	|			И (Т.ЭтоИсточник = ЛОЖЬ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Приемники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеНомераКлючей.НовыйНомерУзла 	 КАК Ключ,
	|	НовыеНомераПриемников.НовыйНомерУзла КАК Приемник,
	|	Т.Порядок 				 			 КАК Порядок
	|ПОМЕСТИТЬ Приемники
	|ИЗ
	|	Приемники_Временная КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыеНомераУзлов КАК НовыеНомераКлючей
	|		ПО Т.Ключ = НовыеНомераКлючей.НомерУзла
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыеНомераУзлов КАК НовыеНомераПриемников
	|		ПО Т.Приемник = НовыеНомераПриемников.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Приемники_Временная";
	
	Запрос.Выполнить(); // обновление Приемники
	
	ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		2*РазмерТаблицыСвязей);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьРазличия
	|ИЗ
	|	ВТНовыеНомераУзлов КАК Т
	|ГДЕ
	|	Т.НомерУзла <> Т.НовыйНомерУзла";
	
	ЕстьИзменения = НЕ Запрос.Выполнить().Пустой();
	
	Если ЕстьИзменения Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ Данные_Временная
		|ИЗ
		|	Данные КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Данные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	%1
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	Данные_Временная КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыеНомераУзлов КАК НовыеНомера
		|		ПО Т.К = НовыеНомера.НомерУзла
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	К
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Данные_Временная";
		
		Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Запрос.Текст, ИменаКолонокТаблицыДанные);
		
		Запрос.Выполнить(); // обновление Данные
		
		ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыРасчета,
			2*РазмерТаблицыДанных);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ФормированиеСтатистикиГрафа
	
	// Создадим новые служебные таблицы ОписаниеПодграфов и ОписаниеУзловПодграфов.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НовыйНомерУзла 					КАК НомерУзла,
	|	Т.НовыйНомерПодграфа 				КАК НомерПодграфа,
	|	Т.НомерВолны 						КАК НомерВолны,
	|	Т.Порядок							КАК Порядок,
	|	ОписаниеУзлов.КоличествоПриемников 	КАК КоличествоПриемников,
	|	ОписаниеУзлов.КоличествоИсточников 	КАК КоличествоИсточников
	|ПОМЕСТИТЬ ОписаниеУзловПодграфов
	|ИЗ
	|	ВТНовыеНомераУзлов КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОписаниеУзлов КАК ОписаниеУзлов
	|		ПО Т.НомерУзла = ОписаниеУзлов.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	0 										КАК НомерЗаданияРасчета,
	|	Т.НомерПодграфа 						КАК НомерПодграфа,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Т.НомерВолны) 		КАК КоличествоВолн,
	|	СУММА(Т.КоличествоИсточников) 			КАК КоличествоСвязей,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Т.НомерУзла) 		КАК КоличествоУзлов,
	|	СУММА(Т.КоличествоИсточников)
	|	  + КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Т.НомерУзла)	КАК ВесПодграфа,
	|	МИНИМУМ(Т.НомерУзла) 					КАК МинимальныйНомерУзла,
	|	МАКСИМУМ(Т.НомерУзла) 					КАК МаксимальныйНомерУзла,
	|	МАКСИМУМ(Т.КоличествоПриемников) 		КАК МаксимумПриемниковУзла,
	|	МАКСИМУМ(Т.КоличествоИсточников) 		КАК МаксимумИсточниковУзла
	|ПОМЕСТИТЬ ОписаниеПодграфов
	|ИЗ
	|	ОписаниеУзловПодграфов КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.НомерПодграфа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерПодграфа";
	
	Запрос.Выполнить(); // создание ОписаниеУзловПодграфов и ОписаниеПодграфов
	
	ПротоколРасчетаПартийИСебестоимости.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		2*РазмерТаблицыДанных);
	
	// Выведем в протокол подробное описание графа.
	
	ОписаниеГрафа = НСтр("ru='Описание цепочек (графа) для расчета:
	|	узлов - %01; дуг - %02; макс. исходящих дуг - %03; макс. входящих дуг - %04;
	|	содержит несвязанных подграфов - %05, в т.ч. тривиальных (из одного узла) - %06;
	|	макс. узлов в одном подграфе - %07; макс. дуг в одном подграфе - %08;
	|	выполнено итераций поиска подграфов - %09, итераций нумерации - %10, в т.ч. из-за циклов - %11'");
	
	Запрос.УстановитьПараметр("КоличествоИтерацийПоискаПодграфов", 	   КоличествоИтерацийПоискаПодграфов);
	Запрос.УстановитьПараметр("КоличествоИтерацийНумерации", 	   	   НомерВолны - 1);
	Запрос.УстановитьПараметр("КоличествоИтерацийНумерацииИзЗаЦиклов", ?(ЗначениеЗаполнено(НомерВолныДляЦиклов), НомерВолны - НомерВолныДляЦиклов, 0));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 						 КАК НомерПараметра,
	|	СУММА(Т.КоличествоУзлов) КАК ЗначениеПараметра
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	СУММА(Т.КоличествоСвязей)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	МАКСИМУМ(Т.МаксимумПриемниковУзла)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	МАКСИМУМ(Т.МаксимумИсточниковУзла)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	КОЛИЧЕСТВО(*)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	КОЛИЧЕСТВО(*)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|ГДЕ
	|	Т.КоличествоУзлов = 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	7,
	|	МАКСИМУМ(Т.КоличествоУзлов)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	8,
	|	МАКСИМУМ(Т.КоличествоСвязей)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	9,
	|	&КоличествоИтерацийПоискаПодграфов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	10,
	|	&КоличествоИтерацийНумерации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	11,
	|	&КоличествоИтерацийНумерацииИзЗаЦиклов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПараметра";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОписаниеГрафа = СтрЗаменить(
			ОписаниеГрафа,
			"%" + Формат(Выборка.НомерПараметра, "ЧЦ=2; ЧВН="),
			ПротоколРасчетаПартийИСебестоимости.ПредставлениеЗначения(Выборка.ЗначениеПараметра));
	КонецЦикла;
	
	ПараметрыРасчета.РаспределениеПартий.Вставить("ОписаниеГрафа", ОписаниеГрафа);
	
	ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(ПараметрыРасчета, ОписаниеГрафа);
	
	#КонецОбласти
	
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТПорядокУзлов, ВТУзлыПодграфов, ВТСвязиУзлов, ВТПодграфы, ВТОписаниеУзлов, ВТНовыеНомераУзлов, ОписаниеУзловПодграфов");
	
КонецПроцедуры

#КонецОбласти

#Область АлгоритмРасчетаПартий

// Основная процедура расчета - РассчитатьПартииПоЦепочкам.
// В ней выполняется разделение партий на порции:
//	- одна для основного потока расчета,
//	- остальные для фоновых расчетов (если они используются).
// Порции для фонового расчета передаются в процедуру ЗапуститьРасчетПартийВФоне, которая стартует фоновые задания с методом РассчитатьПартииВФоне.
// Порция для основного потока расчета передается в процедуру РассчитатьПартииНеВФоне.
// Далее процедуры РассчитатьПартииВФоне и РассчитатьПартииНеВФоне подготавливают данные к расчету
// и вызывают процедуру РассчитатьПартииПоГруппамПодграфов, которая выполняет расчет по несвязанным между собой подграфам,
// из которой для обхода подграфов и расчета их узлов вызывается процедура РассчитатьПартиюРекурсивно.
// По окончании расчета в РассчитатьПартииПоЦепочкам собираются вместе результаты расчета основного потока и фоновых расчетов.

#Область ЗапускРасчета

Процедура РассчитатьПартииПоЦепочкам(ПараметрыРасчета)
	
	ПараметрыРасчета.РаспределениеПартий.Вставить("КоличествоСтрокДанных",
		УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "Данные"));
		
	Если ПараметрыРасчета.РаспределениеПартий.КоличествоСтрокДанных = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьЗамерРаспределенияПартий(ПараметрыРасчета);
	
	КоличествоФЗ = ПараметрыРасчета.ОграниченияФЗ.МаксимальноеКоличествоФЗРасчетаПартий;
	
	ИмяТаблицыОписаниеПодграфов = "ОписаниеПодграфов";
	МногопоточныйРасчет = Ложь;
	
	Если НЕ ПараметрыРасчета.ИнформационнаяБазаФайловая
	 И НЕ ЭтоФоновыйРасчетПартий(ПараметрыРасчета) И КоличествоФЗ > 0
	 И ПараметрыРасчета.РаспределениеПартий.КоличествоСтрокДанных > ПараметрыРасчета.ОграниченияВыборки.ПорцияРасчетаПартий Тогда
		
		ПараметрыРасчета.ТаблицаЗаданийРасчета.Очистить();
		ПараметрыРасчета.ОбщееКоличествоФЗРасчета = 0;
		МногопоточныйРасчет = Истина;
		
		// Разобьем данные для расчета на (КоличествоФЗ + 1) порции.
		ОбъемДанных = УниверсальныеМеханизмыПартийИСебестоимости.АгрегатнаяФункцияПоляВременнойТаблицы(
			ПараметрыРасчета,
			"ОписаниеПодграфов",
			"ВесПодграфа");
		РазмерПорции = Цел(ОбъемДанных/(КоличествоФЗ + 1)) + 1;
		
		ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(
			ПараметрыРасчета,
			"ОписаниеПодграфов",
			НСтр("ru='(разделение на порции для фоновых заданий)'"));
		
		ПараметрыРазделения = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыРазделенияВременнойТаблицыНаПорции(
			РазмерПорции,
			"ВесПодграфа",
			"МинимальныйНомерУзла",
			"НомерЗаданияРасчета");
		
		УниверсальныеМеханизмыПартийИСебестоимости.РазделитьВременнуюТаблицуНаПорции(
			ПараметрыРасчета,
			ПараметрыРазделения,
			"ОписаниеПодграфов");
			
		ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
		
		// Порции начиная со второй передадим для расчета в фоновые задания.
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МИНИМУМ(Т.НомерЗаданияРасчета) КАК МинимальныйНомер,
		|	МАКСИМУМ(Т.НомерЗаданияРасчета) КАК МаксимальныйНомер
		|ИЗ
		|	ОписаниеПодграфов КАК Т";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ПараметрыФоновогоРасчета = СформироватьПараметрыФоновогоРасчета(ПараметрыРасчета);
		
		Для НомерПорции = Выборка.МинимальныйНомер + 1 По Мин(КоличествоФЗ + 1, Выборка.МаксимальныйНомер) Цикл
			
			ПараметрыРасчета.ОбщееКоличествоФЗРасчета = ПараметрыРасчета.ОбщееКоличествоФЗРасчета + 1;
			
			ЗапуститьРасчетПартийВФоне(
				ПараметрыРасчета,
				ПараметрыФоновогоРасчета,
				НомерПорции,
				?(НомерПорции = КоличествоФЗ + 1, Выборка.МаксимальныйНомер, НомерПорции));
			
		КонецЦикла;
		
		// Остальные данные рассчитаем без фоновых заданий.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ ОписаниеПодграфовДляРасчетаНеВФоне
		|ИЗ
		|	ОписаниеПодграфов КАК Т
		|ГДЕ
		|	Т.НомерЗаданияРасчета = &МинимальныйНомерПорции
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|УНИЧТОЖИТЬ ОписаниеПодграфов";
		
		Запрос.УстановитьПараметр("МинимальныйНомерПорции", Выборка.МинимальныйНомер);
		
		Запрос.Выполнить();
		
		ИмяТаблицыОписаниеПодграфов = "ОписаниеПодграфовДляРасчетаНеВФоне";
		
	КонецЕсли;
	
	РассчитатьПартииНеВФоне(ПараметрыРасчета, ИмяТаблицыОписаниеПодграфов);
	
	Если МногопоточныйРасчет Тогда
		
		ПолучитьРезультатыФоновыхРасчетовПартий(ПараметрыРасчета);
		
		УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ОписаниеПодграфовДляРасчетаНеВФоне");
		
	КонецЕсли;
	
	ЗавершитьЗамерРаспределенияПартий(ПараметрыРасчета);
	
КонецПроцедуры

Процедура РассчитатьПартииНеВФоне(ПараметрыРасчета, ИмяТаблицыОписаниеПодграфов)
	
	// Разделим подграфы на группы - в одну группу целиком входит один или несколько подграфов.
	ПараметрыРазделения = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыРазделенияВременнойТаблицыНаПорции(
		ПараметрыРасчета.ОграниченияВыборки.ПорцияРасчетаПартий,
		"КоличествоУзлов",
		"МинимальныйНомерУзла");
	
	УниверсальныеМеханизмыПартийИСебестоимости.РазделитьВременнуюТаблицуНаПорции(
		ПараметрыРасчета,
		ПараметрыРазделения,
		ИмяТаблицыОписаниеПодграфов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НомерПорции,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Т.НомерПодграфа) КАК КоличествоПодграфов,
	|	СУММА(Т.КоличествоУзлов) КАК КоличествоУзлов,
	|	СУММА(Т.КоличествоСвязей) КАК КоличествоСвязей,
	|	МИНИМУМ(Т.МинимальныйНомерУзла) КАК МинимальныйНомерУзла,
	|	МАКСИМУМ(Т.МаксимальныйНомерУзла) КАК МаксимальныйНомерУзла
	|ИЗ
	|	ИмяТаблицыОписаниеПодграфов КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.НомерПорции
	|
	|УПОРЯДОЧИТЬ ПО
	|	Т.НомерПорции";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяТаблицыОписаниеПодграфов", ИмяТаблицыОписаниеПодграфов);
	
	ВыборкаГруппаПодграфов = Запрос.Выполнить().Выбрать();
	
	// Рассчитаем партии.
	РассчитатьПартииПоГруппамПодграфов(ПараметрыРасчета, ВыборкаГруппаПодграфов);
	
КонецПроцедуры

Процедура РассчитатьПартииПоГруппамПодграфов(ПараметрыРасчета, ВыборкаГруппаПодграфов)
	
	НомерПорции = 0;
	
	ОписаниеДвижений = ПараметрыРасчета.РаспределениеПартий.ОписаниеДвижений;
	ЕстьСторно = ОписаниеДвижений.Свойство("ЕстьСторно");
	
	Пока СледующийЭлементКоллекции(ВыборкаГруппаПодграфов) Цикл
		
		НачалоЗамераРасчетаГруппыПодграфов(ПараметрыРасчета, ВыборкаГруппаПодграфов);
		
		Данные = Новый Структура;
		Данные.Вставить("ЦепочкиДвижений", Новый Соответствие);
		Данные.Вставить("СтрокиЦепочек",   Новый ТаблицаЗначений);
		Данные.Вставить("Приходы", 		   Новый Соответствие); // буфер копий партий для покрытия расходов
		Данные.Вставить("Расходы", 		   Новый Соответствие); // буфер не рассчитанных партий для расчета на следующих итерациях
		Данные.Вставить("СтрокиПриходов",  ПараметрыРасчета.РаспределениеПартий.РасчетныеПартии.СкопироватьКолонки());
		Данные.Вставить("СтрокиРасходов",  Данные.СтрокиПриходов.СкопироватьКолонки());
		Данные.Вставить("ИндексыРасходов", Новый Массив);
		Данные.Вставить("ПройденныйПуть",  Новый Соответствие); // используется для прерывания циклов
		Данные.Вставить("ИндексСтроки",    Неопределено);
		
		Колонки = Данные.СтрокиЦепочек.Колонки;
		Колонки.Добавить("Источники", 	   Новый ОписаниеТипов("Массив"));
		Колонки.Добавить("Приемники", 	   Новый ОписаниеТипов("Массив"));
		Колонки.Добавить("ПройденныйПуть", Новый ОписаниеТипов("Соответствие"));
		
		Данные.Вставить("ПараметрыОбхода", Новый Структура); // описание текущей позиции в обходе данных для расчета
		Данные.ПараметрыОбхода.Вставить("ИндексСтроки",     ВыборкаГруппаПодграфов.МинимальныйНомерУзла - 1);
		Данные.ПараметрыОбхода.Вставить("НачальнаяЦепочка", 0);
		Данные.ПараметрыОбхода.Вставить("КонечнаяЦепочка",  ВыборкаГруппаПодграфов.МинимальныйНомерУзла - 1);
		Данные.ПараметрыОбхода.Вставить("НомерПорции",      НомерПорции); // нужно для фонового расчета
		
		Пока Данные.ПараметрыОбхода.ИндексСтроки < ВыборкаГруппаПодграфов.МаксимальныйНомерУзла Цикл
			
			Данные.ПараметрыОбхода.ИндексСтроки = Данные.ПараметрыОбхода.ИндексСтроки + 1;
			
			Если Данные.ПараметрыОбхода.ИндексСтроки > Данные.ПараметрыОбхода.КонечнаяЦепочка Тогда
				// Прочитаем следующую порцию данных.
				ВыборкаДанных = СледующаяПорцияПартийДляРасчета(ПараметрыРасчета, ВыборкаГруппаПодграфов, Данные);
			КонецЕсли;
			
			Если НЕ СледующийЭлементКоллекции(ВыборкаДанных) ИЛИ ВыборкаДанных.К <> Данные.ПараметрыОбхода.ИндексСтроки Тогда
				
				ТекстДляПротокола = НСтр("ru='Ошибка нумерации данных для расчета партий'");
				
				Если НЕ ЭтоФоновыйРасчетПартий(ПараметрыРасчета) Тогда
					
					ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
						ПараметрыРасчета,
						Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаРаспределенияПартий,
						ТекстДляПротокола);
					
					УниверсальныеМеханизмыПартийИСебестоимости.ЗарегистрироватьПроблемуВыполненияРасчета(
						ПараметрыРасчета,
						ВыборкаДанных.Организация,
						НСтр("ru='При формировании движений по партиям диагностированы ошибки'"),
						ТекстДляПротокола);
						
					ТекстДляПротокола = УниверсальныеМеханизмыПартийИСебестоимости.ТекстИсключениеДляРегистрацииПроблемы(ТекстДляПротокола);
					
				КонецЕсли;
				
				ВызватьИсключение ТекстДляПротокола;
				
			КонецЕсли;
			
			ЦепочкаДвижений = Данные.ЦепочкиДвижений[Данные.ПараметрыОбхода.ИндексСтроки];
			
			Если ЦепочкаДвижений = Неопределено Тогда
				
				ДобавитьРасчетнуюПартию(ПараметрыРасчета, ВыборкаДанных);
				
			ИначеЕсли ВыборкаДанных.РасчетЗавершен Тогда
				
				РасчетнаяПартия = ДобавитьРасчетнуюПартию(ПараметрыРасчета, ВыборкаДанных);
				
				Если ЦепочкаДвижений.Приемники.Количество() > 0 Тогда
					
					Приход = Данные.СтрокиПриходов.Добавить();
					ЗаполнитьЗначенияСвойств(Приход, РасчетнаяПартия);
					
					ИнвертироватьПоказатели(Приход, ОписаниеДвижений.Показатели,
						Приход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Сторно
						ИЛИ Приход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад
						ИЛИ ЕстьСторно И Приход.Сторно);
						
					Данные.Приходы.Вставить(Данные.ПараметрыОбхода.ИндексСтроки, Новый Массив);
					Данные.Приходы[Данные.ПараметрыОбхода.ИндексСтроки].Добавить(Приход);
					
				КонецЕсли;
				
				Данные.ЦепочкиДвижений.Удалить(Данные.ПараметрыОбхода.ИндексСтроки);
				Данные.СтрокиЦепочек.Удалить(ЦепочкаДвижений);
				РасчетнаяПартия = Неопределено;
				
			Иначе
				
				Расход = Данные.СтрокиРасходов.Добавить();
				ЗаполнитьЗначенияСвойств(Расход, ВыборкаДанных);
				
				Данные.Расходы.Вставить(Данные.ПараметрыОбхода.ИндексСтроки, Расход);
				Данные.ИндексыРасходов.Добавить(Данные.ПараметрыОбхода.ИндексСтроки);
				
			КонецЕсли;
			
			Если Данные.ПараметрыОбхода.ИндексСтроки = ВыборкаГруппаПодграфов.МаксимальныйНомерУзла // последняя итерация цикла
			 ИЛИ (Данные.ПараметрыОбхода.ИндексСтроки - ВыборкаГруппаПодграфов.МинимальныйНомерУзла > 0 // не первая итерация цикла
			 	И (Данные.ПараметрыОбхода.ИндексСтроки - ВыборкаГруппаПодграфов.МинимальныйНомерУзла) % ПараметрыРасчета.ОграниченияВыборки.ПорцияРасчетаПартий = 0) Тогда
				
				Данные.ИндексСтроки = Данные.ПараметрыОбхода.ИндексСтроки;
				
				Если Данные.Приходы.Количество() > 0  // есть записи по которым расчет завершен
				 ИЛИ Данные.ПараметрыОбхода.ИндексСтроки = ВыборкаГруппаПодграфов.МаксимальныйНомерУзла Тогда
					
					Для Каждого ИндексРасхода Из Данные.ИндексыРасходов Цикл
						
						Если Данные.Расходы[ИндексРасхода] = Неопределено Тогда
							Продолжить; // строка к обсчету НЕ зарегистрирована
						КонецЕсли;
						
						БазисРасхода = Данные.Расходы[ИндексРасхода][ОписаниеДвижений.БазисРасхода];
						Данные.ПройденныйПуть.Очистить();
						РассчитатьПартиюРекурсивно(ПараметрыРасчета, Данные, ИндексРасхода);
						
						Если Данные.Расходы[ИндексРасхода] <> Неопределено
						 И Данные.Расходы[ИндексРасхода][ОписаниеДвижений.БазисРасхода] > 0
						 И Данные.Расходы[ИндексРасхода][ОписаниеДвижений.БазисРасхода] <> БазисРасхода Тогда
							Данные.ИндексыРасходов.Добавить(ИндексРасхода);
						КонецЕсли;
						
					КонецЦикла;
					
					Данные.ИндексыРасходов.Очистить();
					
				КонецЕсли;
				
				Если Данные.ПараметрыОбхода.ИндексСтроки < ВыборкаГруппаПодграфов.МаксимальныйНомерУзла Тогда
					
					Для Каждого Строка Из Данные.Расходы Цикл
						Данные.ИндексыРасходов.Добавить(Строка.Ключ);
					КонецЦикла;
					
					Список = Новый СписокЗначений;
					Список.ЗагрузитьЗначения(Данные.ИндексыРасходов);
					Список.СортироватьПоЗначению();
					Данные.ИндексыРасходов = Список.ВыгрузитьЗначения();
					
				Иначе
					
					Для Каждого Строка Из Данные.Расходы Цикл
						ДобавитьРасчетнуюПартию(ПараметрыРасчета, Строка.Значение);
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		НомерПорции = Данные.ПараметрыОбхода.НомерПорции;
		
		Данные.Приходы.Очистить();
		Данные.Расходы.Очистить();
		Данные.ЦепочкиДвижений.Очистить();
		Данные.СтрокиПриходов.Очистить();
		Данные.СтрокиРасходов.Очистить();
		Данные.СтрокиЦепочек.Очистить();
		Данные = Неопределено;
		
	КонецЦикла;
	
КонецПроцедуры

Функция РассчитатьПартиюРекурсивно(ПараметрыРасчета, Данные, ИндексРасхода)
	
	Если НЕ НачалоЗамераРасчетаЦепочек(ПараметрыРасчета, Данные, ИндексРасхода) Тогда
		Возврат ОкончаниеЗамераРасчетаЦепочек(ПараметрыРасчета, "ПереполнениеСтека");
	КонецЕсли;
	
	ОписаниеДвижений = ПараметрыРасчета.РаспределениеПартий.ОписаниеДвижений;
	
	ЦепочкаРасхода = Данные.ЦепочкиДвижений[ИндексРасхода];
	Если ЦепочкаРасхода = Неопределено Тогда
		Возврат ОкончаниеЗамераРасчетаЦепочек(ПараметрыРасчета, "НеТребуется");
	КонецЕсли;
	
	Источники = ЦепочкаРасхода.Источники;
	ЕстьЗацикливание = Ложь;
	Если ИндексРасхода = Данные.ПройденныйПуть[ИндексРасхода] Или (Источники.Количество() = 0) Тогда
		ЕстьЗацикливание = Истина;
	КонецЕсли;
	
	ИндексСтроки = Данные.ИндексСтроки;
	Для Каждого ИндексПрихода Из Источники Цикл
		Если ИндексПрихода > ИндексСтроки Тогда
			Возврат ОкончаниеЗамераРасчетаЦепочек(ПараметрыРасчета, "НетДанных"); // еще нет всех строк для распределения
		КонецЕсли;
	КонецЦикла;
	
	Данные.ПройденныйПуть.Вставить(ИндексРасхода, ИндексРасхода);
	
	НовыеПриходы = Неопределено;
	
	Расход = Данные.Расходы[ИндексРасхода];
	ЕстьСторно = ОписаниеДвижений.Свойство("ЕстьСторно");
	ЭтоСторно = (Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Сторно
				ИЛИ Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад
				ИЛИ ЕстьСторно И Расход.Сторно);
	
	ТребуетсяСортировка = Ложь;
	Если ЗначениеЗаполнено(ОписаниеДвижений.ПоляСортировки) Тогда
		
		ЗначенияПолей = Новый Структура(ОписаниеДвижений.ПоляСортировки);
		ЗаполнитьЗначенияСвойств(ЗначенияПолей, Расход);
		
		Для Каждого ПолеСортировки Из ЗначенияПолей Цикл
			Если ЗначениеЗаполнено(ПолеСортировки.Значение) Тогда
				ТребуетсяСортировка = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	БазисПрихода = 0;
	Если ОписаниеДвижений.Свойство("ПоляГруппировки") ИЛИ ЭтоСторно Тогда
		
		Для Каждого ИндексИсточника Из Источники Цикл
			Если Данные.Приходы[ИндексИсточника] = Неопределено
				И Данные.Расходы[ИндексИсточника] <> Неопределено Тогда // данный источник еще не рассчитан
				Если ЕстьЗацикливание Тогда
					БазисПрихода = БазисПрихода + Данные.Расходы[ИндексИсточника][ОписаниеДвижений.БазисПрихода];
				Иначе
					Результат = РассчитатьПартиюРекурсивно(ПараметрыРасчета, Данные, ИндексИсточника);
					Если Результат = "ПереполнениеСтека" Тогда
						Прервать;
					ИначеЕсли Результат = "НетДанных" Тогда
						Возврат ОкончаниеЗамераРасчетаЦепочек(ПараметрыРасчета, Результат); // еще нет всех строк для распределения
					КонецЕсли;
					Если Данные.Расходы[ИндексРасхода] = Неопределено Тогда
						Возврат ОкончаниеЗамераРасчетаЦепочек(ПараметрыРасчета, "НеТребуется");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если ЭтоСторно Тогда
			СортироватьИсточники(Источники, ОписаниеДвижений.ПолеПорядка, Данные.Приходы);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТребуетсяСортировка Тогда
		СортироватьИсточникиПоЗначениямПолей(Источники, ЗначенияПолей, Данные.Приходы, Данные.Расходы);
	КонецЕсли;
	
	Счетчик = 0;
	ВГраница = Источники.ВГраница();
	
	ИнвертироватьПоказатели(Расход, ОписаниеДвижений.Показатели, ЭтоСторно);
	
	Пока Счетчик <= ВГраница Цикл
		
		ИндексИсточника = Источники[?(ЭтоСторно, ВГраница - Счетчик, Счетчик)];
		Счетчик = Счетчик + 1;
		
		МассивПриходов = Данные.Приходы[ИндексИсточника];
		Если МассивПриходов = Неопределено Тогда
			
			Если ОписаниеДвижений.Свойство("ПоляГруппировки") ИЛИ ЭтоСторно Тогда // Расчет источника уже был выполнен ранее
				Продолжить;
			КонецЕсли;
			Если Данные.Расходы[ИндексИсточника] = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Источник = Данные.Расходы[ИндексИсточника];
			Если НЕ ЕстьЗацикливание И НЕ Источник.РасчетЗавершен Тогда
				Результат = РассчитатьПартиюРекурсивно(ПараметрыРасчета, Данные, ИндексИсточника);
				ВГраница = Источники.ВГраница();
				Если Данные.Расходы[ИндексРасхода] = Неопределено Тогда
					Возврат ОкончаниеЗамераРасчетаЦепочек(ПараметрыРасчета, "НеТребуется");
				КонецЕсли;
				МассивПриходов = Данные.Приходы[ИндексИсточника];
				Если МассивПриходов = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				МассивПриходов = Данные.Приходы[ИндексИсточника];
				Если МассивПриходов = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтоСторно Тогда
			СортироватьПриходыПоЛИФО(ОписаниеДвижений.ПолеПорядка, МассивПриходов);
		КонецЕсли;
		
		ПриходыКУдалению = Новый Массив;
		
		Для Каждого Приход Из МассивПриходов Цикл
			
			РасчетнаяПартия = ДобавитьИЗаполнитьРасчетнуюПартию(ПараметрыРасчета, Расход, Приход, ЭтоСторно);
			
			Если Приход[ОписаниеДвижений.БазисПрихода] <= 0 Тогда
				ПриходыКУдалению.Добавить(Приход);
			КонецЕсли;
			
			Если РасчетнаяПартия.РасчетЗавершен Тогда
				Если ЦепочкаРасхода.Приемники.Количество() > 0 Тогда
					Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
						
						Если НовыеПриходы = Неопределено Тогда
							НовыеПриходы = Данные.СтрокиПриходов.СкопироватьКолонки();
						КонецЕсли;
						НовыйПриход = НовыеПриходы.Добавить();
						ЗаполнитьЗначенияСвойств(НовыйПриход, РасчетнаяПартия);
						ИнвертироватьПоказатели(НовыйПриход, ОписаниеДвижений.Показатели,
							НовыйПриход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Сторно
							ИЛИ НовыйПриход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад
							ИЛИ ЕстьСторно И НовыйПриход.Сторно);
						
					Иначе
						
						НовыйПриход = Данные.СтрокиПриходов.Добавить();
						ЗаполнитьЗначенияСвойств(НовыйПриход, РасчетнаяПартия);
						ИнвертироватьПоказатели(НовыйПриход, ОписаниеДвижений.Показатели,
							НовыйПриход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Сторно
							ИЛИ НовыйПриход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад
							ИЛИ ЕстьСторно И НовыйПриход.Сторно);
						
						Если Данные.Приходы[ИндексРасхода] = Неопределено Тогда
							Данные.Приходы.Вставить(ИндексРасхода, Новый Массив);
						КонецЕсли;
						
						Данные.Приходы[ИндексРасхода].Добавить(НовыйПриход);
						
					КонецЕсли;
				КонецЕсли;
			Иначе
				УдалитьРасчетнуюПартию(ПараметрыРасчета, РасчетнаяПартия);
			КонецЕсли;
			
			РасчетнаяПартия = Неопределено;
			
			Если Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходыБезПартии Тогда
				Если Расход.Знаменатель <= 0 Тогда
					Прервать;
				КонецЕсли;
			ИначеЕсли Расход[ОписаниеДвижений.БазисРасхода] <= 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого Приход Из ПриходыКУдалению Цикл
			Индекс = МассивПриходов.Найти(Приход);
			Если Индекс <> Неопределено Тогда
				МассивПриходов.Удалить(Индекс);
			КонецЕсли;
			Данные.СтрокиПриходов.Удалить(Приход);
		КонецЦикла;
		
		Если МассивПриходов.Количество() = 0 Тогда
			
			Данные.Приходы.Удалить(ИндексИсточника);
			
			Если Данные.Расходы[ИндексИсточника] = Неопределено Тогда
				ЦепочкаПрихода = Данные.ЦепочкиДвижений[ИндексИсточника];
				Если ЦепочкаПрихода <> Неопределено Тогда
					Данные.ЦепочкиДвижений.Удалить(ИндексИсточника);
					Данные.СтрокиЦепочек.Удалить(ЦепочкаПрихода);
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ПриходыКУдалению.Количество() > 0 Тогда
			Данные.Приходы.Вставить(ИндексИсточника, МассивПриходов);
		КонецЕсли;
		
		Если Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходыБезПартии Тогда
			Если Расход.Знаменатель <= 0 Тогда
				Прервать;
			КонецЕсли;
		ИначеЕсли Расход[ОписаниеДвижений.БазисРасхода] <= 0 Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ОписаниеДвижений.Свойство("ПоляГруппировки")
	 И НовыеПриходы <> Неопределено
	 И НовыеПриходы.Количество() > 0 Тогда
		
		НовыеПриходы.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
		
		Если Данные.Приходы[ИндексРасхода] = Неопределено Тогда
			Данные.Приходы.Вставить(ИндексРасхода, Новый Массив);
		КонецЕсли;
		
		Для Каждого Строка Из НовыеПриходы Цикл
			НовыйПриход = Данные.СтрокиПриходов.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйПриход, Строка);
			Данные.Приходы[ИндексРасхода].Добавить(НовыйПриход);
		КонецЦикла;
		
		НовыеПриходы = Неопределено;
		
	КонецЕсли;
	
	Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
		Если Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Перемещение
			ИЛИ Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ПеремещениеОбособленно
			ИЛИ Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ПеремещениеАвто Тогда
			Расход[ОписаниеДвижений.БазисРасхода] = БазисПрихода;
		 Иначе
			Расход[ОписаниеДвижений.БазисРасхода] = 0;
		КонецЕсли;
	КонецЕсли;
	
	Если Расход[ОписаниеДвижений.БазисРасхода] > 0
	 ИЛИ Расход.ТипЗаписи = Перечисления.ТипыЗаписейПартий.ДопРасходыБезПартии И Расход.Знаменатель > 0 Тогда
		
		ИнвертироватьПоказатели(Расход, ОписаниеДвижений.Показатели, ЭтоСторно);
		
	Иначе
		
		Данные.Расходы.Удалить(ИндексРасхода);
		Данные.ЦепочкиДвижений.Удалить(ИндексРасхода);
		Данные.СтрокиРасходов.Удалить(Расход);
		Данные.СтрокиЦепочек.Удалить(ЦепочкаРасхода);
		
	КонецЕсли;
	
	Возврат ОкончаниеЗамераРасчетаЦепочек(ПараметрыРасчета, "Выполнено");
	
КонецФункции

#КонецОбласти

#Область ФоновыйРасчетПартий

// Основные процедуры фонового расчета.

Процедура ЗапуститьРасчетПартийВФоне(ПараметрыРасчета, ПараметрыФоновогоРасчета,
			МинимальныйНомерЗаданияРасчета, МаксимальныйНомерЗаданияРасчета)
	
	ПротоколРасчетаПартийИСебестоимости.НачалоФормированиеВременнойТаблицы(
		ПараметрыРасчета,
		"ОписаниеПодграфовФоновыйРасчет",
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Запуск фонового расчета партий №%1'"),
			СокрЛП(МинимальныйНомерЗаданияРасчета - 1)));
	
	ИдентификаторРасчета = Новый УникальныйИдентификатор;
	
	// Описание графа.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ОписаниеПодграфовФоновыйРасчет
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|ГДЕ
	|	Т.НомерЗаданияРасчета >= &МинимальныйНомерЗаданияРасчета
	|	И Т.НомерЗаданияРасчета <= &МаксимальныйНомерЗаданияРасчета";
	
	Запрос.УстановитьПараметр("МинимальныйНомерЗаданияРасчета",  МинимальныйНомерЗаданияРасчета);
	Запрос.УстановитьПараметр("МаксимальныйНомерЗаданияРасчета", МаксимальныйНомерЗаданияРасчета);
	
	Запрос.Выполнить();
	
	ПараметрыРазделения = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыРазделенияВременнойТаблицыНаПорции(
		ПараметрыРасчета.ОграниченияВыборки.ПорцияРасчетаПартий,
		"КоличествоУзлов",
		"МинимальныйНомерУзла");
	
	УниверсальныеМеханизмыПартийИСебестоимости.РазделитьВременнуюТаблицуНаПорции(
		ПараметрыРасчета,
		ПараметрыРазделения,
		"ОписаниеПодграфовФоновыйРасчет");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НомерПорции,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Т.НомерПодграфа) КАК КоличествоПодграфов,
	|	СУММА(Т.КоличествоУзлов) КАК КоличествоУзлов,
	|	СУММА(Т.КоличествоСвязей) КАК КоличествоСвязей,
	|	МИНИМУМ(Т.МинимальныйНомерУзла) КАК МинимальныйНомерУзла,
	|	МАКСИМУМ(Т.МаксимальныйНомерУзла) КАК МаксимальныйНомерУзла
	|ИЗ
	|	ОписаниеПодграфовФоновыйРасчет КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.НомерПорции
	|
	|УПОРЯДОЧИТЬ ПО
	|	Т.НомерПорции";
	
	ОписаниеПодграфов = Запрос.Выполнить().Выгрузить();
	
	ЗаписатьКэшДанныхРасчетаПартий(
		ИдентификаторРасчета,
		Перечисления.ТипыДанныхКэшаПартионногоУчета.ОписаниеГрафа,
		ОписаниеПодграфов,
		,
		ОписаниеПодграфов[0].МинимальныйНомерУзла,
		ОписаниеПодграфов[ОписаниеПодграфов.Количество() - 1].МаксимальныйНомерУзла);
	
	// Узлы и связи.
	ВыборкаГруппаПодграфов = ОписаниеПодграфов;
	НомерПорции = -1;
	
	Пока СледующийЭлементКоллекции(ВыборкаГруппаПодграфов) Цикл
		
		ПродолжатьВыгрузку = Истина;
		НачальнаяЦепочка = ВыборкаГруппаПодграфов.МинимальныйНомерУзла;
		
		Пока ПродолжатьВыгрузку Цикл
			
			НомерПорции = НомерПорции + 1;
			
			КонечнаяЦепочка = Мин(
				НачальнаяЦепочка + ПараметрыРасчета.ОграниченияВыборки.ПорцияРасчетаПартий - 1,
				ВыборкаГруппаПодграфов.МаксимальныйНомерУзла);
			
			Запрос.УстановитьПараметр("НачальнаяЦепочка", НачальнаяЦепочка);
			Запрос.УстановитьПараметр("КонечнаяЦепочка",  КонечнаяЦепочка);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	*
			|ИЗ
			|	Данные КАК Т
			|ГДЕ
			|	Т.К >= &НачальнаяЦепочка
			|	И Т.К <= &КонечнаяЦепочка
			|УПОРЯДОЧИТЬ ПО
			|	Т.К";
			
			ТаблицаКэша = Запрос.Выполнить().Выгрузить();
			
			ЗаписатьКэшДанныхРасчетаПартий(
				ИдентификаторРасчета,
				Перечисления.ТипыДанныхКэшаПартионногоУчета.Узлы,
				ТаблицаКэша,
				НомерПорции,
				НачальнаяЦепочка,
				КонечнаяЦепочка);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Т.Ключ 			КАК Ключ,
			|	Т.СвязанныйКлюч КАК СвязанныйКлюч,
			|	Т.ИмяТаблицы 	КАК ИмяТаблицы
			|ИЗ
			|	(ВЫБРАТЬ
			|		Т.Ключ КАК Ключ,
			|		Т.Порядок КАК Порядок,
			|		Т.Источник КАК СвязанныйКлюч,
			|		""Источники"" КАК ИмяТаблицы
			|	ИЗ
			|		Источники КАК Т
			|	ГДЕ
			|		Т.Ключ >= &НачальнаяЦепочка
			|		И Т.Ключ <= &КонечнаяЦепочка
			|		И Т.Ключ <> Т.Источник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Т.Ключ,
			|		Т.Порядок,
			|		Т.Приемник,
			|		""Приемники""
			|	ИЗ
			|		Приемники КАК Т
			|	ГДЕ
			|		Т.Ключ >= &НачальнаяЦепочка
			|		И Т.Ключ <= &КонечнаяЦепочка
			|		И Т.Ключ <> Т.Приемник) КАК Т
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ключ,
			|	Т.Порядок,
			|	СвязанныйКлюч";
			
			ТаблицаКэша = Запрос.Выполнить().Выгрузить();
			
			Если ТаблицаКэша.Количество() > 0 Тогда
				
				ЗаписатьКэшДанныхРасчетаПартий(
					ИдентификаторРасчета,
					Перечисления.ТипыДанныхКэшаПартионногоУчета.Связи,
					ТаблицаКэша,
					НомерПорции,
					НачальнаяЦепочка,
					КонечнаяЦепочка);
				
			КонецЕсли;
			
			ПродолжатьВыгрузку = (КонечнаяЦепочка < ВыборкаГруппаПодграфов.МаксимальныйНомерУзла);
			НачальнаяЦепочка = КонечнаяЦепочка + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Параметры фонового расчета.
	ПараметрыФоновогоРасчета.Вставить("ИдентификаторРасчета",    ИдентификаторРасчета);
	ПараметрыФоновогоРасчета.Вставить("МаксимальныйНомерПорции", НомерПорции);
	
	ЗаписатьКэшДанныхРасчетаПартий(
		ИдентификаторРасчета,
		Перечисления.ТипыДанныхКэшаПартионногоУчета.ПараметрыРасчета,
		ПараметрыФоновогоРасчета);
	
	// Запустим задание расчета.
	ПараметрыОбработчикаЗадания = Новый Массив;
	ПараметрыОбработчикаЗадания.Добавить(ИдентификаторРасчета);
	
	КлючЗадания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='ФЗ №%1 - %2 %3 (%4)'"),
		СокрЛП(МинимальныйНомерЗаданияРасчета - 1),
		НСтр("ru='Фоновый расчет партий'"),
		ПараметрыФоновогоРасчета.МестоВызоваРасчета,
		СокрЛП(ИдентификаторРасчета));
	
	НовоеЗадание = ФоновыеЗадания.Выполнить(
		"ПартионныйУчет22.РассчитатьПартииВФоне",
		ПараметрыОбработчикаЗадания,
		КлючЗадания,
		НСтр("ru='Партионный учет версии 2.2: расчет порции данных.'"));
		
	СтрокаОписанияЗадания = ПараметрыРасчета.ТаблицаЗаданийРасчета.Добавить();
	СтрокаОписанияЗадания.ИдентификаторЗадания = НовоеЗадание.УникальныйИдентификатор;
	СтрокаОписанияЗадания.КлючЗадания 		   = КлючЗадания;
	СтрокаОписанияЗадания.ИдентификаторРасчета = ИдентификаторРасчета;
	
	ПротоколРасчетаПартийИСебестоимости.ОкончаниеФормированиеВременнойТаблицы(ПараметрыРасчета);
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ОписаниеПодграфовФоновыйРасчет");
	
КонецПроцедуры

Процедура РассчитатьПартииВФоне(ИдентификаторРасчета) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Получим параметры расчета.
	ПараметрыРасчета = ПрочитатьКэшДанныхРасчетаПартий(
		Неопределено,
		ИдентификаторРасчета,
		Перечисления.ТипыДанныхКэшаПартионногоУчета.ПараметрыРасчета);
	
	ПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	ПараметрыРасчета.Вставить("КоличествоПорцийРезультата", 0);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
	ИнициализироватьЗамерРаспределенияПартий(ПараметрыРасчета);
	
	// Получим описание подграфов.
	ОписаниеПодграфов = ПрочитатьКэшДанныхРасчетаПартий(
		ПараметрыРасчета,
		ИдентификаторРасчета,
		Перечисления.ТипыДанныхКэшаПартионногоУчета.ОписаниеГрафа);
		
	ВыборкаГруппаПодграфов = ОписаниеПодграфов;
	
	// Рассчитаем партии.
	РассчитатьПартииПоГруппамПодграфов(ПараметрыРасчета, ВыборкаГруппаПодграфов);
	
	// Закончим расчет.
	КэшироватьРасчетныеПартииПриРасчетеВФоне(ПараметрыРасчета);
	
	ЗаписатьКэшДанныхРасчетаПартий(
		ПараметрыРасчета.ИдентификаторРасчета,
		Перечисления.ТипыДанныхКэшаПартионногоУчета.СтатистикаРасчета,
		ПараметрыРасчета.РаспределениеПартий.СтатистикаРасчета);
	
КонецПроцедуры

Процедура КэшироватьРасчетныеПартииПриРасчетеВФоне(ПараметрыРасчета)
	
	РасчетныеПартии = ПараметрыРасчета.РаспределениеПартий.РасчетныеПартии;
	
	Если РасчетныеПартии.Количество() > 0 Тогда
		
		ЗаписатьКэшДанныхРасчетаПартий(
			ПараметрыРасчета.ИдентификаторРасчета,
			Перечисления.ТипыДанныхКэшаПартионногоУчета.РезультатРасчета,
			РасчетныеПартии,
			ПараметрыРасчета.КоличествоПорцийРезультата);
		
		ПараметрыРасчета.КоличествоПорцийРезультата = ПараметрыРасчета.КоличествоПорцийРезультата + 1;
		
		РасчетныеПартии.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьРезультатыФоновыхРасчетовПартий(ПараметрыРасчета)
	
	УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьРаспределенныеПартии(ПараметрыРасчета, Ложь);
	
	ПрерватьРасчет = Ложь;
	
	Пока ПараметрыРасчета.ТаблицаЗаданийРасчета.Количество() > 0 Цикл
		
		СтрокиКУдалению = Новый Массив;
		АктивныеЗадания = Новый Массив;
		
		Для Каждого СтрокаОписанияЗадания Из ПараметрыРасчета.ТаблицаЗаданийРасчета Цикл
			
			Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(СтрокаОписанияЗадания.ИдентификаторЗадания);
			
			ТекстДляПротокола = "";
			
			Если Задание = Неопределено Тогда
				
				// Задание не найдено в списке фоновых заданий.
				СтрокиКУдалению.Добавить(СтрокаОписанияЗадания);
				
				ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Фоновое задание %1 не найдено. Вероятно задание завершено аварийно, см. Журнал регистрации.'"),
					"""" + СокрЛП(СтрокаОписанияЗадания.КлючЗадания) + """");
				
				ПрерватьРасчет = Истина;
				
			ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно
			 ИЛИ Задание.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
				
				// Состояние задания "ЗавершеноАварийно" или "Отменено".
				СтрокиКУдалению.Добавить(СтрокаОписанияЗадания);
				
				ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Фоновое задание %1 %2:
					|%3'"),
					"""" + СокрЛП(Задание.Ключ) + """",
					?(Задание.Состояние = СостояниеФоновогоЗадания.Отменено, НСтр("ru='отменено'"), НСтр("ru='завершено аварийно'")),
					?(Задание.ИнформацияОбОшибке = Неопределено,
						НСтр("ru='<Нет описания ошибки>'"),
						ПодробноеПредставлениеОшибки(Задание.ИнформацияОбОшибке)));
				
				ПрерватьРасчет = Истина;
				
			ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
				
				СтрокиКУдалению.Добавить(СтрокаОписанияЗадания);
				
				// Получим результаты расчета.
				КоличествоДанных = КоличествоРезультатовРасчетаВКэшеДанныхРасчетаПартий(СтрокаОписанияЗадания.ИдентификаторРасчета);
				
				Для НомерПорции = 0 По КоличествоДанных Цикл
					
					ТаблицаКэша = ПрочитатьКэшДанныхРасчетаПартий(
						ПараметрыРасчета,
						СтрокаОписанияЗадания.ИдентификаторРасчета,
						Перечисления.ТипыДанныхКэшаПартионногоУчета.РезультатРасчета,
						НомерПорции);
						
					ПараметрыРасчета.РаспределениеПартий.Вставить("РасчетныеПартии", ТаблицаКэша);
					
					УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьРаспределенныеПартии(ПараметрыРасчета, Ложь);
					
				КонецЦикла;
				
				// Получим статистику расчета.
				ТаблицаКэша = ПрочитатьКэшДанныхРасчетаПартий(
					ПараметрыРасчета,
					СтрокаОписанияЗадания.ИдентификаторРасчета,
					Перечисления.ТипыДанныхКэшаПартионногоУчета.СтатистикаРасчета,
					,
					,
					,
					Ложь);
				
				Если ЗначениеЗаполнено(ТаблицаКэша) Тогда
					
					Для Каждого СтрокаТаблицы Из ТаблицаКэша Цикл
						
						НоваяСтрока = ПараметрыРасчета.РаспределениеПартий.СтатистикаРасчета.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
						
					КонецЦикла;
					
				КонецЕсли;
				
			Иначе
				
				// Задание еще активно, ничего с ним делать не нужно.
				АктивныеЗадания.Добавить(Задание);
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекстДляПротокола) Тогда
				
				ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
					ПараметрыРасчета,
					Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаРаспределенияПартий,
					ТекстДляПротокола);
				
				УниверсальныеМеханизмыПартийИСебестоимости.ЗарегистрироватьПроблемуВыполненияРасчета(
					ПараметрыРасчета,
					,
					НСтр("ru='При формировании движений по партиям диагностированы ошибки'"),
					ТекстДляПротокола);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого СтрокаОписанияЗадания Из СтрокиКУдалению Цикл
			
			ОчиститьКэшДанныхРасчетаПартий(СтрокаОписанияЗадания.ИдентификаторРасчета); // очистим записи регистра для данного задания
			
			ПараметрыРасчета.ТаблицаЗаданийРасчета.Удалить(СтрокаОписанияЗадания);
			
		КонецЦикла;
		
		Если СтрокиКУдалению.Количество() = 0 Тогда 
			
			// Если все задания еще активны, то сделаем паузу перед следующим циклом проверки заданий.
			Попытка
				ФоновыеЗадания.ОжидатьЗавершения(АктивныеЗадания, 1);
			Исключение
				СтрокиКУдалению = Неопределено; // для исключения срабатывания проверки стандарта 499 
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПрерватьРасчет Тогда
		
		ТекстДляПротокола = УниверсальныеМеханизмыПартийИСебестоимости.ТекстИсключениеДляРегистрацииПроблемы(
			НСтр("ru='При формировании движений по партиям диагностированы ошибки'"));
		
		ВызватьИсключение ТекстДляПротокола;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедуры работы с регистром кэша при фоновом расчете.

Процедура ЗаписатьКэшДанныхРасчетаПартий(ИдентификаторРасчета, ТипДанных, Данные,
			НомерПорцииДанных = 0, МинимальныйНомерУзла = 0, МаксимальныйНомерУзла = 0)
	
	МенеджерЗаписи = РегистрыСведений.КэшДанныхПартионногоУчета.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.ИдентификаторРасчета  = ИдентификаторРасчета;
	МенеджерЗаписи.ТипДанных 			 = ТипДанных;
	МенеджерЗаписи.НомерПорцииДанных 	 = НомерПорцииДанных;
	МенеджерЗаписи.Данные 				 = Новый ХранилищеЗначения(Данные, Новый СжатиеДанных(9));
	МенеджерЗаписи.МинимальныйНомерУзла  = МинимальныйНомерУзла;
	МенеджерЗаписи.МаксимальныйНомерУзла = МаксимальныйНомерУзла;
	
	МенеджерЗаписи.Записать(Ложь);
	
КонецПроцедуры

Функция ПрочитатьКэшДанныхРасчетаПартий(ПараметрыРасчета, ИдентификаторРасчета, ТипДанных, НомерПорцииДанных = 0,
			МинимальныйНомерУзла = 0, МаксимальныйНомерУзла = 0, ЗаписьДолжнаСуществовать = Истина)
	
	МенеджерЗаписи = РегистрыСведений.КэшДанныхПартионногоУчета.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.ИдентификаторРасчета  = ИдентификаторРасчета;
	МенеджерЗаписи.ТипДанных 			 = ТипДанных;
	МенеджерЗаписи.НомерПорцииДанных 	 = НомерПорцииДанных;
	
	МенеджерЗаписи.Прочитать();
	
	Если НЕ МенеджерЗаписи.Выбран() Тогда
		
		Если НЕ ЗаписьДолжнаСуществовать Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не найдена запись в кэше данных партионного учета:
			|Идентификатор расчета: %1
			|Тип данных: %2
			|Номер порции: %3'"),
			СокрЛП(ИдентификаторРасчета),
			СокрЛП(ТипДанных),
			СокрЛП(НомерПорцииДанных));
		
		Если ЗначениеЗаполнено(ПараметрыРасчета) И НЕ ЭтоФоновыйРасчетПартий(ПараметрыРасчета) Тогда
			
			ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаРаспределенияПартий,
				ТекстДляПротокола);
			
			УниверсальныеМеханизмыПартийИСебестоимости.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыРасчета,
				,
				НСтр("ru='При формировании движений по партиям диагностированы ошибки'"),
				ТекстДляПротокола);
				
			ТекстДляПротокола = УниверсальныеМеханизмыПартийИСебестоимости.ТекстИсключениеДляРегистрацииПроблемы(ТекстДляПротокола);
			
		КонецЕсли;
		
		ВызватьИсключение ТекстДляПротокола;
		
	КонецЕсли;
	
	МинимальныйНомерУзла  = МенеджерЗаписи.МинимальныйНомерУзла;
	МаксимальныйНомерУзла = МенеджерЗаписи.МаксимальныйНомерУзла;
	
	Возврат МенеджерЗаписи.Данные.Получить();
	
КонецФункции

Процедура ОчиститьКэшДанныхРасчетаПартий(ИдентификаторРасчета = Неопределено) Экспорт
	
	НаборЗаписей = РегистрыСведений.КэшДанныхПартионногоУчета.СоздатьНаборЗаписей();
	
	Если ЗначениеЗаполнено(ИдентификаторРасчета) Тогда
		НаборЗаписей.Отбор.ИдентификаторРасчета.Установить(ИдентификаторРасчета);
	КонецЕсли;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

Функция КоличествоРезультатовРасчетаВКэшеДанныхРасчетаПартий(ИдентификаторРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(Т.НомерПорцииДанных), -1) КАК НомерПорцииДанных
	|ИЗ
	|	РегистрСведений.КэшДанныхПартионногоУчета КАК Т
	|ГДЕ
	|	Т.ИдентификаторРасчета = &ИдентификаторРасчета
	|	И Т.ТипДанных = ЗНАЧЕНИЕ(Перечисление.ТипыДанныхКэшаПартионногоУчета.РезультатРасчета)";
	
	Запрос.УстановитьПараметр("ИдентификаторРасчета", ИдентификаторРасчета);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.НомерПорцииДанных;
	
КонецФункции

// Вспомогательные процедуры фонового расчета.

Функция СформироватьПараметрыФоновогоРасчета(ПараметрыРасчета)
	
	ВсеСсылки 			= ОбщегоНазначения.ОписаниеТипаВсеСсылки();
	КопируемыеТипы 		= Новый ОписаниеТипов("Строка, Дата, Число, Булево, Массив, Соответствие");
	КопируемыеСтруктуры = Новый Структура("РаспределениеПартий, РасчетныйПериод, ФО");
	
	ПараметрыФоновогоРасчета = Новый Структура;
	
	Для Каждого КлючИЗначение Из ПараметрыРасчета Цикл
		
		ТипПараметра = ТипЗнч(КлючИЗначение.Значение);
		
		Если КопируемыеТипы.СодержитТип(ТипПараметра)
		 ИЛИ ВсеСсылки.СодержитТип(ТипПараметра)
		 ИЛИ (ТипПараметра = Тип("Структура") И КопируемыеСтруктуры.Свойство(КлючИЗначение.Ключ)) Тогда
			ПараметрыФоновогоРасчета.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыФоновогоРасчета.МестоВызоваРасчета = ПротоколРасчетаПартийИСебестоимости.ПредставлениеТекущегоЭтапа(ПараметрыРасчета);
	
	УниверсальныеМеханизмыПартийИСебестоимости.УстановитьТехнологическиеПараметрыРасчета(ПараметрыФоновогоРасчета);
	
	Возврат ПараметрыФоновогоРасчета;
	
КонецФункции

Функция ЭтоФоновыйРасчетПартий(ПараметрыРасчета)
	Возврат ЗначениеЗаполнено(ПараметрыРасчета.ИдентификаторРасчета);
КонецФункции

#КонецОбласти

#Область ВыборкаДанныхДляРасчета

Функция СледующаяПорцияПартийДляРасчета(ПараметрыРасчета, ВыборкаГруппаПодграфов, Данные)
	
	Запрос = Новый Запрос;
	
	Данные.ПараметрыОбхода.НачальнаяЦепочка = Данные.ПараметрыОбхода.КонечнаяЦепочка + 1;
	
	Если НЕ ЭтоФоновыйРасчетПартий(ПараметрыРасчета) Тогда
		
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	*
		|ИЗ
		|	Данные КАК ДД
		|ГДЕ
		|	ДД.К >= &НачальнаяЦепочка
		|	И ДД.К <= &КонечнаяЦепочка
		|УПОРЯДОЧИТЬ ПО
		|	ДД.К";
		
		Данные.ПараметрыОбхода.КонечнаяЦепочка  = Мин(
			Данные.ПараметрыОбхода.КонечнаяЦепочка + ПараметрыРасчета.ОграниченияВыборки.ПорцияРасчетаПартий,
			ВыборкаГруппаПодграфов.МаксимальныйНомерУзла);
		
		Запрос.УстановитьПараметр("НачальнаяЦепочка", Данные.ПараметрыОбхода.НачальнаяЦепочка);
		Запрос.УстановитьПараметр("КонечнаяЦепочка",  Данные.ПараметрыОбхода.КонечнаяЦепочка);
		
		ВыборкаДанных = Запрос.Выполнить().Выбрать();
		
	Иначе
		
		Если Данные.ПараметрыОбхода.НомерПорции > ПараметрыРасчета.МаксимальныйНомерПорции Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		ВыборкаДанных = ПрочитатьКэшДанныхРасчетаПартий(
			ПараметрыРасчета,
			ПараметрыРасчета.ИдентификаторРасчета,
			Перечисления.ТипыДанныхКэшаПартионногоУчета.Узлы,
			Данные.ПараметрыОбхода.НомерПорции,
			Данные.ПараметрыОбхода.НачальнаяЦепочка, // значение переменной изменяется
			Данные.ПараметрыОбхода.КонечнаяЦепочка); // значение переменной изменяется
		
	КонецЕсли;
	
	СледующаяПорцияЦепочекДляРасчета(ПараметрыРасчета, Данные, Запрос);
	
	Данные.ПараметрыОбхода.НомерПорции = Данные.ПараметрыОбхода.НомерПорции + 1;
	
	Возврат ВыборкаДанных;
	
КонецФункции

Процедура СледующаяПорцияЦепочекДляРасчета(ПараметрыРасчета, Данные, Запрос)
	
	Если НЕ ЭтоФоновыйРасчетПартий(ПараметрыРасчета) Тогда
		
		ТаблицыСвязейУзлов = Новый Структура("Источники, Приемники", "Источник", "Приемник");
		
		ШаблонЗапроса =
		"ВЫБРАТЬ
		|	Т.Ключ КАК Ключ,
		|	Т.%2 КАК %2
		|ИЗ
		|	%1 КАК Т
		|ГДЕ
		|	Т.Ключ >= &НачальнаяЦепочка
		|	И Т.Ключ <= &КонечнаяЦепочка
		|	И Т.Ключ <> Т.%2
		|	
		|УПОРЯДОЧИТЬ ПО
		|	Ключ,
		|	Т.Порядок,
		|	%2";
		
		Для Каждого ОписаниеТаблицы Из ТаблицыСвязейУзлов Цикл
			
			Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонЗапроса,
				ОписаниеТаблицы.Ключ,
				ОписаниеТаблицы.Значение);
			
			Строка 		= Неопределено;
			ТекущийКлюч = Неопределено;
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Ключ = Выборка.Ключ;
				
				Если ТекущийКлюч <> Ключ Тогда
					
					Если ТекущийКлюч <> Неопределено Тогда
						Данные.ЦепочкиДвижений.Вставить(ТекущийКлюч, Строка);
					КонецЕсли;
					
					ТекущийКлюч = Ключ;
					
					Строка = Данные.ЦепочкиДвижений[ТекущийКлюч];
					Если Строка = Неопределено Тогда
						Строка = Данные.СтрокиЦепочек.Добавить();
					КонецЕсли;
					
				КонецЕсли;
				
				Строка[ОписаниеТаблицы.Ключ].Добавить(Выборка[ОписаниеТаблицы.Значение]);
				
			КонецЦикла;
			
			Если ТекущийКлюч <> Неопределено Тогда
				Данные.ЦепочкиДвижений.Вставить(ТекущийКлюч, Строка);
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		ТаблицаКэша = ПрочитатьКэшДанныхРасчетаПартий(
			ПараметрыРасчета,
			ПараметрыРасчета.ИдентификаторРасчета,
			Перечисления.ТипыДанныхКэшаПартионногоУчета.Связи,
			Данные.ПараметрыОбхода.НомерПорции,
			,
			,
			Ложь);
		
		Если НЕ ЗначениеЗаполнено(ТаблицаКэша) Тогда
			Возврат; // у этой порции узлов нет связей (тривиальные графы)
		КонецЕсли;
		
		Строка 		= Неопределено;
		ТекущийКлюч = Неопределено;
		
		Для Каждого ТекущаяСтрокаКэша Из ТаблицаКэша Цикл
			
			Ключ = ТекущаяСтрокаКэша.Ключ;
			
			Если ТекущийКлюч <> Ключ Тогда
				
				Если ТекущийКлюч <> Неопределено Тогда
					Данные.ЦепочкиДвижений.Вставить(ТекущийКлюч, Строка);
				КонецЕсли;
				
				ТекущийКлюч = Ключ;
				
				Строка = Данные.ЦепочкиДвижений[ТекущийКлюч];
				Если Строка = Неопределено Тогда
					Строка = Данные.СтрокиЦепочек.Добавить();
				КонецЕсли;
				
			КонецЕсли;
			
			Строка[ТекущаяСтрокаКэша.ИмяТаблицы].Добавить(ТекущаяСтрокаКэша.СвязанныйКлюч);
			
		КонецЦикла;
		
		Если ТекущийКлюч <> Неопределено Тогда
			Данные.ЦепочкиДвижений.Вставить(ТекущийКлюч, Строка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция СледующийЭлементКоллекции(Данные)
	
	Если ТипЗнч(Данные) = Тип("ТаблицаЗначений") Тогда
		
		Если Данные.Количество() > 0 Тогда
			Данные = Данные[0];
			Возврат Истина;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Данные) = Тип("СтрокаТаблицыЗначений") Тогда
		
		ИсходнаяТаблица = Данные.Владелец();
		Индекс = ИсходнаяТаблица.Индекс(Данные);
		
		Если Индекс < ИсходнаяТаблица.Количество() - 1 Тогда
			Данные = ИсходнаяТаблица[Индекс + 1];
			Возврат Истина;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Данные) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
		
		Если Данные.Следующий() Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область СортировкаДанных

Процедура СортироватьИсточники(Источники, ПолеПорядка, Приходы)
	
	// Ожидаем, что источников будем менее десятка и они будут почти всегда уже упорядочены, поэтому делаем сортировку вставками
	
	Для НомерИсточника1 = 1 По Источники.ВГраница() Цикл
		
		Если Приходы[Источники[НомерИсточника1]] = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(Приходы[Источники[НомерИсточника1]]) = Тип("Массив") Тогда
			Если Приходы[Источники[НомерИсточника1]].Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			ИсточникУ = Приходы[Источники[НомерИсточника1]][0];
		Иначе
			ИсточникУ = Приходы[Источники[НомерИсточника1]];
		КонецЕсли;
		
		Элемент = Новый Структура("Порядок, Источник", ИсточникУ[ПолеПорядка], Источники[НомерИсточника1]);
		
		НомерИсточника2 = НомерИсточника1 - 1;
		Пока НомерИсточника2 >= 0 Цикл
			
			Если ТипЗнч(Приходы[Источники[НомерИсточника2]]) = Тип("Массив") Тогда
				Если Приходы[Источники[НомерИсточника2]].Количество() = 0 Тогда
					НомерИсточника2 = НомерИсточника2 - 1;
					Продолжить;
				КонецЕсли;
				ИсточникХ = Приходы[Источники[НомерИсточника2]][0];
			Иначе
				ИсточникХ = Приходы[Источники[НомерИсточника2]];
			КонецЕсли;
			
			Если ИсточникХ = Неопределено Тогда
				НомерИсточника2 = НомерИсточника2 - 1;
				Продолжить;
			КонецЕсли;
			
			Если ИсточникХ[ПолеПорядка] <= Элемент.Порядок Тогда
				Прервать;
			КонецЕсли;
			
			Источники[НомерИсточника2 + 1] = Источники[НомерИсточника2];
			НомерИсточника2 = НомерИсточника2 - 1;
			
		КонецЦикла;
		
		Источники[НомерИсточника2 + 1] = Элемент.Источник;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СортироватьИсточникиПоЗначениямПолей(Источники, ЗначенияПолей, Приходы, Расходы)
	
	Список = Новый СписокЗначений;
	
	ИндексЭлементаМассива = -1;
	
	Для Каждого ИндексИсточника Из Источники Цикл
		
		ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
		
		МассивПриходов = Приходы[ИндексИсточника];
		
		Если МассивПриходов <> Неопределено И МассивПриходов.Количество() = 0 Тогда
			Сдвиг = 0;
		Иначе
			
			Сдвиг = ЗначенияПолей.Количество();
			
			Для Каждого ПолеСортировки Из ЗначенияПолей Цикл
				Если Не ЗначениеЗаполнено(ПолеСортировки.Значение) Тогда
					Продолжить;
				КонецЕсли;
				
				Если МассивПриходов <> Неопределено Тогда
					ЗначениеПоля = МассивПриходов[0][ПолеСортировки.Ключ];
				ИначеЕсли Расходы[ИндексИсточника] <> Неопределено Тогда
				 	ЗначениеПоля = Расходы[ИндексИсточника][ПолеСортировки.Ключ];
				Иначе
					Прервать;
				КонецЕсли;
					
				Если ЗначениеПоля = ПолеСортировки.Значение Тогда
					Сдвиг = Сдвиг - 1;
				ИначеЕсли ЗначениеПоля = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
				 И (ПолеСортировки.Значение = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров
					ИЛИ ПолеСортировки.Значение = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг) Тогда
					Сдвиг = Сдвиг - 1;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		Список.Добавить(ИндексИсточника, Формат(ИндексЭлементаМассива + Сдвиг * Источники.Количество(), "ЧЦ=15; ЧДЦ=; ЧВН=; ЧГ="));
		
	КонецЦикла;
	
	Если Список.Количество() > 0 Тогда
		Список.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
		Источники = Список.ВыгрузитьЗначения();
	КонецЕсли;
	
КонецПроцедуры

Процедура СортироватьПриходыПоЛИФО(ПолеПорядка, МассивПриходов)
	
	Список = Новый СписокЗначений;
	
	Для Каждого Приход Из МассивПриходов Цикл
		Список.Добавить(Приход, Приход[ПолеПорядка]);
	КонецЦикла;
	
	Список.СортироватьПоПредставлению(НаправлениеСортировки.Убыв);
	МассивПриходов = Список.ВыгрузитьЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область ДействияСТаблицейРасчетныхПартий

Функция ДобавитьИЗаполнитьРасчетнуюПартию(ПараметрыРасчета, Расход, Приход, Инвертировать = Ложь)
	
	Контекст   = ПараметрыРасчета.РаспределениеПартий.ОписаниеДвижений.Контекст;
	Показатели = ПараметрыРасчета.РаспределениеПартий.ОписаниеДвижений.Показатели;
	
	РасчетнаяПартия = ДобавитьРасчетнуюПартию(ПараметрыРасчета);
	
	ЗаполнитьРасчетнуюПартию(ПараметрыРасчета, Контекст, РасчетнаяПартия, Расход, Приход);
	
	ИнвертироватьПоказатели(РасчетнаяПартия, Показатели, Инвертировать);
	
	Возврат РасчетнаяПартия;
	
КонецФункции

// Добавляет новую строку в таблицу расчетных партий и заполняет необходимые поля.
//
Функция ДобавитьРасчетнуюПартию(ПараметрыРасчета, ДанныеЗаполнения = Неопределено)
	
	РасчетныеПартии = ПараметрыРасчета.РаспределениеПартий.РасчетныеПартии;
	
	// При необходимости кэшируем сформированную порцию партий в таблицу движений по регистру
	Если РасчетныеПартии.Количество() >= ПараметрыРасчета.ОграниченияВыборки.КоличествоСтрокВТЗ Тогда
		
		Если НЕ ЭтоФоновыйРасчетПартий(ПараметрыРасчета) Тогда
			
			УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьРаспределенныеПартии(ПараметрыРасчета, Ложь);
			
		Иначе
			
			КэшироватьРасчетныеПартииПриРасчетеВФоне(ПараметрыРасчета);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Добавим строку в таблицу распределенных партий
	РасчетнаяПартия = РасчетныеПартии.Добавить();
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, ДанныеЗаполнения);
	КонецЕсли;
	
	ЗафиксироватьВЗамереДобавлениеРасчетнойПартии(ПараметрыРасчета);
	
	Возврат РасчетнаяПартия;
	
КонецФункции

// Удаляет указанную строку из таблицы партий.
//
Процедура УдалитьРасчетнуюПартию(ПараметрыРасчета, РасчетнаяПартия)
	
	РасчетныеПартии = ПараметрыРасчета.РаспределениеПартий.РасчетныеПартии;
	РасчетныеПартии.Удалить(РасчетнаяПартия);
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеВспомогательныеМетоды

// Возвращает массив типов записей, используемых в описании цепочек.
//
Функция ИспользуемыеТипыЗаписейВЦепочках(ОписаниеЦепочек, ВПриемниках = Истина, ВИсточниках = Истина,
			ДобавлятьВРезультатПустойТипЗаписи = Истина)
	
	ТипыЗаписей = Новый Массив;
	
	Для Каждого КлючИЗначение Из ОписаниеЦепочек Цикл
		
		Если ВПриемниках И ВИсточниках Тогда
			ОбщегоНазначенияУТКлиентСервер.ДобавитьНовоеЗначениеВМассив(ТипыЗаписей, КлючИЗначение.Ключ);
		ИначеЕсли ВПриемниках
		 И КлючИЗначение.Значение.ТипыПриемников.Количество() = 0
		 И КлючИЗначение.Значение.ТипыИсточников.Количество() = 0 Тогда
			ОбщегоНазначенияУТКлиентСервер.ДобавитьНовоеЗначениеВМассив(ТипыЗаписей, КлючИЗначение.Ключ);
		КонецЕсли;
		
		Если ВПриемниках Тогда
			Для Каждого Приемники Из КлючИЗначение.Значение.ТипыПриемников Цикл
				ОбщегоНазначенияУТКлиентСервер.ДобавитьНовоеЗначениеВМассив(ТипыЗаписей, Приемники.Ключ);
			КонецЦикла;
		КонецЕсли;
		
		Если ВИсточниках Тогда
			Для Каждого Источники Из КлючИЗначение.Значение.ТипыИсточников Цикл
				ОбщегоНазначенияУТКлиентСервер.ДобавитьНовоеЗначениеВМассив(ТипыЗаписей, Источники.Ключ);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДобавлятьВРезультатПустойТипЗаписи Тогда
		ОбщегоНазначенияУТКлиентСервер.ДобавитьНовоеЗначениеВМассив(ТипыЗаписей, Перечисления.ТипыЗаписейПартий.ПустаяСсылка());
	КонецЕсли;
	
	Возврат ТипыЗаписей;
	
КонецФункции

// Используется также при распределении приходов на расходы
//
Процедура ИнвертироватьПоказатели(Запись, ПереченьПоказателей, Инвертировать)
	
	Если Не Инвертировать Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Поле Из Новый Структура(ПереченьПоказателей) Цикл
		Запись[Поле.Ключ] = -Запись[Поле.Ключ];
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЗамерыРасчета

Процедура ИнициализироватьЗамерРаспределенияПартий(ПараметрыРасчета)
	
	СтатистикаРасчета = Новый ТаблицаЗначений;
	
	СтатистикаРасчета.Колонки.Добавить("КоличествоПодграфов", Новый ОписаниеТипов("Число"));
	СтатистикаРасчета.Колонки.Добавить("КоличествоУзлов", 	  Новый ОписаниеТипов("Число"));
	СтатистикаРасчета.Колонки.Добавить("ТекущаяГлубина", 	  Новый ОписаниеТипов("Число"));
	СтатистикаРасчета.Колонки.Добавить("МаксимальнаяГлубина", Новый ОписаниеТипов("Число"));
	СтатистикаРасчета.Колонки.Добавить("СформированоЗаписей", Новый ОписаниеТипов("Число"));
	СтатистикаРасчета.Колонки.Добавить("РезультатыОбхода", 	  Новый ОписаниеТипов("Структура"));
	СтатистикаРасчета.Колонки.Добавить("СтекВызовов");
	
	ПараметрыРасчета.РаспределениеПартий.Вставить("СтатистикаРасчета", СтатистикаРасчета);
	
КонецПроцедуры

Процедура НачалоЗамераРасчетаГруппыПодграфов(ПараметрыРасчета, Выборка)
	
	НоваяСтрока = ПараметрыРасчета.РаспределениеПартий.СтатистикаРасчета.Добавить();
	
	НоваяСтрока.КоличествоПодграфов = Выборка.КоличествоПодграфов;
	НоваяСтрока.КоличествоУзлов 	= Выборка.МаксимальныйНомерУзла - Выборка.МинимальныйНомерУзла + 1;
	НоваяСтрока.СтекВызовов 		= Новый Массив(ПараметрыРасчета.ОграниченияВыборки.МаксимальнаяДлинаЦепочки + 1);
	
КонецПроцедуры

Функция НачалоЗамераРасчетаЦепочек(ПараметрыРасчета, Данные, ИндексРасхода)
	
	ТекущаяСтрока = ПараметрыРасчета.РаспределениеПартий.СтатистикаРасчета[ПараметрыРасчета.РаспределениеПартий.СтатистикаРасчета.Количество() - 1];
	
	ТекущаяСтрока.ТекущаяГлубина = ТекущаяСтрока.ТекущаяГлубина + 1;
	
	ТекущаяСтрока.МаксимальнаяГлубина =
		Макс(ТекущаяСтрока.МаксимальнаяГлубина, ТекущаяСтрока.ТекущаяГлубина);;
	
	Если ТекущаяСтрока.ТекущаяГлубина > 0 Тогда
		ТекущаяСтрока.СтекВызовов[ТекущаяСтрока.ТекущаяГлубина - 1] = ИндексРасхода;
	КонецЕсли;
	
	ЕстьПереполнениеСтека = (ТекущаяСтрока.ТекущаяГлубина > ПараметрыРасчета.ОграниченияВыборки.МаксимальнаяДлинаЦепочки);
	
	Если ЕстьПереполнениеСтека Тогда
		
		Если НЕ ПараметрыРасчета.РаспределениеПартий.ЕстьПереполнениеСтека Тогда
			
			ТекстДляПротокола =
				НСтр("ru='При расчете цепочек движения партий сработало ограничение на максимально допустимую длину цепочки.
					|Это ограничение текущего механизма партионного учета (ошибка 00-00130143).
					|Для некоторых документов партии могут быть не подобраны или может быть нарушен принцип подбора партий по ФИФО.'");
			
			ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаРаспределенияПартий,
				ТекстДляПротокола,
				ТекстДляПротокола);
			
			УниверсальныеМеханизмыПартийИСебестоимости.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыРасчета,
				,
				НСтр("ru='При расчете партий диагностированы проблемы'"),
				ТекстДляПротокола,
				,
				Перечисления.ВариантыВажностиПроблемыСостоянияСистемы.Предупреждение);
			
		КонецЕсли;
		
		ПараметрыРасчета.РаспределениеПартий.ЕстьПереполнениеСтека = Истина;
		
	КонецЕсли;
	
	Возврат НЕ ЕстьПереполнениеСтека;
	
КонецФункции

Функция ОкончаниеЗамераРасчетаЦепочек(ПараметрыРасчета, РезультатРасчета)
	Перем Количество;
	
	ТекущаяСтрока = ПараметрыРасчета.РаспределениеПартий.СтатистикаРасчета[ПараметрыРасчета.РаспределениеПартий.СтатистикаРасчета.Количество() - 1];
	
	Если НЕ ТекущаяСтрока.РезультатыОбхода.Свойство(РезультатРасчета, Количество) Тогда
		Количество = 0;
	КонецЕсли;
	
	ТекущаяСтрока.РезультатыОбхода.Вставить(РезультатРасчета, Количество + 1);
	
	ТекущаяСтрока.ТекущаяГлубина = ТекущаяСтрока.ТекущаяГлубина - 1;
	
	Если ТекущаяСтрока.ТекущаяГлубина >= 0 Тогда
		ТекущаяСтрока.СтекВызовов[ТекущаяСтрока.ТекущаяГлубина] = Неопределено;
	КонецЕсли;
	
	Возврат РезультатРасчета;
	
КонецФункции

Процедура ЗафиксироватьВЗамереДобавлениеРасчетнойПартии(ПараметрыРасчета)
	
	ТекущаяСтрока = ПараметрыРасчета.РаспределениеПартий.СтатистикаРасчета[ПараметрыРасчета.РаспределениеПартий.СтатистикаРасчета.Количество() - 1];
	
	ТекущаяСтрока.СформированоЗаписей = ТекущаяСтрока.СформированоЗаписей + 1;
	
КонецПроцедуры

Процедура ЗавершитьЗамерРаспределенияПартий(ПараметрыРасчета)
	
	// Добавим в протокол расчета партий собранную информацию о текущем расчете цепочек.
	ОписаниеРасчета = НСтр("ru='Описание результатов обхода цепочек (графа):'");
	
	ШаблонОписаниеГруппыПодграфов = "
		|	" + НСтр("ru='%1. Подграфов: %2, узлов: %3, глубина обхода: %4, сформировано записей: %5.
		|	Результаты расчета цепочек: %6'");
	
	НомерСтроки = 0;
	
	Для Каждого ТекущаяСтрока Из ПараметрыРасчета.РаспределениеПартий.СтатистикаРасчета Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		ОписаниеРезультатов = "";
		
		Для Каждого КлючИЗначение Из ТекущаяСтрока.РезультатыОбхода Цикл
			ОписаниеРезультатов = ОписаниеРезультатов + ?(ОписаниеРезультатов = "", "", ", ")
				+ """" + КлючИЗначение.Ключ + """ - " + СокрЛП(КлючИЗначение.Значение);
		КонецЦикла;
		
		ОписаниеРасчета = ОписаниеРасчета
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонОписаниеГруппыПодграфов,
				СокрЛП(НомерСтроки),
				СокрЛП(ТекущаяСтрока.КоличествоПодграфов),
				СокрЛП(ТекущаяСтрока.КоличествоУзлов),
				СокрЛП(ТекущаяСтрока.МаксимальнаяГлубина),
				СокрЛП(ТекущаяСтрока.СформированоЗаписей),
				?(ОписаниеРезультатов = "", НСтр("ru='не выполнялся (нет цепочек)'"), ОписаниеРезультатов));
		
	КонецЦикла;
	
	ПротоколРасчетаПартийИСебестоимости.ДополнительнаяИнформация(ПараметрыРасчета, ОписаниеРасчета);
	
	ПараметрыРасчета.РаспределениеПартий.Удалить("СтатистикаРасчета");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область РаспределениеПриходовНаРасходы

// Заполняет расчетные партии из данных для расчета
// Поля прямого обращения: ТипЗаписи, ВидДвижения, Регистратор
// Обращения к остальным полям происходит через структуру ОписаниеДвижений
//
Процедура РаспределитьПриходыНаРасходы(ПараметрыРасчета, ОписаниеДвижений, ДанныеДляРасчета, РасчетныеПартии)
	
	ПредыдущееДвижение = Неопределено;
	ИнвертироватьПоказатели = Ложь;
	// Буфер партий по аналитике - очередь копий партионных движений
	Приходы = Новый Структура("Очередь, Указатель, УказательРестарта", Новый Массив, 0, -1);
	// Буфер потреблений по аналитике - очередь копий движений потребления
	Расходы = Новый Структура("Очередь, Указатель, УказательРестарта", Новый Массив, 0, -1);
	
	Для Каждого Движение Из ДанныеДляРасчета Цикл
		
		Если НЕ ПоляЗаписейРавны(ПредыдущееДвижение, Движение, ОписаниеДвижений.КлючиСравнения) Тогда
			// Сменилась аналитика - сбрасываем оставшийся буфер потреблений (партии не подобраны) в расчетные партии
			Расходы.Указатель = ?(Расходы.УказательРестарта > 0, Расходы.УказательРестарта, Расходы.Указатель);
			Пока Расходы.Указатель < Расходы.Очередь.Количество() Цикл
				Расход = Расходы.Очередь[Расходы.Указатель];
				Если Расход[ОписаниеДвижений.БазисРасхода] > 0 Тогда
					// перемещения, что приведет к очистке документа поступления у перемещения.
					Распределение = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию(ПараметрыРасчета, ОписаниеДвижений.Контекст, Распределение, Расход, Неопределено);
					ИнвертироватьПоказатели(Распределение, ОписаниеДвижений.Показатели, ИнвертироватьПоказатели);
				КонецЕсли;
				Расходы.Указатель = Расходы.Указатель + 1;
			КонецЦикла;
			
			// инициализируемся
			ПредыдущееДвижение = Движение;
			Приходы.Очередь.Очистить();
			Приходы.Указатель = 0;
			Приходы.УказательРестарта = -1;
			Расходы.Очередь.Очистить();
			Расходы.Указатель = 0;
			Расходы.УказательРестарта = -1;
		КонецЕсли;
		
		ЭтоПриход = (Движение.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Остаток)
			ИЛИ (Движение.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Партия)
			ИЛИ (Движение.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Перемещение)
			ИЛИ (Движение.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Сторно)
			ИЛИ (Движение.ТипЗаписи = Перечисления.ТипыЗаписейПартий.СторноВозвратНаДругойСклад);
		
		ИнвертироватьПоказатели = (ЭтоПриход И Движение[ОписаниеДвижений.БазисПрихода] < 0)
			ИЛИ (НЕ ЭтоПриход И Движение[ОписаниеДвижений.БазисРасхода] < 0);
		
		Если ЭтоПриход Тогда
			Приход = КопияЗаписиСтруктурой(Движение, ОписаниеДвижений.ПоляРасчета);
			ИнвертироватьПоказатели(Приход, ОписаниеДвижений.Показатели, ИнвертироватьПоказатели);
			// если ранее пропустили расход, то текущий приход начинаем распределять на него
			Если Расходы.УказательРестарта >= 0 Тогда
				Расходы.Указатель = Расходы.УказательРестарта;
				Расходы.УказательРестарта = -1;
			КонецЕсли;
			// покрываем расходы из буфера расходов по очереди (FIFO)
			Пока Приход[ОписаниеДвижений.БазисПрихода] > 0 И Расходы.Указатель < Расходы.Очередь.Количество() Цикл
				Расход = Расходы.Очередь[Расходы.Указатель];
				// приход, сделанный по расходу не может быть распределен на этот расход
				Если Расход.Регистратор = Приход[ОписаниеДвижений.КлючРасхода] Тогда
					Расходы.УказательРестарта = Расходы.Указатель;
					Расходы.Указатель = Расходы.Указатель + 1;
					Продолжить;
				КонецЕсли;
				// добавляем в партии покрытую часть расхода
				Если Расход[ОписаниеДвижений.БазисРасхода] > 0 Тогда
					Распределение = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию(ПараметрыРасчета, ОписаниеДвижений.Контекст, Распределение, Расход, Приход);
					ИнвертироватьПоказатели(Распределение, ОписаниеДвижений.Показатели, ИнвертироватьПоказатели);
				КонецЕсли;
				// если расход покрыт, то ставим на покрытие следующий расход
				Если Расход[ОписаниеДвижений.БазисРасхода] <= 0 Тогда
					Расходы.Указатель = Расходы.Указатель + 1;
				КонецЕсли;
			КонецЦикла;
			// если приход еще остался, то регистрируемся в буфере приходов
			Если Приход[ОписаниеДвижений.БазисПрихода] > 0 Тогда
				Приходы.Очередь.Добавить(Приход);
			КонецЕсли;
			// приход надо добавить в партии - код должен быть здесь для сохранения сортировки
			Если Движение.ТипЗаписи <> Перечисления.ТипыЗаписейПартий.Остаток Тогда
				Распределение = РасчетныеПартии.Добавить();
				ЗаполнитьРасчетнуюПартию(ПараметрыРасчета, ОписаниеДвижений.Контекст, Распределение, Движение, Неопределено);
				ИнвертироватьПоказатели(Распределение, ОписаниеДвижений.Показатели, ИнвертироватьПоказатели);
			КонецЕсли;
		КонецЕсли;
		
		Если Движение.ТипЗаписи = Перечисления.ТипыЗаписейПартий.Потребление Тогда
			Расход = КопияЗаписиСтруктурой(Движение, ОписаниеДвижений.ПоляРасчета);
			ИнвертироватьПоказатели(Расход, ОписаниеДвижений.Показатели, ИнвертироватьПоказатели);
			// если ранее пропустили приход, то текущий расход начинаем потреблять с него
			Если Приходы.УказательРестарта >= 0 Тогда
				Приходы.Указатель = Приходы.УказательРестарта;
				Приходы.УказательРестарта = -1;
			КонецЕсли;
			// списываем приходы из буфера приходов по очереди (FIFO)
			Пока Расход[ОписаниеДвижений.БазисРасхода] > 0 И Приходы.Указатель < Приходы.Очередь.Количество() Цикл
				Приход = Приходы.Очередь[Приходы.Указатель];
				// приход, сделанный по расходу не может быть распределен на этот расход
				Если Расход.Регистратор = Приход[ОписаниеДвижений.КлючРасхода] И Расход.Регистратор <> Неопределено Тогда
					Приходы.УказательРестарта = Приходы.Указатель;
					Приходы.Указатель = Приходы.Указатель + 1;
					Продолжить;
				КонецЕсли;
				// добавляем в партии покрытую часть расхода
				Если Приход[ОписаниеДвижений.БазисПрихода] > 0 Тогда
					Распределение = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию(ПараметрыРасчета, ОписаниеДвижений.Контекст, Распределение, Расход, Приход);
					ИнвертироватьПоказатели(Распределение, ОписаниеДвижений.Показатели, ИнвертироватьПоказатели);
				КонецЕсли;
				// если приход потреблен, то выбираем следующий приход
				Если Приход[ОписаниеДвижений.БазисПрихода] <= 0 Тогда
					Приходы.Указатель = Приходы.Указатель + 1;
				КонецЕсли;
			КонецЦикла;
			// если расход еще остался, то регистрируемся в буфере расходов
			Если Расход[ОписаниеДвижений.БазисРасхода] > 0 Тогда
				Расходы.Очередь.Добавить(Расход);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#Область ВспомогательныеМетоды

Функция ПоляЗаписейРавны(Запись1, Запись2, ПереченьКлючей)
	
	Если Запись1 = Неопределено Или Запись2 = Неопределено Тогда
		Возврат (Запись1 = Запись2);
	КонецЕсли;
	
	Для Каждого Поле Из Новый Структура(ПереченьКлючей) Цикл
		Если Запись1[Поле.Ключ] <> Запись2[Поле.Ключ] Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция КопияЗаписиСтруктурой(Запись, ПереченьПолей)
	
	КопияСтрокиСтруктурой = Новый Структура(ПереченьПолей);
	ЗаполнитьЗначенияСвойств(КопияСтрокиСтруктурой, Запись);
	
	Возврат КопияСтрокиСтруктурой;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ТрансляцияПартий

// Особый случай распределения партий, когда непосредственно распределение выполнять не требуется,
// т.к. все выбранные данные имеют признак РасчетПартий = Истина.
// Нужно просто переместить содержимое временной таблицы Данные в таблицу-приемник.

Процедура ИнициализироватьТрансляциюПартий(ПараметрыРасчета, ТаблицаДляТрансляцииПартий = Неопределено, ИмяРегистра = "",
			ИмяВременнойТаблицы = "", ПоляИндексирования = "")
	
	// Подготовим структуру ОписаниеДвижений.
	ОписаниеДвижений = ОписаниеДвижений(
		"ТрансляцияПартий",
		?(ЗначениеЗаполнено(ИмяРегистра), ИмяРегистра, ""),
		"",
		"",
		"",
		"",
		"",
		"",
		"");
	
	Если НЕ ЗначениеЗаполнено(ИмяРегистра) Тогда
		ОписаниеДвижений.Вставить("ИмяВременнойТаблицы", ИмяВременнойТаблицы);
		ОписаниеДвижений.Вставить("ПоляИндексирования",  ПоляИндексирования);
	КонецЕсли;
	
	ОписаниеДвижений.Вставить("РаспределениеНеТребуется", Истина);
	
	// Подготовим структуру РаспределениеПартий.
	ПараметрыРасчета.Вставить("РаспределениеПартий", Новый Структура);
	
	ПараметрыРасчета.РаспределениеПартий.Вставить("РасчетныеПартии", 	  ТаблицаДляТрансляцииПартий);
	ПараметрыРасчета.РаспределениеПартий.Вставить("ОписаниеДвижений", 	  ОписаниеДвижений);
	ПараметрыРасчета.РаспределениеПартий.Вставить("ОписаниеЦепочек", 	  Новый Соответствие); // не используется
	ПараметрыРасчета.РаспределениеПартий.Вставить("НезаписываемыеДанные", ОписаниеНезаписываемыхДанных(Ложь)); // не используется
	
КонецПроцедуры

#КонецОбласти


#Область УниверсальныеПроцедурыРаботыСЗапросами

// Устанавливает общие параметры запроса из параметров расчета.
// Следует использовать для идентичности имен и значений параметров во всех запросах.
//
Процедура ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета, ИспользоватьОбщийМенеджерВТ = Истина)
	
	// Общие параметры
	УниверсальныеМеханизмыПартийИСебестоимости.ИнициализироватьСвойстваЗапроса(
		Запрос,
		ПараметрыРасчета,
		ИспользоватьОбщийМенеджерВТ);
		
	// Отборы по типам запасов
	Запрос.УстановитьПараметр("СобственныеТипыЗапасов", УниверсальныеМеханизмыПартийИСебестоимости.СобственныеТипыЗапасов());
	
	// Параметры для запроса Документы.РаспределениеПрочихЗатрат.ТекстЗапросаПоступилоПрочихРасходов()
	Запрос.УстановитьПараметр("ПоВсемОрганизациям",   Ложь);
	Запрос.УстановитьПараметр("ПоВсемПодразделениям", Истина);
	Запрос.УстановитьПараметр("СписокПодразделений",  Неопределено);
	
КонецПроцедуры

Функция ТекстОбъединениеЗапросов()
	
	ТекстОбъединение = "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|";
	
	Возврат ТекстОбъединение;
	
КонецФункции

Функция ТекстРазделениеЗапросов()
	
	ТекстРазделение = "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|";
	
	Возврат ТекстРазделение;
	
КонецФункции

#КонецОбласти

#Область УниверсальныеПроцедурыРаботыСДвижениями

// Добавляет новую строку в таблицу движений указанного регистра и заполняет служебные поля.
// Сделана экспортной для вызова из модуля универсальных механизмов расчетов.
//
Функция ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения,
			КопируемыеПоля = Неопределено, СлужебныеПоля = Неопределено) Экспорт
	
	ОписаниеРегистра = ПараметрыРасчета.Движения[ИмяРегистра];
	ЭтоРегистрСебестоимости = (ОписаниеРегистра.ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя);
	
	// Добавим запись универсальной процедурой, а потом дозаполним поля, относящиеся только к расчету партий
	Запись = УниверсальныеМеханизмыПартийИСебестоимости.ДобавитьЗаписьВТаблицуДвижений(
		ПараметрыРасчета,
		ОписаниеРегистра,
		ДанныеДвижения,
		КопируемыеПоля);
	
	Если ОписаниеРегистра.ЕстьРасчетНеЗавершен И ЗначениеЗаполнено(СлужебныеПоля) Тогда
		
		// Поле РасчетНеЗавершен формируется в УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьРаспределенныеПартии()
		ЗаполнитьЗначенияСвойств(Запись, СлужебныеПоля);
		
	КонецЕсли;
	
	Если ЭтоРегистрСебестоимости И ПараметрыРасчета.ЗаполняютсяПартииВСебестоимости Тогда
		
		// Заполним поле РасчетПартий для записи регистра СебестоимостьТоваров:
		// - на этапе заполнения партий себестоимости дозаполняются поля первичных движений документов
		//   для таких движений признак РасчетПартий остается равным Ложь
		// - на этом же этапе также формируются новые записи, которые являются расчетными (не первичными);
		//	 признак расчетной партии определяется следующими условиями (по ИЛИ)
		// 		= тип записи движений не используется в макете регистра себестоимости (т.е. движение точно не может быть первичным)
		// 		= для записи явно указано, что она является расчетной (установлен признак ЭтоТочноРасчетноеДвижение)
		
		Запись.РасчетПартий =
			ДанныеДвижения.ЭтоТочноРасчетноеДвижение
			ИЛИ УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ЭтоТолькоРасчетныйТипЗаписи(Запись.ТипЗаписи);
		
	КонецЕсли;
	
	// Если регистратор не заполнен, то запомним информацию об ошибке
	Если НЕ ЗначениеЗаполнено(Запись.Регистратор) Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеДвижения.Регистратор) Тогда
			// Ошибка в запросах - не заполнено обязательное поле Регистратор.
			ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не заполнено свойство Регистратор в данных для формирования движений по регистру ""%1""'"),
				ИмяРегистра);
		Иначе
			// Ошибка в метаданных - документ не является регистратором для данного регистра.
			ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Документ ""%1"" не может иметь движений по регистру ""%2""'"),
				СокрЛП(ДанныеДвижения.Регистратор),
				ИмяРегистра);
		КонецЕсли;
		
		ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаФормированияДвиженийПоРегистрам,
			ТекстДляПротокола);
		
		Если ОписаниеРегистра.ЕстьОрганизация Тогда
			ОрганизацияСПроблемой = ДанныеДвижения.Организация;
		ИначеЕсли ОписаниеРегистра.ЕстьАналитикаПартнеров Тогда
			ОрганизацияСПроблемой = ПараметрыРасчета.ОрганизацияПоАналитикеПартнеров.Получить(ДанныеДвижения.АналитикаУчетаПоПартнерам);
		Иначе
			ОрганизацияСПроблемой = Неопределено;
		КонецЕсли;
		
		УниверсальныеМеханизмыПартийИСебестоимости.ЗарегистрироватьПроблемуВыполненияРасчета(
			ПараметрыРасчета,
			ОрганизацияСПроблемой,
			НСтр("ru='При формировании движений диагностированы ошибки'"),
			ТекстДляПротокола,
			ДанныеДвижения.Регистратор);
		
	КонецЕсли;
	
	Возврат Запись;
	
КонецФункции

// Обертка для универсальной процедуры записи движений.
//
Процедура ЗаписатьДвиженияПоРегистру(ПараметрыРасчета, ИсходныеДанные, МенеджерРегистра)
	
	Попытка
		УниверсальныеМеханизмыПартийИСебестоимости.ЗаписатьДвиженияПоРегистру(
			ИсходныеДанные,
			МенеджерРегистра,
			ПараметрыРасчета.ОграниченияВыборки.КоличествоЗаписейВНЗ);
	Исключение
		
		// Информацию об ошибке добавим в протокол расчета, в механизме закрытия месяца ошибки уже должны быть зарегистрированы.
		ТекстДляПротокола = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		ПротоколРасчетаПартийИСебестоимости.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаЗаписиДвиженийПоРегистрам,
			ТекстДляПротокола);
			
		ВызватьИсключение ТекстДляПротокола;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область УниверсальныеПроцедурыОписанияДанныхМеханизма

// Возвращает перечень объектов метаданных, на основании данных которых выполняется расчет партий.
// В перечень не включаются объекты, которые являются одновременно и исходящими данными механизмов расчета партий и себестоимости.
//
// Параметры:
//	ВходящиеДанные - Соответствие - уже инициализированное хранилище для описания входящих данных
//	ТолькоТребующиеПерерасчета - Булево - если установлен, то будет возвращен перечень только тех данных,
//		изменение которых влечет за собой необходимость перерасчета партий и себестоимости
//		При изменении этих данных должна создаваться запись в регистре сведений ЗаданияКРасчетуСебестоимости.
//
// Возвращаемое значение:
//	Соответствие - Ключ - ОбъектМетаданных
//
Функция ВходящиеДанныеМеханизма(ВходящиеДанные = Неопределено, ТолькоТребующиеПерерасчета = Ложь) Экспорт
	
	Если ВходящиеДанные = Неопределено Тогда
		ВходящиеДанные = Новый Соответствие;
	КонецЕсли;
	
	Если ТолькоТребующиеПерерасчета Тогда
		Значение = Истина; // чтобы можно было проверить вхождение объекта метаданных в это соответствие
	Иначе
		Значение = Неопределено;
	КонецЕсли;
	
	Если НЕ ТолькоТребующиеПерерасчета Тогда 
		
		ВходящиеДанные.Вставить(Метаданные.Документы.ЗаказНаПеремещение, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ЗаказНаСборку, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ЗаказПоставщику, Значение);
		
		ВходящиеДанные.Вставить(Метаданные.Документы.ВнутреннееПотреблениеТоваров, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ПриобретениеТоваровУслуг, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ПрочееОприходованиеТоваров, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ТаможеннаяДекларацияИмпорт, Значение);
		
		
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаНоменклатуры, Значение);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ЦеныНоменклатуры, Значение);
		
		
		ВходящиеДанные.Вставить(Метаданные.ПланыВидовХарактеристик.СтатьиАктивовПассивов, Значение);
		ВходящиеДанные.Вставить(Метаданные.ПланыВидовХарактеристик.СтатьиРасходов, Значение);
		
		ВходящиеДанные.Вставить(Метаданные.Справочники.ВидыЗапасов, Значение);
		ВходящиеДанные.Вставить(Метаданные.Справочники.КлючиАналитикиУчетаНоменклатуры, Значение);
		ВходящиеДанные.Вставить(Метаданные.Справочники.КлючиАналитикиУчетаПартий, Значение);
		ВходящиеДанные.Вставить(Метаданные.Справочники.Назначения, Значение);
		ВходящиеДанные.Вставить(Метаданные.Справочники.Номенклатура, Значение);
		ВходящиеДанные.Вставить(Метаданные.Справочники.Склады, Значение);
		ВходящиеДанные.Вставить(Метаданные.Справочники.СтруктураПредприятия, Значение);
		
		
	КонецЕсли;
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДетализацияПартийТоваровДляНДСиУСН, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ЗаказыНаПеремещение, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ЗаказыНаСборку, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ЗаказыПоставщикам, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.МатериалыИРаботыВПроизводстве, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизаций, Значение);
	
	
	// Добавим регистры партионного учета версии 2.1 (используются для формирования начальных остатков для версии 2.2)
	НеиспользуемыеДанныеМеханизмаВерсии21(ВходящиеДанные, Значение);
	
	Возврат ВходящиеДанные;
	
КонецФункции

// Возвращает перечень регистров, обслуживаемых механизмом расчета партий.
//
// Возвращаемое значение:
//	Соответствие - Ключ - ОбъектМетаданных
//
Функция ИсходящиеДанныеМеханизма(ИсходящиеДанные = Неопределено) Экспорт
	
	// Перечень метаданных регистров, по которым формируются движения по партиям.
	Если ИсходящиеДанные = Неопределено Тогда
		ИсходящиеДанные = Новый Соответствие;
	КонецЕсли;
	
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДетализацияПартийТоваровДляНДСиУСН, 		Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы,		Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.МатериалыИРаботыВПроизводстве, 			Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов, 					Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров, 					Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж, 			Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.НДСПредъявленный, 						Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы, 							Истина);
	
	Возврат ИсходящиеДанные;
	
КонецФункции

// Возвращает перечень регистров партионного учета версии 2.1, неиспользуемых в версии 2.2
//
Функция НеиспользуемыеДанныеМеханизмаВерсии21(НеиспользуемыеДанные = Неопределено, Значение = Истина) Экспорт
	
	Если НеиспользуемыеДанные = Неопределено Тогда
		НеиспользуемыеДанные = Новый Соответствие;
	КонецЕсли;
	
	НеиспользуемыеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск, 					Значение);
	НеиспользуемыеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат, 			Значение);
	НеиспользуемыеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров, 	Значение);
	НеиспользуемыеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций, 				Значение);
	НеиспользуемыеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию, 		Значение);
	
	Возврат НеиспользуемыеДанные;
	
КонецФункции

// Возвращает название данного механизма и его номер версии.
//
Функция ТекущаяВерсияМеханизма() Экспорт
	Возврат НСтр("ru='Партионный учет, версия 2.2'");
КонецФункции

#КонецОбласти


#Область Тестирование

Функция ТестТекстОписание(ИмяМетода) Экспорт
	
	Если ИмяМетода = "ТекстОписаниеСебестоимостьТоваров" Тогда
		Возврат ТекстОписаниеДанныхДляПартийТоваров();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеПартийНДС" Тогда
		Возврат ТекстОписаниеДанныхДляПартийНДСиУСН();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеПартийПрочих" Тогда
		Возврат ТекстОписаниеДанныхДляПартийПрочих();
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Функция ТестДанныеДляПартий(ИмяМетода, НачалоПериода, КонецПериода, Организация = Неопределено) Экспорт
	Перем ПараметрыРасчета;
	Перем ПараметрыОтладки;
	Перем Таблица;
	
	// Инициализация параметров запуска
	МассивОрганизаций = УниверсальныеМеханизмыПартийИСебестоимости.СвязиОрганизацийПоСхемеИнтеркампани(КонецПериода, Организация);
	ПараметрыЗапуска = Новый Структура("Дата, МассивОрганизаций", НачалоПериода, МассивОрганизаций);
	
	// Инициализация параметров отладки
	Отладка = Новый Структура("РасчетОдногоЭтапа", Ложь);
	ПараметрыОтладки = Новый Структура("Отладка", Отладка);
	
	// Инициализация параметров расчета
	ИнициализироватьПараметрыРасчетаПартий(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки);
	
	// Получение контекстных данных
	Если ИмяМетода = "ДанныеДляСебестоимостиТоваров"
	ИЛИ ИмяМетода = "ДанныеДляПартийНДС"
	ИЛИ ИмяМетода = "ДанныеДляПартийПрочих" Тогда
	КонецЕсли;
	Если ИмяМетода = "ДанныеДляСебестоимостиТоваров" Тогда
		УниверсальныеМеханизмыПартийИСебестоимости.ВыполняетсяЗаполнениеПартийВРегистреСебестоимостьТоваров(ПараметрыРасчета, Истина);
		ПолучитьДанныеДляПартийТоваров(ПараметрыРасчета);
	ИначеЕсли ИмяМетода = "ДанныеДляПартийНДС" Тогда
		ЗаполнениеПартийВРегистреСебестоимостьТоваров(ПараметрыРасчета);
		РаспределениеДопРасходовМеждуПартиямиИТоварами(ПараметрыРасчета);
		Если ПараметрыРасчета.ФО.РаспределениеДопРасходовПоВыбывшимТоварам Тогда
			СписаниеРасходовНаВыбытиеТоваровПрошлыхПериодов(ПараметрыРасчета);
		КонецЕсли;
		
		ПолучитьДанныеДляПартийНДС(ПараметрыРасчета);
	ИначеЕсли ИмяМетода = "ДанныеДляПартийПрочих" Тогда
		ЗаполнениеПартийВРегистреСебестоимостьТоваров(ПараметрыРасчета);
		Таблица = ПолучитьДанныеДляДопРасходов(ПараметрыРасчета);
		
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Если Таблица = Неопределено Тогда
		Таблица = УниверсальныеМеханизмыПартийИСебестоимости.ВыгрузитьВременнуюТаблицу(ПараметрыРасчета, "Данные");
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

Процедура ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий, ПараметрыРасчета)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ
	|	Данные
	|ИЗ
	|	&ДанныеДляПартий КАК ДД
	|ИНДЕКСИРОВАТЬ ПО
	|	ДД.К
	|");
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДанныеДляПартий", ДанныеДляПартий);
	Запрос.Выполнить();
КонецПроцедуры

Функция ВыгрузитьИзВременнойТаблицы(МВТ)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Данные КАК ДД
	|");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ТестРасчетныеПартии(ИмяМетода, НачалоПериода, КонецПериода, Организация, ДанныеДляПартий, ВнутренниеДанные = Неопределено) Экспорт
	Перем ПараметрыРасчета;
	Перем ПараметрыОтладки;
	
	// Инициализация параметров запуска
	МассивОрганизаций = УниверсальныеМеханизмыПартийИСебестоимости.СвязиОрганизацийПоСхемеИнтеркампани(КонецПериода, Организация);
	ПараметрыЗапуска = Новый Структура("Дата, МассивОрганизаций", НачалоПериода, МассивОрганизаций);
	
	// Инициализация параметров отладки
	Отладка = Новый Структура("РасчетОдногоЭтапа", Истина);
	ПараметрыОтладки = Новый Структура("Отладка", Отладка);
	
	// Инициализация параметров расчета
	ИнициализироватьПараметрыРасчетаПартий(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки);
	
	ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий, ПараметрыРасчета);
	
	Если ИмяМетода = "РасчетныеПартииСебестоимостиТоваров" Тогда
		ИнициализироватьРаспределениеПартий(
			ПараметрыРасчета,
			ТаблицаДляРаспределенияПартийТоваров(ПараметрыРасчета),
			ОписаниеЦепочекПартийТоваров(ПараметрыРасчета),
			ОписаниеДвиженийПартийТоваров(ПараметрыРасчета),
			ОписаниеНезаписываемыхПартийТоваров(ПараметрыРасчета));
	ИначеЕсли ИмяМетода = "РасчетныеПартииНДС" Тогда
		ИнициализироватьРаспределениеПартий(
			ПараметрыРасчета,
			ТаблицаДляРаспределенияПартийНДС(ПараметрыРасчета),
			ОписаниеЦепочекПартийНДС(ПараметрыРасчета),
			ОписаниеДвиженийПартийНДС(ПараметрыРасчета),
			ОписаниеНезаписываемыхПартийНДС(ПараметрыРасчета));
	ИначеЕсли ИмяМетода = "РасчетныеПартииПрочих" Тогда
		РасчетныеПартии = СформироватьПартииПрочихРасходов(ПараметрыРасчета, ДанныеДляПартий);
		Возврат РасчетныеПартии;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	// Все данные из РасчетныеПартии будут не только только помещаться в таблицы регистров, но и накапливаться в ВсеРасчетныеПартии.
	// Если этого не делать, то в РасчетныеПартии по окончании расчета будет только последняя порция данных (в больших или в клиент-серверных базах).
	ПараметрыРасчета.РаспределениеПартий.Вставить(
		"ВсеРасчетныеПартии",
		ПараметрыРасчета.РаспределениеПартий.РасчетныеПартии.Скопировать());
	
	ПостроитьЦепочкиДвижений(ПараметрыРасчета);
	РассчитатьПартииПоЦепочкам(ПараметрыРасчета);
	
	УниверсальныеМеханизмыПартийИСебестоимости.КэшироватьРаспределенныеПартии(ПараметрыРасчета, Ложь);
	
	ВнутренниеДанные = ПараметрыРасчета.МенеджерВременныхТаблиц;
	ДанныеДляПартий = ВыгрузитьИзВременнойТаблицы(ВнутренниеДанные);
	
	Возврат ПараметрыРасчета.РаспределениеПартий.ВсеРасчетныеПартии;
	
КонецФункции

Функция ТестРассчитать(ИмяМетода, НачалоПериода, КонецПериода, Организация = Неопределено) Экспорт
	Перем ПараметрыРасчета;
	Перем ПараметрыОтладки;
	
	// Инициализация параметров запуска
	МассивОрганизаций = УниверсальныеМеханизмыПартийИСебестоимости.СвязиОрганизацийПоСхемеИнтеркампани(КонецПериода, Организация);
	ПараметрыЗапуска = Новый Структура("Дата, МассивОрганизаций", НачалоПериода, МассивОрганизаций);
	
	// Инициализация параметров отладки
	Отладка = Новый Структура("РасчетОдногоЭтапа", Истина);
	ПараметрыОтладки = Новый Структура("Отладка", Отладка);
	
	// Инициализация параметров расчета
	ИнициализироватьПараметрыРасчетаПартий(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки);
	
	Если ИмяМетода = "РассчитатьСебестоимостьТоваров" Тогда
		ЗаполнениеПартийВРегистреСебестоимостьТоваров(ПараметрыРасчета);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	// Записываем сформированные движения и завершаем расчет периода
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаписатьСформированныеДвижения(
		ПараметрыРасчета,
		ПараметрыОтладки.ПротоколыРасчета);
	
	Возврат Неопределено;
КонецФункции


Функция ЭтапыСВозможностьюВыгрузкиДанныхВФайлы() Экспорт
	
	СписокЭтапов = Новый СписокЗначений;
	
	СписокЭтапов.Добавить("РаспределениеТрудозатрат");
	СписокЭтапов.Добавить("РаспределениеНоменклатурыНаПроизводство");
	СписокЭтапов.Добавить("РаспределениеНоменклатурыНаВыпуск");
	СписокЭтапов.Добавить("РаспределениеМатериаловИРаботПоБазе");
	СписокЭтапов.Добавить("РаспределениеМатериаловМеждуОстаткомНЗПиВыходнымиИзделиями");
	СписокЭтапов.Добавить("ЗаполнениеПартийВРегистреСебестоимостьТоваров");
	СписокЭтапов.Добавить("ЗаполнениеПартийВРегистреВыручкаИСебестоимостьПродаж");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляУчетаНДСиУСН");
	СписокЭтапов.Добавить("РаспределитьДолиПроизводственныхРасходов");
	
	Возврат СписокЭтапов;
	
КонецФункции

#КонецОбласти

#КонецОбласти
