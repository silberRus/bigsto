Функция ЭтоПроблемноеМЗ(МЗ) Экспорт
		
	ДокументОснование=МЗ.ДокументОснование;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказКлиента") тогда
		Если ДокументОснование.Товары.Найти(МЗ.ДатаДоставки,"ДатаОтгрузки")=Неопределено тогда
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
		Если НачалоДня(ДокументОснование.Дата)<>НачалоДня(МЗ.ДатаДоставки)тогда
			Возврат Истина;
		КонецЕсли;	
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") тогда
		Если ДокументОснование.Товары.Найти(МЗ.ДатаДоставки,"ДатаПоступления")=Неопределено тогда
			Возврат Истина;
		КонецЕсли;	
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") тогда
		Если НачалоДня(ДокументОснование.Дата)<>НачалоДня(МЗ.ДатаДоставки)тогда
			Возврат Истина;
		КонецЕсли;	
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.МегаЛогист_МаршрутноеЗадание") тогда
	КонецЕсли;
	
	Возврат Ложь
	
КонецФункции

Функция ПолучитьВесОбъем(ДокументОснование,ДатаДоставки)Экспорт
	
	Вес=0;
	Объем=0;
	
	Структура=Новый Структура();
	Структура.Вставить("Вес",Вес);
	Структура.Вставить("Объем",Объем);

	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.МегаЛогист_МаршрутноеЗадание") тогда
		Док=ДокументОснование.ДокументОснование;
	иначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") тогда
		Док=ДокументОснование.ЗаказНаПеремещение;	
	иначе
		Док=ДокументОснование;	
	КонецЕсли;
	
	Если Док=Неопределено тогда
		Возврат Структура;
	КонецЕсли;
	
	Если Док.Метаданные().ТабличныеЧасти.Найти("Товары") <> Неопределено Тогда
		Для Каждого СтрокаТовара из Док.Товары цикл
			
			Если ТипЗнч(Док) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
				Если СтрокаТовара.Отменено тогда
					Продолжить;
				КонецЕсли;
				Если СтрокаТовара.ДатаОтгрузки<>ДатаДоставки тогда
					Продолжить;
				КонецЕсли;
			ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				Если Док.Дата<>ДатаДоставки тогда
					Продолжить;
				КонецЕсли;	
			ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
				Если СтрокаТовара.Отменено тогда
					Продолжить;
				КонецЕсли;
				Если СтрокаТовара.ДатаПоступления<>ДатаДоставки тогда
					Продолжить;
				КонецЕсли;
			ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
				Если СтрокаТовара.Отменено тогда
					Продолжить;
				КонецЕсли;
				Если СтрокаТовара.НачалоОтгрузки<>ДатаДоставки тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;	
			
			КоличествоКгВЕдиницеИзмеренияВеса = ?(СтрокаТовара.Номенклатура.ВесЕдиницаИзмерения.Знаменатель=0,СтрокаТовара.Номенклатура.ВесЕдиницаИзмерения.Числитель,СтрокаТовара.Номенклатура.ВесЕдиницаИзмерения.Числитель / СтрокаТовара.Номенклатура.ВесЕдиницаИзмерения.Знаменатель);		
			Вес=Вес+?(СтрокаТовара.Номенклатура.ВесЗнаменатель=0,СтрокаТовара.Номенклатура.ВесЧислитель,СтрокаТовара.Номенклатура.ВесЧислитель/СтрокаТовара.Номенклатура.ВесЗнаменатель)*СтрокаТовара.Количество*КоличествоКгВЕдиницеИзмеренияВеса;
			
			ОбъемВЕдиницеИзмеренияВеса = ?(СтрокаТовара.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель=0,СтрокаТовара.Номенклатура.ОбъемЕдиницаИзмерения.Числитель,СтрокаТовара.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / СтрокаТовара.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель);		
			Объем=Объем+?(СтрокаТовара.Номенклатура.ОбъемЗнаменатель=0,СтрокаТовара.Номенклатура.ОбъемЧислитель,СтрокаТовара.Номенклатура.ОбъемЧислитель/СтрокаТовара.Номенклатура.ОбъемЗнаменатель)*СтрокаТовара.Количество*ОбъемВЕдиницеИзмеренияВеса;
			
		КонецЦикла;
	КонецЕсли;	
	
	Структура.Вставить("Вес",Вес);
	Структура.Вставить("Объем",Объем);

	Возврат Структура;
	
КонецФункции

// Функция находит актуальное значение телефона в контакной информации.
//
// Параметры:
//  Объект - СправочникСсылка, объект контактной информации
//
// Возвращаемое значение
//  Строка - представление найденного телефона
//
Функция ПолучитьТелефонИзКонтактнойИнформации(Объект)Экспорт

	Если ЗначениеЗаполнено(Объект) Тогда
	
		Если ТипЗнч(Объект) = Тип("СправочникСсылка.Организации") Тогда
			Окончание = "Организации";
			ВладелецКонтактнойИнформации = Объект;
		ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
			Окончание = "Контрагента";
			ВладелецКонтактнойИнформации = Объект;
		ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Партнеры") Тогда
			Окончание = "Партнера";
			ВладелецКонтактнойИнформации = Объект;
		//Spoon++
		ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			Окончание = "КонтактногоЛица";
			ВладелецКонтактнойИнформации = Объект;
		//Spoon--
		КонецЕсли;

		ВидТелефона = Справочники.ВидыКонтактнойИнформации["Телефон" + Окончание].Ссылка;

		ТабЗн           = ВладелецКонтактнойИнформации.КонтактнаяИнформация.Выгрузить();
		НайденныеСтроки = ТабЗн.НайтиСтроки(Новый Структура("Тип,Вид", Перечисления.ТипыКонтактнойИнформации.Телефон, ВидТелефона));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			Возврат НайденныеСтроки[0].Представление;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции // ПолучитьТелефонИзКонтактнойИнформации()

Функция ПолучитьКонтактноеЛицо(Партнер)Экспорт
	
	Запрос=Новый Запрос();
	Запрос.УстановитьПараметр("Партнер",Партнер);
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	             |	КонтактныеЛицаПартнеров.Ссылка
	             |ИЗ
	             |	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	             |ГДЕ
	             |	КонтактныеЛицаПартнеров.Владелец = &Партнер";
	Результат=Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() тогда
		Возврат Результат.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.КонтактныеЛицаПартнеров.ПустаяСсылка();
	
КонецФункции

// Функция находит актуальное значение адреса в контакной информации.
//
// Параметры:
//  Объект - СправочникСсылка, объект контактной информации
//  ТипАдреса - тип контактной информации
//
// Возвращаемое значение
//  Строка - представление найденного адреса
//
Функция ПолучитьАдресИзКонтактнойИнформации(Объект, ТипАдреса = "") Экспорт

	Если ЗначениеЗаполнено(Объект) Тогда
		
		ВладелецКонтактнойИнформации = Объект;
		ВидАдреса = Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Адрес доставки");
		
		ТабЗн = ВладелецКонтактнойИнформации.КонтактнаяИнформация.Выгрузить();
		
		НайденныеСтроки = ТабЗн.НайтиСтроки(Новый Структура("Тип,Вид", Перечисления.ТипыКонтактнойИнформации.Адрес, ВидАдреса));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			Возврат НайденныеСтроки[0].Представление;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат "";

КонецФункции // ПолучитьАдресИзКонтактнойИнформации()

//Для отчета СКД
Функция ПолучитьВес(ДокументОснование,ДатаДоставки)Экспорт
	
	ВесОбъем=ПолучитьВесОбъем(ДокументОснование,ДатаДоставки);
	Возврат ВесОбъем.Вес;
	
КонецФункции

Функция ПолучитьОбъем(ДокументОснование,ДатаДоставки)Экспорт
	
	ВесОбъем=ПолучитьВесОбъем(ДокументОснование,ДатаДоставки);
	Возврат ВесОбъем.Объем;
	
КонецФункции

Функция ПолучитьВыручкуПоДоставке(МЗ,ДатаДоставки)Экспорт
	
	Если МЗ.Статус<>Перечисления.МегаЛогист_СтатусыМаршрутногоЗадания.Выполнено тогда
		Возврат 0;
	КонецЕсли;
	
	ДокументОснование=МЗ.ДокументОснование;
	
	Выручка=0;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.МегаЛогист_МаршрутноеЗадание") тогда
		Док=ДокументОснование.ДокументОснование;
	иначе
		Док=ДокументОснование;	
	КонецЕсли;
	
	Если Док=Неопределено тогда
		Возврат Выручка;
	КонецЕсли;
	
	Если Док.Метаданные().ТабличныеЧасти.Найти("Товары") <> Неопределено Тогда
		Для Каждого СтрокаТовара из Док.Товары цикл
			
			Если ТипЗнч(Док) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
				Если СтрокаТовара.Отменено тогда
					Продолжить;
				КонецЕсли;
				Если СтрокаТовара.ДатаОтгрузки<>ДатаДоставки тогда
					Продолжить;
				КонецЕсли;
			ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				Если Док.Дата<>ДатаДоставки тогда
					Продолжить;
				КонецЕсли;	
			Иначе
				Продолжить;
			КонецЕсли;	
			
			Выручка=Выручка+СтрокаТовара.СуммаСНДС;			
		КонецЦикла;
	КонецЕсли;	
		
	Возврат Выручка;
	

КонецФункции	

Функция ЭтоСвоевременнаяДоставка(МЗ) Экспорт
	
	Если ЭтоПроблемноеМЗ(МЗ) тогда
		Возврат 0;
	КонецЕсли;	
	
	Если МЗ.ВремяДоставкиФакт>=МЗ.ВремяДоставкиС и МЗ.ВремяДоставкиФакт<=МЗ.ВремяДоставкиПо тогда
		Возврат 1;
	КонецЕсли;	
	
	Возврат 0;
	
КонецФункции

Функция ЭтоНеСвоевременнаяДоставка(МЗ) Экспорт
	
	Если ЭтоПроблемноеМЗ(МЗ) тогда
		Возврат 0;
	КонецЕсли;	
	
	Если МЗ.ВремяДоставкиФакт>=МЗ.ВремяДоставкиС и МЗ.ВремяДоставкиФакт<=МЗ.ВремяДоставкиПо тогда
		Возврат 0;
	КонецЕсли;	
	
	Возврат 1;
	
КонецФункции

Функция КоличествоТочекВРейсе(МЛ) Экспорт
	
	КоличествоТочекВРейсе=0;
	
	Для Каждого СтрокаМЛ из МЛ.МаршрутныеЗадания цикл
		Если НЕ ЭтоПроблемноеМЗ(СтрокаМЛ.МаршрутноеЗадание) тогда
			КоличествоТочекВРейсе=КоличествоТочекВРейсе+1;
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат КоличествоТочекВРейсе
	
КонецФункции

Функция ПолучитьРасходТопливаНа100км(Транспорт) Экспорт
	
	РасходТопливаНа100км=0;
	
	Запрос=Новый Запрос();
	Запрос.УстановитьПараметр("Транспорт",Транспорт);
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	             |	МегаЛогист_ХарактеристикиТранспортныхСредств.РасходТопливаНа100км
	             |ИЗ
	             |	Справочник.МегаЛогист_ХарактеристикиТранспортныхСредств КАК МегаЛогист_ХарактеристикиТранспортныхСредств
	             |ГДЕ
	             |	МегаЛогист_ХарактеристикиТранспортныхСредств.ТранспортноеСредство = &Транспорт";
	Результат=Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() тогда
		РасходТопливаНа100км=Результат.РасходТопливаНа100км;
	КонецЕсли;
	
	Возврат РасходТопливаНа100км;
	
КонецФункции
