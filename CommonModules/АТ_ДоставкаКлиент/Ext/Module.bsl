
Функция Суффикс() Экспорт
	
	Возврат "АТ_Доставка";
	
КонецФункции

Функция текИндекс(Форма) Экспорт
	
	// Возвращает индекс строки на котором стоит курсор
	
	текИнд = -1;
	Таб = Форма[Суффикс() + "Таблица"];
	текИдент = Форма.Элементы[Суффикс() + "Таблица"].ТекущаяСтрока;
	
	Если текИдент <> Неопределено Тогда
		
		текИнд = Таб.Индекс(Таб.НайтиПоИдентификатору(текИдент));
		
	КонецЕсли;
	
	Возврат текИнд;
	
КонецФункции

Процедура ИницилизироватьЗакладкуДоставки(Форма) Экспорт
	
	// Открывает форму и заполняет элементы для создания их в процедуре "ПриСоздании" на сервере
	
	АдресНастроек = Строка(Новый УникальныйИдентификатор);
	ОткрытьФорму("РегистрСведений.АТ_МаршрутДоставки.Форма.Шаблон",, Форма);
	
КонецПроцедуры

Процедура ОбновитьВидимость(Форма) Экспорт
	
	Суффикс 		= Суффикс();
	СписокЭлемент	= Форма.Элементы[Суффикс + "Таблица"];
	ТабКоличество	= Форма[Суффикс + "Таблица"].Количество();
	
	СпособДоставки 	= Форма[Суффикс + "СпособДоставки"];
	ЕстьЗаписи		= текИндекс(Форма) >= 0;
	
	списокСпособов = АТ_ДоставкаСервер.ВидимыеСпсобыПеревозчика();
	
	Форма.Элементы[Суффикс + "ГруппаВсейДоставки"].Видимость 	= ЕстьЗаписи;
	Форма.Элементы[Суффикс + "ГруппаПеревозчик"].Видимость 		= списокСпособов.Найти(СпособДоставки) <> Неопределено;
	Форма.Элементы[Суффикс + "УдалитьДоставку"].Видимость		= ЕстьЗаписи;
	Форма.Элементы[Суффикс + "УдалитьДоставку"].Видимость		= ЕстьЗаписи;
	Форма.Элементы[Суффикс + "ДекорацияСамовывоз"].Видимость	= НЕ ТабКоличество;
	Форма.Элементы[Суффикс + "Таблица"].Видимость				= ТабКоличество;
	Форма.Элементы[Суффикс + "ДекорацияПлатитКлиент"].Видимость	= Форма[Суффикс + "ЗаСчетКлиента"];
	
	СписокЭлемент.ВысотаВСтрокахТаблицы = Макс(2, ТабКоличество);
	
КонецПроцедуры

Процедура ПриНажатииДекорации(Форма, Элемент) Экспорт
	
	Если Элемент.Имя = Суффикс() + "ДекорацияСоздатьАдрес" Тогда
		
		Параметры 	= Новый Структура("РежимВыбора", Истина);
		Получатель 	= Форма.ПолучитьСписокПолучателей()[0];
		
		Если ТипЗнч(Получатель) = Тип("СправочникСсылка.Партнеры") Тогда
			Параметры.Вставить("Партнер", РеквизитыФормы(Форма, "Партнер"));
			Контрагент = РеквизитыФормы(Форма, "Контрагент");
			Если ЗначениеЗаполнено(Контрагент) Тогда
				Параметры.Вставить("Контрагент", Контрагент);
			КонецЕсли;
		Иначе
			Параметры.Вставить("Склад", РеквизитыФормы(Форма, "СкладПолучатель"));
		КонецЕсли;
		
		//Если ЕстьПартнер(Форма) Тогда
		//	Параметры.Вставить("Партнер", РеквизитыФормы(Форма, "Партнер"));
		//	Контрагент = РеквизитыФормы(Форма, "Контрагент");
		//	Если ЗначениеЗаполнено(Контрагент) Тогда
		//		Параметры.Вставить("Контрагент", Контрагент);
		//	КонецЕсли;
		//Иначе
		//	Параметры.Вставить("Склад", РеквизитыФормы(Форма, "СкладПолучатель"));
		//КонецЕсли;
		
		ОткрытьФорму("Справочник.БП_АдресаДоставкиКонтрагентов.ФормаОбъекта",
				Параметры, 
				Форма.Элементы[Суффикс() + "АдресДоставки"],,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры
Процедура НачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	Если Элемент.Имя = Суффикс() + "АдресДоставки" Тогда
		
		ДоставкаТоваровКлиент.ОткрытьФормуВыбораАдресаИОбработатьРезультат(
			    Элемент,
				Форма.Объект,
				Элемент.Имя,
				СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры
Процедура НачалоВыбораПоля(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	Суффикс = Суффикс();
	
	Если Элемент.Имя = Суффикс + "АдресДоставки" Тогда
		
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = АТ_ДоставкаСервер.ПолучитьСписокАдресовДоставок(Форма[Суффикс + "Получатель"]);
		
	ИначеЕсли Элемент.Имя = Суффикс + "АдресДоставкиПеревозчик" Тогда
		
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = АТ_ДоставкаСервер.ПолучитьСписокАдресовДоставок(Форма[Суффикс + "Перевозчик"]);
		
	КонецЕсли;
	
КонецПроцедуры
Процедура АвтоПодборПоля(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) Экспорт
	
	НачалоВыбораПоля(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры
Процедура ПриИзмененииПоля(Форма, Элемент) Экспорт
	
	Суффикс = Суффикс();
	
	Если Элемент.Имя = Суффикс + "АдресДоставки" Тогда
		
		ПриИзмененииАдресаДоставки(Форма);
		
	ИначеЕсли Элемент.Имя = Суффикс + "АдресДоставкиПеревозчик" Тогда
		
		ПриИзмененииЗначенияАдресаДоставки("АдресДоставкиПеревозчик", Форма);
		
	ИначеЕсли Элемент.Имя = Суффикс + "СпособДоставки" Тогда
		
		Форма[Суффикс + "ЗаСчетКлиента"] 			= Ложь;
		Форма[Суффикс + "Перевозчик"] 				= Неопределено;
		Форма[Суффикс + "АдресДоставкиПеревозчик"] 	= Неопределено;
		
	КонецЕсли;
	
	ОбновитьВидимость(Форма);
	Форма.Модифицированность = Истина;
	
КонецПроцедуры
Процедура НажатиеНаКнопку(Форма, Кнопка) Экспорт
	
	Суффикс = Суффикс();
	
	Если Кнопка.Имя = Суффикс + "ДобавитьДоставку" Тогда
		
		Список 		= Форма.ПолучитьВозможныйСписокДоставок();
		Параметры 	= Новый Структура("Форма", Форма);
		Кол			= Список.Количество();
		
		Если Кол = 1 Тогда
			ВыбранаДоставка(Список.Получить(0), Параметры);
		ИначеЕсли Кол Тогда
			Форма.ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ВыбранаДоставка", АТ_ДоставкаКлиент, Параметры), Список, Кнопка);
		Иначе
			ПоказатьПредупреждение(,"Заполните полную информацию в документе, чтобы расчитать маршруты доставок",,"Мало информации");
		КонецЕсли;
				
	ИначеЕсли Кнопка.Имя = Суффикс + "УдалитьДоставку" Тогда
		
		Форма.Модифицированность = Истина;
		
		Таб = Форма[Суффикс + "Таблица"];
		Таб.Удалить(текИндекс(Форма));
		
		Форма[Суффикс + "стИндекс"] = -1;
		
		Форма.ОбновитьРеквизитыДоставки(Таб.Количество() - 1);
		ОбновитьВидимость(Форма);
		
	ИначеЕсли СтрНачинаетсяС(Кнопка.Имя, Суффикс + "ЗаЧейСчет") Тогда
		
		ЗаЧейСчет(Форма[Суффикс + "Комментарий"], Новый Структура("Имя", Сред(Кнопка.Имя, СтрДлина(Суффикс + "ЗаЧейСчет") + 1)), Форма);
		Форма[Суффикс + "Таблица"][текИндекс(Форма)].Комментарий = Форма[Суффикс + "Комментарий"];
		ПриИзмененииПоля(Форма, Форма.Элементы[Суффикс + "Комментарий"]);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииЗначенияАдресаДоставки(ИмяАдреса, Форма)
	
	Суффикс 	= Суффикс();
	ЗонаАдреса 	= АТ_ДоставкаСервер.ОпределитьРеквизитыФормы(Форма[Суффикс + ИмяАдреса], "ЗонаДоставки");
	Если ЗначениеЗаполнено(ЗонаАдреса) Тогда
		Форма[Суффикс + "ЗонаДоставки"] = ЗонаАдреса;
	КонецЕсли;
	
КонецПроцедуры
Процедура ПриИзмененииАдресаДоставки(Форма)
	
	Суффикс = Суффикс();
	ДатаДня = Форма.ПолучитьДатуДоставки();
	
	ВремяРаботы = АТ_ДоставкаСервер.ПолучитьВремяРаботыВЭтотДень(Форма[Суффикс + "АдресДоставки"], ДатаДня);
	Если ВремяРаботы = Неопределено и ЕстьПартнер(Форма) Тогда
		ВремяРаботы = АТ_ДоставкаСервер.ПолучитьВремяРаботыВЭтотДень(РеквизитыФормы(Форма, "Партнер"), ДатаДня);
	КонецЕсли;
	
	ПриИзмененииЗначенияАдресаДоставки("АдресДоставки", Форма);
	
	ЗонаАдреса = АТ_ДоставкаСервер.ОпределитьРеквизитыФормы(Форма[Суффикс + "АдресДоставки"], "ЗонаДоставки");
	Если ЗначениеЗаполнено(ЗонаАдреса) Тогда
		Форма[Суффикс + "ЗонаДоставки"] = ЗонаАдреса;
	КонецЕсли;
	
	Форма[Суффикс + "ВремяДоставкиС"] 	= ?(ВремяРаботы = Неопределено, '00010101', ВремяРаботы.ДатаНачала);
	Форма[Суффикс + "ВремяДоставкиПо"] 	= ?(ВремяРаботы = Неопределено, '00010101', ВремяРаботы.ДатаОкончания);
	
КонецПроцедуры

Процедура ВыбранаДоставка(ВыбЭлемент, ДопПараметры) Экспорт
	
	Если ВыбЭлемент <> Неопределено Тогда
		
		Суффикс = Суффикс();
		Форма 	= ДопПараметры.Форма;
		
		Форма.Модифицированность = Истина;
		
		Форма.ЗапомнитьРеквизитыДоставки(Форма[Суффикс() + "стИндекс"]);
		
		Таб = Форма[Суффикс + "Таблица"];
		НовСтрока = Таб.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, АТ_ДоставкаСервер.ПолучитьЗначенияПоУмолчаниюДляНовойСтроки());
		НовСтрока.Отправитель 	= ВыбЭлемент.Значение.Отправитель;
		НовСтрока.Получатель 	= ВыбЭлемент.Значение.Получатель;
		
		НовИнд = Таб.Количество() - 1;
		Форма.Элементы[Суффикс + "Таблица"].ТекущаяСтрока = Таб.Получить(НовИнд).ПолучитьИдентификатор();
		Форма.ОбновитьРеквизитыДоставки(НовИнд);
		ОбновитьВидимость(Форма);
		
		СписокАдресов = АТ_ДоставкаСервер.ПолучитьСписокАдресовДоставок(НовСтрока.Получатель);
		Если СписокАдресов.Количество() = 1 Тогда
			Форма[Суффикс + "АдресДоставки"] = СписокАдресов[0].Значение;
			ПриИзмененииАдресаДоставки(Форма);
			Форма.ЗапомнитьРеквизитыДоставки(текИндекс(Форма));
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

Процедура ПриАктивизацииСтроки(Форма) Экспорт
	
	текИнд 	= текИндекс(Форма);
	стИнд 	= Форма[Суффикс() + "стИндекс"];
	Если текИнд <> стИнд Тогда
		Форма.ЗапомнитьРеквизитыДоставки(стИнд);
	КонецЕсли;
	
	Форма.ОбновитьРеквизитыДоставки(текИнд);
	ОбновитьВидимость(Форма);
	
	Форма[Суффикс() + "стИндекс"] = текИнд;
	
КонецПроцедуры

Процедура ЗаЧейСчет(СтрокаДопИнформации, Команда, Форма)
	
	//СтрокаДопИнформации = Форма.Объект.ДополнительнаяИнформацияПоДоставке;
		
		Если Команда.Имя = "ДобавитьЗаСчетКлиента" Тогда
			// Наследство предыдущих разработчиков:
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ЗА СЧЕТ КЛИЕНТА>>","<<ЗА СЧЕТ КЛИЕНТА>>");
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ЗА НАШ СЧЕТ>>","<<ЗА СЧЕТ КЛИЕНТА>>");
			Если Найти(СтрокаДопИнформации,"<<ЗА СЧЕТ КЛИЕНТА>>")=0 Тогда
				СтрокаДопИнформации = СтрокаДопИнформации+Символы.ПС+ "<<ЗА СЧЕТ КЛИЕНТА>>";		
			КонецЕсли;
		ИначеЕсли Команда.Имя = "ДобавитьЗаНашСчет" тогда
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ЗА НАШ СЧЕТ>>","<<ЗА НАШ СЧЕТ>>");
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ЗА СЧЕТ КЛИЕНТА>>","<<ЗА НАШ СЧЕТ>>");
			Если Найти(СтрокаДопИнформации,"<<ЗА НАШ СЧЕТ>>")=0 Тогда
				СтрокаДопИнформации = СтрокаДопИнформации+Символы.ПС+ "<<ЗА НАШ СЧЕТ>>";		
			КонецЕсли;
		ИначеЕсли Команда.Имя = "ДобавитьДоТерминалаТК" тогда
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ДО ТЕРМИНАЛА ТК>>","<<ДО ТЕРМИНАЛА ТК>>");
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ДО ДВЕРЕЙ>>","<<ДО ТЕРМИНАЛА ТК>>");
			Если Найти(СтрокаДопИнформации,"<<ДО ТЕРМИНАЛА ТК>>")=0 Тогда
				СтрокаДопИнформации = СтрокаДопИнформации+Символы.ПС+ "<<ДО ТЕРМИНАЛА ТК>>";		
			КонецЕсли;
		ИначеЕсли Команда.Имя = "ДобавитьДоДверей" тогда
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ДО ДВЕРЕЙ>>","<<ДО ДВЕРЕЙ>>");
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ДО ТЕРМИНАЛА ТК>>","<<ДО ДВЕРЕЙ>>");
			Если Найти(СтрокаДопИнформации,"<<ДО ДВЕРЕЙ>>")=0 Тогда
				СтрокаДопИнформации = СтрокаДопИнформации+Символы.ПС+ "<<ДО ДВЕРЕЙ>>";		
			КонецЕсли;
		ИначеЕсли Команда.Имя = "ДобавитьНаличныйРасчёт" тогда
			//Если Найти(СтрокаДопИнформации,"<<Наличный расчёт -> 309-91-91 (доб. 104), Людмила Шевчук>>")=0 Тогда
			//	СтрокаДопИнформации = СтрокаДопИнформации+Символы.ПС+ "<<Наличный расчёт -> 309-91-91 (доб. 104), Людмила Шевчук>>";		
			//Иначе
			//	СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,Символы.ПС+"<<Наличный расчёт -> 309-91-91 (доб. 104), Людмила Шевчук>>","");		
			//	СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<Наличный расчёт -> 309-91-91 (доб. 104), Людмила Шевчук>>","");		
			//КонецЕсли;
			
			// silber { вместо кода выше
			
			Строка = ?(ЕстьПартнер(Форма),
				АТ_ДоставкаСервер.ПолучитьТекстДоставкиПоСкладуИФормыОплаты(РеквизитыФормы(Форма, "Склад"), РеквизитыФормы(Форма, "ФормаОплаты")),
				"<<Это перемещение>>");
			
			Если стрНайти(СтрокаДопИнформации, Строка) Тогда
				СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации, Символы.ПС + Строка, "");		
				СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации, Строка, "");		
			Иначе
				СтрокаДопИнформации = СтрокаДопИнформации + ?(СтрЗаканчиваетсяНа(СтрокаДопИнформации, Символы.ПС), "", Символы.ПС) + Строка;
			КонецЕсли;
			
			// } silber
			
		КонецЕсли;	
		//Форма.Объект.ДополнительнаяИнформацияПоДоставке = СтрокаДопИнформации;
		
КонецПроцедуры

Функция ЕстьПартнер(Форма)
	
	Возврат Форма.Элементы.Найти("Партнер") <> Неопределено;
	
КонецФункции
Функция РеквизитыФормы(Форма, ИмяРеквизита)
	
	Возврат ?(ТипЗнч(Форма.Объект) = Тип("ДанныеФормыСтруктура"), Форма.Объект[ИмяРеквизита], АТ_ДоставкаСервер.ОпределитьРеквизитыФормы(Форма.Объект, ИмяРеквизита));
	
КонецФункции
