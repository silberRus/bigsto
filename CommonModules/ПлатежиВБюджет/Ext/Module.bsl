
#Область ПрограммныйИнтерфейс

// Проверяет наличие дублей УИН в документах
//
// Параметры:
//	ИдентификаторПлатежа - Строка - Проверяемый идентификатор платежа
//	Ссылка - ДокументСсылка - Проверяемый документ
//
// Возвращаемое значение:
//	Массив - массив ошибок
//
Функция ПроверитьДублиУИН(ИдентификаторПлатежа, Ссылка) Экспорт
	
	Результат = Новый Массив;	
	Дубли = ДублиУИН(ИдентификаторПлатежа, Ссылка);
	Если Дубли.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	ШаблонТекста = НСтр("ru = 'Возможно, уникальный идентификатор платежа указан ошибочно.
    	|
        |[ГдеЕщеУказанЭтотИдентификатор]
        |
        |Одинаковые идентификаторы следует указывать только при частичной оплате.'");
						
	
	Если Дубли.Количество() = 1 Тогда
			
		ГдеЕщеУказанЭтотИдентификатор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Этот же идентификатор платежа указан в другом документе:
				|%1.'"),
			Дубли[0]);
			
	ИначеЕсли Дубли.Количество() = 2 Тогда
			
		ГдеЕщеУказанЭтотИдентификатор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Этот же идентификатор платежа указан в других документах:
				|- %1
				|- %2.'"), 
			Дубли[0], 
			Дубли[1]);
			
	ИначеЕсли Дубли.Количество() = 3 Тогда
		
		ГдеЕщеУказанЭтотИдентификатор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Этот же идентификатор платежа указан в других документах:
				|- %1
				|- %2
				|- %3.'"),
			Дубли[0], 
			Дубли[1], 
			Дубли[2]);
			
	Иначе
		
		ТекстЕщеДокументов = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(
			Дубли.Количество() - 2, 
			НСтр("ru = 'более ранний документ, более ранних документа, более ранних документов'"));
			
		ГдеЕщеУказанЭтотИдентификатор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Этот же идентификатор платежа указан в других документах:
				|- %1
				|- %2
				|  и еще %3.'"),
			Дубли[0], 
			Дубли[1],
			ТекстЕщеДокументов);
			
	КонецЕсли;
	
	ПараметрыТекста = Новый Структура;
	ПараметрыТекста.Вставить("ГдеЕщеУказанЭтотИдентификатор", ГдеЕщеУказанЭтотИдентификатор);
	
	ТекстОшибки = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ШаблонТекста, ПараметрыТекста);
	
	ОписаниеОшибки = Новый Структура;
	ОписаниеОшибки.Вставить("Описание", ТекстОшибки);
	ОписаниеОшибки.Вставить("ИмяПоля",  "ИдентификаторПлатежа");
	
	Результат.Добавить(ОписаниеОшибки);
	
	Возврат Результат;
	
КонецФункции

// Устанавливает надпись реквизитов платежа в бюджет
//
// Параметры:
//    Форма - УправляемаяФорма - форма, из которой вызвана функция
//
Процедура УстановитьНадписьРеквизитовПлатежаВБюджет(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	Если ПлатежиВБюджетКлиентСервер.РеквизитЗаполнен(Объект.КодБК) Тогда
		КБК = Объект.КодБК;
	Иначе
		КБК = НСтр("ru = '<КБК не указан>'");
	КонецЕсли;
	
	Если ПлатежиВБюджетКлиентСервер.РеквизитЗаполнен(Объект.КодОКАТО) Тогда
		КодТерритории = Объект.КодОКАТО;
	Иначе
		КодТерритории = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '<%1 не указан>'"),
			?(Объект.Дата >= Форма.ДатаНачалаПримененияПриказа107н Или Не ЗначениеЗаполнено(Объект.Дата), НСтр("ru='ОКТМО'"), НСтр("ru='ОКАТО'")));
	КонецЕсли;
	
	Если ПлатежиВБюджетКлиентСервер.РеквизитЗаполнен(Объект.СтатусСоставителя) Тогда
		СтатусСоставителя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Статус: %1'"),
			Объект.СтатусСоставителя);
	Иначе
		СтатусСоставителя = НСтр("ru = '<Статус: не указан>'");
	КонецЕсли;
	
	Форма.НадписьРеквизитыПлатежаВБюджет = КБК + "; "
		+ КодТерритории + "; "
		+ СтатусСоставителя + "; "
		+ Объект.ПоказательОснования + "; ";
	Если Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж
		Или Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж Тогда
		Форма.НадписьРеквизитыПлатежаВБюджет = Форма.НадписьРеквизитыПлатежаВБюджет
			+ Объект.ПоказательПериода + "; "
			+ Объект.ПоказательНомера + "; "
			+ Объект.ПоказательДаты + "; ";
	КонецЕСли;
	Форма.НадписьРеквизитыПлатежаВБюджет = Форма.НадписьРеквизитыПлатежаВБюджет + ?(Не Форма.ПрименениеПриказа126н, Объект.ПоказательТипа + "; ", "");
	
	Отказ = Ложь; МассивНепроверяемыхРеквизитов = Новый Массив; ФлагОбменСБанками = Истина; ОшибкиЗаполнения = "";
	ТекущийОбъект = Форма.РеквизитФормыВЗначение("Объект");
	ДенежныеСредстваСервер.ПроверитьЗаполнениеНалоговыхРеквизитов(ТекущийОбъект, Отказ, МассивНепроверяемыхРеквизитов, ФлагОбменСБанками, ОшибкиЗаполнения);
	
	Если Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж Тогда
		Если Не ЗначениеЗаполнено(Объект.ПоказательПериода) Тогда
			ОшибкиЗаполнения = ОшибкиЗаполнения + "
			|" + НСтр("ru = 'Поле ""Период"" не заполено'");
		КонецЕсли;
	КонецЕсли;
	Если Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж
		Или Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж Тогда
		Если Не ЗначениеЗаполнено(Объект.ПоказательНомера) Тогда
			ОшибкиЗаполнения = ОшибкиЗаполнения + "
			|" + НСтр("ru = 'Поле ""Номер документа"" не заполено'");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.ПоказательДаты) Тогда
			ОшибкиЗаполнения = ОшибкиЗаполнения + "
			|" + НСтр("ru = 'Поле ""Дата документа"" не заполено'");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОшибкиЗаполнения)
		Или Не ЗначениеЗаполнено(Объект.КодБК)
		Или Не ЗначениеЗаполнено(Объект.КодОКАТО) Тогда
		Форма.Элементы.НадписьРеквизитыПлатежаВБюджет.ЦветТекста = ЦветаСтиля.РезультатПроблемаЦвет;
		Форма.Элементы.НадписьРеквизитыПлатежаВБюджет.Подсказка = ОшибкиЗаполнения;
	Иначе
		Форма.Элементы.НадписьРеквизитыПлатежаВБюджет.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
		Форма.Элементы.НадписьРеквизитыПлатежаВБюджет.Подсказка = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДублиУИН(ИдентификаторПлатежа, Ссылка)
	Дубли = Новый СписокЗначений;
	
	Если Не ПлатежиВБюджетКлиентСервер.РеквизитЗаполнен(ИдентификаторПлатежа) Тогда
		Возврат Дубли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИдентификаторПлатежа", ИдентификаторПлатежа);
	Запрос.УстановитьПараметр("Ссылка",               Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписаниеБезналичныхДенежныхСредств.Ссылка КАК Ссылка,
	|	СписаниеБезналичныхДенежныхСредств.Дата КАК Дата,
	|	СписаниеБезналичныхДенежныхСредств.Представление КАК Представление
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	|ГДЕ
	|	СписаниеБезналичныхДенежныхСредств.ИдентификаторПлатежа = &ИдентификаторПлатежа
	|	И СписаниеБезналичныхДенежныхСредств.Ссылка <> &Ссылка
	|	И СписаниеБезналичныхДенежныхСредств.ПеречислениеВБюджет
	|	И НЕ СписаниеБезналичныхДенежныхСредств.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ,
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Дубли.Добавить(Выборка.Ссылка, Выборка.Представление);
	КонецЦикла;
	
	Возврат Дубли;
	
КонецФункции

#КонецОбласти
