////////////////////////////////////////////////////////////////////////////////
// ЭлектронноеВзаимодействиеКлиентСервер: общий механизм обмена электронными документами.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет представление настроек регламента ЭДО.
//
// Параметры:
//  СтрокаТаблицы		 - ДанныеФормыЭлементКоллекции - строка таблицы, содержащей данные регламента.
//  ИспользуетсяПрофиль	 - Булево - признак указания в строке профиля настроек.
//
Процедура ЗаполнитьПредставлениеРегламентаЭДОВСтроке(СтрокаТаблицы, ИспользуетсяПрофиль = Ложь) Экспорт 

	Если ИспользуетсяПрофиль Тогда
		Профиль = ""+СтрокаТаблицы.ПрофильНастроекЭДО;
	Иначе
		Профиль = "";
	КонецЕсли;
	
	ИспользоватьЭП = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЗначениеФункциональнойОпции("ИспользоватьЭлектронныеПодписиЭД");
	
	Если СтрокаТаблицы.ИспользоватьЭП И ИспользоватьЭП Тогда
		Подпись = НСтр("ru = 'Подпись'");
		
		Маршрут = "";
		Если ЗначениеЗаполнено(СтрокаТаблицы.МаршрутПодписания) Тогда
			Маршрут = " " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '(маршрут: %1)'"), СтрокаТаблицы.МаршрутПодписания);
		КонецЕсли;
	Иначе
		Подпись = НСтр("ru = 'Без подписи'");
		Маршрут = "";
	КонецЕсли;
	
	Если Не ИспользуетсяПрофиль Тогда
		ИнформацияОПодписи = НРег(ИнформацияОПодписи);
	КонецЕсли;
	
	ОтветнаяПодпись = "";
	Если СтрокаТаблицы.ТребуетсяОтветнаяПодпись И ИспользоватьЭП Тогда
		ОтветнаяПодпись = НСтр("ru = 'ответная подпись'");
	КонецЕсли;
	
	ИзвещениеОПолучении = "";
	Если СтрокаТаблицы.ТребуетсяИзвещениеОПолучении Тогда
		ИзвещениеОПолучении = НСтр("ru = 'извещение о получении'");
	КонецЕсли;
	
	ДополнительныеНастройки = "";
	ДополнительныеНастройки = ДополнительныеНастройки
		+ Профиль
		+ ?(Не Профиль = "", ", ", "")
		+ Подпись
		+ Маршрут
		+ ?(Не ИзвещениеОПолучении = "",","+ " ", "")
		+ ИзвещениеОПолучении
		+ ?(Не ОтветнаяПодпись = "",","+ " ", "")
		+ ОтветнаяПодпись;
		
	СтрокаТаблицы.ДополнительныеНастройки = ДополнительныеНастройки;

КонецПроцедуры

// Обработчик события выбора формата в профилях и настройках ЭДО.
//
// Параметры:
//  СтрокаНастроек		 - ДанныеФормыСтруктура - строка таблицы исходящих документов.
//  ИспользуетсяПрофиль	 - Булево - определяет, указывается ли профиль в строке настроек.
//
Процедура ПриИзмененииФорматаВСтрокеНастроек(СтрокаНастроек, ИспользуетсяПрофиль = Ложь) Экспорт

	// Установка флагов "Подписывать, Извещения, Ответная подпись"
	// и обновление заголовка гиперссылки.
	
	Если СтрокаНастроек.ИсходящийДокумент = ПредопределенноеЗначение("Перечисление.ВидыЭД.АктИсполнитель") Тогда
	
		Если ВРег(СтрокаНастроек.ВерсияФормата) = ВРег("ФНС 5.01 (С 2016Г.)")
			Или ВРег(СтрокаНастроек.ВерсияФормата) = ВРег("ФНС 5.01 (УПД:Первичный документ)") Тогда
			Возврат;
		КонецЕсли;
		
		СтрокаНастроек.ТребуетсяОтветнаяПодпись = СтрокаНастроек.ИспользоватьЭП;
		СтрокаНастроек.ТребуетсяИзвещениеОПолучении = Истина;
		
		ЗаполнитьПредставлениеРегламентаЭДОВСтроке(СтрокаНастроек, ИспользуетсяПрофиль);
		
	ИначеЕсли СтрокаНастроек.ИсходящийДокумент = ПредопределенноеЗначение("Перечисление.ВидыЭД.АктНаПередачуПрав") Тогда
	
		Если ВРег(СтрокаНастроек.ВерсияФормата) = ВРег("ФНС 5.01 (С 2016Г.)") Тогда
			Возврат;
		КонецЕсли;
		
		СтрокаНастроек.ТребуетсяОтветнаяПодпись = СтрокаНастроек.ИспользоватьЭП;
		СтрокаНастроек.ТребуетсяИзвещениеОПолучении = Истина;
		
		ЗаполнитьПредставлениеРегламентаЭДОВСтроке(СтрокаНастроек, ИспользуетсяПрофиль);

		
	ИначеЕсли СтрокаНастроек.ИсходящийДокумент = ПредопределенноеЗначение("Перечисление.ВидыЭД.СчетФактура") Тогда
		
		Если Не ВРег(СтрокаНастроек.ВерсияФормата) = ВРег("ФНС 5.01 (УПД:Счет-фактура и первичный документ)") Тогда
			СтрокаНастроек.ТребуетсяОтветнаяПодпись = Ложь;
			ЗаполнитьПредставлениеРегламентаЭДОВСтроке(СтрокаНастроек, ИспользуетсяПрофиль);
		КонецЕсли;
		
	ИначеЕсли СтрокаНастроек.ИсходящийДокумент = ПредопределенноеЗначение("Перечисление.ВидыЭД.КорректировочныйСчетФактура") Тогда
		
		Если Не ВРег(СтрокаНастроек.ВерсияФормата) = ВРег("ФНС 5.01 (УКД:Корректировочный счет-фактура и первичный документ)") Тогда
			СтрокаНастроек.ТребуетсяОтветнаяПодпись = Ложь;
			ЗаполнитьПредставлениеРегламентаЭДОВСтроке(СтрокаНастроек, ИспользуетсяПрофиль);
		КонецЕсли;
		
	ИначеЕсли СтрокаНастроек.ИсходящийДокумент = ПредопределенноеЗначение("Перечисление.ВидыЭД.СоглашениеОбИзмененииСтоимостиОтправитель") Тогда
		
		Если Не ВРег(СтрокаНастроек.ВерсияФормата) = ВРег("ФНС 5.01 (УКД:Первичный документ)") Тогда
			СтрокаНастроек.ТребуетсяОтветнаяПодпись = СтрокаНастроек.ИспользоватьЭП;
			ЗаполнитьПредставлениеРегламентаЭДОВСтроке(СтрокаНастроек, ИспользуетсяПрофиль);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры


// Формирует структуру параметров, необходимую для работы функций аннулирования и отклонения.
//
// Параметры:
//  ЭД - СправочникСсылка.ЭДПрисоединенныеФайлы - электронный документ.
//  ФормироватьУОУ - Булево - признак необходимости формирования уведомления об уточнении.
//  ЭтоСчетФактура - Булево - признак того, что обрабатываемый документ является счетом-фактурой.
// 
// Возвращаемое значение:
//  Структура - структура параметров:
//    * СсылкаНаЭД - СправочникСсылка.ЭДПрисоединенныеФайлы - электронный документ;
//    * ФормироватьУОУ - Булево - признак необходимости формирования уведомления;
//    * ЭтоСчетФактура - Булево - признак того, что обрабатываемый документ является счетом-фактурой.
//
Функция НовыеПараметрыОтклоненияАннулирования(ЭД, ФормироватьУОУ, ЭтоСчетФактура) Экспорт

	Возврат Новый Структура("СсылкаНаЭД, ФормироватьУОУ, ЭтоСчетФактура", ЭД, ФормироватьУОУ, ЭтоСчетФактура);

КонецФункции 

// Формирует список типов основных (неслужебных) документов.
// 
// Возвращаемое значение:
//  Массив - содержит элементы типа "ПеречислениеСсылка.ТипыЭлементовВерсииЭД".
//
Функция ОсновныеТипыЭД() Экспорт

	Результат = Новый Массив;
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовВерсииЭД.СЧФДОПУПД"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовВерсииЭД.СЧФУПД"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовВерсииЭД.ДОПУПД"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовВерсииЭД.КСЧФДИСУКД"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовВерсииЭД.КСЧФУКД"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовВерсииЭД.ДИСУКД"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовВерсииЭД.ДОП"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовВерсииЭД.ПервичныйЭД"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовВерсииЭД.ЭСФ"));
	
	Возврат Результат;

КонецФункции 

Функция ИдентификаторИнтеграционногоРешения() Экспорт 

	Возврат "1C_22BFE9D5-E77D-424A-BC6D-D8A3496C05FE";

КонецФункции 


#КонецОбласти