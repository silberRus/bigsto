
Функция СостояниеВыполнено() Экспорт Возврат "Выполнено"; КонецФункции
Функция СостояниеОшибка() Экспорт Возврат "Ошибка"; КонецФункции

#Область Ядро

Процедура ВыполнитьКодВФоне(КодВыполнения, Адрес, Параметры = Неопределено) Экспорт
	
	// Это паралельное фоновое задание
	
	Перем Результат, стрОшибки;
	
	Попытка
		Выполнить(КодВыполнения);
		ПоместитьВоВременноеХранилище(Новый Структура("Состояние, Результат, стрОшибки", СостояниеВыполнено(), Результат, стрОшибки), Адрес);
	Исключение
		стрОшибки = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("Выполнение кода в фоновом режиме", УровеньЖурналаРегистрации.Ошибка, , , стрОшибки);
		ПоместитьВоВременноеХранилище(Новый Структура("Состояние, Результат, стрОшибки", СостояниеОшибка(), Неопределено, стрОшибки), Адрес); 
	КонецПопытки;
	
КонецПроцедуры

Функция ЗапуститьПоток(КодВыполнения, УникИдентификаторФормы, Параметры = Неопределено) Экспорт
	
	// Запускает поток
	// Возвращает адрес в хранилище в котором будет находится результат выполнения после выполнения
	
	Адрес = ПоместитьВоВременноеХранилище(Неопределено, УникИдентификаторФормы);
	
	текПараметры = Новый Массив;
	текПараметры.Добавить(КодВыполнения);
	текПараметры.Добавить(Адрес);
	текПараметры.Добавить(Параметры);
	
	ФоновыеЗадания.Выполнить("АТ_Поток.ВыполнитьКодВФоне", текПараметры, Строка(Новый УникальныйИдентификатор), "Паралельное задание для асинхроности");
	
	Возврат Адрес;
	
КонецФункции

#КонецОбласти