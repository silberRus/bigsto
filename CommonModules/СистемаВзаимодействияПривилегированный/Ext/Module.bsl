////////////////////////////////////////////////////////////////////////////////
// <Система взаимодействия: функции и процедуры для работы с сервером взаимодействия.>
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

// ТекстСообщения - Строка - содержит электронные адреса, разделенные запятой. Например, "support@mycorp.ru, v8@localdomain".
// Получатели - Массив ИЛИ СправочникСсылка.Пользователи – пользователь, которому адресовано сообщение. Если пользователь не указан, 
//                                                то сообщение будет отправлено всем пользователям.
// ВидОбсуждения - ПеречислениеСсылка.ВидыОбсуждений – вид обсуждения. Имя вида соответсвует имени темы обсуждения.
//                                                Если вид обсуждения не указан, сообщение будет отправлено в скрытое обсуждение.
Процедура ОтправитьСообщение(ТекстСообщения, Получатели = Неопределено, ВидОбсуждения = Неопределено) Экспорт
	
	//Проверим, что база рарегистрирована в системе взаимодействия.
	Если Не СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована() Тогда
		Возврат;
	КонецЕсли;
	
	//Определим пользователей получателей.
	Если ТипЗнч(Получатели) = Тип("СправочникСсылка.Пользователи") И ЗначениеЗаполнено(Получатели) Тогда
		ПользователиПолучателей = Новый Массив();
		ПользователиПолучателей.Добавить(Получатели);
	ИначеЕсли ТипЗнч(Получатели) = Тип("Массив") Тогда
		ПользователиПолучателей = Получатели;
	Иначе
		ПользователиПолучателей = ПолучитьАктуальныхПользователей();
	КонецЕсли;
	
	//Получим список обсуждений и добавим в них недостающих пользователей.
	СоответствиеПользователей = ПолучитьСоответствиеПользователей(ПользователиПолучателей);
	СписокУникальныхОбсуждений = Новый Соответствие;
	
	Для Каждого Пользователь Из СоответствиеПользователей Цикл
		
		ИдентификаторОбсужденияСтрока = ПолучитьИдентификаторОбсуждения(Пользователь.Ключ, ВидОбсуждения);
		ИдентификаторОбсуждения = Новый ИдентификаторОбсужденияСистемыВзаимодействия(ИдентификаторОбсужденияСтрока);
		
		Обсуждение = СистемаВзаимодействия.ПолучитьОбсуждение(ИдентификаторОбсуждения);
		
		Если Не Обсуждение.Участники.Содержит(Пользователь.Значение) Тогда
			Обсуждение.Участники.Добавить(Пользователь.Значение);
		КонецЕсли;
		
		Обсуждение.Записать();
		
		СписокУникальныхОбсуждений.Вставить(ИдентификаторОбсуждения);
		
	КонецЦикла;
	
	//Отправим сообщение по неконтекстным обсуждениям.
	Для Каждого ИдентификаторОбсуждения Из СписокУникальныхОбсуждений Цикл
		СоздатьСообщение(ИдентификаторОбсуждения.Ключ, ТекстСообщения);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьИдентификаторОбсуждения(Пользователь = Неопределено, ВидОбсуждения = Неопределено) Экспорт
	
	НаборЗаписей = РегистрыСведений.СистемаВзаимодейтсвияСоответствиеОбсуждений.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВидОбсуждения.Установить(?(ЗначениеЗаполнено(ВидОбсуждения), ВидОбсуждения, Перечисления.ВидыОбсуждений.ПустаяСсылка()));
	НаборЗаписей.Отбор.Пользователь.Установить(?(ЗначениеЗаполнено(Пользователь), Пользователь, Справочники.Пользователи.ПустаяСсылка()));
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		ИдентификаторОбсужденияСтрока = Строка(СоздатьОбсуждениеБезКонтекста(Пользователь, ВидОбсуждения));
	Иначе
		Для Каждого Запись Из НаборЗаписей Цикл
			ИдентификаторОбсужденияСтрока = Запись.ИдентификаторОбсуждения;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ИдентификаторОбсужденияСтрока;
	
КонецФункции

Функция СоздатьОбсуждениеБезКонтекста(Пользователь = Неопределено, ВидОбсуждения = Неопределено) Экспорт
	
	НовоеОбсуждение = СистемаВзаимодействия.СоздатьОбсуждение();
	НовоеОбсуждение.Отображаемое = ?(ЗначениеЗаполнено(ВидОбсуждения) И ЗначениеЗаполнено(Пользователь), Истина, Ложь);
	НовоеОбсуждение.Ключ = Строка(Новый УникальныйИдентификатор);
	Если ЗначениеЗаполнено(ВидОбсуждения) Тогда
		НовоеОбсуждение.Заголовок = Строка(ВидОбсуждения);
	КонецЕсли;
	НовоеОбсуждение.Записать();
	
	НаборЗаписей = РегистрыСведений.СистемаВзаимодейтсвияСоответствиеОбсуждений.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВидОбсуждения.Установить(?(ЗначениеЗаполнено(ВидОбсуждения), ВидОбсуждения, Перечисления.ВидыОбсуждений.ПустаяСсылка()));
	НаборЗаписей.Отбор.Пользователь.Установить(?(ЗначениеЗаполнено(Пользователь), Пользователь, Справочники.Пользователи.ПустаяСсылка()));
	
	Запись = НаборЗаписей.Добавить();
	Запись.ВидОбсуждения = ?(ЗначениеЗаполнено(ВидОбсуждения), ВидОбсуждения, Перечисления.ВидыОбсуждений.ПустаяСсылка());
	Запись.Пользователь = ?(ЗначениеЗаполнено(Пользователь), Пользователь, Справочники.Пользователи.ПустаяСсылка());
	Запись.ИдентификаторОбсуждения = НовоеОбсуждение.Идентификатор;
	
	НаборЗаписей.Записать();
	
	Возврат НовоеОбсуждение.Идентификатор;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура СоздатьСообщение(ИдентификаторОбсуждения, ТекстСообщения)
	
	НовоеСообщение = СистемаВзаимодействия.СоздатьСообщение(ИдентификаторОбсуждения);
	НовоеСообщение.Дата = ТекущаяДата();
	НовоеСообщение.Текст = ТекстСообщения;
	НовоеСообщение.Записать();
	
КонецПроцедуры

Функция ПолучитьАктуальныхПользователей()
	
	Результат = Новый Массив;
	
	Выборка = Справочники.Пользователи.Выбрать( ,, Новый Структура("Недействителен", Ложь));
	
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьСоответствиеПользователей(Пользователи)
	
	Результат = Новый Соответствие;
	
	Для Каждого Пользователь Из Пользователи Цикл
		//ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(Пользователь);
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Пользователь.ИдентификаторПользователяИБ);
		Если ПользовательИБ <> Неопределено Тогда
			Попытка
				ИдентификаторПользователяСВ = СистемаВзаимодействия.ПолучитьИдентификаторПользователя(ПользовательИБ.УникальныйИдентификатор);
			Исключение
				ПользовательСВ = СистемаВзаимодействия.СоздатьПользователя(ПользовательИБ);
				ПользовательСВ.Записать();
				ИдентификаторПользователяСВ = ПользовательСВ.Идентификатор;
			КонецПопытки;
			Результат.Вставить(Пользователь, ИдентификаторПользователяСВ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

