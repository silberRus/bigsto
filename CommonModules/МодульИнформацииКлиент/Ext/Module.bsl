
Процедура ИнфТовараТекстHTMLПриНажатии(Форма, Элемент, ДанныеСобытия, СтандартнаяОбработка, Товары = "Товары", ТоварСсылка = Неопределено, ТоварыФорма = "Товары") Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если ТоварСсылка = Неопределено Тогда
		
		ТекущиеДанные = ?(Товары = "Список", Форма.Элементы[Товары].ТекущаяСтрока, Форма.Элементы[Товары].ТекущиеДанные);
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат; 
		КонецЕсли;
		
		ТоварСсылка = ?(Товары = "Список", ТекущиеДанные, ТекущиеДанные.Номенклатура); 
		
	КонецЕсли;
	
	Если ДанныеСобытия.Element.id = "CheckStock" Тогда
		
		Массив = ПолучитьМассивВыделенныхТоваров(Форма, Товары, ТоварыФорма);
		Если Массив.Количество() Тогда
			
			Остатки =  Элемент.Документ.getElementByID("Checkstock");
			МодульИнформации.ОбновитьНастройкиОперативнойИнфоОТоваре(Новый Структура("Остатки", Остатки.Checked));
			Форма.ОбработатьОтображениеИнформацииОТоваре();
			
		КонецЕсли;
		
	ИначеЕсли ДанныеСобытия.Element.id = "CheckPrice" Тогда
		
		Массив = ПолучитьМассивВыделенныхТоваров(Форма, Товары, ТоварыФорма);
		Если Массив.Количество() Тогда
			
			Цены =  Элемент.Документ.getElementByID("CheckPrice");  
			МодульИнформации.ОбновитьНастройкиОперативнойИнфоОТоваре(Новый Структура("Цены", Цены.Checked));
			Форма.ОбработатьОтображениеИнформацииОТоваре();
		КонецЕсли;
		
	ИначеЕсли ДанныеСобытия.Element.id = "CheckContract" Тогда
		
		Массив = ПолучитьМассивВыделенныхТоваров(Форма, Товары, ТоварыФорма);
		Если Массив.Количество() Тогда
			Соглашения = Элемент.Документ.getElementByID("CheckContract");  
			МодульИнформации.ОбновитьНастройкиОперативнойИнфоОТоваре(Новый Структура("Соглашения", Соглашения.Checked));
			Форма.ОбработатьОтображениеИнформацииОТоваре();
		КонецЕсли;
		
	ИначеЕсли ДанныеСобытия.Element.id = "CheckCross" Тогда
		
		Массив = ПолучитьМассивВыделенныхТоваров(Форма, Товары, ТоварыФорма);
		Если Массив.Количество() Тогда
			Кроссы = Элемент.Документ.getElementByID("CheckCross");  
			МодульИнформации.ОбновитьНастройкиОперативнойИнфоОТоваре(Новый Структура("Кроссы", Кроссы.Checked));
			Форма.ОбработатьОтображениеИнформацииОТоваре();
		КонецЕсли;
		
	ИначеЕсли ДанныеСобытия.Element.id = "CheckExtra" Тогда     //CheckPurchase
		
		Массив = ПолучитьМассивВыделенныхТоваров(Форма, Товары, ТоварыФорма);
		Если Массив.Количество() Тогда
			
			Дополнительно =  Элемент.Документ.getElementByID("CheckExtra");  
			МодульИнформации.ОбновитьНастройкиОперативнойИнфоОТоваре(Новый Структура("Дополнительно", Дополнительно.Checked));
			Форма.ОбработатьОтображениеИнформацииОТоваре();
		КонецЕсли;
		
	ИначеЕсли ДанныеСобытия.Element.id = "Сurrency" Тогда
		
		ГУИДВалюты = Новый УникальныйИдентификатор(Элемент.Документ.getElementByID("Сurrency").value);
		СсылкаНаВалюту = КонвертацияТипов.ПолучитьСсылкуПоГуиду(ГУИДВалюты, "Валюты");
		Настройки = МодульИнформации.ПолучитьНастройкиОперативнойИнфоОТоваре();
		Если Настройки.Валюта <> СсылкаНаВалюту Тогда
			МодульИнформации.ОбновитьНастройкиОперативнойИнфоОТоваре(Новый Структура("Валюта", СсылкаНаВалюту));
			Форма.ОбработатьОтображениеИнформацииОТоваре();
		КонецЕсли;
		
	ИначеЕсли ДанныеСобытия.Element.id = "CheckInOrder" Тогда
	
		Массив = ПолучитьМассивВыделенныхТоваров(Форма, Товары, ТоварыФорма);
		Если Массив.Количество() Тогда
			
			ВнЗаказы = Элемент.Документ.getElementByID("CheckInOrder");  
			МодульИнформации.ОбновитьНастройкиОперативнойИнфоОТоваре(Новый Структура("ВнутренниеЗаказы", ВнЗаказы.Checked));
			Форма.ОбработатьОтображениеИнформацииОТоваре();
			
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

// Инф о товаре

Процедура ПоказатьСкрытьИнфОТоваре(Форма, ЭлементИмя = Неопределено) Экспорт
	
	Форма.ИнфТовраОтображать 					= Не Форма.ИнфТовраОтображать;
	Форма.Элементы.ИнфТовараКнопка.Пометка 		= Форма.ИнфТовраОтображать;
	
	Форма.ОбработатьОтображениеИнформацииОТоваре();

КонецПроцедуры

Процедура НастройкаИнфОТоваре(Форма, ТоварыЭлемент = "Товары", ТоварыФорма = "Товары", ТоварСсылка = Неопределено, ИмяКолонкиТовара = "Номенклатура") Экспорт
	
	Если Форма.ТекущийЭлемент.Имя = "ИнфТовараКнопкаОтчетыТовара" Тогда 
		
		// Определим ссылку товара
		
		Если ТоварСсылка = Неопределено Тогда
			ТекущиеДанные = ?(ТоварыЭлемент = "Список", Форма.Элементы[ТоварыЭлемент].ТекущаяСтрока, Форма.Элементы[ТоварыЭлемент].ТекущиеДанные);
			Если ТекущиеДанные = Неопределено Тогда
				Возврат; 
			КонецЕсли;
		
			ТоварСсылка = ?(ТоварыЭлемент = "Список", ТекущиеДанные, ТекущиеДанные[ИмяКолонкиТовара]); 
			
		КонецЕсли;
		
		// Отправим к отчетам
		
		НажатаКнопкаОтчетыТовара(ТоварСсылка, Форма, Форма.ТекущийЭлемент); 
		
	Иначе
		ОткрытьФорму("ОбщаяФорма.НастройкаОперативнойИнформацииОТоваре", Новый Структура("ТоварыЭлемент, ТоварыФорма", ТоварыЭлемент, ТоварыФорма) , Форма); 
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьМассивВыделенныхТоваров(Форма, ТоварыЭлементы = "Товары", ТоварыФорма = "Товары", КолонкаТовара = "Номенклатура") Экспорт
	
	Строки 		= Форма.Элементы[ТоварыЭлементы].ВыделенныеСтроки;
	Массив 		= Новый Массив;
	ТипТовар	= Тип("СправочникСсылка.Номенклатура");
	
	Если Строки.Количество() Тогда
		Для Каждого Идентификатор Из Строки Цикл
			
			Если ТипЗнч(Идентификатор) = ТипТовар Тогда
				Массив.Добавить(Идентификатор);
				Продолжить;
			КонецЕсли;
			
			Строка = ?(ТоварыЭлементы = "Список", Идентификатор, Вычислить("Форма." + ТоварыФорма).НайтиПоИдентификатору(Идентификатор));
			Если Строка <> Неопределено Тогда 
				
				текТовар = ?(ТоварыЭлементы = "Список", Строка, Строка[КолонкаТовара]);
				Если ТипЗнч(текТовар) =  ТипТовар Тогда
					Массив.Добавить(текТовар); 
				КонецЕсли; 
				
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли;
		
	Возврат Массив;
	
КонецФункции


Процедура НажатаКнопкаОтчетыТовара(ТоварСсылка, Форма, Кнопка)
	
	// Зададим параметры
	
	ПараметрыФормы = Новый Структура("Номенклатура", ТоварСсылка);
	ПараметрыФормы = Новый Структура("Номенклатура, Отбор, КлючНазначенияИспользования, СформироватьПриОткрытии", ТоварСсылка, ПараметрыФормы,,Истина);
	
	// Подготовим список
	
	СписокОтчетов = Новый СписокЗначений;
	СписокОтчетов.Добавить("Справочник.Номенклатура.Форма.ПоказатьАналоги", "Показать аналоги");
	СписокОтчетов.Добавить("Отчет.ВедомостьОдногоТовара.ФормаОбъекта", 		"Движение по складам");
	СписокОтчетов.Добавить("Отчет.ДвижениеЯчеек.ФормаОбъекта", 				"Движение по ячейкам");
	СписокОтчетов.Добавить("Отчет.ПродажиТовараКлиенту.ФормаОбъекта", 		"Продажи клиентам");
	
	// Выберем и откроем отчет
	
	Выбор = Форма.ВыбратьИзменю(СписокОтчетов, Кнопка);
	Если Выбор <> Неопределено Тогда
		ОткрытьФорму(Выбор.Значение, ПараметрыФормы, Форма);
	КонецЕсли;
	
КонецПроцедуры


Процедура ОбработатьОтображениеИнформацииОТоваре(Форма, Настройки) Экспорт
//Процедура ОбработатьОтображениеИнформацииОТоваре(Форма, ТоварыЭлементы = "Товары", ТоварыФорма = "Товары", Массив = Неопределено, КолонкаТовара = "Номенклатура", ПутьКСоглашению = Неопределено) Экспорт

	ТоварыЭлементы 	= ?(Настройки.Свойство("ТоварыЭлементы"), 	Настройки.ТоварыЭлементы, 	"Товары");
	ТоварыФорма 	= ?(Настройки.Свойство("ТоварыФорма"), 		Настройки.ТоварыФорма, 		"Товары");
	КолонкаТовара 	= ?(Настройки.Свойство("КолонкаТовара"), 	Настройки.ТоварыФорма, 		"Номенклатура");
	
	ЕстьСоглашение	= Настройки.Свойство("ПутьКСоглашению");
	ПутьКСоглашению	= ?(ЕстьСоглашение, Настройки.ПутьКСоглашению, Неопределено);

	ИнфТовраОтображать = Форма.ИнфТовраОтображать;
	
	Если ИнфТовраОтображать <> Форма.Элементы.ИнфТовараТекстHTML.Видимость Тогда // Только если изменилось то только тогда  есть смысл подавать сигнал на обновление
		
		Форма.Элементы.ИнфТовараТекстHTML.Видимость 		= ИнфТовраОтображать;
		Форма.Элементы.ИнфТовараКнопкаНастройки.Видимость	= ИнфТовраОтображать;
		//Форма.Элементы.ИнфТовараКнопкаОтчетыТовара.Видимость= ИнфТовраОтображать; 
		
	КонецЕсли;
			
	Если ИнфТовраОтображать Тогда
		
		Если Настройки.Свойство("текТовар") Тогда
			МассивТоваров = Новый Массив;
			МассивТоваров.Добавить(Настройки.текТовар);
		Иначе
			МассивТоваров = ?(Настройки.Свойство("СсылкиТоваров"), 
							Настройки.СсылкиТоваров, 
							ПолучитьМассивВыделенныхТоваров(Форма, ТоварыЭлементы, ТоварыФорма, КолонкаТовара));
		КонецЕсли;
		
		Если МассивТоваров.Количество() Тогда
			
			//ЭлементВалюта = Форма.Элементы.Найти("Валюта");
			//Если ЭлементВалюта <> Неопределено И Не Настройки.Свойство("Валюта") Тогда
			//	Настройки.Вставить("Валюта", Вычислить("Форма." + ЭлементВалюта.ПутьКДанным));
			//КонецЕсли;
			
			Если ЕстьСоглашение Тогда
				Настройки.Вставить("Соглашение", Вычислить("Форма." + ПутьКСоглашению));
			КонецЕсли;
			
			ИнфОТоваре = МодульИнформации.ПолучитьИнформациюHTMLОТовареВсюВHTML(МассивТоваров, Настройки, Форма.УникальныйИдентификатор);
			Форма.ИнфТовараТекстHTML = ИнфОТоваре;
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


// Инф о партнере

Процедура ОбновитьИнформациюОпартнере(Партнер, Форма, Элементы, Параметры = Неопределено) Экспорт
	
	// Обновляет информацию о партнере
	// смотрит сколько информации получено
	// и на основании этого изменяет размер элементаHTML
	//
	// Параметры - структура доп необязательных параметров
	//		- Контрагент
	//		- Договор
	//		- Соглашение
	// Элемены - структура элементов которых нужно обновлять (в ключе имя поля, в значении имя реквизита из формы
	//				может принимать сл значения:
	//		- ИнформацияОПартнереHTML
	//		- НадписьЭтаповОплат
	
	СтруктураИнф = МодульИнформации.ПолучитьИнформациюОПартнере(Партнер, Параметры);
	
	Если Элементы.Свойство("ИнформацияОПартнереHTML") Тогда
		форма[Элементы.ИнформацияОПартнереHTML] 		= СтруктураИнф.ТекстHTML;
		форма.Элементы.ИнформацияОПартнереHTML.Высота 	= СтруктураИнф.КоличествоСтрок + 3;		
	КонецЕсли;
	
	Если Элементы.Свойство("НадписьЭтаповОплат") Тогда
		форма[Элементы.НадписьЭтаповОплат] = СтруктураИнф.НадписьОплаты;
	КонецЕсли;
	
КонецПроцедуры