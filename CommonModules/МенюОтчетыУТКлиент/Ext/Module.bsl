
#Область СлужебныеПроцедурыИФункции

#Область СостояниеВыполненияДокументов

Процедура СостояниеВыполненияРеализацииАкта(СсылкиАктВыполненныхРабот, ПараметрыВыполнения) Экспорт
	
	Если НЕ ОбщегоНазначенияУТВызовСервера.ПроверитьСписокДокументов(СсылкиАктВыполненныхРабот) Тогда
		ПоказатьПредупреждение(,НСтр("ru='Команда не может быть выполнена для документов разного вида.'"));
		Возврат;
	КонецЕсли;
	
	ВходящиеДокументы = Новый СписокЗначений;
	ВходящиеДокументы.ЗагрузитьЗначения(СсылкиАктВыполненныхРабот);
	
	ПараметрыФормы = Новый Структура("ВходящиеДокументы", ВходящиеДокументы);
	
	ОткрытьФорму("Отчет.СостояниеВыполненияДокументов.Форма.ФормаОтчета", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СравнениеГрафиковКредитовИДепозитов

Процедура СравнениеПроизвольныхГрафиков(СсылкиГрафики,ПараметрыВыполнения) Экспорт
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник,Уникальность,Окно,НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ПараметрыВыполнения.ОписаниеКоманды.ДополнительныеПараметры);
	
	Если СсылкиГрафики.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыВыполнения.Свойство("Форма") Тогда
		ПараметрыВыполненияКоманды.Источник = ПараметрыВыполнения.Форма;
	КонецЕсли;
	
	Отбор = Новый Структура("ВариантГрафика1, Договор", СсылкиГрафики[0], ОбщегоНазначенияУТВызовСервера.ВладелецГрафика(СсылкиГрафики[0]));
	ЭтоСписок = СтрНайти(ПараметрыВыполненияКоманды.Источник.ИмяФормы,"ФормаЭлемента") = 0;
	Если ЭтоСписок Тогда
		Если СсылкиГрафики.Количество() <= 1 Тогда
			Текст = НСтр("ru='Для сравнения необходимо выбрать два графика!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			Возврат;
		КонецЕсли;
		Отбор.Вставить("ВариантГрафика2", СсылкиГрафики[1]);
	Иначе
		Отбор.Вставить("ВариантГрафика2", Неопределено);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("КлючВарианта", "СравнениеВариантовГрафиковКонтекст");
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("ВидимостьКомандВариантовОтчетов", Ложь);
	
	ОткрытьФорму("Отчет.СравнениеГрафиковКредитовИДепозитов.Форма", ПараметрыФормы);
			
КонецПроцедуры

#КонецОбласти

#Область ДосьеКонтрагента

Процедура ДосьеКонтрагента(СсылкиКонтрагенты, ПараметрыВыполнения) Экспорт
	
	ПараметрКоманды = СсылкиКонтрагенты;
	ПараметрыФормы = ПараметрыВыполнения.Форма.Параметры;
	
	Если ЗначениеЗаполнено(ПараметрКоманды) Тогда
		ИНН_Контрагента = ОбщегоНазначенияУТВызовСервера.РеквизитыКонтрагента(ПараметрКоманды[0]); 
		ОткрытьФорму("Отчет.ДосьеКонтрагента.Форма",Новый Структура("ИНН", ИНН_Контрагента));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Процедура ABCXYZАнализНоменклатуры(СсылкаНоменклатура,ПараметрыВыполнения) Экспорт
	
	ПараметрыФормы = Новый Структура("Номенклатура", СсылкаНоменклатура);
	
	Если ЗначениеЗаполнено(СсылкаНоменклатура) Тогда
		ОткрытьФорму("Отчет.ABCXYZАнализНоменклатуры.Форма", Новый Структура("Отбор,СформироватьПриОткрытии", ПараметрыФормы, Истина), 
			ПараметрыВыполнения.Форма);
	КонецЕсли;
	
КонецПроцедуры

Функция ВедомостьПоСериямТовара(СсылкаНоменклатура,ПараметрыВыполнения) Экспорт
	
	ПараметрыФормы = Новый Структура("Номенклатура", СсылкаНоменклатура);
	
	Если ЗначениеЗаполнено(СсылкаНоменклатура) Тогда
		
		ОткрытьФорму("Отчет.ВедомостьПоСериямНоменклатуры.Форма", Новый Структура("Отбор,СформироватьПриОткрытии", ПараметрыФормы, Истина),
			ПараметрыВыполнения.Форма);
		
	КонецЕсли;
	
КонецФункции

Процедура СтруктураПодчиненности(СсылкаНаОбъект, ПараметрыВыполнения) Экспорт
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		ОткрытьФорму("ОбщаяФорма.СтруктураПодчиненности",Новый Структура("ОбъектОтбора", СсылкаНаОбъект));
	КонецЕсли;
	
КонецПроцедуры

Процедура ВзаимодействияПоКонтакту(СсылкаНаОбъект, ПараметрыВыполнения) Экспорт
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
	
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Контакт", СсылкаНаОбъект);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ТипВзаимодействия", "Контакт");
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
		ПараметрыФормы.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
		ПараметрыФормы.Вставить("ГруппироватьПоПартнеру", Истина);
		
		ОткрытьФорму("ЖурналДокументов.Взаимодействия.Форма.ФормаСпискаПараметрическая", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СегментыПартнера(СсылкаНаОбъект, ПараметрыВыполнения) Экспорт
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		
		ПараметрыФормы = Новый Структура("Партнер", СсылкаНаОбъект);
		ОткрытьФорму("РегистрСведений.ПартнерыСегмента.Форма.СегментыПартнераПараметрическая", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

#Область СверкаРасчетовСПартнерами

Функция СверкаРасчетовСПартнерами(СсылкаНаОбъект, ПараметрыВыполнения) Экспорт
	
	Если ТипЗнч(СсылкаНаОбъект) <> Тип("Массив") Тогда
		МассивДокументов = Новый Массив();
		МассивДокументов.Добавить(СсылкаНаОбъект);
	Иначе
		МассивДокументов = СсылкаНаОбъект;
	КонецЕсли; 
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СверкаРасчетовСПартнерамиЗавершение", ЭтотОбъект);
	
	УправлениеПечатьюКлиент.ПроверитьПроведенностьДокументов(ОписаниеОповещения, МассивДокументов);
	
КонецФункции

Процедура СверкаРасчетовСПартнерамиЗавершение(МассивДокументов, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Отбор", Новый Структура("СверкаВзаиморасчетов", МассивДокументов));
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", "СверкаВзаиморасчетов");
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("ВидимостьКомандВариантовОтчетов", Ложь);
		
	ОткрытьФорму("Отчет.СверкаРасчетовСПартнерами.Форма", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
