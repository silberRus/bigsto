////////////////////////////////////////////////////////////////////////////////
// ИнтеграцияСЯндексКассой: механизм интеграции с сервисом Яндекс.Касса.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция возвращает ссылку на страницу оплаты через Яндекс.Кассу
// сформированную на основании переданных данных 
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - ссылка на документ на основании которого необходимо сформировать ссылку
//
// Возвращаемое значение:
//  Строка - ссылка на страницу оплаты через Яндекс.Кассу
//
Функция ПлатежнаяСсылка(ДокументСсылка) Экспорт
	
	Возврат ИнтеграцияСЯндексКассойСлужебныйВызовСервера.ПлатежнаяСсылкаПоДокументу(ДокументСсылка);
	
КонецФункции

// Отправляет запрос получения операций по Яндекс.Кассе на сервер 1С, 
// а после получения ответа возвращает адрес хранилища в котором содержится массив структур описывающих операции
//
// Параметры:
//  НастройкаЯндексКассы - СправочникСсылка.НастройкиЯндексКассы - Текущая настройка Яндекс.Кассы, если не указана то, будут обработаны все действительные настройки;
//  ПериодЗапроса - СтандартныйПериод, Структура - Период за который будут выбираться операции по Яндекс.Кассе.
//    * ДатаНачала - Дата - Начало периода запроса, если не указан, дата начала будет определена автоматически.
//    * ДатаОкончания - Дата - Окончание периода запроса, если не указан, дата окончания будет равна текущей дате.
//  ТолькоСДоговором - Булево, Неопределено - позволяет указать для каких настроек следует загружать операции:
//                                            * Неопределено - будут загружены и операции по схемам "С договором" и "Без договора"
//                                            * Истина - будут загружены операции по схеме "С договором"
//                                            * Ложь - будут загружены операции по схеме "Без договора"
//                                            Если указан параметр НастройкаЯндексКассы этот параметр не учитывается
// Возвращаемое значение:
//  АдресРезультата - Строка - Массив структур содержащий данные об операциях по Яндекс.Кассе
//
Функция ОперацииПоЯндексКассе(НастройкаЯндексКассы = Неопределено,
							  ПериодЗапроса = Неопределено,
							  ТолькоСДоговором = Неопределено) Экспорт
	
	ДатаНачала    = Неопределено;
	ДатаОкончания = Неопределено;
	Если ТипЗнч(ПериодЗапроса) = Тип("СтандартныйПериод") Тогда 
		ДатаНачала    = ПериодЗапроса.ДатаНачала;
		ДатаОкончания = ПериодЗапроса.ДатаОкончания;
	ИначеЕсли ТипЗнч(ПериодЗапроса) = Тип("Структура") Тогда 
		ПериодЗапроса.Свойство("ДатаНачала",    ДатаНачала);
		ПериодЗапроса.Свойство("ДатаОкончания", ДатаОкончания);
	КонецЕсли;
	
	ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	Если Не ДатаНачала = Неопределено Тогда 
		Если ДатаНачала > ТекущаяДатаСеанса ИЛИ ДатаОкончания > КонецДня(ТекущаяДатаСеанса) Тогда
			СообщениеТекст = НСтр("ru = 'Период запроса указан неверно'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеТекст, , "Период");
			Возврат "";
		КонецЕсли;
		
		Если Не ДатаОкончания = Неопределено Тогда
			Если ДатаНачала > ДатаОкончания Тогда 
				СообщениеТекст = НСтр("ru = 'Период запроса указан неверно'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеТекст, , "Период");
				Возврат "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ДатаОкончания = Неопределено Тогда
		Если КонецДня(ДатаОкончания) = КонецДня(ТекущаяДатаСеанса) Тогда
			ДатаОкончания = ТекущаяДатаСеанса;
		Иначе
			ДатаОкончания = КонецДня(ДатаОкончания);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыПроцедуры = Новый Структура();
	ПараметрыПроцедуры.Вставить("НастройкаЯндексКассы",	НастройкаЯндексКассы);
	ПараметрыПроцедуры.Вставить("ДатаНачала",			ДатаНачала);
	ПараметрыПроцедуры.Вставить("ДатаОкончания",		ДатаОкончания);
	ПараметрыПроцедуры.Вставить("ТолькоСДоговором",		ТолькоСДоговором);
	
	АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
	ИнтеграцияСЯндексКассойСлужебныйВызовСервера.ЗагрузитьОперацииПоЯндексКассе(ПараметрыПроцедуры, АдресРезультата);
	
	Возврат АдресРезультата;
	
КонецФункции

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
// Вызывается из процедуры ШаблоныСообщенийПереопределяемый.ПриПодготовкеШаблонаСообщения
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Подсказка      - Строка - Расширенная информация о реквизите.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** Подсказка      - Строка - Расширенная информация о вложении.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl" и др.
//  НазначениеШаблона       - Строка  - Имя назначения шаблон сообщения.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, НазначениеШаблона, ДополнительныеПараметры) Экспорт 
	
	ИнтеграцияСЯндексКассойСлужебныйВызовСервера.ПриПодготовкеШаблонаСообщения(Реквизиты,
		Вложения, НазначениеШаблона, ДополнительныеПараметры);
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
// Вызывается из процедуры ШаблоныСообщенийПереопределяемый.ПриФормированииСообщения
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов 
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  НазначениеШаблона - Строка -  полное имя назначения шаблон сообщения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, НазначениеШаблона, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияСЯндексКассойСлужебныйВызовСервера.ПриФормированииСообщения(Сообщение,
		НазначениеШаблона, ПредметСообщения, ДополнительныеПараметры);
	
КонецПроцедуры

// Процедура проверяет заполнение обязательных реквизитов организации, в зависимости от варианта 
// с договором или без набор реквизитов меняется
//
// Параметры:
//  Организация 		- СправочникСсылка.Организации - ссылка на проверяемую организацию
//  ВариантСДоговором 	- Булево - Истина - с договором, Ложь - без договора
//  Отказ 				- Булево - Истина - обнаружены ошибки, Ложь - ошибок не обнаружено
//
Процедура ПроверитьОрганизациюНаСоответствиеТребованиямПриПодключенииКСервису(Знач Организация,
																			  Знач ВариантСДоговором,
																			  Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Реквизиты = "ИНН, КПП, НаименованиеПолное, ЮрФизЛицо";
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, Реквизиты);
	
	Если ЗначенияРеквизитов.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда // Нерезидентов не подключаем.
		ТекстСообщения = НСтр(
			"ru = 'К сервису Яндекс.Касса могут быть подключены только организации резиденты Российской Федерации'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Организация", , Отказ);
		Возврат;
	КонецЕсли;
	
	Если ВариантСДоговором Тогда 
		
		Возврат; // тут проверять нечего, все есть у Яндекса
		
	Иначе
		
		Если Не ЗначениеЗаполнено(ЗначенияРеквизитов.ИНН) Тогда 
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите ИНН организации'"),,
				"Организация",, Отказ);
			
		Иначе
			
			ЭтоЮрЛицо = ЗначенияРеквизитов.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
			
			ТекстСообщения = "";
			Если НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ЗначенияРеквизитов.ИНН, 
				ЭтоЮрЛицо, 
				ТекстСообщения) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(НСтр("ru = 'Ошибка проверки ИНН организации. %1'"), ТекстСообщения),,
					"Организация",,Отказ);
			КонецЕсли;	
			
		КонецЕсли;
		
		Если СтрДлина(ЗначенияРеквизитов.ИНН) = 10 и Не ЗначениеЗаполнено(ЗначенияРеквизитов.КПП) Тогда 
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите КПП организации'"), , "Организация",,
				Отказ);
			
		ИначеЕсли ЗначениеЗаполнено(ЗначенияРеквизитов.КПП) Тогда
		
			ТекстСообщения = "";
			Если НЕ РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(ЗначенияРеквизитов.КПП,
					ТекстСообщения) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(НСтр("ru = 'Ошибка проверки КПП организации. %1'"), ТекстСообщения),,
					"Организация",,Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

// Функция возвращает массив типов документов, на основании которых 
// можно выставлять счет на оплату через Яндекс.Кассу
//
// Возвращаемое значение:
//   Массив   - Массив типов значений
//
Функция ТипыОснованияПлатежаЧерезЯндексКассу() Экспорт 

	ТипыОснованияПлатежа = Метаданные.ОпределяемыеТипы.ОснованиеПлатежаЧерезЯндексКассу.Тип.Типы();
	
	ИсключенияИзТипов = Новый Массив;
	ИнтеграцияСЯндексКассойПереопределяемый.ИсключенияИзТипаОснованиеПлатежаЧерезЯндексКассу(ИсключенияИзТипов);
	
	Для Каждого ИсключениеИзТипов из ИсключенияИзТипов Цикл 
		Индекс = ТипыОснованияПлатежа.Найти(ИсключениеИзТипов);
		Если Не Индекс = Неопределено Тогда 
			ТипыОснованияПлатежа.Удалить(Индекс);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТипыОснованияПлатежа;

КонецФункции

// Проверка того, что переданный тип входит в состав определяемого типа ОснованиеПлатежаЧерезЯндексКассу.
// Для типа "Неопределено" возвращается Ложь.
//
// Возвращаемое значение:
//  Булево.
//
Функция ЭтоОснованиеПлатежаЧерезЯндексКассу(Тип) Экспорт 
	
	Возврат ТипыОснованияПлатежаЧерезЯндексКассу().Найти(Тип) <> Неопределено;
	
КонецФункции

#Область Команды

// Добавление команд в форме.
//
// Параметры:
//  Объект - данные формы
//  Форма - УправляемаяФорма - текущая форма.
//  МестоРазмещенияКомандПоУмолчанию - ГруппаФормы - группа подменю для добавления команд.
//
Процедура ПриСозданииНаСервере(Объект, Форма, МестоРазмещенияКомандПоУмолчанию = Неопределено) Экспорт
	
	ТипОбъекта = Неопределено;
	Если ТипЗнч(Объект) = Тип("ДанныеФормыСтруктура") Тогда
		ТипОбъекта = ТипЗнч(Объект.Ссылка);
	ИначеЕсли ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Объект)) Тогда
		ТипОбъекта = ТипЗнч(Объект);
	КонецЕсли;
	
	Если ЭтоОснованиеПлатежаЧерезЯндексКассу(ТипОбъекта) Тогда 
		ЭлектронноеВзаимодействиеСлужебный.РазместитьНаФормеКомандыЭДО(Форма,
			МестоРазмещенияКомандПоУмолчанию, "ИнтеграцияСЯндексКассой");
	КонецЕсли;
	
КонецПроцедуры

// Формирование команд
//
// Параметры:
//  ПолноеИмя - Строка - имя объекта, например "Документ.РеализацияТоваровУслуг"
//  КомандыЭДО - ТаблицаЗначений - подготавливаемый список команд ЭДО
//  НаправлениеЭД - Перечисление.НаправлениеЭД - параметр отбора входящих или исходящих документов.
//  ТолькоВоВсехДействиях - Булево - признак размещения команд в меню "Еще".
//
Процедура СформироватьКомандыЭДО(ПолноеИмя, КомандыЭДО, НаправлениеЭД = Неопределено, ТолькоВоВсехДействиях = Ложь) Экспорт
	
	СоставКоманд = Новый Массив;
	ИнтеграцияСЯндексКассойПереопределяемый.ПодготовитьСтруктуруОбъектовКомандЭДО(СоставКоманд);
	
	ЗначениеФОИспользоватьИнтеграциюСЯндексКасса = 
		ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ЗначениеФункциональнойОпции("ИспользоватьИнтеграциюСЯндексКассой");
	
	ЕстьПравоОбменаССервисами = Пользователи.ЭтоПолноправныйПользователь()
		ИЛИ Пользователи.РолиДоступны("ВыполнениеОбменовСЯндексКассой");
		
	ЕстьПравоПолученияПлатежнойСсылки = Пользователи.ЭтоПолноправныйПользователь()
		ИЛИ Пользователи.РолиДоступны("ПолучениеПлатежнойСсылкиДляЯндексКассы");
		
		
	Если СоставКоманд.Найти(ПолноеИмя) <> Неопределено Тогда
		
		Если ЗначениеФОИспользоватьИнтеграциюСЯндексКасса Тогда
			
			КомандаЭДО = КомандыЭДО.Добавить();
			КомандаЭДО.Обработчик                  = "ИнтеграцияСЯндексКассойКлиент.ОткрытьФормуПолученияПлатежнойСсылки";
			КомандаЭДО.СписокФорм                  = "";
			КомандаЭДО.Идентификатор               = "ОткрытьФормуПолученияПлатежнойСсылки";
			КомандаЭДО.Представление               = НСтр("ru = 'Оплата через Яндекс.Кассу'");
			КомандаЭДО.Порядок                     = 1;
			КомандаЭДО.Картинка                    = БиблиотекаКартинок.ЯндексКасса;
			КомандаЭДО.Отображение                 = ОтображениеКнопки.Картинка;
			КомандаЭДО.РежимИспользованияПараметра = РежимИспользованияПараметраКоманды.Одиночный;
			КомандаЭДО.МестоРазмещения             = "";
			КомандаЭДО.ФункциональныеОпции         = "";
			КомандаЭДО.Недоступна                  = Не ЕстьПравоПолученияПлатежнойСсылки;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти



