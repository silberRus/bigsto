
Процедура ПечатьЧеков() Экспорт
	
	спкДокументы = Б_ПечатьЧековСервер.ПолучитьСпкДокументов(0);
	
	Для Каждого Элемент из спкДокументы Цикл
	
		Б_ПечатьЧековСервер.ИзменитьЗаписьВРегистре_Б_ОчередьПечати(Элемент, 1);
			
		ОбработатьДокумент(Элемент);
		
	КонецЦикла;
	
	//пробуем повторно только корявые
	спкДокументы = Б_ПечатьЧековСервер.ПолучитьСпкДокументов(2);
	Для Каждого Элемент из спкДокументы Цикл
	
		Б_ПечатьЧековСервер.ИзменитьЗаписьВРегистре_Б_ОчередьПечати(Элемент, 1);
			
		ОбработатьДокумент(Элемент);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьДокумент(Элемент)
	
	АктивныйДокумент = Элемент.Документ;
	//0 - печатаем
	//3 - пропускаем с пометкой, что есть чек
	//2 - пропускаем с ошибкой
	
	Статус = "";
	
	Если Б_ПечатьЧековСервер.ЕстьЧекУДокумента(АктивныйДокумент) тогда
		Б_ПечатьЧековСервер.СообщитьПодробно("У документа: " + Строка(АктивныйДокумент) + " уже есть чек. Документ будет пропущен.", Истина);
		Статус = "Пропускаем";	
	КонецЕсли;
	
	Если Статус = "Пропускаем" тогда
		Б_ПечатьЧековСервер.ИзменитьЗаписьВРегистре_Б_ОчередьПечати(Элемент, 3);
	ИначеЕсли Статус = "ПомечаемОшибочным" тогда
		Б_ПечатьЧековСервер.СообщитьПодробно("не удалось напечатать чек у документа: " + Строка(АктивныйДокумент) + ". Помечаем его как ошибочным.", Истина);
		Б_ПечатьЧековСервер.ИзменитьЗаписьВРегистре_Б_ОчередьПечати(Элемент, 2);
	Иначе
		Б_ПечатьЧековСервер.СообщитьПодробно("Печать чека документа: " + Строка(АктивныйДокумент));
		НапечататьЧекДокумента(Элемент);
	КонецЕсли;
	
КонецПроцедуры

Процедура НапечататьЧекДокумента(Элемент)
	
	АктивныйДокумент = Элемент.Документ;
	
	лПараметры = Б_ПечатьЧековСервер.СтруктураНастроекДляПечати(АктивныйДокумент);
	
	СтруктураСостояниеКассовойСмены = РозничныеПродажиВызовСервера.СостояниеКассовойСмены(лПараметры.ПодключенноеОборудование.ККТ);
	
	Если СтруктураСостояниеКассовойСмены.СменаОткрыта тогда
		Если СтруктураСостояниеКассовойСмены.Ошибка24Часа тогда
			Б_ПечатьЧековСервер.СообщитьПодробно("Прошло более 24 часов с момента открытия кассы. Касса будет закрыта.", Истина);
			ВыполнитьЗакрытиеСмены();
			Б_ПечатьЧековСервер.СообщитьПодробно("Открытие кассовой смены.", Истина);
			ВыполнитьОткрытиеСмены();
		КонецЕсли;
	Иначе
		Б_ПечатьЧековСервер.СообщитьПодробно("Открытие кассовой смены.", Истина);
		ВыполнитьОткрытиеСмены();
	КонецЕсли;
	
	
	ФормаПредпросмотрЧека = ПолучитьФорму("Обработка.ПредпросмотрЧека.Форма.Форма", лПараметры);
	
	лВариантОтправкиЭлектронногоЧека = Б_ПечатьЧековСервер.ПолучитьВариантОтправкиЭлектронногоЧека();
	ФормаПредпросмотрЧека.ВариантОтправкиЭлектронногоЧека = лВариантОтправкиЭлектронногоЧека;
	
	Если лВариантОтправкиЭлектронногоЧека = ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьEmail") тогда
		
		КиКлиента = Б_ПечатьЧековСервер.ПолучитьКонтактыДокумента(АктивныйДокумент);
		ФормаПредпросмотрЧека.Email = КиКлиента.Email;	
		
	ИначеЕсли лВариантОтправкиЭлектронногоЧека = ПредопределенноеЗначение("Перечисление.ВариантыОтправкиЭлектронногоЧекаПокупателю.ОтправитьSMS") тогда
		
		КиКлиента = Б_ПечатьЧековСервер.ПолучитьКонтактыДокумента(АктивныйДокумент);
		ФормаПредпросмотрЧека.Телефон = КиКлиента.Телефон
		
	КонецЕсли;
	
	Попытка
		РозничныеПродажиКлиент.ОбработатьСостояниеСмены(
		ФормаПредпросмотрЧека,
		Новый ОписаниеОповещения("ПослеОбработкиСостоянияСмены", ФормаПредпросмотрЧека));
	Исключение
	КонецПопытки;
	
	Если НЕ Б_ПечатьЧековСервер.ЕстьЧекУДокумента(АктивныйДокумент) тогда
		Б_ПечатьЧековСервер.СообщитьПодробно("Не удалось напечатать чек документу: " + Строка(АктивныйДокумент) + ".", Истина);
		Б_ПечатьЧековСервер.ИзменитьЗаписьВРегистре_Б_ОчередьПечати(Элемент, 2);
	КонецЕсли;
	
Конецпроцедуры


#Область ОткрытиеЗакрытиеСмены

Процедура ВыполнитьОткрытиеСмены() Экспорт
	
	ОповещениеИнформация = Новый ОписаниеОповещения("ОповещениеИнформации", ЭтотОбъект);
	
	Если НЕ Б_ПечатьЧековСервер.ЭтоНужноеРабочееМесто() тогда 
		ПоказатьВопрос(ОповещениеИнформация, "Открытие смены должно выполнятся на рабочем месте, указанном в общих настройках",РежимДиалогаВопрос.ОК);
	КонецЕсли;

	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыОткрытияЗакрытияСмены();
	ПараметрыОперации.Кассир = РозничныеПродажиВызовСервера.РеквизитыКассира().Наименование;
	
	ИдентификаторУстройства = Б_ПечатьЧековСервер.ПолучитьИдентификаторУстройства();
	
	Если ЗначениеЗаполнено(ИдентификаторУстройства) тогда
		МенеджерОборудованияКлиент.НачатьОткрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, Новый УникальныйИдентификатор, ПараметрыОперации, ИдентификаторУстройства);
	Иначе
		ПоказатьВопрос(ОповещениеИнформация, "Подключаемое устройство не найдено",РежимДиалогаВопрос.ОК);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьЗакрытиеСмены() Экспорт
	
	ОповещениеИнформация = Новый ОписаниеОповещения("ОповещениеИнформации", ЭтотОбъект);
	
	Если НЕ Б_ПечатьЧековСервер.ЭтоНужноеРабочееМесто() тогда 
		ПоказатьВопрос(ОповещениеИнформация, "Закрытие смены должно выполнятся на рабочем месте, указанном в общих настройках",РежимДиалогаВопрос.ОК);
	КонецЕсли;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыОткрытияЗакрытияСмены();
	ПараметрыОперации.Кассир = РозничныеПродажиВызовСервера.РеквизитыКассира().Наименование;
	
	ИдентификаторУстройства = Б_ПечатьЧековСервер.ПолучитьИдентификаторУстройства();
	
	Если ЗначениеЗаполнено(ИдентификаторУстройства) тогда
		МенеджерОборудованияКлиент.НачатьЗакрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, Новый УникальныйИдентификатор, ПараметрыОперации, ИдентификаторУстройства);
	Иначе
		ПоказатьВопрос(ОповещениеИнформация, "Подключаемое устройство не найдено",РежимДиалогаВопрос.ОК);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОперацияЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ТекстСообщения = ?(РезультатВыполнения.Результат, НСтр("ru='Операция успешно завершена.'"), РезультатВыполнения.ОписаниеОшибки);
	Сообщить(ТекстСообщения);
	
КонецПроцедуры

Процедура ОповещениеИнформации(РезультатВыполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти
