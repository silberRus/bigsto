
#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьИндексАкцизнойМарки(ТекущаяСтрока, ИмяКолонкиКоличество = "Количество") Экспорт
	
	Если ТекущаяСтрока.МаркируемаяАлкогольнаяПродукция = Истина Тогда
		
		Если  ТекущаяСтрока[ИмяКолонкиКоличество] = ТекущаяСтрока.КоличествоАкцизныхМарок
			И ТекущаяСтрока[ИмяКолонкиКоличество] <> 0 Тогда
			ТекущаяСтрока.ИндексАкцизнойМарки = 1;
		Иначе
			ТекущаяСтрока.ИндексАкцизнойМарки = 2;
		КонецЕсли;
		
	Иначе
		
		ТекущаяСтрока.ИндексАкцизнойМарки = 0;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет поле индекса акцизной марки в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - Структура - структура со свойствами строки документа.
//	СтруктураДействий - Структура - структура с действиями, которые нужно произвести.
//
Процедура ЗаполнитьИндексАкцизнойМаркиДляСтрокиТабличнойЧасти(ТекущаяСтрока, СтруктураДействий) Экспорт
	
	ПараметрыДействия = Неопределено;
	Если СтруктураДействий.Свойство("ЗаполнитьИндексАкцизнойМарки", ПараметрыДействия) Тогда
		
		Если ПараметрыДействия <> Неопределено И ПараметрыДействия.Свойство("ИмяКолонкиКоличество") Тогда
			ИмяКолонкиКоличество = ПараметрыДействия.ИмяКолонкиКоличество;
		Иначе
			ИмяКолонкиКоличество = "Количество";
		КонецЕсли;
		
		АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(ТекущаяСтрока, ИмяКолонкиКоличество);
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает структуру параметров сканирования акцизных марок.
//
Функция ПараметрыСканированияАкцизныхМарок(Форма) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИдентификаторСтроки");
	
	Результат.Вставить("АдресВоВременномХранилище",      "");
	Результат.Вставить("АдресСоответствияАкцизныхМарок", Неопределено);
	Результат.Вставить("ДоступныеСтатусы",               Новый Массив);
	Результат.Вставить("ЗапрашиватьНоменклатуру",        Истина);
	Результат.Вставить("КонтрольАкцизныхМарок",          Ложь);
	Результат.Вставить("Операция",                       Неопределено);
	Результат.Вставить("ОперацияКонтроляАкцизныхМарок",  "");
	Результат.Вставить("ОрганизацияЕГАИС",               Неопределено);
	Результат.Вставить("СоздаватьШтрихкодУпаковки",      Ложь);
	Результат.Вставить("КлючевыеРеквизиты",              Новый Массив);
	
	Результат.Вставить("ВыполнятьКонтрольЗаполненияДляDataMatrix", Истина);
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "АдресСоответствияАкцизныхМарок") Тогда
		Результат.АдресСоответствияАкцизныхМарок = Форма.АдресСоответствияАкцизныхМарок;
	КонецЕсли;
	
	Если СтрНачинаетсяС(Форма.ИмяФормы, "Документ.АктПостановкиНаБалансЕГАИС") Тогда
		
		Если Форма.Объект.ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3") Тогда
			Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.КПостановкеНаБаланс"));
		КонецЕсли;
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.Отсутствует"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка"));
		
		Результат.КонтрольАкцизныхМарок         = Истина;
		Результат.Операция                      = Форма.Объект.ВидДокумента;
		Результат.ОперацияКонтроляАкцизныхМарок = "АктПостановкиНаБаланс";
		Результат.ОрганизацияЕГАИС              = Форма.Объект.ОрганизацияЕГАИС;
		Результат.СоздаватьШтрихкодУпаковки     = Форма.Объект.ВидДокумента <> ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2");
		
		Результат.КлючевыеРеквизиты.Добавить("КоличествоПоСправке1");
		Результат.КлючевыеРеквизиты.Добавить("НомерТТН");
		Результат.КлючевыеРеквизиты.Добавить("ДатаТТН");
		Результат.КлючевыеРеквизиты.Добавить("ДатаРозлива");
		Результат.КлючевыеРеквизиты.Добавить("НомерПодтвержденияЕГАИС");
		Результат.КлючевыеРеквизиты.Добавить("ДатаПодтвержденияЕГАИС");
		
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Документ.АктСписанияЕГАИС") Тогда
		
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ВНаличии"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка"));
		
		Результат.КонтрольАкцизныхМарок         = Истина;
		Результат.Операция                      = Форма.Объект.ВидДокумента;
		Результат.ОперацияКонтроляАкцизныхМарок = "АктСписания";
		Результат.ОрганизацияЕГАИС              = Форма.Объект.ОрганизацияЕГАИС;
		Результат.СоздаватьШтрихкодУпаковки     = Форма.Объект.ВидДокумента <> ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктСписанияИзРегистра2");
		
		Результат.КлючевыеРеквизиты.Добавить("Цена");
		
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Документ.ВозвратИзРегистра2ЕГАИС") Тогда
		
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ВНаличии"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка"));
		
		Результат.КонтрольАкцизныхМарок         = Истина;
		Результат.Операция                      = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ВозвратИзРегистра2");
		Результат.ОперацияКонтроляАкцизныхМарок = "Продажа";
		Результат.ОрганизацияЕГАИС              = Форма.Объект.ОрганизацияЕГАИС;
		Результат.СоздаватьШтрихкодУпаковки     = Ложь;
		
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Документ.ЗапросАкцизныхМарокЕГАИС") Тогда
		
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.КПостановкеНаБаланс"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.Реализована"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.НеПодтверждена"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ВНаличии"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ВРезерве"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.Отсутствует"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка"));
		
		Результат.КонтрольАкцизныхМарок         = Истина;
		Результат.Операция                      = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросАкцизныхМарок");
		Результат.ОперацияКонтроляАкцизныхМарок = "Продажа";
		Результат.ОрганизацияЕГАИС              = Форма.Объект.ОрганизацияЕГАИС;
		Результат.СоздаватьШтрихкодУпаковки     = Ложь;
		
		Результат.КлючевыеРеквизиты.Добавить("ТипМарки");
		Результат.КлючевыеРеквизиты.Добавить("СерияМарки");
		Результат.КлючевыеРеквизиты.Добавить("НомерМарки");
		Результат.КлючевыеРеквизиты.Добавить("КодАкцизнойМарки");
		
		// Отключен контроль справок 2 и номенклатуры
		Результат.ВыполнятьКонтрольЗаполненияДляDataMatrix = Ложь;
		
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Документ.ПередачаВРегистр2ЕГАИС") Тогда
		
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ВНаличии"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка"));
		
		Результат.КонтрольАкцизныхМарок         = Ложь;
		Результат.Операция                      = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ПередачаВРегистр2");
		Результат.ОперацияКонтроляАкцизныхМарок = "Продажа";
		Результат.ОрганизацияЕГАИС              = Форма.Объект.ОрганизацияЕГАИС;
		Результат.СоздаватьШтрихкодУпаковки     = Ложь;
		
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Документ.ТТНИсходящаяЕГАИС") Тогда
		
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ВНаличии"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка"));
		
		Результат.КонтрольАкцизныхМарок     = Истина;
		Результат.Операция                  = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ТТН");
		Результат.ОрганизацияЕГАИС          = Форма.Объект.Грузоотправитель;
		Результат.СоздаватьШтрихкодУпаковки = Истина;
		
		Результат.КлючевыеРеквизиты.Добавить("Цена");
		Результат.КлючевыеРеквизиты.Добавить("НомерПартии");
		Результат.КлючевыеРеквизиты.Добавить("ИдентификаторУпаковки");
		
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Документ.ЧекЕГАИСВозврат") Тогда
		
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.Реализована"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка"));
		
		Результат.КонтрольАкцизныхМарок         = Истина;
		Результат.Операция                      = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЧекККМ");
		Результат.ОперацияКонтроляАкцизныхМарок = "Возврат";
		Результат.ОрганизацияЕГАИС              = Форма.Объект.ОрганизацияЕГАИС;
		Результат.СоздаватьШтрихкодУпаковки     = Истина;
		
		Результат.КлючевыеРеквизиты.Добавить("Цена");
		Результат.КлючевыеРеквизиты.Добавить("Штрихкод");
		
	ИначеЕсли СтрНачинаетсяС(Форма.ИмяФормы, "Документ.ЧекЕГАИС") Тогда
		
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ВНаличии"));
		Результат.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка"));
		
		Результат.КонтрольАкцизныхМарок         = Истина;
		Результат.Операция                      = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЧекККМ");
		Результат.ОперацияКонтроляАкцизныхМарок = "Продажа";
		Результат.ОрганизацияЕГАИС              = Форма.Объект.ОрганизацияЕГАИС;
		Результат.СоздаватьШтрихкодУпаковки     = Истина;
		
		Результат.КлючевыеРеквизиты.Добавить("Цена");
		Результат.КлючевыеРеквизиты.Добавить("Штрихкод");
		
	Иначе
		
		АкцизныеМаркиЕГАИСКлиентСерверПереопределяемый.ЗаполнитьПараметрыСканированияАкцизныхМарок(Результат, Форма);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Проверяет соответствие переданного штрихкода формату Data Matrix.
//
// Параметры:
//  Штрихкод - Строка - проверяемый штрихкод.
//
// Возвращаемое значение:
//  Булево - Истина, если штрихкод в формате Data Matrix, Ложь - в противном случае.
//
Функция ЭтоШтрихкодDataMatrix(Штрихкод) Экспорт
	
	Если СтрДлина(Штрихкод) < 15 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Сред(Штрихкод, 4, 1) <> "-" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПроверяемыйШтрихкод = СтрЗаменить(Штрихкод, "-", "");
	
	Для Сч = 1 По Мин(15, СтрДлина(ПроверяемыйШтрихкод)) Цикл
		Если СтрНайти("0123456789", Сред(ПроверяемыйШтрихкод, Сч, 1)) = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

// Извлекает из переданного штрихкода тип, серию и номер марки.
//
// Параметры:
//  Штрихкод - Строка - штрихкод в формате Data Matrix, виды:
//     ВВВ-СССННННННННХХХХХХХХХХХХ - акцизная марка (АМ),
//     ВВВ-СССНННННННННХХХХХХХХХХХХ - федеральная спец. марка (ФСМ),
//  ТекстОшибки - Строка - если в процессе разбора произошла ошибка, в переменную вернется ее текст.
//
// Возвращаемое значение:
//  Структура - данные марки:
//   * ТипМарки - Строка(3),
//   * СерияМарки - Строка(3),
//   * НомерМарки - Строка(8 или 9).
//
Функция РазложитьШтрихкодDataMatrix(Штрихкод, ТекстОшибки = "") Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ТипМарки"  , "");
	Результат.Вставить("СерияМарки", "");
	Результат.Вставить("НомерМарки", "");
	
	Если НЕ ЭтоШтрихкодDataMatrix(Штрихкод) Тогда
		ТекстОшибки = НСтр("ru='Штрихкод %1 не соответствует формату Data Matrix.'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Штрихкод);
		Возврат Результат;
	КонецЕсли;
	
	ТипМарки = АкцизныеМаркиВызовСервера.ТипАкцизнойМарки(Лев(Штрихкод, 3));
	
	Если НЕ ЗначениеЗаполнено(ТипМарки.ВидМарки) Тогда
		ТекстОшибки = НСтр("ru='Ошибка при обработке штрихкода %1: Не удалось определить вид акцизной марки (ФСМ или АМ).'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Штрихкод);
		Возврат Результат;
	КонецЕсли;
	
	ДлинаНомера = ?(ТипМарки.ВидМарки = "АМ", 8, 9);
	
	Результат.ТипМарки   = Лев(Штрихкод, 3);
	Результат.СерияМарки = Сред(Штрихкод, 5, 3);
	Результат.НомерМарки = Сред(Штрихкод, 8, ДлинаНомера);
	
	Возврат Результат;
	
КонецФункции

Функция СтруктураДанныхШтрихкода(Штрихкод) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("АлкогольнаяПродукция",    Неопределено);
	Результат.Вставить("ВложенныеШтрихкоды",      Новый Соответствие);
	Результат.Вставить("КодАлкогольнойПродукции", "");
	Результат.Вставить("Количество",              0);
	Результат.Вставить("МаркированныеТовары",     Новый Массив);
	Результат.Вставить("Номенклатура",            Неопределено);
	Результат.Вставить("НомерМарки",              "");
	Результат.Вставить("Серия",                   Неопределено);
	Результат.Вставить("СерияМарки",              "");
	Результат.Вставить("Справка2",                Неопределено);
	Результат.Вставить("Справки2",                Новый Массив);
	Результат.Вставить("Статус",                  Неопределено);
	Результат.Вставить("ТекстОшибки",             "");
	Результат.Вставить("ТипМарки",                "");
	Результат.Вставить("ТипУпаковки",             Неопределено);
	Результат.Вставить("ТипШтрихкода",            Неопределено);
	Результат.Вставить("Упаковка",                Неопределено);
	Результат.Вставить("Характеристика",          Неопределено);
	Результат.Вставить("Штрихкод",                Штрихкод);
	Результат.Вставить("ШтрихкодУпаковки",        Неопределено);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти