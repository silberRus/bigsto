////////////////////////////////////////////////////////////////////////////////
// ИнтеграцияСЯндексКассойСлужебныйКлиент: механизм интеграции с сервисом Яндекс.Касса.
//
////////////////////////////////////////////////////////////////////////////////


#Область ПрограммныйИнтерфейс

// Выполняет интерактивную команду которая требует проверки на подключение к ИПП.
//
// Параметры:
//   Команда - Строка - Имя команды которую необходимо выполнить:
//     * "ОткрытьФормуПлатежнойСсылки"   - открывает форму с ссылкой на страницу оплаты через Яндекс.Кассу.
//     * "ПолучитьОперацииПоЯндексКассе" - выполняет загрузку данных по операциям через Яндекс.Кассу.
//   ПараметрыКоманды - Структура - параметры выполняемой команды, для каждой команды свои
Процедура ВыполнитьКомандуСПроверкойПодключенияИПП(Команда, ПараметрыКоманды = Неопределено) Экспорт 
	
	Если Не ИнтеграцияСЯндексКассойСлужебныйВызовСервера.ДанныеИнтернетПоддержкиУказаны() Тогда 
		
		//Попросим указать данные интернет поддержки пользователя
		Если ПараметрыКоманды = Неопределено Тогда 
			ПараметрыКоманды = Новый Структура();
		КонецЕсли;	
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("Команда"			, Команда);
		ДополнительныеПараметры.Вставить("ПараметрыКоманды"	, ПараметрыКоманды);

		ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку",
			ЭтотОбъект, ДополнительныеПараметры);
		
			
			ТекстВопроса = НСтр("ru='Для использования функций взаимодействия с сервисом Яндекс.Касса,
				|необходимо подключиться к Интернет-поддержке пользователей.
				|Подключиться сейчас?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
	Иначе
		
		Если Команда = "ОткрытьФормуПлатежнойСсылки" Тогда 
			
			ОткрытьФормуПлатежнойСсылки(ПараметрыКоманды.ПараметрКоманды, ПараметрыКоманды.ПараметрыВыполненияКоманды);
			
		ИначеЕсли Команда = "ПолучитьОперацииПоЯндексКассе" Тогда 
			
			ПолучитьОперацииПоЯндексКассе(ПараметрыКоманды);
			
		ИначеЕсли Команда = "ВключитьИспользованиеРегламентныхЗаданий" Тогда 
			
			ВыполнитьОбработкуОповещения(ПараметрыКоманды.ВключитьИспользованиеРегламентныхЗаданийПродолжение,
				ПараметрыКоманды);
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

// Получает данные для заполнения предопределенного шаблона сообщений.
//
// Параметры:
//   ДанныеЗаполнения - Структура - Структура данных заполнения, обязательно необходимо указать:
//    * ПолноеИмяТипаНазначения - Строка - Полное имя объекта метаданных, на основании которого по данному шаблону будут создаваться сообщения.
//    * ТипШаблона - Строка - тип шаблона должен быть "Письмо".
//    * ФорматПисьма - ПеречислениеСсылка.СпособыРедактированияЭлектронныхПисем - формат письма, должен быть HTML.
//
Процедура ПолучитьДанныеЗаполненияПредопределенногоШаблона(ДанныеЗаполнения) Экспорт 
	
	ПредопределенныеШаблоныСообщений =  Новый Массив;
	ИнтеграцияСЯндексКассойСлужебныйВызовСервера.ПредопределенныеШаблоныСообщений(ПредопределенныеШаблоныСообщений);
	
	Для Каждого Шаблон из ПредопределенныеШаблоныСообщений Цикл 
		
		Если ДанныеЗаполнения.ПолноеИмяТипаНазначения = Шаблон.ПолноеИмяТипаНазначения Тогда 
			ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ДанныеЗаполнения, Шаблон, Истина);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Только для внутреннего использования. Продолжение процедуры ВыполнитьКомандуСПроверкойПодключенияИПП
Процедура ПодключитьИнтернетПоддержку(Ответ, Параметры) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Да Тогда

		ДополнительныеПараметры = Новый Структура();
		Для Каждого Параметр из Параметры.ПараметрыКоманды Цикл 
			ДополнительныеПараметры.Вставить(Параметр.Ключ, Параметр.Значение);
		КонецЦикла;
		ДополнительныеПараметры.Вставить("Команда", Параметры.Команда);
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуЗавершение",
			ЭтотОбъект, ДополнительныеПараметры);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
				ОповещениеОЗавершении,
				ЭтотОбъект);
				
	Иначе
		
		Если Параметры.ПараметрыКоманды.Свойство("ОповещениеОбОтказе") Тогда 
			ВыполнитьОбработкуОповещения(Параметры.ПараметрыКоманды.ОповещениеОбОтказе, ДополнительныеПараметры);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Только для внутреннего использования. Обработка результата подключения к ИПП
Процедура ПодключитьИнтернетПоддержкуЗавершение(ДанныеАутентификации, ДополнительныеПараметры) Экспорт
	
	Если Не ДанныеАутентификации = Неопределено Тогда
		
		ВыполнитьКомандуСПроверкойПодключенияИПП(ДополнительныеПараметры.Команда, ДополнительныеПараметры);
		
	Иначе
		
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru = 'Интернет-поддержка пользователей не подключена, использование функций взаимодействия с сервисом Яндекс.Касса недоступно.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Если ДополнительныеПараметры.Свойство("ОповещениеОбОтказе") Тогда 
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОбОтказе, ДополнительныеПараметры);
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедуры

#Область ОткрытиеФормыПлатежнойСсылки

// Команда получения ссылки на страницу оплаты через Яндекс.Кассу
Процедура ОткрытьФормуПлатежнойСсылки(ПараметрКоманды, ПараметрыВыполненияКоманды) 
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ДокументСсылка", ПараметрКоманды);
	
	ОткрытьФорму("Справочник.НастройкиЯндексКассы.Форма.ФормаПодготовкиПлатежнойСсылки", 
		ПараметрыФормы,
		ПараметрыВыполненияКоманды.Источник,
		ПараметрыВыполненияКоманды.Источник.УникальныйИдентификатор,
		ВариантОткрытияОкна.ОтдельноеОкно);
		
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеОпераций

// Команда загрузки операций по Яндекс.Кассе
Процедура ПолучитьОперацииПоЯндексКассе(Знач ПараметрыКоманды)
	
	ОповещениеОЗавершении =  ПараметрыКоманды.ОповещениеОЗавершении;

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Загрузка операций по Яндекс.Кассе'");
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ПолучитьОперацииПоЯндексКассеЗавершение = Новый ОписаниеОповещения(
		"ПолучитьОперацииПоЯндексКассеЗавершение", ЭтотОбъект,
		ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыКоманды));
		
	ПараметрыКоманды.Удалить("ОповещениеОЗавершении");
	ДлительнаяОперация = ИнтеграцияСЯндексКассойСлужебныйВызовСервера.ЗагрузитьОперацииПоЯндексКассеВФоне(ПараметрыКоманды);
		
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ПолучитьОперацииПоЯндексКассеЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

// Только для внутреннего использования. Обработка результата загрузки операций по Яндекс.Кассе
Процедура ПолучитьОперацииПоЯндексКассеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда  // отменено пользователем
		Возврат;
	КонецЕсли;
	
	ВывестиРезультат(Результат, ДополнительныеПараметры.ОповещениеОЗавершении);
	
	Если Результат.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(,Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры 

Процедура ВывестиРезультат(Результат, ОповещениеОЗавершении)
	
	Если Результат.Свойство("Сообщения") Тогда 
		Для Каждого Сообщение из Результат.Сообщения Цикл 
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
		
	Если Результат.Статус = "Выполнено" Тогда
		
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, Результат.АдресРезультата);
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		
		ТекстСообщения = Результат.ПодробноеПредставлениеОшибки;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти