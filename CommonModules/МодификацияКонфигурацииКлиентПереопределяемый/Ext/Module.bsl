////////////////////////////////////////////////////////////////////////////////
// Переопределяемые процедуры, вызываемые из обработчиков форм, таких как:
// "ПриСозданииНаСервере", "ПриЧтенииНаСервере", "ПередЗаписьюНаСервере", 
// "ПослеЗаписи", а также при изменении некоторых реквизитов табличной части,
// таких как "Номенклатура", "Характеристика".
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ЗаполнениеОбработчиковФормы

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
// 	Форма - форма, из обработчика события которой происходит вызов процедуры.
//	см. справочную информацию по событиям управляемой формы.
//
Процедура ПослеЗаписи(Форма, ПараметрыЗаписи)Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеНоменклатуры

// Переопределяемая процедура, вызываемая из обработчика реквизита "Номенклатура" табличной части.
//
// Параметры:
// 	ТекущаяСтрока - ДанныеФормыЭлементКоллекции - текущая строка табличной части.
// 	ПараметрыДействия - Структура - допустимые действия для табличной части.
//	КэшированныеЗначения - Структура - Кэшированные значения табличной части.
Процедура НоменклатураПриИзмененииПереопределяемый(ТекущаяСтрока,ПараметрыДействия,КэшированныеЗначения)Экспорт


КонецПроцедуры
  
#КонецОбласти 

#Область ЗаполнениеХарактеристики

// Переопределяемая процедура, вызываемая из обработчика реквизита "Характеристика" табличной части.
//
// Параметры:
// 	ТекущаяСтрока - ДанныеФормыЭлементКоллекции - текущая строка табличной части.
// 	ПараметрыДействия - Структура - допустимые действия для табличной части.
//	КэшированныеЗначения - Структура - Кэшированные значения табличной части.
Процедура ХарактеристикаПриИзмененииПереопределяемый(ТекущаяСтрока,ПараметрыДействия,КэшированныеЗначения)Экспорт


КонецПроцедуры
	
#КонецОбласти 

#Область Общие

// Проверка необходимость вызова сервера при обработке строки табличной части.
//
// Параметры:
// 	ИмяСвойства - Строка -  имя передаваемого свойства.
// 	ПараметрыДействия - Структура - допустимые действия для табличной части.
//
// Возвращаемое значение:
//	Истина
//
Функция ОбработкаТабличнойЧастиНеобходимВызовСервера(ИмяСвойства,ПараметрыДействия)Экспорт

	Возврат Истина	

КонецФункции   

// Вызывается в формах при выборе команды, которая добавлена программно
//
// Параметры:
//  Форма					 - УправляемаяФорма - форма в которой расположена команда
//  Команда					 - КомандаФормы - выбранная команда
//  ДополнительныеПараметры	 - Структура - дополнительные параметры
//
Процедура ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры) Экспорт

	//Богушевич было--------------------------------------------------------------------------------------------------------
	//Если Форма.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента"
	//	Или Форма.ИмяФормы = "Документ.ЗаказКлиента.Форма.ФормаДокумента" Тогда
	//	
	//	Если Команда.Имя = "ДобавитьЗаСчетПродавца" Тогда
	//		// Наследство предыдущих разработчиков:
	//		Форма.Объект.ДополнительнаяИнформацияПоДоставке = Форма.Объект.ДополнительнаяИнформацияПоДоставке+"
	//		|Наличный расчёт";	
	//	ИначеЕсли Команда.Имя = "ДобавитьЗаНашСчет" тогда
	//		// Наследство предыдущих разработчиков:
	//		Форма.Объект.ДополнительнаяИнформацияПоДоставке = Форма.Объект.ДополнительнаяИнформацияПоДоставке+"
	//		|<<ЗА НАШ СЧЁТ>>";	
	//	КонецЕсли;	
	//	
	//КонецЕсли;	
	//Богушевич стало
	Если Форма.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента"
		 ИЛИ Форма.ИмяФормы = "Документ.ЗаказКлиента.Форма.БП_ФормаДокумента"
		 // silber {
		 ИЛИ Форма.ИмяФормы = "Документ.КП.Форма.ФормаДокумента"
		 // } silber
		 Или Форма.ИмяФормы = "Документ.ЗаказКлиента.Форма.ФормаДокумента" Тогда
		СтрокаДопИнформации = Форма.Объект.ДополнительнаяИнформацияПоДоставке;
		
		Если Команда.Имя = "ДобавитьЗаСчетКлиента" Тогда
			// Наследство предыдущих разработчиков:
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ЗА СЧЕТ КЛИЕНТА>>","<<ЗА СЧЕТ КЛИЕНТА>>");
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ЗА НАШ СЧЕТ>>","<<ЗА СЧЕТ КЛИЕНТА>>");
			Если Найти(СтрокаДопИнформации,"<<ЗА СЧЕТ КЛИЕНТА>>")=0 Тогда
				СтрокаДопИнформации = СтрокаДопИнформации+Символы.ПС+ "<<ЗА СЧЕТ КЛИЕНТА>>";		
			КонецЕсли;
		ИначеЕсли Команда.Имя = "ДобавитьЗаНашСчет" тогда
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ЗА НАШ СЧЕТ>>","<<ЗА НАШ СЧЕТ>>");
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ЗА СЧЕТ КЛИЕНТА>>","<<ЗА НАШ СЧЕТ>>");
			Если Найти(СтрокаДопИнформации,"<<ЗА НАШ СЧЕТ>>")=0 Тогда
				СтрокаДопИнформации = СтрокаДопИнформации+Символы.ПС+ "<<ЗА НАШ СЧЕТ>>";		
			КонецЕсли;
		ИначеЕсли Команда.Имя = "ДобавитьДоТерминалаТК" тогда
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ДО ТЕРМИНАЛА ТК>>","<<ДО ТЕРМИНАЛА ТК>>");
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ДО ДВЕРЕЙ>>","<<ДО ТЕРМИНАЛА ТК>>");
			Если Найти(СтрокаДопИнформации,"<<ДО ТЕРМИНАЛА ТК>>")=0 Тогда
				СтрокаДопИнформации = СтрокаДопИнформации+Символы.ПС+ "<<ДО ТЕРМИНАЛА ТК>>";		
			КонецЕсли;
		ИначеЕсли Команда.Имя = "ДобавитьДоДверей" тогда
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ДО ДВЕРЕЙ>>","<<ДО ДВЕРЕЙ>>");
			СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<ДО ТЕРМИНАЛА ТК>>","<<ДО ДВЕРЕЙ>>");
			Если Найти(СтрокаДопИнформации,"<<ДО ДВЕРЕЙ>>")=0 Тогда
				СтрокаДопИнформации = СтрокаДопИнформации+Символы.ПС+ "<<ДО ДВЕРЕЙ>>";		
			КонецЕсли;
		ИначеЕсли Команда.Имя = "ДобавитьНаличныйРасчёт" тогда
			Если Найти(СтрокаДопИнформации,"<<Наличный расчёт -> 309-91-91 (доб. 104), Людмила Шевчук>>")=0 Тогда
				СтрокаДопИнформации = СтрокаДопИнформации+Символы.ПС+ "<<Наличный расчёт -> 309-91-91 (доб. 104), Людмила Шевчук>>";		
			Иначе
				СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,Символы.ПС+"<<Наличный расчёт -> 309-91-91 (доб. 104), Людмила Шевчук>>","");		
				СтрокаДопИнформации = СтрЗаменить(СтрокаДопИнформации,"<<Наличный расчёт -> 309-91-91 (доб. 104), Людмила Шевчук>>","");		
			КонецЕсли;
		КонецЕсли;	
		Форма.Объект.ДополнительнаяИнформацияПоДоставке = СтрокаДопИнформации;
	КонецЕсли;	
	//конец----------------------------------------------------------------------------------------------------------
	
	Если Форма.ИмяФормы = "Документ.ЗаказПоставщику.Форма.ФормаДокумента" тогда	
		Если Команда.Имя = "СверитьПоФайлуПоставщика" Тогда
			ОткрытьФорму(
				"Обработка.СТ_СверкаЗаказаПоФайлуПоставщика.Форма.Форма",
				Новый Структура("ТоварыИсходная", Форма.Объект.Товары),
				Форма,
				Форма.УникальныйИдентификатор);
		КонецЕсли;
			
	ИначеЕсли Форма.ИмяФормы = "Документ.ПриобретениеТоваровУслуг.Форма.ФормаДокумента" тогда			
		
		Если Команда.Имя = "СверитьПоФайлуПоставщика" Тогда
			
			Если НЕ Форма.Объект.ПоступлениеПоЗаказам Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"Сверка может проводиться только для поступлений, заполненных по заказу", ,
					"ПоступлениеПоЗаказам",
					"Объект");
				
				Возврат;
				
			КонецЕсли;
			
			Если Форма.Модифицированность Тогда
				Ответ = Вопрос(
				НСтр("ru = 'Перед сверкой документ необходимо записать. Выполнить запись документа и продолжить?'"),
				РежимДиалогаВопрос.ДаНет);
				Если Ответ = КодВозвратаДиалога.Нет Тогда
					Возврат;
				ИначеЕсли Не Форма.Записать() Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("ТоварыИсходная", Форма.Объект.Товары);
			
			ОткрытьФорму(
				"Обработка.СТ_СверкаПоступленияПоФайлуПоставщика.Форма.Форма",
				ПараметрыФормы,
				Форма,
				Форма.УникальныйИдентификатор);
			КонецЕсли;	
	//Богушевич карточки клиента
	ИначеЕсли Форма.ИмяФормы = "Справочник.Партнеры.Форма.ФормаЭлемента" ИЛИ Форма.ИмяФормы = "Справочник.Партнеры.Форма.АТ_ФормаЭлемента" Тогда
		Если Команда.Имя = "ПоказатьКарточкуКлиента" Тогда
			
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("СсылкаНаОбъект", Форма.Объект.Ссылка);
			
			Если Форма.Модифицированность И Вопрос("Для продолжения необходимо записать объет.",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
			
			ОткрытьФорму(
				"Справочник.Партнеры.Форма.БП_ФормаНастройкиВидовДеятельности",
				ПараметрыФормы,
				Форма,
				Форма.УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли; 
	//+АТ Терентьев
	ИначеЕсли Форма.ИмяФормы = "ЖурналДокументов.БезналичныеПлатежи.Форма.ФормаСписка" Тогда
		Если Команда.Имя = "РазнестиПлатежи" Тогда
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("БанковскийСчет", Форма.БанковскийСчетОтбор);
			ПараметрыФормы.Вставить("НачалоПериода", Форма.НачалоПериода);
			ПараметрыФормы.Вставить("КонецПериода", Форма.КонецПериода);
			
			ОткрытьФорму(
				"Обработка.АТ_РазнесениеПлатежей.Форма.Форма",
				ПараметрыФормы,
				Форма,
				Форма.УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	//-АТ Терентьев
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
