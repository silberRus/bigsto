////////////////////////////////////////////////////////////////////////////////
// ИнтеграцияСЯндексКассойПереопределяемый: механизм интеграции с сервисом Яндекс.Касса.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Команды

// Заполняет список команд в прикладном решении.
// 
// Параметры:
//  СоставКомандЭДО - Массив - состав объектов, например "Документ.РеализацияТоваровУслуг".
//
Процедура ПодготовитьСтруктуруОбъектовКомандЭДО(СоставКомандЭДО) Экспорт
	
	СоставКомандЭДО.Добавить("Документ.ЗаказКлиента");
	СоставКомандЭДО.Добавить("Документ.СчетНаОплатуКлиенту");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикПолученияОперацийПоЯндексКассе

// Позволяет преобразовать полученные данные к необходимому виду
// и передать функционалу прикладного решения для последующей обработки.
// Вызывается по умолчанию после получения операций по расписанию.
//
// Параметры:
//  ПараметрыПроцедуры - Структура - Структура процедуры, вида:
//   * ДанныеОпераций - Массив - Массив структур описывающих операции по Яндекс.Кассе,
//   соответствует результату работы процедуры ИнтеграцияСЯндексКассойСлужебныйВызовСервера.ЗагрузитьОперацииПоЯндексКассе
//   * АдресХранилища - Строка - Адрес на результат в хранилище
//
Процедура ОбработатьПолучениеОперацийПоЯндексКассе(ПараметрыПроцедуры, АдресХранилища) Экспорт
	
	Перем ДанныеОпераций;
	
	// &ЗамерПроизводительности
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ИнтеграцияСЯндексКассой.СозданиеОперацийПоЯндексКассе");
	
	ПараметрыПроцедуры.Свойство("ДанныеОпераций", ДанныеОпераций);
	
	Если Не ЗначениеЗаполнено(ДанныеОпераций) Тогда 
		// &ЗамерПроизводительности
		ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 1);
		
		Возврат;
	КонецЕсли;
	
	// Разделение операций по виду схемы интеграции
	МассивОперацийСДоговором = Новый Массив;
	МассивОперацийБезДоговора = Новый Массив;
	
	// &ЗамерПроизводительности
	ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, 1, "ИнициализацияМассивов");
	КоличествоПовторяющихсяДанных = 0;
	
	Для Каждого Операции из ДанныеОпераций Цикл
		// &ЗамерПроизводительности
		КоличествоПовторяющихсяДанных = КоличествоПовторяющихсяДанных + 1;
		
		Если Операции.СДоговором Тогда 
			МассивОперацийСДоговором.Добавить(Операции);
		Иначе
			МассивОперацийБезДоговора.Добавить(Операции);
		КонецЕсли;
	КонецЦикла;
	// &ЗамерПроизводительности
	ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоПовторяющихсяДанных, "ЗаполнениеМассивов");
	
	
	СчетчикДокументов = 0;
	
	// Создание "С договором"
	Если МассивОперацийСДоговором.Количество() Тогда 
		
		ДатыУспешногоОбмена = Новый Соответствие;
		МассивОпераций = Новый Массив;
		
		// &ЗамерПроизводительности
		ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, 1, "ИнициализацияПеременных_СДоговором");
		КоличествоПовторяющихсяДанных = 0;
		
		Для Каждого Операции из МассивОперацийСДоговором Цикл 
			// &ЗамерПроизводительности
			КоличествоПовторяющихсяДанных = КоличествоПовторяющихсяДанных + 1;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивОпераций, Операции.ОперацииМассивСтруктур);
			ДатыУспешногоОбмена.Вставить(Операции.НастройкаЯндексКассы, Операции.ДатаОтвета);
		КонецЦикла;
		// &ЗамерПроизводительности
		ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоПовторяющихсяДанных, "ЗаполнениеПеременных_СДоговором");
		
		АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		ПараметрыЗагрузки = Новый Структура;
		ПараметрыЗагрузки.Вставить("МассивОпераций", МассивОпераций);
		ПараметрыЗагрузки.Вставить("ДатыУспешногоОбмена", ДатыУспешногоОбмена);
		
		// &ЗамерПроизводительности
		ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, 1, "ПоместитьВоВременноеХранилище_СДоговором");
		КоличествоПовторяющихсяДанных = МассивОпераций.Количество();
		
		Документы.ОперацияПоЯндексКассе.Создать(ПараметрыЗагрузки, АдресРезультата);
		
		// &ЗамерПроизводительности
		ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоПовторяющихсяДанных, "СозданиеДокумента_СДоговором");
		
		
		МассивСозданныхОпераций = ПолучитьИзВременногоХранилища(АдресРезультата);
		
		Если ЗначениеЗаполнено(МассивСозданныхОпераций) Тогда 
			СчетчикДокументов = МассивСозданныхОпераций.Количество();
		КонецЕсли;
		УдалитьИзВременногоХранилища(АдресРезультата);
		
	КонецЕсли;
	
	// Создание "Без договора"
	Если МассивОперацийБезДоговора.Количество() Тогда 
		
		ДатыУспешногоОбмена = Новый Соответствие;
		ПараметрыЗагрузки = Новый Структура;
		КлиентБанк = Обработки.КлиентБанк.Создать();
		ПараметрыЗагрузки.Вставить("ДокументыКЗагрузке", КлиентБанк.ДокументыКЗагрузке.ВыгрузитьКолонки());
		
		Для Каждого Операции из МассивОперацийБезДоговора Цикл 
			
			// &ЗамерПроизводительности
			ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, 1, "ИнициализацияПеременных_БезДоговора");
			
			СтрокиВыписки = Новый Массив;
			Текст = Новый ТекстовыйДокумент;
			Текст.УстановитьТекст(Операции.ОперацииТекстовыйФормат);
			Для НомерСтроки = 1 по Текст.КоличествоСтрок() Цикл 
				СтрокиВыписки.Добавить(СокрЛП(Текст.ПолучитьСтроку(НомерСтроки)));
			КонецЦикла;
			
			ДанныеВыписки = ДенежныеСредстваКлиентСервер.РазобратьФайлВыписки(СтрокиВыписки, Ложь);
			ПараметрыЗагрузки.Вставить("Выписка",  Новый Структура);
			ПараметрыЗагрузки.Выписка.Вставить("ДанныеВыписки", ДанныеВыписки);
			ПараметрыЗагрузки.Выписка.Вставить("СтрокиВыписки", СтрокиВыписки);
			ПараметрыЗагрузки.Выписка.Вставить("ТекстСообщения", "");
			ПараметрыЗагрузки.Вставить("ДатаНачалаЗагрузки", Операции.ДатаНачала);
			ПараметрыЗагрузки.Вставить("ДатаКонцаЗагрузки",  Операции.ДатаОкончания);
			
			Если ДанныеВыписки <> Неопределено
				И ТипЗнч(ДанныеВыписки) = Тип("Структура")
				И ДанныеВыписки.Свойство("Заголовок") Тогда
				
				ПараметрыЗагрузки.Вставить("ДатаНачалаЗагрузки", 
					ДенежныеСредстваКлиентСервер.ПолучитьДатуИзСтроки(ДанныеВыписки.Заголовок.ДатаНачала));
				ПараметрыЗагрузки.Вставить("ДатаКонцаЗагрузки", 
					ДенежныеСредстваКлиентСервер.ПолучитьДатуИзСтроки(ДанныеВыписки.Заголовок.ДатаКонца));
			КонецЕсли;
			
			ПараметрыЗагрузки.Вставить("ПериодЗагрузки", 
				Новый СтандартныйПериод(ПараметрыЗагрузки.ДатаНачалаЗагрузки, ПараметрыЗагрузки.ДатаКонцаЗагрузки));
			
			ПараметрыЗагрузки.Вставить("АдресХранилищаФайла",  
				ПоместитьВоВременноеХранилище(ПараметрыЗагрузки.Выписка.СтрокиВыписки, Новый УникальныйИдентификатор));
				
			ПараметрыЗагрузки.Вставить("Загружается", Истина);
			
			НомерСчета = "";
			Для Каждого РасчетныйСчет из ПараметрыЗагрузки.Выписка.ДанныеВыписки.РасчетныеСчета Цикл 
				НомерСчета = РасчетныйСчет.РасчСчет
			КонецЦикла;
			Если Не ПустаяСтрока(НомерСчета) Тогда 
				ПараметрыЗагрузки.Вставить("БанковскийСчет",
				Справочники.БанковскиеСчетаОрганизаций.НайтиПоРеквизиту("НомерСчета", НомерСчета,,Операции.Организация));
			Иначе
				Продолжить;
			КонецЕсли;
			
			ПараметрыЗагрузки.Вставить("ПрямойОбмен", Ложь);
			ПараметрыЗагрузки.Вставить("СтрокиВыписки", ПараметрыЗагрузки.Выписка.СтрокиВыписки);
			ПараметрыЗагрузки.Вставить("СоздаватьКонтрагентов", Ложь);
			ПараметрыЗагрузки.Вставить("ПроводитьДокументы",    Истина);
			
			АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
			
			// &ЗамерПроизводительности
			ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, 1, "ПоместитьВоВременноеХранилище_БезДоговора");
			КоличествоПовторяющихсяДанных = Операции.ОперацииМассивСтруктур.Количество();
			
			Обработки.КлиентБанк.Загрузить(ПараметрыЗагрузки, АдресРезультата);
			
			// &ЗамерПроизводительности
			ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоПовторяющихсяДанных, "ЗагрузкаВКлиентБанк_БезДоговора");
			
			ТаблицаДокументов = ПолучитьИзВременногоХранилища(АдресРезультата);
			Если ЗначениеЗаполнено(ТаблицаДокументов) Тогда
				Найденные = ТаблицаДокументов.Итог("НайденДокументВБазе");
				КоличествоВсего = ТаблицаДокументов.Количество();
				СчетчикДокументов = СчетчикДокументов + (КоличествоВсего - Найденные);
				Если КоличествоВсего Тогда 
					ДатыУспешногоОбмена.Вставить(Операции.НастройкаЯндексКассы, Операции.ДатаОтвета);
				КонецЕсли;
			КонецЕсли;
			УдалитьИзВременногоХранилища(АдресРезультата);
		КонецЦикла;
		
		// &ЗамерПроизводительности
		ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, 1, "ЗавершениеОбработки_БезДоговора");
		КоличествоПовторяющихсяДанных = 0;
		
		Для Каждого ДатаУспешногоОбмена из ДатыУспешногоОбмена Цикл 
			
			// &ЗамерПроизводительности
			КоличествоПовторяющихсяДанных = КоличествоПовторяющихсяДанных + 1;
			
			РегистрыСведений.СтатусОбменовСЯндексКассой.ОбновитьСтатус(
				ДатаУспешногоОбмена.Ключ, ДатаУспешногоОбмена.Значение);
		КонецЦикла;
		
		// &ЗамерПроизводительности
		ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоПовторяющихсяДанных, "ОбновитьСтатус_БезДоговора");
		
		
	КонецЕсли;
	
	// Возврат результата
	ПоместитьВоВременноеХранилище(СчетчикДокументов, АдресХранилища);
	
	// &ЗамерПроизводительности
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 1);
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеПлатежнойСсылки

Процедура ПриФормированииПлатежнойСсылки(ПараметрыПлатежнойСсылки, Отказ) Экспорт 
	
	ДокументСсылка = ПараметрыПлатежнойСсылки.ДокументСсылка;
	
	//Добавляются свои поля
	ПараметрыПлатежнойСсылки.Вставить("КоличествоЭтаповОплаты");
	ПараметрыПлатежнойСсылки.Вставить("ПредставлениеДокумента");
	ПараметрыПлатежнойСсылки.Вставить("ТипДокумента");
	
	
	//По типу документа формируется выборка данных
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ЗаказКлиента", ДокументСсылка);
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	Таблица.Ссылка КАК Ссылка,
			|	1 КАК КоличествоТоваров
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	Документ.ЗаказКлиента.Товары КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка = &ЗаказКлиента
			|	И Таблица.Отменено = ЛОЖЬ
			|	И (Таблица.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
			|			ИЛИ Таблица.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
			|				И (НЕ Таблица.Ссылка.ВернутьМногооборотнуюТару
			|					ИЛИ Таблица.Ссылка.ТребуетсяЗалогЗаТару))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	1 КАК КоличествоЭтаповОплаты,
			|	ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ЭтапыОплаты
			|ИЗ
			|	Документ.ЗаказКлиента.ЭтапыГрафикаОплаты КАК ЗаказКлиентаЭтапыГрафикаОплаты
			|ГДЕ
			|	ЗаказКлиентаЭтапыГрафикаОплаты.СуммаПлатежа <> 0
			|	И ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка = &ЗаказКлиента
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	1,
			|	ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка
			|ИЗ
			|	Документ.ЗаказКлиента.ЭтапыГрафикаОплаты КАК ЗаказКлиентаЭтапыГрафикаОплаты
			|ГДЕ
			|	ЗаказКлиентаЭтапыГрафикаОплаты.СуммаПлатежа <> 0
			|	И ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка.ТребуетсяЗалогЗаТару
			|	И ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка = &ЗаказКлиента
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ЭтапыОплаты.Ссылка,
			|	СУММА(ЭтапыОплаты.КоличествоЭтаповОплаты) КАК КоличествоЭтаповОплаты
			|ПОМЕСТИТЬ ЭтапыОплатыИтог
			|ИЗ
			|	ЭтапыОплаты КАК ЭтапыОплаты
			|
			|СГРУППИРОВАТЬ ПО
			|	ЭтапыОплаты.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДокументЗаказКлиента.СуммаДокумента КАК СуммаДокумента,
			|	ДокументЗаказКлиента.Валюта КАК Валюта,
			|	ДокументЗаказКлиента.ИдентификаторПлатежа КАК ИдентификаторПлатежа,
			|	ДокументЗаказКлиента.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
			|	ВЫБОР
			|		КОГДА НЕ ДокументЗаказКлиента.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
			|				И НЕ ДокументЗаказКлиента.Контрагент.ИНН + ""/"" + ДокументЗаказКлиента.Контрагент.КПП = ""/""
			|			ТОГДА ДокументЗаказКлиента.Контрагент.ИНН + ""/"" + ДокументЗаказКлиента.Контрагент.КПП
			|		КОГДА ДокументЗаказКлиента.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
			|				И НЕ ДокументЗаказКлиента.Контрагент.ИНН = """"
			|			ТОГДА ДокументЗаказКлиента.Контрагент.ИНН
			|		ИНАЧЕ ДокументЗаказКлиента.Контрагент.Представление
			|	КОНЕЦ КАК КонтрагентИдентификаторПлательщика,
			|	ЕСТЬNULL(ЭтапыОплаты.КоличествоЭтаповОплаты, 0) КАК КоличествоЭтаповОплаты,
			|	ДокументЗаказКлиента.Представление КАК ПредставлениеДокумента,
			|	""ЗаказКлиента"" КАК ТипДокумента,
			|	ДокументЗаказКлиента.ДокументОснование,
			|	ЕСТЬNULL(ТаблицаТовары.КоличествоТоваров, 0) КАК КоличествоТоваров
			|ИЗ
			|	Документ.ЗаказКлиента КАК ДокументЗаказКлиента
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиЯндексКассы КАК НастройкиЯндексКассы
			|		ПО ДокументЗаказКлиента.Организация = НастройкиЯндексКассы.Организация
			|			И (НЕ НастройкиЯндексКассы.ПометкаУдаления)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ЭтапыОплатыИтог КАК ЭтапыОплаты
			|		ПО ДокументЗаказКлиента.Ссылка = ЭтапыОплаты.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК ТаблицаТовары
			|		ПО ДокументЗаказКлиента.Ссылка = ТаблицаТовары.Ссылка
			|ГДЕ
			|	ДокументЗаказКлиента.Ссылка = &ЗаказКлиента";
		РезультатВыборки = Запрос.Выполнить().Выбрать();
		Если РезультатВыборки.Следующий() Тогда 
			ЗаполнитьЗначенияСвойств(ПараметрыПлатежнойСсылки, РезультатВыборки);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда 	
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СчетНаОплатуКлиенту", ДокументСсылка);
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	СчетНаОплатуКлиенту.Ссылка КАК Ссылка,
			|	1 КАК КоличествоТоваров
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК Товары
			|		ПО СчетНаОплатуКлиенту.ДокументОснование = Товары.Ссылка
			|			И (Товары.Отменено = ЛОЖЬ)
			|			И (Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
			|				ИЛИ Товары.Ссылка.ТребуетсяЗалогЗаТару
			|				ИЛИ НЕ Товары.Ссылка.ВернутьМногооборотнуюТару)
			|ГДЕ
			|	СчетНаОплатуКлиенту.Ссылка = &СчетНаОплатуКлиенту
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	СчетНаОплатуКлиенту.Ссылка,
			|	1
			|ИЗ
			|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК Товары
			|		ПО СчетНаОплатуКлиенту.ДокументОснование = Товары.Ссылка
			|			И (Товары.Отменено = ЛОЖЬ)
			|			И (Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
			|				ИЛИ Товары.Ссылка.ТребуетсяЗалогЗаТару
			|				ИЛИ НЕ Товары.Ссылка.ВернутьМногооборотнуюТару)
			|ГДЕ
			|	СчетНаОплатуКлиенту.Ссылка = &СчетНаОплатуКлиенту
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	СчетНаОплатуКлиенту.Ссылка,
			|	1
			|ИЗ
			|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Товары
			|		ПО СчетНаОплатуКлиенту.ДокументОснование = Товары.Ссылка
			|			И (Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
			|				ИЛИ Товары.Ссылка.ТребуетсяЗалогЗаТару
			|				ИЛИ НЕ Товары.Ссылка.ВернутьМногооборотнуюТару)
			|ГДЕ
			|	СчетНаОплатуКлиенту.Ссылка = &СчетНаОплатуКлиенту
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	СчетНаОплатуКлиенту.Ссылка,
			|	1
			|ИЗ
			|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыкупВозвратнойТарыКлиентом.Товары КАК Товары
			|		ПО СчетНаОплатуКлиенту.ДокументОснование = Товары.Ссылка
			|ГДЕ
			|	СчетНаОплатуКлиенту.Ссылка = &СчетНаОплатуКлиенту
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	СчетНаОплатуКлиенту.Ссылка,
			|	1
			|ИЗ
			|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктВыполненныхРабот.Услуги КАК Услуги
			|		ПО СчетНаОплатуКлиенту.ДокументОснование = Услуги.Ссылка
			|ГДЕ
			|	СчетНаОплатуКлиенту.Ссылка = &СчетНаОплатуКлиенту
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	СчетНаОплатуКлиенту.Ссылка,
			|	1
			|ИЗ
			|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитенту КАК Основание
			|		ПО СчетНаОплатуКлиенту.ДокументОснование = Основание.Ссылка
			|ГДЕ
			|	СчетНаОплатуКлиенту.Ссылка = &СчетНаОплатуКлиенту
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	СчетНаОплатуКлиенту.Ссылка,
			|	1
			|ИЗ
			|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионера.Товары КАК Товары
			|		ПО СчетНаОплатуКлиенту.ДокументОснование = Товары.Ссылка
			|ГДЕ
			|	Товары.Количество <> 0
			|	И Товары.СуммаПродажи <> 0
			|	И СчетНаОплатуКлиенту.Ссылка = &СчетНаОплатуКлиенту
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	СчетНаОплатуКлиенту.Ссылка,
			|	1
			|ИЗ
			|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОСписании.Товары КАК Товары
			|		ПО СчетНаОплатуКлиенту.ДокументОснование = Товары.Ссылка
			|ГДЕ
			|	СчетНаОплатуКлиенту.Ссылка = &СчетНаОплатуКлиенту
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	СчетНаОплатуКлиентуЭтапыГрафикаОплаты.Ссылка КАК Ссылка,
			|	1 КАК КоличествоЭтаповОплаты
			|ПОМЕСТИТЬ ЭтапыОплаты
			|ИЗ
			|	Документ.СчетНаОплатуКлиенту.ЭтапыГрафикаОплаты КАК СчетНаОплатуКлиентуЭтапыГрафикаОплаты
			|ГДЕ
			|	СчетНаОплатуКлиентуЭтапыГрафикаОплаты.Ссылка = &СчетНаОплатуКлиенту
			|	И СчетНаОплатуКлиентуЭтапыГрафикаОплаты.СуммаПлатежа <> 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СчетНаОплатуКлиенту.СуммаДокумента КАК СуммаДокумента,
			|	СчетНаОплатуКлиенту.Валюта КАК Валюта,
			|	СчетНаОплатуКлиенту.ИдентификаторПлатежа КАК ИдентификаторПлатежа,
			|	СчетНаОплатуКлиенту.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
			|	ВЫБОР
			|		КОГДА НЕ СчетНаОплатуКлиенту.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
			|				И НЕ СчетНаОплатуКлиенту.Контрагент.ИНН + ""/"" + СчетНаОплатуКлиенту.Контрагент.КПП = ""/""
			|			ТОГДА СчетНаОплатуКлиенту.Контрагент.ИНН + ""/"" + СчетНаОплатуКлиенту.Контрагент.КПП
			|		КОГДА СчетНаОплатуКлиенту.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
			|				И НЕ СчетНаОплатуКлиенту.Контрагент.ИНН = """"
			|			ТОГДА СчетНаОплатуКлиенту.Контрагент.ИНН
			|		ИНАЧЕ СчетНаОплатуКлиенту.Контрагент.Представление
			|	КОНЕЦ КАК КонтрагентИдентификаторПлательщика,
			|	ЕСТЬNULL(ЭтапыОплаты.КоличествоЭтаповОплаты, 0) КАК КоличествоЭтаповОплаты,
			|	СчетНаОплатуКлиенту.Представление КАК ПредставлениеДокумента,
			|	""СчетНаОплатуКлиенту"" КАК ТипДокумента,
			|	СчетНаОплатуКлиенту.ДокументОснование КАК ДокументОснование,
			|	ЕСТЬNULL(Товары.КоличествоТоваров, 0) КАК КоличествоТоваров
			|ИЗ
			|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиЯндексКассы КАК НастройкиЯндексКассы
			|		ПО СчетНаОплатуКлиенту.Организация = НастройкиЯндексКассы.Организация
			|			И (НЕ НастройкиЯндексКассы.ПометкаУдаления)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ЭтапыОплаты КАК ЭтапыОплаты
			|		ПО СчетНаОплатуКлиенту.Ссылка = ЭтапыОплаты.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК Товары
			|		ПО СчетНаОплатуКлиенту.Ссылка = Товары.Ссылка
			|ГДЕ
			|	СчетНаОплатуКлиенту.Ссылка = &СчетНаОплатуКлиенту";
		
		РезультатВыборки = Запрос.Выполнить().Выбрать();
		Если РезультатВыборки.Следующий() Тогда 
			ПараметрыПлатежнойСсылки.Вставить("ДокументОснование");
			ПараметрыПлатежнойСсылки.Вставить("КоличествоТоваров");
			ЗаполнитьЗначенияСвойств(ПараметрыПлатежнойСсылки, РезультатВыборки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаЗаполненияПараметровПлатежнойСсылки(Знач ПараметрыПлатежнойСсылки, Отказ) Экспорт 
	
	ШаблоныОшибок = Новый Структура;
	ШаблоныОшибок.Вставить("Товары", 
		НСтр("ru = 'В документе %1 отсутствуют товары. Формирование ссылки на страницу оплаты счета через Яндекс.Кассу не требуется'"));
	ШаблоныОшибок.Вставить("Этапы", 
		НСтр("ru = 'В документе %1 отсутствуют этапы оплаты. Формирование ссылки на страницу оплаты счета через Яндекс.Кассу не требуется'"));

	
	Если НЕ (ПараметрыПлатежнойСсылки.ТипДокумента = "СчетНаОплатуКлиенту"
	 И ПараметрыПлатежнойСсылки.Свойство("ДокументОснование") 
	 И ТипЗнч(ПараметрыПлатежнойСсылки.ДокументОснование) = Тип("СправочникСсылка.ДоговорыКонтрагентов")) 
	 И ПараметрыПлатежнойСсылки.Свойство("КоличествоТоваров") И ПараметрыПлатежнойСсылки.КоличествоТоваров = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблоныОшибок.Товары,
			ПараметрыПлатежнойСсылки.ПредставлениеДокумента));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ПараметрыПлатежнойСсылки.КоличествоЭтаповОплаты = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблоныОшибок.Этапы,
				ПараметрыПлатежнойСсылки.ПредставлениеДокумента));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// В процедуре формируется соответствие для реквизитов документов оснований платежа через Яндекс.Кассу,
// Если в прикладном решении есть документы, на основании которых формируется счет для оплаты через Яндекс.Кассу,
// причем названия реквизитов данных документов отличаются от общепринятых "Организация", "Контрагент", "СуммаДокумента",
// "БанковскийСчет", то для этих реквизитов необходимо добавить в соответствие записи виде:
// Ключ = "ПолноеИмяДокументаВМетаданных.ОбщепринятоеНазваниеРеквизита", Значение - "ПолноеИмяДокументаВМетаданных.ДругоеНазваниеРеквизита".
// Например:
//  СоответствиеРеквизитовДокументовОснований.Вставить("Документ.СчетНаОплату.Организация",    "Документ.СчетНаОплату.Организация");
//  СоответствиеРеквизитовДокументовОснований.Вставить("Документ.ЗаказКлиента.БанковскийСчет", "Документ.ЗаказКлиента.БанковскийСчетОрганизации");
//  СоответствиеРеквизитовДокументовОснований.Вставить("Документ.СчетНаОплату.СуммаДокумента", "Документ.СчетНаОплату.Основание.СуммаДокумента");
// 
// Параметры:
// СоответствиеРеквизитовДокументовОснований - Соответствие, в котором:
//    * Ключ - Строка - имя переменной, используемой в коде библиотеки;
//    * Значение - Строка - наименование объекта метаданных и реквизита документа (через точку) в прикладном решении.
//
Процедура СоответствиеРеквизитовДокументовОснованийПлатежа(СоответствиеРеквизитовДокументовОснований) Экспорт 
	
	СоответствиеРеквизитовДокументовОснований.Вставить(
		"Документ.СчетНаОплатуКлиенту.ВалютаДокумента",
		"Документ.СчетНаОплатуКлиенту.Валюта");
	СоответствиеРеквизитовДокументовОснований.Вставить(
		"Документ.ЗаказКлиента.ВалютаДокумента",
		"Документ.ЗаказКлиента.Валюта");
	
КонецПроцедуры

// В процедуре формируется соответствие префиксов документов которые будут использованы при формировании
// идентификатора платежа
// Соответствие будет вида: 
// Ключ = "ИмяДокументаВМетаданных", Ключ = "Префикс"
// Например:
//  Соответствие.Вставить("ЗаказКлиента",			"ЗК");
//  Соответствие.Вставить("СчетНаОплатуКлиенту",	"СЧ");
// 
// Параметры:
// Соответствие - Соответствие, в котором:
//    * Ключ - Строка - имя документа в метаданных;
//    * Значение - Строка - префикс документа для идентификатора платежа.
Процедура ПрефиксыДляИдентификатораПлатежа(Соответствие) Экспорт 


КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормыНастройкиЯндексКассы

// Процедура, позволяет инициализировать дополнительные параметры формы настройки Яндекс.Кассы в момент создания формы,
// чтобы в последствии с ними можно было работать в процедуре ПриСмененСтраницыФормыНастройкиЯндексКассы.
// 
// Параметры:
//  ДополнительныеПараметрыФормы - Структура - дополнительные параметры формы.
//
Процедура ИнициализироватьДополнительныеПараметрыФормыНастройкиЯндексКассы(ДополнительныеПараметрыФормы) Экспорт 
	
	ДополнительныеПараметрыФормы.Вставить("ИспользоватьНесколькоРасчетныхСчетов",
		ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоРасчетныхСчетов"));
	ДополнительныеПараметрыФормы.Вставить("ИспользоватьПодразделения",
		ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения"));

КонецПроцедуры

// Процедура, в которой следует описывать обработку событий смены страниц.
// Процедура вызывается при необходимости выполнения переопределяемых серверных вызовов из процедуры
// ИнтеграцияСЯндексКассойКлиентПереопределяемый.ПриСмененСтраницыФормыНастройкиЯндексКассы(Форма, НоваяСтраница).
//
// Параметры:
//  НоваяСтраница -  Строка - Имя страницы формы.
//  ДополнительныеПараметры - Произвольные - Данные необходимые для выполнения обработчика.
//
Процедура ПриСмененСтраницыФормыНастройкиЯндексКассы(НоваяСтраница, ДополнительныеПараметры) Экспорт 
	
	Если НоваяСтраница = "СтраницаНастройкиУчета" Тогда
		Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда 
			
			// Банковский счет
			Если ДополнительныеПараметры.Свойство("БанковскийСчет")
				И ДополнительныеПараметры.Свойство("ИспользоватьНесколькоРасчетныхСчетов")
				И Не ЗначениеЗаполнено(ДополнительныеПараметры.БанковскийСчет)
				И Не ДополнительныеПараметры.ИспользоватьНесколькоРасчетныхСчетов Тогда
				
					ВалютаРубль = Справочники.Валюты.НайтиПоКоду("643"); //Рубль
					ПараметрыБанковскогоСчетаОрганизации = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
					ПараметрыБанковскогоСчетаОрганизации.Вставить("Валюта", ВалютаРубль);
					
					БанковскийСчет = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(
						ПараметрыБанковскогоСчетаОрганизации);
						
					ДополнительныеПараметры.БанковскийСчет = БанковскийСчет;
				
			КонецЕсли;
			
			// Эквайер
			Если ДополнительныеПараметры.Свойство("Эквайер")
				И Не ЗначениеЗаполнено(ДополнительныеПараметры.Эквайер) Тогда 
				// Для страницы аналитик учета необходимо автоматически заполнять эквайера
				
				ДанныеЭквайераПоУмолчанию = Справочники.НастройкиЯндексКассы.ДанныеЭквайераПоУмолчанию(ТекущаяДатаСеанса());
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ИНН", ДанныеЭквайераПоУмолчанию.ИНН);
				Запрос.УстановитьПараметр("КПП", ДанныеЭквайераПоУмолчанию.КПП);
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
				               |	Контрагенты.Ссылка КАК Эквайер
				               |ИЗ
				               |	Справочник.Контрагенты КАК Контрагенты
				               |ГДЕ
				               |	Контрагенты.ИНН = &ИНН
				               |	И Контрагенты.КПП = &КПП
				               |	И НЕ Контрагенты.ПометкаУдаления";
				РезультатЗапроса = Запрос.Выполнить();
				Если РезультатЗапроса.Пустой() Тогда 
					
					// Эквайер не найден, создадим его
					
					СоздаваемыйКонтрагент = Справочники.Контрагенты.СоздатьЭлемент();
					ЗаполнитьЗначенияСвойств(СоздаваемыйКонтрагент, ДанныеЭквайераПоУмолчанию);
					СоздаваемыйКонтрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
					
					НовыйПартнер = Справочники.Партнеры.СоздатьЭлемент();
					НовыйПартнер.Клиент = Истина;
					НовыйПартнер.Поставщик = Истина;
					НовыйПартнер.ПрочиеОтношения = Истина;
					НовыйПартнер.ДатаРегистрации = ТекущаяДатаСеанса();
					НовыйПартнер.Комментарий = НСтр("ru = '#Создан автоматически при настройке подключения к Яндекс.Кассе'");
					НовыйПартнер.Наименование = СоздаваемыйКонтрагент.Наименование;
					НовыйПартнер.НаименованиеПолное = СоздаваемыйКонтрагент.НаименованиеПолное;
					НовыйПартнер.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.Компания;
					
					Попытка
						НовыйПартнер.Записать();
						СоздаваемыйКонтрагент.Партнер = НовыйПартнер.Ссылка;
						СоздаваемыйКонтрагент.Записать();
						ЭквайерПоУмолчанию = СоздаваемыйКонтрагент.Ссылка;
					Исключение
						ЭквайерПоУмолчанию = Справочники.Контрагенты.ПустаяСсылка();
					КонецПопытки;
					
				Иначе
					
					// Эквайер найден, подставим его
					
					Выборка = РезультатЗапроса.Выбрать();
					Выборка.Следующий();
					ЭквайерПоУмолчанию = Выборка.Эквайер;
				КонецЕсли;
				
				ДополнительныеПараметры.Эквайер =  ЭквайерПоУмолчанию;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура СтатьяРасходовПриИзмененииНаСервере(форма) Экспорт 
	
	Если Не ЗначениеЗаполнено(форма.АналитикаРасходов) Тогда
		РеквизитыФормы = Новый Структура();
		РеквизитыФормы.Вставить("Организация", форма.Организация);
		РеквизитыФормы.Вставить("Подразделение", форма.Подразделение);
		
		форма.АналитикаРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПолучитьАналитикуРасходовПоУмолчанию(
			форма.СтатьяРасходов,
			РеквизитыФормы);
	Иначе
		ДоходыИРасходыСервер.ОчиститьАналитикуПрочихРасходов(форма.СтатьяРасходов, форма.АналитикаРасходов);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ШаблоныСообщений

// Включает использование шаблонов сообщений для интеграции Яндекс.Кассой.
//
// Параметры:
//    Используется - Булево - признак использования шаблонов сообщений.
//
Процедура ПроверитьИспользованиеШаблоновСообщений(Используется) Экспорт

	Используется = Не СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации();
	
КонецПроцедуры

// Переопределяемая процедура, в которой описываются предопределенные шаблоны писем,
// с помощью которых можно будет выставлять счета для оплаты через Яндекс.Кассу.
// Эти шаблоны будут доступны для создания из основной формы настроек и использоваться
// в форме настройки Яндекс.Кассы.
//
// Параметры:
//    Шаблоны - Массив - Массив структур данных описывающая предопределенный шаблоны сообщения.
//    * ПолноеИмяТипаНазначения - Строка - Полное имя объекта метаданных, на основании которого по данному шаблону 
//                                будут создаваться письма.
//    * Текст - Строка - Текст, который будет использоваться в качестве шаблона письма в формате HTML.
//    * Тема - Строка - Текст, который будет использоваться в качестве шаблона темы письма.
//    * Наименование - Строка - Текст, наименование шаблона письма.
//
Процедура ПредопределенныеШаблоныСообщений(Шаблоны) Экспорт 

	ИспользоватьНесколькоВалют = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	
	// Заказ клиента
	Шаблон = Новый Структура();
	Шаблон.Вставить("ПолноеИмяТипаНазначения", "Документ.ЗаказКлиента");
	Шаблон.Вставить("Наименование", НСтр("ru = 'Счет на оплату через Яндекс.Кассу (Заказ клиента)'"));
	Шаблон.Вставить("Тема", СтрШаблон(НСтр("ru = 'Вам выставлен счет на сумму [ЗаказКлиента.СуммаДокумента]%1.'"),
		?(ИспользоватьНесколькоВалют, " [ЗаказКлиента.Валюта]", "")));
	ТекстШаблона = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"<html>
		|<head>
		|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
		|<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" />
		|<meta name=""format-detection"" content=""telephone=no"" />
		|<style type=""text/css"">
		|body{margin:0;padding:8px;overflow:auto;width:100%;height:100%;}
		|p{line-height:1.15;margin:0;}
		|ol,ul{margin-top:0;margin-bottom:0;}
		|img{border:none;}
		|</style>
		|</head>
		|<body>
		|<p>%1</p>
		|<p><br></p>
		|<p>%2</p>
		|<p><br>
		|</p>
		|<p><br></p>
		|<p>%3</p>
		|<p> </p>
		|<p>%4</p>
		|</body>
		|</html>",
		НСтр("ru = '[ЗаказКлиента.КонтактноеЛицоОбращение] [ЗаказКлиента.ПартнерНаименование] благодарим вас, за заказ и просим оплатить счет.'"),
		СтрШаблон(НСтр("ru = 'Сумма счета: [ЗаказКлиента.СуммаДокумента]%1.'"), ?(ИспользоватьНесколькоВалют, " [ЗаказКлиента.Валюта]", "")),
		НСтр("ru = 'Счет можно оплатить, нажав на кнопку'"),
		НСтр("ru = '[ЗаказКлиента.КнопкаОплатитьЧерезЯндексКассу]'"));
	Шаблон.Вставить("Текст", ТекстШаблона);
	Шаблоны.Добавить(Шаблон);
	
	// Счет на оплату клиенту
	Шаблон = Новый Структура();
	Шаблон.Вставить("ПолноеИмяТипаНазначения" , "Документ.СчетНаОплатуКлиенту");
	Шаблон.Вставить("Наименование", НСтр("ru = 'Счет на оплату через Яндекс.Кассу (Счет на оплату клиенту)'"));
	Шаблон.Вставить("Тема", СтрШаблон(НСтр("ru = 'Вам выставлен счет на сумму [СчетНаОплатуКлиенту.СуммаДокумента]%1.'"),
		?(ИспользоватьНесколькоВалют, " [СчетНаОплатуКлиенту.Валюта]", "")));
	ТекстШаблона = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"<html>
		|<head>
		|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
		|<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" />
		|<meta name=""format-detection"" content=""telephone=no"" />
		|<style type=""text/css"">
		|body{margin:0;padding:8px;overflow:auto;width:100%;height:100%;}
		|p{line-height:1.15;margin:0;}
		|ol,ul{margin-top:0;margin-bottom:0;}
		|img{border:none;}
		|</style>
		|</head>
		|<body>
		|<p>%1</p>
		|<p><br></p>
		|<p>%2</p>
		|<p><br></p>
		|<p><br></p>
		|<p>%3</p>
		|<p> </p>
		|<p>%4</p>
		|</body>
		|</html>",
		НСтр("ru = '[СчетНаОплатуКлиенту.КонтактноеЛицоОбращение] [СчетНаОплатуКлиенту.ПартнерНаименование] благодарим вас, за заказ и просим оплатить счет.'"),
		СтрШаблон(НСтр("ru = 'Сумма счета: [СчетНаОплатуКлиенту.СуммаДокумента]%1.'"), ?(ИспользоватьНесколькоВалют, " [СчетНаОплатуКлиенту.Валюта]", "")),
		НСтр("ru = 'Счет можно оплатить, нажав на кнопку'"),
		НСтр("ru = '[СчетНаОплатуКлиенту.КнопкаОплатитьЧерезЯндексКассу]'"));
	Шаблон.Вставить("Текст", ТекстШаблона);
	Шаблоны.Добавить(Шаблон);
	
	

КонецПроцедуры	

#КонецОбласти

#Область Прочее

Процедура ИсключенияИзТипаОснованиеПлатежаЧерезЯндексКассу(Исключения) Экспорт 
	
	Исключения.Добавить(Тип("ДокументСсылка.ОперацияПоЯндексКассе"));
	
КонецПроцедуры

Функция ПолучитьПредопределенныеКонтакты(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ПартнерыКонтактнаяИнформация.Представление КАК Представление,
	|	1 КАК Приоритет
	|ПОМЕСТИТЬ ВТКонтактыПартнера
	|ИЗ
	|	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
	|ГДЕ
	|	ПартнерыКонтактнаяИнформация.Ссылка = &Партнер
	|	И ПартнерыКонтактнаяИнформация.Вид = &Email
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПартнерыКонтактнаяИнформация.Представление,
	|	2
	|ИЗ
	|	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
	|ГДЕ
	|	ПартнерыКонтактнаяИнформация.Ссылка = &Партнер
	|	И ПартнерыКонтактнаяИнформация.Вид = &Телефон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТКонтактыПартнера.Представление КАК Представление,
	|	ВТКонтактыПартнера.Приоритет КАК Приоритет
	|ИЗ
	|	ВТКонтактыПартнера КАК ВТКонтактыПартнера
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТКонтактыПартнера.Приоритет";
	
	Запрос.УстановитьПараметр("Email", Справочники.ВидыКонтактнойИнформации.EmailПартнера);
	Запрос.УстановитьПараметр("Телефон", Справочники.ВидыКонтактнойИнформации.ТелефонПартнера);
	Запрос.УстановитьПараметр("Партнер", ДокументСсылка.Партнер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.Приоритет = 2 Тогда
			Возврат "+7" + РозничныеПродажиКлиентСервер.НомерТелефонаВФормате10Знаков(Выборка.Представление);
		Иначе 
			Возврат Выборка.Представление;	
		КонецЕсли; 
	Иначе 
		Возврат "";	
	КонецЕсли; 
		
КонецФункции

Функция ПредставлениеНоменклатурыДляПечати(Номенклатура, Характеристика, Упаковка) Экспорт
	
	Возврат НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(Номенклатура, Характеристика, Упаковка);
	
КонецФункции

#КонецОбласти

#Область ДанныхДляПолученияПлатежнойСсылки

Функция ДанныеДокументаДляПолученияПлатежнойСсылки(ДокументСсылка, ТолькоДанныеЧека = Ложь) Экспорт
	
	ДанныеДокумента = Новый Структура;
	
	ДанныеДокумента.Вставить("РасширенноеОписаниеТоваров");
	ДанныеДокумента.Вставить("ИнформацияОПродавце");
	ДанныеДокумента.Вставить("ДанныеЧека");
	ДанныеДокумента.Вставить("УчетнаяПолитика");
	ДанныеДокумента.Вставить("ШтрихКоды");
	
	////////////////////////////////////////////////////////////////////////////////
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапросаТоваровДокумента(ДокументСсылка);
	
	ВидыКонтактнойИнформациии = Новый Массив;
	
	ВидыКонтактнойИнформациии.Добавить(Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
	ВидыКонтактнойИнформациии.Добавить(Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	ВидыКонтактнойИнформациии.Добавить(Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	ВидыКонтактнойИнформациии.Добавить(Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Дата, Организация");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", РеквизитыДокумента.Организация);
	Запрос.УстановитьПараметр("Период", РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ОплатаОтКлиента", Истина);
	Запрос.УстановитьПараметр("ТолькоДанныеЧека", ТолькоДанныеЧека);
	Запрос.УстановитьПараметр("ВидыКонтактнойИнформациии", ВидыКонтактнойИнформациии);
	
	Результат = Запрос.ВыполнитьПакет();
	
	////////////////////////////////////////////////////////////////////////////////
	
	ДанныеДокумента.УчетнаяПолитика = 				Результат[3].Выгрузить();
	ДанныеДокумента.РасширенноеОписаниеТоваров = 	Результат[4].Выгрузить();
	ДанныеДокумента.ШтрихКоды = 					Результат[5].Выгрузить();
	ДанныеДокумента.ДанныеЧека = 					Результат[6].Выгрузить();
	ДанныеДокумента.ИнформацияОПродавце =			Результат[7].Выгрузить();
		
	Возврат ДанныеДокумента;
		
КонецФункции

#КонецОбласти

#Область ТекстыЗапросов

// Текст запроса для электронного чека и расширенного описания номенклатуры
//
Функция ТекстЗапросаТоваровДокумента(ДокументСсылка) Экспорт
		
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		ТекстЗапросаПоДокументу = ТекстЗапросаЗаказКлиента();
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда	
		ТекстЗапросаПоДокументу = ТекстЗапросаСчетНаОплатуКлиенту();
	КонецЕсли; 
	
	ТекстОкончание = 
	
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ПрименяетсяУСН КАК ПрименяетсяУСН,
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ПрименяетсяУСНДоходыМинусРасходы КАК ПрименяетсяУСНДоходыМинусРасходы
	|ПОМЕСТИТЬ УчетнаяПолитика
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(УчетнаяПолитика.ПрименяетсяУСН, ЛОЖЬ) КАК ПрименяетсяУСН,
	|	ЕСТЬNULL(УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы, ЛОЖЬ) КАК ПрименяетсяУСНДоходыМинусРасходы,
	|	ЕСТЬNULL(ОснованияПлатежа.НалогообложениеНДС, НЕОПРЕДЕЛЕНО) КАК НалогообложениеНДС
	|ИЗ
	|	ОснованияПлатежа КАК ОснованияПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитика КАК УчетнаяПолитика
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.Номенклатура.НаименованиеПолное = """"
	|				ТОГДА ТаблицаНоменклатуры.Номенклатура.Наименование
	|			ИНАЧЕ ТаблицаНоменклатуры.Номенклатура.НаименованиеПолное
	|		КОНЕЦ, """") КАК Номенклатура,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.Характеристика.НаименованиеПолное, """") КАК Характеристика,
	|	ТаблицаНоменклатуры.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.Количество = 0
	|				ТОГДА ТаблицаНоменклатуры.Сумма
	|			ИНАЧЕ ТаблицаНоменклатуры.Сумма / ТаблицаНоменклатуры.Количество
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ТаблицаНоменклатуры.Сумма КАК Сумма,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.СтавкаНДС) КАК СтавкаНДС,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.Валюта) КАК Валюта,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.Номенклатура.Наименование, """") КАК НаименованиеПолное,
	|	ТаблицаНоменклатуры.Номенклатура.Артикул КАК Артикул,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.Номенклатура.ВидНоменклатуры) КАК ВидНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.Номенклатура.Родитель) КАК Родитель,
	|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|ГДЕ
	|	НЕ &ТолькоДанныеЧека
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ТаблицаНоменклатуры.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И ТаблицаНоменклатуры.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|			И ТаблицаНоменклатуры.Упаковка = ШтрихкодыНоменклатуры.Упаковка
	|ГДЕ
	|	НЕ &ТолькоДанныеЧека
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.Номенклатура.НаименованиеПолное = """"
	|				ТОГДА ТаблицаНоменклатуры.Номенклатура.Наименование
	|			ИНАЧЕ ТаблицаНоменклатуры.Номенклатура.НаименованиеПолное
	|		КОНЕЦ, """") КАК Номенклатура,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.Характеристика.НаименованиеПолное, """") КАК Характеристика,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.Упаковка.Наименование, """") КАК Упаковка,
	|	ТаблицаНоменклатуры.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.Количество = 0
	|				ТОГДА ТаблицаНоменклатуры.Сумма
	|			ИНАЧЕ ТаблицаНоменклатуры.Сумма / ТаблицаНоменклатуры.Количество
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииКонтактнаяИнформация.Ссылка.ИНН КАК ИНН,
	|	ОрганизацииКонтактнаяИнформация.Ссылка.КПП КАК КПП,
	|	ОрганизацииКонтактнаяИнформация.Ссылка.НаименованиеПолное КАК НаименованиеПолное,
	|	ОрганизацииКонтактнаяИнформация.Вид КАК Вид,
	|	ОрганизацииКонтактнаяИнформация.Представление КАК Представление,
	|	ОрганизацииКонтактнаяИнформация.НомерТелефона КАК НомерТелефона
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	НЕ &ТолькоДанныеЧека
	|	И ОрганизацииКонтактнаяИнформация.Ссылка = &Организация
	|	И ОрганизацииКонтактнаяИнформация.Вид В(&ВидыКонтактнойИнформациии)";
	
	Возврат ТекстЗапросаПоДокументу + " ; " + ТекстОкончание;
		
КонецФункции

// Текст запроса к счету
//
Функция ТекстЗапросаСчетНаОплатуКлиенту()
	
	Возврат
		
	"ВЫБРАТЬ
	|	СчетНаОплатуКлиенту.ДокументОснование КАК Основание,
	|	СчетНаОплатуКлиенту.ДокументОснование.НалогообложениеНДС КАК НалогообложениеНДС,	
	|	Неопределено КАК ПризнакСпособаРасчетаПредоплата
	|ПОМЕСТИТЬ ОснованияПлатежа
	|ИЗ
	|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
	|ГДЕ
	|	СчетНаОплатуКлиенту.Ссылка = &Ссылка" 
	
	+ " ; " + ТекстЗапросаОснованиеСчетаНаОплату();
	
КонецФункции

// Текст запроса к товарам заказа
//
Функция ТекстЗапросаЗаказКлиента()
	
	Возврат 
	
	"ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК Основание,
	|	ЗаказКлиента.НалогообложениеНДС КАК НалогообложениеНДС	
	|ПОМЕСТИТЬ ОснованияПлатежа
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Ссылка = &Ссылка	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки 			КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура 			КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика 		КАК Характеристика,
	|	ТаблицаДокумента.Упаковка 				КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок 	КАК Количество,
	|	ТаблицаДокумента.Цена 					КАК Цена,
	|	ТаблицаДокумента.СтавкаНДС 				КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС 				КАК Сумма,	
	|	ТаблицаДокумента.Ссылка.Валюта 			КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС	КАК ЦенаВключаетНДС	
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И НЕ ТаблицаДокумента.Отменено
	|	И (ТаблицаДокумента.Номенклатура.ВидНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ИЛИ ТаблицаДокумента.Ссылка.ТребуетсяЗалогЗаТару)";
		
КонецФункции

// Текст запроса к основаниям счета
//
Функция ТекстЗапросаОснованиеСчетаНаОплату()
	
	Возврат
		
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                            КАК Упаковка,
	|	ТаблицаДокумента.Количество             КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.АктВыполненныхРабот.Услуги КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                            КАК Упаковка,
	|	ТаблицаДокумента.Количество             КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|	
	|ОБЪЕДИНИТЬ ВСЕ	
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Номенклатура.ВидНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ ТаблицаДокумента.Ссылка.ТребуетсяЗалогЗаТару
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ВыкупВозвратнойТарыКлиентом.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ВыкупВозвратнойТарыУПоставщика.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ОтчетКомиссионера.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ГДЕ
	|	&ОплатаОтКлиента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ОтчетКомиссионераОСписании.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ГДЕ
	|	&ОплатаОтКлиента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ГДЕ
	|	(ТаблицаДокумента.Номенклатура.ВидНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ ТаблицаДокумента.Ссылка.ТребуетсяЗалогЗаТару)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Содержание             КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО                            КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                            КАК Упаковка,
	|	ТаблицаДокумента.Количество             КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Содержание             КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО                            КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                            КАК Упаковка,
	|	ТаблицаДокумента.Количество             КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.Доходы КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ГДЕ
	|	НЕ ТаблицаДокумента.Отменено
	|	И (ТаблицаДокумента.Номенклатура.ВидНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ ТаблицаДокумента.Ссылка.ТребуетсяЗалогЗаТару)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ГДЕ
	|	НЕ ТаблицаДокумента.Отменено
	|	И (ТаблицаДокумента.Номенклатура.ВидНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ ТаблицаДокумента.Ссылка.ТребуетсяЗалогЗаТару)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ГДЕ
	|	НЕ &ОплатаОтКлиента
	|	И (ТаблицаДокумента.Номенклатура.ВидНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ ТаблицаДокумента.Ссылка.ТребуетсяЗалогЗаТару)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки	        КАК НомерСтроки,	
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта          КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК ТаблицаДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияПлатежа
	|	ПО ОснованияПлатежа.Основание = ТаблицаДокумента.Ссылка
	|
	|ГДЕ
	|	&ОплатаОтКлиента
	|	И (ТаблицаДокумента.Номенклатура.ВидНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ ТаблицаДокумента.Ссылка.ТребуетсяЗалогЗаТару)";

КонецФункции

#КонецОбласти

#КонецОбласти

