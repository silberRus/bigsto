#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//  ДокументОбъект - если указан, то печать отчета по документу
//
Процедура СформироватьОтчет(Знач ПараметрыОтчета, АдресХранилища) Экспорт
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ДокументРезультат.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.АвтоМасштаб			= Истина;
	
	Макет = Отчеты.АнализРаспределенияНДС.ПолучитьМакет("Таблица");
	
	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");
	
	Заголовок = НСтр("ru = 'Анализ распределения сумм НДС'");
	
	РеквизитыДокументаРаспределения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.ДокументРаспределения, "Организация, Дата");
	ДокументРаспределенияЗаполнен = ЗначениеЗаполнено(ПараметрыОтчета.ДокументРаспределения);
	
	НачалоПериода = ?(НЕ ДокументРаспределенияЗаполнен, НачалоПериода, НачалоКвартала(РеквизитыДокументаРаспределения.Дата));
	КонецПериода  = ?(НЕ ДокументРаспределенияЗаполнен, КонецПериода, КонецКвартала(РеквизитыДокументаРаспределения.Дата));
	
	Период = ПредставлениеПериода(НачалоДня(ПараметрыОтчета.НачалоПериода), КонецДня(ПараметрыОтчета.КонецПериода));
	ОбластьЗаголовок.Параметры.Период = СтрЗаменить(НСтр("ru = 'Период: &1'"), "&1", Период);
	
	СведенияОбОрганизации	= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
		?(ДокументРаспределенияЗаполнен, РеквизитыДокументаРаспределения.Организация, ПараметрыОтчета.Организация),
		ПараметрыОтчета.КонецПериода);
		
	ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = ПредставлениеОрганизации;
	
	ОбластьЗаголовок.Параметры.Заголовок	= Заголовок;
	
	ОбластьЗаголовок.Параметры.ИННОрганизации	= СокрЛП(СведенияОбОрганизации.ИНН)
												+ ?(ЗначениеЗаполнено(СведенияОбОрганизации.КПП)," / ", "")
												+ СокрЛП(СведенияОбОрганизации.КПП);
	
	ДокументРезультат.Вывести(ОбластьЗаголовок);
	
	ВыводитьОбщийЭкспорт = 
		НЕ УчетНДСУТ.УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту(ПараметрыОтчета.НачалоПериода)
		И ПолучитьФункциональнуюОпцию("ИспользоватьНДС0");
		
	ВыводитьЭкспортНесырьевыхТоваров = 
		УчетНДСУТ.УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту(ПараметрыОтчета.КонецПериода)
		И ПолучитьФункциональнуюОпцию("ИспользоватьПродажиНаЭкспортНесырьевыхТоваров");
		
	ВыводитьЭкспортСырьевыхТоваровУслуг = 
		УчетНДСУТ.УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту(ПараметрыОтчета.КонецПериода)
		И ПолучитьФункциональнуюОпцию("ИспользоватьПродажиНаЭкспортСырьевыхТоваровУслуг");
		
	ПараметрыОтчета.Вставить("ВыводитьОбщийЭкспорт",                ВыводитьОбщийЭкспорт);
	ПараметрыОтчета.Вставить("ВыводитьЭкспортНесырьевыхТоваров",    ВыводитьЭкспортНесырьевыхТоваров);
	ПараметрыОтчета.Вставить("ВыводитьЭкспортСырьевыхТоваровУслуг", ВыводитьЭкспортСырьевыхТоваровУслуг);
	
	
	ВыборкаПериодыБазы = ПериодыБазы(ПараметрыОтчета);
	Пока ВыборкаПериодыБазы.Следующий() Цикл
		
		ПериодБазы = ВыборкаПериодыБазы.ПериодБазы; 
		
		ВывестиВОтчетДанныеПоБазеРаспределения(ПериодБазы, ПараметрыОтчета, ДокументРезультат, Макет);
		
		ВывестиВОтчетДанныеПоРаспределениюКосвенныхРасходов(ПериодБазы, ПараметрыОтчета, ДокументРезультат, Макет);
	КонецЦикла;
	
	
	ПоместитьВоВременноеХранилище(ДокументРезультат, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПериодыБазы(ПараметрыОтчета)
	
	Запрос = Новый Запрос;
	
	Если НЕ ПараметрыОтчета.ВыручкаПоДокументам Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР 
		|		КОГДА ПартииПрочихРасходов.ПериодБазы <> ДАТАВРЕМЯ(1,1,1)
		|			ТОГДА КОНЕЦПЕРИОДА(ПартииПрочихРасходов.ПериодБазы, МЕСЯЦ)
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ПартииПрочихРасходов.Период, МЕСЯЦ)
		|	КОНЕЦ КАК ПериодБазы
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
		|ГДЕ
		|	ПартииПрочихРасходов.Организация = &Организация
		|	И ПартииПрочихРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ПартииПрочихРасходов.Регистратор ССЫЛКА Документ.РаспределениеНДС
		|";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР 
		|		КОГДА ПартииПрочихРасходов.ПериодБазы <> ДАТАВРЕМЯ(1,1,1)
		|			ТОГДА КОНЕЦПЕРИОДА(ПартииПрочихРасходов.ПериодБазы, МЕСЯЦ)
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ПартииПрочихРасходов.Период, МЕСЯЦ)
		|	КОНЕЦ КАК ПериодБазы
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
		|ГДЕ
		|	ПартииПрочихРасходов.Регистратор = &Ссылка
		|";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", 	ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", 	ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("Ссылка", 		ПараметрыОтчета.ДокументРаспределения);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

// Выполняет запрос и формирует таблицу соответствующую базе распределения
// косвенных расходов
//
Процедура ВывестиВОтчетДанныеПоБазеРаспределения(ПериодБазы, ПараметрыОтчета, ДокументРезультат, Макет)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РаспределениеНДС.Ссылка КАК ДокументРаспределения,
	|	СУММА(РаспределениеНДС.ВыручкаЕНВД) КАК ВыручкаЕНВД,
	|	СУММА(РаспределениеНДС.ВыручкаНеНДС) КАК ВыручкаНеНДС,
	|	СУММА(РаспределениеНДС.ВыручкаНДС0) КАК ВыручкаНДС0,
	|	СУММА(РаспределениеНДС.ВыручкаНДС0СырьевыеТоварыУслуги) КАК ВыручкаНДС0СырьевыеТоварыУслуги,
	|	СУММА(РаспределениеНДС.ВыручкаНДС0НесырьевыеТовары) КАК ВыручкаНДС0НесырьевыеТовары,
	|	СУММА(РаспределениеНДС.ВыручкаНДС) КАК ВыручкаНДС,
	|	СУММА(РаспределениеНДС.ВыручкаЕНВД) 
	|		+ СУММА(РаспределениеНДС.ВыручкаНеНДС) 
	|		+ СУММА(РаспределениеНДС.ВыручкаНДС0СырьевыеТоварыУслуги)
	|		+ СУММА(РаспределениеНДС.ВыручкаНДС0НесырьевыеТовары)
	|		+ СУММА(РаспределениеНДС.ВыручкаНДС) КАК ВсегоВыручка
	|ИЗ
	|	Документ.РаспределениеНДС КАК РаспределениеНДС
	|ГДЕ
	|	РаспределениеНДС.Организация = &Организация
	|	И РаспределениеНДС.Проведен
	|	И КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ) = &ПериодБазы
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспределениеНДС.Ссылка";
		
	
	Запрос.УстановитьПараметр("Организация", 	ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ПериодБазы", 	ПериодБазы);
	
	Результат = Запрос.Выполнить().Выбрать();	
	
	СтруктураПараметровВывода = Новый Структура;
	СтруктураПараметровВывода.Вставить("ОбщийЭкспорт",                ПараметрыОтчета.ВыводитьОбщийЭкспорт);
	СтруктураПараметровВывода.Вставить("ЭкспортНесырьевыхТоваров",    ПараметрыОтчета.ВыводитьЭкспортНесырьевыхТоваров);
	СтруктураПараметровВывода.Вставить("ЭкспортСырьевыхТоваровУслуг", ПараметрыОтчета.ВыводитьЭкспортСырьевыхТоваровУслуг);
	
	СтруктураДопОбласей = Новый Структура;
	СтруктураДопОбласей.Вставить("ПараметрыБазыРаспределения");
	СтруктураДопОбласей.Вставить("СтрокаБазыРаспределения");
	
	Для каждого ДопОбласть Из СтруктураДопОбласей Цикл
		МассивДопОбластейШапки = Новый Массив;
		Для каждого ПараметрВывода Из СтруктураПараметровВывода Цикл
			Если НЕ ПараметрВывода.Значение Тогда
				Продолжить;
			КонецЕсли;
			МассивДопОбластейШапки.Добавить(Макет.ПолучитьОбласть(ДопОбласть.Ключ + "|" + ПараметрВывода.Ключ));
		КонецЦикла;
		СтруктураДопОбласей[ДопОбласть.Ключ] = МассивДопОбластейШапки;
	КонецЦикла;

	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ПараметрыБазыРаспределения|Основное");
	ПериодБазыПредставление = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(НачалоКвартала(ПериодБазы), ПериодБазы, Истина);
	ОбластьШапкаТаблицы.Параметры.ПериодБазы = СтрЗаменить(ПериодБазыПредставление, НСтр("ru = 'квартал'"), НСтр("ru = 'квартала'"));
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	Для каждого Область Из СтруктураДопОбласей["ПараметрыБазыРаспределения"] Цикл
		ДокументРезультат.Присоединить(Область);
	КонецЦикла;
	
	Результат.Сбросить();
	Пока Результат.Следующий() Цикл
		
		ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("СтрокаБазыРаспределения|Основное");
		ОбластьШапкаТаблицы.Параметры.Заполнить(Результат);
		ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
		
		Для каждого Область Из СтруктураДопОбласей["СтрокаБазыРаспределения"] Цикл
			Область.Параметры.Заполнить(Результат);
			ДокументРезультат.Присоединить(Область);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Выполняет запрос к регистру НДСПоКосвеннымРасходам
// и выбирает информацию по косвенным расходам текущего периода, которые были
// распределены на соответствующие ставки реализации
//
Процедура ВывестиВОтчетДанныеПоРаспределениюКосвенныхРасходов(ПериодБазы, ПараметрыОтчета, ДокументРезультат, Макет)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПартииПрочихРасходов.Регистратор КАК ДокументРаспределения,
	|	ЕСТЬNULL(СчетФактураПолученный.Ссылка,СчетФактураПолученныйНА.Ссылка) КАК СчетФактураПолученный,
	|	ПартииПрочихРасходов.ДокументПоступленияРасходов КАК ДокументПоступления,
	|	СУММА(ПартииПрочихРасходов.СтоимостьРегл) КАК ВсегоСумма,
	|	СУММА(ПартииПрочихРасходов.НДСРегл) КАК ВсегоНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|				ТОГДА ПартииПрочихРасходов.СтоимостьРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БезНДССумма,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|				ТОГДА ПартииПрочихРасходов.НДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БезНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|				ТОГДА ПартииПрочихРасходов.СтоимостьРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕНВДСумма,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|				ТОГДА ПартииПрочихРасходов.НДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕНВДНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ТОГДА ПартииПрочихРасходов.СтоимостьРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ТОГДА ПартииПрочихРасходов.НДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|				ТОГДА ПартииПрочихРасходов.СтоимостьРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС0Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|				ТОГДА ПартииПрочихРасходов.НДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС0,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|				ТОГДА ПартииПрочихРасходов.СтоимостьРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС0СуммаНесырьевыеТовары,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|				ТОГДА ПартииПрочихРасходов.НДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС0НесырьевыеТовары,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|				ТОГДА ПартииПрочихРасходов.СтоимостьРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС0СуммаСырьевыеТоварыУслуги,
	|	СУММА(ВЫБОР
	|			КОГДА ПартииПрочихРасходов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|				ТОГДА ПартииПрочихРасходов.НДСРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС0СырьевыеТоварыУслуги
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ПО 
	|			ПартииПрочихРасходов.ДокументПоступленияРасходов = СчетФактураПолученный.ДокументОснование
	|			И СчетФактураПолученный.Ссылка.Проведен
	|			И НЕ СчетФактураПолученный.Ссылка.Исправление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК СчетФактураПолученныйНА
	|		ПО 
	|			ПартииПрочихРасходов.ДокументПоступленияРасходов = СчетФактураПолученныйНА.ДокументОснование
	|			И СчетФактураПолученныйНА.Ссылка.Проведен
	|			И НЕ СчетФактураПолученныйНА.Ссылка.Исправление
	|ГДЕ
	|	ПартииПрочихРасходов.Регистратор ССЫЛКА Документ.РаспределениеНДС
	|	И ПартииПрочихРасходов.Организация = &Организация
	|	И ПартииПрочихРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ВЫБОР 
	|		КОГДА ПартииПрочихРасходов.ПериодБазы <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА КОНЕЦПЕРИОДА(ПартииПрочихРасходов.ПериодБазы, МЕСЯЦ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ПартииПрочихРасходов.Период, МЕСЯЦ)
	|	КОНЕЦ = &ПериодБазы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииПрочихРасходов.Регистратор,
	|	СчетФактураПолученный.Ссылка,
	|	СчетФактураПолученныйНА.Ссылка,
	|	ПартииПрочихРасходов.ДокументПоступленияРасходов
	|ИТОГИ ПО
	|	ОБЩИЕ,
	|	ДокументРаспределения
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Организация", 	ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", 	ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("ПериодБазы", 	ПериодБазы);
	Запрос.УстановитьПараметр("КонецПериода",  	КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	
	ВыборкаЗатраты = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаЗатраты.Количество() > 0 Тогда
		
		ОбластьШапка= Макет.ПолучитьОбласть("ШапкаТаблицыЗатраты|Основное");
		ОбластьДокументОсновное = Макет.ПолучитьОбласть("СтрокаДокументРаспределенияЗатраты|Основное");
		ОбластьСтрокаОсновное   = Макет.ПолучитьОбласть("СтрокаЗатраты|Основное");
		ОбластьИтогиОсновное    = Макет.ПолучитьОбласть("ИтогиЗатраты|Основное");
		
		СтруктураПараметровВывода = Новый Структура;
		СтруктураПараметровВывода.Вставить("ОбщийЭкспорт",                ПараметрыОтчета.ВыводитьОбщийЭкспорт);
		СтруктураПараметровВывода.Вставить("ЭкспортНесырьевыхТоваров",    ПараметрыОтчета.ВыводитьЭкспортНесырьевыхТоваров);
		СтруктураПараметровВывода.Вставить("ЭкспортСырьевыхТоваровУслуг", ПараметрыОтчета.ВыводитьЭкспортСырьевыхТоваровУслуг);
		
		СтруктураДопОбласей = Новый Структура;
		СтруктураДопОбласей.Вставить("ШапкаТаблицыЗатраты");
		СтруктураДопОбласей.Вставить("СтрокаДокументРаспределенияЗатраты");
		СтруктураДопОбласей.Вставить("СтрокаЗатраты");
		СтруктураДопОбласей.Вставить("ИтогиЗатраты");
		
		Для каждого ДопОбласть Из СтруктураДопОбласей Цикл
			МассивДопОбластейШапки = Новый Массив;
			Для каждого ПараметрВывода Из СтруктураПараметровВывода Цикл
				Если НЕ ПараметрВывода.Значение Тогда
					Продолжить;
				КонецЕсли;
				МассивДопОбластейШапки.Добавить(Макет.ПолучитьОбласть(ДопОбласть.Ключ + "|" + ПараметрВывода.Ключ));
			КонецЦикла;
			СтруктураДопОбласей[ДопОбласть.Ключ] = МассивДопОбластейШапки;
		КонецЦикла;
		
		ОбластьШапка.Параметры.НаименованиеСекции = НСтр("ru = 'Результаты распределения НДС'");		
		ДокументРезультат.Вывести(ОбластьШапка);
		
		Для каждого Область Из СтруктураДопОбласей["ШапкаТаблицыЗатраты"] Цикл
			ДокументРезультат.Присоединить(Область);
		КонецЦикла;
		
		Пока ВыборкаЗатраты.Следующий() Цикл
			
			ВыборкаДокументы = ВыборкаЗатраты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДокументы.Следующий() Цикл
				
				ОбластьДокументОсновное.Параметры.Заполнить(ВыборкаДокументы);
				ДокументРезультат.Вывести(ОбластьДокументОсновное);
				
				Для каждого Область Из СтруктураДопОбласей["СтрокаДокументРаспределенияЗатраты"] Цикл
					Область.Параметры.Заполнить(ВыборкаДокументы);
					ДокументРезультат.Присоединить(Область);
				КонецЦикла;
					
				ВыборкаСтроки = ВыборкаДокументы.Выбрать();
				Пока ВыборкаСтроки.Следующий() Цикл
					
					ОбластьСтрокаОсновное.Параметры.Заполнить(ВыборкаСтроки);
					ДокументРезультат.Вывести(ОбластьСтрокаОсновное);
					
					Для каждого Область Из СтруктураДопОбласей["СтрокаЗатраты"] Цикл
						Область.Параметры.Заполнить(ВыборкаСтроки);
						ДокументРезультат.Присоединить(Область);
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ОбластьИтогиОсновное.Параметры.Заполнить(ВыборкаЗатраты);
			ДокументРезультат.Вывести(ОбластьИтогиОсновное);
			
			Для каждого Область Из СтруктураДопОбласей["ИтогиЗатраты"] Цикл
				Область.Параметры.Заполнить(ВыборкаЗатраты);
				ДокументРезультат.Присоединить(Область);
			КонецЦикла;
			
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли
