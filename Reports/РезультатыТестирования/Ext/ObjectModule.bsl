#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПутьКФайлу = ПолучитьИмяВременногоФайла("xml");
	
	Если Не ЗначениеЗаполнено(АдресХранилища) Тогда
		Возврат;
	КонецЕсли;
		
	ПользовательскиеНастройкиМодифицированы = Ложь;
	
	СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;
		
	Источник = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
	Источник.Имя = "ЛокальнаяБаза";
	Источник.СтрокаСоединения = "";
	Источник.ТипИсточникаДанных = "Local";
	
	НастройкиКомпоновкиДанных = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ВнешниеНаборыДанных = Новый Структура();
	
	ФайлОтчета = ПолучитьИзВременногоХранилища(АдресХранилища);
	ФайлОтчета.Записать(ПутьКФайлу);
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ПутьКФайлу);
	
	Пока Чтение.Прочитать() Цикл
		Если ЗначениеЗаполнено(Чтение.Значение) Тогда
			Если Чтение.КонтекстПространствИмен.Глубина = 4 Тогда // это объект метаданных, формируем по нему группировку и таблицу.
				Попытка
					ОбъектМетаданных = ОбщегоНазначения.ЗначениеИзСтрокиXML(Чтение.Значение);
					МассивСтрокОбъекта = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ОбъектМетаданных, ".");
					ТипОбъекта = МассивСтрокОбъекта.Получить(0);
					ИмяОбъекта = МассивСтрокОбъекта.Получить(1);
				Исключение
					ОбъектМетаданных = Неопределено;
					Продолжить;
				КонецПопытки;
				
				Если СхемаКомпоновкиДанных.НаборыДанных.Найти(ИмяОбъекта) <> Неопределено Тогда // уже добавлен в схему
					НаборДанных = СхемаКомпоновкиДанных.НаборыДанных[ИмяОбъекта];
					Продолжить;
				КонецЕсли;
				
				// каждый объект метаданных это новый отдельный набор данных для СКД.
				НаборДанных = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхОбъектСхемыКомпоновкиДанных"));
				НаборДанных.Имя = ИмяОбъекта;
				НаборДанных.ИмяОбъекта = ИмяОбъекта;
				НаборДанных.ИсточникДанных = "ЛокальнаяБаза";

				// группировка таблиц по объектам метаданных: один объект - одна таблица.
				Таблица = НастройкиКомпоновкиДанных.Структура.Добавить(Тип("ТаблицаКомпоновкиДанных"));
				Таблица.Имя = ИмяОбъекта;
				
				НастройкиКомпоновкиДанных.ПараметрыВывода.УстановитьЗначениеПараметра("АвтоПозицияРесурсов", АвтоПозицияРесурсовКомпоновкиДанных.НеИспользовать);
				ЗаголовокТаблицы = Таблица.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок"));
				Если ЗаголовокТаблицы <> Неопределено Тогда
					ЗаголовокТаблицы.Значение = "Таблица: " + ОбъектМетаданных;
					ЗаголовокТаблицы.Использование = Истина;
				КонецЕсли;
				
				Строки = Таблица.Строки.Добавить();
				Строки.ПараметрыВывода.УстановитьЗначениеПараметра("АвтоПозицияРесурсов", АвтоПозицияРесурсовКомпоновкиДанных.НеИспользовать);
				
				ПолеГруппировкаРегистратор = Строки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
				ПолеГруппировкаРегистратор.Поле = Новый ПолеКомпоновкиДанных(ИмяОбъекта + "_Регистратор");
				ПолеГруппировкаРегистратор.Использование = Истина;
				
				ГруппировкаРегистратор = Строки.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
				ГруппировкаРегистратор.Поле = Новый ПолеКомпоновкиДанных(ИмяОбъекта + "_Регистратор");
				ГруппировкаРегистратор.Использование = Истина;
				
				ГруппировкаДельта = Строки.Структура.Добавить();
				
				ПолеВыбораРегистратор = ГруппировкаДельта.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
				ПолеВыбораРегистратор.Поле = Новый ПолеКомпоновкиДанных(ИмяОбъекта + "_Регистратор");
				ПолеВыбораРегистратор.Использование = Истина;
				
				ПолеГруппировкиДельта = ГруппировкаДельта.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
				ПолеГруппировкиДельта.Поле = Новый ПолеКомпоновкиДанных(ИмяОбъекта + "_Регистратор");
				ПолеГруппировкиДельта.Использование = Истина;
				// поля группировки определим позже
				
				ДетальныеЗаписи = ГруппировкаДельта.Структура.Добавить();
				ДетальныеЗаписи.Имя = ГруппировкаДельта.Имя + "_ДетальныеЗаписи";
				ДетальныеЗаписи.Использование = Истина;
				// поля группировки определим позже
				
			ИначеЕсли Чтение.КонтекстПространствИмен.Глубина = 5 И ИмяОбъекта <> Неопределено Тогда // это записи, выводим их в таблицу.
				
				Попытка
					Набор = ОбщегоНазначения.ЗначениеИзСтрокиXML(Чтение.Значение);
				Исключение
					Продолжить;
				КонецПопытки;
				Для Каждого Колонка Из Набор.Колонки Цикл
					
					ИмяПоля = "" + ИмяОбъекта + "_" + Колонка.Имя;
					Если НаборДанных.Поля.Найти(ИмяПоля) <> Неопределено Тогда // уже есть в схеме, добавлять не надо
						НаборУжеДобавлен = Истина;
						Продолжить;
					Иначе
						НаборУжеДобавлен = Ложь;
					КонецЕсли;
					
					Поле             = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
					Поле.Заголовок   = Колонка.Имя;
					Поле.Поле        = Колонка.Имя;
					Поле.ПутьКДанным = ИмяПоля;
					Поле.ТипЗначения = Колонка.ТипЗначения;
					
					МаксимальнаяШирина = Поле.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("МаксимальнаяШирина"));
					Если МаксимальнаяШирина <> Неопределено Тогда
						МаксимальнаяШирина.Значение = 15;
						МаксимальнаяШирина.Использование = Истина;
					КонецЕсли;
					
					Если Колонка.ТипЗначения.СодержитТип(Тип("Число")) Тогда // создаем вычисляемое поле и рассчитываем дельту старых и новых записей.
						
						ВычисляемоеПоле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
						ВычисляемоеПоле.ПутьКДанным = ИмяОбъекта + "_Вычисляемое_" + Колонка.Имя;
						Шаблон = "ВЫБОР КОГДА %ОбъектМетаданных%_ТипЗаписиТестирования = ""ЗаписиДоРасчета"" ТОГДА -%ИмяПоля% ИНАЧЕ %ИмяПоля% КОНЕЦ";
						ВычисляемоеПоле.Выражение = СтрЗаменить(Шаблон, "%ИмяПоля%", ИмяПоля);
						ВычисляемоеПоле.Выражение = СтрЗаменить(ВычисляемоеПоле.Выражение, "%ОбъектМетаданных%", ИмяОбъекта);
						ВычисляемоеПоле.ТипЗначения = Колонка.ТипЗначения;
						ВычисляемоеПоле.Заголовок = Колонка.Имя;
						ВычисляемоеПоле.Оформление.УстановитьЗначениеПараметра("ВыделятьОтрицательные", Истина);
						ВычисляемоеПоле.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 15);
						
						ПолеИтога = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
						ПолеИтога.ПутьКДанным = ВычисляемоеПоле.ПутьКДанным;
						ПолеИтога.Выражение = "СУММА(" + ВычисляемоеПоле.ПутьКДанным + ")";
						ПолеИтога.Группировки.Добавить(ИмяОбъекта + "_Регистратор");
						
						ПолеЗначения = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
						ПолеЗначения.ПутьКДанным = ВычисляемоеПоле.ПутьКДанным;
						ПолеЗначения.Выражение = ИмяПоля;
						ПолеЗначения.Группировки.Добавить(ИмяОбъекта + "_ТипЗаписиТестирования");
						
						ИмяПоля = ВычисляемоеПоле.ПутьКДанным;
						
						ПолеГруппировкиРегистратор = Строки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
						ПолеГруппировкиРегистратор.Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
						
						ПолеГруппировкиДельта = ГруппировкаДельта.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
						ПолеГруппировкиДельта.Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
					Иначе
						Если Колонка.Имя <> "ТипЗаписиТестирования" И Колонка.Имя <> "Регистратор" Тогда // добавим в группировку по дельте
							ПолеГруппировкиДельта = ГруппировкаДельта.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
							ПолеГруппировкиДельта.Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
							ПолеГруппировкиДельта.Использование = Истина;

							ПолеГруппировкиДельта = ГруппировкаДельта.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
							ПолеГруппировкиДельта.Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
							
						КонецЕсли;
						Если Колонка.Имя <> "Регистратор" Тогда // выведем в детальные записи
							ПолеГруппировкиДетальныеЗаписи = ДетальныеЗаписи.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
							ПолеГруппировкиДетальныеЗаписи.Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
							ПолеГруппировкиДетальныеЗаписи.Использование = Истина;
						КонецЕсли;
					КонецЕсли;
					Если Колонка.Имя <> "Регистратор" И Колонка.Имя <> "ИмяРегистра" И Колонка.Имя <> "ПолноеИмяРегистра" Тогда // добавим в группировку по дельте
						ПолеГруппировкиДетальныеЗаписи = ДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
						ПолеГруппировкиДетальныеЗаписи.Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
					КонецЕсли;
				КонецЦикла;
				Если НаборУжеДобавлен Тогда
					Для Каждого Строка Из Набор Цикл
						СтрокаДанных = ВнешниеНаборыДанных[ИмяОбъекта].Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДанных, Строка);
					КонецЦикла;
				Иначе
					ВнешниеНаборыДанных.Вставить(ИмяОбъекта, Набор);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет, ВнешниеНаборыДанных, ДанныеРасшифровки);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

	Чтение.Закрыть(); // освобождаем файл
	УдалитьФайлы(ПутьКФайлу);
КонецПроцедуры

#КонецОбласти

#КонецЕсли